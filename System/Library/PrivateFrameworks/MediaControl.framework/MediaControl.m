uint64_t sub_24125C034()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD v6[2];

  sub_2412A89E4();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8]();
  sub_2412A8810();
  MEMORY[0x24BDAC7A8]();
  v1 = sub_2412A89F0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241261758(0, &qword_257104808);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5758], v1);
  sub_2412A8804();
  v6[1] = MEMORY[0x24BEE4AF8];
  sub_241262190(&qword_257104810, v0, MEMORY[0x24BEE5698]);
  sub_24126178C(0, &qword_257104818, (void (*)(uint64_t))v0);
  sub_24126183C(&qword_257104820, &qword_257104818, (void (*)(uint64_t))v0);
  sub_2412A8A74();
  result = sub_2412A8A14();
  qword_257106DC8 = result;
  return result;
}

BOOL sub_24125C20C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24125C21C()
{
  return sub_2412A8D68();
}

uint64_t sub_24125C240()
{
  sub_2412A8D5C();
  sub_2412A8D68();
  return sub_2412A8D98();
}

BOOL sub_24125C284(char *a1, char *a2)
{
  return sub_24125C20C(*a1, *a2);
}

uint64_t sub_24125C290()
{
  return sub_24125C240();
}

uint64_t sub_24125C298()
{
  return sub_24125C21C();
}

BOOL static MediaControlService.Errors.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void MediaControlService.Errors.hash(into:)()
{
  sub_2412A8D68();
  OUTLINED_FUNCTION_44();
}

void MediaControlService.Errors.hashValue.getter()
{
  sub_2412A8D5C();
  OUTLINED_FUNCTION_89();
  sub_2412A8D98();
  OUTLINED_FUNCTION_83();
}

void sub_24125C31C()
{
  sub_2412A8D5C();
  OUTLINED_FUNCTION_89();
  sub_2412A8D98();
  OUTLINED_FUNCTION_83();
}

id sub_24125C35C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = (void *)sub_24125C3B4(v0);
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_24125C3B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void (*v8)(uint64_t);
  _QWORD v10[4];
  uint64_t v11;
  unint64_t v12;

  sub_2412A89E4();
  MEMORY[0x24BDAC7A8]();
  sub_2412A8810();
  MEMORY[0x24BDAC7A8]();
  v2 = sub_2412A89F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241261758(0, &qword_257104808);
  v10[2] = v6;
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_2412A8ABC();
  sub_2412A88DC();
  v10[3] = a1;
  sub_2412A8B1C();
  sub_2412A88DC();
  v10[1] = v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5758], v2);
  if (qword_257104560 != -1)
    swift_once();
  v7 = (id)qword_257106DC8;
  sub_2412A8804();
  v11 = MEMORY[0x24BEE4AF8];
  v8 = (void (*)(uint64_t))MEMORY[0x24BEE5688];
  sub_241262190(&qword_257104810, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_24126178C(0, &qword_257104818, v8);
  sub_24126183C(&qword_257104820, &qword_257104818, v8);
  sub_2412A8A74();
  return sub_2412A8A14();
}

uint64_t sub_24125C628(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t sub_24125C638()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  os_unfair_lock_s *v15;

  OUTLINED_FUNCTION_51();
  v1 = v0;
  v2 = *v0;
  sub_2412A8798();
  OUTLINED_FUNCTION_75();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_49();
  v3 = (os_unfair_lock_s *)v0[4];
  OUTLINED_FUNCTION_41();
  os_unfair_lock_lock(v3 + 4);
  OUTLINED_FUNCTION_29();
  if (!v1[5] && *((_BYTE *)v1 + 24) == 1)
  {
    sub_2412A87D4();
    sub_24125C35C();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_67();
    v4 = OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_67();
    v5 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v2;
    swift_retain();
    swift_retain();
    sub_2412A878C();
    sub_2412A8774();
    swift_release();
    swift_release();
    v6 = swift_retain();
    sub_24125C628(v6);
    if (qword_2571045A0 != -1)
      swift_once();
    v7 = OUTLINED_FUNCTION_36();
    __swift_project_value_buffer(v7, (uint64_t)qword_257106DE8);
    swift_retain_n();
    v8 = sub_2412A8750();
    v9 = sub_2412A89D8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_9();
      *(_DWORD *)v10 = 136315394;
      v11 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_82(v11, v12);
      OUTLINED_FUNCTION_46();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2080;
      v13 = sub_2412A8780();
      OUTLINED_FUNCTION_82(v13, v14);
      sub_2412A8A44();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_52(&dword_24125A000, v8, v9, "[%s] Created XPCSession: %s", (uint8_t *)v10);
      OUTLINED_FUNCTION_70();
      OUTLINED_FUNCTION_5();
    }
    swift_release_n();

  }
  v15 = (os_unfair_lock_s *)v1[4];
  OUTLINED_FUNCTION_41();
  os_unfair_lock_unlock(v15 + 4);
  OUTLINED_FUNCTION_29();
  return swift_retain();
}

double sub_24125CAD0@<D0>(uint64_t a1@<X8>)
{
  double result;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24125D0C8();
    swift_release();
  }
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_24125CB48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  os_log_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_2412A87E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_2571045A0 != -1)
      swift_once();
    v7 = sub_2412A875C();
    __swift_project_value_buffer(v7, (uint64_t)qword_257106DE8);
    v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v8(v5, a1, v2);
    v9 = sub_2412A8750();
    v10 = sub_2412A89C0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v26 = a1;
      v12 = v11;
      v24 = (_QWORD *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v28 = v25;
      *(_DWORD *)v12 = 136315394;
      v23 = v9;
      v13 = sub_2412A8DD4();
      v27 = sub_24125FA14(v13, v14, &v28);
      sub_2412A8A44();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2112;
      sub_241262190(&qword_257104868, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6678], MEMORY[0x24BEE6688]);
      swift_allocError();
      v8(v15, (uint64_t)v5, v2);
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v27 = v16;
      sub_2412A8A44();
      v17 = v24;
      *v24 = v16;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v9 = v23;
      _os_log_impl(&dword_24125A000, v23, v10, "[%s] XPCSession cancellationHandler: %@.", (uint8_t *)v12, 0x16u);
      sub_2412601A0();
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v17, -1, -1);
      v18 = v25;
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v18, -1, -1);
      v19 = v12;
      a1 = v26;
      MEMORY[0x242691FB8](v19, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }

    sub_241262190(&qword_257104868, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6678], MEMORY[0x24BEE6688]);
    v20 = (void *)swift_allocError();
    v8(v21, a1, v2);
    sub_24125D754();

    return swift_release();
  }
  return result;
}

void MediaControlService.__allocating_init(messageHandler:interruptionHandler:)()
{
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_25();
  MediaControlService.init(messageHandler:interruptionHandler:)();
  OUTLINED_FUNCTION_48();
}

void MediaControlService.init(messageHandler:interruptionHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_65();
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 0;
  sub_24125CF3C();
  v5 = OUTLINED_FUNCTION_25();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 40) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 72) = v3;
  sub_24125CFB8(0);
  v6 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  sub_24125CFB8(v6);
  OUTLINED_FUNCTION_48();
}

void sub_24125CF3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571045B8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_2412A8B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571045B8);
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_241262124(a1, &qword_2571047F8, (uint64_t)&unk_251157518, MEMORY[0x24BEE4D40]);
}

uint64_t sub_24125CFB8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_24125CFC8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;

  v1 = *(os_unfair_lock_s **)(v0 + 32);
  OUTLINED_FUNCTION_88();
  os_unfair_lock_lock(v1 + 4);
  swift_release();
  *(_BYTE *)(v0 + 24) = 1;
  v2 = *(os_unfair_lock_s **)(v0 + 32);
  OUTLINED_FUNCTION_88();
  os_unfair_lock_unlock(v2 + 4);
  return swift_release();
}

void MediaControlService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  sub_24125CFB8(v1);
  v2 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  sub_24125CFB8(v2);
  if (*(_QWORD *)(v0 + 40))
  {
    OUTLINED_FUNCTION_41();
    sub_2412A87BC();
    OUTLINED_FUNCTION_29();
  }

  swift_release();
  swift_release();
  sub_24125CFB8(*(_QWORD *)(v0 + 48));
  sub_24125CFB8(*(_QWORD *)(v0 + 64));
  OUTLINED_FUNCTION_44();
}

uint64_t MediaControlService.__deallocating_deinit()
{
  MediaControlService.deinit();
  return swift_deallocClassInstance();
}

void sub_24125D0C8()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  void (*v20)(_QWORD *);
  uint64_t v21;
  _QWORD v22[37];
  _QWORD v23[39];
  uint64_t v24[39];

  OUTLINED_FUNCTION_51();
  v2 = v0;
  v3 = sub_2412A881C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_50();
  *v1 = sub_24125C35C();
  (*(void (**)(id *, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE5610], v3);
  v5 = sub_2412A8828();
  (*(void (**)(id *, uint64_t))(v4 + 8))(v1, v3);
  if ((v5 & 1) != 0)
  {
    sub_241260394(0, (unint64_t *)&qword_257104618, (uint64_t (*)(void))sub_241260404, (uint64_t (*)(void))sub_241260440, (uint64_t)&type metadata for IPCClientMessage);
    sub_241261878();
    sub_2412A87EC();
    memcpy(v23, v24, 0x12AuLL);
    if (qword_2571045A0 != -1)
      swift_once();
    v13 = OUTLINED_FUNCTION_36();
    __swift_project_value_buffer(v13, (uint64_t)qword_257106DE8);
    OUTLINED_FUNCTION_26();
    OUTLINED_FUNCTION_26();
    OUTLINED_FUNCTION_26();
    OUTLINED_FUNCTION_26();
    v14 = (void *)sub_2412A8750();
    v15 = sub_2412A89B4();
    if (OUTLINED_FUNCTION_69(v15))
    {
      v16 = OUTLINED_FUNCTION_9();
      v21 = OUTLINED_FUNCTION_9();
      *(_DWORD *)v16 = 136315906;
      v17 = OUTLINED_FUNCTION_30();
      v22[0] = sub_24125FA14(v17, v18, &v21);
      OUTLINED_FUNCTION_46();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_2412612EC(&v23[1], v22);
      v19 = (char *)&loc_24125D414 + dword_24125D744[sub_24126196C((uint64_t)v22)];
      __asm { BR              X10 }
    }
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_16();

    v20 = *(void (**)(_QWORD *))(v2 + 64);
    if (v20)
    {
      sub_2412612EC(&v23[1], v22);
      sub_2412618D8((uint64_t)v23, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD))sub_241260D40);
      sub_24126195C((uint64_t)v20);
      v20(v22);
      sub_24125CFB8((uint64_t)v20);
      OUTLINED_FUNCTION_16();
    }
    sub_2412618D8((uint64_t)v23, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD))sub_241260760);
  }
  else
  {
    __break(1u);
    swift_once();
    v6 = OUTLINED_FUNCTION_36();
    __swift_project_value_buffer(v6, (uint64_t)qword_257106DE8);
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_20();
    v7 = sub_2412A8750();
    v8 = sub_2412A89CC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = OUTLINED_FUNCTION_9();
      v10 = (_QWORD *)OUTLINED_FUNCTION_9();
      v24[0] = OUTLINED_FUNCTION_9();
      *(_DWORD *)v9 = 136315394;
      v11 = OUTLINED_FUNCTION_30();
      sub_24125FA14(v11, v12, v24);
      OUTLINED_FUNCTION_80();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2112;
      OUTLINED_FUNCTION_20();
      v23[0] = OUTLINED_FUNCTION_95();
      sub_2412A8A44();
      *v10 = v23[0];
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_52(&dword_24125A000, v7, v8, "[%s] Failed to decode received XPC message: %@.", (uint8_t *)v9);
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();

  }
  OUTLINED_FUNCTION_14();
}

void sub_24125D754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  void *v31;
  _QWORD *v32;
  void *v33;
  id v34;
  void (*v35)(uint64_t);
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[7];

  OUTLINED_FUNCTION_51();
  v2 = v0;
  v36 = v3;
  v4 = sub_2412A87F8();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  OUTLINED_FUNCTION_75();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_74();
  v39 = v5;
  sub_2412A89E4();
  OUTLINED_FUNCTION_75();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_74();
  v6 = sub_2412A8810();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  OUTLINED_FUNCTION_75();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_49();
  v9 = v8 - v7;
  v10 = sub_2412A89F0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_50();
  v12 = OUTLINED_FUNCTION_36();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_49();
  v16 = v15 - v14;
  v17 = *(os_unfair_lock_s **)(v0 + 32);
  OUTLINED_FUNCTION_41();
  os_unfair_lock_lock(v17 + 4);
  OUTLINED_FUNCTION_29();
  if (qword_2571045A0 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v12, (uint64_t)qword_257106DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v18, v12);
  swift_retain_n();
  v19 = sub_2412A8750();
  v20 = sub_2412A89C0();
  if (OUTLINED_FUNCTION_69(v20))
  {
    v21 = OUTLINED_FUNCTION_9();
    v42[0] = OUTLINED_FUNCTION_9();
    *(_DWORD *)v21 = 136315394;
    v22 = OUTLINED_FUNCTION_30();
    sub_24125FA14(v22, v23, v42);
    OUTLINED_FUNCTION_46();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    if (*(_QWORD *)(v2 + 40))
    {
      OUTLINED_FUNCTION_41();
      v24 = sub_2412A8780();
      v26 = v25;
      OUTLINED_FUNCTION_29();
      sub_24125FA14(v24, v26, v42);
      sub_2412A8A44();
      OUTLINED_FUNCTION_77();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52(&dword_24125A000, v19, v20, "[%s] XPCSession cancelled: %s", (uint8_t *)v21);
      OUTLINED_FUNCTION_70();
      OUTLINED_FUNCTION_5();
    }
    swift_release();
    __break(1u);
  }
  else
  {

    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_87(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_24125C628(0);
    *(_BYTE *)(v2 + 24) = 2;
    v27 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 32) + 16);
    OUTLINED_FUNCTION_88();
    os_unfair_lock_unlock(v27);
    swift_release();
    v28 = *(_QWORD *)(v2 + 48);
    if (v28)
    {
      v29 = *(_QWORD *)(v2 + 56);
      sub_241261758(0, &qword_257104808);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v1, *MEMORY[0x24BEE5758], v10);
      swift_retain();
      sub_2412A8804();
      v30 = (void (*)(uint64_t))MEMORY[0x24BEE5688];
      sub_241262190(&qword_257104810, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
      sub_24126178C(0, &qword_257104818, v30);
      sub_24126183C(&qword_257104820, &qword_257104818, v30);
      sub_2412A8A74();
      v31 = (void *)sub_2412A8A14();
      v32 = (_QWORD *)OUTLINED_FUNCTION_25();
      v32[2] = v28;
      v32[3] = v29;
      v32[4] = v36;
      v42[4] = (uint64_t)sub_241261800;
      v42[5] = (uint64_t)v32;
      v42[0] = MEMORY[0x24BDAC760];
      v42[1] = 1107296256;
      v42[2] = (uint64_t)sub_24125DCF0;
      v42[3] = (uint64_t)&block_descriptor;
      v33 = _Block_copy(v42);
      sub_24126195C(v28);
      v34 = v36;
      sub_2412A8804();
      v35 = (void (*)(uint64_t))MEMORY[0x24BEE5458];
      sub_241262190(&qword_257104828, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_24126178C(0, &qword_257104830, v35);
      sub_24126183C((unint64_t *)&qword_257104838, &qword_257104830, v35);
      sub_2412A8A74();
      MEMORY[0x242691760](0, v9, v39, v33);
      _Block_release(v33);

      sub_24125CFB8(v28);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v9, v38);
      swift_release();
    }
    OUTLINED_FUNCTION_14();
  }
}

uint64_t sub_24125DCF0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_24125DD1C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  os_log_type_t v20;
  _QWORD *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  if (sub_24125C638())
  {
    OUTLINED_FUNCTION_3();
    MSVGetCurrentThreadPriority();
    qos_class_self();
    if (qword_2571045A0 != -1)
      swift_once();
    v0 = sub_2412A875C();
    __swift_project_value_buffer(v0, (uint64_t)qword_257106DE8);
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    OUTLINED_FUNCTION_3();
    v1 = sub_2412A8750();
    v22 = v1;
    v20 = sub_2412A89D8();
    if (os_log_type_enabled(v1, v20))
    {
      v2 = OUTLINED_FUNCTION_9();
      v29 = OUTLINED_FUNCTION_9();
      *(_DWORD *)v2 = 136315650;
      v3 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_38(v3, v4);
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_18();
      *(_WORD *)(v2 + 12) = 2080;
      v5 = OUTLINED_FUNCTION_32();
      OUTLINED_FUNCTION_38(v5, v6);
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
      *(_WORD *)(v2 + 22) = 2080;
      OUTLINED_FUNCTION_93();
      v26 = v7;
      v28 = v8;
      sub_2412A8CE4();
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_85();
      OUTLINED_FUNCTION_31();
      sub_241291A5C();
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_85();
      OUTLINED_FUNCTION_42();
      sub_24125FA14(v26, v28, &v29);
      sub_2412A8A44();
      OUTLINED_FUNCTION_85();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_54(&dword_24125A000, v22, v20, "[%s] Send message: %s, priority: %s", (uint8_t *)v2);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_0();

    sub_241260394(0, &qword_2571045C8, (uint64_t (*)(void))sub_24125F814, (uint64_t (*)(void))sub_24125F850, (uint64_t)&type metadata for IPCServerMessage);
    sub_24125F88C();
    sub_2412A87B0();
    if (v24)
    {
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_86();
      OUTLINED_FUNCTION_3();
      OUTLINED_FUNCTION_86();
      v12 = sub_2412A8750();
      v25 = v12;
      v23 = sub_2412A89C0();
      if (os_log_type_enabled(v12, v23))
      {
        v13 = OUTLINED_FUNCTION_9();
        v21 = (_QWORD *)OUTLINED_FUNCTION_9();
        v29 = OUTLINED_FUNCTION_9();
        *(_DWORD *)v13 = 136315650;
        v14 = OUTLINED_FUNCTION_30();
        sub_24125FA14(v14, v15, &v29);
        OUTLINED_FUNCTION_66();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2080;
        v16 = OUTLINED_FUNCTION_32();
        OUTLINED_FUNCTION_38(v16, v17);
        OUTLINED_FUNCTION_66();
        OUTLINED_FUNCTION_18();
        OUTLINED_FUNCTION_0();
        OUTLINED_FUNCTION_0();
        *(_WORD *)(v13 + 22) = 2112;
        OUTLINED_FUNCTION_86();
        v27 = _swift_stdlib_bridgeErrorToNSError();
        sub_2412A8A44();
        *v21 = v27;
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_43();
        OUTLINED_FUNCTION_54(&dword_24125A000, v25, v23, "[%s] Send message: %s failed with error: %@", (uint8_t *)v13);
        sub_2412601A0();
        OUTLINED_FUNCTION_64();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_0();
      OUTLINED_FUNCTION_43();
      OUTLINED_FUNCTION_43();

      sub_24125E238();
      v18 = OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_28(v18, v19);
      OUTLINED_FUNCTION_43();
      return swift_release();
    }
    else
    {
      swift_release();
      return OUTLINED_FUNCTION_0();
    }
  }
  else
  {
    sub_24125E238();
    v9 = OUTLINED_FUNCTION_12();
    return OUTLINED_FUNCTION_28(v9, v10);
  }
}

unint64_t sub_24125E238()
{
  unint64_t result;

  result = qword_2571045C0;
  if (!qword_2571045C0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaControlService.Errors, &type metadata for MediaControlService.Errors);
    atomic_store(result, (unint64_t *)&qword_2571045C0);
  }
  return result;
}

uint64_t sub_24125E274(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unsigned __int8 v5;

  v5 = a5;
  switch(a5 >> 60)
  {
    case 0uLL:
      return sub_24125E338(result, a2);
    case 1uLL:
      sub_24125E37C(result, a2, a3);
      goto LABEL_6;
    case 4uLL:
    case 5uLL:
    case 6uLL:
      goto LABEL_6;
    case 7uLL:
      swift_bridgeObjectRetain();
      return sub_24125E37C(a3, a4, v5);
    case 8uLL:
      OUTLINED_FUNCTION_143();
LABEL_6:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24125E338(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24125E37C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t OUTLINED_FUNCTION_143()
{
  return swift_bridgeObjectRetain();
}

void *sub_24125E39C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  void *v24;
  _BYTE *v25;
  id v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  char v41;
  os_log_type_t v42;
  qos_class_t v43;
  int v44;
  _QWORD *v45;
  os_log_type_t v46;
  void *v47;
  id v48;
  _BYTE v49[304];
  char v50[8];
  uint64_t v51;
  _DWORD v52[78];
  uint64_t v53[46];
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  v9 = a1[6];
  if (!sub_24125C638())
  {
    sub_24125E238();
    v21 = OUTLINED_FUNCTION_12();
    return (void *)OUTLINED_FUNCTION_28(v21, v22);
  }
  OUTLINED_FUNCTION_2();
  v44 = MSVGetCurrentThreadPriority();
  v43 = qos_class_self();
  if (qword_2571045A0 != -1)
    swift_once();
  v10 = sub_2412A875C();
  __swift_project_value_buffer(v10, (uint64_t)qword_257106DE8);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_2();
  v11 = sub_2412A8750();
  v42 = sub_2412A89D8();
  v57 = v9;
  if (os_log_type_enabled(v11, v42))
  {
    v12 = OUTLINED_FUNCTION_9();
    v53[0] = OUTLINED_FUNCTION_9();
    *(_DWORD *)v12 = 136315650;
    v13 = OUTLINED_FUNCTION_30();
    v15 = OUTLINED_FUNCTION_62(v13, v14);
    OUTLINED_FUNCTION_24(v15);
    OUTLINED_FUNCTION_57();
    *(_WORD *)(v12 + 12) = 2080;
    OUTLINED_FUNCTION_45();
    v56 = v57;
    v16 = IPCServerMessage.description.getter();
    v18 = OUTLINED_FUNCTION_62(v16, v17);
    OUTLINED_FUNCTION_63(v18);
    sub_2412A8A44();
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
    *(_WORD *)(v12 + 22) = 2080;
    OUTLINED_FUNCTION_93();
    v54 = v19;
    v55 = v20;
    sub_2412A8CE4();
    OUTLINED_FUNCTION_84();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_31();
    v52[0] = v44;
    v52[1] = v43;
    sub_241291A5C();
    OUTLINED_FUNCTION_84();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_42();
    v54 = sub_24125FA14(v54, v55, v53);
    sub_2412A8A44();
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_54(&dword_24125A000, v11, v42, "[%s] Send message: %s with sync reply, priority: %s", (uint8_t *)v12);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_4();

  v53[39] = v4;
  v53[40] = v3;
  v53[41] = v6;
  v53[42] = v5;
  v53[43] = v8;
  v53[44] = v7;
  v53[45] = v9;
  sub_241262124(0, &qword_2571045F8, (uint64_t)&type metadata for ReplyMessage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_24125F850();
  sub_241260204();
  sub_2412A87C8();
  if (v47)
  {
    OUTLINED_FUNCTION_0();
    v24 = v47;
  }
  else
  {
    sub_241261354((uint64_t)&v54, (uint64_t)v52, (uint64_t)&qword_2571045F8, (uint64_t)&type metadata for ReplyMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
    sub_241261354((uint64_t)v52, (uint64_t)v53, (uint64_t)&qword_2571045F8, (uint64_t)&type metadata for ReplyMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
    if (sub_2412602B8((uint64_t)v53) == 1)
    {
      sub_24125E238();
      v24 = (void *)OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_76(v25, 1);
      OUTLINED_FUNCTION_17();
    }
    else
    {
      if (v53[38])
      {
        sub_24125E238();
        v24 = (void *)OUTLINED_FUNCTION_12();
        v41 = 2;
      }
      else
      {
        sub_2412602DC((uint64_t)v53, (uint64_t)v50);
        if (sub_24126047C((uint64_t)v50) != 1)
        {
          sub_2412602DC((uint64_t)v53, (uint64_t)v49);
          sub_2412618D8((uint64_t)v49, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD))sub_241260D40);
          OUTLINED_FUNCTION_6();
          swift_release();
          sub_241260490((uint64_t)v52);
          return sub_2412612EC(&v51, a2);
        }
        sub_24125E238();
        v24 = (void *)OUTLINED_FUNCTION_12();
        v41 = 1;
      }
      OUTLINED_FUNCTION_76(v40, v41);
      sub_241260490((uint64_t)v52);
      OUTLINED_FUNCTION_17();
    }
  }
  OUTLINED_FUNCTION_2();
  v26 = v24;
  OUTLINED_FUNCTION_2();
  v48 = v24;
  v27 = v24;
  v28 = sub_2412A8750();
  v46 = sub_2412A89C0();
  if (os_log_type_enabled(v28, v46))
  {
    v29 = OUTLINED_FUNCTION_9();
    v45 = (_QWORD *)OUTLINED_FUNCTION_9();
    v53[0] = OUTLINED_FUNCTION_9();
    *(_DWORD *)v29 = 136315650;
    v30 = OUTLINED_FUNCTION_30();
    v32 = OUTLINED_FUNCTION_62(v30, v31);
    OUTLINED_FUNCTION_24(v32);
    OUTLINED_FUNCTION_57();
    *(_WORD *)(v29 + 12) = 2080;
    OUTLINED_FUNCTION_45();
    v56 = v57;
    v33 = IPCServerMessage.description.getter();
    v35 = OUTLINED_FUNCTION_62(v33, v34);
    OUTLINED_FUNCTION_63(v35);
    sub_2412A8A44();
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_22();
    *(_WORD *)(v29 + 22) = 2112;
    v36 = v48;
    v37 = _swift_stdlib_bridgeErrorToNSError();
    v54 = v37;
    sub_2412A8A44();
    *v45 = v37;
    OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_54(&dword_24125A000, v28, v46, "[%s] Send message: %s failed with error: %@", (uint8_t *)v29);
    sub_2412601A0();
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_5();
  }
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_40();

  sub_24125E238();
  v38 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_28(v38, v39);
  OUTLINED_FUNCTION_40();
  return (void *)swift_release();
}

void sub_24125EA3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[37];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_51();
  v2 = v1;
  v58 = v3;
  v54 = *v0;
  v5 = *(void **)v4;
  v6 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v10 = *(_QWORD *)(v4 + 32);
  v9 = *(_QWORD *)(v4 + 40);
  v11 = *(_QWORD *)(v4 + 48);
  if (sub_24125C638())
  {
    OUTLINED_FUNCTION_7();
    MSVGetCurrentThreadPriority();
    LODWORD(v51) = qos_class_self();
    if (qword_2571045A0 != -1)
      swift_once();
    v57 = v2;
    v12 = OUTLINED_FUNCTION_36();
    v13 = __swift_project_value_buffer(v12, (uint64_t)qword_257106DE8);
    OUTLINED_FUNCTION_7();
    OUTLINED_FUNCTION_7();
    OUTLINED_FUNCTION_7();
    OUTLINED_FUNCTION_7();
    v53 = v13;
    v14 = sub_2412A8750();
    v15 = sub_2412A89D8();
    LODWORD(v49) = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v16 = OUTLINED_FUNCTION_9();
      v47 = OUTLINED_FUNCTION_9();
      v62[0] = v47;
      *(_DWORD *)v16 = 136315650;
      v17 = OUTLINED_FUNCTION_30();
      sub_24125FA14(v17, v18, v62);
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_46();
      OUTLINED_FUNCTION_96();
      *(_WORD *)(v16 + 12) = 2080;
      v63 = (uint64_t)v5;
      v64 = v6;
      v65 = v8;
      v66 = v7;
      v19 = OUTLINED_FUNCTION_59();
      OUTLINED_FUNCTION_37(v19, v20, v21, v22, v23, v24, v25, v26, v42, v43, (uint64_t)v14, v47, v48, v49, v51, v53, v54);
      OUTLINED_FUNCTION_19();
      sub_2412A8A44();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
      *(_WORD *)(v16 + 22) = 2080;
      OUTLINED_FUNCTION_93();
      v63 = v27;
      v64 = v28;
      sub_2412A8CE4();
      OUTLINED_FUNCTION_92();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_31();
      sub_241291A5C();
      OUTLINED_FUNCTION_92();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_53(v63, v29, v62);
      OUTLINED_FUNCTION_19();
      sub_2412A8A44();
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_72(&dword_24125A000, v45, v50, "[%s] Send message: %s with async reply, priority: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_1();

    v63 = (uint64_t)v5;
    v64 = v6;
    v65 = v8;
    v66 = v7;
    v67 = v10;
    v68 = v9;
    v69 = v11;
    v36 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v36 + 16) = v58;
    *(_QWORD *)(v36 + 24) = v57;
    sub_24125F850();
    sub_24126027C();
    swift_retain();
    sub_2412A87A4();
    v37 = OUTLINED_FUNCTION_13();
    sub_24125F6EC(v37, v38, v39, v40, v41);
    OUTLINED_FUNCTION_29();
    swift_release();
  }
  else
  {
    sub_241261328(&v63);
    OUTLINED_FUNCTION_91(v30, v31, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124, v32, v33, v42, v43, v44, v46, v48, v49, v51, v52, v54, 0, v55,
      v56,
      v58,
      v60,
      v61,
      v62[0],
      v62[1],
      v62[2],
      v62[3],
      v62[4],
      v62[5],
      v62[6],
      v62[7],
      v62[8],
      v62[9],
      v62[10],
      v62[11],
      v62[12],
      v62[13],
      v62[14],
      v62[15],
      v62[16],
      v62[17],
      v62[18],
      v62[19],
      v62[20],
      v62[21],
      v62[22],
      v62[23],
      v62[24],
      v62[25],
      v62[26],
      v62[27],
      v62[28],
      v62[29],
      v62[30],
      v62[31],
      v62[32],
      v62[33],
      v62[34],
      v62[35],
      v62[36],
      v63);
    sub_24125E238();
    v34 = OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_78(v34, v35);
    v59();

  }
  OUTLINED_FUNCTION_14();
}

void sub_24125EFD0(uint64_t a1, void (*a2)(__int16 *, void *))
{
  uint64_t v3;
  void *v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __int16 *v9;
  __n128 *v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v13[296];
  _WORD v14[148];
  _WORD v15[160];
  __int16 v16;
  uint64_t v17;
  __n128 v18[20];
  _BYTE v19[320];

  v3 = MEMORY[0x24BEE4408];
  sub_241261354(a1, (uint64_t)v18, (uint64_t)&unk_257104858, (uint64_t)&type metadata for ReplyMessage, MEMORY[0x24BEE4408], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241261B40);
  sub_241261354((uint64_t)v18, (uint64_t)v19, (uint64_t)&unk_257104858, (uint64_t)&type metadata for ReplyMessage, v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241261B40);
  if (sub_241261BA8((uint64_t)v19) == 1)
  {
    nullsub_1(v19);
    sub_241261328(v15);
    sub_241261354((uint64_t)v15, (uint64_t)&v16, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
    sub_24125E238();
    v4 = (void *)swift_allocError();
    *v5 = 1;
    a2(&v16, v4);
  }
  else
  {
    v6 = nullsub_1(v19);
    if (*(_QWORD *)(v6 + 304))
    {
      sub_241261328(&v16);
      sub_241261354((uint64_t)&v16, (uint64_t)v14, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
      sub_24125E238();
      v4 = (void *)swift_allocError();
      *v7 = 2;
      sub_241261354((uint64_t)v18, (uint64_t)v15, (uint64_t)&unk_257104858, (uint64_t)&type metadata for ReplyMessage, MEMORY[0x24BEE4408], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241261B40);
      v8 = nullsub_1(v15);
      sub_241261BB0(v8);
      v9 = v14;
    }
    else
    {
      v10 = (__n128 *)v6;
      sub_2412602DC(v6, (uint64_t)&v16);
      if (sub_24126047C((uint64_t)&v16) != 1)
      {
        sub_2412612EC(&v17, v15);
        nullsub_1(v15);
        sub_241261354((uint64_t)v15, (uint64_t)v14, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
        sub_241261E90(v18);
        sub_241262000(v10);
        a2(v14, 0);
        sub_241261E90(v18);
        sub_241262000(v10);
        return;
      }
      sub_241261328(v14);
      sub_241261354((uint64_t)v14, (uint64_t)v13, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
      sub_24125E238();
      v4 = (void *)swift_allocError();
      *v11 = 1;
      sub_241261354((uint64_t)v18, (uint64_t)v15, (uint64_t)&unk_257104858, (uint64_t)&type metadata for ReplyMessage, MEMORY[0x24BEE4408], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241261B40);
      v12 = nullsub_1(v15);
      sub_241261BB0(v12);
      v9 = (__int16 *)v13;
    }
    a2(v9, v4);
    sub_241261E90(v18);
  }

}

uint64_t sub_24125F2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v2;
  sub_2412613CC(a2, v3 + 16);
  OUTLINED_FUNCTION_98();
  return swift_task_switch();
}

uint64_t sub_24125F340()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[10];
  v2 = swift_task_alloc();
  v0[11] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_24125F3EC;
  OUTLINED_FUNCTION_98();
  return sub_2412A8D08();
}

uint64_t sub_24125F3EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_98();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
}

uint64_t sub_24125F45C()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_34(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24125F488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE v14[56];

  sub_241261B40(0, &qword_257104848, (uint64_t)&type metadata for IPCClientMessage, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE6830]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = &v14[-v8 - 8];
  sub_2412613CC(a3, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, v9, v6);
  sub_24125EA3C();
  return swift_release();
}

uint64_t sub_24125F590(uint64_t a1, void *a2)
{
  id v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[296];
  _QWORD v7[37];
  _BYTE v8[296];

  sub_241261354(a1, (uint64_t)v8, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
  if (a2)
  {
    v7[0] = a2;
    v3 = a2;
    sub_241261B40(0, &qword_257104848, (uint64_t)&type metadata for IPCClientMessage, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE6830]);
    return sub_2412A8954();
  }
  else
  {
    sub_241261354((uint64_t)v8, (uint64_t)v7, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
    result = sub_241261AA4((uint64_t)v7);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_2412612EC(v7, &v5);
      sub_241261354((uint64_t)v8, (uint64_t)v6, (uint64_t)&unk_257104630, (uint64_t)&type metadata for IPCClientMessage, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_241262124);
      sub_241261AB8((uint64_t)v6);
      sub_241261B40(0, &qword_257104848, (uint64_t)&type metadata for IPCClientMessage, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE6830]);
      return sub_2412A8960();
    }
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_24125F6EC(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unsigned __int8 v5;

  v5 = a5;
  switch(a5 >> 60)
  {
    case 0uLL:
      return sub_24125F7B0(result, a2);
    case 1uLL:
      sub_24125F7F4(result, a2, a3);
      goto LABEL_6;
    case 4uLL:
    case 5uLL:
    case 6uLL:
      goto LABEL_6;
    case 7uLL:
      swift_bridgeObjectRelease();
      return sub_24125F7F4(a3, a4, v5);
    case 8uLL:
      sub_24125F80C();
LABEL_6:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24125F7B0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24125F7F4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_24125F80C()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_24125F814()
{
  unint64_t result;

  result = qword_2571045D0;
  if (!qword_2571045D0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCServerMessage, &type metadata for IPCServerMessage);
    atomic_store(result, (unint64_t *)&qword_2571045D0);
  }
  return result;
}

unint64_t sub_24125F850()
{
  unint64_t result;

  result = qword_2571045D8;
  if (!qword_2571045D8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCServerMessage, &type metadata for IPCServerMessage);
    atomic_store(result, (unint64_t *)&qword_2571045D8);
  }
  return result;
}

unint64_t sub_24125F88C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571045E0;
  if (!qword_2571045E0)
  {
    sub_241260394(255, &qword_2571045C8, (uint64_t (*)(void))sub_24125F814, (uint64_t (*)(void))sub_24125F850, (uint64_t)&type metadata for IPCServerMessage);
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCMessage<A>, v1);
    atomic_store(result, (unint64_t *)&qword_2571045E0);
  }
  return result;
}

uint64_t sub_24125F8EC(uint64_t a1)
{
  MEMORY[0x242691F34](&unk_2412A95A8, a1);
  return sub_2412A8708();
}

uint64_t sub_24125F928()
{
  MEMORY[0x242691F34](&unk_2412A95A8);
  return sub_2412A86FC();
}

uint64_t sub_24125F970(uint64_t a1, uint64_t a2)
{
  sub_2412A8D5C();
  MEMORY[0x242691F34](&unk_2412A95A8, a2);
  sub_2412A86FC();
  return sub_2412A8D98();
}

uint64_t sub_24125F9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x242691F34](&unk_2412A95A8, a3);
  return sub_2412A86F0();
}

uint64_t sub_24125FA14(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t ObjectType;

  OUTLINED_FUNCTION_98();
  v9 = sub_24125FAE0(v6, v7, v8, 1, a1, a2);
  v10 = v15[0];
  if (v9)
  {
    v11 = v9;
    ObjectType = swift_getObjectType();
    v15[0] = v11;
    v12 = *a3;
    if (*a3)
    {
      sub_241262070((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v15[0] = a1;
    v15[1] = a2;
    v13 = *a3;
    if (*a3)
    {
      sub_241262070((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  return v10;
}

uint64_t sub_24125FAE0(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_24125FC34((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_2412A8A50();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_24125FCF8(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_2412A8B10();
    if (!v8)
    {
      result = sub_2412A8B4C();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_24125FC34(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_2412A8B64();
  __break(1u);
  return result;
}

uint64_t sub_24125FCF8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_24125FD8C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_24125FF74(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_24125FF74((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24125FD8C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_2412A88E8();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_24125FEFC(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_2412A8AC8();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_2412A8B64();
  __break(1u);
LABEL_14:
  result = sub_2412A8B4C();
  __break(1u);
  return result;
}

_QWORD *sub_24125FEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_241262124(0, &qword_257104860, MEMORY[0x24BEE4260], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_24125FF74(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_241262124(0, &qword_257104860, MEMORY[0x24BEE4260], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_241260120(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24126005C(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_24126005C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_2412A8B64();
  __break(1u);
  return result;
}

char *sub_241260120(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_2412A8B64();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

void sub_2412601A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571045E8)
  {
    sub_241261758(255, &qword_2571045F0);
    v0 = sub_2412A8A38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571045E8);
  }
}

unint64_t sub_241260204()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257104600;
  if (!qword_257104600)
  {
    sub_241262124(255, &qword_2571045F8, (uint64_t)&type metadata for ReplyMessage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = v1;
    v3 = sub_24126027C();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE4AC0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257104600);
  }
  return result;
}

unint64_t sub_24126027C()
{
  unint64_t result;

  result = qword_257104608;
  if (!qword_257104608)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for ReplyMessage, &type metadata for ReplyMessage);
    atomic_store(result, (unint64_t *)&qword_257104608);
  }
  return result;
}

uint64_t sub_2412602B8(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 304);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_2412602DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241260320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_241260320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257104610)
  {
    sub_241260394(255, (unint64_t *)&qword_257104618, (uint64_t (*)(void))sub_241260404, (uint64_t (*)(void))sub_241260440, (uint64_t)&type metadata for IPCClientMessage);
    v0 = sub_2412A8A38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257104610);
  }
}

void sub_241260394(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3();
    v10 = a4();
    v11 = type metadata accessor for IPCMessage(a1, a5, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

unint64_t sub_241260404()
{
  unint64_t result;

  result = qword_257104620;
  if (!qword_257104620)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCClientMessage, &type metadata for IPCClientMessage);
    atomic_store(result, (unint64_t *)&qword_257104620);
  }
  return result;
}

unint64_t sub_241260440()
{
  unint64_t result;

  result = qword_257104628;
  if (!qword_257104628)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCClientMessage, &type metadata for IPCClientMessage);
    atomic_store(result, (unint64_t *)&qword_257104628);
  }
  return result;
}

uint64_t sub_24126047C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 297);
  if (v1 > 3)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_241260490(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 208);
  sub_241260518(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    WORD4(v7),
    *(void **)(a1 + 304));
  return a1;
}

void sub_241260518(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned __int16 a38,void *a39)
{
  if (a39 != (void *)1)
  {
    sub_241260644(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32,
      a33,
      a34,
      a35,
      a36,
      a37,
      a38);

  }
}

void sub_241260644(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned __int16 a38)
{
  if (HIBYTE(a38) <= 0xFEu)
    sub_241260760(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32,
      a33,
      a34,
      a35,
      a36,
      a37,
      a38,
      SHIBYTE(a38));
}

void sub_241260760(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int8 a29,uint64_t a30,uint64_t a31,unsigned __int8 a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,char a38)
{
  switch(a38)
  {
    case 0:
      sub_241260958(a1, a2, (uint64_t)a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        a28,
        a29,
        a30,
        a31,
        a32);
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRelease();

      break;
    case 3:
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_241260958(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int8 a29,uint64_t a30,uint64_t a31,unsigned __int8 a32)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_241260B54(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
  return result;
}

uint64_t sub_241260B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 a28,uint64_t a29,uint64_t a30,unsigned __int8 a31)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241260CC8(a5, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241260CFC(a14);
    sub_241260CFC(a18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_241260D28(a26, a27, a28);
    sub_241260D28(a29, a30, a31);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241260CC8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_241260CFC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241260D28(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_24125F80C();
  return result;
}

uint64_t sub_241260D40(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int8 a29,uint64_t a30,uint64_t a31,unsigned __int8 a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,char a38)
{
  id v38;

  switch(a38)
  {
    case 0:
      return sub_241260F04(result, a2, (uint64_t)a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
               a20,
               a21,
               a22,
               a23,
               a24,
               a25,
               a26,
               a27,
               a28,
               a29,
               a30,
               a31,
               a32);
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 2:
      v38 = a3;
      goto LABEL_6;
    case 3:
LABEL_4:
      swift_bridgeObjectRetain();
LABEL_6:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_241260F04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned __int8 a29,uint64_t a30,uint64_t a31,unsigned __int8 a32)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_241261100(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
  return result;
}

uint64_t sub_241261100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 a28,uint64_t a29,uint64_t a30,unsigned __int8 a31)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_241261274(a5, a6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2412612A8(a14);
    sub_2412612A8(a18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2412612D4(a26, a27, a28);
    sub_2412612D4(a29, a30, a31);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_241261274(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2412612A8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2412612D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return OUTLINED_FUNCTION_143();
  return result;
}

void *sub_2412612EC(const void *a1, void *a2)
{
  __swift_memcpy290_8(a2, a1);
  return a2;
}

void sub_241261328(_WORD *a1)
{
  bzero(a1, 0x120uLL);
  a1[144] = -256;
}

void sub_241261354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412613A0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2412613C4(uint64_t a1)
{
  uint64_t v1;

  sub_24125EFD0(a1, *(void (**)(__int16 *, void *))(v1 + 16));
}

uint64_t sub_2412613CC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy56_8(a2, a1);
  return a2;
}

uint64_t sub_241261408(uint64_t a1)
{
  uint64_t v1;

  return sub_24125F488(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_241261414()
{
  unint64_t result;

  result = qword_257104640;
  if (!qword_257104640)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaControlService.Errors, &type metadata for MediaControlService.Errors);
    atomic_store(result, (unint64_t *)&qword_257104640);
  }
  return result;
}

uint64_t type metadata accessor for MediaControlService()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaControlService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaControlService.__allocating_init(messageHandler:interruptionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of MediaControlService.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of MediaControlService.send(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of MediaControlService.sendSync(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of MediaControlService.sendAsync(_:reply:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of MediaControlService.sendAsync(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 352) + *(_QWORD *)(*(_QWORD *)v2 + 352));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_241261548;
  return v8(a1, a2);
}

uint64_t sub_241261548()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_34(*(uint64_t (**)(void))(v2 + 8));
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaControlService.Errors()
{
  return &type metadata for MediaControlService.Errors;
}

uint64_t getEnumTagSinglePayload for RoutingSessionArtworkDataSource.ArtworkError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s12MediaControl19MediaControlServiceC5StateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_241261688 + 4 * byte_2412A938F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2412616BC + 4 * byte_2412A938A[v4]))();
}

uint64_t sub_2412616BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412616C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412616CCLL);
  return result;
}

uint64_t sub_2412616D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412616E0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2412616E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412616EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412616F8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_241261700(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaControlService.State()
{
  return &type metadata for MediaControlService.State;
}

unint64_t sub_24126171C()
{
  unint64_t result;

  result = qword_257104800;
  if (!qword_257104800)
  {
    result = MEMORY[0x242691F34](&unk_2412A9524, &type metadata for MediaControlService.State);
    atomic_store(result, (unint64_t *)&qword_257104800);
  }
  return result;
}

void sub_241261758(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_44();
}

void sub_24126178C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2412A8948();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412617D4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_241261800()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
  OUTLINED_FUNCTION_44();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void sub_24126183C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if (!*a1)
  {
    sub_24126178C(255, a2, a3);
    atomic_store(MEMORY[0x242691F34](MEMORY[0x24BEE12C8], v4), a1);
  }
  OUTLINED_FUNCTION_44();
}

unint64_t sub_241261878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257104840;
  if (!qword_257104840)
  {
    sub_241260394(255, (unint64_t *)&qword_257104618, (uint64_t (*)(void))sub_241260404, (uint64_t (*)(void))sub_241260440, (uint64_t)&type metadata for IPCClientMessage);
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCMessage<A>, v1);
    atomic_store(result, (unint64_t *)&qword_257104840);
  }
  return result;
}

void sub_2412618D8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD))
{
  OUTLINED_FUNCTION_21(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), a2, *(__n128 *)(a1 + 72), *(__n128 *)(a1 + 88), *(__n128 *)(a1 + 104), *(__n128 *)(a1 + 120), *(__n128 *)(a1 + 136), *(__n128 *)(a1 + 152), *(__n128 *)(a1 + 168), *(__n128 *)(a1 + 184));
  OUTLINED_FUNCTION_68();
}

uint64_t sub_24126195C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_24126196C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 289);
}

unint64_t sub_241261974()
{
  unint64_t result;

  result = qword_257104850;
  if (!qword_257104850)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_257104850);
  }
  return result;
}

uint64_t sub_2412619C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_241261B40(0, &qword_257104848, (uint64_t)&type metadata for IPCClientMessage, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE6830]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_241261A40(uint64_t a1, void *a2)
{
  sub_241261B40(0, &qword_257104848, (uint64_t)&type metadata for IPCClientMessage, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x24BEE6830]);
  return sub_24125F590(a1, a2);
}

uint64_t sub_241261AA4(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 289);
  if (v1 > 3)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_241261AB8(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int16 v6;

  v6 = *(_WORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 208);
  sub_241260D40(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_OWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    BYTE8(v4),
    v5,
    *((uint64_t *)&v5 + 1),
    *(_QWORD *)(a1 + 272),
    *(_QWORD *)(a1 + 280),
    v6,
    SHIBYTE(v6));
  return a1;
}

void sub_241261B40(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_241261974();
    v9 = a4(a1, a3, v8, MEMORY[0x24BEE3F20]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_241261BA8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 312);
}

uint64_t sub_241261BB0(uint64_t a1)
{
  void *v2;
  id v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(void **)(a1 + 304);
  v7 = *(_OWORD *)(a1 + 256);
  v8 = *(_OWORD *)(a1 + 272);
  v5 = *(_OWORD *)(a1 + 224);
  v6 = *(_OWORD *)(a1 + 240);
  sub_241261C48(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v5,
    BYTE8(v5),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    *(_QWORD *)(a1 + 288),
    *(_WORD *)(a1 + 296));
  v3 = v2;
  return a1;
}

uint64_t sub_241261C48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned __int16 a38)
{
  uint64_t result;

  if (HIBYTE(a38) <= 0xFEu)
    return sub_241260D40(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             SHIBYTE(a38));
  return result;
}

void sub_241261D64(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned __int16 a38,void *a39,char a40)
{
  if ((a40 & 1) != 0)
  {

  }
  else
  {
    sub_241260644((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32,
      a33,
      a34,
      a35,
      a36,
      a37,
      a38);

  }
}

uint64_t sub_241261E90(__n128 *a1)
{
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD);
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;

  v2 = OUTLINED_FUNCTION_11(a1);
  OUTLINED_FUNCTION_21(v3, v4, v5, v6, v7, v8, v9, v10, v11, v2, v12, v13, v14, v15, v16, v17, v18);
  return v1;
}

id sub_241261ED4(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned __int8 a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned __int16 a38,void *a39,char a40)
{
  if ((a40 & 1) != 0)
    return a1;
  sub_241261C48((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38);
  return a39;
}

void sub_241262000(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = OUTLINED_FUNCTION_11(a1);
  v10(v2, v3, v4, v5, v6, v7, v8, v9, v1.n128_u64[0], v1.n128_u64[1], v11, v12, v13, v14, v15, v16, v17, v18, v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30);
  OUTLINED_FUNCTION_68();
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_241262070(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2412620B0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

double sub_2412620D4@<D0>(uint64_t a1@<X8>)
{
  return sub_24125CAD0(a1);
}

uint64_t sub_2412620DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_241262100(uint64_t a1)
{
  return sub_24125CB48(a1);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_241262124(a1, &qword_257104870, (uint64_t)&unk_251157608, MEMORY[0x24BEE4D40]);
}

void sub_241262124(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(a1, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_44();
}

void sub_241262164()
{
  sub_241262190(&qword_257104878, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2412A95D4);
}

void sub_241262190(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x242691F34](a3, v5), a1);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2412621CC()
{
  sub_241262190(&qword_257104880, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2412A957C);
}

uint64_t OUTLINED_FUNCTION_0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return sub_24125F6EC(v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_1()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  return sub_24125F6EC(v0, v4, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_2()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return sub_24125E274(v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_3()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return sub_24125E274(v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return sub_24125F6EC(v4, v3, v2, v1, v0);
}

void OUTLINED_FUNCTION_5()
{
  JUMPOUT(0x242691FB8);
}

uint64_t OUTLINED_FUNCTION_6()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return sub_24125F6EC(v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_7()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  return sub_24125E274(v0, v4, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_9()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_10()
{
  void *v0;

}

__n128 OUTLINED_FUNCTION_11(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_12()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_13()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_16()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD);

  sub_2412618D8(v0 + 352, v1);
}

uint64_t OUTLINED_FUNCTION_17()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return sub_24125F6EC(v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_18()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_20()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD)@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>, __n128 a13@<Q3>, __n128 a14@<Q4>, __n128 a15@<Q5>, __n128 a16@<Q6>, __n128 a17@<Q7>)
{
  __int128 v17;

  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_u64[0], a10.n128_u64[1], a11.n128_u64[0], a11.n128_u64[1], a12.n128_u64[0], a12.n128_u64[1], a13.n128_u64[0], a13.n128_u64[1], a14.n128_u64[0], a14.n128_u64[1], a15.n128_u64[0],
           a15.n128_u64[1],
           a16.n128_u64[0],
           a16.n128_u64[1],
           a17.n128_u64[0],
           a17.n128_u64[1],
           v17,
           *((_QWORD *)&v17 + 1));
}

uint64_t OUTLINED_FUNCTION_22()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  return sub_24125F6EC(v4, v3, v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_23()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  return sub_24125E274(v0, v4, v3, v2, v1);
}

uint64_t OUTLINED_FUNCTION_24(unint64_t a1)
{
  STACK[0x570] = a1;
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_25()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_26()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD);

  sub_2412618D8(v0 + 352, v1);
}

void OUTLINED_FUNCTION_27()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD);

  sub_2412618D8(v0 + 352, v1);
}

uint64_t OUTLINED_FUNCTION_28(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_29()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30()
{
  return sub_2412A8DD4();
}

uint64_t OUTLINED_FUNCTION_31()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_32()
{
  return IPCServerMessage.description.getter();
}

uint64_t OUTLINED_FUNCTION_33()
{
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_34(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_36()
{
  return sub_2412A875C();
}

uint64_t OUTLINED_FUNCTION_37(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  return sub_24125FA14(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_38(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_24125FA14(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_40()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_41()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_42()
{
  return sub_2412A88DC();
}

void OUTLINED_FUNCTION_43()
{
  void *v0;

}

void OUTLINED_FUNCTION_45()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0x570] = v5;
  STACK[0x578] = v4;
  STACK[0x580] = v3;
  STACK[0x588] = v2;
  STACK[0x590] = v1;
  STACK[0x598] = v0;
}

uint64_t OUTLINED_FUNCTION_46()
{
  return sub_2412A8A44();
}

void OUTLINED_FUNCTION_52(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_53(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_24125FA14(a1, v3, a3);
}

void OUTLINED_FUNCTION_54(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x20u);
}

uint64_t OUTLINED_FUNCTION_57()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_58()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_59()
{
  return IPCServerMessage.description.getter();
}

uint64_t OUTLINED_FUNCTION_62(uint64_t a1, unint64_t a2)
{
  return sub_24125FA14(a1, a2, (uint64_t *)&STACK[0x400]);
}

unint64_t OUTLINED_FUNCTION_63(unint64_t result)
{
  STACK[0x570] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_64()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_66()
{
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_67()
{
  return swift_weakInit();
}

BOOL OUTLINED_FUNCTION_69(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_70()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_72(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x20u);
}

uint64_t OUTLINED_FUNCTION_73(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_24125F6EC(result, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_76@<X0>(_BYTE *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_release_n();
}

void OUTLINED_FUNCTION_78(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
}

uint64_t OUTLINED_FUNCTION_80()
{
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_82(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_24125FA14(a1, a2, (uint64_t *)(v2 - 96));
}

uint64_t OUTLINED_FUNCTION_84()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_85()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_86()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_87@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_88()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_89()
{
  return sub_2412A8D68();
}

void OUTLINED_FUNCTION_90()
{
  sub_2412601A0();
}

void OUTLINED_FUNCTION_91(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  sub_241261354((uint64_t)&a61, (uint64_t)&a24, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_92()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_94()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_95()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t OUTLINED_FUNCTION_96()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_97()
{
  return sub_2412A8A44();
}

uint64_t sub_24126275C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return OUTLINED_FUNCTION_17_0();
}

uint64_t sub_241262768(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return OUTLINED_FUNCTION_17_0();
}

#error "2412627A4: call analysis failed (funcsize=18)"

void ArtworkLoader.init(artworkDataHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_25_0();
  a21 = v23;
  a22 = v24;
  v25 = v22;
  v27 = v26;
  v29 = v28;
  v25[4] = 0;
  v25[5] = 0;
  v25[6] = sub_24127B274(15);
  v25[7] = v30;
  v25[2] = v29;
  v25[3] = v27;
  v31 = qword_2571045A8;
  OUTLINED_FUNCTION_26_0();
  if (v31 != -1)
    swift_once();
  v32 = OUTLINED_FUNCTION_36();
  __swift_project_value_buffer(v32, (uint64_t)qword_257106E00);
  OUTLINED_FUNCTION_13_0();
  v33 = sub_2412A8750();
  v34 = sub_2412A89D8();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = OUTLINED_FUNCTION_9();
    a10 = OUTLINED_FUNCTION_9();
    *(_DWORD *)v35 = 136315394;
    v36 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_41_0(v36, v37, v38);
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    v39 = v25[6];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35(v39, v40, &a10);
    sub_2412A8A44();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_36_0();
    _os_log_impl(&dword_24125A000, v33, v34, "[%s]<%s> init", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_2_0();
}

void ArtworkLoader.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  OUTLINED_FUNCTION_25_0();
  a21 = v23;
  a22 = v24;
  v25 = v22;
  if (qword_2571045A8 != -1)
    swift_once();
  v26 = OUTLINED_FUNCTION_36();
  __swift_project_value_buffer(v26, (uint64_t)qword_257106E00);
  OUTLINED_FUNCTION_13_0();
  v27 = sub_2412A8750();
  v28 = sub_2412A89D8();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = OUTLINED_FUNCTION_9();
    a10 = OUTLINED_FUNCTION_9();
    *(_DWORD *)v29 = 136315394;
    v30 = OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_41_0(v30, v31, v32);
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    v33 = *(_QWORD *)(v25 + 48);
    v34 = *(_QWORD *)(v25 + 56);
    swift_bridgeObjectRetain();
    sub_24125FA14(v33, v34, &a10);
    sub_2412A8A44();
    OUTLINED_FUNCTION_3_0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24125A000, v27, v28, "[%s]<%s> deinit", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_3_0();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_0();
}

#error "241262B24: call analysis failed (funcsize=8)"

uint64_t sub_241262B3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t result;

  v2 = v1;
  if (a1)
  {
    v4 = sub_241263964();
    v6 = v5;
    v7 = (uint64_t *)(v1 + 40);
    if (!*(_QWORD *)(v1 + 40))
    {
      if (!v5)
        goto LABEL_20;
      goto LABEL_17;
    }
    v8 = v4;
  }
  else
  {
    v6 = 0;
    v7 = (uint64_t *)(v1 + 40);
    if (!*(_QWORD *)(v1 + 40))
      goto LABEL_20;
    v8 = 0;
  }
  swift_retain();
  v9 = sub_241263964();
  v11 = v10;
  swift_release();
  if (v6)
  {
    if (v11)
    {
      if (v8 == v9 && v6 == v11)
      {
        OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_18();
      }
      else
      {
        v13 = OUTLINED_FUNCTION_21_0();
        OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_18();
        if ((v13 & 1) == 0)
          goto LABEL_25;
      }
      goto LABEL_19;
    }
LABEL_17:
    OUTLINED_FUNCTION_18();
    goto LABEL_25;
  }
  if (v11)
    goto LABEL_17;
LABEL_19:
  v6 = *v7;
LABEL_20:
  v14 = *(_QWORD *)(v2 + 32);
  if (v14)
  {
    if (v6 && v14 == v6)
      return 0;
  }
  else if (!v6)
  {
    return 0;
  }
LABEL_25:
  if (a1)
  {
    sub_2412638B4();
    v17 = v16;
    if (!*(_QWORD *)(v2 + 32))
    {
      if (v16)
        goto LABEL_41;
      return 0;
    }
    v18 = v15;
  }
  else
  {
    if (!*(_QWORD *)(v2 + 32))
      return 0;
    v17 = 0;
    v18 = 0;
  }
  swift_retain();
  sub_2412638B4();
  v20 = v19;
  v22 = v21;
  swift_release();
  if (!v17)
  {
    if (v22)
    {
LABEL_41:
      OUTLINED_FUNCTION_85();
      return 1;
    }
    return 0;
  }
  if (!v22)
    goto LABEL_41;
  if (v18 == v20 && v17 == v22)
  {
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_85();
    return 0;
  }
  v24 = OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_85();
  result = 0;
  if ((v24 & 1) == 0)
    return 1;
  return result;
}

uint64_t sub_241262CFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t (*v33)(uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v2 = (uint64_t)v1;
  v38 = *v1;
  v4 = sub_2412A87F8();
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_49();
  v7 = v6 - v5;
  v8 = sub_2412A8810();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_49();
  v11 = v10 - v9;
  v12 = sub_2412A881C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_49();
  v16 = (uint64_t *)(v15 - v14);
  sub_241261758(0, &qword_257104808);
  *v16 = sub_2412A89FC();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BEE5610], v12);
  v17 = sub_2412A8828();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_5;
  }
  result = sub_241262B3C(a1);
  if ((result & 1) == 0)
    return result;
  if (!a1)
  {
    sub_24126275C(0);
    sub_241262768(0);
    v31 = (void *)sub_2412A89FC();
    aBlock[4] = (uint64_t)sub_241268928;
    aBlock[5] = v2;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24125DCF0;
    aBlock[3] = (uint64_t)&block_descriptor_0;
    v32 = _Block_copy(aBlock);
    OUTLINED_FUNCTION_88();
    swift_release();
    sub_2412A8804();
    aBlock[0] = MEMORY[0x24BEE4AF8];
    v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
    sub_24126984C(&qword_257104828, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_241269054(0, &qword_257104830, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_241268948();
    sub_2412A8A74();
    MEMORY[0x242691760](0, v11, v7, v32);
    _Block_release(v32);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v11, v36);
  }
  v19 = OUTLINED_FUNCTION_38_0();
  sub_24126275C(v19);
  if (qword_2571045A8 != -1)
    goto LABEL_11;
LABEL_5:
  v20 = OUTLINED_FUNCTION_36();
  __swift_project_value_buffer(v20, (uint64_t)qword_257106E00);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_13_0();
  v21 = sub_2412A8750();
  v22 = sub_2412A89D8();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = OUTLINED_FUNCTION_9();
    aBlock[0] = OUTLINED_FUNCTION_9();
    *(_DWORD *)v23 = 136315650;
    v24 = OUTLINED_FUNCTION_30();
    sub_24125FA14(v24, v25, aBlock);
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_57();
    *(_WORD *)(v23 + 12) = 2080;
    v26 = *(_QWORD *)(v2 + 48);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35(v26, v27, aBlock);
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_36_0();
    *(_WORD *)(v23 + 22) = 2080;
    OUTLINED_FUNCTION_26_0();
    sub_2412639EC();
    v29 = v28;
    OUTLINED_FUNCTION_11_0();
    OUTLINED_FUNCTION_35(v29, v30, aBlock);
    sub_2412A8A44();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_36_0();
    _os_log_impl(&dword_24125A000, v21, v22, "[%s]<%s> updateToken - load image data for token: %s", (uint8_t *)v23, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_5();
  }

  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_3_0();
  v34 = (_QWORD *)OUTLINED_FUNCTION_25();
  v34[2] = v2;
  v34[3] = a1;
  v34[4] = v38;
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_88();
  sub_2412646EC((uint64_t)sub_2412689C4, (uint64_t)v34);
  OUTLINED_FUNCTION_11_0();
  return swift_release();
}

uint64_t sub_241263198(uint64_t a1)
{
  void (*v1)(_QWORD, unint64_t);

  v1 = *(void (**)(_QWORD, unint64_t))(a1 + 16);
  swift_retain();
  v1(0, 0xF000000000000000);
  return swift_release();
}

uint64_t sub_2412631CC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v12 = sub_2412A87F8();
  v27 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2412A8810();
  v25 = *(_QWORD *)(v15 - 8);
  v26 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_241261758(0, &qword_257104808);
  v24 = sub_2412A89FC();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a3;
  v18[5] = a1;
  v18[6] = a2;
  v18[7] = a6;
  aBlock[4] = sub_241269C60;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24125DCF0;
  aBlock[3] = &block_descriptor_40;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v20 = a3;
  sub_241269C70(a1, a2);
  swift_release();
  sub_2412A8804();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  sub_24126984C(&qword_257104828, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_241269054(0, &qword_257104830, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_241268948();
  sub_2412A8A74();
  v22 = (void *)v24;
  MEMORY[0x242691760](0, v17, v14, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v17, v26);
}

void sub_241263418(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  BOOL v6;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(_QWORD, unint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    v6 = v5 == a2;
  else
    v6 = 0;
  if (v6)
  {
    if (a3)
    {
      v9 = a3;
      if (qword_2571045A8 != -1)
        swift_once();
      v10 = sub_2412A875C();
      __swift_project_value_buffer(v10, (uint64_t)qword_257106E00);
      swift_retain();
      v11 = a3;
      swift_retain();
      v12 = a3;
      v13 = sub_2412A8750();
      v14 = sub_2412A89C0();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v29 = (_QWORD *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v31 = v30;
        *(_DWORD *)v15 = 136315650;
        v16 = sub_2412A8DD4();
        sub_24125FA14(v16, v17, &v31);
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2112;
        v18 = a3;
        v19 = _swift_stdlib_bridgeErrorToNSError();
        sub_2412A8A44();
        *v29 = v19;

        *(_WORD *)(v15 + 22) = 2080;
        swift_retain();
        sub_2412639EC();
        v21 = v20;
        v23 = v22;
        swift_release();
        sub_24125FA14(v21, v23, &v31);
        sub_2412A8A44();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24125A000, v13, v14, "[%s] updateToken - error: %@ loading image data for token: %s", (uint8_t *)v15, 0x20u);
        sub_241269660(0, (unint64_t *)&qword_2571045E8, &qword_2571045F0);
        swift_arrayDestroy();
        MEMORY[0x242691FB8](v29, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x242691FB8](v30, -1, -1);
        MEMORY[0x242691FB8](v15, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      sub_24126275C(0);
      sub_241262768(0);
      v28 = *(void (**)(_QWORD, unint64_t))(a1 + 16);
      swift_retain();
      v28(0, 0xF000000000000000);
      swift_release();

    }
    else
    {
      v26 = swift_retain();
      sub_241262768(v26);
      v27 = *(void (**)(uint64_t, uint64_t))(a1 + 16);
      swift_retain();
      v27(a4, a5);
      swift_release();
    }
  }
}

BOOL static ArtworkToken.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;
  char v10;

  v4 = a1[7];
  v5 = a2[7];
  if (!v4)
  {
    if (!v5)
    {
LABEL_11:
      if (a1[4] == a2[4] && a1[5] == a2[5])
        return a1[9] == a2[9];
      v10 = OUTLINED_FUNCTION_21_0();
      result = 0;
      if ((v10 & 1) != 0)
        return a1[9] == a2[9];
      return result;
    }
    return 0;
  }
  if (!v5)
    return 0;
  if (a1[6] == a2[6] && v4 == v5)
    goto LABEL_11;
  v7 = OUTLINED_FUNCTION_21_0();
  result = 0;
  if ((v7 & 1) != 0)
    goto LABEL_11;
  return result;
}

uint64_t sub_241263834()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
  {
    sub_2412A8D74();
    OUTLINED_FUNCTION_40_0();
    sub_2412A88B8();
    OUTLINED_FUNCTION_96();
  }
  else
  {
    sub_2412A8D74();
  }
  OUTLINED_FUNCTION_32_0();
  sub_2412A88B8();
  OUTLINED_FUNCTION_57();
  return sub_2412A8D68();
}

void sub_2412638B4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56) && *(_QWORD *)(v0 + 80))
  {
    OUTLINED_FUNCTION_40_0();
  }
  else
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_0_0();
    OUTLINED_FUNCTION_40_0();
    sub_2412A88DC();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_241263964()
{
  _QWORD *v0;
  uint64_t v1;

  if (v0[7])
  {
    v1 = v0[6];
  }
  else
  {
    v1 = v0[4];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_85();
  return v1;
}

void sub_2412639EC()
{
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_96();
  sub_2412A88DC();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_0_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_19_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_96();
  sub_2412A88DC();
  OUTLINED_FUNCTION_96();
  sub_2412A88DC();
  OUTLINED_FUNCTION_85();
  sub_2412A88DC();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_241263B20()
{
  unint64_t v0;

  v0 = sub_2412A8B70();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_241263B6C()
{
  return 6;
}

uint64_t sub_241263B74()
{
  return 0;
}

uint64_t sub_241263B80(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_241263BBC + 4 * byte_2412A9620[a1]))(0xD000000000000011, 0x80000002412B42C0);
}

unint64_t sub_241263BBC()
{
  return 0xD000000000000015;
}

uint64_t sub_241263C00()
{
  return 0x6C6578695078616DLL;
}

uint64_t sub_241263C20()
{
  return 0x724165746F6D6572;
}

uint64_t sub_241263C44(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_241263C80 + 4 * byte_2412A9626[a1]))(0xD000000000000011, 0x80000002412B42C0);
}

unint64_t sub_241263C80()
{
  return 0xD000000000000015;
}

uint64_t sub_241263CC4()
{
  return 0x6C6578695078616DLL;
}

uint64_t sub_241263CE4()
{
  return 0x724165746F6D6572;
}

void sub_241263D08(char *a1)
{
  sub_24127E488(*a1);
}

void sub_241263D14()
{
  unsigned __int8 *v0;

  sub_24126C788(*v0);
}

void sub_241263D1C(uint64_t a1)
{
  char *v1;

  sub_24127E640(a1, *v1);
}

void sub_241263D24(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_24126C858(a1, *v1);
}

uint64_t sub_241263D2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241263B20();
  *a1 = result;
  return result;
}

void sub_241263D58(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_241263B80(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_241263D7C()
{
  unsigned __int8 *v0;

  return sub_241263C44(*v0);
}

uint64_t sub_241263D84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241263B68();
  *a1 = result;
  return result;
}

uint64_t sub_241263DA8()
{
  return sub_241263B74();
}

uint64_t sub_241263DC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241263B6C();
  *a1 = result;
  return result;
}

uint64_t sub_241263DE8()
{
  sub_2412689F0();
  return sub_2412A8DBC();
}

uint64_t sub_241263E10()
{
  sub_2412689F0();
  return sub_2412A8DC8();
}

uint64_t ArtworkToken.__allocating_init(playerPathData:contentItemIdentifier:artworkIdentifier:supportsRemoteArtwork:maxPixelSize:remoteArtworkData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  id v18;
  id v19;
  uint64_t result;

  v18 = objc_allocWithZone(MEMORY[0x24BE65568]);
  v19 = sub_2412688B8(a9, a10);
  type metadata accessor for ArtworkToken();
  result = OUTLINED_FUNCTION_25();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_BYTE *)(result + 64) = a7;
  *(_QWORD *)(result + 72) = a8;
  *(_QWORD *)(result + 80) = v19;
  return result;
}

void sub_241263ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_25_0();
  v2 = v1;
  v3 = v0;
  v4 = *(void **)(v0 + 80);
  v5 = v4;
  if (v4)
    goto LABEL_8;
  v6 = v1;
  if (*(_BYTE *)(v0 + 64) != 1 || !*(_QWORD *)(v0 + 56))
  {
    v5 = 0;
    goto LABEL_7;
  }
  if (qword_257104568 == -1 || (swift_once(), *(_QWORD *)(v3 + 56)))
  {
    v5 = sub_2412686D0();
LABEL_7:
    v2 = v6;
LABEL_8:
    v7 = *(_QWORD *)(v3 + 16);
    v8 = *(_QWORD *)(v3 + 24);
    v9 = *(_QWORD *)(v3 + 40);
    v15 = *(_QWORD *)(v3 + 32);
    v11 = *(_QWORD *)(v3 + 48);
    v10 = *(_QWORD *)(v3 + 56);
    v12 = *(_BYTE *)(v3 + 64);
    v13 = v4;
    sub_24125E338(v7, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_11_0();
    type metadata accessor for ArtworkToken();
    v14 = OUTLINED_FUNCTION_25();
    *(_QWORD *)(v14 + 16) = v7;
    *(_QWORD *)(v14 + 24) = v8;
    *(_QWORD *)(v14 + 48) = v11;
    *(_QWORD *)(v14 + 56) = v10;
    *(_QWORD *)(v14 + 32) = v15;
    *(_QWORD *)(v14 + 40) = v9;
    *(_BYTE *)(v14 + 64) = v12;
    *(_QWORD *)(v14 + 72) = v2;
    *(_QWORD *)(v14 + 80) = v5;
    OUTLINED_FUNCTION_2_0();
    return;
  }
  __break(1u);
}

uint64_t sub_241263FCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char v17;
  __int128 v18;

  v3 = v1;
  sub_241268B88(0, &qword_257104898, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2412689F0();
  sub_2412A8DB0();
  v18 = *(_OWORD *)(v3 + 48);
  v17 = 0;
  sub_241262124(0, &qword_2571048A8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_241268A50();
  OUTLINED_FUNCTION_6_0();
  if (!v2)
  {
    LOBYTE(v18) = 1;
    sub_2412A8C78();
    v18 = *(_OWORD *)(v3 + 16);
    v17 = 2;
    sub_241268AC0();
    OUTLINED_FUNCTION_20_0();
    sub_2412A8CB4();
    LOBYTE(v18) = 3;
    OUTLINED_FUNCTION_20_0();
    sub_2412A8C84();
    LOBYTE(v18) = 4;
    OUTLINED_FUNCTION_20_0();
    sub_2412A8CA8();
    v10 = *(void **)(v3 + 80);
    if (v10)
    {
      v11 = objc_msgSend(v10, sel_protobufData);
      v12 = sub_2412A86D8();
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0xF000000000000000;
    }
    *(_QWORD *)&v18 = v12;
    *((_QWORD *)&v18 + 1) = v14;
    v17 = 5;
    sub_241262124(0, &qword_2571048B8, MEMORY[0x24BDCDDE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_241268AFC();
    OUTLINED_FUNCTION_6_0();
    sub_241268B74(v12, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t ArtworkToken.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ArtworkToken.init(from:)(a1);
  return v2;
}

uint64_t ArtworkToken.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  __int128 v11;

  v3 = v1;
  sub_241268B88(0, (unint64_t *)&unk_2571048C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2412689F0();
  sub_2412A8DA4();
  if (v2)
  {
    type metadata accessor for ArtworkToken();
    swift_deallocPartialClassInstance();
  }
  else
  {
    OUTLINED_FUNCTION_5_0();
    *(_QWORD *)(v1 + 48) = sub_2412A8B94();
    *(_QWORD *)(v1 + 56) = v6;
    LOBYTE(v11) = 1;
    OUTLINED_FUNCTION_5_0();
    *(_QWORD *)(v1 + 32) = sub_2412A8BC4();
    *(_QWORD *)(v1 + 40) = v7;
    sub_241268BDC();
    OUTLINED_FUNCTION_9_0();
    sub_2412A8C00();
    *(_OWORD *)(v1 + 16) = v11;
    OUTLINED_FUNCTION_5_0();
    *(_BYTE *)(v1 + 64) = sub_2412A8BD0() & 1;
    LOBYTE(v11) = 4;
    OUTLINED_FUNCTION_5_0();
    *(_QWORD *)(v1 + 72) = sub_2412A8BF4();
    OUTLINED_FUNCTION_9_0();
    sub_2412A8BB8();
    v9 = objc_allocWithZone(MEMORY[0x24BE65568]);
    v10 = sub_2412688B8(v11, *((unint64_t *)&v11 + 1));
    OUTLINED_FUNCTION_1_0();
    *(_QWORD *)(v3 + 80) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_241264474()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_24126448C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_24126451C;
  return sub_2412A8D08();
}

uint64_t sub_24126451C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_241264580()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_241264590()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24126459C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_241269B04();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_2412646EC((uint64_t)sub_241269BC8, v7);
  return swift_release();
}

uint64_t sub_241264674(uint64_t result, unint64_t a2, id a3)
{
  id v3;

  if (a3)
  {
    v3 = a3;
    sub_241269B04();
    return sub_2412A8954();
  }
  else if (a2 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_24125E338(result, a2);
    sub_241269B04();
    return sub_2412A8960();
  }
  return result;
}

uint64_t sub_2412646EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  if (qword_257104568 != -1)
    swift_once();
  v5 = (_QWORD *)OUTLINED_FUNCTION_25();
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  OUTLINED_FUNCTION_88();
  sub_241264D1C(v2, (uint64_t)sub_241268C48, (uint64_t)v5);
  return swift_release();
}

void sub_241264790(uint64_t a1, unint64_t a2, id a3, uint64_t a4, void (*a5)(uint64_t, unint64_t, id))
{
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  id v23;
  uint64_t v24;
  uint64_t v25;

  if (a3)
  {
    v7 = a3;
    if (qword_2571045A8 != -1)
      swift_once();
    v8 = sub_2412A875C();
    __swift_project_value_buffer(v8, (uint64_t)qword_257106E00);
    v9 = a3;
    swift_retain();
    v10 = a3;
    swift_retain();
    v11 = sub_2412A8750();
    v12 = sub_2412A89C0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v25 = v15;
      *(_DWORD *)v13 = 136315394;
      swift_retain();
      sub_2412639EC();
      v17 = v16;
      v19 = v18;
      swift_release();
      sub_24125FA14(v17, v19, &v25);
      sub_2412A8A44();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      v20 = a3;
      v24 = _swift_stdlib_bridgeErrorToNSError();
      sub_2412A8A44();
      *v14 = v24;

      _os_log_impl(&dword_24125A000, v11, v12, "[%s] loadImageData - finished with error: %@", (uint8_t *)v13, 0x16u);
      sub_241269660(0, (unint64_t *)&qword_2571045E8, &qword_2571045F0);
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v15, -1, -1);
      MEMORY[0x242691FB8](v13, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    v23 = a3;
    a5(0, 0xF000000000000000, a3);

  }
  else if (a2 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_24125E338(a1, a2);
    a5(a1, a2, 0);
    sub_241268B74(a1, a2);
  }
}

uint64_t ArtworkToken.deinit()
{
  uint64_t v0;

  sub_24125F7B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t ArtworkToken.__deallocating_deinit()
{
  ArtworkToken.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_241264B0C()
{
  sub_2412A8D5C();
  sub_241263834();
  return sub_2412A8D98();
}

uint64_t sub_241264B48()
{
  return sub_241264B0C();
}

void sub_241264B68()
{
  sub_241263834();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_241264B84()
{
  sub_2412A8D5C();
  sub_241263834();
  return sub_2412A8D98();
}

uint64_t sub_241264BC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = ArtworkToken.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_241264BE8(_QWORD *a1)
{
  return sub_241263FCC(a1);
}

void sub_241264C08()
{
  sub_2412639EC();
  OUTLINED_FUNCTION_44();
}

BOOL sub_241264C24(_QWORD **a1, _QWORD **a2)
{
  return static ArtworkToken.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_241264C44()
{
  sub_2412A8D5C();
  sub_2412A8D68();
  return sub_2412A8D98();
}

_QWORD *sub_241264C84()
{
  _QWORD *result;

  type metadata accessor for RoutingSessionArtworkDataSource();
  swift_allocObject();
  result = sub_241264CC0();
  qword_257104888 = (uint64_t)result;
  return result;
}

_QWORD *sub_241264CC0()
{
  _QWORD *v0;
  uint64_t v1;

  v0[2] = MEMORY[0x24BEE4B00];
  v0[3] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE65C60]), sel_initWithMaximumCapacity_, 16);
  sub_24125CF3C();
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v0[4] = v1;
  return v0;
}

void sub_241264D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD **v26;
  _QWORD **v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  os_unfair_lock_s *v32;
  _QWORD **v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD **v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_unfair_lock_s *v50;
  os_unfair_lock_s *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  void *v77;
  double v78;
  id v79;
  _QWORD *v80;
  void *v81;
  id v82;
  os_unfair_lock_s *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  void *v102;
  _QWORD **v103;
  _QWORD **v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  _QWORD **v114;
  _QWORD *v115;
  uint64_t aBlock;
  uint64_t v117;
  uint64_t (*v118)();
  void *v119;
  uint64_t (*v120)(uint64_t, uint64_t);
  _QWORD *v121;
  uint64_t v122;

  v4 = v3;
  v111 = a2;
  v112 = a3;
  v6 = *v3;
  sub_241269054(0, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v109 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v108 = (uint64_t)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v106 = (uint64_t)&v105 - v10;
  v110 = sub_24127B274(15);
  v12 = v11;
  if (qword_257104598 != -1)
    swift_once();
  v13 = sub_2412A875C();
  __swift_project_value_buffer(v13, (uint64_t)qword_257106DD0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v14 = sub_2412A8750();
  v15 = sub_2412A89D8();
  v16 = v15;
  v17 = os_log_type_enabled(v14, v15);
  v113 = v12;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    aBlock = v19;
    *(_DWORD *)v18 = 136315650;
    v20 = sub_2412A8DD4();
    *(_QWORD *)&v105 = v6;
    v122 = sub_24125FA14(v20, v21, &aBlock);
    v107 = v13;
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v122 = sub_24125FA14(v110, v12, &aBlock);
    sub_2412A8A44();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2080;
    swift_retain();
    sub_2412639EC();
    v23 = v22;
    v25 = v24;
    swift_release();
    v122 = sub_24125FA14(v23, v25, &aBlock);
    v13 = v107;
    v6 = v105;
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24125A000, v14, (os_log_type_t)v16, "[%s] loadForToken<%s> - token: %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x242691FB8](v19, -1, -1);
    MEMORY[0x242691FB8](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  sub_241261758(0, &qword_257104CC0);
  v27 = v26;
  v28 = *(_QWORD *)(a1 + 16);
  v29 = *(_QWORD *)(a1 + 24);
  sub_24125E338(v28, v29);
  v30 = sub_241265BF8(v28, v29);
  if (!v30)
  {
    __break(1u);
LABEL_53:
    type metadata accessor for ArtworkToken();
    sub_2412A8D20();
    __break(1u);
    return;
  }
  v31 = v30;
  if (!objc_msgSend(v30, sel_isResolved))
  {
    __break(1u);
    goto LABEL_49;
  }
  v32 = (os_unfair_lock_s *)v4[4];
  swift_retain();
  os_unfair_lock_lock(v32 + 4);
  swift_release();
  v33 = (_QWORD **)(v4 + 2);
  swift_beginAccess();
  v34 = v4[2];
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2412A1E58((_QWORD *)a1, v34);
  v29 = v35;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (v29)
  {
    v16 = swift_allocObject();
    v36 = v112;
    *(_QWORD *)(v16 + 16) = v111;
    *(_QWORD *)(v16 + 24) = v36;
    swift_beginAccess();
    swift_retain();
    swift_retain();
    swift_isUniquelyReferenced_nonNull_native();
    v115 = *v33;
    v27 = (_QWORD **)v115;
    *v33 = (_QWORD *)0x8000000000000000;
    v37 = (_QWORD *)swift_retain();
    v38 = sub_24127C198(v37);
    if (!__OFADD__(v27[2], (v39 & 1) == 0))
    {
      v29 = v38;
      v40 = v39;
      sub_24126970C();
      v27 = &v115;
      if ((sub_2412A8B28() & 1) == 0)
        goto LABEL_13;
      v27 = (_QWORD **)v115;
      v41 = sub_24127C198((_QWORD *)a1);
      if ((v40 & 1) == (v42 & 1))
      {
        v29 = v41;
LABEL_13:
        if ((v40 & 1) != 0)
        {
          v27 = *(_QWORD ***)(v115[7] + 8 * v29);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
LABEL_15:
            v44 = (unint64_t)v27[2];
            v43 = (unint64_t)v27[3];
            if (v44 >= v43 >> 1)
            {
              sub_241289A50(v43 > 1, v44 + 1, 1, (uint64_t)v27);
              v27 = v104;
            }
            v27[2] = (_QWORD *)(v44 + 1);
            v45 = &v27[2 * v44];
            v45[4] = sub_2412698A8;
            v45[5] = (_QWORD *)v16;
            v114 = v27;
            sub_24126938C((uint64_t *)&v114, 1, &v115, v29, a1);
            swift_release();
            swift_bridgeObjectRelease();
            v4[2] = v115;
            swift_endAccess();
            swift_release();
            v46 = (os_unfair_lock_s *)v4[4];
            swift_retain();
            os_unfair_lock_unlock(v46 + 4);
            swift_release();

            goto LABEL_18;
          }
LABEL_51:
          sub_241289A50(0, (int64_t)v27[2] + 1, 1, (uint64_t)v27);
          v27 = v103;
          goto LABEL_15;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      goto LABEL_53;
    }
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  sub_241269054(0, &qword_257104CC8, (uint64_t (*)(uint64_t))sub_2412697B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v47 = swift_allocObject();
  v105 = xmmword_2412A9A20;
  *(_OWORD *)(v47 + 16) = xmmword_2412A9A20;
  v48 = swift_allocObject();
  v49 = v112;
  *(_QWORD *)(v48 + 16) = v111;
  *(_QWORD *)(v48 + 24) = v49;
  *(_QWORD *)(v47 + 32) = sub_2412698A8;
  *(_QWORD *)(v47 + 40) = v48;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  sub_2412691E0(v47, (_QWORD *)a1);
  swift_endAccess();
  swift_release();
  v50 = (os_unfair_lock_s *)v4[4];
  swift_retain();
  os_unfair_lock_unlock(v50 + 4);
  swift_release();
  if (*(_BYTE *)(a1 + 64) == 1)
  {
    v51 = (os_unfair_lock_s *)v4[4];
    swift_retain();
    os_unfair_lock_lock(v51 + 4);
    swift_release();
    v52 = *(id *)(a1 + 80);
    v53 = *(_QWORD *)(a1 + 56);
    v54 = v113;
    if (v52)
    {
      if (v53)
      {
        v55 = v13;
        v56 = (void *)v4[3];
        v57 = v52;
        v58 = v56;
        v59 = (void *)sub_2412A8894();
        objc_msgSend(v58, sel_setObject_forKey_, v57, v59);

        v13 = v55;
        v54 = v113;
      }
      else
      {
        v82 = v52;
      }
    }
    else if (v53)
    {
      v71 = (id)v4[3];
      v72 = (void *)sub_2412A8894();
      v52 = objc_msgSend(v71, sel_objectForKey_, v72);

    }
    else
    {
      v52 = 0;
    }
    v83 = (os_unfair_lock_s *)v4[4];
    swift_retain();
    os_unfair_lock_unlock(v83 + 4);
    swift_release();
    if (v52)
    {
      v84 = v52;
      sub_241267024(v84, a1, v110, v54);

LABEL_18:
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_2571045B0 != -1)
      swift_once();
    v85 = __swift_project_value_buffer(v109, (uint64_t)qword_257106E18);
    v86 = v106;
    sub_24126958C(v85, v106);
    if (__swift_getEnumTagSinglePayload(v86, 1, v13) == 1)
    {
      sub_2412695E8(v86, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8]);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v87 = sub_2412A8750();
      v88 = sub_2412A89D8();
      v89 = v88;
      if (os_log_type_enabled(v87, v88))
      {
        v90 = swift_slowAlloc();
        LODWORD(v112) = v89;
        v91 = v90;
        v111 = swift_slowAlloc();
        aBlock = v111;
        *(_DWORD *)v91 = 136315394;
        v92 = sub_2412A8DD4();
        v115 = (_QWORD *)sub_24125FA14(v92, v93, &aBlock);
        v107 = v13;
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 12) = 2080;
        swift_bridgeObjectRetain();
        v115 = (_QWORD *)sub_24125FA14(v110, v54, &aBlock);
        v86 = v106;
        v13 = v107;
        sub_2412A8A44();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24125A000, v87, (os_log_type_t)v112, "[%s] loadForToken<%s> - request remote artwork", (uint8_t *)v91, 0x16u);
        v94 = v111;
        swift_arrayDestroy();
        MEMORY[0x242691FB8](v94, -1, -1);
        MEMORY[0x242691FB8](v91, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v86, v13);
    }
    sub_241261758(0, &qword_257104CD0);
    sub_241262124(0, &qword_257104CD8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = v105;
    v96 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(v95 + 32) = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v95 + 40) = v96;
    swift_bridgeObjectRetain();
    v75 = sub_241265C6C();
    v97 = v110;
    v98 = (void *)sub_2412A8894();
    objc_msgSend(v75, sel_setRequestIdentifier_, v98);

    v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = v105;
    *(_QWORD *)(v99 + 32) = sub_2412A88A0();
    *(_QWORD *)(v99 + 40) = v100;
    sub_2412698E0(v99, v75);
    v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE654F8]), sel_initWithPlayerPath_, v31);
    v101 = (_QWORD *)swift_allocObject();
    v101[2] = v4;
    v101[3] = a1;
    v101[4] = v97;
    v101[5] = v54;
    v101[6] = v6;
    v120 = sub_24126995C;
    v121 = v101;
    aBlock = MEMORY[0x24BDAC760];
    v117 = 1107296256;
    v81 = &block_descriptor_27;
  }
  else
  {
    v60 = v113;
    if (qword_2571045B0 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v109, (uint64_t)qword_257106E18);
    v62 = v108;
    sub_24126958C(v61, v108);
    if (__swift_getEnumTagSinglePayload(v62, 1, v13) == 1)
    {
      sub_2412695E8(v62, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8]);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v63 = sub_2412A8750();
      v64 = sub_2412A89D8();
      v65 = v64;
      if (os_log_type_enabled(v63, v64))
      {
        v66 = swift_slowAlloc();
        LODWORD(v112) = v65;
        v67 = v66;
        v111 = swift_slowAlloc();
        aBlock = v111;
        *(_DWORD *)v67 = 136315394;
        v68 = sub_2412A8DD4();
        v115 = (_QWORD *)sub_24125FA14(v68, v69, &aBlock);
        v107 = v13;
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        *(_WORD *)(v67 + 12) = 2080;
        swift_bridgeObjectRetain();
        v115 = (_QWORD *)sub_24125FA14(v110, v60, &aBlock);
        v13 = v107;
        v62 = v108;
        sub_2412A8A44();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24125A000, v63, (os_log_type_t)v112, "[%s] loadForToken<%s> - request data artwork", (uint8_t *)v67, 0x16u);
        v70 = v111;
        swift_arrayDestroy();
        MEMORY[0x242691FB8](v70, -1, -1);
        MEMORY[0x242691FB8](v67, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v62, v13);
    }
    sub_241261758(0, &qword_257104CD0);
    sub_241262124(0, &qword_257104CD8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v105;
    v74 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(v73 + 32) = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v73 + 40) = v74;
    swift_bridgeObjectRetain();
    v75 = sub_241265C6C();
    v76 = v110;
    v77 = (void *)sub_2412A8894();
    objc_msgSend(v75, sel_setRequestIdentifier_, v77);

    v78 = (double)*(uint64_t *)(a1 + 72);
    objc_msgSend(v75, sel_setArtworkWidth_, v78);
    objc_msgSend(v75, sel_setArtworkHeight_, v78);
    v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE654F8]), sel_initWithPlayerPath_, v31);
    v80 = (_QWORD *)swift_allocObject();
    v80[2] = v4;
    v80[3] = v76;
    v80[4] = v60;
    v80[5] = a1;
    v80[6] = v6;
    v120 = sub_2412698D4;
    v121 = v80;
    aBlock = MEMORY[0x24BDAC760];
    v117 = 1107296256;
    v81 = &block_descriptor_21;
  }
  v118 = sub_241266568;
  v119 = v81;
  v102 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v75, sel_performRequestForDestination_completion_, v79, v102);

  _Block_release(v102);
}

id sub_241265BF8(uint64_t a1, unint64_t a2)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_2412A86C0();
  v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_24125F7B0(a1, a2);

  return v6;
}

id sub_241265C6C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_2412A8924();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithIdentifiers_, v1);

  return v2;
}

void sub_241265CDC(unint64_t a1, void *a2, uint64_t a3, _QWORD *a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_unfair_lock_s *v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  id *v47;
  unint64_t v48;
  NSObject *v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  id v60;
  os_unfair_lock_s *v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  void (*v65)(__int128 *, uint64_t *);
  id v66;
  id *v67;
  uint64_t v68;
  uint64_t v69;
  id *v70;
  NSObject *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;

  v74 = a5;
  v75 = a6;
  sub_241269054(0, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v15 = ((char *)&v68 - v14);
  v16 = *(os_unfair_lock_s **)(a3 + 32);
  swift_retain();
  os_unfair_lock_lock(v16 + 4);
  swift_release();
  v17 = (id *)(a3 + 16);
  swift_beginAccess();
  *(_QWORD *)&v76 = a3;
  v18 = *(_QWORD *)(a3 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2412A1E58(a4, v18);
  v20 = v19;
  swift_bridgeObjectRelease();
  swift_release();
  v21 = a2;
  if (a2)
    goto LABEL_44;
  v71 = v15;
  v72 = a7;
  if (!a1)
    goto LABEL_24;
  v22 = sub_2412699A8((void *)a1);
  if (!v22)
    goto LABEL_24;
  v23 = v22;
  v73 = v20;
  v20 = v22 & 0xFFFFFFFFFFFFFF8;
  if (v22 >> 62)
  {
    if (sub_2412A8B58())
      goto LABEL_6;
LABEL_23:
    swift_bridgeObjectRelease();
    v20 = v73;
    goto LABEL_24;
  }
  if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_23;
LABEL_6:
  if ((v23 & 0xC000000000000001) != 0)
  {
    v24 = (id)MEMORY[0x24269182C](0, v23);
  }
  else
  {
    if (!*(_QWORD *)(v20 + 16))
    {
      __break(1u);
      goto LABEL_39;
    }
    v24 = *(id *)(v23 + 32);
  }
  v25 = v24;
  v20 = v73;
  swift_bridgeObjectRelease();
  v26 = sub_241269A14(v25);
  if (v26)
  {
    v27 = v26;
    v28 = sub_2412A88A0();
    sub_2412A1E94(v28, v29, v27);
    v23 = (unint64_t)v30;
    v20 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23)
    {
      v31 = qword_2571045B0;
      v17 = (id *)(id)v23;
      if (v31 == -1)
      {
LABEL_12:
        v32 = __swift_project_value_buffer(v13, (uint64_t)qword_257106E18);
        v33 = v71;
        sub_24126958C(v32, (uint64_t)v71);
        v34 = sub_2412A875C();
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34) == 1)
        {
          sub_2412695E8((uint64_t)v33, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8]);
        }
        else
        {
          swift_bridgeObjectRetain_n();
          v35 = sub_2412A8750();
          v36 = sub_2412A89D8();
          if (os_log_type_enabled(v35, v36))
          {
            v37 = swift_slowAlloc();
            v70 = v17;
            v38 = v37;
            v39 = swift_slowAlloc();
            *(_QWORD *)&v78 = v39;
            *(_DWORD *)v38 = 136315394;
            v40 = sub_2412A8DD4();
            v77 = sub_24125FA14(v40, v41, (uint64_t *)&v78);
            v20 = v73;
            sub_2412A8A44();
            swift_bridgeObjectRelease();
            *(_WORD *)(v38 + 12) = 2080;
            swift_bridgeObjectRetain();
            v77 = sub_24125FA14(v74, v75, (uint64_t *)&v78);
            sub_2412A8A44();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_24125A000, v35, v36, "[%s] loadForToken<%s> - received remote artwork representation", (uint8_t *)v38, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x242691FB8](v39, -1, -1);
            v42 = v38;
            v17 = v70;
            v33 = v71;
            MEMORY[0x242691FB8](v42, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(NSObject *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        }
        v43 = v76;
        if (a4[7])
        {
          v44 = *(id *)(v76 + 24);
          v45 = (void *)sub_2412A8894();
          objc_msgSend(v44, sel_setObject_forKey_, v17, v45);

        }
        else
        {

        }
        v21 = 0;
        goto LABEL_45;
      }
LABEL_57:
      swift_once();
      goto LABEL_12;
    }
  }
LABEL_24:
  if (qword_257104598 != -1)
    swift_once();
  v46 = sub_2412A875C();
  __swift_project_value_buffer(v46, (uint64_t)qword_257106DD0);
  v47 = (id *)(id)a1;
  v48 = v75;
  swift_bridgeObjectRetain_n();
  v49 = v47;
  v15 = sub_2412A8750();
  v50 = sub_2412A89C0();
  if (os_log_type_enabled(v15, (os_log_type_t)v50))
  {
    LODWORD(v70) = v50;
    v71 = v49;
    v73 = v20;
    v13 = swift_slowAlloc();
    v69 = swift_slowAlloc();
    *(_QWORD *)&v78 = v69;
    *(_DWORD *)v13 = 136315650;
    v51 = sub_2412A8DD4();
    v77 = sub_24125FA14(v51, v52, (uint64_t *)&v78);
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v20 = v13 + 14;
    swift_bridgeObjectRetain();
    v77 = sub_24125FA14(v74, v48, (uint64_t *)&v78);
    sub_2412A8A44();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 22) = 2080;
    if (!a1)
    {
      v55 = 0;
      v23 = (unint64_t)v71;
LABEL_42:
      v77 = v55;
      sub_241269660(0, &qword_257104CE0, &qword_257104CE8);
      v56 = sub_2412A88AC();
      v77 = sub_24125FA14(v56, v57, (uint64_t *)&v78);
      sub_2412A8A44();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24125A000, v15, (os_log_type_t)v70, "[%s] loadForToken<%s> - no remote artwork in item: %s", (uint8_t *)v13, 0x20u);
      v58 = v69;
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v58, -1, -1);
      MEMORY[0x242691FB8](v13, -1, -1);

      v20 = v73;
      goto LABEL_43;
    }
    v23 = (unint64_t)v71;
    v53 = sub_2412699A8(v71);
    if (!v53)
    {
LABEL_41:
      v55 = 0;
      goto LABEL_42;
    }
    a1 = v53;
    a7 = v53 & 0xFFFFFFFFFFFFFF8;
    if (!(v53 >> 62))
    {
      if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_31:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v54 = (id)MEMORY[0x24269182C](0, a1);
        }
        else
        {
          if (!*(_QWORD *)(a7 + 16))
          {
            __break(1u);
            goto LABEL_57;
          }
          v54 = *(id *)(a1 + 32);
        }
        v55 = (uint64_t)v54;
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      goto LABEL_40;
    }
LABEL_39:
    if (sub_2412A8B58())
      goto LABEL_31;
LABEL_40:
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  swift_bridgeObjectRelease_n();

LABEL_43:
  sub_241269544();
  v21 = (void *)swift_allocError();
  *v59 = 0;
LABEL_44:
  swift_beginAccess();
  swift_retain();
  v60 = a2;
  sub_2412690A4(a4);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  v23 = 0;
  v43 = v76;
LABEL_45:
  v61 = *(os_unfair_lock_s **)(v43 + 32);
  swift_retain();
  os_unfair_lock_unlock(v61 + 4);
  swift_release();
  if (v20)
  {
    if (v21)
    {
      v62 = *(_QWORD *)(v20 + 16);
      if (v62)
      {
        v63 = v21;
        v64 = v20 + 40;
        v76 = xmmword_2412A9A30;
        do
        {
          v65 = *(void (**)(__int128 *, uint64_t *))(v64 - 8);
          v78 = v76;
          v77 = (uint64_t)v21;
          v66 = v21;
          swift_retain();
          v65(&v78, &v77);

          swift_release();
          v64 += 16;
          --v62;
        }
        while (v62);

      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v23)
      {
        v67 = (id *)(id)v23;
        sub_241267024(v67, (uint64_t)a4, v74, v75);

      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {

  }
}

uint64_t sub_24126656C(unint64_t a1, void *a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  unint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  os_log_t v44;
  _BYTE *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *, uint64_t *);
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  os_log_t v61;
  uint64_t v62;
  void (*v63)(os_log_t, NSObject *, _QWORD *);
  void (*v64)(os_log_t, NSObject *, _QWORD *);
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD v68[2];
  os_log_t v69;
  uint64_t v70;
  void *v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77[3];

  v74 = a7;
  v75 = a5;
  sub_241269054(0, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v15 = ((char *)v68 - v14);
  v16 = a3;
  v17 = *(os_unfair_lock_s **)(a3 + 32);
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  swift_release();
  if (a2)
  {
    v18 = 0;
    v19 = 0xF000000000000000;
    v20 = a2;
    goto LABEL_33;
  }
  v21 = v13;
  v72 = v15;
  v73 = a4;
  v22 = v75;
  if (!a1)
  {
    v24 = 0;
    goto LABEL_17;
  }
  v23 = sub_2412699A8((void *)a1);
  v24 = v23;
  if (!v23)
    goto LABEL_17;
  v25 = (id *)v22;
  v22 = v23 & 0xFFFFFFFFFFFFFF8;
  if (v23 >> 62)
    v26 = sub_2412A8B58();
  else
    v26 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v27 = v72;
  v28 = v21;
  if (!v26)
  {
    swift_bridgeObjectRelease();
    v24 = 0;
    v21 = 0xF000000000000000;
    v22 = (unint64_t)v25;
LABEL_18:
    if (qword_257104598 != -1)
      swift_once();
    v34 = sub_2412A875C();
    __swift_project_value_buffer(v34, (uint64_t)qword_257106DD0);
    v35 = (id *)(id)a1;
    swift_bridgeObjectRetain_n();
    v25 = v35;
    v27 = sub_2412A8750();
    v36 = sub_2412A89C0();
    if (!os_log_type_enabled(v27, (os_log_type_t)v36))
    {
      swift_bridgeObjectRelease_n();

LABEL_32:
      sub_241269544();
      v20 = (void *)swift_allocError();
      *v45 = 0;
      sub_241268B74(v24, v21);
      v18 = 0;
      v19 = 0xF000000000000000;
      goto LABEL_33;
    }
    LODWORD(v70) = v36;
    v75 = v16;
    v71 = 0;
    v72 = a6;
    v28 = swift_slowAlloc();
    v69 = (os_log_t)swift_slowAlloc();
    v77[0] = (uint64_t)v69;
    *(_DWORD *)v28 = 136315650;
    v37 = sub_2412A8DD4();
    v76 = sub_24125FA14(v37, v38, v77);
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    a6 = 2080;
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain();
    v76 = sub_24125FA14(v73, v22, v77);
    sub_2412A8A44();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 22) = 2080;
    if (!a1 || (v39 = sub_2412699A8(v25)) == 0)
    {
      v41 = 0;
      a2 = v71;
      v16 = v75;
LABEL_31:
      v76 = v41;
      sub_241269660(0, &qword_257104CE0, &qword_257104CE8);
      v42 = sub_2412A88AC();
      v76 = sub_24125FA14(v42, v43, v77);
      sub_2412A8A44();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24125A000, v27, (os_log_type_t)v70, "[%s] loadForToken<%s> - No data artwork in item: %s", (uint8_t *)v28, 0x20u);
      v44 = v69;
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v44, -1, -1);
      MEMORY[0x242691FB8](v28, -1, -1);

      a6 = (uint64_t)v72;
      goto LABEL_32;
    }
    a1 = v39;
    v22 = v39 & 0xFFFFFFFFFFFFFF8;
    a2 = v71;
    v16 = v75;
    if (!(v39 >> 62))
    {
      if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_25:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v40 = (id)MEMORY[0x24269182C](0, a1);
        }
        else
        {
          if (!*(_QWORD *)(v22 + 16))
          {
            __break(1u);
            goto LABEL_53;
          }
          v40 = *(id *)(a1 + 32);
        }
        v41 = (uint64_t)v40;
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      goto LABEL_50;
    }
LABEL_49:
    if (sub_2412A8B58())
      goto LABEL_25;
LABEL_50:
    swift_bridgeObjectRelease();
    v41 = 0;
    goto LABEL_31;
  }
  if ((v24 & 0xC000000000000001) != 0)
  {
    v29 = (id)MEMORY[0x24269182C](0, v24);
  }
  else
  {
    if (!*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_49;
    }
    v29 = *(id *)(v24 + 32);
  }
  v30 = v29;
  v22 = (unint64_t)v25;
  swift_bridgeObjectRelease();
  v24 = (uint64_t)objc_msgSend(v30, sel_artwork);

  if (!v24)
  {
LABEL_17:
    v21 = 0xF000000000000000;
    goto LABEL_18;
  }
  v24 = sub_241269A98((void *)v24);
  v21 = v31;
  if (v31 >> 60 == 15)
    goto LABEL_18;
  if (qword_2571045B0 != -1)
LABEL_53:
    swift_once();
  v32 = __swift_project_value_buffer(v28, (uint64_t)qword_257106E18);
  sub_24126958C(v32, (uint64_t)v27);
  v33 = sub_2412A875C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v33) == 1)
  {
    sub_2412695E8((uint64_t)v27, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8]);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v54 = sub_2412A8750();
    v55 = sub_2412A89D8();
    LODWORD(v70) = v55;
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v69 = v54;
      v57 = v56;
      v58 = swift_slowAlloc();
      v77[0] = v58;
      *(_DWORD *)v57 = 136315394;
      v68[1] = v57 + 4;
      v59 = sub_2412A8DD4();
      v76 = sub_24125FA14(v59, v60, v77);
      v71 = a2;
      sub_2412A8A44();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2080;
      swift_bridgeObjectRetain();
      v76 = sub_24125FA14(v73, (unint64_t)v25, v77);
      a2 = v71;
      v22 = (unint64_t)v25;
      sub_2412A8A44();
      swift_bridgeObjectRelease_n();
      v61 = v69;
      _os_log_impl(&dword_24125A000, v69, (os_log_type_t)v70, "[%s] loadForToken<%s> - received data artwork", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v58, -1, -1);
      v27 = v72;
      MEMORY[0x242691FB8](v57, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(NSObject *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v27, v33);
  }
  v62 = v73;
  type metadata accessor for ImageUtilities();
  v63 = *(void (**)(os_log_t, NSObject *, _QWORD *))(a6 + 72);
  sub_24125E338(v24, v21);
  v64 = v63;
  v20 = 0;
  v65 = sub_2412A1F24(v24, v21, v64, v62, v22);
  v67 = v66;
  sub_241268B74(v24, v21);
  sub_241268B74(v24, v21);
  v18 = v65;
  v19 = v67;
LABEL_33:
  swift_beginAccess();
  v46 = a2;
  v47 = sub_2412690A4((_QWORD *)a6);
  swift_endAccess();
  if (v47)
    v48 = v47;
  else
    v48 = MEMORY[0x24BEE4AF8];
  v49 = *(os_unfair_lock_s **)(v16 + 32);
  swift_retain();
  os_unfair_lock_unlock(v49 + 4);
  swift_release();
  v50 = *(_QWORD *)(v48 + 16);
  if (v50)
  {
    v51 = v48 + 40;
    do
    {
      v52 = *(void (**)(uint64_t *, uint64_t *))(v51 - 8);
      v77[0] = v18;
      v77[1] = v19;
      v76 = (uint64_t)v20;
      swift_retain();
      v52(v77, &v76);
      swift_release();
      v51 += 16;
      --v50;
    }
    while (v50);
  }
  sub_241268B74(v18, v19);

  return swift_bridgeObjectRelease();
}

void sub_241267024(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  os_unfair_lock_s *v44;
  uint64_t v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(__int128 *, _QWORD *);
  void *v51;
  _BYTE *v52;
  id v53;
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void *v65;
  _BYTE v66[4];
  int v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  __int128 v75;
  __int128 aBlock;
  uint64_t (*v77)();
  void *v78;
  uint64_t (*v79)(uint64_t, uint64_t);
  _QWORD *v80;
  _QWORD v81[3];

  v5 = v4;
  v73 = a3;
  v74 = a4;
  *(_QWORD *)&v75 = a2;
  v81[1] = *MEMORY[0x24BDAC8D0];
  v72 = *v4;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_241269054(0, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v70 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v71 = &v66[-v9];
  sub_241269054(0, &qword_257104C78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], v7);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v66[-v11];
  v13 = sub_2412A86A8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v66[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v66[-v18];
  v20 = sub_241269484(a1);
  if (v21 >> 60 != 15)
  {
    v22 = v20;
    v23 = v21;
    v69 = v17;
    v24 = (void *)objc_opt_self();
    v25 = (void *)sub_2412A86C0();
    *(_QWORD *)&aBlock = 0;
    v26 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 0, &aBlock);

    if (v26)
    {
      v27 = (id)aBlock;
      sub_2412A8A5C();
      swift_unknownObjectRelease();
      sub_2412696B0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_241261758(0, &qword_257104C88);
        v28 = sub_2412678FC();
        sub_241268B74(v22, v23);
        v17 = v69;
        if (v28)
          goto LABEL_17;
        goto LABEL_9;
      }
      sub_241268B74(v22, v23);
    }
    else
    {
      v29 = (id)aBlock;
      v30 = sub_2412A8684();
      v68 = v5;
      v31 = (void *)v30;

      swift_willThrow();
      sub_241268B74(v22, v23);
      v32 = v31;
      v5 = v68;

    }
    v17 = v69;
  }
LABEL_9:
  v33 = sub_2412694E4(a1);
  if (!v34)
  {
LABEL_23:
    v44 = (os_unfair_lock_s *)v5[4];
    swift_retain();
    os_unfair_lock_lock(v44 + 4);
    swift_release();
    swift_beginAccess();
    v45 = sub_2412690A4((_QWORD *)v75);
    swift_endAccess();
    if (v45)
      v46 = v45;
    else
      v46 = MEMORY[0x24BEE4AF8];
    v47 = (os_unfair_lock_s *)v5[4];
    swift_retain();
    os_unfair_lock_unlock(v47 + 4);
    swift_release();
    v48 = *(_QWORD *)(v46 + 16);
    if (v48)
    {
      sub_241269544();
      v49 = v46 + 40;
      v75 = xmmword_2412A9A30;
      do
      {
        v50 = *(void (**)(__int128 *, _QWORD *))(v49 - 8);
        v51 = (void *)swift_allocError();
        *v52 = 1;
        aBlock = v75;
        v81[0] = v51;
        swift_retain();
        v50(&aBlock, v81);

        swift_release();
        v49 += 16;
        --v48;
      }
      while (v48);
    }
    swift_bridgeObjectRelease();
    return;
  }
  v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0)
    v35 = v33 & 0xFFFFFFFFFFFFLL;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  sub_2412A869C();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_2412695E8((uint64_t)v12, &qword_257104C78, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    goto LABEL_23;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v19, v12, v13);
  sub_241261758(0, &qword_257104C88);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v17, v19, v13);
  v28 = sub_241267980((uint64_t)v17);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
  if (!v28)
    goto LABEL_23;
LABEL_17:
  v36 = v28;
  v37 = objc_msgSend((id)objc_opt_self(), sel_tokenWithImageArtworkInfo_, v36);
  if (qword_257104570 != -1)
    swift_once();
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDC6D8]), sel_initWithToken_dataSource_, v37, qword_257104890);

  v39 = v75;
  objc_msgSend(v38, sel_setFittingSize_, (double)*(uint64_t *)(v75 + 72), (double)*(uint64_t *)(v75 + 72));
  v40 = v74;
  if (qword_2571045B0 != -1)
    swift_once();
  v41 = __swift_project_value_buffer(v70, (uint64_t)qword_257106E18);
  v42 = v71;
  sub_24126958C(v41, (uint64_t)v71);
  v43 = sub_2412A875C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43) == 1)
  {
    sub_2412695E8((uint64_t)v42, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8]);
  }
  else
  {
    v68 = v5;
    swift_bridgeObjectRetain_n();
    v53 = v38;
    v54 = sub_2412A8750();
    v55 = sub_2412A89D8();
    v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      v57 = swift_slowAlloc();
      v69 = (_QWORD *)swift_slowAlloc();
      v70 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v70;
      *(_DWORD *)v57 = 136315650;
      v58 = sub_2412A8DD4();
      v67 = v56;
      v81[0] = sub_24125FA14(v58, v59, (uint64_t *)&aBlock);
      sub_2412A8A44();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 12) = 2080;
      swift_bridgeObjectRetain();
      v81[0] = sub_24125FA14(v73, v40, (uint64_t *)&aBlock);
      sub_2412A8A44();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v57 + 22) = 2112;
      v81[0] = v53;
      v60 = v53;
      v39 = v75;
      sub_2412A8A44();
      v61 = v69;
      *v69 = v53;

      v40 = v74;
      _os_log_impl(&dword_24125A000, v54, (os_log_type_t)v67, "[%s] loadRemoteArtwork<%s> - request image from catalog: %@", (uint8_t *)v57, 0x20u);
      sub_241269660(0, (unint64_t *)&qword_2571045E8, &qword_2571045F0);
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v61, -1, -1);
      v62 = v70;
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v62, -1, -1);
      v63 = v57;
      v42 = v71;
      MEMORY[0x242691FB8](v63, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
    v5 = v68;
  }
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = v73;
  v64[3] = v40;
  v64[4] = v39;
  v64[5] = v5;
  v64[6] = v72;
  v79 = sub_241269654;
  v80 = v64;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v77 = sub_241266568;
  v78 = &block_descriptor_12;
  v65 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v38, sel_requestImageWithCompletion_, v65);

  _Block_release(v65);
}

id sub_2412678FC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_2412A8834();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithArtworkResponseDictionary_, v1);

  return v2;
}

id sub_241267980(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_2412A8690();
  v4 = objc_msgSend(v2, sel_initWithArtworkURL_, v3);

  v5 = sub_2412A86A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

uint64_t sub_2412679FC(void *a1, void *a2, uint64_t a3, unint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  void *v55;
  unint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _BYTE *v63;
  os_unfair_lock_s *v64;
  id v65;
  uint64_t v66;
  os_unfair_lock_s *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t *, uint64_t *);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(os_log_t, NSObject *, _QWORD *);
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[4];

  v85 = a7;
  sub_241269054(0, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = v13;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v78 - v18;
  if (!a2)
  {
    if (qword_2571045B0 != -1)
      swift_once();
    v38 = __swift_project_value_buffer(v14, (uint64_t)qword_257106E18);
    sub_24126958C(v38, (uint64_t)v19);
    v39 = (_QWORD *)sub_2412A875C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, (uint64_t)v39) == 1)
    {
      sub_2412695E8((uint64_t)v19, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8]);
      if (!a1)
        goto LABEL_21;
    }
    else
    {
      v81 = v39;
      v82 = a5;
      swift_bridgeObjectRetain_n();
      v43 = sub_2412A8750();
      v44 = sub_2412A89D8();
      v45 = v44;
      if (os_log_type_enabled(v43, v44))
      {
        v46 = swift_slowAlloc();
        v83 = v38;
        v47 = v46;
        v80 = swift_slowAlloc();
        v87[0] = v80;
        *(_DWORD *)v47 = 136315394;
        v78 = v47 + 4;
        v48 = sub_2412A8DD4();
        LODWORD(v79) = v45;
        v86 = sub_24125FA14(v48, v49, v87);
        v84 = a6;
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2080;
        swift_bridgeObjectRetain();
        v86 = sub_24125FA14(a3, a4, v87);
        a6 = v84;
        sub_2412A8A44();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24125A000, v43, (os_log_type_t)v79, "[%s] loadRemoteArtwork<%s> - received image from catalog", (uint8_t *)v47, 0x16u);
        v50 = v80;
        swift_arrayDestroy();
        MEMORY[0x242691FB8](v50, -1, -1);
        v51 = v47;
        v38 = v83;
        MEMORY[0x242691FB8](v51, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v39 = v81;
      (*(void (**)(char *, _QWORD *))(*(v81 - 1) + 8))(v19, v81);
      a5 = v82;
      if (!a1)
      {
LABEL_21:
        sub_24126958C(v38, (uint64_t)v17);
        if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, (uint64_t)v39) == 1)
        {
          sub_2412695E8((uint64_t)v17, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8]);
        }
        else
        {
          v83 = a3;
          swift_bridgeObjectRetain_n();
          v57 = sub_2412A8750();
          v58 = sub_2412A89C0();
          if (os_log_type_enabled(v57, v58))
          {
            v59 = swift_slowAlloc();
            v82 = (_QWORD *)swift_slowAlloc();
            v87[0] = (uint64_t)v82;
            *(_DWORD *)v59 = 136315394;
            v84 = a6;
            v81 = (_QWORD *)(v59 + 4);
            v60 = sub_2412A8DD4();
            v86 = sub_24125FA14(v60, v61, v87);
            sub_2412A8A44();
            swift_bridgeObjectRelease();
            *(_WORD *)(v59 + 12) = 2080;
            swift_bridgeObjectRetain();
            v86 = sub_24125FA14(v83, a4, v87);
            a6 = v84;
            sub_2412A8A44();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_24125A000, v57, v58, "[%s] loadRemoteArtwork<%s> - could not retrieve source data from image", (uint8_t *)v59, 0x16u);
            v62 = v82;
            swift_arrayDestroy();
            MEMORY[0x242691FB8](v62, -1, -1);
            MEMORY[0x242691FB8](v59, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(char *, _QWORD *))(*(v39 - 1) + 8))(v17, v39);
        }
        sub_241269544();
        v42 = (void *)swift_allocError();
        v40 = 0;
        *v63 = 2;
        v41 = 0xF000000000000000;
        goto LABEL_28;
      }
    }
    v52 = objc_msgSend(a1, sel_CGImage);
    if (v52)
    {
      v53 = v52;
      v83 = v38;
      v54 = CGImageCopySourceData();
      if (v54)
      {
        v55 = (void *)v54;
        *(_OWORD *)v87 = xmmword_2412A9A30;
        sub_2412A86CC();

        v56 = v87[1];
        if ((unint64_t)v87[1] >> 60 != 15)
        {
          v81 = v53;
          v72 = a3;
          v73 = v87[0];
          type metadata accessor for ImageUtilities();
          v74 = (void (*)(os_log_t, NSObject *, _QWORD *))a5[9];
          v83 = v72;
          v42 = 0;
          v75 = sub_2412A1F24(v73, v56, v74, v72, a4);
          v77 = v76;

          sub_241268B74(v73, v56);
          v40 = v75;
          v41 = v77;
          goto LABEL_28;
        }
      }

      v38 = v83;
    }
    goto LABEL_21;
  }
  v20 = a2;
  if (qword_2571045A8 != -1)
    swift_once();
  v21 = sub_2412A875C();
  __swift_project_value_buffer(v21, (uint64_t)qword_257106E00);
  v22 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v23 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = sub_2412A8750();
  v25 = sub_2412A89C0();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = a3;
    v27 = swift_slowAlloc();
    v82 = (_QWORD *)swift_slowAlloc();
    v83 = swift_slowAlloc();
    v87[0] = v83;
    *(_DWORD *)v27 = 136315906;
    v28 = sub_2412A8DD4();
    v84 = a6;
    v86 = sub_24125FA14(v28, v29, v87);
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain();
    v86 = sub_24125FA14(v26, a4, v87);
    sub_2412A8A44();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 22) = 2112;
    v30 = a2;
    v31 = _swift_stdlib_bridgeErrorToNSError();
    v86 = v31;
    sub_2412A8A44();
    v32 = v82;
    *v82 = v31;

    *(_WORD *)(v27 + 32) = 2080;
    swift_retain();
    sub_2412639EC();
    v34 = v33;
    v36 = v35;
    swift_release();
    v86 = sub_24125FA14(v34, v36, v87);
    a6 = v84;
    sub_2412A8A44();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24125A000, v24, v25, "[%s] loadRemoteArtwork<%s> - Store artwork catalog failed with error: %@ for token: %s", (uint8_t *)v27, 0x2Au);
    sub_241269660(0, (unint64_t *)&qword_2571045E8, &qword_2571045F0);
    swift_arrayDestroy();
    MEMORY[0x242691FB8](v32, -1, -1);
    v37 = v83;
    swift_arrayDestroy();
    MEMORY[0x242691FB8](v37, -1, -1);
    MEMORY[0x242691FB8](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();

  }
  v40 = 0;
  v41 = 0xF000000000000000;
  v42 = a2;
LABEL_28:
  v64 = *(os_unfair_lock_s **)(a6 + 32);
  v65 = a2;
  swift_retain();
  os_unfair_lock_lock(v64 + 4);
  swift_release();
  swift_beginAccess();
  v66 = sub_2412690A4(a5);
  swift_endAccess();
  if (!v66)
    v66 = MEMORY[0x24BEE4AF8];
  v67 = *(os_unfair_lock_s **)(a6 + 32);
  swift_retain();
  os_unfair_lock_unlock(v67 + 4);
  swift_release();
  v68 = *(_QWORD *)(v66 + 16);
  if (v68)
  {
    v69 = v66 + 40;
    do
    {
      v70 = *(void (**)(uint64_t *, uint64_t *))(v69 - 8);
      v87[0] = v40;
      v87[1] = v41;
      v86 = (uint64_t)v42;
      swift_retain();
      v70(v87, &v86);
      swift_release();
      v69 += 16;
      --v68;
    }
    while (v68);
  }
  sub_241268B74(v40, v41);

  return swift_bridgeObjectRelease();
}

void sub_241268664(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  OUTLINED_FUNCTION_26_0();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  OUTLINED_FUNCTION_11_0();

}

id sub_2412686D0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  id v2;
  void *v3;
  id v4;
  os_unfair_lock_s *v5;

  v1 = *(os_unfair_lock_s **)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  swift_release();
  v2 = *(id *)(v0 + 24);
  v3 = (void *)sub_2412A8894();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  v5 = *(os_unfair_lock_s **)(v0 + 32);
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  return v4;
}

uint64_t sub_241268788()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t sub_2412687B4()
{
  sub_241268788();
  return swift_deallocClassInstance();
}

id sub_2412687D0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ArtworkCatalogDataSource()), sel_init);
  qword_257104890 = (uint64_t)result;
  return result;
}

uint64_t sub_241268800()
{
  return 0;
}

id sub_24126882C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkCatalogDataSource();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_241268880()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkCatalogDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_2412688B8(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  id v6;

  if (a2 >> 60 == 15)
  {
    v3 = 0;
  }
  else
  {
    v3 = (void *)sub_2412A86C0();
    sub_241268B74(a1, a2);
  }
  v6 = objc_msgSend(v2, sel_initWithProtobufData_, v3);

  return v6;
}

uint64_t sub_241268928()
{
  uint64_t v0;

  return sub_241263198(v0);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_241268948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257104838;
  if (!qword_257104838)
  {
    sub_241269054(255, &qword_257104830, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257104838);
  }
  return result;
}

uint64_t sub_2412689A0()
{
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_22_0();
  return swift_deallocObject();
}

uint64_t sub_2412689C4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t *v3;

  return sub_2412631CC(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t type metadata accessor for ArtworkToken()
{
  return objc_opt_self();
}

unint64_t sub_2412689F0()
{
  unint64_t result;

  result = qword_2571048A0;
  if (!qword_2571048A0)
  {
    result = MEMORY[0x242691F34](&unk_2412A9914, &type metadata for ArtworkToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571048A0);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_241268A50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2571048B0;
  if (!qword_2571048B0)
  {
    sub_241262124(255, &qword_2571048A8, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x242691F34](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2571048B0);
  }
  return result;
}

unint64_t sub_241268AC0()
{
  unint64_t result;

  result = qword_25437B290;
  if (!qword_25437B290)
  {
    result = MEMORY[0x242691F34](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25437B290);
  }
  return result;
}

unint64_t sub_241268AFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_2571048C0;
  if (!qword_2571048C0)
  {
    sub_241262124(255, &qword_2571048B8, MEMORY[0x24BDCDDE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = v1;
    v3 = sub_241268AC0();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE4AA8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_2571048C0);
  }
  return result;
}

uint64_t sub_241268B74(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24125F7B0(a1, a2);
  return a1;
}

void sub_241268B88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2412689F0();
    v7 = a3(a1, &type metadata for ArtworkToken.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_37_0();
}

unint64_t sub_241268BDC()
{
  unint64_t result;

  result = qword_25437B2F8;
  if (!qword_25437B2F8)
  {
    result = MEMORY[0x242691F34](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25437B2F8);
  }
  return result;
}

uint64_t sub_241268C18(uint64_t a1)
{
  return sub_24126459C(a1);
}

uint64_t sub_241268C20()
{
  OUTLINED_FUNCTION_14_0();
  swift_release();
  return swift_deallocObject();
}

void sub_241268C48(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_241264790(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(uint64_t, unint64_t, id))(v3 + 24));
}

void sub_241268C54(uint64_t a1, uint64_t a2)
{
  sub_24126984C(&qword_2571048D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkToken, (uint64_t)&protocol conformance descriptor for ArtworkToken);
}

uint64_t type metadata accessor for ArtworkLoader()
{
  return objc_opt_self();
}

uint64_t method lookup function for ArtworkLoader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ArtworkLoader.__allocating_init(artworkDataHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ArtworkLoader.update(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t method lookup function for ArtworkToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ArtworkToken.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ArtworkToken.equivalenceIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ArtworkToken.visualEquivalenceIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ArtworkToken.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ArtworkToken.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ArtworkToken.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ArtworkToken.loadImageData()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 184) + *(_QWORD *)(*(_QWORD *)v0 + 184));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_241268D88;
  return v4();
}

uint64_t sub_241268D88(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of ArtworkToken.loadImageData(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ArtworkToken.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t type metadata accessor for RoutingSessionArtworkDataSource()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ArtworkCatalogDataSource()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for ArtworkToken.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkToken.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_241268F14 + 4 * byte_2412A9631[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_241268F48 + 4 * byte_2412A962C[v4]))();
}

uint64_t sub_241268F48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241268F50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241268F58);
  return result;
}

uint64_t sub_241268F64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241268F6CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_241268F70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241268F78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArtworkToken.CodingKeys()
{
  return &type metadata for ArtworkToken.CodingKeys;
}

unint64_t sub_241268F98()
{
  unint64_t result;

  result = qword_257104C58;
  if (!qword_257104C58)
  {
    result = MEMORY[0x242691F34](&unk_2412A98EC, &type metadata for ArtworkToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257104C58);
  }
  return result;
}

unint64_t sub_241268FD8()
{
  unint64_t result;

  result = qword_257104C60;
  if (!qword_257104C60)
  {
    result = MEMORY[0x242691F34](&unk_2412A9824, &type metadata for ArtworkToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257104C60);
  }
  return result;
}

unint64_t sub_241269018()
{
  unint64_t result;

  result = qword_257104C68;
  if (!qword_257104C68)
  {
    result = MEMORY[0x242691F34](&unk_2412A984C, &type metadata for ArtworkToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257104C68);
  }
  return result;
}

void sub_241269054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_2412690A4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_24127C198(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  *v2 = 0x8000000000000000;
  sub_24126970C();
  sub_2412A8B28();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v4);
  type metadata accessor for ArtworkToken();
  sub_241269054(0, &qword_257104CA0, (uint64_t (*)(uint64_t))sub_2412697B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_24126984C(&qword_257104CB8, v7, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkToken, (uint64_t)&protocol conformance descriptor for ArtworkToken);
  sub_2412A8B34();
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2412691E0(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  sub_24126924C(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24126924C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_24127C198(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_24126970C();
  if ((sub_2412A8B28() & 1) == 0)
    goto LABEL_5;
  v11 = sub_24127C198(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    type metadata accessor for ArtworkToken();
    result = sub_2412A8D20();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = v13[7];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v14 + 8 * v9) = a1;
  }
  else
  {
    sub_241269348(v9, (uint64_t)a2, a1, v13);
    return swift_retain();
  }
  return result;
}

unint64_t sub_241269348(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_24126938C(uint64_t *a1, char a2, _QWORD **a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v6 = *a1;
  if (*a1)
  {
    v7 = *a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v7[7] + 8 * a4) = v6;
    }
    else
    {
      sub_241269348(a4, a5, v6, v7);
      swift_retain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    type metadata accessor for ArtworkToken();
    swift_arrayDestroy();
    sub_241269054(0, &qword_257104CA0, (uint64_t (*)(uint64_t))sub_2412697B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24126984C(&qword_257104CB8, v8, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkToken, (uint64_t)&protocol conformance descriptor for ArtworkToken);
    sub_2412A8B34();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_241269484(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_artworkURLTemplateData);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_2412A86D8();

  return v3;
}

uint64_t sub_2412694E4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_artworkURLString);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_2412A88A0();

  return v3;
}

unint64_t sub_241269544()
{
  unint64_t result;

  result = qword_257104C80;
  if (!qword_257104C80)
  {
    result = MEMORY[0x242691F34](&unk_2412A99DC, &type metadata for RoutingSessionArtworkDataSource.ArtworkError);
    atomic_store(result, (unint64_t *)&qword_257104C80);
  }
  return result;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_24126958C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241269054(0, (unint64_t *)&qword_257104C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE78D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2412695E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_241269054(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_241269628()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_28_0();
  return swift_deallocObject();
}

uint64_t sub_241269654(uint64_t a1, uint64_t a2)
{
  return sub_241269968(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2412679FC);
}

void sub_241269660(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_241261758(255, a3);
    v4 = sub_2412A8A38();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2412696B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257104C90)
  {
    v0 = sub_2412A8870();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257104C90);
  }
}

void sub_24126970C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_257104C98)
  {
    type metadata accessor for ArtworkToken();
    sub_241269054(255, &qword_257104CA0, (uint64_t (*)(uint64_t))sub_2412697B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24126984C(&qword_257104CB8, v0, (uint64_t (*)(uint64_t))type metadata accessor for ArtworkToken, (uint64_t)&protocol conformance descriptor for ArtworkToken);
    v1 = sub_2412A8B40();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_257104C98);
  }
}

unint64_t sub_2412697B4()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t, uint64_t);

  result = qword_257104CA8;
  if (!qword_257104CA8)
  {
    v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_241262124(255, &qword_2571048B8, MEMORY[0x24BDCDDE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_241269054(255, &qword_257104CB0, (uint64_t (*)(uint64_t))sub_241261974, v1);
    result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_257104CA8);
  }
  return result;
}

void sub_24126984C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x242691F34](a4, v6), a1);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_241269888()
{
  OUTLINED_FUNCTION_22_0();
  return swift_deallocObject();
}

uint64_t sub_2412698AC()
{
  OUTLINED_FUNCTION_14_0();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_28_0();
  return swift_deallocObject();
}

uint64_t sub_2412698D4(uint64_t a1, uint64_t a2)
{
  return sub_241269968(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24126656C);
}

void sub_2412698E0(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)sub_2412A8924();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setRequestedRemoteArtworkFormats_, v3);

}

uint64_t sub_241269938()
{
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_22_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_0();
  return swift_deallocObject();
}

uint64_t sub_24126995C(uint64_t a1, uint64_t a2)
{
  return sub_241269968(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_241265CDC);
}

uint64_t sub_241269968(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

void sub_24126997C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, a1[1], *a2);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412699A8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_contentItems);
  if (!v1)
    return 0;
  v2 = v1;
  sub_241261758(0, &qword_257104CE8);
  v3 = sub_2412A8930();

  return v3;
}

uint64_t sub_241269A14(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_remoteArtworks);

  if (!v2)
    return 0;
  sub_241261758(0, &qword_257104CF0);
  v3 = sub_2412A884C();

  return v3;
}

uint64_t sub_241269A98(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_imageData);

  if (!v2)
    return 0;
  v3 = sub_2412A86D8();

  return v3;
}

void sub_241269B04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257104CF8)
  {
    sub_241261974();
    v0 = sub_2412A896C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257104CF8);
  }
}

uint64_t sub_241269B68()
{
  uint64_t v0;
  uint64_t v1;

  sub_241269B04();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_241269BC8(uint64_t a1, unint64_t a2, void *a3)
{
  sub_241269B04();
  return sub_241264674(a1, a2, a3);
}

uint64_t sub_241269C1C()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_22_0();

  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 != 15)
    sub_24125F7B0(*(_QWORD *)(v0 + 40), v1);
  return swift_deallocObject();
}

void sub_241269C60()
{
  uint64_t v0;

  sub_241263418(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_241269C70(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24125E338(a1, a2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for RoutingSessionArtworkDataSource.ArtworkError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_241269CD0 + 4 * byte_2412A963B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_241269D04 + 4 * byte_2412A9636[v4]))();
}

uint64_t sub_241269D04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241269D0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241269D14);
  return result;
}

uint64_t sub_241269D20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241269D28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_241269D2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241269D34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingSessionArtworkDataSource.ArtworkError()
{
  return &type metadata for RoutingSessionArtworkDataSource.ArtworkError;
}

unint64_t sub_241269D54()
{
  unint64_t result;

  result = qword_257104D00;
  if (!qword_257104D00)
  {
    result = MEMORY[0x242691F34](&unk_2412A99B4, &type metadata for RoutingSessionArtworkDataSource.ArtworkError);
    atomic_store(result, (unint64_t *)&qword_257104D00);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return sub_2412A8CFC();
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_35(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_24125FA14(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_41_0(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_24125FA14(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return sub_2412A8CE4();
}

uint64_t sub_241269F60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 v4[18];

  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_11_0();
  sub_24126C29C(v1 + 48, (uint64_t)v4);
  sub_24126C354(v4);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_29();
  return sub_24126C29C((uint64_t)v4, a1);
}

uint64_t sub_241269FDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t result;

  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_11_0();
  v3 = *(_BYTE *)(v1 + 337);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_24_0();
  result = OUTLINED_FUNCTION_29();
  *a1 = v3;
  return result;
}

uint64_t sub_24126A028(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 v4;

  v2 = *a1;
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_7_0();
  if (v2 != *(unsigned __int8 *)(v1 + 337))
  {
    *(_BYTE *)(v1 + 337) = v2;
    v4 = v2;
    sub_24126B098(&v4);
  }
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_57_0();
  return swift_release();
}

uint64_t sub_24126A090()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_7_0();
  v1 = *(unsigned __int8 *)(v0 + 338);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_29();
  return v1;
}

uint64_t sub_24126A0D8(char a1)
{
  uint64_t v1;
  int v2;

  v2 = a1 & 1;
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_11_0();
  if (*(unsigned __int8 *)(v1 + 338) != v2)
  {
    *(_BYTE *)(v1 + 338) = v2;
    sub_24126B2A8();
  }
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_57_0();
  return OUTLINED_FUNCTION_17_1();
}

uint64_t sub_24126A12C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_7_0();
  v1 = *(_QWORD *)(v0 + 344);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_29();
  return v1;
}

uint64_t sub_24126A174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;

  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_11_0();
  v3 = *(_QWORD *)(v1 + 344);
  swift_bridgeObjectRetain();
  sub_241288EFC(a1, v3);
  v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    *(_QWORD *)(v1 + 344) = a1;
    OUTLINED_FUNCTION_8();
    swift_bridgeObjectRelease();
    sub_24126B438(a1);
  }
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_57_0();
  return OUTLINED_FUNCTION_17_1();
}

uint64_t sub_24126A1F8(const void *a1)
{
  uint64_t result;
  _BYTE v2[296];
  _BYTE v3[296];

  sub_2412612EC(a1, v3);
  OUTLINED_FUNCTION_35_0();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_2412612EC(v3, v2);
    sub_24126B740(v2);
    return OUTLINED_FUNCTION_29();
  }
  return result;
}

uint64_t sub_24126A260()
{
  uint64_t result;

  OUTLINED_FUNCTION_35_0();
  result = swift_weakLoadStrong();
  if (result)
    sub_24126B628();
  return result;
}

void sub_24126A2A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *oslog;

  if (!*(_QWORD *)(v0 + 360))
  {
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_41();
  sub_24125CFC8();
  OUTLINED_FUNCTION_29();
  if (!*(_QWORD *)(v0 + 360))
  {
LABEL_11:
    __break(1u);
    return;
  }
  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 376);
  v3 = *(_BYTE *)(v0 + 384);
  OUTLINED_FUNCTION_41();
  sub_24125E37C(v1, v2, v3);
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_20_1();
  if (v0)
  {
    sub_24125F7F4(v1, v2, v3);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_57();
    if (qword_257104598 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_36();
    __swift_project_value_buffer(v4, (uint64_t)qword_257106DD0);
    oslog = OUTLINED_FUNCTION_53_0();
    v5 = sub_2412A89CC();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_9();
      *(_DWORD *)v6 = 136315138;
      v7 = OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_36_1(v7, v8, v9, v10, v11);
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_85();
      _os_log_impl(&dword_24125A000, oslog, v5, "[%s] Failed to connect to MediaControl service.", v6, 0xCu);
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_13_1(oslog);
  }
  else
  {
    sub_24125F7F4(v1, v2, v3);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_25_1();
  }
}

void sub_24126A48C(uint64_t a1, unint64_t a2)
{
  sub_24126A4AC(a1, a2, 0x6000000000000000, "[%s] Session: %s interaction failed with error: %@");
}

void sub_24126A49C(uint64_t a1, unint64_t a2)
{
  sub_24126A4AC(a1, a2, 0x5000000000000000, "[%s] Item: %s interaction failed with error: %@");
}

void sub_24126A4AC(uint64_t a1, unint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *oslog;
  uint64_t v21;
  uint64_t v22[7];

  if (*(_QWORD *)(v4 + 360))
  {
    v22[0] = a1;
    v22[1] = a2;
    v22[2] = 0;
    v22[3] = 0;
    v22[5] = 0;
    v22[6] = 0;
    v22[4] = a3;
    swift_retain();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_20_1();
    if (v5)
    {
      swift_release();
      OUTLINED_FUNCTION_57();
      if (qword_257104598 != -1)
        swift_once();
      v9 = OUTLINED_FUNCTION_36();
      __swift_project_value_buffer(v9, (uint64_t)qword_257106DD0);
      OUTLINED_FUNCTION_22_1();
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_22_1();
      OUTLINED_FUNCTION_20();
      oslog = sub_2412A8750();
      v10 = sub_2412A89C0();
      if (os_log_type_enabled(oslog, v10))
      {
        v11 = OUTLINED_FUNCTION_9();
        v12 = (_QWORD *)OUTLINED_FUNCTION_9();
        v22[0] = OUTLINED_FUNCTION_9();
        *(_DWORD *)v11 = 136315650;
        v13 = OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_62_0(v13, v14, v15, v16, v17, v18, v19);
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2080;
        OUTLINED_FUNCTION_22_1();
        sub_24125FA14(a1, a2, v22);
        sub_2412A8A44();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v11 + 22) = 2112;
        OUTLINED_FUNCTION_20();
        v21 = _swift_stdlib_bridgeErrorToNSError();
        sub_2412A8A44();
        *v12 = v21;
        OUTLINED_FUNCTION_10();
        OUTLINED_FUNCTION_10();
        _os_log_impl(&dword_24125A000, oslog, v10, a4, (uint8_t *)v11, 0x20u);
        sub_2412601A0();
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_10();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_10();

    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_57();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_24126A754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  NSObject *oslog;
  uint64_t v21;

  if (*(_QWORD *)(v0 + 360))
  {
    swift_retain();
    OUTLINED_FUNCTION_143();
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_20_1();
    if (v1)
    {
      sub_24125F80C();
      swift_release();
      OUTLINED_FUNCTION_85();
      if (qword_257104598 != -1)
        swift_once();
      v2 = OUTLINED_FUNCTION_36();
      __swift_project_value_buffer(v2, (uint64_t)qword_257106DD0);
      OUTLINED_FUNCTION_143();
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_143();
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_20();
      oslog = sub_2412A8750();
      v3 = sub_2412A89C0();
      if (os_log_type_enabled(oslog, v3))
      {
        v4 = OUTLINED_FUNCTION_9();
        v19 = (_QWORD *)OUTLINED_FUNCTION_9();
        OUTLINED_FUNCTION_9();
        *(_DWORD *)v4 = 136315650;
        v5 = OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_62_0(v5, v6, v7, v8, v9, v10, v11);
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        *(_WORD *)(v4 + 12) = 2080;
        v12 = RoutingControl.description.getter();
        OUTLINED_FUNCTION_62_0(v12, v13, v14, v15, v16, v17, v18);
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        sub_24125F80C();
        OUTLINED_FUNCTION_85();
        sub_24125F80C();
        OUTLINED_FUNCTION_85();
        *(_WORD *)(v4 + 22) = 2112;
        OUTLINED_FUNCTION_20();
        v21 = _swift_stdlib_bridgeErrorToNSError();
        sub_2412A8A44();
        *v19 = v21;
        OUTLINED_FUNCTION_10();
        OUTLINED_FUNCTION_10();
        _os_log_impl(&dword_24125A000, oslog, v3, "[%s] Control: %s interaction failed with error: %@", (uint8_t *)v4, 0x20u);
        sub_2412601A0();
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_10();
      sub_24125F80C();
      OUTLINED_FUNCTION_85();
      sub_24125F80C();
      OUTLINED_FUNCTION_85();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_10();

    }
    else
    {
      sub_24125F80C();
      swift_release();
      OUTLINED_FUNCTION_85();
    }
  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_24126AAC8(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76[3];
  __int128 v77;
  __int128 v78;
  uint64_t v79;

  OUTLINED_FUNCTION_26_1(a1);
  v1 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_60();
  v2 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v2 + 16) = v1;
  OUTLINED_FUNCTION_31_0(v2);
  *(_QWORD *)(v3 + 72) = v4;
  type metadata accessor for ContinuousInteraction();
  v5 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_58_0(v5, v6, v7, v8, v9, v10, v11, v12);
  v13 = sub_241292F4C((uint64_t)sub_24126C3C0, v2);
  if (qword_257104598 != -1)
    swift_once();
  v14 = OUTLINED_FUNCTION_36();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_257106DD0);
  v23 = OUTLINED_FUNCTION_58_0(v15, v16, v17, v18, v19, v20, v21, v22);
  OUTLINED_FUNCTION_58_0(v23, v24, v25, v26, v27, v28, v29, v30);
  OUTLINED_FUNCTION_88();
  v31 = sub_2412A8750();
  v32 = sub_2412A89D8();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = OUTLINED_FUNCTION_9();
    v76[0] = OUTLINED_FUNCTION_9();
    *(_DWORD *)v33 = 136315394;
    v34 = v13[2];
    v35 = v13[3];
    swift_bridgeObjectRetain();
    sub_24125FA14(v34, v35, v76);
    OUTLINED_FUNCTION_56();
    sub_2412A8A44();
    OUTLINED_FUNCTION_7_0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    v72 = v76[2];
    v73 = v77;
    v74 = v78;
    v75 = v79;
    v36 = ContinuousRoutingControl.description.getter();
    v71 = sub_24125FA14(v36, v37, v76);
    OUTLINED_FUNCTION_34_0();
    v38 = swift_bridgeObjectRelease();
    v46 = OUTLINED_FUNCTION_42_0(v38, v39, v40, v41, v42, v43, v44, v45, v71, v72, v73, v74, v75, v76[0]);
    OUTLINED_FUNCTION_42_0(v46, v47, v48, v49, v50, v51, v52, v53);
    OUTLINED_FUNCTION_52(&dword_24125A000, v31, v32, "Begin continuous interaction: %s with control: %s", (uint8_t *)v33);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_5();
  }
  v54 = OUTLINED_FUNCTION_7_0();
  v62 = OUTLINED_FUNCTION_42_0(v54, v55, v56, v57, v58, v59, v60, v61);
  OUTLINED_FUNCTION_42_0(v62, v63, v64, v65, v66, v67, v68, v69);

  return v13;
}

uint64_t sub_24126ACF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_257104598 != -1)
      swift_once();
    v4 = sub_2412A875C();
    __swift_project_value_buffer(v4, (uint64_t)qword_257106DD0);
    sub_24126C3CC(a2);
    sub_24126C3CC(a2);
    v5 = sub_2412A8750();
    v6 = sub_2412A89D8();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = ContinuousRoutingControl.description.getter();
      sub_24125FA14(v9, v10, &v11);
      sub_2412A8A44();
      swift_bridgeObjectRelease();
      sub_24126C408(a2);
      sub_24126C408(a2);
      _os_log_impl(&dword_24125A000, v5, v6, "End continuous interaction with control: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242691FB8](v8, -1, -1);
      MEMORY[0x242691FB8](v7, -1, -1);
    }
    else
    {
      sub_24126C408(a2);
      sub_24126C408(a2);
    }

    return swift_release();
  }
  return result;
}

uint64_t sub_24126AEEC(_QWORD *a1)
{
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = (void (*)(uint64_t))a1[4];
  if (v2)
  {
    swift_retain();
    v3 = sub_241292F38(0, 0);
    v2(v3);
    OUTLINED_FUNCTION_2_0();
    return sub_24125CFB8(v4);
  }
  else
  {
    if (qword_257104598 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_36();
    __swift_project_value_buffer(v6, (uint64_t)qword_257106DD0);
    OUTLINED_FUNCTION_88();
    v7 = sub_2412A8750();
    v8 = sub_2412A89CC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)OUTLINED_FUNCTION_9();
      v12 = OUTLINED_FUNCTION_9();
      *(_DWORD *)v9 = 136315138;
      v10 = a1[2];
      v11 = a1[3];
      swift_bridgeObjectRetain();
      sub_24125FA14(v10, v11, &v12);
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_7_0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24125A000, v7, v8, "Continuous interaction: %s missing finalizer. Was this interaction ended multiple times?", v9, 0xCu);
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_2_0();
    return swift_release();
  }
}

void sub_24126B098(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  NSObject *oslog;
  uint64_t v17[7];

  if (*(_QWORD *)(v1 + 360))
  {
    v3 = *a1;
    v17[0] = *a1;
    memset(&v17[1], 0, 24);
    v17[5] = 0;
    v17[6] = 0;
    v17[4] = 0x2000000000000000;
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_20_1();
    if (v2)
    {
      swift_release();
      if (qword_257104598 != -1)
        swift_once();
      v4 = OUTLINED_FUNCTION_36();
      __swift_project_value_buffer(v4, (uint64_t)qword_257106DD0);
      OUTLINED_FUNCTION_53_0();
      v5 = OUTLINED_FUNCTION_55();
      if (os_log_type_enabled(oslog, v5))
      {
        v6 = OUTLINED_FUNCTION_9();
        v17[0] = OUTLINED_FUNCTION_9();
        *(_DWORD *)v6 = 136315394;
        v7 = OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_36_1(v7, v8, v9, v10, v11);
        sub_2412A8A44();
        swift_bridgeObjectRelease();
        *(_WORD *)(v6 + 12) = 2080;
        v12 = 0xE800000000000000;
        v13 = 0x6D7261776572702ELL;
        if (v3 != 1)
        {
          v13 = 0x656C69617465642ELL;
          v12 = 0xE900000000000064;
        }
        if (v3)
          v14 = v13;
        else
          v14 = 0x656C62617369642ELL;
        if (v3)
          v15 = v12;
        else
          v15 = 0xE900000000000064;
        sub_24125FA14(v14, v15, v17);
        OUTLINED_FUNCTION_34_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_52(&dword_24125A000, oslog, v5, "[%s] Error setting routing mode to: %s", (uint8_t *)v6);
        OUTLINED_FUNCTION_70();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_10_0(oslog);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_15();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_24126B2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *log;
  NSObject *loga;

  v2 = *(_QWORD *)(v0 + 360);
  if (v2)
  {
    OUTLINED_FUNCTION_43_1();
    OUTLINED_FUNCTION_20_1();
    if (v1)
    {
      swift_release();
      if (qword_257104598 != -1)
        swift_once();
      v3 = OUTLINED_FUNCTION_36();
      __swift_project_value_buffer(v3, (uint64_t)qword_257106DD0);
      OUTLINED_FUNCTION_53_0();
      v4 = OUTLINED_FUNCTION_55();
      if (OUTLINED_FUNCTION_40_1(v4, v5, v6, v7, v8, v9, v10, v11, log))
      {
        v12 = OUTLINED_FUNCTION_9();
        OUTLINED_FUNCTION_9();
        *(_DWORD *)v12 = 136315394;
        v13 = OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_36_1(v13, v14, v15, v16, v17);
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_57();
        *(_WORD *)(v12 + 12) = 1024;
        sub_2412A8A44();
        _os_log_impl(&dword_24125A000, loga, (os_log_type_t)v2, "[%s] Error setting UI presented to: %{BOOL}d", (uint8_t *)v12, 0x12u);
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_13_1(loga);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_25_1();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_24126B438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24[7];

  v3 = *(_QWORD *)(v1 + 360);
  if (v3)
  {
    v24[0] = a1;
    memset(&v24[1], 0, 24);
    OUTLINED_FUNCTION_43_1();
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_20_1();
    if (v2)
    {
      swift_release();
      OUTLINED_FUNCTION_85();
      if (qword_257104598 != -1)
        swift_once();
      v4 = OUTLINED_FUNCTION_36();
      __swift_project_value_buffer(v4, (uint64_t)qword_257106DD0);
      swift_bridgeObjectRetain_n();
      sub_2412A8750();
      v5 = OUTLINED_FUNCTION_55();
      if (OUTLINED_FUNCTION_40_1(v5, v6, v7, v8, v9, v10, v11, v12, v22))
      {
        v13 = OUTLINED_FUNCTION_9();
        v24[0] = OUTLINED_FUNCTION_9();
        *(_DWORD *)v13 = 136315394;
        v14 = OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_36_1(v14, v15, v16, v17, v18);
        OUTLINED_FUNCTION_34_0();
        OUTLINED_FUNCTION_57();
        *(_WORD *)(v13 + 12) = 2080;
        OUTLINED_FUNCTION_8();
        v19 = sub_2412A8990();
        v21 = v20;
        OUTLINED_FUNCTION_85();
        sub_24125FA14(v19, v21, v24);
        sub_2412A8A44();
        OUTLINED_FUNCTION_50_0();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_52(&dword_24125A000, v23, (os_log_type_t)v3, "[%s] Error setting expanded sessions to: %s", (uint8_t *)v13);
        OUTLINED_FUNCTION_70();
        OUTLINED_FUNCTION_5();
      }
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_10_0(v23);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_85();
      OUTLINED_FUNCTION_15();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_24126B628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[296];
  __n128 v47[18];

  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_7_0();
  sub_24126C380(v46);
  v0 = OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_54_0(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46[0]);
  sub_24126C354(v47);
  sub_24126A2A4();
  sub_24126B6B4();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_52_0();
}

void sub_24126B684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_39_1(v2, v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21,
      v22,
      v23,
      v24,
      v25,
      v26,
      v27,
      v28,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49);
    OUTLINED_FUNCTION_19_1((uint64_t)&off_251157AE0, *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v1 + 8), v11);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_47();
}

void sub_24126B6B4()
{
  uint64_t v0;
  const os_unfair_lock *v1;
  uint64_t v2;
  unsigned __int8 v3;

  OUTLINED_FUNCTION_1_1();
  os_unfair_lock_assert_owner(v1);
  OUTLINED_FUNCTION_7_0();
  if (*(_BYTE *)(v0 + 337))
  {
    v3 = *(_BYTE *)(v0 + 337);
    sub_24126B098(&v3);
  }
  if (*(_BYTE *)(v0 + 338) == 1)
    sub_24126B2A8();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 344) + 16))
  {
    v2 = OUTLINED_FUNCTION_8();
    sub_24126B438(v2);
    swift_bridgeObjectRelease();
  }
}

void sub_24126B740(const void *a1)
{
  char *v1;
  _BYTE v2[296];
  _BYTE v3[296];

  sub_2412612EC(a1, v2);
  sub_2412612EC(v2, v3);
  v1 = (char *)sub_24126B790 + 4 * byte_2412A9A50[sub_24126196C((uint64_t)v3)];
  __asm { BR              X10 }
}

#error "24126B79C: call analysis failed (funcsize=10)"

void sub_24126B7BC()
{
  __n128 v0;

  sub_24126C328(&v0);
  OUTLINED_FUNCTION_48();
}

void sub_24126B884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47[18];
  __n128 v48[18];

  sub_24126C29C(a1, (uint64_t)v47);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_7_0();
  v1 = OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_54_0(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47[0].n128_i8[0]);
  sub_24126C354(v47);
  sub_24126C354(v48);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_52_0();
}

void sub_24126B8E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_39_1(v2, v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21,
      v22,
      v23,
      v24,
      v25,
      v26,
      v27,
      v28,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49);
    OUTLINED_FUNCTION_19_1((uint64_t)&off_251157AE0, *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v1 + 8), v11);
    swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_47();
}

uint64_t sub_24126B918(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  __int128 v11;
  void (*v12)(uint64_t *, _UNKNOWN **, _OWORD *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  _OWORD v14[3];
  uint64_t v15;
  _BYTE v16[64];

  v3 = *v1;
  OUTLINED_FUNCTION_26_1((__n128 *)a1);
  v4 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_60();
  v5 = OUTLINED_FUNCTION_25();
  *(_QWORD *)(v5 + 16) = v4;
  v6 = OUTLINED_FUNCTION_31_0(v5);
  *(_QWORD *)(v7 + 72) = v8;
  *(_QWORD *)(v7 + 80) = v3;
  if (MEMORY[0x24269203C](v1 + 4, v6))
  {
    v9 = v1[5];
    ObjectType = swift_getObjectType();
    v11 = *(_OWORD *)(a1 + 16);
    v14[0] = *(_OWORD *)a1;
    v14[1] = v11;
    v14[2] = *(_OWORD *)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 48);
    v12 = *(void (**)(uint64_t *, _UNKNOWN **, _OWORD *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v9 + 24);
    sub_24126C1F8((uint64_t)v16);
    v12(v1, &off_251157AE0, v14, sub_24126C1E8, v5, ObjectType, v9);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_24126C1F8((uint64_t)v16);
  }
  return OUTLINED_FUNCTION_11_0();
}

uint64_t sub_24126BA14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (*(_QWORD *)(result + 360))
    {
      v8 = a3[1];
      v9 = *a3;
      v10 = v8;
      v11 = v5;
      v12 = v4;
      v14 = 0;
      v15 = 0;
      v13 = v6 | 0x7000000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24125E37C(v5, v4, v6);
      sub_24125DD1C();
      swift_bridgeObjectRelease();
      sub_24125F7F4(v5, v4, v6);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_24126BDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;

  if (MEMORY[0x24269203C](v3 + 32))
  {
    v7 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType();
    v9 = 16;
    if (!a3)
      v9 = 8;
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + v9))(v3, &off_251157AE0, a1, a2, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_48();
  }
}

void sub_24126BE44()
{
  OUTLINED_FUNCTION_52_0();
}

uint64_t sub_24126BE70(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  if (result)
  {
    v6 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, &off_251157AE0, v5, v3, v4, v1, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24126BEE4()
{
  uint64_t v0;
  __n128 v2[19];

  sub_24126C444(v0 + 16);
  sub_24126C444(v0 + 32);
  sub_24126C29C(v0 + 48, (uint64_t)v2);
  sub_24126C354(v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_24125F7F4(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376), *(_BYTE *)(v0 + 384));
  OUTLINED_FUNCTION_85();
  return v0;
}

uint64_t sub_24126BF60()
{
  sub_24126BEE4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DistantRoutingSessionsDataSource()
{
  return objc_opt_self();
}

uint64_t sub_24126BFA4()
{
  uint64_t v0;

  return MEMORY[0x24269203C](v0 + 16);
}

uint64_t sub_24126BFC0()
{
  uint64_t v0;

  return MEMORY[0x24269203C](v0 + 32);
}

uint64_t sub_24126BFE0(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return sub_24126A028(&v2);
}

uint64_t (*sub_24126C008(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_241269FDC((_BYTE *)(a1 + 8));
  return sub_24126C03C;
}

uint64_t sub_24126C03C(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v4;
  char v5;

  if ((a2 & 1) != 0)
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  else
  {
    v5 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v5;
  }
  return sub_24126A028(v2);
}

uint64_t (*sub_24126C088(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_24126A090() & 1;
  return sub_24126C0C0;
}

uint64_t sub_24126C0C0(uint64_t a1)
{
  return sub_24126A0D8(*(_BYTE *)(a1 + 8));
}

uint64_t (*sub_24126C0EC(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_24126A12C();
  return sub_24126C120;
}

uint64_t sub_24126C120(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return sub_24126A174(*a1);
  v2 = OUTLINED_FUNCTION_8();
  sub_24126A174(v2);
  return OUTLINED_FUNCTION_27_1();
}

uint64_t sub_24126C16C(_QWORD *a1)
{
  return sub_24126AEEC(a1);
}

uint64_t sub_24126C180()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24126C1A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24126C1E8(uint64_t a1)
{
  uint64_t v1;

  return sub_24126BA14(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + 24));
}

uint64_t sub_24126C1F8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24126C24C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24126C29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24126C2E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24126C2E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257104F78)
  {
    v0 = sub_2412A8A38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257104F78);
  }
}

void sub_24126C328(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;

  v1 = OUTLINED_FUNCTION_5_1(a1);
  OUTLINED_FUNCTION_11_1(v2, v3, v4, v5, v6, v7, v8, v9, v10, v1, v11, v12, v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_68();
}

void sub_24126C354(__n128 *a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD);
  __n128 v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;

  v1 = OUTLINED_FUNCTION_5_1(a1);
  OUTLINED_FUNCTION_11_1(v2, v3, v4, v5, v6, v7, v8, v9, v10, v1, v11, v12, v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_68();
}

void sub_24126C380(void *a1)
{
  bzero(a1, 0x121uLL);
}

uint64_t sub_24126C388()
{
  swift_release();
  sub_24125F80C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24126C3C0()
{
  uint64_t v0;

  return sub_24126ACF8(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_24126C3CC(uint64_t a1)
{
  OUTLINED_FUNCTION_143();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24126C408(uint64_t a1)
{
  sub_24125F80C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24126C444(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return swift_retain();
}

__n128 OUTLINED_FUNCTION_5_1(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_10_0(id a1)
{

}

uint64_t OUTLINED_FUNCTION_11_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>, __n128 a13@<Q3>, __n128 a14@<Q4>, __n128 a15@<Q5>, __n128 a16@<Q6>, __n128 a17@<Q7>)
{
  __int128 v17;
  __int128 v18;

  return a9(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_u64[0], a10.n128_u64[1], a11.n128_u64[0], a11.n128_u64[1], a12.n128_u64[0], a12.n128_u64[1], a13.n128_u64[0], a13.n128_u64[1], a14.n128_u64[0], a14.n128_u64[1], a15.n128_u64[0],
           a15.n128_u64[1],
           a16.n128_u64[0],
           a16.n128_u64[1],
           a17.n128_u64[0],
           a17.n128_u64[1],
           v17,
           *((_QWORD *)&v17 + 1),
           v18,
           *((_QWORD *)&v18 + 1));
}

void OUTLINED_FUNCTION_13_1(id a1)
{

}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_19_1@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, char *, uint64_t, uint64_t)@<X8>, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  va_list va;

  va_start(va, a3);
  return a2(v3, a1, va, v5, v4);
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return sub_24125DD1C();
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_24_0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

__n128 OUTLINED_FUNCTION_26_1(__n128 *a1)
{
  return a1[2];
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_29_0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

__n128 OUTLINED_FUNCTION_31_0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 40) = v2;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_35_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_36_1(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_24125FA14(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  uint64_t v0;

  return sub_24126C29C(v0 + 48, (uint64_t)&STACK[0x258]);
}

void OUTLINED_FUNCTION_38_1(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

}

uint64_t OUTLINED_FUNCTION_39_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  return sub_24126C29C((uint64_t)&a47, (uint64_t)&a10);
}

BOOL OUTLINED_FUNCTION_40_1(os_log_type_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, os_log_t oslog)
{
  return os_log_type_enabled(oslog, a1);
}

void OUTLINED_FUNCTION_41_1()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

uint64_t OUTLINED_FUNCTION_42_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_24126C408((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return nullsub_1(&STACK[0x378]);
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_52_0()
{
  JUMPOUT(0x24269203CLL);
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  return sub_2412A8750();
}

uint64_t OUTLINED_FUNCTION_54_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  uint64_t v47;

  return sub_24126C29C((uint64_t)&a47, v47);
}

uint64_t OUTLINED_FUNCTION_55()
{
  return sub_2412A89C0();
}

void OUTLINED_FUNCTION_57_0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t OUTLINED_FUNCTION_58_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_24126C3CC((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_60()
{
  return swift_weakInit();
}

void *OUTLINED_FUNCTION_61(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  return sub_2412612EC(&STACK[0x250], &a46);
}

uint64_t OUTLINED_FUNCTION_62_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_24125FA14(a1, a2, (uint64_t *)va);
}

uint64_t IPCMessage.init(message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _DWORD *a5@<X8>)
{
  int v10;
  qos_class_t v11;
  char *v12;

  v10 = MSVGetCurrentThreadPriority();
  v11 = qos_class_self();
  *a5 = v10;
  a5[1] = v11;
  v12 = (char *)a5 + *(int *)(type metadata accessor for IPCMessage(0, a2, a3, a4) + 44);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v12, a1, a2);
}

uint64_t type metadata accessor for IPCMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IPCMessage);
}

void sub_24126C788(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_46_0();
  sub_241263B80(a1);
  OUTLINED_FUNCTION_62_1();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_24126C7BC()
{
  sub_2412A8D5C();
  sub_2412A88B8();
  return sub_2412A8D98();
}

void sub_24126C808()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void sub_24126C830()
{
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void sub_24126C858(uint64_t a1, unsigned __int8 a2)
{
  OUTLINED_FUNCTION_69_0();
  sub_241263B80(a2);
  OUTLINED_FUNCTION_62_1();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_24126C88C()
{
  sub_2412A8D5C();
  sub_2412A88B8();
  return sub_2412A8D98();
}

__n128 IPCConnectMessage.init(configuration:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unint64_t v4;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  v3 = a1[1].n128_u8[1];
  v4 = a1[1].n128_u64[1];
  result = *a1;
  *a2 = *a1;
  a2[1].n128_u8[0] = v2;
  a2[1].n128_u8[1] = v3;
  a2[1].n128_u64[1] = v4;
  return result;
}

MediaControl::InteractWithItemMessage __swiftcall InteractWithItemMessage.init(itemIdentifier:)(MediaControl::InteractWithItemMessage itemIdentifier)
{
  MediaControl::InteractWithItemMessage *v1;

  *v1 = itemIdentifier;
  return itemIdentifier;
}

__n128 InteractWithControlMessage.init(control:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unint64_t v4;
  unint64_t v5;
  __n128 result;

  v2 = a1->n128_u8[8];
  v3 = a1[2].n128_u8[0];
  v4 = a1[2].n128_u64[1];
  v5 = a1[3].n128_u64[0];
  a2->n128_u64[0] = a1->n128_u64[0];
  a2->n128_u8[8] = v2;
  result = a1[1];
  a2[1] = result;
  a2[2].n128_u8[0] = v3;
  a2[2].n128_u64[1] = v4;
  a2[3].n128_u64[0] = v5;
  return result;
}

MediaControl::SetRoutingModeMessage __swiftcall SetRoutingModeMessage.init(routingMode:)(MediaControl::SetRoutingModeMessage routingMode)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)routingMode.routingMode;
  return routingMode;
}

MediaControl::SetUIPresentedStateMessage __swiftcall SetUIPresentedStateMessage.init(isPresented:)(MediaControl::SetUIPresentedStateMessage isPresented)
{
  MediaControl::SetUIPresentedStateMessage *v1;

  v1->isPresented = isPresented.isPresented;
  return isPresented;
}

uint64_t SetExpandedSessionsStateMessage.init(expandedSessionIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

__n128 InteractWithDialogMessage.init(dialogIdentifier:action:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4;
  __n128 result;

  v4 = a3[1].n128_u8[0];
  a4->n128_u64[0] = a1;
  a4->n128_u64[1] = a2;
  result = *a3;
  a4[1] = *a3;
  a4[2].n128_u8[0] = v4;
  return result;
}

double IPCMessage.priority.getter@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t IPCMessage.message.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

BOOL sub_24126C988(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24126C998()
{
  return sub_2412A8D68();
}

uint64_t sub_24126C9BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x797469726F697270 && a2 == 0xE800000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24126CAA8()
{
  return 2;
}

uint64_t sub_24126CAB0()
{
  sub_2412A8D5C();
  sub_2412A8D68();
  return sub_2412A8D98();
}

uint64_t sub_24126CAF4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6567617373656DLL;
  else
    return 0x797469726F697270;
}

BOOL sub_24126CB2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24126C988(*a1, *a2);
}

uint64_t sub_24126CB44()
{
  return sub_24126CAB0();
}

uint64_t sub_24126CB58()
{
  return sub_24126C998();
}

uint64_t sub_24126CB6C()
{
  sub_2412A8D5C();
  sub_24126C998();
  return sub_2412A8D98();
}

uint64_t sub_24126CBB4()
{
  char *v0;

  return sub_24126CAF4(*v0);
}

uint64_t sub_24126CBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126C9BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24126CBF8()
{
  return sub_241263B74();
}

uint64_t sub_24126CC20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24126CAA8();
  *a1 = result;
  return result;
}

uint64_t sub_24126CC50(uint64_t a1)
{
  MEMORY[0x242691F34](&unk_2412AC8E0, a1);
  return sub_2412A8DBC();
}

uint64_t sub_24126CC84(uint64_t a1)
{
  MEMORY[0x242691F34](&unk_2412AC8E0, a1);
  return sub_2412A8DC8();
}

void IPCMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  OUTLINED_FUNCTION_1_2();
  v17 = v0;
  v18 = v1;
  v3 = v2;
  v5 = v4;
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v15 = *(_QWORD *)(v3 + 32);
  v16 = v6;
  v8 = type metadata accessor for IPCMessage.CodingKeys(255, v6, v7, v15);
  MEMORY[0x242691F34](&unk_2412AC8E0, v8);
  v9 = *(_QWORD *)(sub_2412A8CD8() - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v14 - v11;
  OUTLINED_FUNCTION_37_2(v5, v5[3]);
  sub_2412A8DB0();
  v20 = 0;
  sub_24126CE00();
  v13 = v18;
  sub_2412A8CB4();
  if (!v13)
  {
    v19 = 1;
    sub_2412A8CB4();
  }
  OUTLINED_FUNCTION_13_2((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  OUTLINED_FUNCTION_0_1();
}

uint64_t type metadata accessor for IPCMessage.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IPCMessage.CodingKeys);
}

unint64_t sub_24126CE00()
{
  unint64_t result;

  result = qword_257104F80;
  if (!qword_257104F80)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for ExecutionPriority, &type metadata for ExecutionPriority);
    atomic_store(result, (unint64_t *)&qword_257104F80);
  }
  return result;
}

void IPCMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;

  OUTLINED_FUNCTION_1_2();
  v46 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v39 = v20;
  v38 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v41 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for IPCMessage.CodingKeys(255, v22, v23, v24);
  MEMORY[0x242691F34](&unk_2412AC8E0, v25);
  v45 = sub_2412A8C30();
  v40 = *(_QWORD *)(v45 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_84_0();
  v42 = v17;
  v43 = v15;
  v37 = type metadata accessor for IPCMessage(0, v17, v15, v13);
  v27 = *(_QWORD *)(v37 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v36 - v29;
  OUTLINED_FUNCTION_37_2(v19, v19[3]);
  v44 = v11;
  v31 = v46;
  sub_2412A8DA4();
  if (!v31)
  {
    v32 = v30;
    v46 = v27;
    v33 = v42;
    v34 = v41;
    v48 = 0;
    sub_24126D048();
    sub_2412A8C00();
    *(_QWORD *)v32 = a10;
    v47 = 1;
    sub_2412A8C00();
    OUTLINED_FUNCTION_124();
    v35 = v37;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v32[*(int *)(v37 + 44)], v34, v33);
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v39, v32, v35);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126D048()
{
  unint64_t result;

  result = qword_257104F88;
  if (!qword_257104F88)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for ExecutionPriority, &type metadata for ExecutionPriority);
    atomic_store(result, (unint64_t *)&qword_257104F88);
  }
  return result;
}

uint64_t sub_24126D084(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24126D114()
{
  return 0x696669746E656469;
}

void sub_24126D130(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  IPCMessage.init(from:)(a1, a2[2], a2[3], a2[4], a5, a6, a7, a8, vars0, vars8);
}

void sub_24126D150()
{
  IPCMessage.encode(to:)();
}

void sub_24126D168()
{
  sub_24127326C();
}

uint64_t sub_24126D188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126D084(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24126D1B0()
{
  sub_24126D22C();
  return sub_2412A8DBC();
}

uint64_t sub_24126D1D8()
{
  sub_24126D22C();
  return sub_2412A8DC8();
}

void TransportRoutingItem.encode(to:)()
{
  sub_241272968();
}

unint64_t sub_24126D22C()
{
  unint64_t result;

  result = qword_257104F98;
  if (!qword_257104F98)
  {
    result = MEMORY[0x242691F34](&unk_2412AC890, &type metadata for TransportRoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257104F98);
  }
  return result;
}

void TransportRoutingItem.init(from:)()
{
  sub_241272A54();
}

uint64_t sub_24126D294(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24126D310()
{
  return 0x736D657469;
}

void sub_24126D324()
{
  TransportRoutingItem.init(from:)();
}

void sub_24126D338()
{
  TransportRoutingItem.encode(to:)();
}

uint64_t sub_24126D350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126D294(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24126D378()
{
  sub_24126D49C();
  return sub_2412A8DBC();
}

uint64_t sub_24126D3A0()
{
  sub_24126D49C();
  return sub_2412A8DC8();
}

void TransportRoutingSession.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_34_1(v0, &qword_257104FA8, (uint64_t (*)(void))sub_24126D49C, v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_1();
  sub_24126D49C();
  OUTLINED_FUNCTION_23_0();
  sub_241262124(0, &qword_257104FB8, (uint64_t)&type metadata for TransportRoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_24126D608((uint64_t)&unk_257104FC0);
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126D49C()
{
  unint64_t result;

  result = qword_257104FB0;
  if (!qword_257104FB0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC840, &type metadata for TransportRoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257104FB0);
  }
  return result;
}

unint64_t sub_24126D4D8()
{
  unint64_t result;

  result = qword_257104FC8;
  if (!qword_257104FC8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for TransportRoutingItem, &type metadata for TransportRoutingItem);
    atomic_store(result, (unint64_t *)&qword_257104FC8);
  }
  return result;
}

void TransportRoutingSession.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_78_0(v12);
  OUTLINED_FUNCTION_15_0(v13, &qword_257104FD0, (uint64_t (*)(void))sub_24126D49C, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_0();
  sub_24126D49C();
  OUTLINED_FUNCTION_6_1();
  if (!v11)
  {
    sub_241262124(0, &qword_257104FB8, (uint64_t)&type metadata for TransportRoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24126D608((uint64_t)&unk_257104FD8);
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_7_1();
    *v16 = a10;
  }
  __swift_destroy_boxed_opaque_existential_0(v10);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_24126D608(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!OUTLINED_FUNCTION_112(a1))
  {
    v4 = v3;
    v5 = v2;
    sub_241262124(255, &qword_257104FB8, (uint64_t)&type metadata for TransportRoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v7 = v6;
    v8 = v5();
    atomic_store(MEMORY[0x242691F34](v4, v7, &v8), v1);
  }
  OUTLINED_FUNCTION_79();
}

unint64_t sub_24126D674()
{
  unint64_t result;

  result = qword_257104FE0;
  if (!qword_257104FE0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for TransportRoutingItem, &type metadata for TransportRoutingItem);
    atomic_store(result, (unint64_t *)&qword_257104FE0);
  }
  return result;
}

void sub_24126D6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TransportRoutingSession.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_24126D6C4()
{
  TransportRoutingSession.encode(to:)();
}

uint64_t TransportRoutingSessionUpdateMessage.init(snapshot:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[296];

  sub_24126C29C(a1, (uint64_t)v4);
  return sub_24126C29C((uint64_t)v4, a2);
}

uint64_t sub_24126D710(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x746F687370616E73 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24126D794()
{
  return 0x746F687370616E73;
}

uint64_t sub_24126D7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126D710(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24126D7D8()
{
  sub_24126D91C();
  return sub_2412A8DBC();
}

uint64_t sub_24126D800()
{
  sub_24126D91C();
  return sub_2412A8DC8();
}

void TransportRoutingSessionUpdateMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[304];

  OUTLINED_FUNCTION_1_2();
  v3 = v2;
  sub_241274E98(0, &qword_257104FE8, (uint64_t (*)(void))sub_24126D91C, (uint64_t)&type metadata for TransportRoutingSessionUpdateMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_49_1();
  sub_24126C29C(v0, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24126D91C();
  OUTLINED_FUNCTION_52_1();
  sub_24126C29C((uint64_t)v8, (uint64_t)&v7);
  sub_24126D958();
  sub_2412A8C6C();
  OUTLINED_FUNCTION_64_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126D91C()
{
  unint64_t result;

  result = qword_257104FF0;
  if (!qword_257104FF0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC7F0, &type metadata for TransportRoutingSessionUpdateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257104FF0);
  }
  return result;
}

unint64_t sub_24126D958()
{
  unint64_t result;

  result = qword_257104FF8;
  if (!qword_257104FF8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionSnapshot, &type metadata for RoutingSessionSnapshot);
    atomic_store(result, (unint64_t *)&qword_257104FF8);
  }
  return result;
}

void TransportRoutingSessionUpdateMessage.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _BYTE v6[64];
  _BYTE v7[296];
  uint64_t v8;

  OUTLINED_FUNCTION_1_2();
  v2 = v1;
  v5 = v3;
  sub_241274E98(0, &qword_257105000, (uint64_t (*)(void))sub_24126D91C, (uint64_t)&type metadata for TransportRoutingSessionUpdateMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_86_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24126D91C();
  OUTLINED_FUNCTION_66_0();
  if (!v0)
  {
    sub_24126DABC();
    sub_2412A8BB8();
    OUTLINED_FUNCTION_87_0();
    sub_24126C29C((uint64_t)&v8, (uint64_t)v6);
    sub_24126C29C((uint64_t)v6, (uint64_t)v7);
    OUTLINED_FUNCTION_120(v5, v7);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126DABC()
{
  unint64_t result;

  result = qword_257105008;
  if (!qword_257105008)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionSnapshot, &type metadata for RoutingSessionSnapshot);
    atomic_store(result, (unint64_t *)&qword_257105008);
  }
  return result;
}

void sub_24126DAF8()
{
  TransportRoutingSessionUpdateMessage.init(from:)();
}

void sub_24126DB0C()
{
  TransportRoutingSessionUpdateMessage.encode(to:)();
}

void __swiftcall PresentDialogMessage.init(dialog:)(MediaControl::PresentDialogMessage *__return_ptr retstr, MediaControl::RoutingDialog *dialog)
{
  void *object;
  void *rawValue;
  Swift::String_optional detailText;

  object = dialog->identifier._object;
  rawValue = dialog->actions._rawValue;
  retstr->dialog.identifier._countAndFlagsBits = dialog->identifier._countAndFlagsBits;
  retstr->dialog.identifier._object = object;
  detailText = dialog->detailText;
  retstr->dialog.titleText = dialog->titleText;
  retstr->dialog.detailText = detailText;
  retstr->dialog.actions._rawValue = rawValue;
}

uint64_t sub_24126DB3C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x676F6C616964 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24126DBB8()
{
  return 0x676F6C616964;
}

uint64_t sub_24126DBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126DB3C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24126DBF8()
{
  sub_24126DD10();
  return sub_2412A8DBC();
}

uint64_t sub_24126DC20()
{
  sub_24126DD10();
  return sub_2412A8DC8();
}

void PresentDialogMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_34_1(v0, &qword_257105010, (uint64_t (*)(void))sub_24126DD10, v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_18_1();
  sub_24126DD10();
  OUTLINED_FUNCTION_23_0();
  sub_24126DD4C();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126DD10()
{
  unint64_t result;

  result = qword_257105018;
  if (!qword_257105018)
  {
    result = MEMORY[0x242691F34](&unk_2412AC7A0, &type metadata for PresentDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105018);
  }
  return result;
}

unint64_t sub_24126DD4C()
{
  unint64_t result;

  result = qword_257105020;
  if (!qword_257105020)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingDialog, &type metadata for RoutingDialog);
    atomic_store(result, (unint64_t *)&qword_257105020);
  }
  return result;
}

void PresentDialogMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _QWORD v24[3];
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_71(v12);
  OUTLINED_FUNCTION_15_0(v13, &qword_257105028, (uint64_t (*)(void))sub_24126DD10, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v16 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v24 - v18;
  OUTLINED_FUNCTION_4_0();
  sub_24126DD10();
  OUTLINED_FUNCTION_10_1();
  if (!v11)
  {
    sub_24126DE78();
    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_13_2((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v20 = v24[2];
    v21 = v27;
    v22 = v25;
    v23 = v26;
    *(_QWORD *)a10 = v24[1];
    *(_QWORD *)(a10 + 8) = v20;
    *(_OWORD *)(a10 + 16) = v22;
    *(_OWORD *)(a10 + 32) = v23;
    *(_QWORD *)(a10 + 48) = v21;
  }
  __swift_destroy_boxed_opaque_existential_0(v10);
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126DE78()
{
  unint64_t result;

  result = qword_257105030;
  if (!qword_257105030)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingDialog, &type metadata for RoutingDialog);
    atomic_store(result, (unint64_t *)&qword_257105030);
  }
  return result;
}

void sub_24126DEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  PresentDialogMessage.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_24126DEC8()
{
  PresentDialogMessage.encode(to:)();
}

uint64_t InteractWithItemResultMessage.init(itemIdentifier:errorMessage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t sub_24126DEEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24126DFF4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727265;
  else
    return 0x6E6564496D657469;
}

uint64_t sub_24126E038()
{
  char *v0;

  return sub_24126DFF4(*v0);
}

uint64_t sub_24126E040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126DEEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24126E064()
{
  sub_24126E1B8();
  return sub_2412A8DBC();
}

uint64_t sub_24126E08C()
{
  sub_24126E1B8();
  return sub_2412A8DC8();
}

void InteractWithItemResultMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_48_0(v2, &qword_257105038, (uint64_t (*)(void))sub_24126E1B8, (uint64_t)&type metadata for InteractWithItemResultMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_37_2(v3, v3[3]);
  sub_24126E1B8();
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_80_0();
  sub_2412A8C78();
  if (!v0)
  {
    OUTLINED_FUNCTION_77_0();
    sub_24126E1F4();
    sub_2412A8C6C();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126E1B8()
{
  unint64_t result;

  result = qword_257105040;
  if (!qword_257105040)
  {
    result = MEMORY[0x242691F34](&unk_2412AC750, &type metadata for InteractWithItemResultMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105040);
  }
  return result;
}

unint64_t sub_24126E1F4()
{
  unint64_t result;

  result = qword_257105048;
  if (!qword_257105048)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for ErrorMessage, &type metadata for ErrorMessage);
    atomic_store(result, (unint64_t *)&qword_257105048);
  }
  return result;
}

void InteractWithItemResultMessage.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t *v10;
  void *v11;

  OUTLINED_FUNCTION_1_2();
  v10 = v1;
  OUTLINED_FUNCTION_15_0(v2, &qword_257105050, (uint64_t (*)(void))sub_24126E1B8, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_4_0();
  sub_24126E1B8();
  OUTLINED_FUNCTION_14_1();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_42_1();
    v7 = v6;
    OUTLINED_FUNCTION_77_0();
    v8 = sub_24126E36C();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_74_0();
    sub_2412A8BB8();
    OUTLINED_FUNCTION_16_1();
    if (v8)
    {
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_53_1();
    }
    else
    {
      v9 = v11;
      *v10 = v5;
      v10[1] = v7;
      v10[2] = (uint64_t)v11;
      OUTLINED_FUNCTION_53_1();

    }
    OUTLINED_FUNCTION_44_0();
  }
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126E36C()
{
  unint64_t result;

  result = qword_257105058;
  if (!qword_257105058)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for ErrorMessage, &type metadata for ErrorMessage);
    atomic_store(result, (unint64_t *)&qword_257105058);
  }
  return result;
}

void sub_24126E3A8()
{
  InteractWithItemResultMessage.init(from:)();
}

void sub_24126E3BC()
{
  InteractWithItemResultMessage.encode(to:)();
}

MediaControl::SessionTransitionMessage __swiftcall SessionTransitionMessage.init(sourceIdentifier:destinationIdentifier:)(Swift::String sourceIdentifier, Swift::String destinationIdentifier)
{
  Swift::String *v2;
  MediaControl::SessionTransitionMessage result;

  *v2 = sourceIdentifier;
  v2[1] = destinationIdentifier;
  result.destinationIdentifier = destinationIdentifier;
  result.sourceIdentifier = sourceIdentifier;
  return result;
}

uint64_t sub_24126E3DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002412B4BB0 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002412B4BD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_24126E4C4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000010;
}

unint64_t sub_24126E504()
{
  char *v0;

  return sub_24126E4C4(*v0);
}

uint64_t sub_24126E50C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126E3DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24126E530()
{
  sub_24126E67C();
  return sub_2412A8DBC();
}

uint64_t sub_24126E558()
{
  sub_24126E67C();
  return sub_2412A8DC8();
}

void SessionTransitionMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_48_0(v2, &qword_257105060, (uint64_t (*)(void))sub_24126E67C, (uint64_t)&type metadata for SessionTransitionMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_37_2(v3, v3[3]);
  sub_24126E67C();
  OUTLINED_FUNCTION_106();
  sub_2412A8DB0();
  OUTLINED_FUNCTION_80_0();
  sub_2412A8C78();
  if (!v0)
  {
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_80_0();
    sub_2412A8C78();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126E67C()
{
  unint64_t result;

  result = qword_257105068;
  if (!qword_257105068)
  {
    result = MEMORY[0x242691F34](&unk_2412AC700, &type metadata for SessionTransitionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105068);
  }
  return result;
}

void SessionTransitionMessage.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;

  OUTLINED_FUNCTION_1_2();
  v19 = v1;
  OUTLINED_FUNCTION_15_0(v2, &qword_257105070, (uint64_t (*)(void))sub_24126E67C, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - v7;
  OUTLINED_FUNCTION_4_0();
  sub_24126E67C();
  OUTLINED_FUNCTION_14_1();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    v9 = v19;
    v10 = OUTLINED_FUNCTION_42_1();
    v12 = v11;
    OUTLINED_FUNCTION_77_0();
    swift_bridgeObjectRetain();
    v13 = OUTLINED_FUNCTION_42_1();
    v15 = v14;
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    v17 = v13;
    OUTLINED_FUNCTION_24_1((uint64_t)v8, v16);
    *v9 = v10;
    v9[1] = v12;
    v9[2] = v17;
    v9[3] = v15;
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_53_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_0();
  }
  OUTLINED_FUNCTION_0_1();
}

void sub_24126E7EC()
{
  SessionTransitionMessage.init(from:)();
}

void sub_24126E800()
{
  SessionTransitionMessage.encode(to:)();
}

uint64_t IPCServerMessage.description.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24126E848
                                                            + 4 * byte_2412A9AF0[*(_QWORD *)(v0 + 32) >> 60]))(0x7463656E6E6F632ELL, 0xE800000000000000);
}

uint64_t sub_24126E848()
{
  return 0x79746F746F72702ELL;
}

uint64_t sub_24126E864()
{
  return 0x74756F527465732ELL;
}

uint64_t sub_24126E888()
{
  return 0x725049557465732ELL;
}

unint64_t sub_24126E8AC()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24126E928(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x7079746F746F7270 && a2 == 0xE900000000000065;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7463656E6E6F63 && a2 == 0xE700000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6974756F52746573 && a2 == 0xEE0065646F4D676ELL;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6572504955746573 && a2 == 0xEE006465746E6573;
        if (v8 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002412B4BF0 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000002412B4C10 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000002412B4C30 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x80000002412B4C50 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000002412B4C70)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          v9 = sub_2412A8CFC();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 8;
          else
            return 9;
        }
      }
    }
  }
}

uint64_t sub_24126ECEC()
{
  return 9;
}

uint64_t sub_24126ECF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24126ED2C + 4 * byte_2412A9AF9[a1]))(0x7079746F746F7270, 0xE900000000000065);
}

uint64_t sub_24126ED2C()
{
  return 0x7463656E6E6F63;
}

uint64_t sub_24126ED44()
{
  return 0x6974756F52746573;
}

uint64_t sub_24126ED68()
{
  return 0x6572504955746573;
}

unint64_t sub_24126ED8C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_24126EE04()
{
  unsigned __int8 *v0;

  return sub_24126ECF4(*v0);
}

uint64_t sub_24126EE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24126E928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24126EE30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24126ECEC();
  *a1 = result;
  return result;
}

uint64_t sub_24126EE54()
{
  sub_24126FAA4();
  return sub_2412A8DBC();
}

uint64_t sub_24126EE7C()
{
  sub_24126FAA4();
  return sub_2412A8DC8();
}

uint64_t sub_24126EEA8()
{
  sub_24126FA2C();
  return sub_2412A8DBC();
}

uint64_t sub_24126EED0()
{
  sub_24126FA2C();
  return sub_2412A8DC8();
}

uint64_t sub_24126EEF8()
{
  sub_24126F888();
  return sub_2412A8DBC();
}

uint64_t sub_24126EF20()
{
  sub_24126F888();
  return sub_2412A8DC8();
}

uint64_t sub_24126EF48()
{
  sub_24126F8C4();
  return sub_2412A8DBC();
}

uint64_t sub_24126EF70()
{
  sub_24126F8C4();
  return sub_2412A8DC8();
}

uint64_t sub_24126EF98()
{
  sub_24126F93C();
  return sub_2412A8DBC();
}

uint64_t sub_24126EFC0()
{
  sub_24126F93C();
  return sub_2412A8DC8();
}

uint64_t sub_24126EFE8()
{
  sub_24126F900();
  return sub_2412A8DBC();
}

uint64_t sub_24126F010()
{
  sub_24126F900();
  return sub_2412A8DC8();
}

uint64_t sub_24126F038()
{
  sub_24126FA68();
  return sub_2412A8DBC();
}

uint64_t sub_24126F060()
{
  sub_24126FA68();
  return sub_2412A8DC8();
}

uint64_t sub_24126F088()
{
  sub_24126F978();
  return sub_2412A8DBC();
}

uint64_t sub_24126F0B0()
{
  sub_24126F978();
  return sub_2412A8DC8();
}

uint64_t sub_24126F0D8()
{
  sub_24126F9F0();
  return sub_2412A8DBC();
}

uint64_t sub_24126F100()
{
  sub_24126F9F0();
  return sub_2412A8DC8();
}

uint64_t sub_24126F128()
{
  sub_24126F9B4();
  return sub_2412A8DBC();
}

uint64_t sub_24126F150()
{
  sub_24126F9B4();
  return sub_2412A8DC8();
}

void IPCServerMessage.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_1_2();
  a19 = v21;
  a20 = v22;
  v24 = (_QWORD *)v23;
  v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_27_2(v23, &qword_257105078, (uint64_t (*)(void))sub_24126F888, (uint64_t)&type metadata for IPCServerMessage.InteractWithControlCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_27_2(v27, &qword_257105088, (uint64_t (*)(void))sub_24126F8C4, (uint64_t)&type metadata for IPCServerMessage.InteractWithDialogCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v29);
  OUTLINED_FUNCTION_27_2(v30, &qword_257105098, (uint64_t (*)(void))sub_24126F900, (uint64_t)&type metadata for IPCServerMessage.InteractWithSessionCodingKeys);
  OUTLINED_FUNCTION_57_1(v31, (uint64_t)&a17);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v33);
  OUTLINED_FUNCTION_27_2(v34, &qword_2571050A8, (uint64_t (*)(void))sub_24126F93C, (uint64_t)&type metadata for IPCServerMessage.InteractWithItemCodingKeys);
  OUTLINED_FUNCTION_57_1(v35, (uint64_t)&a14);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v37);
  OUTLINED_FUNCTION_27_2(v38, &qword_2571050B8, (uint64_t (*)(void))sub_24126F978, (uint64_t)&type metadata for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys);
  OUTLINED_FUNCTION_57_1(v39, (uint64_t)&a11);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v41);
  OUTLINED_FUNCTION_27_2(v42, &qword_2571050C8, (uint64_t (*)(void))sub_24126F9B4, (uint64_t)&type metadata for IPCServerMessage.SetUIPresentedCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v44);
  OUTLINED_FUNCTION_27_2(v45, &qword_2571050D8, (uint64_t (*)(void))sub_24126F9F0, (uint64_t)&type metadata for IPCServerMessage.SetRoutingModeCodingKeys);
  OUTLINED_FUNCTION_57_1(v46, (uint64_t)&v58);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v48);
  OUTLINED_FUNCTION_27_2(v49, &qword_2571050E8, (uint64_t (*)(void))sub_24126FA2C, (uint64_t)&type metadata for IPCServerMessage.ConnectCodingKeys);
  OUTLINED_FUNCTION_57_1(v50, (uint64_t)&v57);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v52);
  OUTLINED_FUNCTION_27_2(v53, &qword_2571050F8, (uint64_t (*)(void))sub_24126FA68, (uint64_t)&type metadata for IPCServerMessage.PrototypeCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_49_1();
  sub_241274E98(0, &qword_257105108, (uint64_t (*)(void))sub_24126FAA4, (uint64_t)&type metadata for IPCServerMessage.CodingKeys, v25);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_41_2();
  v56 = *(_QWORD *)(v20 + 32);
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  sub_24126FAA4();
  sub_2412A8DB0();
  __asm { BR              X10 }
}

void sub_24126F4F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 144) = 0;
  v6 = *(_QWORD *)(v4 - 184);
  v5 = *(_QWORD *)(v4 - 176);
  sub_24125E338(v5, v6);
  sub_24126FA68();
  v7 = *(_QWORD *)(v4 - 160);
  sub_2412A8C3C();
  *(_QWORD *)(v4 - 144) = v5;
  *(_QWORD *)(v4 - 136) = v6;
  sub_24126FCC0();
  OUTLINED_FUNCTION_25_2();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
  OUTLINED_FUNCTION_13_2(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 168) + 8));
  sub_24125F6EC(v5, v6, *(_QWORD *)(v4 - 200), *(_QWORD *)(v4 - 192), v2);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24126F888()
{
  unint64_t result;

  result = qword_257105080;
  if (!qword_257105080)
  {
    result = MEMORY[0x242691F34](&unk_2412AC6B0, &type metadata for IPCServerMessage.InteractWithControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105080);
  }
  return result;
}

unint64_t sub_24126F8C4()
{
  unint64_t result;

  result = qword_257105090;
  if (!qword_257105090)
  {
    result = MEMORY[0x242691F34](&unk_2412AC660, &type metadata for IPCServerMessage.InteractWithDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105090);
  }
  return result;
}

unint64_t sub_24126F900()
{
  unint64_t result;

  result = qword_2571050A0;
  if (!qword_2571050A0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC610, &type metadata for IPCServerMessage.InteractWithSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571050A0);
  }
  return result;
}

unint64_t sub_24126F93C()
{
  unint64_t result;

  result = qword_2571050B0;
  if (!qword_2571050B0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC5C0, &type metadata for IPCServerMessage.InteractWithItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571050B0);
  }
  return result;
}

unint64_t sub_24126F978()
{
  unint64_t result;

  result = qword_2571050C0;
  if (!qword_2571050C0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC570, &type metadata for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571050C0);
  }
  return result;
}

unint64_t sub_24126F9B4()
{
  unint64_t result;

  result = qword_2571050D0;
  if (!qword_2571050D0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC520, &type metadata for IPCServerMessage.SetUIPresentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571050D0);
  }
  return result;
}

unint64_t sub_24126F9F0()
{
  unint64_t result;

  result = qword_2571050E0;
  if (!qword_2571050E0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC4D0, &type metadata for IPCServerMessage.SetRoutingModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571050E0);
  }
  return result;
}

unint64_t sub_24126FA2C()
{
  unint64_t result;

  result = qword_2571050F0;
  if (!qword_2571050F0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC480, &type metadata for IPCServerMessage.ConnectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571050F0);
  }
  return result;
}

unint64_t sub_24126FA68()
{
  unint64_t result;

  result = qword_257105100;
  if (!qword_257105100)
  {
    result = MEMORY[0x242691F34](&unk_2412AC430, &type metadata for IPCServerMessage.PrototypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105100);
  }
  return result;
}

unint64_t sub_24126FAA4()
{
  unint64_t result;

  result = qword_257105110;
  if (!qword_257105110)
  {
    result = MEMORY[0x242691F34](&unk_2412AC3E0, &type metadata for IPCServerMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105110);
  }
  return result;
}

unint64_t sub_24126FAE0()
{
  unint64_t result;

  result = qword_257105118;
  if (!qword_257105118)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithControlMessage, &type metadata for InteractWithControlMessage);
    atomic_store(result, (unint64_t *)&qword_257105118);
  }
  return result;
}

unint64_t sub_24126FB1C()
{
  unint64_t result;

  result = qword_257105120;
  if (!qword_257105120)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithDialogMessage, &type metadata for InteractWithDialogMessage);
    atomic_store(result, (unint64_t *)&qword_257105120);
  }
  return result;
}

unint64_t sub_24126FB58()
{
  unint64_t result;

  result = qword_257105128;
  if (!qword_257105128)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithSessionMessage, &type metadata for InteractWithSessionMessage);
    atomic_store(result, (unint64_t *)&qword_257105128);
  }
  return result;
}

unint64_t sub_24126FB94()
{
  unint64_t result;

  result = qword_257105130;
  if (!qword_257105130)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithItemMessage, &type metadata for InteractWithItemMessage);
    atomic_store(result, (unint64_t *)&qword_257105130);
  }
  return result;
}

unint64_t sub_24126FBD0()
{
  unint64_t result;

  result = qword_257105138;
  if (!qword_257105138)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SetExpandedSessionsStateMessage, &type metadata for SetExpandedSessionsStateMessage);
    atomic_store(result, (unint64_t *)&qword_257105138);
  }
  return result;
}

unint64_t sub_24126FC0C()
{
  unint64_t result;

  result = qword_257105140;
  if (!qword_257105140)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SetUIPresentedStateMessage, &type metadata for SetUIPresentedStateMessage);
    atomic_store(result, (unint64_t *)&qword_257105140);
  }
  return result;
}

unint64_t sub_24126FC48()
{
  unint64_t result;

  result = qword_257105148;
  if (!qword_257105148)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SetRoutingModeMessage, &type metadata for SetRoutingModeMessage);
    atomic_store(result, (unint64_t *)&qword_257105148);
  }
  return result;
}

unint64_t sub_24126FC84()
{
  unint64_t result;

  result = qword_257105150;
  if (!qword_257105150)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCConnectMessage, &type metadata for IPCConnectMessage);
    atomic_store(result, (unint64_t *)&qword_257105150);
  }
  return result;
}

unint64_t sub_24126FCC0()
{
  unint64_t result;

  result = qword_257105158;
  if (!qword_257105158)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for PrototypeMessage, &type metadata for PrototypeMessage);
    atomic_store(result, (unint64_t *)&qword_257105158);
  }
  return result;
}

void IPCServerMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD v84[3];
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;

  OUTLINED_FUNCTION_1_2();
  a19 = v22;
  a20 = v23;
  v25 = (_QWORD *)v24;
  v109 = v26;
  OUTLINED_FUNCTION_12_0(v24, &qword_257105160, (uint64_t (*)(void))sub_24126F888, (uint64_t)&type metadata for IPCServerMessage.InteractWithControlCodingKeys);
  v100 = v27;
  v94 = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_20_2();
  v108 = v29;
  OUTLINED_FUNCTION_12_0(v30, &qword_257105168, (uint64_t (*)(void))sub_24126F8C4, (uint64_t)&type metadata for IPCServerMessage.InteractWithDialogCodingKeys);
  v99 = v31;
  v93 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_20_2();
  v106 = v33;
  OUTLINED_FUNCTION_12_0(v34, &qword_257105170, (uint64_t (*)(void))sub_24126F900, (uint64_t)&type metadata for IPCServerMessage.InteractWithSessionCodingKeys);
  v98 = v35;
  v92 = *(_QWORD *)(v35 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_20_2();
  v107 = v37;
  OUTLINED_FUNCTION_12_0(v38, &qword_257105178, (uint64_t (*)(void))sub_24126F93C, (uint64_t)&type metadata for IPCServerMessage.InteractWithItemCodingKeys);
  v97 = v39;
  v91 = *(_QWORD *)(v39 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_20_2();
  v105 = v41;
  OUTLINED_FUNCTION_12_0(v42, &qword_257105180, (uint64_t (*)(void))sub_24126F978, (uint64_t)&type metadata for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys);
  OUTLINED_FUNCTION_57_1(v43, (uint64_t)&a18);
  v90 = v44;
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_20_2();
  v104 = v46;
  OUTLINED_FUNCTION_12_0(v47, &qword_257105188, (uint64_t (*)(void))sub_24126F9B4, (uint64_t)&type metadata for IPCServerMessage.SetUIPresentedCodingKeys);
  OUTLINED_FUNCTION_57_1(v48, (uint64_t)&a17);
  v89 = v49;
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_20_2();
  v103 = v51;
  OUTLINED_FUNCTION_12_0(v52, &qword_257105190, (uint64_t (*)(void))sub_24126F9F0, (uint64_t)&type metadata for IPCServerMessage.SetRoutingModeCodingKeys);
  v96 = v53;
  v88 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_20_2();
  v102 = v55;
  OUTLINED_FUNCTION_12_0(v56, &qword_257105198, (uint64_t (*)(void))sub_24126FA2C, (uint64_t)&type metadata for IPCServerMessage.ConnectCodingKeys);
  OUTLINED_FUNCTION_57_1(v57, (uint64_t)&a15);
  v87 = v58;
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_20_2();
  v101 = v60;
  OUTLINED_FUNCTION_12_0(v61, &qword_2571051A0, (uint64_t (*)(void))sub_24126FA68, (uint64_t)&type metadata for IPCServerMessage.PrototypeCodingKeys);
  v95 = v62;
  v63 = *(_QWORD *)(v62 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_81(v65, &qword_2571051A8, (uint64_t (*)(void))sub_24126FAA4);
  v67 = v66;
  v68 = *(_QWORD *)(v66 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v69);
  v71 = (char *)v84 - v70;
  v72 = v25[3];
  v110 = v25;
  __swift_project_boxed_opaque_existential_1(v25, v72);
  sub_24126FAA4();
  sub_2412A8DA4();
  if (!v20)
  {
    v84[2] = v21;
    v84[1] = v63;
    v86 = v68;
    v73 = sub_2412A8C24();
    v74 = *(_QWORD *)(v73 + 16);
    if (v74)
    {
      v85 = v71;
      v75 = v67;
      v76 = *(unsigned __int8 *)(v73 + 32);
      sub_24127AA7C(1, v74, v73, v73 + 32, 0, (2 * v74) | 1);
      v78 = v77;
      v80 = v79;
      swift_bridgeObjectRelease();
      if (v78 == v80 >> 1)
        __asm { BR              X9 }
      v67 = v75;
      v71 = v85;
    }
    v81 = sub_2412A8AF8();
    OUTLINED_FUNCTION_12();
    v83 = v82;
    sub_2412741B0();
    *v83 = &type metadata for IPCServerMessage;
    sub_2412A8B88();
    OUTLINED_FUNCTION_88_0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v81 - 8) + 104))(v83, *MEMORY[0x24BEE26D0], v81);
    swift_willThrow();
    OUTLINED_FUNCTION_33_0();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v71, v67);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v110);
  OUTLINED_FUNCTION_0_1();
}

#error "2412706B4: call analysis failed (funcsize=5)"

#error "2412706C8: call analysis failed (funcsize=5)"

void IPCClientMessage.description.getter()
{
  const void *v0;
  char *v1;
  _BYTE v2[296];
  _BYTE v3[296];

  sub_2412612EC(v0, v2);
  sub_2412612EC(v2, v3);
  v1 = (char *)sub_241270744 + 4 * byte_2412A9B26[sub_24126196C((uint64_t)v3)];
  __asm { BR              X10 }
}

void sub_241270744()
{
  uint64_t v0;

  nullsub_1(&v0);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_2412707B0(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v6;

  if (a1 == 0xD000000000000015 && a2 == 0x80000002412B4C90 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x44746E6573657270 && a2 == 0xED0000676F6C6169;
    if (v5 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x80000002412B4CB0 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000002412B4CD0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v6 = sub_2412A8CFC();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_241270974()
{
  return 4;
}

void sub_24127097C()
{
  OUTLINED_FUNCTION_46_0();
  sub_2412A8D68();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_2412709AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2412709E8 + 4 * byte_2412A9B2A[a1]))(0xD000000000000015, 0x80000002412B4C90);
}

uint64_t sub_2412709E8()
{
  return 0x44746E6573657270;
}

uint64_t sub_241270A0C()
{
  uint64_t v0;

  return v0 + 5;
}

unint64_t sub_241270A24()
{
  return 0xD000000000000011;
}

uint64_t sub_241270A40()
{
  return 12383;
}

uint64_t sub_241270A4C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    OUTLINED_FUNCTION_85();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_241270AB4()
{
  sub_24127097C();
}

void sub_241270ACC()
{
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_241270AF4()
{
  unsigned __int8 *v0;

  return sub_2412709AC(*v0);
}

uint64_t sub_241270AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412707B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241270B20@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241270974();
  *a1 = result;
  return result;
}

uint64_t sub_241270B44()
{
  sub_241274564();
  return sub_2412A8DBC();
}

uint64_t sub_241270B6C()
{
  sub_241274564();
  return sub_2412A8DC8();
}

uint64_t sub_241270B94()
{
  sub_2412744B0();
  return sub_2412A8DBC();
}

uint64_t sub_241270BBC()
{
  sub_2412744B0();
  return sub_2412A8DC8();
}

uint64_t sub_241270BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241270A4C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_241270C0C()
{
  sub_2412744EC();
  return sub_2412A8DBC();
}

uint64_t sub_241270C34()
{
  sub_2412744EC();
  return sub_2412A8DC8();
}

uint64_t sub_241270C5C()
{
  sub_241274474();
  return sub_2412A8DBC();
}

uint64_t sub_241270C84()
{
  sub_241274474();
  return sub_2412A8DC8();
}

uint64_t sub_241270CAC()
{
  sub_241274528();
  return sub_2412A8DBC();
}

uint64_t sub_241270CD4()
{
  sub_241274528();
  return sub_2412A8DC8();
}

void IPCClientMessage.encode(to:)()
{
  const void *v0;
  const void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE v14[296];
  _BYTE v15[304];

  OUTLINED_FUNCTION_1_2();
  v1 = v0;
  v3 = (_QWORD *)v2;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_59_1(v2, &qword_257105208, (uint64_t (*)(void))sub_241274474, (uint64_t)&type metadata for IPCClientMessage.SessionTransitionCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_59_1(v6, &qword_257105218, (uint64_t (*)(void))sub_2412744B0, (uint64_t)&type metadata for IPCClientMessage.InteractWithItemResultCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_59_1(v8, &qword_257105228, (uint64_t (*)(void))sub_2412744EC, (uint64_t)&type metadata for IPCClientMessage.PresentDialogCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_59_1(v10, &qword_257105238, (uint64_t (*)(void))sub_241274528, (uint64_t)&type metadata for IPCClientMessage.UpdateRoutingSnapshotCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_86_0();
  sub_241274E98(0, &qword_257105248, (uint64_t (*)(void))sub_241274564, (uint64_t)&type metadata for IPCClientMessage.CodingKeys, v4);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_49_1();
  sub_2412612EC(v1, v14);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_241274564();
  sub_2412A8DB0();
  sub_2412612EC(v14, v15);
  v13 = (char *)sub_241270EF0 + 4 * byte_2412A9B2E[sub_24126196C((uint64_t)v15)];
  __asm { BR              X10 }
}

void sub_241270EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  v3 = (const void *)nullsub_1(v0 + 1008);
  *(_BYTE *)(v0 + 120) = 0;
  v4 = OUTLINED_FUNCTION_119();
  sub_2412746DC(v4);
  sub_241274528();
  OUTLINED_FUNCTION_60_0();
  OUTLINED_FUNCTION_120((void *)(v0 + 120), v3);
  sub_241274764();
  OUTLINED_FUNCTION_43_2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 8))(v2, v1);
  v5 = OUTLINED_FUNCTION_108();
  v6(v5);
  sub_241274618(v0 + 712);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void IPCClientMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_12_0(v2, &qword_257105278, (uint64_t (*)(void))sub_241274474, (uint64_t)&type metadata for IPCClientMessage.SessionTransitionCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_12_0(v5, &qword_257105280, (uint64_t (*)(void))sub_2412744B0, (uint64_t)&type metadata for IPCClientMessage.InteractWithItemResultCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_12_0(v7, &qword_257105288, (uint64_t (*)(void))sub_2412744EC, (uint64_t)&type metadata for IPCClientMessage.PresentDialogCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_12_0(v9, &qword_257105290, (uint64_t (*)(void))sub_241274528, (uint64_t)&type metadata for IPCClientMessage.UpdateRoutingSnapshotCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_81(v11, &qword_257105298, (uint64_t (*)(void))sub_241274564);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_49_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_241274564();
  sub_2412A8DA4();
  if (!v0)
  {
    v16 = v1;
    v17 = sub_2412A8C24();
    v18 = *(_QWORD *)(v17 + 16);
    v19 = v13;
    if (v18)
    {
      v28 = v1;
      v20 = *(unsigned __int8 *)(v17 + 32);
      sub_24127AA7C(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
      v22 = v21;
      v24 = v23;
      OUTLINED_FUNCTION_44_0();
      if (v22 == v24 >> 1)
        __asm { BR              X9 }
      v19 = v13;
      v16 = v28;
    }
    v25 = sub_2412A8AF8();
    OUTLINED_FUNCTION_12();
    v27 = v26;
    sub_2412741B0();
    *v27 = &type metadata for IPCClientMessage;
    sub_2412A8B88();
    OUTLINED_FUNCTION_88_0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v19);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  OUTLINED_FUNCTION_0_1();
}

void sub_241271744()
{
  IPCClientMessage.init(from:)();
}

void sub_241271758()
{
  IPCClientMessage.encode(to:)();
}

void PrototypeMessage.optionsData.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_76_0();
  sub_24125E338(v0, v1);
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void PrototypeMessage.init(options:)(uint64_t *a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_2412A8834();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v4 = objc_msgSend(v2, sel_dataWithJSONObject_options_error_, v3, 0, v10);

  v5 = v10[0];
  if (v4)
  {
    v6 = sub_2412A86D8();
    v8 = v7;

    *a1 = v6;
    a1[1] = v8;
  }
  else
  {
    v9 = v5;
    sub_2412A8684();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

uint64_t sub_2412718BC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x44736E6F6974706FLL && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_241271958()
{
  return 0x44736E6F6974706FLL;
}

uint64_t sub_24127197C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412718BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412719A4()
{
  sub_2412748BC();
  return sub_2412A8DBC();
}

uint64_t sub_2412719CC()
{
  sub_2412748BC();
  return sub_2412A8DC8();
}

void PrototypeMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_48_0(v0, &qword_2571052C0, (uint64_t (*)(void))sub_2412748BC, (uint64_t)&type metadata for PrototypeMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_18_1();
  sub_2412748BC();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_32_1();
  sub_241268AC0();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void PrototypeMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;

  OUTLINED_FUNCTION_1_2();
  v2 = v1;
  v7 = v3;
  OUTLINED_FUNCTION_15_0(v1, &qword_2571052D0, (uint64_t (*)(void))sub_2412748BC, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_0();
  sub_2412748BC();
  OUTLINED_FUNCTION_6_1();
  if (!v0)
  {
    sub_241268BDC();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_7_1();
    *v7 = v6;
  }
  __swift_destroy_boxed_opaque_existential_0(v2);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_241271B74()
{
  PrototypeMessage.init(from:)();
}

void sub_241271B88()
{
  PrototypeMessage.encode(to:)();
}

uint64_t IPCConnectMessage.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unsigned __int8 v6;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 17);
  v5 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v6 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  sub_24125E37C(v2, v3, v6);
  return OUTLINED_FUNCTION_45_1();
}

uint64_t sub_241271BD8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_241271C80()
{
  return 0x72756769666E6F63;
}

uint64_t sub_241271CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241271BD8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_241271CD0()
{
  sub_2412748F8();
  return sub_2412A8DBC();
}

uint64_t sub_241271CF8()
{
  sub_2412748F8();
  return sub_2412A8DC8();
}

void IPCConnectMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_48_0(v1, &qword_2571052D8, (uint64_t (*)(void))sub_2412748F8, (uint64_t)&type metadata for IPCConnectMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v4 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_18_1();
  sub_2412748F8();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_32_1();
  sub_241274934();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_30_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void IPCConnectMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  char v25;
  uint64_t v26;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_71(v12);
  OUTLINED_FUNCTION_15_0(v13, &qword_2571052F0, (uint64_t (*)(void))sub_2412748F8, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v16 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v23 - v18;
  OUTLINED_FUNCTION_4_0();
  sub_2412748F8();
  OUTLINED_FUNCTION_10_1();
  if (!v11)
  {
    sub_241274970();
    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_13_2((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v20 = v24;
    v21 = v25;
    v22 = v26;
    *(_OWORD *)a10 = v23;
    *(_BYTE *)(a10 + 16) = v20;
    *(_BYTE *)(a10 + 17) = v21;
    *(_QWORD *)(a10 + 24) = v22;
  }
  __swift_destroy_boxed_opaque_existential_0(v10);
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_241271EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  IPCConnectMessage.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_241271F0C()
{
  IPCConnectMessage.encode(to:)();
}

void SetRoutingModeMessage.routingMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_241271F2C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x4D676E6974756F72 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_241271FC8()
{
  return 0x4D676E6974756F72;
}

uint64_t sub_241271FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241271F2C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_241272014()
{
  sub_2412749AC();
  return sub_2412A8DBC();
}

uint64_t sub_24127203C()
{
  sub_2412749AC();
  return sub_2412A8DC8();
}

void SetRoutingModeMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_34_1(v0, &qword_257105300, (uint64_t (*)(void))sub_2412749AC, v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_18_1();
  sub_2412749AC();
  OUTLINED_FUNCTION_23_0();
  sub_2412749E8();
  sub_2412A8CB4();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void SetRoutingModeMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_78_0(v15);
  OUTLINED_FUNCTION_15_0(v16, &qword_257105318, (uint64_t (*)(void))sub_2412749AC, v17, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_4_0();
  sub_2412749AC();
  OUTLINED_FUNCTION_6_1();
  if (!v14)
  {
    sub_241274A24();
    OUTLINED_FUNCTION_54_1();
    OUTLINED_FUNCTION_7_1();
    *v19 = a13;
  }
  __swift_destroy_boxed_opaque_existential_0(v13);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_2412721E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SetRoutingModeMessage.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_2412721F4()
{
  SetRoutingModeMessage.encode(to:)();
}

uint64_t SetUIPresentedStateMessage.isPresented.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_241272210(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E65736572507369 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2412722AC()
{
  return 0x6E65736572507369;
}

uint64_t sub_2412722D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241272210(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412722F8()
{
  sub_241274A60();
  return sub_2412A8DBC();
}

uint64_t sub_241272320()
{
  sub_241274A60();
  return sub_2412A8DC8();
}

void SetUIPresentedStateMessage.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_34_1(v2, &qword_257105328, (uint64_t (*)(void))sub_241274A60, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_37_2(v1, v1[3]);
  sub_241274A60();
  OUTLINED_FUNCTION_52_1();
  sub_2412A8C84();
  OUTLINED_FUNCTION_30_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void SetUIPresentedStateMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE *v7;

  OUTLINED_FUNCTION_1_2();
  v2 = v1;
  v7 = v3;
  OUTLINED_FUNCTION_15_0(v1, &qword_257105338, (uint64_t (*)(void))sub_241274A60, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_0();
  sub_241274A60();
  OUTLINED_FUNCTION_6_1();
  if (!v0)
  {
    v6 = sub_2412A8BD0();
    OUTLINED_FUNCTION_7_1();
    *v7 = v6 & 1;
  }
  __swift_destroy_boxed_opaque_existential_0(v2);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_2412724C8()
{
  SetUIPresentedStateMessage.init(from:)();
}

void sub_2412724DC()
{
  SetUIPresentedStateMessage.encode(to:)();
}

uint64_t SetExpandedSessionsStateMessage.expandedSessionIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2412724F8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000002412B4CF0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_24127257C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24127259C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412724F8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412725C4()
{
  sub_241274A9C();
  return sub_2412A8DBC();
}

uint64_t sub_2412725EC()
{
  sub_241274A9C();
  return sub_2412A8DC8();
}

void SetExpandedSessionsStateMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_34_1(v0, &qword_257105340, (uint64_t (*)(void))sub_241274A9C, v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_1();
  sub_241274A9C();
  OUTLINED_FUNCTION_23_0();
  sub_241274AD8();
  sub_241274B28((uint64_t)&unk_257105358);
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void SetExpandedSessionsStateMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_78_0(v12);
  OUTLINED_FUNCTION_15_0(v13, &qword_257105360, (uint64_t (*)(void))sub_241274A9C, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_0();
  sub_241274A9C();
  OUTLINED_FUNCTION_6_1();
  if (!v11)
  {
    sub_241274AD8();
    sub_241274B28((uint64_t)&unk_257105368);
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_7_1();
    *v16 = a10;
  }
  __swift_destroy_boxed_opaque_existential_0(v10);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_2412727AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SetExpandedSessionsStateMessage.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2412727C0()
{
  SetExpandedSessionsStateMessage.encode(to:)();
}

void InteractWithItemMessage.itemIdentifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412727F4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24127289C()
{
  return 0x6E6564496D657469;
}

uint64_t sub_2412728C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412727F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412728EC()
{
  sub_241274B74();
  return sub_2412A8DBC();
}

uint64_t sub_241272914()
{
  sub_241274B74();
  return sub_2412A8DC8();
}

void InteractWithItemMessage.encode(to:)()
{
  sub_241272968();
}

void sub_241272968()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_1_2();
  v2 = v1;
  v4 = (_QWORD *)v3;
  OUTLINED_FUNCTION_48_0(v3, v5, v1, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v10 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_41_2();
  v9 = OUTLINED_FUNCTION_37_2(v4, v4[3]);
  ((void (*)(_QWORD *))v2)(v9);
  OUTLINED_FUNCTION_106();
  sub_2412A8DB0();
  OUTLINED_FUNCTION_80_0();
  sub_2412A8C78();
  OUTLINED_FUNCTION_30_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void InteractWithItemMessage.init(from:)()
{
  sub_241272A54();
}

void sub_241272A54()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  OUTLINED_FUNCTION_1_2();
  v2 = (void (*)(void))v1;
  v4 = (_QWORD *)v3;
  v12 = v5;
  OUTLINED_FUNCTION_48_0(v3, v6, v1, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_49_1();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  OUTLINED_FUNCTION_66_0();
  if (!v0)
  {
    v9 = sub_2412A8BC4();
    v11 = v10;
    OUTLINED_FUNCTION_72_0();
    *v12 = v9;
    v12[1] = v11;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_241272B34()
{
  InteractWithItemMessage.init(from:)();
}

void sub_241272B48()
{
  InteractWithItemMessage.encode(to:)();
}

uint64_t sub_241272B5C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002412B4D10)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_241272BE0()
{
  return 0xD000000000000011;
}

uint64_t sub_241272C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241272B5C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_241272C28()
{
  sub_241274BB0();
  return sub_2412A8DBC();
}

uint64_t sub_241272C50()
{
  sub_241274BB0();
  return sub_2412A8DC8();
}

void InteractWithSessionMessage.encode(to:)()
{
  sub_241272968();
}

void InteractWithSessionMessage.init(from:)()
{
  sub_241272A54();
}

void sub_241272CD0()
{
  InteractWithSessionMessage.init(from:)();
}

void sub_241272CE4()
{
  InteractWithSessionMessage.encode(to:)();
}

void InteractWithDialogMessage.dialogIdentifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

uint64_t InteractWithDialogMessage.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_24125E37C(v2, v3, v4);
}

uint64_t sub_241272D2C(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002412B4D30 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241272E0C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F69746361;
  else
    return 0xD000000000000010;
}

uint64_t sub_241272E44()
{
  char *v0;

  return sub_241272E0C(*v0);
}

uint64_t sub_241272E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241272D2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241272E70()
{
  sub_241274BEC();
  return sub_2412A8DBC();
}

uint64_t sub_241272E98()
{
  sub_241274BEC();
  return sub_2412A8DC8();
}

void InteractWithDialogMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_48_0(v2, &qword_2571053A0, (uint64_t (*)(void))sub_241274BEC, (uint64_t)&type metadata for InteractWithDialogMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_37_2(v3, v3[3]);
  sub_241274BEC();
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_80_0();
  sub_2412A8C78();
  if (!v0)
  {
    sub_241274C28();
    sub_2412A8CB4();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

void InteractWithDialogMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  OUTLINED_FUNCTION_1_2();
  v2 = v1;
  v10 = v3;
  OUTLINED_FUNCTION_15_0(v1, &qword_2571053B8, (uint64_t (*)(void))sub_241274BEC, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_0();
  sub_241274BEC();
  OUTLINED_FUNCTION_14_1();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    LOBYTE(v11) = 0;
    v6 = OUTLINED_FUNCTION_42_1();
    v8 = v7;
    v9 = sub_241274C64();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_74_0();
    sub_2412A8C00();
    OUTLINED_FUNCTION_16_1();
    if (v9)
    {
      OUTLINED_FUNCTION_44_0();
      __swift_destroy_boxed_opaque_existential_0(v2);
      OUTLINED_FUNCTION_44_0();
    }
    else
    {
      OUTLINED_FUNCTION_93_0();
      sub_24125E37C(v11, v12, v13);
      OUTLINED_FUNCTION_44_0();
      *(_QWORD *)v10 = v6;
      *(_QWORD *)(v10 + 8) = v8;
      *(_QWORD *)(v10 + 16) = v11;
      *(_QWORD *)(v10 + 24) = v12;
      *(_BYTE *)(v10 + 32) = v13;
      __swift_destroy_boxed_opaque_existential_0(v2);
      OUTLINED_FUNCTION_44_0();
      sub_24125F7F4(v11, v12, v13);
    }
  }
  OUTLINED_FUNCTION_0_1();
}

void sub_241273150()
{
  InteractWithDialogMessage.init(from:)();
}

void sub_241273164()
{
  InteractWithDialogMessage.encode(to:)();
}

uint64_t InteractWithControlMessage.control.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  OUTLINED_FUNCTION_143();
  return OUTLINED_FUNCTION_45_1();
}

uint64_t sub_2412731BC()
{
  return 1;
}

uint64_t sub_2412731C4()
{
  return sub_2412A8D68();
}

uint64_t sub_2412731E8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6C6F72746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_24127326C()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_241273290()
{
  return 0x6C6F72746E6F63;
}

void sub_2412732A8()
{
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_2412732D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412731E8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412732F8()
{
  return sub_241263B74();
}

uint64_t sub_241273310@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2412731BC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_241273338()
{
  sub_241274CA0();
  return sub_2412A8DBC();
}

uint64_t sub_241273360()
{
  sub_241274CA0();
  return sub_2412A8DC8();
}

void InteractWithControlMessage.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_48_0(v1, &qword_2571053C8, (uint64_t (*)(void))sub_241274CA0, (uint64_t)&type metadata for InteractWithControlMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v14 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = *v0;
  v7 = *((_BYTE *)v0 + 8);
  v8 = v0[2];
  v13 = v0[3];
  v12 = *((unsigned __int8 *)v0 + 32);
  v9 = v0[5];
  v10 = v0[6];
  v11 = v9;
  OUTLINED_FUNCTION_18_1();
  sub_241274CA0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_32_1();
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v13;
  v19 = v12;
  v20 = v11;
  v21 = v10;
  sub_241274CDC();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_30_0((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void InteractWithControlMessage.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _QWORD v25[2];
  char v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_71(v12);
  OUTLINED_FUNCTION_15_0(v13, &qword_2571053E0, (uint64_t (*)(void))sub_241274CA0, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v16 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v25 - v18;
  OUTLINED_FUNCTION_4_0();
  sub_241274CA0();
  OUTLINED_FUNCTION_10_1();
  if (!v11)
  {
    sub_241274D18();
    OUTLINED_FUNCTION_38_2();
    OUTLINED_FUNCTION_13_2((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v20 = v26;
    v21 = v28;
    v22 = v29;
    v23 = v30;
    v24 = v27;
    *(_QWORD *)a10 = v25[1];
    *(_BYTE *)(a10 + 8) = v20;
    *(_OWORD *)(a10 + 16) = v24;
    *(_BYTE *)(a10 + 32) = v21;
    *(_QWORD *)(a10 + 40) = v22;
    *(_QWORD *)(a10 + 48) = v23;
  }
  __swift_destroy_boxed_opaque_existential_0(v10);
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_0_1();
}

BOOL sub_24127358C()
{
  uint64_t v0;

  v0 = sub_2412A8B70();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_2412735D0()
{
  return sub_24127358C();
}

uint64_t sub_2412735E8()
{
  return 0x726F727265;
}

void sub_2412735FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  InteractWithControlMessage.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_241273610()
{
  InteractWithControlMessage.encode(to:)();
}

BOOL sub_241273630@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_24127358C();
  *a1 = result;
  return result;
}

uint64_t sub_241273660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2412735E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_241273688@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_2412735D0();
  *a1 = result;
  return result;
}

uint64_t sub_2412736B0()
{
  sub_241274D54();
  return sub_2412A8DBC();
}

uint64_t sub_2412736D8()
{
  sub_241274D54();
  return sub_2412A8DC8();
}

void ErrorMessage.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_34_1(v3, &qword_2571053F0, (uint64_t (*)(void))sub_241274D54, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_41_2();
  v8 = *v0;
  OUTLINED_FUNCTION_37_2(v2, v2[3]);
  sub_241274D54();
  OUTLINED_FUNCTION_52_1();
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  v10 = (void *)sub_2412A8894();
  objc_msgSend(v9, sel_encodeObject_forKey_, v8, v10);

  v11 = objc_msgSend(v9, sel_encodedData);
  v12 = sub_2412A86D8();
  v14 = v13;

  sub_241268AC0();
  OUTLINED_FUNCTION_43_2();

  sub_24125F7B0(v12, v14);
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void ErrorMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  v16 = v4;
  OUTLINED_FUNCTION_15_0(v2, &qword_257105400, (uint64_t (*)(void))sub_241274D54, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_84_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_241274D54();
  OUTLINED_FUNCTION_10_1();
  if (v0)
    goto LABEL_3;
  sub_241268BDC();
  OUTLINED_FUNCTION_38_2();
  v13 = v7;
  objc_allocWithZone(MEMORY[0x24BDD1620]);
  sub_24125E338(v14, v15);
  v10 = sub_2412740D4(v14, v15);
  sub_241274D90();
  v11 = sub_2412A8A20();
  if (v11)
  {
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v13);
    OUTLINED_FUNCTION_94_0();

    *v16 = v12;
LABEL_3:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_0_1();
    return;
  }
  __break(1u);
}

void __swiftcall ErrorMessage.init(error:)(MediaControl::ErrorMessage *__return_ptr retstr, NSError *error)
{
  retstr->error.super.isa = (Class)error;
}

void ErrorMessage.init(error:)()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_95_0();
  *v0 = v1;
  OUTLINED_FUNCTION_37_0();
}

void sub_241273A10()
{
  ErrorMessage.init(from:)();
}

void sub_241273A24()
{
  ErrorMessage.encode(to:)();
}

void *ReplyMessage.init(reply:)@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t __dst[38];
  char v14[304];
  uint64_t v15;

  memcpy(__dst, __src, 0x12AuLL);
  v3 = nullsub_1(__dst);
  OUTLINED_FUNCTION_55_0(v3, v4, v5, v6, v7, v8, v9, v10, v12, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6], __dst[7], __dst[8], __dst[9],
    __dst[10],
    __dst[11],
    __dst[12],
    __dst[13],
    __dst[14],
    __dst[15],
    __dst[16],
    __dst[17],
    __dst[18],
    __dst[19],
    __dst[20],
    __dst[21],
    __dst[22],
    __dst[23],
    __dst[24],
    __dst[25],
    __dst[26],
    __dst[27],
    __dst[28],
    __dst[29],
    __dst[30],
    __dst[31],
    __dst[32],
    __dst[33],
    __dst[34],
    __dst[35],
    __dst[36],
    __dst[37],
    v14[0]);
  v15 = 0;
  return OUTLINED_FUNCTION_83_0(a2, v14);
}

void ReplyMessage.init(error:)(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[304];
  uint64_t v52;

  v3 = *a1;
  OUTLINED_FUNCTION_104((uint64_t)a1);
  OUTLINED_FUNCTION_55_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51[0]);
  v52 = v3;
  OUTLINED_FUNCTION_83_0(a2, v51);
  OUTLINED_FUNCTION_92_0();
}

void ReplyMessage.init(error:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50[304];
  uint64_t v51;

  OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_104(v2);
  OUTLINED_FUNCTION_55_0(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50[0]);
  v51 = v1;
  OUTLINED_FUNCTION_83_0(v0, v50);
  OUTLINED_FUNCTION_37_0();
}

void ReplyMessage.init(error:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[304];
  uint64_t v52;

  OUTLINED_FUNCTION_104(a1);
  OUTLINED_FUNCTION_55_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51[0]);
  v52 = a1;
  OUTLINED_FUNCTION_83_0(a2, v51);
  OUTLINED_FUNCTION_92_0();
}

uint64_t sub_241273B48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x796C706572 && a2 == 0xE500000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_241273C2C()
{
  OUTLINED_FUNCTION_46_0();
  sub_2412A8D68();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_241273C5C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727265;
  else
    return 0x796C706572;
}

BOOL sub_241273C84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24126C988(*a1, *a2);
}

void sub_241273C90()
{
  sub_241273C2C();
}

uint64_t sub_241273CA8()
{
  return sub_24126C998();
}

uint64_t sub_241273CB0()
{
  char *v0;

  return sub_241273C5C(*v0);
}

uint64_t sub_241273CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241273B48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241273CDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24126CAA8();
  *a1 = result;
  return result;
}

uint64_t sub_241273D00()
{
  sub_241274E5C();
  return sub_2412A8DBC();
}

uint64_t sub_241273D28()
{
  sub_241274E5C();
  return sub_2412A8DC8();
}

void ReplyMessage.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[7];
  _BYTE v10[312];

  OUTLINED_FUNCTION_1_2();
  v4 = v3;
  sub_241274E98(0, &qword_257105410, (uint64_t (*)(void))sub_241274E5C, (uint64_t)&type metadata for ReplyMessage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_85_0();
  sub_2412602DC(v0, (uint64_t)v10);
  v8 = *(_QWORD *)(v0 + 304);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_241274E5C();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_52_1();
  sub_2412602DC((uint64_t)v10, (uint64_t)v9);
  sub_241274DCC(0);
  sub_241274F84((uint64_t)&unk_257105420);
  sub_2412A8C6C();
  if (!v1)
  {
    v9[0] = v8;
    sub_24126E1F4();
    sub_2412A8C6C();
  }
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_0_1();
}

void ReplyMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD v10[39];
  id v11;
  _BYTE v12[304];
  uint64_t v13;
  _BYTE v14[312];
  _QWORD v15[39];
  _WORD v16[156];

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v9 = v3;
  OUTLINED_FUNCTION_34_1(v1, qword_257105428, (uint64_t (*)(void))sub_241274E5C, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_86_0();
  sub_241274E30(v16);
  sub_2412602DC((uint64_t)v16, (uint64_t)v15);
  v15[38] = 0;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_241274E5C();
  OUTLINED_FUNCTION_66_0();
  if (!v0)
  {
    sub_241274DCC(0);
    sub_241274F84((uint64_t)&qword_257104840);
    OUTLINED_FUNCTION_122();
    sub_2412602DC((uint64_t)&v13, (uint64_t)v12);
    sub_2412602DC((uint64_t)v12, (uint64_t)v15);
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_103();
    sub_24126E36C();
    OUTLINED_FUNCTION_122();
    OUTLINED_FUNCTION_56_0();
    v6 = v11;
    v7 = (void *)v15[38];
    v8 = v11;

    v15[38] = v6;
    sub_2412602DC((uint64_t)v12, (uint64_t)v10);
    v10[38] = v6;
    sub_241261BB0((uint64_t)v10);

    OUTLINED_FUNCTION_103();
    memcpy(v9, v10, 0x138uLL);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  memcpy(v14, v15, sizeof(v14));
  sub_241274EEC((uint64_t)v14);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_2412740A4()
{
  ReplyMessage.init(from:)();
}

void sub_2412740B8()
{
  ReplyMessage.encode(to:)();
}

void sub_2412740CC(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

id sub_2412740D4(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v3 = v2;
  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (void *)sub_2412A86C0();
  v11[0] = 0;
  v7 = objc_msgSend(v3, sel_initForReadingFromData_error_, v6, v11);

  if (v7)
  {
    v8 = v11[0];
  }
  else
  {
    v9 = v11[0];
    sub_2412A8684();

    swift_willThrow();
  }
  sub_24125F7B0(a1, a2);
  return v7;
}

void sub_2412741B0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2571051B0)
  {
    sub_24127421C();
    sub_2412A8AEC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2571051B0);
  }
}

unint64_t sub_24127421C()
{
  unint64_t result;

  result = qword_2571051B8;
  if (!qword_2571051B8)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2571051B8);
  }
  return result;
}

unint64_t sub_241274258()
{
  unint64_t result;

  result = qword_2571051C0;
  if (!qword_2571051C0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithControlMessage, &type metadata for InteractWithControlMessage);
    atomic_store(result, (unint64_t *)&qword_2571051C0);
  }
  return result;
}

unint64_t sub_241274294()
{
  unint64_t result;

  result = qword_2571051C8;
  if (!qword_2571051C8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithDialogMessage, &type metadata for InteractWithDialogMessage);
    atomic_store(result, (unint64_t *)&qword_2571051C8);
  }
  return result;
}

unint64_t sub_2412742D0()
{
  unint64_t result;

  result = qword_2571051D0;
  if (!qword_2571051D0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithSessionMessage, &type metadata for InteractWithSessionMessage);
    atomic_store(result, (unint64_t *)&qword_2571051D0);
  }
  return result;
}

unint64_t sub_24127430C()
{
  unint64_t result;

  result = qword_2571051D8;
  if (!qword_2571051D8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithItemMessage, &type metadata for InteractWithItemMessage);
    atomic_store(result, (unint64_t *)&qword_2571051D8);
  }
  return result;
}

unint64_t sub_241274348()
{
  unint64_t result;

  result = qword_2571051E0;
  if (!qword_2571051E0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SetExpandedSessionsStateMessage, &type metadata for SetExpandedSessionsStateMessage);
    atomic_store(result, (unint64_t *)&qword_2571051E0);
  }
  return result;
}

unint64_t sub_241274384()
{
  unint64_t result;

  result = qword_2571051E8;
  if (!qword_2571051E8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SetUIPresentedStateMessage, &type metadata for SetUIPresentedStateMessage);
    atomic_store(result, (unint64_t *)&qword_2571051E8);
  }
  return result;
}

unint64_t sub_2412743C0()
{
  unint64_t result;

  result = qword_2571051F0;
  if (!qword_2571051F0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SetRoutingModeMessage, &type metadata for SetRoutingModeMessage);
    atomic_store(result, (unint64_t *)&qword_2571051F0);
  }
  return result;
}

unint64_t sub_2412743FC()
{
  unint64_t result;

  result = qword_2571051F8;
  if (!qword_2571051F8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for IPCConnectMessage, &type metadata for IPCConnectMessage);
    atomic_store(result, (unint64_t *)&qword_2571051F8);
  }
  return result;
}

unint64_t sub_241274438()
{
  unint64_t result;

  result = qword_257105200;
  if (!qword_257105200)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for PrototypeMessage, &type metadata for PrototypeMessage);
    atomic_store(result, (unint64_t *)&qword_257105200);
  }
  return result;
}

unint64_t sub_241274474()
{
  unint64_t result;

  result = qword_257105210;
  if (!qword_257105210)
  {
    result = MEMORY[0x242691F34](&unk_2412AC390, &type metadata for IPCClientMessage.SessionTransitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105210);
  }
  return result;
}

unint64_t sub_2412744B0()
{
  unint64_t result;

  result = qword_257105220;
  if (!qword_257105220)
  {
    result = MEMORY[0x242691F34](&unk_2412AC340, &type metadata for IPCClientMessage.InteractWithItemResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105220);
  }
  return result;
}

unint64_t sub_2412744EC()
{
  unint64_t result;

  result = qword_257105230;
  if (!qword_257105230)
  {
    result = MEMORY[0x242691F34](&unk_2412AC2F0, &type metadata for IPCClientMessage.PresentDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105230);
  }
  return result;
}

unint64_t sub_241274528()
{
  unint64_t result;

  result = qword_257105240;
  if (!qword_257105240)
  {
    result = MEMORY[0x242691F34](&unk_2412AC2A0, &type metadata for IPCClientMessage.UpdateRoutingSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105240);
  }
  return result;
}

unint64_t sub_241274564()
{
  unint64_t result;

  result = qword_257105250;
  if (!qword_257105250)
  {
    result = MEMORY[0x242691F34](&unk_2412AC250, &type metadata for IPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105250);
  }
  return result;
}

unint64_t sub_2412745A0()
{
  unint64_t result;

  result = qword_257105258;
  if (!qword_257105258)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SessionTransitionMessage, &type metadata for SessionTransitionMessage);
    atomic_store(result, (unint64_t *)&qword_257105258);
  }
  return result;
}

unint64_t sub_2412745DC()
{
  unint64_t result;

  result = qword_257105260;
  if (!qword_257105260)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithItemResultMessage, &type metadata for InteractWithItemResultMessage);
    atomic_store(result, (unint64_t *)&qword_257105260);
  }
  return result;
}

uint64_t sub_241274618(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int16 v6;

  v6 = *(_WORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 208);
  sub_241260760(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_OWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    BYTE8(v4),
    v5,
    *((uint64_t *)&v5 + 1),
    *(_QWORD *)(a1 + 272),
    *(_QWORD *)(a1 + 280),
    v6,
    SHIBYTE(v6));
  return a1;
}

unint64_t sub_2412746A0()
{
  unint64_t result;

  result = qword_257105268;
  if (!qword_257105268)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for PresentDialogMessage, &type metadata for PresentDialogMessage);
    atomic_store(result, (unint64_t *)&qword_257105268);
  }
  return result;
}

uint64_t sub_2412746DC(uint64_t a1)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 240);
  sub_241260F04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_OWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    BYTE8(v3));
  return a1;
}

unint64_t sub_241274764()
{
  unint64_t result;

  result = qword_257105270;
  if (!qword_257105270)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for TransportRoutingSessionUpdateMessage, &type metadata for TransportRoutingSessionUpdateMessage);
    atomic_store(result, (unint64_t *)&qword_257105270);
  }
  return result;
}

unint64_t sub_2412747A0()
{
  unint64_t result;

  result = qword_2571052A0;
  if (!qword_2571052A0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for SessionTransitionMessage, &type metadata for SessionTransitionMessage);
    atomic_store(result, (unint64_t *)&qword_2571052A0);
  }
  return result;
}

uint64_t sub_2412747DC(uint64_t result)
{
  *(_BYTE *)(result + 289) = 3;
  return result;
}

unint64_t sub_2412747E8()
{
  unint64_t result;

  result = qword_2571052A8;
  if (!qword_2571052A8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for InteractWithItemResultMessage, &type metadata for InteractWithItemResultMessage);
    atomic_store(result, (unint64_t *)&qword_2571052A8);
  }
  return result;
}

uint64_t sub_241274824(uint64_t result)
{
  *(_BYTE *)(result + 289) = 2;
  return result;
}

unint64_t sub_241274830()
{
  unint64_t result;

  result = qword_2571052B0;
  if (!qword_2571052B0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for PresentDialogMessage, &type metadata for PresentDialogMessage);
    atomic_store(result, (unint64_t *)&qword_2571052B0);
  }
  return result;
}

uint64_t sub_24127486C(uint64_t result)
{
  *(_BYTE *)(result + 289) = 1;
  return result;
}

unint64_t sub_241274878()
{
  unint64_t result;

  result = qword_2571052B8;
  if (!qword_2571052B8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for TransportRoutingSessionUpdateMessage, &type metadata for TransportRoutingSessionUpdateMessage);
    atomic_store(result, (unint64_t *)&qword_2571052B8);
  }
  return result;
}

uint64_t sub_2412748B4(uint64_t result)
{
  *(_BYTE *)(result + 289) = 0;
  return result;
}

unint64_t sub_2412748BC()
{
  unint64_t result;

  result = qword_2571052C8;
  if (!qword_2571052C8)
  {
    result = MEMORY[0x242691F34](&unk_2412AC200, &type metadata for PrototypeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571052C8);
  }
  return result;
}

unint64_t sub_2412748F8()
{
  unint64_t result;

  result = qword_2571052E0;
  if (!qword_2571052E0)
  {
    result = MEMORY[0x242691F34](&unk_2412AC1B0, &type metadata for IPCConnectMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571052E0);
  }
  return result;
}

unint64_t sub_241274934()
{
  unint64_t result;

  result = qword_2571052E8;
  if (!qword_2571052E8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration, &type metadata for RoutingSessionConfiguration);
    atomic_store(result, (unint64_t *)&qword_2571052E8);
  }
  return result;
}

unint64_t sub_241274970()
{
  unint64_t result;

  result = qword_2571052F8;
  if (!qword_2571052F8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration, &type metadata for RoutingSessionConfiguration);
    atomic_store(result, (unint64_t *)&qword_2571052F8);
  }
  return result;
}

unint64_t sub_2412749AC()
{
  unint64_t result;

  result = qword_257105308;
  if (!qword_257105308)
  {
    result = MEMORY[0x242691F34](&unk_2412AC160, &type metadata for SetRoutingModeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105308);
  }
  return result;
}

unint64_t sub_2412749E8()
{
  unint64_t result;

  result = qword_257105310;
  if (!qword_257105310)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingMode, &type metadata for RoutingMode);
    atomic_store(result, (unint64_t *)&qword_257105310);
  }
  return result;
}

unint64_t sub_241274A24()
{
  unint64_t result;

  result = qword_257105320;
  if (!qword_257105320)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingMode, &type metadata for RoutingMode);
    atomic_store(result, (unint64_t *)&qword_257105320);
  }
  return result;
}

unint64_t sub_241274A60()
{
  unint64_t result;

  result = qword_257105330;
  if (!qword_257105330)
  {
    result = MEMORY[0x242691F34](&unk_2412AC110, &type metadata for SetUIPresentedStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105330);
  }
  return result;
}

unint64_t sub_241274A9C()
{
  unint64_t result;

  result = qword_257105348;
  if (!qword_257105348)
  {
    result = MEMORY[0x242691F34](&unk_2412AC0C0, &type metadata for SetExpandedSessionsStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105348);
  }
  return result;
}

void sub_241274AD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257105350)
  {
    v0 = sub_2412A89A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257105350);
  }
}

void sub_241274B28(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!OUTLINED_FUNCTION_112(a1))
  {
    v4 = v3;
    v5 = v2;
    sub_241274AD8();
    v7 = v5;
    atomic_store(MEMORY[0x242691F34](v4, v6, &v7), v1);
  }
  OUTLINED_FUNCTION_79();
}

unint64_t sub_241274B74()
{
  unint64_t result;

  result = qword_257105378;
  if (!qword_257105378)
  {
    result = MEMORY[0x242691F34](&unk_2412AC070, &type metadata for InteractWithItemMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105378);
  }
  return result;
}

unint64_t sub_241274BB0()
{
  unint64_t result;

  result = qword_257105390;
  if (!qword_257105390)
  {
    result = MEMORY[0x242691F34](&unk_2412AC020, &type metadata for InteractWithSessionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105390);
  }
  return result;
}

unint64_t sub_241274BEC()
{
  unint64_t result;

  result = qword_2571053A8;
  if (!qword_2571053A8)
  {
    result = MEMORY[0x242691F34](&unk_2412ABFD0, &type metadata for InteractWithDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571053A8);
  }
  return result;
}

unint64_t sub_241274C28()
{
  unint64_t result;

  result = qword_2571053B0;
  if (!qword_2571053B0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingDialog.Action, &type metadata for RoutingDialog.Action);
    atomic_store(result, (unint64_t *)&qword_2571053B0);
  }
  return result;
}

unint64_t sub_241274C64()
{
  unint64_t result;

  result = qword_2571053C0;
  if (!qword_2571053C0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingDialog.Action, &type metadata for RoutingDialog.Action);
    atomic_store(result, (unint64_t *)&qword_2571053C0);
  }
  return result;
}

unint64_t sub_241274CA0()
{
  unint64_t result;

  result = qword_2571053D0;
  if (!qword_2571053D0)
  {
    result = MEMORY[0x242691F34](&unk_2412ABF80, &type metadata for InteractWithControlMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571053D0);
  }
  return result;
}

unint64_t sub_241274CDC()
{
  unint64_t result;

  result = qword_2571053D8;
  if (!qword_2571053D8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl, &type metadata for RoutingControl);
    atomic_store(result, (unint64_t *)&qword_2571053D8);
  }
  return result;
}

unint64_t sub_241274D18()
{
  unint64_t result;

  result = qword_2571053E8;
  if (!qword_2571053E8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl, &type metadata for RoutingControl);
    atomic_store(result, (unint64_t *)&qword_2571053E8);
  }
  return result;
}

unint64_t sub_241274D54()
{
  unint64_t result;

  result = qword_2571053F8;
  if (!qword_2571053F8)
  {
    result = MEMORY[0x242691F34](&unk_2412ABF30, &type metadata for ErrorMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571053F8);
  }
  return result;
}

unint64_t sub_241274D90()
{
  unint64_t result;

  result = qword_257105408;
  if (!qword_257105408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257105408);
  }
  return result;
}

void sub_241274DCC(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_257104618)
  {
    v2 = sub_241260404();
    v3 = sub_241260440();
    v4 = type metadata accessor for IPCMessage(a1, (uint64_t)&type metadata for IPCClientMessage, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_257104618);
  }
}

void sub_241274E30(_WORD *a1)
{
  bzero(a1, 0x128uLL);
  a1[148] = -256;
}

unint64_t sub_241274E5C()
{
  unint64_t result;

  result = qword_257105418;
  if (!qword_257105418)
  {
    result = MEMORY[0x242691F34](&unk_2412ABEE0, &type metadata for ReplyMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105418);
  }
  return result;
}

void sub_241274E98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_241274EEC(uint64_t a1)
{
  void *v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v2 = *(void **)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  sub_241260644(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    BYTE8(v4),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    *(_QWORD *)(a1 + 288),
    *(_WORD *)(a1 + 296));

  return a1;
}

void sub_241274F84(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!OUTLINED_FUNCTION_112(a1))
  {
    v3 = v2;
    sub_241274DCC(255);
    atomic_store(MEMORY[0x242691F34](v3, v4), v1);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_241274FBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16);
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int16 v8;

  v2 = OUTLINED_FUNCTION_112(a1);
  v8 = *(_WORD *)(v1 + 296);
  v6 = *(_OWORD *)(v1 + 256);
  v7 = *(_OWORD *)(v1 + 272);
  v5 = *(_OWORD *)(v1 + 224);
  v3(v2, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144),
    *(_QWORD *)(v1 + 152),
    *(_QWORD *)(v1 + 160),
    *(_QWORD *)(v1 + 168),
    *(_QWORD *)(v1 + 176),
    *(_QWORD *)(v1 + 184),
    *(_QWORD *)(v1 + 192),
    *(_QWORD *)(v1 + 200),
    *(_QWORD *)(v1 + 208),
    *(_QWORD *)(v1 + 216),
    v5,
    *((_QWORD *)&v5 + 1),
    *(_QWORD *)(v1 + 240),
    *(_QWORD *)(v1 + 248),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    *(_QWORD *)(v1 + 288),
    v8);
  return v1;
}

uint64_t sub_241275044()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24127504C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2412750C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_241275164(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_241275184(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_DWORD *sub_2412751D4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_24127522C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_24127527C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_2412752CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload((a1 + v7 + 8) & ~v7, v6, v4);
      return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_18;
LABEL_11:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return (v6 + v13 + 1);
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_24127538C + 4 * byte_2412A9B3E[(v9 - 1)]))();
}

void sub_2412753E8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

_QWORD *initializeBufferWithCopyOfBuffer for RoutingControls.PreviousTrackControl(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for RoutingControls.PreviousTrackControl()
{
  return swift_bridgeObjectRelease();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for RoutingControls.PreviousTrackControl(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for TransportRoutingItem()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for TransportRoutingSession()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for TransportRoutingSessionUpdateMessage(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)a1;
  if (result)
  {
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 16);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48) != 1)
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 112))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + 144))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(a1 + 224) != 255)
        sub_24125F80C();
      if (*(unsigned __int8 *)(a1 + 248) != 255)
        sub_24125F80C();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *initializeWithCopy for TransportRoutingSessionUpdateMessage(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = a2;
  v3 = a1;
  if (!*a2)
  {
    v8 = 289;
LABEL_7:
    memcpy(a1, a2, v8);
    return v3;
  }
  *a1 = *a2;
  v4 = a2[2];
  swift_bridgeObjectRetain();
  if (!v4)
  {
    a2 = v2 + 1;
    a1 = v3 + 1;
    v8 = 281;
    goto LABEL_7;
  }
  v3[1] = v2[1];
  v3[2] = v4;
  v5 = v2[4];
  v3[3] = v2[3];
  v3[4] = v5;
  v6 = v2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    v7 = *(_OWORD *)(v2 + 7);
    *(_OWORD *)(v3 + 5) = *(_OWORD *)(v2 + 5);
    *(_OWORD *)(v3 + 7) = v7;
  }
  else
  {
    v3[5] = v2[5];
    v3[6] = v6;
    *((_BYTE *)v3 + 56) = *((_BYTE *)v2 + 56);
    v3[8] = v2[8];
    swift_bridgeObjectRetain();
    swift_retain();
  }
  v9 = v2[14];
  *((_DWORD *)v3 + 18) = *((_DWORD *)v2 + 18);
  *((_BYTE *)v3 + 76) = *((_BYTE *)v2 + 76);
  v10 = v2[11];
  v3[10] = v2[10];
  v3[11] = v10;
  v11 = v2[13];
  v3[12] = v2[12];
  v3[13] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    v3[14] = v9;
    *(_OWORD *)(v3 + 15) = *(_OWORD *)(v2 + 15);
    v3[17] = v2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *((_OWORD *)v2 + 8);
    *((_OWORD *)v3 + 7) = *((_OWORD *)v2 + 7);
    *((_OWORD *)v3 + 8) = v12;
  }
  v13 = v2[18];
  if (v13)
  {
    v3[18] = v13;
    *(_OWORD *)(v3 + 19) = *(_OWORD *)(v2 + 19);
    v3[21] = v2[21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *((_OWORD *)v2 + 10);
    *((_OWORD *)v3 + 9) = *((_OWORD *)v2 + 9);
    *((_OWORD *)v3 + 10) = v14;
  }
  v15 = v2[23];
  v3[22] = v2[22];
  v3[23] = v15;
  v16 = v2[25];
  v3[24] = v2[24];
  v3[25] = v16;
  v17 = *((unsigned __int8 *)v2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 == 255)
  {
    *((_OWORD *)v3 + 13) = *((_OWORD *)v2 + 13);
    *((_BYTE *)v3 + 224) = *((_BYTE *)v2 + 224);
  }
  else
  {
    v18 = v17 & 1;
    v19 = v2[26];
    v20 = v2[27];
    OUTLINED_FUNCTION_143();
    v3[26] = v19;
    v3[27] = v20;
    *((_BYTE *)v3 + 224) = v18;
  }
  v21 = *((unsigned __int8 *)v2 + 248);
  if (v21 == 255)
  {
    *(_OWORD *)(v3 + 29) = *(_OWORD *)(v2 + 29);
    *((_BYTE *)v3 + 248) = *((_BYTE *)v2 + 248);
  }
  else
  {
    v22 = v21 & 1;
    v23 = v2[29];
    v24 = v2[30];
    OUTLINED_FUNCTION_143();
    v3[29] = v23;
    v3[30] = v24;
    *((_BYTE *)v3 + 248) = v22;
  }
  v25 = v2[33];
  v3[32] = v2[32];
  v3[33] = v25;
  v26 = v2[35];
  v3[34] = v2[34];
  v3[35] = v26;
  *((_BYTE *)v3 + 288) = *((_BYTE *)v2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t assignWithCopy for TransportRoutingSessionUpdateMessage(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  size_t v14;
  uint64_t v15;
  __int128 v16;
  int v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  int v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  int v33;
  _OWORD *v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 *v44;
  __int128 *v45;
  int v46;
  char v47;
  __int128 v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  __int128 *v55;
  __int128 *v56;
  int v57;
  char v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (!v4)
  {
    if (v5)
    {
      *(_QWORD *)a1 = v5;
      v11 = a2[2];
      swift_bridgeObjectRetain();
      if (!v11)
      {
        v12 = a2 + 1;
        v13 = (void *)(a1 + 8);
LABEL_21:
        v14 = 281;
        goto LABEL_22;
      }
      goto LABEL_14;
    }
LABEL_12:
    v13 = (void *)a1;
    v12 = a2;
    v14 = 289;
LABEL_22:
    memcpy(v13, v12, v14);
    return a1;
  }
  if (!v5)
  {
    sub_241276238(a1);
    goto LABEL_12;
  }
  *(_QWORD *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[2];
  if (*(_QWORD *)(a1 + 16))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7 = (_OWORD *)(a1 + 40);
      v8 = a2 + 5;
      v9 = a2[6];
      if (*(_QWORD *)(a1 + 48) == 1)
      {
        if (v9 == 1)
        {
          v10 = *(_OWORD *)(a2 + 7);
          *v7 = *v8;
          *(_OWORD *)(a1 + 56) = v10;
        }
        else
        {
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
          *(_QWORD *)(a1 + 64) = a2[8];
          swift_bridgeObjectRetain();
          swift_retain();
        }
      }
      else if (v9 == 1)
      {
        sub_241276100(a1 + 40);
        v32 = *(_OWORD *)(a2 + 7);
        *v7 = *v8;
        *(_OWORD *)(a1 + 56) = v32;
      }
      else
      {
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
        *(_QWORD *)(a1 + 64) = a2[8];
        swift_retain();
        swift_release();
      }
      v33 = *((_DWORD *)a2 + 18);
      *(_BYTE *)(a1 + 76) = *((_BYTE *)a2 + 76);
      *(_DWORD *)(a1 + 72) = v33;
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34 = (_OWORD *)(a1 + 112);
      v36 = a2 + 14;
      v35 = a2[14];
      if (*(_QWORD *)(a1 + 112))
      {
        if (v35)
        {
          *(_QWORD *)(a1 + 112) = v35;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 120) = a2[15];
          *(_QWORD *)(a1 + 128) = a2[16];
          *(_QWORD *)(a1 + 136) = a2[17];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_241276134(a1 + 112);
          v37 = *((_OWORD *)a2 + 8);
          *v34 = *v36;
          *(_OWORD *)(a1 + 128) = v37;
        }
      }
      else if (v35)
      {
        *(_QWORD *)(a1 + 112) = v35;
        *(_QWORD *)(a1 + 120) = a2[15];
        *(_QWORD *)(a1 + 128) = a2[16];
        *(_QWORD *)(a1 + 136) = a2[17];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v38 = *((_OWORD *)a2 + 8);
        *v34 = *v36;
        *(_OWORD *)(a1 + 128) = v38;
      }
      v39 = (_OWORD *)(a1 + 144);
      v41 = a2 + 18;
      v40 = a2[18];
      if (*(_QWORD *)(a1 + 144))
      {
        if (v40)
        {
          *(_QWORD *)(a1 + 144) = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 152) = a2[19];
          *(_QWORD *)(a1 + 160) = a2[20];
          *(_QWORD *)(a1 + 168) = a2[21];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_241276168(a1 + 144);
          v42 = *((_OWORD *)a2 + 10);
          *v39 = *v41;
          *(_OWORD *)(a1 + 160) = v42;
        }
      }
      else if (v40)
      {
        *(_QWORD *)(a1 + 144) = v40;
        *(_QWORD *)(a1 + 152) = a2[19];
        *(_QWORD *)(a1 + 160) = a2[20];
        *(_QWORD *)(a1 + 168) = a2[21];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v43 = *((_OWORD *)a2 + 10);
        *v39 = *v41;
        *(_OWORD *)(a1 + 160) = v43;
      }
      *(_QWORD *)(a1 + 176) = a2[22];
      *(_QWORD *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = a2[24];
      *(_QWORD *)(a1 + 200) = a2[25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v44 = (__int128 *)(a1 + 208);
      v45 = (__int128 *)(a2 + 26);
      v46 = *((unsigned __int8 *)a2 + 224);
      if (*(unsigned __int8 *)(a1 + 224) == 255)
      {
        if (v46 == 255)
        {
          v48 = *v45;
          *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
          *v44 = v48;
        }
        else
        {
          v52 = v46 & 1;
          v53 = a2[26];
          v54 = a2[27];
          OUTLINED_FUNCTION_143();
          *(_QWORD *)(a1 + 208) = v53;
          *(_QWORD *)(a1 + 216) = v54;
          *(_BYTE *)(a1 + 224) = v52;
        }
      }
      else if (v46 == 255)
      {
        sub_24127619C(a1 + 208);
        v47 = *((_BYTE *)a2 + 224);
        *v44 = *v45;
        *(_BYTE *)(a1 + 224) = v47;
      }
      else
      {
        v49 = v46 & 1;
        v50 = a2[26];
        v51 = a2[27];
        OUTLINED_FUNCTION_143();
        *(_QWORD *)(a1 + 208) = v50;
        *(_QWORD *)(a1 + 216) = v51;
        *(_BYTE *)(a1 + 224) = v49;
        sub_24125F80C();
      }
      v55 = (__int128 *)(a1 + 232);
      v56 = (__int128 *)(a2 + 29);
      v57 = *((unsigned __int8 *)a2 + 248);
      if (*(unsigned __int8 *)(a1 + 248) == 255)
      {
        if (v57 == 255)
        {
          v59 = *v56;
          *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
          *v55 = v59;
        }
        else
        {
          v63 = v57 & 1;
          v64 = a2[29];
          v65 = a2[30];
          OUTLINED_FUNCTION_143();
          *(_QWORD *)(a1 + 232) = v64;
          *(_QWORD *)(a1 + 240) = v65;
          *(_BYTE *)(a1 + 248) = v63;
        }
      }
      else if (v57 == 255)
      {
        sub_2412761D0(a1 + 232);
        v58 = *((_BYTE *)a2 + 248);
        *v55 = *v56;
        *(_BYTE *)(a1 + 248) = v58;
      }
      else
      {
        v60 = v57 & 1;
        v61 = a2[29];
        v62 = a2[30];
        OUTLINED_FUNCTION_143();
        *(_QWORD *)(a1 + 232) = v61;
        *(_QWORD *)(a1 + 240) = v62;
        *(_BYTE *)(a1 + 248) = v60;
        sub_24125F80C();
      }
      *(_QWORD *)(a1 + 256) = a2[32];
      *(_QWORD *)(a1 + 264) = a2[33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = a2[34];
      *(_QWORD *)(a1 + 280) = a2[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 288) = *((_BYTE *)a2 + 288);
      return a1;
    }
    sub_241276204(a1 + 8);
    goto LABEL_20;
  }
  if (!v6)
  {
LABEL_20:
    v13 = (void *)(a1 + 8);
    v12 = a2 + 1;
    goto LABEL_21;
  }
LABEL_14:
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  v15 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 == 1)
  {
    v16 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = v16;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = a2[8];
    swift_bridgeObjectRetain();
    swift_retain();
  }
  v17 = *((_DWORD *)a2 + 18);
  *(_BYTE *)(a1 + 76) = *((_BYTE *)a2 + 76);
  *(_DWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = a2[13];
  v18 = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(_QWORD *)(a1 + 112) = v18;
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = a2[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v19;
  }
  v20 = a2[18];
  if (v20)
  {
    *(_QWORD *)(a1 + 144) = v20;
    *(_QWORD *)(a1 + 152) = a2[19];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = a2[21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v21;
  }
  *(_QWORD *)(a1 + 176) = a2[22];
  *(_QWORD *)(a1 + 184) = a2[23];
  *(_QWORD *)(a1 + 192) = a2[24];
  *(_QWORD *)(a1 + 200) = a2[25];
  v22 = *((unsigned __int8 *)a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22 == 255)
  {
    v23 = *((_OWORD *)a2 + 13);
    *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
    *(_OWORD *)(a1 + 208) = v23;
  }
  else
  {
    v24 = v22 & 1;
    v25 = a2[26];
    v26 = a2[27];
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 208) = v25;
    *(_QWORD *)(a1 + 216) = v26;
    *(_BYTE *)(a1 + 224) = v24;
  }
  v27 = *((unsigned __int8 *)a2 + 248);
  if (v27 == 255)
  {
    v28 = *(_OWORD *)(a2 + 29);
    *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
    *(_OWORD *)(a1 + 232) = v28;
  }
  else
  {
    v29 = v27 & 1;
    v30 = a2[29];
    v31 = a2[30];
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 232) = v30;
    *(_QWORD *)(a1 + 240) = v31;
    *(_BYTE *)(a1 + 248) = v29;
  }
  *(_QWORD *)(a1 + 256) = a2[32];
  *(_QWORD *)(a1 + 264) = a2[33];
  *(_QWORD *)(a1 + 272) = a2[34];
  *(_QWORD *)(a1 + 280) = a2[35];
  *(_BYTE *)(a1 + 288) = *((_BYTE *)a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_241276100(uint64_t a1)
{
  destroy for RoutingSession.NowPlayingInfo();
  return a1;
}

uint64_t sub_241276134(uint64_t a1)
{
  destroy for RoutingControls.SkipForwardControl();
  return a1;
}

uint64_t sub_241276168(uint64_t a1)
{
  destroy for RoutingControls.SkipBackwardControl();
  return a1;
}

uint64_t sub_24127619C(uint64_t a1)
{
  destroy for RoutingControls.AbsoluteVolumeControl.Target();
  return a1;
}

uint64_t sub_2412761D0(uint64_t a1)
{
  destroy for RoutingControls.AbsoluteVolumeControl.Target();
  return a1;
}

uint64_t sub_241276204(uint64_t a1)
{
  destroy for RoutingSession(a1);
  return a1;
}

uint64_t sub_241276238(uint64_t a1)
{
  destroy for RoutingSessionSnapshot(a1);
  return a1;
}

void *__swift_memcpy289_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x121uLL);
}

uint64_t assignWithTake for TransportRoutingSessionUpdateMessage(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  const void *v8;
  size_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  int v22;
  _OWORD *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  if (!*(_QWORD *)a1)
    goto LABEL_10;
  if (!*a2)
  {
    sub_241276238(a1);
LABEL_10:
    v7 = (void *)a1;
    v8 = a2;
    v9 = 289;
    goto LABEL_13;
  }
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = a2[2];
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = a2[3];
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = a2[4];
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48) != 1)
      {
        v5 = a2[6];
        if (v5 != 1)
        {
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v5;
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
          *(_QWORD *)(a1 + 64) = a2[8];
          swift_release();
LABEL_16:
          *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 18);
          *(_BYTE *)(a1 + 76) = *((_BYTE *)a2 + 76);
          v11 = a2[11];
          *(_QWORD *)(a1 + 80) = a2[10];
          *(_QWORD *)(a1 + 88) = v11;
          swift_bridgeObjectRelease();
          v12 = a2[13];
          *(_QWORD *)(a1 + 96) = a2[12];
          *(_QWORD *)(a1 + 104) = v12;
          swift_bridgeObjectRelease();
          v13 = a2[14];
          if (*(_QWORD *)(a1 + 112))
          {
            if (v13)
            {
              *(_QWORD *)(a1 + 112) = v13;
              swift_bridgeObjectRelease();
              *(_QWORD *)(a1 + 120) = a2[15];
              v14 = a2[17];
              *(_QWORD *)(a1 + 128) = a2[16];
              *(_QWORD *)(a1 + 136) = v14;
              swift_bridgeObjectRelease();
              goto LABEL_21;
            }
            sub_241276134(a1 + 112);
          }
          v15 = *((_OWORD *)a2 + 8);
          *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
          *(_OWORD *)(a1 + 128) = v15;
LABEL_21:
          v16 = a2[18];
          if (*(_QWORD *)(a1 + 144))
          {
            if (v16)
            {
              *(_QWORD *)(a1 + 144) = v16;
              swift_bridgeObjectRelease();
              *(_QWORD *)(a1 + 152) = a2[19];
              v17 = a2[21];
              *(_QWORD *)(a1 + 160) = a2[20];
              *(_QWORD *)(a1 + 168) = v17;
              swift_bridgeObjectRelease();
              goto LABEL_26;
            }
            sub_241276168(a1 + 144);
          }
          v18 = *((_OWORD *)a2 + 10);
          *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
          *(_OWORD *)(a1 + 160) = v18;
LABEL_26:
          v19 = a2[23];
          *(_QWORD *)(a1 + 176) = a2[22];
          *(_QWORD *)(a1 + 184) = v19;
          swift_bridgeObjectRelease();
          v20 = a2[25];
          *(_QWORD *)(a1 + 192) = a2[24];
          *(_QWORD *)(a1 + 200) = v20;
          swift_bridgeObjectRelease();
          v21 = a2 + 26;
          if (*(unsigned __int8 *)(a1 + 224) != 255)
          {
            v22 = *((unsigned __int8 *)a2 + 224);
            if (v22 != 255)
            {
              *(_OWORD *)(a1 + 208) = *v21;
              *(_BYTE *)(a1 + 224) = v22 & 1;
              sub_24125F80C();
LABEL_31:
              v23 = a2 + 29;
              if (*(unsigned __int8 *)(a1 + 248) != 255)
              {
                v24 = *((unsigned __int8 *)a2 + 248);
                if (v24 != 255)
                {
                  *(_OWORD *)(a1 + 232) = *v23;
                  *(_BYTE *)(a1 + 248) = v24 & 1;
                  sub_24125F80C();
                  goto LABEL_36;
                }
                sub_2412761D0(a1 + 232);
              }
              *(_OWORD *)(a1 + 232) = *v23;
              *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
LABEL_36:
              v25 = a2[33];
              *(_QWORD *)(a1 + 256) = a2[32];
              *(_QWORD *)(a1 + 264) = v25;
              swift_bridgeObjectRelease();
              v26 = a2[35];
              *(_QWORD *)(a1 + 272) = a2[34];
              *(_QWORD *)(a1 + 280) = v26;
              swift_bridgeObjectRelease();
              *(_BYTE *)(a1 + 288) = *((_BYTE *)a2 + 288);
              return a1;
            }
            sub_24127619C(a1 + 208);
          }
          *(_OWORD *)(a1 + 208) = *v21;
          *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
          goto LABEL_31;
        }
        sub_241276100(a1 + 40);
      }
      v6 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 56) = v6;
      goto LABEL_16;
    }
    sub_241276204(a1 + 8);
  }
  v7 = (void *)(a1 + 8);
  v8 = a2 + 1;
  v9 = 281;
LABEL_13:
  memcpy(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransportRoutingSessionUpdateMessage(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 289))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportRoutingSessionUpdateMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_BYTE *)(result + 288) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 289) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 289) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for TransportRoutingSessionUpdateMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingDialog()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RoutingDialog(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RoutingDialog(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RoutingDialog(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingDialog(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingDialog(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for PresentDialogMessage()
{
  OUTLINED_FUNCTION_21_1();
}

void destroy for InteractWithItemResultMessage(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

void _s12MediaControl29InteractWithItemResultMessageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  OUTLINED_FUNCTION_44();
}

_QWORD *assignWithCopy for InteractWithItemResultMessage(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for InteractWithItemResultMessage(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for InteractWithItemResultMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractWithItemResultMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InteractWithItemResultMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for SessionTransitionMessage()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SessionTransitionMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionTransitionMessage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for SessionTransitionMessage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionTransitionMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionTransitionMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SessionTransitionMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for IPCServerMessage(uint64_t a1)
{
  return sub_24125F6EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

uint64_t *initializeWithCopy for IPCServerMessage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_24125E274(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for IPCServerMessage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_24125E274(*a2, v4, v5, v6, v7);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v14 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_24125F6EC(v10, v11, v12, v13, v14);
  return a1;
}

uint64_t *assignWithTake for IPCServerMessage(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  sub_24125F6EC(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for IPCServerMessage(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32) >> 2;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for IPCServerMessage(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 40) = 0;
      *(_QWORD *)(a1 + 48) = 0;
      *(_QWORD *)(a1 + 32) = 4 * -a2;
      return result;
    }
    *(_BYTE *)(a1 + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_241276E04(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32) >> 60;
}

uint64_t sub_241276E10(uint64_t result)
{
  *(_QWORD *)(result + 32) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_241276E20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 32) = *(_QWORD *)(result + 32) & 3 | (a2 << 60);
  return result;
}

void type metadata accessor for IPCServerMessage()
{
  OUTLINED_FUNCTION_21_1();
}

void destroy for IPCClientMessage(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int16 v4;

  v4 = *(_WORD *)(a1 + 288);
  v2 = *(_OWORD *)(a1 + 240);
  v3 = *(_OWORD *)(a1 + 256);
  v1 = *(_OWORD *)(a1 + 208);
  sub_241260760(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v1,
    *((uint64_t *)&v1 + 1),
    *(_OWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v2,
    BYTE8(v2),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 272),
    *(_QWORD *)(a1 + 280),
    v4,
    SHIBYTE(v4));
}

uint64_t initializeWithCopy for IPCClientMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;

  v40 = *(_QWORD *)(a2 + 72);
  v41 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a2 + 128);
  v20 = *(_QWORD *)(a2 + 136);
  v21 = *(_QWORD *)(a2 + 144);
  v22 = *(_QWORD *)(a2 + 152);
  v23 = *(_QWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a2 + 168);
  v25 = *(_QWORD *)(a2 + 176);
  v26 = *(_QWORD *)(a2 + 184);
  v27 = *(_QWORD *)(a2 + 192);
  v3 = *(_QWORD *)(a2 + 200);
  v28 = *(_QWORD *)(a2 + 208);
  v29 = *(_QWORD *)(a2 + 216);
  v30 = *(_QWORD *)(a2 + 224);
  v31 = *(_QWORD *)(a2 + 232);
  v32 = *(_QWORD *)(a2 + 240);
  v33 = *(_QWORD *)(a2 + 248);
  v34 = *(_QWORD *)(a2 + 256);
  v35 = *(_QWORD *)(a2 + 264);
  v36 = *(_QWORD *)(a2 + 272);
  v37 = *(_QWORD *)(a2 + 280);
  v38 = *(_BYTE *)(a2 + 288);
  v39 = *(_BYTE *)(a2 + 289);
  v5 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 24);
  v6 = *(void **)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 48);
  sub_241260D40(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v41, v40, v13, v14, v15, v16, v17, v18, v19, v20, v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v3,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v41;
  *(_QWORD *)(a1 + 72) = v40;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_QWORD *)(a1 + 96) = v15;
  *(_QWORD *)(a1 + 104) = v16;
  *(_QWORD *)(a1 + 112) = v17;
  *(_QWORD *)(a1 + 120) = v18;
  *(_QWORD *)(a1 + 128) = v19;
  *(_QWORD *)(a1 + 136) = v20;
  *(_QWORD *)(a1 + 144) = v21;
  *(_QWORD *)(a1 + 152) = v22;
  *(_QWORD *)(a1 + 160) = v23;
  *(_QWORD *)(a1 + 168) = v24;
  *(_QWORD *)(a1 + 176) = v25;
  *(_QWORD *)(a1 + 184) = v26;
  *(_QWORD *)(a1 + 192) = v27;
  *(_QWORD *)(a1 + 200) = v3;
  *(_QWORD *)(a1 + 208) = v28;
  *(_QWORD *)(a1 + 216) = v29;
  *(_QWORD *)(a1 + 224) = v30;
  *(_QWORD *)(a1 + 232) = v31;
  *(_QWORD *)(a1 + 240) = v32;
  *(_QWORD *)(a1 + 248) = v33;
  *(_QWORD *)(a1 + 256) = v34;
  *(_QWORD *)(a1 + 264) = v35;
  *(_QWORD *)(a1 + 272) = v36;
  *(_QWORD *)(a1 + 280) = v37;
  *(_BYTE *)(a1 + 288) = v38;
  *(_BYTE *)(a1 + 289) = v39;
  return a1;
}

uint64_t assignWithCopy for IPCClientMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;

  v64 = *(_QWORD *)a2;
  v65 = *(_QWORD *)(a2 + 8);
  v62 = *(_QWORD *)(a2 + 24);
  v63 = *(void **)(a2 + 16);
  v60 = *(_QWORD *)(a2 + 40);
  v61 = *(_QWORD *)(a2 + 32);
  v58 = *(_QWORD *)(a2 + 56);
  v59 = *(_QWORD *)(a2 + 48);
  v56 = *(_QWORD *)(a2 + 72);
  v57 = *(_QWORD *)(a2 + 64);
  v37 = *(_QWORD *)(a2 + 80);
  v38 = *(_QWORD *)(a2 + 88);
  v39 = *(_QWORD *)(a2 + 96);
  v40 = *(_QWORD *)(a2 + 104);
  v41 = *(_QWORD *)(a2 + 112);
  v42 = *(_QWORD *)(a2 + 120);
  v43 = *(_QWORD *)(a2 + 128);
  v3 = *(_QWORD *)(a2 + 136);
  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a2 + 152);
  v6 = *(_QWORD *)(a2 + 160);
  v7 = *(_QWORD *)(a2 + 168);
  v8 = *(_QWORD *)(a2 + 176);
  v9 = *(_QWORD *)(a2 + 184);
  v10 = *(_QWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 200);
  v44 = *(_QWORD *)(a2 + 208);
  v45 = *(_QWORD *)(a2 + 216);
  v46 = *(_QWORD *)(a2 + 224);
  v47 = *(_QWORD *)(a2 + 232);
  v48 = *(_QWORD *)(a2 + 240);
  v49 = *(_QWORD *)(a2 + 248);
  v50 = *(_QWORD *)(a2 + 256);
  v51 = *(_QWORD *)(a2 + 264);
  v52 = *(_QWORD *)(a2 + 272);
  v53 = *(_QWORD *)(a2 + 280);
  v54 = *(_BYTE *)(a2 + 288);
  v55 = *(_BYTE *)(a2 + 289);
  sub_241260D40(*(_QWORD *)a2, v65, v63, v62, v61, v60, v59, v58, v57, v56, v37, v38, v39, v40, v41, v42, v43, v3, v4,
    v5,
    v6,
    v7,
    v8,
    v9,
    v10,
    v11,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v64;
  *(_QWORD *)(a1 + 8) = v65;
  v14 = *(void **)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v63;
  *(_QWORD *)(a1 + 24) = v62;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v61;
  *(_QWORD *)(a1 + 40) = v60;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v59;
  *(_QWORD *)(a1 + 56) = v58;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v57;
  *(_QWORD *)(a1 + 72) = v56;
  *(_QWORD *)(a1 + 80) = v37;
  *(_QWORD *)(a1 + 88) = v38;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v39;
  *(_QWORD *)(a1 + 104) = v40;
  *(_QWORD *)(a1 + 112) = v41;
  *(_QWORD *)(a1 + 120) = v42;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v43;
  *(_QWORD *)(a1 + 136) = v3;
  *(_QWORD *)(a1 + 144) = v4;
  *(_QWORD *)(a1 + 152) = v5;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 168) = v7;
  *(_QWORD *)(a1 + 176) = v8;
  *(_QWORD *)(a1 + 184) = v9;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v10;
  *(_QWORD *)(a1 + 200) = v11;
  *(_QWORD *)(a1 + 208) = v44;
  *(_QWORD *)(a1 + 216) = v45;
  v30 = *(_OWORD *)(a1 + 224);
  v31 = *(_OWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 224) = v46;
  *(_QWORD *)(a1 + 232) = v47;
  *(_QWORD *)(a1 + 240) = v48;
  *(_QWORD *)(a1 + 248) = v49;
  v32 = *(_OWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v50;
  *(_QWORD *)(a1 + 264) = v51;
  v33 = *(_QWORD *)(a1 + 272);
  v34 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v52;
  *(_QWORD *)(a1 + 280) = v53;
  v35 = *(_WORD *)(a1 + 288);
  *(_BYTE *)(a1 + 288) = v54;
  *(_BYTE *)(a1 + 289) = v55;
  sub_241260760(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    BYTE8(v31),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    v34,
    v35,
    SHIBYTE(v35));
  return a1;
}

void *__swift_memcpy290_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x122uLL);
}

uint64_t assignWithTake for IPCClientMessage(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v4 = *(_WORD *)(a2 + 288);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 112);
  v17 = *(_OWORD *)(a1 + 128);
  v18 = *(_OWORD *)(a1 + 144);
  v19 = *(_OWORD *)(a1 + 160);
  v20 = *(_OWORD *)(a1 + 176);
  v21 = *(_OWORD *)(a1 + 192);
  v22 = *(_OWORD *)(a1 + 208);
  v23 = *(_OWORD *)(a1 + 224);
  v24 = *(_OWORD *)(a1 + 240);
  v25 = *(_OWORD *)(a1 + 256);
  v26 = *(_QWORD *)(a1 + 272);
  v27 = *(_QWORD *)(a1 + 280);
  v28 = *(_WORD *)(a1 + 288);
  v29 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v29;
  v30 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v30;
  v31 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v31;
  v32 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v32;
  v33 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v33;
  v34 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v34;
  v35 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v35;
  v36 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v36;
  v37 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v37;
  *(_WORD *)(a1 + 288) = v4;
  sub_241260760(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    BYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28,
    SHIBYTE(v28));
  return a1;
}

uint64_t getEnumTagSinglePayload for IPCClientMessage(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 290))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 289);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IPCClientMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_WORD *)(result + 288) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 290) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 290) = 0;
    if (a2)
      *(_BYTE *)(result + 289) = -(char)a2;
  }
  return result;
}

uint64_t sub_241277580(uint64_t result, char a2)
{
  *(_BYTE *)(result + 289) = a2;
  return result;
}

void type metadata accessor for IPCClientMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t *initializeBufferWithCopyOfBuffer for PrototypeMessage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_24125E338(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for PrototypeMessage(uint64_t a1)
{
  return sub_24125F7B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for PrototypeMessage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_24125E338(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24125F7B0(v5, v6);
  return a1;
}

uint64_t *assignWithTake for PrototypeMessage(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24125F7B0(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrototypeMessage(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for PrototypeMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

void type metadata accessor for PrototypeMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingSessionConfiguration(uint64_t a1)
{
  sub_24125F7F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoutingSessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_24125E37C(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoutingSessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_24125E37C(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_24125F7F4(v7, v8, v9);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RoutingSessionConfiguration(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_24125F7F4(v5, v6, v7);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingSessionConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingSessionConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for IPCConnectMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t storeEnumTagSinglePayload for SetRoutingModeMessage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_241277948 + 4 * byte_2412A9B5A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24127797C + 4 * byte_2412A9B55[v4]))();
}

uint64_t sub_24127797C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241277984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24127798CLL);
  return result;
}

uint64_t sub_241277998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412779A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2412779A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412779AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SetRoutingModeMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t getEnumTagSinglePayload for SetUIPresentedStateMessage(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SetUIPresentedStateMessage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_241277AA8 + 4 * byte_2412A9B64[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241277ADC + 4 * byte_2412A9B5F[v4]))();
}

uint64_t sub_241277ADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241277AE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241277AECLL);
  return result;
}

uint64_t sub_241277AF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241277B00);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241277B04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241277B0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SetUIPresentedStateMessage()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for SetExpandedSessionsStateMessage()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for InteractWithItemMessage()
{
  OUTLINED_FUNCTION_21_1();
}

void _s12MediaControl20TransportRoutingItemVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44();
}

uint64_t _s12MediaControl20TransportRoutingItemVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_241277BB8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InteractWithSessionMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for InteractWithDialogMessage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_24125F7F4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for InteractWithDialogMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_24125E37C(v4, v5, v6);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for InteractWithDialogMessage(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  v5 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_24125E37C(v4, v5, v2);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_24125F7F4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InteractWithDialogMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_24125F7F4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractWithDialogMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractWithDialogMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InteractWithDialogMessage()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t initializeBufferWithCopyOfBuffer for RoutingItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InteractWithControlMessage()
{
  sub_24125F80C();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InteractWithControlMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  OUTLINED_FUNCTION_143();
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InteractWithControlMessage(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  v6 = a2[3];
  v7 = *((_BYTE *)a2 + 32);
  OUTLINED_FUNCTION_143();
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_24125F80C();
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InteractWithControlMessage(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v4;
  sub_24125F80C();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractWithControlMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractWithControlMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InteractWithControlMessage()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for ErrorMessage()
{
  OUTLINED_FUNCTION_21_1();
}

void destroy for ReplyMessage(uint64_t a1)
{
  unsigned int v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(unsigned __int16 *)(a1 + 296);
  if (v2 >> 8 <= 0xFE)
  {
    v4 = *(_OWORD *)(a1 + 248);
    v5 = *(_OWORD *)(a1 + 264);
    v3 = *(_OWORD *)(a1 + 216);
    sub_241260760(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152),
      *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      *(_QWORD *)(a1 + 176),
      *(_QWORD *)(a1 + 184),
      *(_QWORD *)(a1 + 192),
      *(_QWORD *)(a1 + 200),
      *(_QWORD *)(a1 + 208),
      v3,
      *((uint64_t *)&v3 + 1),
      *(_OWORD *)(a1 + 232),
      *(_QWORD *)(a1 + 240),
      v4,
      BYTE8(v4),
      v5,
      *((uint64_t *)&v5 + 1),
      *(_QWORD *)(a1 + 280),
      *(_QWORD *)(a1 + 288),
      v2,
      SBYTE1(v2));
  }

}

_QWORD *initializeWithCopy for ReplyMessage(_QWORD *__dst, _QWORD *__src)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = *((unsigned __int16 *)__src + 148);
  if (v4 >> 8 <= 0xFE)
  {
    v5 = __src[1];
    *__dst = *__src;
    v45 = __src[10];
    v46 = __src[9];
    v44 = __src[11];
    v17 = __src[12];
    v18 = __src[13];
    v19 = __src[14];
    v20 = __src[15];
    v21 = __src[16];
    v22 = __src[17];
    v23 = __src[18];
    v24 = __src[19];
    v27 = __src[20];
    v28 = __src[21];
    v29 = __src[22];
    v30 = __src[23];
    v31 = __src[24];
    v32 = __src[25];
    v33 = __src[26];
    v34 = __src[27];
    v35 = __src[28];
    v36 = __src[29];
    v37 = __src[30];
    v38 = __src[31];
    v39 = __src[32];
    v40 = __src[33];
    v41 = __src[34];
    v42 = __src[35];
    v43 = __src[36];
    v25 = v4;
    v7 = __src[2];
    v6 = v5;
    v9 = __src[4];
    v8 = (void *)__src[3];
    v11 = __src[6];
    v10 = __src[5];
    v13 = __src[8];
    v12 = __src[7];
    v26 = v4 >> 8;
    sub_241260D40(v5, v7, v8, v9, v10, v11, v12, v13, v46, v45, v44, v17, v18, v19, v20, v21, v22, v23, v24,
      v27,
      v28,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v4,
      SBYTE1(v4));
    __dst[1] = v6;
    __dst[2] = v7;
    __dst[3] = v8;
    __dst[4] = v9;
    __dst[5] = v10;
    __dst[6] = v11;
    __dst[7] = v12;
    __dst[8] = v13;
    __dst[9] = v46;
    __dst[10] = v45;
    __dst[11] = v44;
    __dst[12] = v17;
    __dst[13] = v18;
    __dst[14] = v19;
    __dst[15] = v20;
    __dst[16] = v21;
    __dst[17] = v22;
    __dst[18] = v23;
    __dst[19] = v24;
    __dst[20] = v27;
    __dst[21] = v28;
    __dst[22] = v29;
    __dst[23] = v30;
    __dst[24] = v31;
    __dst[25] = v32;
    __dst[26] = v33;
    __dst[27] = v34;
    __dst[28] = v35;
    __dst[29] = v36;
    __dst[30] = v37;
    __dst[31] = v38;
    __dst[32] = v39;
    __dst[33] = v40;
    __dst[34] = v41;
    __dst[35] = v42;
    __dst[36] = v43;
    *((_BYTE *)__dst + 296) = v25;
    *((_BYTE *)__dst + 297) = v26;
  }
  else
  {
    memcpy(__dst, __src, 0x12AuLL);
  }
  v14 = (void *)__src[38];
  __dst[38] = v14;
  v15 = v14;
  return __dst;
}

char *assignWithCopy for ReplyMessage(char *__dst, _DWORD *__src)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v4 = HIBYTE(*((unsigned __int16 *)__src + 148));
  if (__dst[297] != 255)
  {
    if (v4 <= 0xFE)
    {
      *(_DWORD *)__dst = *__src;
      *((_DWORD *)__dst + 1) = __src[1];
      v106 = *((_QWORD *)__src + 2);
      v108 = *((_QWORD *)__src + 1);
      v102 = *((_QWORD *)__src + 4);
      v104 = (void *)*((_QWORD *)__src + 3);
      v98 = *((_QWORD *)__src + 6);
      v100 = *((_QWORD *)__src + 5);
      v94 = *((_QWORD *)__src + 8);
      v96 = *((_QWORD *)__src + 7);
      v92 = *((_QWORD *)__src + 10);
      v93 = *((_QWORD *)__src + 9);
      v13 = *((_QWORD *)__src + 12);
      v91 = *((_QWORD *)__src + 11);
      v14 = *((_QWORD *)__src + 13);
      v15 = *((_QWORD *)__src + 14);
      v16 = *((_QWORD *)__src + 15);
      v18 = *((_QWORD *)__src + 17);
      v17 = *((_QWORD *)__src + 18);
      v19 = *((_QWORD *)__src + 19);
      v58 = *((_QWORD *)__src + 16);
      v60 = *((_QWORD *)__src + 20);
      v62 = *((_QWORD *)__src + 21);
      v64 = *((_QWORD *)__src + 22);
      v66 = *((_QWORD *)__src + 23);
      v68 = *((_QWORD *)__src + 24);
      v70 = *((_QWORD *)__src + 25);
      v72 = *((_QWORD *)__src + 26);
      v20 = *((_QWORD *)__src + 27);
      v74 = *((_QWORD *)__src + 28);
      v76 = *((_QWORD *)__src + 29);
      v78 = *((_QWORD *)__src + 30);
      v80 = *((_QWORD *)__src + 31);
      v82 = *((_QWORD *)__src + 32);
      v84 = *((_QWORD *)__src + 33);
      v86 = *((_QWORD *)__src + 34);
      v87 = *((_QWORD *)__src + 35);
      v88 = *((_QWORD *)__src + 36);
      v89 = *((_BYTE *)__src + 296);
      v90 = *((_BYTE *)__src + 297);
      sub_241260D40(v108, v106, v104, v102, v100, v98, v96, v94, v93, v92, v91, v13, v14, v15, v16, v58, v18, v17, v19,
        v60,
        v62,
        v64,
        v66,
        v68,
        v70,
        v72,
        v20,
        v74,
        v76,
        v78,
        v80,
        v82,
        v84,
        v86,
        v87,
        v88,
        v89,
        v90);
      v21 = *((_QWORD *)__dst + 1);
      v22 = *((_QWORD *)__dst + 2);
      v23 = (void *)*((_QWORD *)__dst + 3);
      v24 = *((_QWORD *)__dst + 4);
      *((_QWORD *)__dst + 1) = v108;
      *((_QWORD *)__dst + 2) = v106;
      v25 = *((_QWORD *)__dst + 5);
      v26 = *((_QWORD *)__dst + 6);
      *((_QWORD *)__dst + 3) = v104;
      *((_QWORD *)__dst + 4) = v102;
      v27 = *((_QWORD *)__dst + 7);
      v28 = *((_QWORD *)__dst + 8);
      *((_QWORD *)__dst + 5) = v100;
      *((_QWORD *)__dst + 6) = v98;
      *((_QWORD *)__dst + 7) = v96;
      *((_QWORD *)__dst + 8) = v94;
      v29 = *(_OWORD *)(__dst + 72);
      v30 = *(_OWORD *)(__dst + 88);
      *((_QWORD *)__dst + 9) = v93;
      *((_QWORD *)__dst + 10) = v92;
      *((_QWORD *)__dst + 11) = v91;
      *((_QWORD *)__dst + 12) = v13;
      v31 = *(_OWORD *)(__dst + 104);
      v32 = *(_OWORD *)(__dst + 120);
      *((_QWORD *)__dst + 13) = v14;
      *((_QWORD *)__dst + 14) = v15;
      *((_QWORD *)__dst + 15) = v16;
      *((_QWORD *)__dst + 16) = v58;
      v33 = *(_OWORD *)(__dst + 136);
      v34 = *(_OWORD *)(__dst + 152);
      v35 = *(_OWORD *)(__dst + 168);
      v36 = *(_OWORD *)(__dst + 184);
      v37 = *(_OWORD *)(__dst + 200);
      v38 = *(_OWORD *)(__dst + 216);
      v39 = *(_OWORD *)(__dst + 232);
      v40 = *(_OWORD *)(__dst + 248);
      v41 = *(_OWORD *)(__dst + 264);
      *((_QWORD *)__dst + 17) = v18;
      *((_QWORD *)__dst + 18) = v17;
      v42 = *((_QWORD *)__dst + 35);
      v43 = *((_QWORD *)__dst + 36);
      *((_QWORD *)__dst + 19) = v19;
      *((_QWORD *)__dst + 20) = v60;
      v44 = *((_WORD *)__dst + 148);
      *((_QWORD *)__dst + 21) = v62;
      *((_QWORD *)__dst + 22) = v64;
      *((_QWORD *)__dst + 23) = v66;
      *((_QWORD *)__dst + 24) = v68;
      *((_QWORD *)__dst + 25) = v70;
      *((_QWORD *)__dst + 26) = v72;
      *((_QWORD *)__dst + 27) = v20;
      *((_QWORD *)__dst + 28) = v74;
      *((_QWORD *)__dst + 29) = v76;
      *((_QWORD *)__dst + 30) = v78;
      *((_QWORD *)__dst + 31) = v80;
      *((_QWORD *)__dst + 32) = v82;
      *((_QWORD *)__dst + 33) = v84;
      *((_QWORD *)__dst + 34) = v86;
      *((_QWORD *)__dst + 35) = v87;
      *((_QWORD *)__dst + 36) = v88;
      __dst[296] = v89;
      __dst[297] = v90;
      sub_241260760(v21, v22, v23, v24, v25, v26, v27, v28, v29, *((uint64_t *)&v29 + 1), v30, *((uint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34,
        *((uint64_t *)&v34 + 1),
        v35,
        *((uint64_t *)&v35 + 1),
        v36,
        *((uint64_t *)&v36 + 1),
        v37,
        *((uint64_t *)&v37 + 1),
        v38,
        *((uint64_t *)&v38 + 1),
        v39,
        *((uint64_t *)&v39 + 1),
        v40,
        BYTE8(v40),
        v41,
        *((uint64_t *)&v41 + 1),
        v42,
        v43,
        v44,
        SHIBYTE(v44));
      goto LABEL_8;
    }
    sub_24127889C((uint64_t)__dst);
    goto LABEL_6;
  }
  if (v4 > 0xFE)
  {
LABEL_6:
    memcpy(__dst, __src, 0x12AuLL);
    goto LABEL_8;
  }
  *(_QWORD *)__dst = *(_QWORD *)__src;
  v105 = *((_QWORD *)__src + 10);
  v107 = *((_QWORD *)__src + 9);
  v103 = *((_QWORD *)__src + 11);
  v49 = *((_QWORD *)__src + 12);
  v50 = *((_QWORD *)__src + 13);
  v51 = *((_QWORD *)__src + 14);
  v52 = *((_QWORD *)__src + 15);
  v53 = *((_QWORD *)__src + 16);
  v54 = *((_QWORD *)__src + 17);
  v55 = *((_QWORD *)__src + 18);
  v56 = *((_QWORD *)__src + 19);
  v57 = *((_QWORD *)__src + 20);
  v59 = *((_QWORD *)__src + 21);
  v61 = *((_QWORD *)__src + 22);
  v63 = *((_QWORD *)__src + 23);
  v65 = *((_QWORD *)__src + 24);
  v67 = *((_QWORD *)__src + 25);
  v69 = *((_QWORD *)__src + 26);
  v71 = *((_QWORD *)__src + 27);
  v73 = *((_QWORD *)__src + 28);
  v75 = *((_QWORD *)__src + 29);
  v77 = *((_QWORD *)__src + 30);
  v79 = *((_QWORD *)__src + 31);
  v81 = *((_QWORD *)__src + 32);
  v83 = *((_QWORD *)__src + 33);
  v85 = *((_QWORD *)__src + 34);
  v95 = *((_QWORD *)__src + 35);
  v97 = *((_QWORD *)__src + 36);
  v99 = *((_BYTE *)__src + 296);
  v101 = *((_BYTE *)__src + 297);
  v6 = *((_QWORD *)__src + 2);
  v5 = *((_QWORD *)__src + 1);
  v8 = *((_QWORD *)__src + 4);
  v7 = (void *)*((_QWORD *)__src + 3);
  v10 = *((_QWORD *)__src + 6);
  v9 = *((_QWORD *)__src + 5);
  v11 = *((_QWORD *)__src + 8);
  v12 = *((_QWORD *)__src + 7);
  sub_241260D40(v5, v6, v7, v8, v9, v10, v12, v11, v107, v105, v103, v49, v50, v51, v52, v53, v54, v55, v56,
    v57,
    v59,
    v61,
    v63,
    v65,
    v67,
    v69,
    v71,
    v73,
    v75,
    v77,
    v79,
    v81,
    v83,
    v85,
    v95,
    v97,
    v99,
    v101);
  *((_QWORD *)__dst + 1) = v5;
  *((_QWORD *)__dst + 2) = v6;
  *((_QWORD *)__dst + 3) = v7;
  *((_QWORD *)__dst + 4) = v8;
  *((_QWORD *)__dst + 5) = v9;
  *((_QWORD *)__dst + 6) = v10;
  *((_QWORD *)__dst + 7) = v12;
  *((_QWORD *)__dst + 8) = v11;
  *((_QWORD *)__dst + 9) = v107;
  *((_QWORD *)__dst + 10) = v105;
  *((_QWORD *)__dst + 11) = v103;
  *((_QWORD *)__dst + 12) = v49;
  *((_QWORD *)__dst + 13) = v50;
  *((_QWORD *)__dst + 14) = v51;
  *((_QWORD *)__dst + 15) = v52;
  *((_QWORD *)__dst + 16) = v53;
  *((_QWORD *)__dst + 17) = v54;
  *((_QWORD *)__dst + 18) = v55;
  *((_QWORD *)__dst + 19) = v56;
  *((_QWORD *)__dst + 20) = v57;
  *((_QWORD *)__dst + 21) = v59;
  *((_QWORD *)__dst + 22) = v61;
  *((_QWORD *)__dst + 23) = v63;
  *((_QWORD *)__dst + 24) = v65;
  *((_QWORD *)__dst + 25) = v67;
  *((_QWORD *)__dst + 26) = v69;
  *((_QWORD *)__dst + 27) = v71;
  *((_QWORD *)__dst + 28) = v73;
  *((_QWORD *)__dst + 29) = v75;
  *((_QWORD *)__dst + 30) = v77;
  *((_QWORD *)__dst + 31) = v79;
  *((_QWORD *)__dst + 32) = v81;
  *((_QWORD *)__dst + 33) = v83;
  *((_QWORD *)__dst + 34) = v85;
  *((_QWORD *)__dst + 35) = v95;
  *((_QWORD *)__dst + 36) = v97;
  __dst[296] = v99;
  __dst[297] = v101;
LABEL_8:
  v45 = (void *)*((_QWORD *)__dst + 38);
  v46 = (void *)*((_QWORD *)__src + 38);
  *((_QWORD *)__dst + 38) = v46;
  v47 = v46;

  return __dst;
}

uint64_t sub_24127889C(uint64_t a1)
{
  uint64_t v2;

  sub_241274DCC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *__swift_memcpy312_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

char *assignWithTake for ReplyMessage(char *__dst, unsigned __int16 *__src)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  __int128 v29;
  void *v30;

  if (__dst[297] != 255)
  {
    v4 = __src[148];
    if (v4 >> 8 <= 0xFE)
    {
      *(_QWORD *)__dst = *(_QWORD *)__src;
      v5 = *((_QWORD *)__dst + 1);
      v6 = *((_QWORD *)__dst + 2);
      v7 = (void *)*((_QWORD *)__dst + 3);
      v8 = *((_QWORD *)__dst + 4);
      v9 = *((_QWORD *)__dst + 5);
      v10 = *((_QWORD *)__dst + 6);
      v11 = *((_QWORD *)__dst + 7);
      v12 = *((_QWORD *)__dst + 8);
      v13 = *(_OWORD *)(__dst + 72);
      v14 = *(_OWORD *)(__dst + 88);
      v15 = *(_OWORD *)(__dst + 104);
      v16 = *(_OWORD *)(__dst + 120);
      v17 = *(_OWORD *)(__dst + 136);
      v18 = *(_OWORD *)(__dst + 152);
      v19 = *(_OWORD *)(__dst + 168);
      v20 = *(_OWORD *)(__dst + 184);
      v21 = *(_OWORD *)(__dst + 200);
      v22 = *(_OWORD *)(__dst + 216);
      v23 = *(_OWORD *)(__dst + 232);
      v24 = *(_OWORD *)(__dst + 248);
      v25 = *(_OWORD *)(__dst + 264);
      v26 = *((_QWORD *)__dst + 35);
      v27 = *((_QWORD *)__dst + 36);
      v28 = *((_WORD *)__dst + 148);
      *(_OWORD *)(__dst + 8) = *(_OWORD *)(__src + 4);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 12);
      *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 20);
      *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 28);
      *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 36);
      *(_OWORD *)(__dst + 88) = *(_OWORD *)(__src + 44);
      *(_OWORD *)(__dst + 104) = *(_OWORD *)(__src + 52);
      *(_OWORD *)(__dst + 120) = *(_OWORD *)(__src + 60);
      *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 68);
      *(_OWORD *)(__dst + 152) = *(_OWORD *)(__src + 76);
      *(_OWORD *)(__dst + 168) = *(_OWORD *)(__src + 84);
      *(_OWORD *)(__dst + 184) = *(_OWORD *)(__src + 92);
      *(_OWORD *)(__dst + 200) = *(_OWORD *)(__src + 100);
      *(_OWORD *)(__dst + 216) = *(_OWORD *)(__src + 108);
      *(_OWORD *)(__dst + 232) = *(_OWORD *)(__src + 116);
      *(_OWORD *)(__dst + 248) = *(_OWORD *)(__src + 124);
      v29 = *(_OWORD *)(__src + 140);
      *(_OWORD *)(__dst + 264) = *(_OWORD *)(__src + 132);
      *(_OWORD *)(__dst + 280) = v29;
      *((_WORD *)__dst + 148) = v4;
      sub_241260760(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
        *((uint64_t *)&v18 + 1),
        v19,
        *((uint64_t *)&v19 + 1),
        v20,
        *((uint64_t *)&v20 + 1),
        v21,
        *((uint64_t *)&v21 + 1),
        v22,
        *((uint64_t *)&v22 + 1),
        v23,
        *((uint64_t *)&v23 + 1),
        v24,
        BYTE8(v24),
        v25,
        *((uint64_t *)&v25 + 1),
        v26,
        v27,
        v28,
        SHIBYTE(v28));
      goto LABEL_6;
    }
    sub_24127889C((uint64_t)__dst);
  }
  memcpy(__dst, __src, 0x12AuLL);
LABEL_6:
  v30 = (void *)*((_QWORD *)__dst + 38);
  *((_QWORD *)__dst + 38) = *((_QWORD *)__src + 38);

  return __dst;
}

uint64_t getEnumTagSinglePayload for ReplyMessage(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 312))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 304);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReplyMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 312) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 312) = 0;
    if (a2)
      *(_QWORD *)(result + 304) = a2;
  }
  return result;
}

void type metadata accessor for ReplyMessage()
{
  OUTLINED_FUNCTION_21_1();
}

ValueMetadata *type metadata accessor for ReplyMessage.CodingKeys()
{
  return &type metadata for ReplyMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for ErrorMessage.CodingKeys()
{
  return &type metadata for ErrorMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for InteractWithControlMessage.CodingKeys()
{
  return &type metadata for InteractWithControlMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for InteractWithDialogMessage.CodingKeys()
{
  return &type metadata for InteractWithDialogMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for InteractWithSessionMessage.CodingKeys()
{
  return &type metadata for InteractWithSessionMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for InteractWithItemMessage.CodingKeys()
{
  return &type metadata for InteractWithItemMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for SetExpandedSessionsStateMessage.CodingKeys()
{
  return &type metadata for SetExpandedSessionsStateMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for SetUIPresentedStateMessage.CodingKeys()
{
  return &type metadata for SetUIPresentedStateMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for SetRoutingModeMessage.CodingKeys()
{
  return &type metadata for SetRoutingModeMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for IPCConnectMessage.CodingKeys()
{
  return &type metadata for IPCConnectMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for PrototypeMessage.CodingKeys()
{
  return &type metadata for PrototypeMessage.CodingKeys;
}

uint64_t getEnumTagSinglePayload for IPCClientMessage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IPCClientMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_241278D10 + 4 * byte_2412A9B6E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_241278D44 + 4 * byte_2412A9B69[v4]))();
}

uint64_t sub_241278D44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241278D4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241278D54);
  return result;
}

uint64_t sub_241278D60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241278D68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_241278D6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241278D74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IPCClientMessage.CodingKeys()
{
  return &type metadata for IPCClientMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for IPCClientMessage.UpdateRoutingSnapshotCodingKeys()
{
  return &type metadata for IPCClientMessage.UpdateRoutingSnapshotCodingKeys;
}

ValueMetadata *type metadata accessor for IPCClientMessage.PresentDialogCodingKeys()
{
  return &type metadata for IPCClientMessage.PresentDialogCodingKeys;
}

ValueMetadata *type metadata accessor for IPCClientMessage.InteractWithItemResultCodingKeys()
{
  return &type metadata for IPCClientMessage.InteractWithItemResultCodingKeys;
}

ValueMetadata *type metadata accessor for IPCClientMessage.SessionTransitionCodingKeys()
{
  return &type metadata for IPCClientMessage.SessionTransitionCodingKeys;
}

uint64_t getEnumTagSinglePayload for IPCServerMessage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IPCServerMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_241278EA4 + 4 * byte_2412A9B78[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_241278ED8 + 4 * byte_2412A9B73[v4]))();
}

uint64_t sub_241278ED8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241278EE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241278EE8);
  return result;
}

uint64_t sub_241278EF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241278EFCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_241278F00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241278F08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IPCServerMessage.CodingKeys()
{
  return &type metadata for IPCServerMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.PrototypeCodingKeys()
{
  return &type metadata for IPCServerMessage.PrototypeCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.ConnectCodingKeys()
{
  return &type metadata for IPCServerMessage.ConnectCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.SetRoutingModeCodingKeys()
{
  return &type metadata for IPCServerMessage.SetRoutingModeCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.SetUIPresentedCodingKeys()
{
  return &type metadata for IPCServerMessage.SetUIPresentedCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys()
{
  return &type metadata for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.InteractWithItemCodingKeys()
{
  return &type metadata for IPCServerMessage.InteractWithItemCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.InteractWithSessionCodingKeys()
{
  return &type metadata for IPCServerMessage.InteractWithSessionCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.InteractWithDialogCodingKeys()
{
  return &type metadata for IPCServerMessage.InteractWithDialogCodingKeys;
}

ValueMetadata *type metadata accessor for IPCServerMessage.InteractWithControlCodingKeys()
{
  return &type metadata for IPCServerMessage.InteractWithControlCodingKeys;
}

ValueMetadata *type metadata accessor for SessionTransitionMessage.CodingKeys()
{
  return &type metadata for SessionTransitionMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for InteractWithItemResultMessage.CodingKeys()
{
  return &type metadata for InteractWithItemResultMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for PresentDialogMessage.CodingKeys()
{
  return &type metadata for PresentDialogMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for TransportRoutingSessionUpdateMessage.CodingKeys()
{
  return &type metadata for TransportRoutingSessionUpdateMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for TransportRoutingSession.CodingKeys()
{
  return &type metadata for TransportRoutingSession.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Features.MediaRemote(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s12MediaControl12ErrorMessageV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_241279094 + 4 * byte_2412A9B7D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2412790B4 + 4 * byte_2412A9B82[v4]))();
}

_BYTE *sub_241279094(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2412790B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412790BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412790C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412790CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412790D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TransportRoutingItem.CodingKeys()
{
  return &type metadata for TransportRoutingItem.CodingKeys;
}

uint64_t sub_2412790F0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for ExecutionPriority.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s12MediaControl12ReplyMessageV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2412791CC + 4 * byte_2412A9B8C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_241279200 + 4 * byte_2412A9B87[v4]))();
}

uint64_t sub_241279200(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241279208(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x241279210);
  return result;
}

uint64_t sub_24127921C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241279224);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241279228(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_241279230(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_24127923C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void sub_241279248()
{
  JUMPOUT(0x242691F34);
}

unint64_t sub_24127925C()
{
  unint64_t result;

  result = qword_257105530;
  if (!qword_257105530)
  {
    result = MEMORY[0x242691F34](&unk_2412AA838, &type metadata for TransportRoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105530);
  }
  return result;
}

unint64_t sub_24127929C()
{
  unint64_t result;

  result = qword_257105538;
  if (!qword_257105538)
  {
    result = MEMORY[0x242691F34](&unk_2412AA8F0, &type metadata for TransportRoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105538);
  }
  return result;
}

unint64_t sub_2412792DC()
{
  unint64_t result;

  result = qword_257105540;
  if (!qword_257105540)
  {
    result = MEMORY[0x242691F34](&unk_2412AA9A8, &type metadata for TransportRoutingSessionUpdateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105540);
  }
  return result;
}

unint64_t sub_24127931C()
{
  unint64_t result;

  result = qword_257105548;
  if (!qword_257105548)
  {
    result = MEMORY[0x242691F34](&unk_2412AAA60, &type metadata for PresentDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105548);
  }
  return result;
}

unint64_t sub_24127935C()
{
  unint64_t result;

  result = qword_257105550;
  if (!qword_257105550)
  {
    result = MEMORY[0x242691F34](&unk_2412AAB18, &type metadata for InteractWithItemResultMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105550);
  }
  return result;
}

unint64_t sub_24127939C()
{
  unint64_t result;

  result = qword_257105558;
  if (!qword_257105558)
  {
    result = MEMORY[0x242691F34](&unk_2412AABD0, &type metadata for SessionTransitionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105558);
  }
  return result;
}

unint64_t sub_2412793DC()
{
  unint64_t result;

  result = qword_257105560;
  if (!qword_257105560)
  {
    result = MEMORY[0x242691F34](&unk_2412AAC88, &type metadata for IPCServerMessage.InteractWithControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105560);
  }
  return result;
}

unint64_t sub_24127941C()
{
  unint64_t result;

  result = qword_257105568;
  if (!qword_257105568)
  {
    result = MEMORY[0x242691F34](&unk_2412AAD40, &type metadata for IPCServerMessage.InteractWithDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105568);
  }
  return result;
}

unint64_t sub_24127945C()
{
  unint64_t result;

  result = qword_257105570;
  if (!qword_257105570)
  {
    result = MEMORY[0x242691F34](&unk_2412AADF8, &type metadata for IPCServerMessage.InteractWithSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105570);
  }
  return result;
}

unint64_t sub_24127949C()
{
  unint64_t result;

  result = qword_257105578;
  if (!qword_257105578)
  {
    result = MEMORY[0x242691F34](&unk_2412AAEB0, &type metadata for IPCServerMessage.InteractWithItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105578);
  }
  return result;
}

unint64_t sub_2412794DC()
{
  unint64_t result;

  result = qword_257105580;
  if (!qword_257105580)
  {
    result = MEMORY[0x242691F34](&unk_2412AAF68, &type metadata for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105580);
  }
  return result;
}

unint64_t sub_24127951C()
{
  unint64_t result;

  result = qword_257105588;
  if (!qword_257105588)
  {
    result = MEMORY[0x242691F34](&unk_2412AB020, &type metadata for IPCServerMessage.SetUIPresentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105588);
  }
  return result;
}

unint64_t sub_24127955C()
{
  unint64_t result;

  result = qword_257105590;
  if (!qword_257105590)
  {
    result = MEMORY[0x242691F34](&unk_2412AB0D8, &type metadata for IPCServerMessage.SetRoutingModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105590);
  }
  return result;
}

unint64_t sub_24127959C()
{
  unint64_t result;

  result = qword_257105598;
  if (!qword_257105598)
  {
    result = MEMORY[0x242691F34](&unk_2412AB190, &type metadata for IPCServerMessage.ConnectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105598);
  }
  return result;
}

unint64_t sub_2412795DC()
{
  unint64_t result;

  result = qword_2571055A0;
  if (!qword_2571055A0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB248, &type metadata for IPCServerMessage.PrototypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055A0);
  }
  return result;
}

unint64_t sub_24127961C()
{
  unint64_t result;

  result = qword_2571055A8;
  if (!qword_2571055A8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB300, &type metadata for IPCServerMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055A8);
  }
  return result;
}

unint64_t sub_24127965C()
{
  unint64_t result;

  result = qword_2571055B0;
  if (!qword_2571055B0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB3B8, &type metadata for IPCClientMessage.SessionTransitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055B0);
  }
  return result;
}

unint64_t sub_24127969C()
{
  unint64_t result;

  result = qword_2571055B8;
  if (!qword_2571055B8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB470, &type metadata for IPCClientMessage.InteractWithItemResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055B8);
  }
  return result;
}

unint64_t sub_2412796DC()
{
  unint64_t result;

  result = qword_2571055C0;
  if (!qword_2571055C0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB528, &type metadata for IPCClientMessage.PresentDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055C0);
  }
  return result;
}

unint64_t sub_24127971C()
{
  unint64_t result;

  result = qword_2571055C8;
  if (!qword_2571055C8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB5E0, &type metadata for IPCClientMessage.UpdateRoutingSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055C8);
  }
  return result;
}

unint64_t sub_24127975C()
{
  unint64_t result;

  result = qword_2571055D0;
  if (!qword_2571055D0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB698, &type metadata for IPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055D0);
  }
  return result;
}

unint64_t sub_24127979C()
{
  unint64_t result;

  result = qword_2571055D8;
  if (!qword_2571055D8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB750, &type metadata for PrototypeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055D8);
  }
  return result;
}

unint64_t sub_2412797DC()
{
  unint64_t result;

  result = qword_2571055E0;
  if (!qword_2571055E0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB808, &type metadata for IPCConnectMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055E0);
  }
  return result;
}

unint64_t sub_24127981C()
{
  unint64_t result;

  result = qword_2571055E8;
  if (!qword_2571055E8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB8C0, &type metadata for SetRoutingModeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055E8);
  }
  return result;
}

unint64_t sub_24127985C()
{
  unint64_t result;

  result = qword_2571055F0;
  if (!qword_2571055F0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB978, &type metadata for SetUIPresentedStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055F0);
  }
  return result;
}

unint64_t sub_24127989C()
{
  unint64_t result;

  result = qword_2571055F8;
  if (!qword_2571055F8)
  {
    result = MEMORY[0x242691F34](&unk_2412ABA30, &type metadata for SetExpandedSessionsStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571055F8);
  }
  return result;
}

unint64_t sub_2412798DC()
{
  unint64_t result;

  result = qword_257105600;
  if (!qword_257105600)
  {
    result = MEMORY[0x242691F34](&unk_2412ABAE8, &type metadata for InteractWithItemMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105600);
  }
  return result;
}

unint64_t sub_24127991C()
{
  unint64_t result;

  result = qword_257105608;
  if (!qword_257105608)
  {
    result = MEMORY[0x242691F34](&unk_2412ABBA0, &type metadata for InteractWithSessionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105608);
  }
  return result;
}

unint64_t sub_24127995C()
{
  unint64_t result;

  result = qword_257105610;
  if (!qword_257105610)
  {
    result = MEMORY[0x242691F34](&unk_2412ABC58, &type metadata for InteractWithDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105610);
  }
  return result;
}

unint64_t sub_24127999C()
{
  unint64_t result;

  result = qword_257105618;
  if (!qword_257105618)
  {
    result = MEMORY[0x242691F34](&unk_2412ABD10, &type metadata for InteractWithControlMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105618);
  }
  return result;
}

unint64_t sub_2412799DC()
{
  unint64_t result;

  result = qword_257105620;
  if (!qword_257105620)
  {
    result = MEMORY[0x242691F34](&unk_2412ABE00, &type metadata for ErrorMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105620);
  }
  return result;
}

unint64_t sub_241279A1C()
{
  unint64_t result;

  result = qword_257105628;
  if (!qword_257105628)
  {
    result = MEMORY[0x242691F34](&unk_2412ABEB8, &type metadata for ReplyMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105628);
  }
  return result;
}

unint64_t sub_241279A5C()
{
  unint64_t result;

  result = qword_257105630;
  if (!qword_257105630)
  {
    result = MEMORY[0x242691F34](&unk_2412ABE28, &type metadata for ReplyMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105630);
  }
  return result;
}

unint64_t sub_241279A9C()
{
  unint64_t result;

  result = qword_257105638;
  if (!qword_257105638)
  {
    result = MEMORY[0x242691F34](&unk_2412ABE50, &type metadata for ReplyMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105638);
  }
  return result;
}

unint64_t sub_241279ADC()
{
  unint64_t result;

  result = qword_257105640;
  if (!qword_257105640)
  {
    result = MEMORY[0x242691F34](&unk_2412ABD38, &type metadata for ErrorMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105640);
  }
  return result;
}

unint64_t sub_241279B1C()
{
  unint64_t result;

  result = qword_257105648;
  if (!qword_257105648)
  {
    result = MEMORY[0x242691F34](&unk_2412ABD60, &type metadata for ErrorMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105648);
  }
  return result;
}

unint64_t sub_241279B5C()
{
  unint64_t result;

  result = qword_257105650;
  if (!qword_257105650)
  {
    result = MEMORY[0x242691F34](&unk_2412ABC80, &type metadata for InteractWithControlMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105650);
  }
  return result;
}

unint64_t sub_241279B9C()
{
  unint64_t result;

  result = qword_257105658;
  if (!qword_257105658)
  {
    result = MEMORY[0x242691F34](&unk_2412ABCA8, &type metadata for InteractWithControlMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105658);
  }
  return result;
}

unint64_t sub_241279BDC()
{
  unint64_t result;

  result = qword_257105660;
  if (!qword_257105660)
  {
    result = MEMORY[0x242691F34](&unk_2412ABBC8, &type metadata for InteractWithDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105660);
  }
  return result;
}

unint64_t sub_241279C1C()
{
  unint64_t result;

  result = qword_257105668;
  if (!qword_257105668)
  {
    result = MEMORY[0x242691F34](&unk_2412ABBF0, &type metadata for InteractWithDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105668);
  }
  return result;
}

unint64_t sub_241279C5C()
{
  unint64_t result;

  result = qword_257105670;
  if (!qword_257105670)
  {
    result = MEMORY[0x242691F34](&unk_2412ABB10, &type metadata for InteractWithSessionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105670);
  }
  return result;
}

unint64_t sub_241279C9C()
{
  unint64_t result;

  result = qword_257105678;
  if (!qword_257105678)
  {
    result = MEMORY[0x242691F34](&unk_2412ABB38, &type metadata for InteractWithSessionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105678);
  }
  return result;
}

unint64_t sub_241279CDC()
{
  unint64_t result;

  result = qword_257105680;
  if (!qword_257105680)
  {
    result = MEMORY[0x242691F34](&unk_2412ABA58, &type metadata for InteractWithItemMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105680);
  }
  return result;
}

unint64_t sub_241279D1C()
{
  unint64_t result;

  result = qword_257105688;
  if (!qword_257105688)
  {
    result = MEMORY[0x242691F34](&unk_2412ABA80, &type metadata for InteractWithItemMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105688);
  }
  return result;
}

unint64_t sub_241279D5C()
{
  unint64_t result;

  result = qword_257105690;
  if (!qword_257105690)
  {
    result = MEMORY[0x242691F34](&unk_2412AB9A0, &type metadata for SetExpandedSessionsStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105690);
  }
  return result;
}

unint64_t sub_241279D9C()
{
  unint64_t result;

  result = qword_257105698;
  if (!qword_257105698)
  {
    result = MEMORY[0x242691F34](&unk_2412AB9C8, &type metadata for SetExpandedSessionsStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105698);
  }
  return result;
}

unint64_t sub_241279DDC()
{
  unint64_t result;

  result = qword_2571056A0;
  if (!qword_2571056A0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB8E8, &type metadata for SetUIPresentedStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056A0);
  }
  return result;
}

unint64_t sub_241279E1C()
{
  unint64_t result;

  result = qword_2571056A8;
  if (!qword_2571056A8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB910, &type metadata for SetUIPresentedStateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056A8);
  }
  return result;
}

unint64_t sub_241279E5C()
{
  unint64_t result;

  result = qword_2571056B0;
  if (!qword_2571056B0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB830, &type metadata for SetRoutingModeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056B0);
  }
  return result;
}

unint64_t sub_241279E9C()
{
  unint64_t result;

  result = qword_2571056B8;
  if (!qword_2571056B8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB858, &type metadata for SetRoutingModeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056B8);
  }
  return result;
}

unint64_t sub_241279EDC()
{
  unint64_t result;

  result = qword_2571056C0;
  if (!qword_2571056C0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB778, &type metadata for IPCConnectMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056C0);
  }
  return result;
}

unint64_t sub_241279F1C()
{
  unint64_t result;

  result = qword_2571056C8;
  if (!qword_2571056C8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB7A0, &type metadata for IPCConnectMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056C8);
  }
  return result;
}

unint64_t sub_241279F5C()
{
  unint64_t result;

  result = qword_2571056D0;
  if (!qword_2571056D0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB6C0, &type metadata for PrototypeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056D0);
  }
  return result;
}

unint64_t sub_241279F9C()
{
  unint64_t result;

  result = qword_2571056D8;
  if (!qword_2571056D8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB6E8, &type metadata for PrototypeMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056D8);
  }
  return result;
}

unint64_t sub_241279FDC()
{
  unint64_t result;

  result = qword_2571056E0;
  if (!qword_2571056E0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB608, &type metadata for IPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056E0);
  }
  return result;
}

unint64_t sub_24127A01C()
{
  unint64_t result;

  result = qword_2571056E8;
  if (!qword_2571056E8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB630, &type metadata for IPCClientMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056E8);
  }
  return result;
}

unint64_t sub_24127A05C()
{
  unint64_t result;

  result = qword_2571056F0;
  if (!qword_2571056F0)
  {
    result = MEMORY[0x242691F34](&unk_2412AB550, &type metadata for IPCClientMessage.UpdateRoutingSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056F0);
  }
  return result;
}

unint64_t sub_24127A09C()
{
  unint64_t result;

  result = qword_2571056F8;
  if (!qword_2571056F8)
  {
    result = MEMORY[0x242691F34](&unk_2412AB578, &type metadata for IPCClientMessage.UpdateRoutingSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571056F8);
  }
  return result;
}

unint64_t sub_24127A0DC()
{
  unint64_t result;

  result = qword_257105700;
  if (!qword_257105700)
  {
    result = MEMORY[0x242691F34](&unk_2412AB498, &type metadata for IPCClientMessage.PresentDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105700);
  }
  return result;
}

unint64_t sub_24127A11C()
{
  unint64_t result;

  result = qword_257105708;
  if (!qword_257105708)
  {
    result = MEMORY[0x242691F34](&unk_2412AB4C0, &type metadata for IPCClientMessage.PresentDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105708);
  }
  return result;
}

unint64_t sub_24127A15C()
{
  unint64_t result;

  result = qword_257105710;
  if (!qword_257105710)
  {
    result = MEMORY[0x242691F34](&unk_2412AB3E0, &type metadata for IPCClientMessage.InteractWithItemResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105710);
  }
  return result;
}

unint64_t sub_24127A19C()
{
  unint64_t result;

  result = qword_257105718;
  if (!qword_257105718)
  {
    result = MEMORY[0x242691F34](&unk_2412AB408, &type metadata for IPCClientMessage.InteractWithItemResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105718);
  }
  return result;
}

unint64_t sub_24127A1DC()
{
  unint64_t result;

  result = qword_257105720;
  if (!qword_257105720)
  {
    result = MEMORY[0x242691F34](&unk_2412AB328, &type metadata for IPCClientMessage.SessionTransitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105720);
  }
  return result;
}

unint64_t sub_24127A21C()
{
  unint64_t result;

  result = qword_257105728;
  if (!qword_257105728)
  {
    result = MEMORY[0x242691F34](&unk_2412AB350, &type metadata for IPCClientMessage.SessionTransitionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105728);
  }
  return result;
}

unint64_t sub_24127A25C()
{
  unint64_t result;

  result = qword_257105730;
  if (!qword_257105730)
  {
    result = MEMORY[0x242691F34](&unk_2412AB270, &type metadata for IPCServerMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105730);
  }
  return result;
}

unint64_t sub_24127A29C()
{
  unint64_t result;

  result = qword_257105738;
  if (!qword_257105738)
  {
    result = MEMORY[0x242691F34](&unk_2412AB298, &type metadata for IPCServerMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105738);
  }
  return result;
}

unint64_t sub_24127A2DC()
{
  unint64_t result;

  result = qword_257105740;
  if (!qword_257105740)
  {
    result = MEMORY[0x242691F34](&unk_2412AB1B8, &type metadata for IPCServerMessage.PrototypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105740);
  }
  return result;
}

unint64_t sub_24127A31C()
{
  unint64_t result;

  result = qword_257105748;
  if (!qword_257105748)
  {
    result = MEMORY[0x242691F34](&unk_2412AB1E0, &type metadata for IPCServerMessage.PrototypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105748);
  }
  return result;
}

unint64_t sub_24127A35C()
{
  unint64_t result;

  result = qword_257105750;
  if (!qword_257105750)
  {
    result = MEMORY[0x242691F34](&unk_2412AB100, &type metadata for IPCServerMessage.ConnectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105750);
  }
  return result;
}

unint64_t sub_24127A39C()
{
  unint64_t result;

  result = qword_257105758;
  if (!qword_257105758)
  {
    result = MEMORY[0x242691F34](&unk_2412AB128, &type metadata for IPCServerMessage.ConnectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105758);
  }
  return result;
}

unint64_t sub_24127A3DC()
{
  unint64_t result;

  result = qword_257105760;
  if (!qword_257105760)
  {
    result = MEMORY[0x242691F34](&unk_2412AB048, &type metadata for IPCServerMessage.SetRoutingModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105760);
  }
  return result;
}

unint64_t sub_24127A41C()
{
  unint64_t result;

  result = qword_257105768;
  if (!qword_257105768)
  {
    result = MEMORY[0x242691F34](&unk_2412AB070, &type metadata for IPCServerMessage.SetRoutingModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105768);
  }
  return result;
}

unint64_t sub_24127A45C()
{
  unint64_t result;

  result = qword_257105770;
  if (!qword_257105770)
  {
    result = MEMORY[0x242691F34](&unk_2412AAF90, &type metadata for IPCServerMessage.SetUIPresentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105770);
  }
  return result;
}

unint64_t sub_24127A49C()
{
  unint64_t result;

  result = qword_257105778;
  if (!qword_257105778)
  {
    result = MEMORY[0x242691F34](&unk_2412AAFB8, &type metadata for IPCServerMessage.SetUIPresentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105778);
  }
  return result;
}

unint64_t sub_24127A4DC()
{
  unint64_t result;

  result = qword_257105780;
  if (!qword_257105780)
  {
    result = MEMORY[0x242691F34](&unk_2412AAED8, &type metadata for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105780);
  }
  return result;
}

unint64_t sub_24127A51C()
{
  unint64_t result;

  result = qword_257105788;
  if (!qword_257105788)
  {
    result = MEMORY[0x242691F34](&unk_2412AAF00, &type metadata for IPCServerMessage.SetExpandedSessionIdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105788);
  }
  return result;
}

unint64_t sub_24127A55C()
{
  unint64_t result;

  result = qword_257105790;
  if (!qword_257105790)
  {
    result = MEMORY[0x242691F34](&unk_2412AAE20, &type metadata for IPCServerMessage.InteractWithItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105790);
  }
  return result;
}

unint64_t sub_24127A59C()
{
  unint64_t result;

  result = qword_257105798;
  if (!qword_257105798)
  {
    result = MEMORY[0x242691F34](&unk_2412AAE48, &type metadata for IPCServerMessage.InteractWithItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105798);
  }
  return result;
}

unint64_t sub_24127A5DC()
{
  unint64_t result;

  result = qword_2571057A0;
  if (!qword_2571057A0)
  {
    result = MEMORY[0x242691F34](&unk_2412AAD68, &type metadata for IPCServerMessage.InteractWithSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057A0);
  }
  return result;
}

unint64_t sub_24127A61C()
{
  unint64_t result;

  result = qword_2571057A8;
  if (!qword_2571057A8)
  {
    result = MEMORY[0x242691F34](&unk_2412AAD90, &type metadata for IPCServerMessage.InteractWithSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057A8);
  }
  return result;
}

unint64_t sub_24127A65C()
{
  unint64_t result;

  result = qword_2571057B0;
  if (!qword_2571057B0)
  {
    result = MEMORY[0x242691F34](&unk_2412AACB0, &type metadata for IPCServerMessage.InteractWithDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057B0);
  }
  return result;
}

unint64_t sub_24127A69C()
{
  unint64_t result;

  result = qword_2571057B8;
  if (!qword_2571057B8)
  {
    result = MEMORY[0x242691F34](&unk_2412AACD8, &type metadata for IPCServerMessage.InteractWithDialogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057B8);
  }
  return result;
}

unint64_t sub_24127A6DC()
{
  unint64_t result;

  result = qword_2571057C0;
  if (!qword_2571057C0)
  {
    result = MEMORY[0x242691F34](&unk_2412AABF8, &type metadata for IPCServerMessage.InteractWithControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057C0);
  }
  return result;
}

unint64_t sub_24127A71C()
{
  unint64_t result;

  result = qword_2571057C8;
  if (!qword_2571057C8)
  {
    result = MEMORY[0x242691F34](&unk_2412AAC20, &type metadata for IPCServerMessage.InteractWithControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057C8);
  }
  return result;
}

unint64_t sub_24127A75C()
{
  unint64_t result;

  result = qword_2571057D0;
  if (!qword_2571057D0)
  {
    result = MEMORY[0x242691F34](&unk_2412AAB40, &type metadata for SessionTransitionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057D0);
  }
  return result;
}

unint64_t sub_24127A79C()
{
  unint64_t result;

  result = qword_2571057D8;
  if (!qword_2571057D8)
  {
    result = MEMORY[0x242691F34](&unk_2412AAB68, &type metadata for SessionTransitionMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057D8);
  }
  return result;
}

unint64_t sub_24127A7DC()
{
  unint64_t result;

  result = qword_2571057E0;
  if (!qword_2571057E0)
  {
    result = MEMORY[0x242691F34](&unk_2412AAA88, &type metadata for InteractWithItemResultMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057E0);
  }
  return result;
}

unint64_t sub_24127A81C()
{
  unint64_t result;

  result = qword_2571057E8;
  if (!qword_2571057E8)
  {
    result = MEMORY[0x242691F34](&unk_2412AAAB0, &type metadata for InteractWithItemResultMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057E8);
  }
  return result;
}

unint64_t sub_24127A85C()
{
  unint64_t result;

  result = qword_2571057F0;
  if (!qword_2571057F0)
  {
    result = MEMORY[0x242691F34](&unk_2412AA9D0, &type metadata for PresentDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057F0);
  }
  return result;
}

unint64_t sub_24127A89C()
{
  unint64_t result;

  result = qword_2571057F8;
  if (!qword_2571057F8)
  {
    result = MEMORY[0x242691F34](&unk_2412AA9F8, &type metadata for PresentDialogMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571057F8);
  }
  return result;
}

unint64_t sub_24127A8DC()
{
  unint64_t result;

  result = qword_257105800;
  if (!qword_257105800)
  {
    result = MEMORY[0x242691F34](&unk_2412AA918, &type metadata for TransportRoutingSessionUpdateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105800);
  }
  return result;
}

unint64_t sub_24127A91C()
{
  unint64_t result;

  result = qword_257105808;
  if (!qword_257105808)
  {
    result = MEMORY[0x242691F34](&unk_2412AA940, &type metadata for TransportRoutingSessionUpdateMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105808);
  }
  return result;
}

unint64_t sub_24127A95C()
{
  unint64_t result;

  result = qword_257105810;
  if (!qword_257105810)
  {
    result = MEMORY[0x242691F34](&unk_2412AA860, &type metadata for TransportRoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105810);
  }
  return result;
}

unint64_t sub_24127A99C()
{
  unint64_t result;

  result = qword_257105818;
  if (!qword_257105818)
  {
    result = MEMORY[0x242691F34](&unk_2412AA888, &type metadata for TransportRoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105818);
  }
  return result;
}

unint64_t sub_24127A9DC()
{
  unint64_t result;

  result = qword_257105820;
  if (!qword_257105820)
  {
    result = MEMORY[0x242691F34](&unk_2412AA7A8, &type metadata for TransportRoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105820);
  }
  return result;
}

unint64_t sub_24127AA1C()
{
  unint64_t result;

  result = qword_257105828;
  if (!qword_257105828)
  {
    result = MEMORY[0x242691F34](&unk_2412AA7D0, &type metadata for TransportRoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105828);
  }
  return result;
}

void sub_24127AA58()
{
  JUMPOUT(0x242691F34);
}

void sub_24127AA68()
{
  JUMPOUT(0x242691F34);
}

uint64_t sub_24127AA7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x242691EF8](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return sub_2412A8B7C();
}

_QWORD *OUTLINED_FUNCTION_4_0()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return sub_2412A8DA4();
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_8_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return sub_2412A8C00();
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return sub_2412A8DA4();
}

uint64_t OUTLINED_FUNCTION_11_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

void OUTLINED_FUNCTION_12_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_241274E98(0, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_13_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return sub_2412A8DA4();
}

void OUTLINED_FUNCTION_15_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_241274E98(0, a2, a3, v5, a5);
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

_QWORD *OUTLINED_FUNCTION_18_1()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return sub_2412A8DB0();
}

uint64_t OUTLINED_FUNCTION_24_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_27_2(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_241274E98(0, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_28_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_29_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_30_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return sub_2412A8DB0();
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_34_1(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_241274E98(0, a2, a3, v5, a5);
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return sub_2412A8C00();
}

_QWORD *OUTLINED_FUNCTION_37_2(_QWORD *a1, uint64_t a2)
{
  return __swift_project_boxed_opaque_existential_1(a1, a2);
}

uint64_t OUTLINED_FUNCTION_38_2()
{
  return sub_2412A8C00();
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return sub_2412A8D98();
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  return sub_2412A8BC4();
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return sub_2412A8D5C();
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return sub_2412A8C00();
}

void OUTLINED_FUNCTION_48_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_241274E98(0, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_52_1()
{
  return sub_2412A8DB0();
}

uint64_t OUTLINED_FUNCTION_53_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0(v0);
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return sub_2412A8C00();
}

uint64_t OUTLINED_FUNCTION_55_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  return sub_2412602DC((uint64_t)&a10, (uint64_t)&a48);
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_57_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return sub_2412A8CB4();
}

void OUTLINED_FUNCTION_59_1(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_241274E98(0, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  return sub_2412A8C3C();
}

void OUTLINED_FUNCTION_61_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 184);
  *(_QWORD *)(v0 - 144) = *(_QWORD *)(v0 - 176);
  *(_QWORD *)(v0 - 136) = v1;
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  return sub_2412A88B8();
}

void OUTLINED_FUNCTION_63_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_64_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  return sub_2412A8DA4();
}

void OUTLINED_FUNCTION_67_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t OUTLINED_FUNCTION_69_0()
{
  return sub_2412A8D5C();
}

void OUTLINED_FUNCTION_71(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  return sub_2412A8DB0();
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_77_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

void OUTLINED_FUNCTION_78_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
}

void OUTLINED_FUNCTION_81(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  sub_241274E98(0, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return swift_bridgeObjectRetain();
}

void *OUTLINED_FUNCTION_83_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return sub_2412A8AE0();
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_94_0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24125F7B0(v0, v1);
}

void OUTLINED_FUNCTION_95_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_98_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_99()
{
  return sub_2412A8D68();
}

uint64_t OUTLINED_FUNCTION_100()
{
  return sub_2412A8D74();
}

uint64_t OUTLINED_FUNCTION_103()
{
  uint64_t v0;

  return sub_241274FBC(v0 + 344);
}

void OUTLINED_FUNCTION_104(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_241274E30((__int16 *)va);
}

unint64_t OUTLINED_FUNCTION_107()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 1;
  return sub_24126FA2C();
}

uint64_t OUTLINED_FUNCTION_108()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_109()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 8;
  return sub_24126F888();
}

unint64_t OUTLINED_FUNCTION_110()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 7;
  return sub_24126F8C4();
}

unint64_t OUTLINED_FUNCTION_111()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 6;
  return sub_24126F900();
}

uint64_t OUTLINED_FUNCTION_112(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_113()
{
  return sub_2412A8678();
}

unint64_t OUTLINED_FUNCTION_114()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 5;
  return sub_24126F93C();
}

uint64_t OUTLINED_FUNCTION_115()
{
  return swift_unknownObjectRelease();
}

unint64_t OUTLINED_FUNCTION_116()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 4;
  return sub_24126F978();
}

uint64_t OUTLINED_FUNCTION_119()
{
  uint64_t v0;

  sub_2412612EC((const void *)(v0 + 712), (void *)(v0 + 416));
  return nullsub_1(v0 + 416);
}

void *OUTLINED_FUNCTION_120(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x121uLL);
}

unint64_t OUTLINED_FUNCTION_121()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 3;
  return sub_24126F9B4();
}

uint64_t OUTLINED_FUNCTION_122()
{
  return sub_2412A8BB8();
}

unint64_t OUTLINED_FUNCTION_123()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 2;
  return sub_24126F9F0();
}

uint64_t OUTLINED_FUNCTION_124()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t sub_24127B274(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24127B2F0(0, result, 0xD00000000000003ELL, 0x80000002412B4D50);
    sub_24127B4C4();
    sub_24127B50C();
    return sub_2412A8900();
  }
  return result;
}

void sub_24127B2F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = a1;
    if (a2 >= a1)
    {
      v6 = HIBYTE(a4) & 0xF;
      if ((a4 & 0x2000000000000000) == 0)
        v6 = a3 & 0xFFFFFFFFFFFFLL;
      v19 = v6;
      v7 = MEMORY[0x24BEE4AF8];
      while (v5 < a2)
      {
        if (v19)
        {
          v8 = sub_2412A88C4();
          if (v8 < 0)
            goto LABEL_22;
          v9 = v8;
          if (!v8)
            goto LABEL_23;
          v20 = 0;
          MEMORY[0x242691FC4](&v20, 8);
          if (v9 > v20 * v9)
          {
            v10 = -(uint64_t)v9 % v9;
            while (v10 > v20 * v9)
            {
              v20 = 0;
              MEMORY[0x242691FC4](&v20, 8);
            }
          }
          sub_2412A88D0();
          v11 = sub_2412A88F4();
          v13 = v12;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_241289924(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
            v7 = v17;
          }
          v15 = *(_QWORD *)(v7 + 16);
          v14 = *(_QWORD *)(v7 + 24);
          if (v15 >= v14 >> 1)
          {
            sub_241289924(v14 > 1, v15 + 1, 1, v7);
            v7 = v18;
          }
          *(_QWORD *)(v7 + 16) = v15 + 1;
          v16 = v7 + 16 * v15;
          *(_QWORD *)(v16 + 32) = v11;
          *(_QWORD *)(v16 + 40) = v13;
        }
        if (++v5 == a2)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
  }
}

void sub_24127B4C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257105830)
  {
    v0 = sub_2412A8948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257105830);
  }
}

unint64_t sub_24127B50C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257105838;
  if (!qword_257105838)
  {
    sub_24127B4C4();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257105838);
  }
  return result;
}

uint64_t MediaLiveActivityAttributes.ContentState.rawNowPlayingActivityUIState.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MediaLiveActivityAttributes.ContentState.rawNowPlayingActivityUIState.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaLiveActivityAttributes.ContentState.rawNowPlayingActivityUIState.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t MediaLiveActivityAttributes.ContentState.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v10;
  uint64_t result;

  v6 = *v3;
  v7 = *((_BYTE *)v3 + 8);
  if (sub_2412A88A0() == a1 && v8 == a2)
  {
    result = swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
    {
LABEL_7:
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }
  }
  else
  {
    v10 = sub_2412A8CFC();
    result = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0 || (v7 & 1) != 0)
      goto LABEL_7;
  }
  *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE1768];
  *(_QWORD *)a3 = v6;
  return result;
}

MediaControl::MediaLiveActivityAttributes::ContentState __swiftcall MediaLiveActivityAttributes.ContentState.init()()
{
  uint64_t v0;
  MediaControl::MediaLiveActivityAttributes::ContentState result;

  *(_QWORD *)v0 = 0;
  *(_BYTE *)(v0 + 8) = 1;
  return result;
}

uint64_t MediaLiveActivityAttributes.ContentState.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return sub_2412A8D74();
  sub_2412A8D74();
  return sub_2412A8D68();
}

uint64_t static MediaLiveActivityAttributes.ContentState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_24127B6B8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001CLL && a2 == 0x80000002412B4DF0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_24127B73C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_24127B760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24127B6B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24127B788()
{
  sub_24127B8C0();
  return sub_2412A8DBC();
}

uint64_t sub_24127B7B0()
{
  sub_24127B8C0();
  return sub_2412A8DC8();
}

void MediaLiveActivityAttributes.ContentState.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  OUTLINED_FUNCTION_1_2();
  a19 = v21;
  a20 = v22;
  a10 = v20;
  v24 = v23;
  sub_24127C278(0, &qword_25437B2E8, (uint64_t (*)(void))sub_24127B8C0, (uint64_t)&type metadata for MediaLiveActivityAttributes.ContentState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v26 = v25;
  v27 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&a9 - v29;
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  sub_24127B8C0();
  sub_2412A8DB0();
  sub_2412A8C60();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24127B8C0()
{
  unint64_t result;

  result = qword_25437B298;
  if (!qword_25437B298)
  {
    result = MEMORY[0x242691F34](&unk_2412ACCD4, &type metadata for MediaLiveActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25437B298);
  }
  return result;
}

void MediaLiveActivityAttributes.ContentState.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  OUTLINED_FUNCTION_46_0();
  sub_2412A8D74();
  if (v1 != 1)
    sub_2412A8D68();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void MediaLiveActivityAttributes.ContentState.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v9 = v3;
  OUTLINED_FUNCTION_6_2(v1, &qword_25437B2D8, (uint64_t (*)(void))sub_24127B8C0, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24127B8C0();
  OUTLINED_FUNCTION_14_1();
  if (!v0)
  {
    v6 = sub_2412A8BAC();
    v8 = v7;
    OUTLINED_FUNCTION_7_1();
    *(_QWORD *)v9 = v6;
    *(_BYTE *)(v9 + 8) = v8 & 1;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_24127BA58()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2412A8D5C();
  sub_2412A8D74();
  if (v1 != 1)
    sub_2412A8D68();
  return sub_2412A8D98();
}

void sub_24127BAC0()
{
  MediaLiveActivityAttributes.ContentState.init(from:)();
}

#error "24127BADC: call analysis failed (funcsize=5)"

uint64_t MediaLiveActivityAttributes.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *v3;
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = result;
    swift_bridgeObjectRetain();
    v8 = sub_24127C1E4(v7, a2);
    if ((v9 & 1) != 0)
    {
      sub_241262070(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)a3);
    }
    else
    {
      *a3 = 0u;
      a3[1] = 0u;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void MediaLiveActivityAttributes.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18[3];

  OUTLINED_FUNCTION_1_2();
  v17 = v0;
  v2 = v1;
  v18[2] = *(id *)MEMORY[0x24BDAC8D0];
  sub_24127C278(0, &qword_25437B2E0, (uint64_t (*)(void))sub_24127C23C, (uint64_t)&type metadata for MediaLiveActivityAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18[-1] - v7;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24127C23C();
  sub_2412A8DB0();
  v9 = (void *)objc_opt_self();
  v10 = (void *)sub_2412A8834();
  v18[0] = 0;
  v11 = objc_msgSend(v9, sel_dataWithJSONObject_options_error_, v10, 0, v18);

  v12 = v18[0];
  if (v11)
  {
    v13 = (void *)sub_2412A86D8();
    v15 = v14;

    v18[0] = v13;
    v18[1] = v15;
    sub_241268AC0();
    sub_2412A8CB4();
    sub_24125F7B0((uint64_t)v13, (unint64_t)v15);
  }
  else
  {
    v16 = v12;
    sub_2412A8684();

    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_24127BD48(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24127BDD8()
{
  return 0x7475626972747461;
}

void sub_24127BDF4()
{
  sub_2412A8D5C();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

uint64_t sub_24127BE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24127BD48(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24127BE48()
{
  sub_24127C23C();
  return sub_2412A8DBC();
}

uint64_t sub_24127BE70()
{
  sub_24127C23C();
  return sub_2412A8DC8();
}

void MediaLiveActivityAttributes.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12[6];

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v12[5] = *(id *)MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_6_2(v1, &qword_25437B318, (uint64_t (*)(void))sub_24127C23C, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v4);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24127C23C();
  OUTLINED_FUNCTION_14_1();
  if (v0)
    goto LABEL_4;
  sub_241268BDC();
  sub_2412A8C00();
  v5 = v12[1];
  v6 = v12[2];
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_2412A86C0();
  v12[0] = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, v12);

  v10 = v12[0];
  if (v9)
  {
    sub_2412A8A5C();
    sub_24125F7B0((uint64_t)v5, (unint64_t)v6);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_3_2();
    sub_24127C2D4();
    swift_dynamicCast();
LABEL_4:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
    OUTLINED_FUNCTION_0_1();
    return;
  }
  v11 = v10;
  sub_2412A8684();

  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

MediaControl::MediaLiveActivityAttributes __swiftcall MediaLiveActivityAttributes.init(attributes:)(MediaControl::MediaLiveActivityAttributes attributes)
{
  MediaControl::MediaLiveActivityAttributes *v1;

  v1->attributes._rawValue = attributes.attributes._rawValue;
  return attributes;
}

unint64_t MediaLiveActivityAttributes.description.getter()
{
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2412A8858();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  return 0xD00000000000002ALL;
}

void sub_24127C170()
{
  MediaLiveActivityAttributes.init(from:)();
}

void sub_24127C184()
{
  MediaLiveActivityAttributes.encode(to:)();
}

unint64_t sub_24127C198(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_7_2();
  sub_241263834();
  v2 = OUTLINED_FUNCTION_39_2();
  return sub_24127C790(a1, v2);
}

unint64_t sub_24127C1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  OUTLINED_FUNCTION_7_2();
  sub_2412A88B8();
  v4 = OUTLINED_FUNCTION_39_2();
  return sub_24127C86C(a1, a2, v4);
}

unint64_t sub_24127C23C()
{
  unint64_t result;

  result = qword_25437B300;
  if (!qword_25437B300)
  {
    result = MEMORY[0x242691F34](&unk_2412ACC84, &type metadata for MediaLiveActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25437B300);
  }
  return result;
}

void sub_24127C278(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_24127C2D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25437B310)
  {
    v0 = sub_2412A8870();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25437B310);
  }
}

unint64_t sub_24127C334()
{
  unint64_t result;

  result = qword_25437B288;
  if (!qword_25437B288)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaLiveActivityAttributes.ContentState, &type metadata for MediaLiveActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_25437B288);
  }
  return result;
}

unint64_t sub_24127C374()
{
  unint64_t result;

  result = qword_25437B2D0;
  if (!qword_25437B2D0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaLiveActivityAttributes, &type metadata for MediaLiveActivityAttributes);
    atomic_store(result, (unint64_t *)&qword_25437B2D0);
  }
  return result;
}

unint64_t sub_24127C3B4()
{
  unint64_t result;

  result = qword_25437B2C8;
  if (!qword_25437B2C8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaLiveActivityAttributes, &type metadata for MediaLiveActivityAttributes);
    atomic_store(result, (unint64_t *)&qword_25437B2C8);
  }
  return result;
}

unint64_t sub_24127C3F4()
{
  unint64_t result;

  result = qword_25437B2C0;
  if (!qword_25437B2C0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaLiveActivityAttributes.ContentState, &type metadata for MediaLiveActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_25437B2C0);
  }
  return result;
}

unint64_t sub_24127C434()
{
  unint64_t result;

  result = qword_25437B2B0;
  if (!qword_25437B2B0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaLiveActivityAttributes.ContentState, &type metadata for MediaLiveActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_25437B2B0);
  }
  return result;
}

unint64_t sub_24127C474()
{
  unint64_t result;

  result = qword_25437B2B8;
  if (!qword_25437B2B8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for MediaLiveActivityAttributes.ContentState, &type metadata for MediaLiveActivityAttributes.ContentState);
    atomic_store(result, (unint64_t *)&qword_25437B2B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaLiveActivityAttributes()
{
  return &type metadata for MediaLiveActivityAttributes;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MediaLiveActivityAttributes.ContentState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MediaLiveActivityAttributes.ContentState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MediaLiveActivityAttributes.ContentState()
{
  return &type metadata for MediaLiveActivityAttributes.ContentState;
}

ValueMetadata *type metadata accessor for MediaLiveActivityAttributes.CodingKeys()
{
  return &type metadata for MediaLiveActivityAttributes.CodingKeys;
}

uint64_t _s12MediaControl27MediaLiveActivityAttributesV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24127C584 + 4 * byte_2412AC940[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24127C5A4 + 4 * byte_2412AC945[v4]))();
}

_BYTE *sub_24127C584(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24127C5A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24127C5AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24127C5B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24127C5BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24127C5C4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaLiveActivityAttributes.ContentState.CodingKeys()
{
  return &type metadata for MediaLiveActivityAttributes.ContentState.CodingKeys;
}

unint64_t sub_24127C5E4()
{
  unint64_t result;

  result = qword_257105840;
  if (!qword_257105840)
  {
    result = MEMORY[0x242691F34](&unk_2412ACBA4, &type metadata for MediaLiveActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105840);
  }
  return result;
}

unint64_t sub_24127C624()
{
  unint64_t result;

  result = qword_257105848;
  if (!qword_257105848)
  {
    result = MEMORY[0x242691F34](&unk_2412ACC5C, &type metadata for MediaLiveActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105848);
  }
  return result;
}

unint64_t sub_24127C664()
{
  unint64_t result;

  result = qword_25437B2F0;
  if (!qword_25437B2F0)
  {
    result = MEMORY[0x242691F34](&unk_2412ACBCC, &type metadata for MediaLiveActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25437B2F0);
  }
  return result;
}

unint64_t sub_24127C6A4()
{
  unint64_t result;

  result = qword_25437B308;
  if (!qword_25437B308)
  {
    result = MEMORY[0x242691F34](&unk_2412ACBF4, &type metadata for MediaLiveActivityAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25437B308);
  }
  return result;
}

unint64_t sub_24127C6E4()
{
  unint64_t result;

  result = qword_25437B2A8;
  if (!qword_25437B2A8)
  {
    result = MEMORY[0x242691F34](&unk_2412ACB14, &type metadata for MediaLiveActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25437B2A8);
  }
  return result;
}

unint64_t sub_24127C724()
{
  unint64_t result;

  result = qword_25437B2A0;
  if (!qword_25437B2A0)
  {
    result = MEMORY[0x242691F34](&unk_2412ACB3C, &type metadata for MediaLiveActivityAttributes.ContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25437B2A0);
  }
  return result;
}

unint64_t sub_24127C760(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2412A8A80();
  return sub_24127C94C(a1, v2);
}

unint64_t sub_24127C790(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  uint64_t v8;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for ArtworkToken();
    v7 = *(_QWORD *)(v2 + 48);
    if (!static ArtworkToken.== infix(_:_:)(*(_QWORD **)(v7 + 8 * i), a1))
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        if (static ArtworkToken.== infix(_:_:)(*(_QWORD **)(v7 + 8 * i), a1))
          break;
      }
    }
  }
  return i;
}

unint64_t sub_24127C86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2412A8CFC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2412A8CFC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24127C94C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_24127CA10(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2426917E4](v9, a1);
      sub_24127CA4C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_24127CA10(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_24127CA4C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_6_2(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_24127C278(0, a2, a3, v5, a5);
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return sub_2412A8D5C();
}

uint64_t RoutingSessionsController.__allocating_init(dataSource:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _UNKNOWN **v6;

  v4 = swift_allocObject();
  v5 = OUTLINED_FUNCTION_12_1();
  RoutingSessionsController.init(dataSource:configuration:)(v5, v6, a3);
  return v4;
}

uint64_t RoutingSessionsController.init(dataSource:configuration:)(uint64_t a1, _UNKNOWN **a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  uint64_t result;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD v20[37];
  _BYTE v21[296];
  _BYTE v22[296];
  _BYTE v23[296];

  v4 = v3;
  v7 = *(_QWORD *)a3;
  v8 = *(_QWORD *)(a3 + 8);
  v9 = *(unsigned __int8 *)(a3 + 16);
  v10 = *(unsigned __int8 *)(a3 + 17);
  v11 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  sub_24126C380(v23);
  sub_24126C29C((uint64_t)v23, v4 + 64);
  *(_QWORD *)(v4 + 368) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = v8;
  *(_BYTE *)(v4 + 48) = v9;
  *(_BYTE *)(v4 + 49) = v10;
  v12 = a1;
  *(_QWORD *)(v4 + 56) = v11;
  if (!a1)
  {
    type metadata accessor for DistantRoutingSessionsDataSource();
    v13 = swift_allocObject();
    swift_retain_n();
    sub_24125E37C(v7, v8, v9);
    if (v10)
      v14 = 256;
    else
      v14 = 0;
    v15 = v14 | v9;
    swift_bridgeObjectRetain();
    v12 = sub_24127DB24(v7, v8, v15, v11, v4, v4, v13);
    a2 = &off_251157AE0;
  }
  *(_QWORD *)(v4 + 16) = v12;
  *(_QWORD *)(v4 + 24) = a2;
  OUTLINED_FUNCTION_25_3();
  result = OUTLINED_FUNCTION_115();
  if (*(_QWORD *)(v4 + 16))
  {
    v17 = *(_QWORD *)(v4 + 24);
    ObjectType = swift_getObjectType();
    v19 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 8);
    swift_unknownObjectRetain();
    v19(v20, ObjectType, v17);
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_18_2();
    sub_24126C29C((uint64_t)v20, (uint64_t)v21);
    OUTLINED_FUNCTION_2_2();
    sub_24126C29C(v4 + 64, (uint64_t)v22);
    sub_24126C29C((uint64_t)v21, v4 + 64);
    sub_24127DD08((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260958);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24127CCA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3;
  _BYTE v4[296];

  sub_24127CD4C();
  sub_24126C29C((uint64_t)&v3, (uint64_t)v4);
  return sub_24126C29C((uint64_t)v4, a1);
}

void sub_24127CCF0(uint64_t a1)
{
  _BYTE v1[296];
  _BYTE v2[296];

  sub_24126C29C(a1, (uint64_t)v2);
  sub_24126C29C((uint64_t)v2, (uint64_t)v1);
  sub_24127DD08((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260F04);
  sub_24127CDA8((uint64_t)v1);
}

uint64_t sub_24127CD4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[296];

  OUTLINED_FUNCTION_1_3();
  v1 = sub_24126C29C(v0 + 64, (uint64_t)v5);
  OUTLINED_FUNCTION_29_2(v1, v2, v3);
  return sub_24127DD08((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260F04);
}

void sub_24127CDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[296];
  _BYTE v6[304];

  sub_24126C29C(a1, (uint64_t)v5);
  OUTLINED_FUNCTION_2_2();
  v2 = sub_24126C29C(v1 + 64, (uint64_t)v6);
  OUTLINED_FUNCTION_29_2(v2, v3, v4);
  sub_24127DD08((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260958);
  OUTLINED_FUNCTION_44();
}

void sub_24127CE00()
{
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_24127CE38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = swift_unknownObjectRetain();
  return sub_24127CEA8(v2, v1);
}

void sub_24127CE70()
{
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_28_2();
}

uint64_t sub_24127CEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_2_2();
  *(_QWORD *)(v2 + 368) = a2;
  OUTLINED_FUNCTION_12_1();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void sub_24127CF00(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_28_2();
}

uint64_t (*sub_24127CF40(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 368);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return sub_24127CF64;
}

void sub_24127CF68(_BYTE *a1@<X8>)
{
  char v2;

  sub_24127CFD4();
  *a1 = v2;
}

char *sub_24127CFA0(char *a1)
{
  char v2;

  v2 = *a1;
  return sub_24127D028(&v2);
}

void sub_24127CFD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  if (*(_QWORD *)(v0 + 16))
  {
    v2 = OUTLINED_FUNCTION_7_3();
    v3 = *(void (**)(uint64_t, uint64_t))(v1 + 32);
    OUTLINED_FUNCTION_17_3();
    v3(v2, v1);
    OUTLINED_FUNCTION_0_2();
  }
  else
  {
    __break(1u);
  }
}

char *sub_24127D028(char *result)
{
  uint64_t v1;
  char v2;
  char v3;

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *result;
    OUTLINED_FUNCTION_14_2();
    v3 = v2;
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_20_3((uint64_t)&v3);
    return (char *)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24127D08C(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  sub_24127CFD4();
  OUTLINED_FUNCTION_44();
}

void sub_24127D0BC(uint64_t a1, char a2)
{
  char *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 8);
    v2 = &v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = &v4;
  }
  sub_24127D028(v2);
  OUTLINED_FUNCTION_22_2();
}

void sub_24127D0F8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 24);
    OUTLINED_FUNCTION_14_2();
    v2 = *(void (**)(uint64_t))(v1 + 56);
    OUTLINED_FUNCTION_16_2();
    v3 = OUTLINED_FUNCTION_12_1();
    v2(v3);
    OUTLINED_FUNCTION_21_2();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24127D158(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void (*v5)(_QWORD, uint64_t, uint64_t);

  if (*(_QWORD *)(v1 + 16))
  {
    v3 = result;
    v4 = OUTLINED_FUNCTION_7_3();
    v5 = *(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 64);
    OUTLINED_FUNCTION_17_3();
    v5(v3 & 1, v4, v2);
    return OUTLINED_FUNCTION_0_2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24127D1AC(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  sub_24127D0F8();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_44();
}

void sub_24127D1E0(uint64_t a1)
{
  OUTLINED_FUNCTION_23_1(a1);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_24127D1F8()
{
  swift_bridgeObjectRetain();
  return sub_24127D280();
}

void sub_24127D220()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 24);
    OUTLINED_FUNCTION_14_2();
    v2 = *(void (**)(uint64_t))(v1 + 80);
    OUTLINED_FUNCTION_16_2();
    v3 = OUTLINED_FUNCTION_12_1();
    v2(v3);
    OUTLINED_FUNCTION_21_2();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24127D280()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_17_3();
    OUTLINED_FUNCTION_15_1();
    return OUTLINED_FUNCTION_0_2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24127D2C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_24127D220();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_24127D2F4(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24127D280();
    OUTLINED_FUNCTION_27_1();
  }
  else
  {
    sub_24127D280();
    OUTLINED_FUNCTION_44();
  }
}

uint64_t sub_24127D330()
{
  return sub_24127D468();
}

uint64_t sub_24127D33C(void *__src)
{
  _QWORD __dst[35];

  memcpy(__dst, __src, 0x111uLL);
  if (__dst[3])
  {
    swift_bridgeObjectRetain();
    sub_2412A88DC();
    sub_24127DD94((uint64_t)__dst);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_12_1();
    sub_2412A88DC();
    swift_bridgeObjectRelease();
    sub_24127DED0((uint64_t)__dst);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_12_1();
  sub_24127D4AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24127D400()
{
  uint64_t v0;
  uint64_t result;
  _BYTE v2[56];

  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_20_3((uint64_t)v2);
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24127D468()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_8_1();
    return OUTLINED_FUNCTION_5_3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24127D4AC()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_25_3();
    OUTLINED_FUNCTION_8_1();
    return OUTLINED_FUNCTION_5_3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24127D4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_BYTE *, uint64_t, uint64_t);
  _BYTE v4[56];

  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_13_3();
    v3 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 128);
    OUTLINED_FUNCTION_16_2();
    v3(v4, v2, v1);
    OUTLINED_FUNCTION_21_2();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24127D56C()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_7_3();
    OUTLINED_FUNCTION_17_3();
    OUTLINED_FUNCTION_15_1();
    return OUTLINED_FUNCTION_0_2();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24127D5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v3[296];
  _BYTE v4[296];

  sub_24126C29C(a3, (uint64_t)v4);
  sub_24126C29C((uint64_t)v4, (uint64_t)v3);
  sub_24127DD08((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260F04);
  sub_24127CDA8((uint64_t)v3);
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_28_2();
}

uint64_t sub_24127D60C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  _BYTE v4[296];
  uint64_t v5;
  _BYTE v6[656];

  if (result)
  {
    v2 = *(_QWORD *)(v1 + 368);
    ObjectType = swift_getObjectType();
    sub_24127CD4C();
    sub_24126C29C((uint64_t)&v5, (uint64_t)v6);
    sub_24126C29C((uint64_t)v6, (uint64_t)v4);
    (*(void (**)(uint64_t, _UNKNOWN **, _BYTE *, uint64_t, uint64_t))(v2 + 8))(v1, &protocol witness table for RoutingSessionsController, v4, ObjectType, v2);
    OUTLINED_FUNCTION_21_2();
    return sub_24127DD08((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260958);
  }
  return result;
}

uint64_t sub_24127D690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v12;
  uint64_t ObjectType;

  OUTLINED_FUNCTION_1_3();
  result = MEMORY[0x24269203C](v6 + 360);
  if (result)
  {
    v12 = *(_QWORD *)(v6 + 368);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16))(v6, &protocol witness table for RoutingSessionsController, a3, a4, a5, a6, ObjectType, v12);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_24127D738()
{
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_24_2();
}

uint64_t sub_24127D784(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[22];

  if (result)
  {
    v12 = v4;
    v10 = *(_QWORD *)(v2 + 368);
    ObjectType = swift_getObjectType();
    v14[0] = v5;
    v14[1] = v6;
    v14[2] = v7;
    v14[3] = v8;
    v14[4] = v9;
    v14[5] = v1;
    v14[6] = v3;
    (*(void (**)(uint64_t, _UNKNOWN **, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(v2, &protocol witness table for RoutingSessionsController, v14, v13, v12, ObjectType, v10);
    return OUTLINED_FUNCTION_18_2();
  }
  return result;
}

void sub_24127D7F4()
{
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_24_2();
}

void sub_24127D828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_27_3();
    OUTLINED_FUNCTION_9_3((uint64_t)&protocol witness table for RoutingSessionsController, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 32));
    OUTLINED_FUNCTION_18_2();
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_24127D850()
{
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_24_2();
}

void sub_24127D884(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1)
  {
    v2 = OUTLINED_FUNCTION_27_3();
    OUTLINED_FUNCTION_9_3((uint64_t)&protocol witness table for RoutingSessionsController, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 40));
    OUTLINED_FUNCTION_18_2();
  }
  OUTLINED_FUNCTION_16_0();
}

uint64_t RoutingSessionsController.deinit()
{
  uint64_t v0;
  _BYTE v2[304];

  swift_unknownObjectRelease();
  sub_24125F7F4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_bridgeObjectRelease();
  sub_24126C29C(v0 + 64, (uint64_t)v2);
  sub_24127DD08((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260958);
  sub_24126C444(v0 + 360);
  return v0;
}

uint64_t RoutingSessionsController.__deallocating_deinit()
{
  RoutingSessionsController.deinit();
  return swift_deallocClassInstance();
}

char *sub_24127D93C(char *a1)
{
  char v2;

  v2 = *a1;
  return sub_24127D028(&v2);
}

void (*sub_24127D964(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *a1 = v1;
  sub_24127CFD4();
  return sub_24127D0BC;
}

void (*sub_24127D9A0(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  sub_24127D0F8();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return sub_24127D1E0;
}

void (*sub_24127D9E0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  sub_24127D220();
  *a1 = v3;
  return sub_24127D2F4;
}

uint64_t (*sub_24127DA1C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x24269203C](v1 + 360);
  v5 = *(_QWORD *)(v1 + 368);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24127CF64;
}

void sub_24127DA88(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 368) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    OUTLINED_FUNCTION_115();
  }
  free(v3);
}

uint64_t sub_24127DB24(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[304];

  *(_QWORD *)(a7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a7 + 40) = 0;
  swift_unknownObjectWeakInit();
  sub_24126C380(v15);
  sub_24126C29C((uint64_t)v15, a7 + 48);
  *(_WORD *)(a7 + 337) = 0;
  *(_QWORD *)(a7 + 344) = MEMORY[0x24BEE4B08];
  sub_24125CF3C();
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(_QWORD *)(a7 + 352) = v12;
  *(_QWORD *)(a7 + 360) = 0;
  *(_QWORD *)(a7 + 368) = a1;
  *(_QWORD *)(a7 + 376) = a2;
  *(_BYTE *)(a7 + 384) = a3;
  *(_BYTE *)(a7 + 385) = HIBYTE(a3) & 1;
  *(_QWORD *)(a7 + 392) = a4;
  swift_allocObject();
  swift_weakInit();
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for MediaControlService();
  swift_allocObject();
  MediaControlService.init(messageHandler:interruptionHandler:)();
  *(_QWORD *)(a7 + 360) = v13;
  swift_release();
  *(_QWORD *)(a7 + 24) = &protocol witness table for RoutingSessionsController;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(a7 + 40) = &protocol witness table for RoutingSessionsController;
  swift_unknownObjectWeakAssign();
  sub_24126A2A4();
  swift_release();
  swift_release();
  return a7;
}

uint64_t sub_24127DCE0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_27_1();
  }
  return result;
}

uint64_t sub_24127DD08(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;

  v7 = *(_BYTE *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    *(_QWORD *)(a1 + 272),
    *(_QWORD *)(a1 + 280),
    v7);
  return a1;
}

uint64_t sub_24127DD94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 208);
  v6 = *(_QWORD *)(a1 + 216);
  v9 = *(_QWORD *)(a1 + 240);
  v10 = *(_QWORD *)(a1 + 232);
  v5 = *(_BYTE *)(a1 + 224);
  v8 = *(_BYTE *)(a1 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412612A8(v2);
  sub_2412612A8(v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412612D4(v7, v6, v5);
  sub_2412612D4(v10, v9, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24127DED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 208);
  v6 = *(_QWORD *)(a1 + 216);
  v9 = *(_QWORD *)(a1 + 240);
  v10 = *(_QWORD *)(a1 + 232);
  v5 = *(_BYTE *)(a1 + 224);
  v8 = *(_BYTE *)(a1 + 248);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24127DCE0(v2);
  sub_24127DCE0(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241260D28(v7, v6, v5);
  sub_241260D28(v10, v9, v8);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_24127E010()
{
  sub_24127CE70();
}

void sub_24127E028(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_44();
}

void sub_24127E040(_BYTE *a1@<X8>)
{
  char v2;

  sub_24127D0F8();
  *a1 = v2 & 1;
  OUTLINED_FUNCTION_44();
}

void sub_24127E068(unsigned __int8 *a1)
{
  sub_24127D158(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_24127E088(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_24127D220();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.snapshot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.routingMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.routingMode.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.routingMode.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.isPresentingUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.isPresentingUI.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.isPresentingUI.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.expandedSessionIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.expandedSessionIdentifiers.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.expandedSessionIdentifiers.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.interact(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.interactWithSession(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.interactWithItem(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.beginInteraction(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of RoutingSessionsControllerProtocol.end(continuousInteraction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of RoutingSessionsControllerDelegate.controller(_:didUpdateSnapshot:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of RoutingSessionsControllerDelegate.controller(_:willTransitionFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of RoutingSessionsControllerDelegate.controller(_:requestsToPresent:userActionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of RoutingSessionsControllerDelegate.controller(_:completedInteractionWithItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of RoutingSessionsControllerDelegate.controller(_:failedInteractionWithItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t type metadata accessor for RoutingSessionsController()
{
  return objc_opt_self();
}

uint64_t method lookup function for RoutingSessionsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RoutingSessionsController.__allocating_init(dataSource:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of RoutingSessionsController.snapshot.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of RoutingSessionsController.snapshot.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of RoutingSessionsController.snapshot.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of RoutingSessionsController.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of RoutingSessionsController.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of RoutingSessionsController.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of RoutingSessionsController.routingMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of RoutingSessionsController.routingMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of RoutingSessionsController.routingMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of RoutingSessionsController.isPresentingUI.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of RoutingSessionsController.isPresentingUI.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of RoutingSessionsController.isPresentingUI.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of RoutingSessionsController.expandedSessionIdentifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of RoutingSessionsController.expandedSessionIdentifiers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of RoutingSessionsController.expandedSessionIdentifiers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of RoutingSessionsController.interact(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of RoutingSessionsController.interactWithSession(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of RoutingSessionsController.interactWithItem(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of RoutingSessionsController.beginInteraction(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of RoutingSessionsController.end(continuousInteraction:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of RoutingSessionsController.dataSource(_:didUpdateSnapshot:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of RoutingSessionsController.dataSource(_:willTransitionFrom:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of RoutingSessionsController.dataSource(_:requestsToPresent:userActionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of RoutingSessionsController.dataSource(_:completedInteractionWithItem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of RoutingSessionsController.dataSource(_:failedInteractionWithItem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t sub_24127E2F0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24127E314(const void *a1)
{
  return sub_24126A1F8(a1);
}

uint64_t sub_24127E31C()
{
  return sub_24126A260();
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);

  return v4(v1, v0, v3, v2);
}

uint64_t OUTLINED_FUNCTION_9_3@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return a3(v4, a1, v5, v3, a2, v6);
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_20_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_1(uint64_t a1)
{
  return sub_24127D158(*(unsigned __int8 *)(a1 + 8));
}

void OUTLINED_FUNCTION_24_2()
{
  JUMPOUT(0x24269203CLL);
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_28_2()
{
  JUMPOUT(0x24269203CLL);
}

uint64_t OUTLINED_FUNCTION_29_2(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  return sub_24126C29C((uint64_t)va, v3);
}

void sub_24127E488(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_24127E4E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_24127E574 + 4 * byte_2412ACE16[a2]))(0xD000000000000015);
}

void sub_24127E574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 != 0xD000000000000015 || v2 != ((v1 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_85();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_24127E62C()
{
  return sub_2412A88B8();
}

void sub_24127E640(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24127E688()
{
  sub_2412A88B8();
  return OUTLINED_FUNCTION_27_1();
}

void sub_24127E714()
{
  sub_2412A8D74();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_24127E734@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void RoutingItem.identifier.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_75_1();
    OUTLINED_FUNCTION_57();
  }
  else
  {
    OUTLINED_FUNCTION_40_0();
  }
  OUTLINED_FUNCTION_79();
}

uint64_t RoutingItem.Properties.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t RoutingItem.Properties.init(rawValue:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static RoutingItem.Properties.isBuiltIn.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_88_1(a1);
}

void static RoutingItem.Properties.isPlaying.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_88_1(a1);
}

void static RoutingItem.Properties.isDisabled.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_88_1(a1);
}

uint64_t sub_24127E818@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return RoutingItem.Properties.init(rawValue:)(*a1, a2);
}

void sub_24127E820()
{
  sub_24126C808();
}

void sub_24127E828()
{
  sub_24127E714();
}

void sub_24127E830()
{
  sub_24126C830();
}

uint64_t sub_24127E838()
{
  sub_24128CA0C();
  return sub_2412A8918();
}

uint64_t sub_24127E894()
{
  sub_24128CA0C();
  return sub_2412A890C();
}

uint64_t sub_24127E8E4@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  char *v2;

  return sub_24127E8F0(*a1, *v2, a2);
}

uint64_t sub_24127E8F0@<X0>(uint64_t result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = a2 | result;
  return result;
}

uint64_t sub_24127E8FC@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  char *v2;

  return sub_24127E908(*a1, *v2, a2);
}

uint64_t sub_24127E908@<X0>(uint64_t result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_24127E914@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  char *v2;

  return sub_24127E920(*a1, *v2, a2);
}

uint64_t sub_24127E920@<X0>(uint64_t result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

BOOL sub_24127E92C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24127E934(a1, *a2);
}

BOOL sub_24127E934(unsigned __int8 *a1, unsigned __int8 a2)
{
  _BYTE *v2;
  int v3;

  v3 = (*v2 & a2);
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_24127E964@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24127E96C(*a1, a2);
}

uint64_t sub_24127E96C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char *v2;
  char v3;

  v3 = *v2;
  if ((*v2 & result) != 0)
    *v2 = v3 & ~(_BYTE)result;
  *a2 = v3 & result;
  a2[1] = (v3 & result) == 0;
  return result;
}

uint64_t sub_24127E998@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_24127E9A0(*a1, a2);
}

uint64_t sub_24127E9A0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char *v2;
  char v3;
  char v4;

  v3 = *v2;
  v4 = *v2 & result;
  *v2 |= result;
  *a2 = v4;
  a2[1] = (v3 & result) == 0;
  return result;
}

uint64_t sub_24127E9C4(unsigned __int8 *a1)
{
  return sub_24127E9CC(*a1);
}

uint64_t sub_24127E9CC(uint64_t result)
{
  _BYTE *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_24127E9DC(unsigned __int8 *a1)
{
  return sub_24127E9E4(*a1);
}

uint64_t sub_24127E9E4(uint64_t result)
{
  _BYTE *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_24127E9F4(unsigned __int8 *a1)
{
  return sub_24127E9FC(*a1);
}

uint64_t sub_24127E9FC(uint64_t result)
{
  _BYTE *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_24127EA0C@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  char *v2;

  return sub_24127EA18(*a1, *v2, a2);
}

uint64_t sub_24127EA18@<X0>(uint64_t result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = a2 & ~(_BYTE)result;
  return result;
}

BOOL sub_24127EA24(char *a1)
{
  unsigned __int8 *v1;

  return sub_24127EA30(*a1, *v1);
}

BOOL sub_24127EA30(char a1, unsigned __int8 a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_24127EA40(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_24127EA4C(*a1, *v1);
}

BOOL sub_24127EA4C(unsigned __int8 a1, unsigned __int8 a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_24127EA5C(unsigned __int8 *a1)
{
  char *v1;

  return sub_24127EA68(*a1, *v1);
}

BOOL sub_24127EA68(unsigned __int8 a1, char a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_24127EA78()
{
  char *v0;

  return sub_24127EA80(*v0);
}

BOOL sub_24127EA80(char a1)
{
  return a1 == 0;
}

uint64_t sub_24127EA8C()
{
  return sub_2412A8A68();
}

uint64_t sub_24127EAA4(unsigned __int8 *a1)
{
  return sub_24127EAAC(*a1);
}

uint64_t sub_24127EAAC(uint64_t result)
{
  _BYTE *v1;

  *v1 &= ~(_BYTE)result;
  return result;
}

uint64_t sub_24127EABC@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = RoutingItem.Properties.init(rawValue:)(*a1, a2);
  a2[1] = 0;
  return result;
}

void sub_24127EAE4(_BYTE *a1@<X8>)
{
  *a1 = RoutingItem.Properties.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

BOOL static RoutingItem.SelectionIndicator.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void RoutingItem.SelectionIndicator.hash(into:)()
{
  OUTLINED_FUNCTION_124_0();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_24127EB34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x62617463656C6573 && a2 == 0xEA0000000000656CLL;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x64657463656C6573 && a2 == 0xE800000000000000;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x656C62616C6C7570 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_2412A8CFC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_24127ECE4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24127ED10 + 4 * byte_2412ACE22[a1]))(1701736302, 0xE400000000000000);
}

uint64_t sub_24127ED10()
{
  return 0x62617463656C6573;
}

uint64_t sub_24127ED2C()
{
  return 0x64657463656C6573;
}

uint64_t sub_24127ED44()
{
  return 0x656C62616C6C7570;
}

uint64_t sub_24127ED5C()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_24127ED78()
{
  return 0;
}

uint64_t sub_24127ED84()
{
  unsigned __int8 *v0;

  return sub_24127ECE4(*v0);
}

uint64_t sub_24127ED8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24127EB34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24127EDB0()
{
  sub_24127F2CC();
  return sub_2412A8DBC();
}

uint64_t sub_24127EDD8()
{
  sub_24127F2CC();
  return sub_2412A8DC8();
}

uint64_t sub_24127EE04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24127ED5C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24127EE2C()
{
  sub_24127F290();
  return sub_2412A8DBC();
}

uint64_t sub_24127EE54()
{
  sub_24127F290();
  return sub_2412A8DC8();
}

uint64_t sub_24127EE7C()
{
  sub_24127F1DC();
  return sub_2412A8DBC();
}

uint64_t sub_24127EEA4()
{
  sub_24127F1DC();
  return sub_2412A8DC8();
}

uint64_t sub_24127EECC()
{
  sub_24127F254();
  return sub_2412A8DBC();
}

uint64_t sub_24127EEF4()
{
  sub_24127F254();
  return sub_2412A8DC8();
}

uint64_t sub_24127EF1C()
{
  sub_24127F218();
  return sub_2412A8DBC();
}

uint64_t sub_24127EF44()
{
  sub_24127F218();
  return sub_2412A8DC8();
}

void RoutingItem.SelectionIndicator.encode(to:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_59_1(v1, &qword_2571059F8, (uint64_t (*)(void))sub_24127F1DC, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.PullableCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_29_3(v5, v16);
  OUTLINED_FUNCTION_59_1(v6, &qword_257105A08, (uint64_t (*)(void))sub_24127F218, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.SelectedCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_46_1(v8, v17);
  OUTLINED_FUNCTION_59_1(v9, &qword_257105A18, (uint64_t (*)(void))sub_24127F254, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.SelectableCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_85_1(v11, v18);
  OUTLINED_FUNCTION_59_1(v12, &qword_257105A28, (uint64_t (*)(void))sub_24127F290, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.NoneCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_85_0();
  sub_241274E98(0, &qword_257105A38, (uint64_t (*)(void))sub_24127F2CC, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.CodingKeys, v3);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_86_0();
  v15 = *v0;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24127F2CC();
  sub_2412A8DB0();
  __asm { BR              X9 }
}

void sub_24127F10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 68) = 0;
  sub_24127F290();
  OUTLINED_FUNCTION_40_3();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 184) + 8))(v0, *(_QWORD *)(v2 - 176));
  OUTLINED_FUNCTION_24_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8));
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_24127F1DC()
{
  unint64_t result;

  result = qword_257105A00;
  if (!qword_257105A00)
  {
    result = MEMORY[0x242691F34](&unk_2412AF674, &type metadata for RoutingItem.SelectionIndicator.PullableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105A00);
  }
  return result;
}

unint64_t sub_24127F218()
{
  unint64_t result;

  result = qword_257105A10;
  if (!qword_257105A10)
  {
    result = MEMORY[0x242691F34](&unk_2412AF624, &type metadata for RoutingItem.SelectionIndicator.SelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105A10);
  }
  return result;
}

unint64_t sub_24127F254()
{
  unint64_t result;

  result = qword_257105A20;
  if (!qword_257105A20)
  {
    result = MEMORY[0x242691F34](&unk_2412AF5D4, &type metadata for RoutingItem.SelectionIndicator.SelectableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105A20);
  }
  return result;
}

unint64_t sub_24127F290()
{
  unint64_t result;

  result = qword_257105A30;
  if (!qword_257105A30)
  {
    result = MEMORY[0x242691F34](&unk_2412AF584, &type metadata for RoutingItem.SelectionIndicator.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105A30);
  }
  return result;
}

unint64_t sub_24127F2CC()
{
  unint64_t result;

  result = qword_257105A40;
  if (!qword_257105A40)
  {
    result = MEMORY[0x242691F34](&unk_2412AF534, &type metadata for RoutingItem.SelectionIndicator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105A40);
  }
  return result;
}

void RoutingItem.SelectionIndicator.hashValue.getter()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingItem.SelectionIndicator.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_1_2();
  v3 = v2;
  OUTLINED_FUNCTION_12_0(v2, &qword_257105A48, (uint64_t (*)(void))sub_24127F1DC, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.PullableCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_29_3(v5, v28);
  OUTLINED_FUNCTION_12_0(v6, &qword_257105A50, (uint64_t (*)(void))sub_24127F218, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.SelectedCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_153(v8, v29);
  OUTLINED_FUNCTION_12_0(v9, &qword_257105A58, (uint64_t (*)(void))sub_24127F254, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.SelectableCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_86_1(v11, v30);
  OUTLINED_FUNCTION_12_0(v12, &qword_257105A60, (uint64_t (*)(void))sub_24127F290, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.NoneCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_11_4(0, &qword_257105A68, (uint64_t (*)(void))sub_24127F2CC, (uint64_t)&type metadata for RoutingItem.SelectionIndicator.CodingKeys);
  v15 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_43_3();
  v17 = (_QWORD *)OUTLINED_FUNCTION_186();
  __swift_project_boxed_opaque_existential_1(v17, v18);
  sub_24127F2CC();
  sub_2412A8DA4();
  if (!v0)
  {
    v31 = v3;
    v32 = v15;
    v19 = sub_2412A8C24();
    if (*(_QWORD *)(v19 + 16))
    {
      OUTLINED_FUNCTION_131();
      v20 = *(unsigned __int8 *)(v19 + 32);
      sub_24127AA78(1);
      v22 = v21;
      v24 = v23;
      OUTLINED_FUNCTION_53_2();
      if (v22 == v24 >> 1)
        __asm { BR              X9 }
    }
    v25 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    v27 = v26;
    OUTLINED_FUNCTION_96_0();
    *v27 = &type metadata for RoutingItem.SelectionIndicator;
    sub_2412A8B88();
    OUTLINED_FUNCTION_88_0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_28_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    v3 = v31;
  }
  __swift_destroy_boxed_opaque_existential_0(v3);
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_0_1();
}

void sub_24127F634()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_195();
  OUTLINED_FUNCTION_74_1();
  if (!v0)
    JUMPOUT(0x24127F660);
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  JUMPOUT(0x24127F620);
}

void sub_24127F66C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_74_1();
  if (v0)
    JUMPOUT(0x24127F690);
  JUMPOUT(0x24127F6F4);
}

void sub_24127F6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_199();
  v3 = *(_QWORD *)(v2 - 120);
  OUTLINED_FUNCTION_74_1();
  if (v0)
  {
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    JUMPOUT(0x24127F620);
  }
  OUTLINED_FUNCTION_24_1(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8));
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  JUMPOUT(0x24127F73CLL);
}

void sub_24127F750()
{
  RoutingItem.SelectionIndicator.init(from:)();
}

void sub_24127F764()
{
  RoutingItem.SelectionIndicator.encode(to:)();
}

void RoutingItem.baseIdentifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingItem.baseIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72_1();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingItem.baseIdentifier.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingItem.scopeIdentifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingItem.scopeIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_171();
  OUTLINED_FUNCTION_176();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingItem.scopeIdentifier.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingItem.title.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingItem.title.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_171();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingItem.title.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingItem.symbolName.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingItem.symbolName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_171();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingItem.symbolName.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingItem.selectionIndicator.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_88_1(a1);
}

_BYTE *RoutingItem.selectionIndicator.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = *result;
  return result;
}

uint64_t (*RoutingItem.selectionIndicator.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t RoutingItem.volume.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_97_1(*(unsigned int *)(v0 + 68));
}

uint64_t RoutingItem.volume.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 68) = result;
  *(_BYTE *)(v1 + 72) = BYTE4(result) & 1;
  return result;
}

uint64_t (*RoutingItem.volume.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingItem.controls.getter(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v4[192];

  v3 = (const void *)(v1 + 80);
  OUTLINED_FUNCTION_17_4(v4, v3);
  OUTLINED_FUNCTION_17_4(a1, v3);
  sub_24128B24C((uint64_t)v4);
  OUTLINED_FUNCTION_69_1();
}

void RoutingItem.controls.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[192];

  v3 = (void *)(v1 + 80);
  OUTLINED_FUNCTION_17_4(v4, v3);
  sub_24128B350((uint64_t)v4);
  OUTLINED_FUNCTION_17_4(v3, a1);
  OUTLINED_FUNCTION_69_1();
}

uint64_t (*RoutingItem.controls.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingItem.isBuiltIn.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 272) & 1;
}

uint64_t RoutingItem.isPlaying.getter()
{
  uint64_t v0;

  return (*(unsigned __int8 *)(v0 + 272) >> 1) & 1;
}

uint64_t RoutingItem.isDisabled.getter()
{
  uint64_t v0;

  return (*(unsigned __int8 *)(v0 + 272) >> 2) & 1;
}

void RoutingItem.properties.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_88_1(a1);
}

_BYTE *RoutingItem.properties.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 272) = *result;
  return result;
}

uint64_t (*RoutingItem.properties.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingItem.init(identifier:scopeIdentifier:title:symbolName:selectionIndicator:volume:controls:properties:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, int a11, char a12, const void *a13, char *a14)
{
  char v22;
  char v24;
  _BYTE __src[200];
  char v26;

  v22 = *a10;
  v24 = *a14;
  v26 = a12 & 1;
  OUTLINED_FUNCTION_17_4(&__src[7], a13);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = v22;
  *(_DWORD *)(a9 + 68) = a11;
  *(_BYTE *)(a9 + 72) = v26;
  memcpy((void *)(a9 + 73), __src, 0xC7uLL);
  *(_BYTE *)(a9 + 272) = v24;
  OUTLINED_FUNCTION_82_1();
}

unint64_t _s12MediaControl11RoutingItemV11descriptionSSvg_0()
{
  const void *v0;
  _QWORD __dst[35];

  memcpy(__dst, v0, 0x111uLL);
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  if (__dst[3])
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_173();
    sub_24127DD94((uint64_t)__dst);
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_75_1();
    OUTLINED_FUNCTION_57();
    sub_24127DED0((uint64_t)__dst);
  }
  else
  {
    OUTLINED_FUNCTION_40_0();
  }
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_80_1();
  return 0xD00000000000001BLL;
}

uint64_t RoutingItem.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v5;
  _BYTE v6[200];

  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(unsigned __int8 *)(v1 + 72);
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_76_0();
  sub_2412A88B8();
  OUTLINED_FUNCTION_23_2();
  OUTLINED_FUNCTION_18_3();
  if (v3)
  {
    OUTLINED_FUNCTION_132();
    sub_2412A88B8();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  sub_2412A8D68();
  OUTLINED_FUNCTION_18_3();
  if (!v5)
    sub_2412A8D80();
  OUTLINED_FUNCTION_17_4(v6, (const void *)(v1 + 80));
  RoutingControls.hash(into:)(a1);
  return OUTLINED_FUNCTION_18_3();
}

void static RoutingItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float v13;
  char v15;
  char v17;
  char v19;
  char v21;
  char v22;
  int v23;
  char v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[192];
  _BYTE v32[200];

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v29 = *(_QWORD *)(a1 + 56);
  v30 = *(_QWORD *)(a1 + 48);
  v8 = *(float *)(a1 + 68);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v28 = *(_QWORD *)(a2 + 48);
  v27 = *(_QWORD *)(a2 + 56);
  v25 = *(unsigned __int8 *)(a2 + 64);
  v26 = *(unsigned __int8 *)(a1 + 64);
  v13 = *(float *)(a2 + 68);
  v23 = *(unsigned __int8 *)(a2 + 72);
  v24 = *(_BYTE *)(a1 + 72);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_91_0();
    if ((v15 & 1) == 0)
      goto LABEL_30;
  }
  if (v5)
  {
    if (!v9)
      goto LABEL_30;
    if (v4 != v10 || v5 != v9)
    {
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_91_0();
      if ((v17 & 1) == 0)
        goto LABEL_30;
    }
  }
  else if (v9)
  {
    goto LABEL_30;
  }
  if (v6 != v11 || v7 != v12)
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_91_0();
    if ((v19 & 1) == 0)
      goto LABEL_30;
  }
  if (v30 == v28 && v29 == v27)
  {
    if (v26 != v25)
      goto LABEL_30;
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_91_0();
    if ((v21 & 1) == 0 || v26 != v25)
      goto LABEL_30;
  }
  if ((v24 & 1) != 0)
  {
    if (!v23)
      goto LABEL_30;
LABEL_34:
    OUTLINED_FUNCTION_17_4(v32, (const void *)(a1 + 80));
    OUTLINED_FUNCTION_17_4(v31, (const void *)(a2 + 80));
    static RoutingControls.== infix(_:_:)((uint64_t)v32, (uint64_t)v31);
    goto LABEL_30;
  }
  v22 = v23;
  if (v8 != v13)
    v22 = 1;
  if ((v22 & 1) == 0)
    goto LABEL_34;
LABEL_30:
  OUTLINED_FUNCTION_78_1();
}

uint64_t sub_24127FEA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x6E65644965736162 && a2 == 0xEE00726569666974;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65644965706F6373 && a2 == 0xEF7265696669746ELL;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x614E6C6F626D7973 && a2 == 0xEA0000000000656DLL;
        if (v8 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x80000002412B4F40 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x656D756C6F76 && a2 == 0xE600000000000000;
          if (v9 || (sub_2412A8CFC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x736C6F72746E6F63 && a2 == 0xE800000000000000;
            if (v10 || (sub_2412A8CFC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v12 = sub_2412A8CFC();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 7;
              else
                return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_241280210()
{
  return 8;
}

uint64_t sub_241280218(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241280258 + 4 * byte_2412ACE2E[a1]))(0x6E65644965736162, 0xEE00726569666974);
}

uint64_t sub_241280258()
{
  return 0x65644965706F6373;
}

uint64_t sub_24128027C()
{
  return 0x656C746974;
}

uint64_t sub_241280290()
{
  return 0x614E6C6F626D7973;
}

unint64_t sub_2412802AC()
{
  return 0xD000000000000012;
}

uint64_t sub_2412802C8()
{
  return 0x656D756C6F76;
}

uint64_t sub_2412802DC()
{
  return 0x736C6F72746E6F63;
}

uint64_t sub_2412802F4()
{
  return 0x69747265706F7270;
}

uint64_t sub_241280314()
{
  unsigned __int8 *v0;

  return sub_241280218(*v0);
}

uint64_t sub_24128031C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24127FEA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241280340@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241280210();
  *a1 = result;
  return result;
}

uint64_t sub_241280364()
{
  sub_24128B454();
  return sub_2412A8DBC();
}

uint64_t sub_24128038C()
{
  sub_24128B454();
  return sub_2412A8DC8();
}

void RoutingItem.encode(to:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9[192];
  _BYTE v10[200];
  char v11;

  OUTLINED_FUNCTION_1_2();
  v4 = (_QWORD *)v3;
  OUTLINED_FUNCTION_48_0(v3, &qword_257105A70, (uint64_t (*)(void))sub_24128B454, (uint64_t)&type metadata for RoutingItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_43_3();
  v11 = v0[64];
  OUTLINED_FUNCTION_17_4(v10, v0 + 80);
  v8 = v0[272];
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_24128B454();
  sub_2412A8DB0();
  v9[0] = 0;
  sub_2412A8C78();
  if (!v1)
  {
    v9[0] = 1;
    sub_2412A8C48();
    v9[0] = 2;
    OUTLINED_FUNCTION_165();
    v9[0] = 3;
    OUTLINED_FUNCTION_186();
    OUTLINED_FUNCTION_165();
    v9[0] = v11;
    sub_24128B490();
    OUTLINED_FUNCTION_47_1();
    v9[0] = 5;
    sub_2412A8C54();
    OUTLINED_FUNCTION_17_4(v9, v10);
    sub_24128B4CC();
    OUTLINED_FUNCTION_47_1();
    v9[0] = v8;
    sub_24128B508();
    OUTLINED_FUNCTION_47_1();
  }
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_0_1();
}

void RoutingItem.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_46_0();
  RoutingItem.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingItem.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD v44[35];
  _QWORD v45[8];
  char v46;
  __int16 v47;
  char v48;
  int v49;
  char v50;
  _BYTE v51[207];
  _BYTE v52[192];
  _BYTE v53[192];
  _BYTE v54[208];
  char v55;

  OUTLINED_FUNCTION_1_2();
  v16 = (_QWORD *)v15;
  v43 = v17;
  OUTLINED_FUNCTION_160(v15, &qword_257105A98, (uint64_t (*)(void))sub_24128B454, v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v20 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_49_1();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_24128B454();
  OUTLINED_FUNCTION_149();
  if (v13)
  {
    v23 = 0;
    OUTLINED_FUNCTION_112_0();
    v24 = 0;
  }
  else
  {
    v22 = v14;
    v25 = OUTLINED_FUNCTION_83_1();
    v27 = v26;
    OUTLINED_FUNCTION_143();
    v28 = OUTLINED_FUNCTION_150();
    v30 = v29;
    v40 = v28;
    OUTLINED_FUNCTION_143();
    v39 = OUTLINED_FUNCTION_83_1();
    LOBYTE(v45[0]) = 3;
    v42 = v31;
    swift_bridgeObjectRetain();
    v38 = OUTLINED_FUNCTION_83_1();
    LOBYTE(v44[0]) = 4;
    v41 = v32;
    v33 = sub_24128B544();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_41_3();
    if (!v33)
    {
      v37 = v45[0];
      LOBYTE(v45[0]) = 5;
      v34 = sub_2412A8BA0();
      v35 = HIDWORD(v34) & 1;
      v55 = BYTE4(v34) & 1;
      v36 = v34;
      sub_24128B580();
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_17_4(v52, v53);
      OUTLINED_FUNCTION_17_4(&v54[7], v53);
      sub_24128B24C((uint64_t)v52);
      sub_24128B5BC();
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_16_3(v22, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
      v44[0] = v25;
      v44[1] = v27;
      v44[2] = v40;
      v44[3] = v30;
      v44[4] = v39;
      v44[5] = v42;
      v44[6] = v38;
      v44[7] = v41;
      LOBYTE(v44[8]) = v37;
      HIDWORD(v44[8]) = v36;
      LOBYTE(v44[9]) = v35;
      OUTLINED_FUNCTION_17_4(&v44[10], v52);
      LOBYTE(v44[34]) = a12;
      sub_24127DD94((uint64_t)v44);
      sub_24128B350((uint64_t)v52);
      OUTLINED_FUNCTION_23_2();
      OUTLINED_FUNCTION_53_2();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      memcpy(v43, v44, 0x111uLL);
      OUTLINED_FUNCTION_112_0();
      v45[0] = v25;
      v45[1] = v27;
      v45[2] = v40;
      v45[3] = v30;
      v45[4] = v39;
      v45[5] = v42;
      v45[6] = v38;
      v45[7] = v41;
      v46 = v37;
      v47 = *(_WORD *)((char *)&a13 + 1);
      v48 = HIBYTE(a13);
      v49 = v36;
      v50 = v55;
      memcpy(v51, v54, 0xC7uLL);
      v51[199] = a12;
      sub_24127DED0((uint64_t)v45);
      goto LABEL_9;
    }
    OUTLINED_FUNCTION_16_3(v14, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_53_2();
    OUTLINED_FUNCTION_146();
    OUTLINED_FUNCTION_54_2();
    OUTLINED_FUNCTION_112_0();
    v23 = 1;
    swift_bridgeObjectRelease();
    v24 = 1;
  }
  OUTLINED_FUNCTION_53_2();
  if (v23)
  {
    OUTLINED_FUNCTION_146();
    if (!v24)
      goto LABEL_9;
  }
  else if (!v24)
  {
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_54_2();
LABEL_9:
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_241280AFC()
{
  _BYTE v1[72];

  sub_2412A8D5C();
  RoutingItem.hash(into:)((uint64_t)v1);
  return sub_2412A8D98();
}

void sub_241280B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  RoutingItem.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE2(vars8), SBYTE3(vars8), SHIDWORD(vars8));
}

void sub_241280B48()
{
  RoutingItem.encode(to:)();
}

uint64_t static RoutingSession.localSessionIdentifier.getter()
{
  return 0x4C41434F4CLL;
}

uint64_t RoutingSession.NowPlayingInfo.PlaybackState.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6465737561702ELL;
  else
    return 0x676E6979616C702ELL;
}

BOOL static RoutingSession.NowPlayingInfo.PlaybackState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void RoutingSession.NowPlayingInfo.PlaybackState.hash(into:)()
{
  OUTLINED_FUNCTION_124_0();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_241280BE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x676E6979616C70 && a2 == 0xE700000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646573756170 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241280CC8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x646573756170;
  else
    return 0x676E6979616C70;
}

uint64_t sub_241280CFC()
{
  char *v0;

  return sub_241280CC8(*v0);
}

uint64_t sub_241280D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241280BE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241280D28()
{
  sub_24128B670();
  return sub_2412A8DBC();
}

uint64_t sub_241280D50()
{
  sub_24128B670();
  return sub_2412A8DC8();
}

uint64_t sub_241280D78()
{
  sub_24128B5F8();
  return sub_2412A8DBC();
}

uint64_t sub_241280DA0()
{
  sub_24128B5F8();
  return sub_2412A8DC8();
}

uint64_t sub_241280DC8()
{
  sub_24128B634();
  return sub_2412A8DBC();
}

uint64_t sub_241280DF0()
{
  sub_24128B634();
  return sub_2412A8DC8();
}

void RoutingSession.NowPlayingInfo.PlaybackState.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_159(v2, &qword_257105AB8, (uint64_t (*)(void))sub_24128B5F8, (uint64_t)&type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PausedCodingKeys);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_29_3(v7, v14);
  OUTLINED_FUNCTION_159(v8, &qword_257105AC8, (uint64_t (*)(void))sub_24128B634, (uint64_t)&type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PlayingCodingKeys);
  v15 = *(_QWORD *)(v9 - 8);
  v16 = v9;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_43_3();
  sub_241274E98(0, &qword_257105AD8, (uint64_t (*)(void))sub_24128B670, (uint64_t)&type metadata for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys, v4);
  v20 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_84_0();
  v13 = *v0;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128B670();
  sub_2412A8DB0();
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_194();
    OUTLINED_FUNCTION_64_1();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  else
  {
    sub_24128B634();
    OUTLINED_FUNCTION_64_1();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v16);
  }
  OUTLINED_FUNCTION_188(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  OUTLINED_FUNCTION_0_1();
}

void RoutingSession.NowPlayingInfo.PlaybackState.hashValue.getter()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingSession.NowPlayingInfo.PlaybackState.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_1_2();
  v4 = (_QWORD *)v3;
  v34 = v5;
  OUTLINED_FUNCTION_12_0(v3, &qword_257105AE8, (uint64_t (*)(void))sub_24128B5F8, (uint64_t)&type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PausedCodingKeys);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_155(v8, v28);
  OUTLINED_FUNCTION_12_0(v9, &qword_257105AF0, (uint64_t (*)(void))sub_24128B634, (uint64_t)&type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PlayingCodingKeys);
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_11_4(0, &qword_257105AF8, (uint64_t (*)(void))sub_24128B670, (uint64_t)&type metadata for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_84_0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_24128B670();
  OUTLINED_FUNCTION_92_1();
  if (v0)
    goto LABEL_9;
  v29 = v4;
  v36 = v14;
  v16 = sub_2412A8C24();
  v17 = v13;
  if (!*(_QWORD *)(v16 + 16))
  {
LABEL_7:
    v24 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    v26 = v25;
    OUTLINED_FUNCTION_96_0();
    *v26 = &type metadata for RoutingSession.NowPlayingInfo.PlaybackState;
    sub_2412A8B88();
    OUTLINED_FUNCTION_88_0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    OUTLINED_FUNCTION_174();
    OUTLINED_FUNCTION_21_2();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v2, v17);
    v4 = v29;
LABEL_9:
    v27 = (uint64_t)v4;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_131();
  v18 = *(_BYTE *)(v16 + 32);
  sub_24127AA78(1);
  v20 = v19;
  v22 = v21;
  OUTLINED_FUNCTION_85();
  if (v20 != v22 >> 1)
  {
    v17 = v13;
    goto LABEL_7;
  }
  if ((v18 & 1) != 0)
  {
    OUTLINED_FUNCTION_194();
    OUTLINED_FUNCTION_61_1();
    v23 = v34;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v33);
  }
  else
  {
    sub_24128B634();
    OUTLINED_FUNCTION_61_1();
    v23 = v34;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v1, v31);
  }
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
  *v23 = v18;
  v27 = (uint64_t)v29;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_0(v27);
  OUTLINED_FUNCTION_0_1();
}

void sub_24128130C()
{
  RoutingSession.NowPlayingInfo.PlaybackState.init(from:)();
}

void sub_241281320()
{
  RoutingSession.NowPlayingInfo.PlaybackState.encode(to:)();
}

void RoutingSession.NowPlayingInfo.title.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingSession.NowPlayingInfo.title.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72_1();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingSession.NowPlayingInfo.title.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingSession.NowPlayingInfo.playbackState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_88_1(a1);
}

_BYTE *RoutingSession.NowPlayingInfo.playbackState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*RoutingSession.NowPlayingInfo.playbackState.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingSession.NowPlayingInfo.init(title:playbackState:artworkToken:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5;

  v5 = *a3;
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v5;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

void RoutingSession.NowPlayingInfo.artworkToken(forMaxPixelSize:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    type metadata accessor for ArtworkToken();
    swift_retain();
    sub_241263ED8();
  }
  OUTLINED_FUNCTION_37_0();
}

unint64_t RoutingSession.NowPlayingInfo.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_2412A8ABC();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_81_0();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_162();
  sub_2412A88DC();
  OUTLINED_FUNCTION_23_2();
  sub_2412A88DC();
  if (v1)
    sub_2412639EC();
  sub_2412A88DC();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_80_1();
  return 0xD000000000000019;
}

void RoutingSession.NowPlayingInfo.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    OUTLINED_FUNCTION_111_0();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_57();
  }
  else
  {
    OUTLINED_FUNCTION_106_0();
  }
  sub_2412A8D68();
  if (v1)
  {
    OUTLINED_FUNCTION_111_0();
    swift_retain();
    sub_241263834();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_48();
  }
}

void static RoutingSession.NowPlayingInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v10;
  _QWORD *v11;
  _QWORD *v12;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    if (!v6)
      goto LABEL_16;
    if (*(_QWORD *)a1 == *(_QWORD *)a2 && v3 == v6)
    {
      if (v4 != v7)
        goto LABEL_16;
      goto LABEL_13;
    }
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_91_0();
    if ((v10 & 1) == 0)
      goto LABEL_16;
  }
  else if (v6)
  {
    goto LABEL_16;
  }
  if (((v4 ^ v7) & 1) != 0)
    goto LABEL_16;
LABEL_13:
  if (v5 && v8)
  {
    type metadata accessor for ArtworkToken();
    v11 = (_QWORD *)OUTLINED_FUNCTION_76_0();
    static ArtworkToken.== infix(_:_:)(v11, v12);
  }
LABEL_16:
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_2412816B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6B63616279616C70 && a2 == 0xED00006574617453;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x546B726F77747261 && a2 == 0xEC0000006E656B6FLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2412A8CFC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_241281834()
{
  return 3;
}

uint64_t sub_24128183C(char a1)
{
  if (!a1)
    return 0x656C746974;
  if (a1 == 1)
    return 0x6B63616279616C70;
  return 0x546B726F77747261;
}

uint64_t sub_2412818A4()
{
  char *v0;

  return sub_24128183C(*v0);
}

uint64_t sub_2412818AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412816B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412818D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241281834();
  *a1 = result;
  return result;
}

uint64_t sub_2412818F4()
{
  sub_24128B6AC();
  return sub_2412A8DBC();
}

uint64_t sub_24128191C()
{
  sub_24128B6AC();
  return sub_2412A8DC8();
}

void RoutingSession.NowPlayingInfo.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_48_0(v2, &qword_257105B00, (uint64_t (*)(void))sub_24128B6AC, (uint64_t)&type metadata for RoutingSession.NowPlayingInfo.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_41_2();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128B6AC();
  OUTLINED_FUNCTION_185();
  sub_2412A8C48();
  if (!v0)
  {
    sub_24128B6E8();
    sub_2412A8CB4();
    type metadata accessor for ArtworkToken();
    sub_24128B760(&qword_257105B18, (uint64_t)&protocol conformance descriptor for ArtworkToken);
    sub_2412A8C6C();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

void RoutingSession.NowPlayingInfo.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_46_0();
  if (v1)
  {
    OUTLINED_FUNCTION_111_0();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_57();
  }
  else
  {
    OUTLINED_FUNCTION_106_0();
  }
  sub_2412A8D68();
  if (v2)
  {
    OUTLINED_FUNCTION_111_0();
    swift_retain();
    sub_241263834();
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_106_0();
  }
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_109_0();
}

void RoutingSession.NowPlayingInfo.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_1_2();
  v15 = (_QWORD *)v14;
  v25 = v16;
  OUTLINED_FUNCTION_15_0(v14, &qword_257105B20, (uint64_t (*)(void))sub_24128B6AC, v17, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v19 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_86_0();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_24128B6AC();
  OUTLINED_FUNCTION_114_0();
  sub_2412A8DA4();
  if (!v12)
  {
    v21 = OUTLINED_FUNCTION_150();
    v23 = v22;
    v24 = sub_24128B724();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_41_3();
    if (!v24)
    {
      type metadata accessor for ArtworkToken();
      sub_24128B760(&qword_257105B30, (uint64_t)&protocol conformance descriptor for ArtworkToken);
      sub_2412A8BB8();
      OUTLINED_FUNCTION_24_1(v13, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
      swift_retain();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v23;
      *(_BYTE *)(v25 + 16) = a12;
      *(_QWORD *)(v25 + 24) = v26;
      OUTLINED_FUNCTION_53_1();
      swift_release();
      goto LABEL_3;
    }
    OUTLINED_FUNCTION_24_1(v13, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    OUTLINED_FUNCTION_53_2();
  }
  OUTLINED_FUNCTION_53_1();
LABEL_3:
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_241281D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_2412A8D5C();
  sub_2412A8D74();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_2412A88B8();
    swift_bridgeObjectRelease();
  }
  sub_2412A8D68();
  sub_2412A8D74();
  if (v2)
  {
    swift_retain();
    sub_241263834();
    swift_release();
  }
  return sub_2412A8D98();
}

void sub_241281E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  RoutingSession.NowPlayingInfo.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_241281E1C()
{
  RoutingSession.NowPlayingInfo.encode(to:)();
}

void RoutingSession.identifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingSession.identifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72_1();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingSession.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingSession.items.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  v1 = OUTLINED_FUNCTION_8();
  sub_24128A204(v1);
  return v3;
}

uint64_t RoutingSession.preferredItems.getter()
{
  return swift_bridgeObjectRetain();
}

void RoutingSession.preferredItems.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*RoutingSession.preferredItems.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingSession.remainingItems.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_176();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*RoutingSession.remainingItems.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingSession.nowPlayingInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_241261274(v2, v3);
}

__n128 RoutingSession.nowPlayingInfo.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_241260CC8(v1[4], v1[5]);
  result = v5;
  *((__n128 *)v1 + 2) = v5;
  v1[6] = v2;
  v1[7] = v3;
  return result;
}

uint64_t (*RoutingSession.nowPlayingInfo.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t RoutingSession.volume.getter()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_97_1(*(unsigned int *)(v0 + 64));
}

uint64_t RoutingSession.volume.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 64) = result;
  *(_BYTE *)(v1 + 68) = BYTE4(result) & 1;
  return result;
}

uint64_t (*RoutingSession.volume.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingSession.controls.getter(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v4[192];

  v3 = (const void *)(v1 + 72);
  OUTLINED_FUNCTION_17_4(v4, v3);
  OUTLINED_FUNCTION_17_4(a1, v3);
  sub_24128B24C((uint64_t)v4);
  OUTLINED_FUNCTION_69_1();
}

void RoutingSession.controls.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[192];

  v3 = (void *)(v1 + 72);
  OUTLINED_FUNCTION_17_4(v4, v3);
  sub_24128B350((uint64_t)v4);
  OUTLINED_FUNCTION_17_4(v3, a1);
  OUTLINED_FUNCTION_69_1();
}

uint64_t (*RoutingSession.controls.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingSession.symbolName.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingSession.symbolName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_171();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v0;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingSession.symbolName.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL RoutingSession.isPlaying.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 48) & 1) == 0 && *(_QWORD *)(v0 + 40) != 1;
}

uint64_t RoutingSession.routingDisabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 280);
}

uint64_t RoutingSession.routingDisabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 280) = result;
  return result;
}

uint64_t (*RoutingSession.routingDisabled.modify())(_QWORD)
{
  return nullsub_1;
}

void *RoutingSession.init(identifier:preferredItems:remainingItems:nowPlayingInfo:routingDisabled:volume:controls:symbolName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, const void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v11;
  __int128 v19;
  void *result;
  _BYTE v21[196];
  char v22;

  v11 = a7;
  v22 = BYTE4(a7) & 1;
  OUTLINED_FUNCTION_17_4(&v21[3], a8);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  v19 = a5[1];
  *(_OWORD *)(a9 + 32) = *a5;
  *(_OWORD *)(a9 + 48) = v19;
  *(_DWORD *)(a9 + 64) = v11;
  *(_BYTE *)(a9 + 68) = v22;
  result = memcpy((void *)(a9 + 69), v21, 0xC3uLL);
  *(_QWORD *)(a9 + 264) = a10;
  *(_QWORD *)(a9 + 272) = a11;
  *(_BYTE *)(a9 + 280) = a6;
  return result;
}

unint64_t _s12MediaControl14RoutingSessionV11descriptionSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_1();
  sub_2412A88DC();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_162();
  OUTLINED_FUNCTION_81_0();
  v2 = OUTLINED_FUNCTION_8();
  sub_24128A204(v2);
  MEMORY[0x242691694](v1, &type metadata for RoutingItem);
  sub_2412A88DC();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_80_1();
  return 0xD00000000000001ELL;
}

void RoutingSession.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14[200];

  v3 = *(_QWORD **)(v1 + 16);
  v4 = *(_QWORD **)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 56);
  v13 = *(_BYTE *)(v1 + 68);
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_167();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_81_0();
  sub_24128B0A8(a1, v3);
  OUTLINED_FUNCTION_23_2();
  swift_bridgeObjectRetain();
  sub_24128B0A8(a1, v4);
  swift_bridgeObjectRelease();
  if (v5 == 1)
  {
    OUTLINED_FUNCTION_18_3();
  }
  else
  {
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_18_3();
    if (v5)
    {
      v7 = v12;
      v8 = OUTLINED_FUNCTION_206();
      sub_241261274(v8, v9);
      swift_bridgeObjectRetain();
      sub_2412A88B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      v7 = v12;
    }
    sub_2412A8D68();
    OUTLINED_FUNCTION_18_3();
    if (v6)
    {
      swift_retain();
      sub_241263834();
      swift_release();
      v10 = OUTLINED_FUNCTION_206();
    }
    else
    {
      v10 = v7;
      v11 = v5;
    }
    sub_241260CC8(v10, v11);
  }
  OUTLINED_FUNCTION_18_3();
  if ((v13 & 1) == 0)
    sub_2412A8D80();
  OUTLINED_FUNCTION_17_4(v14, (const void *)(v1 + 72));
  RoutingControls.hash(into:)(a1);
  OUTLINED_FUNCTION_22_1();
  sub_2412A88B8();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_82_1();
}

void static RoutingSession.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  char v37;
  uint64_t v38;
  _QWORD v39[25];

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v8 = *(float *)(a1 + 64);
  v28 = *(_QWORD *)(a1 + 272);
  v29 = *(_QWORD *)(a1 + 264);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 40);
  v32 = *(_QWORD *)(a2 + 32);
  v33 = *(_QWORD *)(a2 + 48);
  v34 = *(_QWORD *)(a2 + 56);
  v35 = *(_QWORD *)(a1 + 56);
  v11 = *(float *)(a2 + 64);
  v30 = *(unsigned __int8 *)(a2 + 68);
  v31 = *(_BYTE *)(a1 + 68);
  v26 = *(_QWORD *)(a2 + 272);
  v27 = *(_QWORD *)(a2 + 264);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_91_0();
    if ((v13 & 1) == 0)
      goto LABEL_14;
  }
  sub_24129425C(v4, v9);
  if ((v14 & 1) == 0)
    goto LABEL_14;
  v15 = OUTLINED_FUNCTION_186();
  sub_24129425C(v15, v16);
  if ((v17 & 1) == 0)
    goto LABEL_14;
  if (v7 == 1)
  {
    if (v10 == 1)
      goto LABEL_16;
LABEL_13:
    sub_241261274(v32, v10);
    v20 = OUTLINED_FUNCTION_187();
    sub_241260CC8(v20, v21);
    sub_241260CC8(v32, v10);
    goto LABEL_14;
  }
  v39[0] = v5;
  v39[1] = v7;
  v39[2] = v6;
  v39[3] = v35;
  if (v10 == 1)
  {
    v18 = OUTLINED_FUNCTION_187();
    sub_241261274(v18, v19);
    goto LABEL_13;
  }
  v36[0] = v32;
  v36[1] = v10;
  v37 = v33 & 1;
  v38 = v34;
  static RoutingSession.NowPlayingInfo.== infix(_:_:)((uint64_t)v39, (uint64_t)v36);
  if ((v22 & 1) == 0)
    goto LABEL_14;
LABEL_16:
  if ((v31 & 1) != 0)
  {
    if (!v30)
      goto LABEL_14;
    goto LABEL_22;
  }
  v23 = v30;
  if (v8 != v11)
    v23 = 1;
  if ((v23 & 1) == 0)
  {
LABEL_22:
    OUTLINED_FUNCTION_17_4(v39, (const void *)(a1 + 72));
    OUTLINED_FUNCTION_17_4(v36, (const void *)(a2 + 72));
    static RoutingControls.== infix(_:_:)((uint64_t)v39, (uint64_t)v36);
    if ((v24 & 1) != 0 && (v29 != v27 || v28 != v26))
    {
      OUTLINED_FUNCTION_21_0();
      OUTLINED_FUNCTION_91_0();
    }
  }
LABEL_14:
  OUTLINED_FUNCTION_78_1();
}

uint64_t sub_241282684(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6572726566657270 && a2 == 0xEE00736D65744964;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E696E69616D6572 && a2 == 0xEE00736D65744967;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6979616C50776F6ELL && a2 == 0xEE006F666E49676ELL;
        if (v8 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656D756C6F76 && a2 == 0xE600000000000000;
          if (v9 || (sub_2412A8CFC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x736C6F72746E6F63 && a2 == 0xE800000000000000;
            if (v10 || (sub_2412A8CFC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x614E6C6F626D7973 && a2 == 0xEA0000000000656DLL;
              if (v11 || (sub_2412A8CFC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x44676E6974756F72 && a2 == 0xEF64656C62617369)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v13 = sub_2412A8CFC();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 7;
                else
                  return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_241282A20(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241282A5C + 4 * byte_2412ACE36[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_241282A5C()
{
  return 0x6572726566657270;
}

uint64_t sub_241282A80()
{
  return 0x6E696E69616D6572;
}

uint64_t sub_241282AA8()
{
  return 0x6979616C50776F6ELL;
}

uint64_t sub_241282ACC()
{
  return 0x656D756C6F76;
}

uint64_t sub_241282AE0()
{
  return 0x736C6F72746E6F63;
}

uint64_t sub_241282AF8()
{
  return 0x614E6C6F626D7973;
}

uint64_t sub_241282B14()
{
  return 0x44676E6974756F72;
}

uint64_t sub_241282B38()
{
  unsigned __int8 *v0;

  return sub_241282A20(*v0);
}

uint64_t sub_241282B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241282684(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241282B64()
{
  sub_24128B7A0();
  return sub_2412A8DBC();
}

uint64_t sub_241282B8C()
{
  sub_24128B7A0();
  return sub_2412A8DC8();
}

void RoutingSession.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[24];
  _BYTE v16[200];

  OUTLINED_FUNCTION_1_2();
  v4 = (_QWORD *)v3;
  OUTLINED_FUNCTION_48_0(v3, &qword_257105B38, (uint64_t (*)(void))sub_24128B7A0, (uint64_t)&type metadata for RoutingSession.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_85_0();
  v14 = v0[2];
  v12 = v0[5];
  v13 = v0[3];
  v11 = v0[6];
  v9 = v0[4];
  v10 = v0[7];
  OUTLINED_FUNCTION_17_4(v16, v0 + 9);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_24128B7A0();
  OUTLINED_FUNCTION_105();
  sub_2412A8DB0();
  LOBYTE(v15[0]) = 0;
  v8 = sub_2412A8C78();
  if (!v1)
  {
    v15[0] = v14;
    OUTLINED_FUNCTION_87_1(v8, &qword_257105B48, (uint64_t)&type metadata for RoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24128B7DC();
    OUTLINED_FUNCTION_63_1();
    v15[0] = v13;
    OUTLINED_FUNCTION_63_1();
    v15[0] = v9;
    v15[1] = v12;
    v15[2] = v11;
    v15[3] = v10;
    sub_24128B890();
    OUTLINED_FUNCTION_121_0();
    LOBYTE(v15[0]) = 4;
    OUTLINED_FUNCTION_120_0();
    sub_2412A8C54();
    OUTLINED_FUNCTION_17_4(v15, v16);
    sub_24128B4CC();
    OUTLINED_FUNCTION_120_0();
    sub_2412A8CB4();
    LOBYTE(v15[0]) = 6;
    sub_2412A8C78();
    LOBYTE(v15[0]) = 7;
    OUTLINED_FUNCTION_120_0();
    sub_2412A8C84();
  }
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_0_1();
}

void RoutingSession.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_46_0();
  RoutingSession.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingSession.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[36];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char v34;
  _BYTE v35[195];
  uint64_t v36;
  uint64_t v37;
  char v38;
  _BYTE v39[192];
  _BYTE v40[192];
  _BYTE v41[208];
  char v42;

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v20 = v3;
  OUTLINED_FUNCTION_15_0(v1, &qword_257105B68, (uint64_t (*)(void))sub_24128B7A0, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_86_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24128B7A0();
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_149();
  if (v0)
  {
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_55_1();
  }
  else
  {
    LOBYTE(v25) = 0;
    v6 = OUTLINED_FUNCTION_83_1();
    v8 = v7;
    OUTLINED_FUNCTION_87_1(v6, &qword_257105B48, (uint64_t)&type metadata for RoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24128B8CC();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_41_3();
    v19 = v8;
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_41_3();
    LOBYTE(v24[0]) = 3;
    sub_24128B980();
    OUTLINED_FUNCTION_81_0();
    sub_2412A8BB8();
    v21 = v25;
    v22 = v25;
    v23 = v28;
    sub_241261274(v25, v26);
    v9 = sub_2412A8BA0();
    v10 = v26;
    v11 = v27;
    v12 = v25;
    v13 = HIDWORD(v9) & 1;
    v42 = BYTE4(v9) & 1;
    v17 = v9;
    sub_24128B580();
    OUTLINED_FUNCTION_41_3();
    v16 = v13;
    OUTLINED_FUNCTION_17_4(v39, v40);
    OUTLINED_FUNCTION_17_4(&v41[3], v40);
    LOBYTE(v25) = 6;
    sub_24128B24C((uint64_t)v39);
    v15 = OUTLINED_FUNCTION_83_1();
    v18 = v14;
    swift_bridgeObjectRetain();
    LOBYTE(v13) = sub_2412A8BD0();
    OUTLINED_FUNCTION_5_4();
    v24[0] = v6;
    v24[1] = v19;
    v24[2] = v21;
    v24[3] = v22;
    v24[4] = v12;
    v24[5] = v10;
    v24[6] = v11;
    v24[7] = v23;
    LODWORD(v24[8]) = v17;
    BYTE4(v24[8]) = v16;
    OUTLINED_FUNCTION_17_4(&v24[9], v39);
    v24[33] = v15;
    v24[34] = v18;
    LOBYTE(v24[35]) = v13 & 1;
    sub_24128B9BC((uint64_t)v24);
    OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_182();
    sub_241260CC8(v12, v10);
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_134();
    memcpy(v20, v24, 0x119uLL);
    OUTLINED_FUNCTION_107_0();
    v25 = v6;
    v26 = v19;
    v27 = v21;
    v28 = v22;
    v29 = v12;
    v30 = v10;
    v31 = v11;
    v32 = v23;
    v33 = v17;
    v34 = v42;
    memcpy(v35, v41, sizeof(v35));
    v36 = v15;
    v37 = v18;
    v38 = v13 & 1;
    sub_24128BB20((uint64_t)&v25);
  }
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_2412833E8()
{
  _BYTE v1[72];

  sub_2412A8D5C();
  RoutingSession.hash(into:)((uint64_t)v1);
  return sub_2412A8D98();
}

void sub_241283420()
{
  RoutingSession.init(from:)();
}

void sub_241283434()
{
  RoutingSession.encode(to:)();
}

uint64_t RoutingDialog.Action.description.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241283480
                                                            + 4 * byte_2412ACE3E[*(unsigned __int8 *)(v0 + 16)]))(0x6C65636E61632ELL, 0xE700000000000000);
}

uint64_t sub_241283480()
{
  return 0x6D7269666E6F632ELL;
}

uint64_t sub_241283498()
{
  return 0x6C776F6E6B63612ELL;
}

uint64_t sub_2412834B8()
{
  return 0x7373696D7369642ELL;
}

void RoutingDialog.Action.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_241283504()
{
  OUTLINED_FUNCTION_147();
  return OUTLINED_FUNCTION_38_3();
}

void static RoutingDialog.Action.== infix(_:_:)()
{
  OUTLINED_FUNCTION_166();
  __asm { BR              X9 }
}

void sub_241283570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  if (v4)
  {
    OUTLINED_FUNCTION_21_3();
  }
  else
  {
    if (v3 != v1 || v2 != v0)
      OUTLINED_FUNCTION_6_4();
    v6 = OUTLINED_FUNCTION_33_1();
    sub_24125F7F4(v6, v7, v8);
  }
  OUTLINED_FUNCTION_48();
}

uint64_t sub_241283624()
{
  return 1954047348;
}

uint64_t sub_241283634(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x7373696D736964 && a2 == 0xE700000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C65636E6163 && a2 == 0xE600000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D7269666E6F63 && a2 == 0xE700000000000000;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x656C776F6E6B6361 && a2 == 0xEB00000000656764)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_2412A8CFC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_2412837F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241283824 + 4 * byte_2412ACE4A[a1]))(0x7373696D736964, 0xE700000000000000);
}

uint64_t sub_241283824()
{
  return 0x6C65636E6163;
}

uint64_t sub_241283838()
{
  return 0x6D7269666E6F63;
}

uint64_t sub_24128384C()
{
  return 0x656C776F6E6B6361;
}

void sub_24128386C(uint64_t a1, uint64_t a2)
{
  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412838D8()
{
  sub_24128BC84();
  return sub_2412A8DBC();
}

uint64_t sub_241283900()
{
  sub_24128BC84();
  return sub_2412A8DC8();
}

void sub_241283928(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_24128386C(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_241283950()
{
  sub_24128BCFC();
  return sub_2412A8DBC();
}

uint64_t sub_241283978()
{
  sub_24128BCFC();
  return sub_2412A8DC8();
}

uint64_t sub_2412839A0()
{
  unsigned __int8 *v0;

  return sub_2412837F0(*v0);
}

uint64_t sub_2412839A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241283634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412839CC()
{
  sub_24128BD74();
  return sub_2412A8DBC();
}

uint64_t sub_2412839F4()
{
  sub_24128BD74();
  return sub_2412A8DC8();
}

uint64_t sub_241283A1C()
{
  sub_24128BCC0();
  return sub_2412A8DBC();
}

uint64_t sub_241283A44()
{
  sub_24128BCC0();
  return sub_2412A8DC8();
}

uint64_t sub_241283A6C()
{
  sub_24128BD38();
  return sub_2412A8DBC();
}

uint64_t sub_241283A94()
{
  sub_24128BD38();
  return sub_2412A8DC8();
}

void RoutingDialog.Action.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_27_2(v1, &qword_257105B88, (uint64_t (*)(void))sub_24128BC84, (uint64_t)&type metadata for RoutingDialog.Action.AcknowledgeCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_46_1(v5, v16);
  OUTLINED_FUNCTION_27_2(v6, &qword_257105B98, (uint64_t (*)(void))sub_24128BCC0, (uint64_t)&type metadata for RoutingDialog.Action.ConfirmCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_85_1(v8, v17);
  OUTLINED_FUNCTION_27_2(v9, &qword_257105BA8, (uint64_t (*)(void))sub_24128BCFC, (uint64_t)&type metadata for RoutingDialog.Action.CancelCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_154(v11, v18);
  OUTLINED_FUNCTION_27_2(v12, &qword_257105BB8, (uint64_t (*)(void))sub_24128BD38, (uint64_t)&type metadata for RoutingDialog.Action.DismissCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_84_0();
  sub_241274E98(0, &qword_257105BC8, (uint64_t (*)(void))sub_24128BD74, (uint64_t)&type metadata for RoutingDialog.Action.CodingKeys, v3);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_94_1();
  v15 = *(unsigned __int8 *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24128BD74();
  OUTLINED_FUNCTION_105();
  sub_2412A8DB0();
  __asm { BR              X9 }
}

void sub_241283C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_196();
  v2 = *(_QWORD *)(v1 - 192);
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_19_3();
  OUTLINED_FUNCTION_24_1(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 184) + 8));
  OUTLINED_FUNCTION_64_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 104) + 8));
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_0_1();
}

void RoutingDialog.Action.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  OUTLINED_FUNCTION_46_0();
  __asm { BR              X9 }
}

void sub_241283DA0()
{
  sub_2412A8D68();
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_65_1();
}

void RoutingDialog.Action.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_12_0(v2, &qword_257105BD8, (uint64_t (*)(void))sub_24128BC84, (uint64_t)&type metadata for RoutingDialog.Action.AcknowledgeCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_156(v5, v26);
  OUTLINED_FUNCTION_12_0(v6, &qword_257105BE0, (uint64_t (*)(void))sub_24128BCC0, (uint64_t)&type metadata for RoutingDialog.Action.ConfirmCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_29_3(v8, v27);
  OUTLINED_FUNCTION_12_0(v9, &qword_257105BE8, (uint64_t (*)(void))sub_24128BCFC, (uint64_t)&type metadata for RoutingDialog.Action.CancelCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_86_1(v11, v28);
  OUTLINED_FUNCTION_12_0(v12, &qword_257105BF0, (uint64_t (*)(void))sub_24128BD38, (uint64_t)&type metadata for RoutingDialog.Action.DismissCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_11_4(0, &qword_257105BF8, (uint64_t (*)(void))sub_24128BD74, (uint64_t)&type metadata for RoutingDialog.Action.CodingKeys);
  v15 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_49_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128BD74();
  OUTLINED_FUNCTION_149();
  if (!v0)
  {
    v30 = v3;
    v17 = sub_2412A8C24();
    if (*(_QWORD *)(v17 + 16))
    {
      v29 = v1;
      OUTLINED_FUNCTION_131();
      v18 = *(unsigned __int8 *)(v17 + 32);
      sub_24127AA78(1);
      v20 = v19;
      v22 = v21;
      OUTLINED_FUNCTION_36_0();
      if (v20 == v22 >> 1)
        __asm { BR              X9 }
      v1 = v29;
    }
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    v24 = v23;
    OUTLINED_FUNCTION_96_0();
    *v24 = &type metadata for RoutingDialog.Action;
    sub_2412A8B88();
    v25 = OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_101(v25, *MEMORY[0x24BEE26D0]);
    OUTLINED_FUNCTION_174();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_39_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    v3 = v30;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  OUTLINED_FUNCTION_0_1();
}

void sub_24128426C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2412A8D5C();
  __asm { BR              X9 }
}

uint64_t sub_2412842A8()
{
  sub_2412A8D68();
  sub_2412A88B8();
  return sub_2412A8D98();
}

void sub_241284308()
{
  RoutingDialog.Action.init(from:)();
}

void sub_24128431C()
{
  RoutingDialog.Action.encode(to:)();
}

void RoutingDialog.identifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingDialog.titleText.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingDialog.detailText.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

uint64_t RoutingDialog.actions.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall RoutingDialog.init(identifier:titleText:detailText:actions:)(MediaControl::RoutingDialog *__return_ptr retstr, Swift::String identifier, Swift::String_optional titleText, Swift::String_optional detailText, Swift::OpaquePointer actions)
{
  retstr->identifier = identifier;
  retstr->titleText = titleText;
  retstr->detailText = detailText;
  retstr->actions = actions;
}

uint64_t RoutingDialog.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[3];
  v4 = v1[5];
  v5 = v1[6];
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    OUTLINED_FUNCTION_130();
    if (v4)
      goto LABEL_3;
LABEL_5:
    OUTLINED_FUNCTION_130();
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_81_0();
  sub_2412A88B8();
  OUTLINED_FUNCTION_23_2();
  if (!v4)
    goto LABEL_5;
LABEL_3:
  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_167();
  OUTLINED_FUNCTION_96();
LABEL_6:
  OUTLINED_FUNCTION_8();
  sub_24128B144(a1, v5);
  return swift_bridgeObjectRelease();
}

void static RoutingDialog.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v10 = *a1 == *a2 && a1[1] == a2[1];
  if (!v10 && (OUTLINED_FUNCTION_21_0() & 1) == 0)
    return;
  if (!v4)
  {
    if (v6)
      return;
LABEL_15:
    if (v5)
    {
      if (!v8)
        return;
      v12 = v3 == v9 && v5 == v8;
      if (!v12 && (OUTLINED_FUNCTION_21_0() & 1) == 0)
        return;
    }
    else if (v8)
    {
      return;
    }
    v13 = OUTLINED_FUNCTION_76_0();
    sub_2412942FC(v13, v14);
    return;
  }
  if (v6)
  {
    v11 = v2 == v7 && v4 == v6;
    if (v11 || (OUTLINED_FUNCTION_21_0() & 1) != 0)
      goto LABEL_15;
  }
}

uint64_t sub_24128458C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x786554656C746974 && a2 == 0xE900000000000074;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65546C6961746564 && a2 == 0xEA00000000007478;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_2412A8CFC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_241284754(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24128478C + 4 * byte_2412ACE5E[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_24128478C()
{
  return 0x786554656C746974;
}

uint64_t sub_2412847A8()
{
  return 0x65546C6961746564;
}

uint64_t sub_2412847C0()
{
  return 0x736E6F69746361;
}

uint64_t sub_2412847D8()
{
  unsigned __int8 *v0;

  return sub_241284754(*v0);
}

uint64_t sub_2412847E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24128458C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241284804()
{
  sub_24128BDB0();
  return sub_2412A8DBC();
}

uint64_t sub_24128482C()
{
  sub_24128BDB0();
  return sub_2412A8DC8();
}

void RoutingDialog.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_48_0(v2, &qword_257105C00, (uint64_t (*)(void))sub_24128BDB0, (uint64_t)&type metadata for RoutingDialog.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_136(v3);
  sub_24128BDB0();
  OUTLINED_FUNCTION_185();
  OUTLINED_FUNCTION_186();
  sub_2412A8C78();
  if (!v0)
  {
    OUTLINED_FUNCTION_118_0();
    v7 = OUTLINED_FUNCTION_118_0();
    OUTLINED_FUNCTION_87_1(v7, &qword_257105C10, (uint64_t)&type metadata for RoutingDialog.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_24128BDEC();
    OUTLINED_FUNCTION_102();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

uint64_t RoutingDialog.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v5[11];
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 48);
  v5[9] = *(_QWORD *)v0;
  v5[10] = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 16);
  v7 = v3;
  v8 = v2;
  sub_2412A8D5C();
  RoutingDialog.hash(into:)((uint64_t)v5);
  return sub_2412A8D98();
}

void RoutingDialog.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  v22 = v4;
  OUTLINED_FUNCTION_15_0(v2, &qword_257105C20, (uint64_t (*)(void))sub_24128BDB0, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_43_3();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128BDB0();
  sub_2412A8DA4();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  }
  else
  {
    v9 = OUTLINED_FUNCTION_83_1();
    v11 = v10;
    OUTLINED_FUNCTION_143();
    v12 = OUTLINED_FUNCTION_150();
    v21 = v13;
    v19 = v12;
    v20 = v9;
    OUTLINED_FUNCTION_143();
    v14 = sub_2412A8B94();
    v16 = v15;
    v18 = v14;
    OUTLINED_FUNCTION_87_1(v14, &qword_257105C10, (uint64_t)&type metadata for RoutingDialog.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v17 = sub_24128BE64();
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_16_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    if (v17)
    {
      OUTLINED_FUNCTION_23_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_85();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
      OUTLINED_FUNCTION_23_2();
      swift_bridgeObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_81_0();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_82_0();
      OUTLINED_FUNCTION_23_2();
      OUTLINED_FUNCTION_134();
      *v22 = v20;
      v22[1] = v11;
      v22[2] = v19;
      v22[3] = v21;
      v22[4] = v18;
      v22[5] = v16;
      v22[6] = v23;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
      OUTLINED_FUNCTION_18();
      OUTLINED_FUNCTION_85();
      OUTLINED_FUNCTION_134();
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_241284CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v5[11];
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 48);
  v5[9] = *(_QWORD *)v0;
  v5[10] = v1;
  v3 = *(_OWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 16);
  v7 = v3;
  v8 = v2;
  sub_2412A8D5C();
  RoutingDialog.hash(into:)((uint64_t)v5);
  return sub_2412A8D98();
}

void sub_241284D28()
{
  RoutingDialog.init(from:)();
}

void sub_241284D3C()
{
  RoutingDialog.encode(to:)();
}

uint64_t RoutingSessionSnapshot.sessions.getter()
{
  return swift_bridgeObjectRetain();
}

void RoutingSessionSnapshot.sessions.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*RoutingSessionSnapshot.sessions.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingSessionSnapshot.activeSession.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[296];

  v1 = sub_24128BEDC(v0 + 8, (uint64_t)v3);
  OUTLINED_FUNCTION_152(v1);
  return sub_24128BF38((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241261100);
}

void RoutingSessionSnapshot.activeSession.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[288];
  _BYTE v4[296];

  sub_24128BEDC(a1, (uint64_t)v3);
  sub_24128BEDC(v1 + 8, (uint64_t)v4);
  v2 = sub_24128BF38((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260B54);
  OUTLINED_FUNCTION_152(v2);
  OUTLINED_FUNCTION_44();
}

uint64_t (*RoutingSessionSnapshot.activeSession.modify())(_QWORD)
{
  return nullsub_1;
}

void *RoutingSessionSnapshot.init(sessions:activeSession:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE v6[288];
  _QWORD __src[37];

  sub_24128BEDC(a2, (uint64_t)v6);
  __src[0] = a1;
  sub_24128BEDC((uint64_t)v6, (uint64_t)&__src[1]);
  return memcpy(a3, __src, 0x121uLL);
}

void RoutingSessionSnapshot.description.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_110_0();
  OUTLINED_FUNCTION_133();
  v0 = OUTLINED_FUNCTION_8();
  MEMORY[0x242691694](v0, &type metadata for RoutingSession);
  sub_2412A88DC();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_79();
}

unint64_t RoutingSessionSnapshot.debugDescription.getter()
{
  const void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29[36];
  char v30[288];
  unint64_t v31;
  unint64_t v32;
  _QWORD __dst[37];
  uint64_t v34;
  _BYTE v35[288];
  _BYTE v36[288];

  memcpy(__dst, v0, 0x121uLL);
  v31 = 0xD000000000000018;
  v32 = 0x80000002412B4F00;
  sub_24128BEDC((uint64_t)&__dst[1], (uint64_t)v35);
  sub_24128BEDC((uint64_t)v35, (uint64_t)v36);
  OUTLINED_FUNCTION_169((uint64_t)v36);
  if (!v1)
  {
    OUTLINED_FUNCTION_62_2(v29, v36);
    OUTLINED_FUNCTION_168((uint64_t)v35, v2, v3, v4, v5, v6, v7, v8, v29[0], v29[1], v29[2], v29[3], v29[4], v29[5], v29[6], v29[7], v29[8], v29[9], v29[10],
      v29[11],
      v29[12],
      v29[13],
      v29[14],
      v29[15],
      v29[16],
      v29[17],
      v29[18],
      v29[19],
      v29[20],
      v29[21],
      v29[22],
      v29[23],
      v29[24],
      v29[25],
      v29[26],
      v29[27],
      v29[28],
      v29[29],
      v29[30],
      v29[31],
      v29[32],
      v29[33],
      v29[34],
      v29[35],
      v30[0]);
    v9 = sub_24128B9BC((uint64_t)v30);
    OUTLINED_FUNCTION_122_0(v9, v10, v11, v12, v13, v14, v15, v16, v29[0]);
    sub_24128BF38((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260B54);
  }
  v34 = __dst[0];
  v17 = *(_QWORD *)(__dst[0] + 16);
  if (v17)
  {
    v18 = (char *)(__dst[0] + 32);
    swift_bridgeObjectRetain();
    for (i = v17 - 1; ; --i)
    {
      OUTLINED_FUNCTION_62_2(v30, v18);
      OUTLINED_FUNCTION_62_2(v29, v18);
      v20 = sub_24128B9BC((uint64_t)v30);
      OUTLINED_FUNCTION_122_0(v20, v21, v22, v23, v24, v25, v26, v27, v29[0]);
      sub_24128BB20((uint64_t)v30);
      if (!i)
        break;
      v18 += 288;
    }
    sub_24128BFDC((uint64_t)&v34);
  }
  swift_beginAccess();
  OUTLINED_FUNCTION_80_1();
  swift_endAccess();
  return v31;
}

uint64_t sub_24128503C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  char v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD __dst[35];
  _BYTE v75[288];
  uint64_t v76;
  unint64_t v77;

  v3 = *a1;
  v4 = a1[1];
  v72 = (_QWORD *)a1[2];
  v73 = (_QWORD *)a1[3];
  v5 = a1[5];
  v71 = a1[7];
  v62 = a1[10];
  v63 = a1[12];
  v66 = a1[17];
  v67 = a1[13];
  v64 = a1[24];
  v65 = a1[22];
  v68 = *((unsigned __int8 *)a1 + 216);
  v69 = *((unsigned __int8 *)a1 + 240);
  v70 = *((_BYTE *)a1 + 68);
  v61 = *((unsigned __int8 *)a1 + 280);
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  v76 = 0x6F6973736553200ALL;
  v77 = 0xEA00000000003C6ELL;
  swift_bridgeObjectRetain();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  if (v5 >= 2)
    swift_bridgeObjectRetain();
  else
    swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_bridgeObjectRetain();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_beginAccess();
  sub_2412A88DC();
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_24128BEDC(a3 + 8, (uint64_t)v75);
  sub_24128BEDC((uint64_t)v75, (uint64_t)&v76);
  v6 = v5;
  if (sub_24128BFC4((uint64_t)&v76) != 1)
  {
    v7 = v3 == v76 && v4 == v77;
    if (v7 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_beginAccess();
      sub_2412A88DC();
      swift_endAccess();
    }
  }
  if (v61)
  {
    swift_beginAccess();
    sub_2412A88DC();
    swift_endAccess();
  }
  swift_beginAccess();
  sub_2412A88DC();
  swift_endAccess();
  if (v62)
  {
    sub_241289B30(0, 1, 1, MEMORY[0x24BEE4AF8], &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
    v9 = v8;
    v11 = *(_QWORD *)(v8 + 16);
    v10 = *(_QWORD *)(v8 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_241289B30(v10 > 1, v11 + 1, 1, v8, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v45;
    }
    *(_QWORD *)(v9 + 16) = v11 + 1;
    v12 = v9 + 16 * v11;
    *(_QWORD *)(v12 + 32) = 2036427888;
    *(_QWORD *)(v12 + 40) = 0xE400000000000000;
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
  }
  if (v63)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v46;
    }
    v14 = *(_QWORD *)(v9 + 16);
    v13 = *(_QWORD *)(v9 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_241289B30(v13 > 1, v14 + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v47;
    }
    *(_QWORD *)(v9 + 16) = v14 + 1;
    v15 = v9 + 16 * v14;
    *(_QWORD *)(v15 + 32) = 0x6573756170;
    *(_QWORD *)(v15 + 40) = 0xE500000000000000;
  }
  if (v64)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v48;
    }
    v17 = *(_QWORD *)(v9 + 16);
    v16 = *(_QWORD *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_241289B30(v16 > 1, v17 + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v49;
    }
    *(_QWORD *)(v9 + 16) = v17 + 1;
    v18 = v9 + 16 * v17;
    *(_QWORD *)(v18 + 32) = 1986359920;
    *(_QWORD *)(v18 + 40) = 0xE400000000000000;
  }
  if (v65)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v50;
    }
    v20 = *(_QWORD *)(v9 + 16);
    v19 = *(_QWORD *)(v9 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_241289B30(v19 > 1, v20 + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v51;
    }
    *(_QWORD *)(v9 + 16) = v20 + 1;
    v21 = v9 + 16 * v20;
    *(_QWORD *)(v21 + 32) = 1954047342;
    *(_QWORD *)(v21 + 40) = 0xE400000000000000;
  }
  if (v66)
  {
    strcpy((char *)__dst, "skipBackward");
    BYTE5(__dst[1]) = 0;
    HIWORD(__dst[1]) = -5120;
    v22 = swift_bridgeObjectRetain();
    MEMORY[0x242691694](v22, MEMORY[0x24BEE13C8]);
    sub_2412A88DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = __dst[0];
    v24 = __dst[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v52;
    }
    v26 = *(_QWORD *)(v9 + 16);
    v25 = *(_QWORD *)(v9 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_241289B30(v25 > 1, v26 + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v53;
    }
    *(_QWORD *)(v9 + 16) = v26 + 1;
    v27 = v9 + 16 * v26;
    *(_QWORD *)(v27 + 32) = v23;
    *(_QWORD *)(v27 + 40) = v24;
  }
  if (v67)
  {
    __dst[0] = 0x77726F4670696B73;
    __dst[1] = 0xEB00000000647261;
    v28 = swift_bridgeObjectRetain();
    MEMORY[0x242691694](v28, MEMORY[0x24BEE13C8]);
    sub_2412A88DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v54;
    }
    v30 = *(_QWORD *)(v9 + 16);
    v29 = *(_QWORD *)(v9 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_241289B30(v29 > 1, v30 + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v55;
    }
    *(_QWORD *)(v9 + 16) = v30 + 1;
    v31 = v9 + 16 * v30;
    *(_QWORD *)(v31 + 32) = 0x77726F4670696B73;
    *(_QWORD *)(v31 + 40) = 0xEB00000000647261;
  }
  if (v68 != 255)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v56;
    }
    v33 = *(_QWORD *)(v9 + 16);
    v32 = *(_QWORD *)(v9 + 24);
    if (v33 >= v32 >> 1)
    {
      sub_241289B30(v32 > 1, v33 + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v57;
    }
    *(_QWORD *)(v9 + 16) = v33 + 1;
    v34 = v9 + 16 * v33;
    *(_QWORD *)(v34 + 32) = 0x6C6F56736261;
    *(_QWORD *)(v34 + 40) = 0xE600000000000000;
  }
  if (v69 != 255)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v9 + 16) + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v58;
    }
    v36 = *(_QWORD *)(v9 + 16);
    v35 = *(_QWORD *)(v9 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_241289B30(v35 > 1, v36 + 1, 1, v9, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v9 = v59;
    }
    *(_QWORD *)(v9 + 16) = v36 + 1;
    v37 = v9 + 16 * v36;
    *(_QWORD *)(v37 + 32) = 0x6C6F566C6572;
    *(_QWORD *)(v37 + 40) = 0xE600000000000000;
  }
  __dst[0] = v9;
  sub_241262124(0, &qword_257106078, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_241291044();
  sub_2412A887C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  result = swift_endAccess();
  if ((v70 & 1) == 0)
  {
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    sub_2412A88DC();
    sub_2412A8984();
    sub_2412A88DC();
    swift_beginAccess();
    sub_2412A88DC();
    swift_endAccess();
    result = swift_bridgeObjectRelease();
  }
  if (v6 != 1 && v71)
  {
    type metadata accessor for ArtworkToken();
    swift_retain();
    sub_241263ED8();
    __dst[0] = 2105354;
    __dst[1] = 0xE300000000000000;
    sub_2412639EC();
    sub_2412A88DC();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_2412A88DC();
    swift_endAccess();
    swift_release();
    result = swift_bridgeObjectRelease();
  }
  v39 = v72[2];
  if (v39)
  {
    swift_bridgeObjectRetain();
    memcpy(__dst, v72 + 4, 0x111uLL);
    sub_241285CD4((uint64_t)__dst);
    v40 = v39 - 1;
    if (v40)
    {
      v41 = (char *)(v72 + 39);
      do
      {
        memcpy(__dst, v41, 0x111uLL);
        sub_241285CD4((uint64_t)__dst);
        v41 += 280;
        --v40;
      }
      while (v40);
    }
    result = swift_bridgeObjectRelease();
  }
  v42 = v73[2];
  if (v42)
  {
    swift_beginAccess();
    sub_2412A88DC();
    swift_endAccess();
    swift_bridgeObjectRetain();
    memcpy(__dst, v73 + 4, 0x111uLL);
    sub_241285CD4((uint64_t)__dst);
    v43 = v42 - 1;
    if (v43)
    {
      v44 = (char *)(v73 + 39);
      do
      {
        memcpy(__dst, v44, 0x111uLL);
        sub_241285CD4((uint64_t)__dst);
        v44 += 280;
        --v43;
      }
      while (v43);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_241285CD4(uint64_t a1)
{
  uint64_t v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_BYTE *)(a1 + 72);
  v3 = *(unsigned __int8 *)(a1 + 248);
  v16 = *(_BYTE *)(a1 + 272);
  if (*(unsigned __int8 *)(a1 + 224) == 255)
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_241289B30(0, 1, 1, MEMORY[0x24BEE4AF8], &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
    v5 = v4;
    v7 = *(_QWORD *)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 24);
    if (v7 >= v6 >> 1)
    {
      sub_241289B30(v6 > 1, v7 + 1, 1, v4, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v5 = v13;
    }
    *(_QWORD *)(v5 + 16) = v7 + 1;
    v8 = v5 + 16 * v7;
    *(_QWORD *)(v8 + 32) = 0x6C6F56736261;
    *(_QWORD *)(v8 + 40) = 0xE600000000000000;
  }
  if (v3 != 255)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_241289B30(0, *(_QWORD *)(v5 + 16) + 1, 1, v5, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v5 = v14;
    }
    v10 = *(_QWORD *)(v5 + 16);
    v9 = *(_QWORD *)(v5 + 24);
    if (v10 >= v9 >> 1)
    {
      sub_241289B30(v9 > 1, v10 + 1, 1, v5, &qword_257104CD8, MEMORY[0x24BEE0D00], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289F14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
      v5 = v15;
    }
    *(_QWORD *)(v5 + 16) = v10 + 1;
    v11 = v5 + 16 * v10;
    *(_QWORD *)(v11 + 32) = 0x6C6F566C6572;
    *(_QWORD *)(v11 + 40) = 0xE600000000000000;
    goto LABEL_13;
  }
  if (*(_QWORD *)(v5 + 16))
  {
LABEL_13:
    sub_241262124(0, &qword_257106078, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_241291044();
    sub_2412A887C();
    swift_bridgeObjectRelease();
    sub_2412A88DC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2412A88DC();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
LABEL_14:
  if ((v2 & 1) == 0)
  {
    sub_2412A88DC();
    sub_2412A8984();
    sub_2412A88DC();
    sub_2412A88DC();
    swift_bridgeObjectRelease();
  }
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_bridgeObjectRetain();
  if (v1)
  {
    sub_2412A88DC();
    swift_bridgeObjectRetain();
    sub_2412A88DC();
    swift_bridgeObjectRelease();
  }
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_bridgeObjectRetain();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_2412A88DC();
  swift_endAccess();
  result = swift_bridgeObjectRelease();
  if ((v16 & 4) != 0)
  {
    swift_beginAccess();
    sub_2412A88DC();
    return swift_endAccess();
  }
  return result;
}

void RoutingSessionSnapshot.hash(into:)(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12[36];
  char v13[288];
  _BYTE v14[288];
  _BYTE v15[288];

  v3 = *v1;
  sub_24128BEDC((uint64_t)(v1 + 1), (uint64_t)v14);
  OUTLINED_FUNCTION_40_0();
  sub_24128AFC0(a1, v3);
  OUTLINED_FUNCTION_96();
  sub_24128BEDC((uint64_t)v14, (uint64_t)v15);
  OUTLINED_FUNCTION_169((uint64_t)v15);
  if (v11)
  {
    OUTLINED_FUNCTION_18_3();
  }
  else
  {
    OUTLINED_FUNCTION_168((uint64_t)v14, v4, v5, v6, v7, v8, v9, v10, v12[0], v12[1], v12[2], v12[3], v12[4], v12[5], v12[6], v12[7], v12[8], v12[9], v12[10],
      v12[11],
      v12[12],
      v12[13],
      v12[14],
      v12[15],
      v12[16],
      v12[17],
      v12[18],
      v12[19],
      v12[20],
      v12[21],
      v12[22],
      v12[23],
      v12[24],
      v12[25],
      v12[26],
      v12[27],
      v12[28],
      v12[29],
      v12[30],
      v12[31],
      v12[32],
      v12[33],
      v12[34],
      v12[35],
      v13[0]);
    OUTLINED_FUNCTION_62_2(v12, v13);
    OUTLINED_FUNCTION_18_3();
    RoutingSession.hash(into:)(a1);
  }
  OUTLINED_FUNCTION_37_0();
}

void static RoutingSessionSnapshot.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[36];
  char v18[288];
  _BYTE v19[288];
  _BYTE v20[288];
  _BYTE v21[288];
  _BYTE v22[288];
  uint64_t v23;
  _BYTE v24[288];
  _BYTE v25[288];
  _BYTE v26[288];

  v3 = *a1;
  sub_24128BEDC((uint64_t)(a1 + 1), (uint64_t)v25);
  v4 = *a2;
  sub_24128BEDC((uint64_t)(a2 + 1), (uint64_t)v26);
  sub_241294150(v3, v4);
  if ((v5 & 1) != 0)
  {
    sub_24128BEDC((uint64_t)v25, (uint64_t)v24);
    OUTLINED_FUNCTION_169((uint64_t)v24);
    if (v6)
    {
      OUTLINED_FUNCTION_157((uint64_t)v26);
      OUTLINED_FUNCTION_169((uint64_t)v22);
      if (v6)
        goto LABEL_11;
    }
    else
    {
      sub_24128BEDC((uint64_t)v25, (uint64_t)v21);
      OUTLINED_FUNCTION_157((uint64_t)v26);
      OUTLINED_FUNCTION_169((uint64_t)v22);
      if (!v6)
      {
        OUTLINED_FUNCTION_168((uint64_t)v26, v7, v8, v9, v10, v11, v12, v13, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9], v17[10],
          v17[11],
          v17[12],
          v17[13],
          v17[14],
          v17[15],
          v17[16],
          v17[17],
          v17[18],
          v17[19],
          v17[20],
          v17[21],
          v17[22],
          v17[23],
          v17[24],
          v17[25],
          v17[26],
          v17[27],
          v17[28],
          v17[29],
          v17[30],
          v17[31],
          v17[32],
          v17[33],
          v17[34],
          v17[35],
          v18[0]);
        OUTLINED_FUNCTION_62_2(v17, v18);
        v15 = sub_24128BEDC((uint64_t)v25, (uint64_t)v19);
        OUTLINED_FUNCTION_163(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241261100);
        sub_24128B9BC((uint64_t)v19);
        static RoutingSession.== infix(_:_:)((uint64_t)v21, (uint64_t)v17);
        OUTLINED_FUNCTION_62_2(v20, v21);
        v16 = sub_24128BB20((uint64_t)v20);
        OUTLINED_FUNCTION_163(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260B54);
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_62_2(v19, v21);
      v14 = sub_24128BEDC((uint64_t)v25, (uint64_t)v20);
      OUTLINED_FUNCTION_163(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241261100);
      sub_24128B9BC((uint64_t)v20);
      sub_24128BB20((uint64_t)v19);
    }
    OUTLINED_FUNCTION_157((uint64_t)v25);
    sub_24128BEDC((uint64_t)v26, (uint64_t)&v23);
    sub_24128BF38((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241261100);
    sub_24128C004((uint64_t)v22);
  }
LABEL_11:
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_24128642C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x736E6F6973736573 && a2 == 0xE800000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6553657669746361 && a2 == 0xED00006E6F697373)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24128653C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6553657669746361;
  else
    return 0x736E6F6973736573;
}

uint64_t sub_241286580()
{
  char *v0;

  return sub_24128653C(*v0);
}

uint64_t sub_241286588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24128642C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412865AC()
{
  sub_24128C1AC();
  return sub_2412A8DBC();
}

uint64_t sub_2412865D4()
{
  sub_24128C1AC();
  return sub_2412A8DC8();
}

void RoutingSessionSnapshot.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[36];
  _BYTE v11[296];

  OUTLINED_FUNCTION_1_2();
  v4 = (_QWORD *)v3;
  OUTLINED_FUNCTION_48_0(v3, &qword_257105C38, (uint64_t (*)(void))sub_24128C1AC, (uint64_t)&type metadata for RoutingSessionSnapshot.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_85_0();
  v8 = *v0;
  sub_24128BEDC((uint64_t)(v0 + 1), (uint64_t)v11);
  OUTLINED_FUNCTION_136(v4);
  sub_24128C1AC();
  OUTLINED_FUNCTION_105();
  v9 = OUTLINED_FUNCTION_123_0();
  v10[0] = v8;
  OUTLINED_FUNCTION_87_1(v9, &qword_257105C48, (uint64_t)&type metadata for RoutingSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_24128C1E8();
  sub_2412A8CB4();
  if (!v1)
  {
    sub_24128BEDC((uint64_t)v11, (uint64_t)v10);
    sub_24128C260();
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_0_1();
}

uint64_t RoutingSessionSnapshot.hashValue.getter()
{
  _QWORD **v0;
  _QWORD *v1;
  char v2;
  _BYTE v4[288];
  _BYTE v5[288];
  _BYTE v6[72];
  _BYTE v7[288];
  _BYTE v8[288];

  v1 = *v0;
  sub_24128BEDC((uint64_t)(v0 + 1), (uint64_t)v7);
  sub_2412A8D5C();
  OUTLINED_FUNCTION_8();
  sub_24128AFC0((uint64_t)v6, v1);
  OUTLINED_FUNCTION_85();
  sub_24128BEDC((uint64_t)v7, (uint64_t)v8);
  OUTLINED_FUNCTION_169((uint64_t)v8);
  if (v2)
  {
    OUTLINED_FUNCTION_106_0();
  }
  else
  {
    sub_24128BEDC((uint64_t)v7, (uint64_t)v5);
    OUTLINED_FUNCTION_62_2(v4, v5);
    OUTLINED_FUNCTION_111_0();
    RoutingSession.hash(into:)((uint64_t)v6);
  }
  return sub_2412A8D98();
}

void RoutingSessionSnapshot.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE v12[48];
  _BYTE v13[288];
  _QWORD v14[37];
  _QWORD v15[37];
  uint64_t v16;
  _QWORD v17[37];
  _BYTE v18[296];

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  v11 = v4;
  OUTLINED_FUNCTION_160(v2, &qword_257105C60, (uint64_t (*)(void))sub_24128C1AC, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_43_3();
  sub_24128C29C(v18);
  sub_24128BEDC((uint64_t)v18, (uint64_t)&v17[1]);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128C1AC();
  v9 = sub_2412A8DA4();
  if (v0)
  {
    OUTLINED_FUNCTION_172();
    sub_24128BEDC((uint64_t)&v17[1], (uint64_t)v15);
    sub_24128BF38((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260B54);
  }
  else
  {
    OUTLINED_FUNCTION_87_1(v9, &qword_257105C48, (uint64_t)&type metadata for RoutingSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    LOBYTE(v14[0]) = 0;
    sub_24128C2A4();
    sub_2412A8C00();
    v10 = v15[0];
    v17[0] = v15[0];
    sub_24128C31C();
    OUTLINED_FUNCTION_132();
    sub_2412A8BB8();
    OUTLINED_FUNCTION_16_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    sub_24128BEDC((uint64_t)&v16, (uint64_t)v12);
    sub_24128BEDC((uint64_t)&v17[1], (uint64_t)v13);
    sub_24128BF38((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241261100);
    sub_24128BF38((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260B54);
    sub_24128BEDC((uint64_t)v12, (uint64_t)&v17[1]);
    v14[0] = v10;
    sub_24128BEDC((uint64_t)v12, (uint64_t)&v14[1]);
    sub_24128C358((uint64_t)v14);
    sub_24128BF38((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_241260B54);
    OUTLINED_FUNCTION_36_0();
    memcpy(v11, v14, 0x121uLL);
    OUTLINED_FUNCTION_172();
    memcpy(v15, v17, 0x121uLL);
    sub_24128C4AC((uint64_t)v15);
  }
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_241286A70()
{
  _QWORD **v0;
  _QWORD *v1;
  _BYTE __dst[281];
  _BYTE __src[288];
  _BYTE v5[72];
  _BYTE v6[288];
  _BYTE v7[288];

  v1 = *v0;
  sub_24128BEDC((uint64_t)(v0 + 1), (uint64_t)v6);
  sub_2412A8D5C();
  swift_bridgeObjectRetain();
  sub_24128AFC0((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  sub_24128BEDC((uint64_t)v6, (uint64_t)v7);
  if (sub_24128BFC4((uint64_t)v7) == 1)
  {
    sub_2412A8D74();
  }
  else
  {
    sub_24128BEDC((uint64_t)v6, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    sub_2412A8D74();
    RoutingSession.hash(into:)((uint64_t)v5);
  }
  return sub_2412A8D98();
}

void sub_241286B3C()
{
  RoutingSessionSnapshot.init(from:)();
}

void sub_241286B50()
{
  RoutingSessionSnapshot.encode(to:)();
}

void RoutingSessionConfiguration.Context.description.getter()
{
  __asm { BR              X10 }
}

void sub_241286BA4()
{
  OUTLINED_FUNCTION_75_1();
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_79();
}

void RoutingSessionConfiguration.Context.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_241286CA4()
{
  OUTLINED_FUNCTION_147();
  return OUTLINED_FUNCTION_38_3();
}

void sub_241286CD0()
{
  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_37_0();
}

void static RoutingSessionConfiguration.Context.== infix(_:_:)()
{
  OUTLINED_FUNCTION_166();
  __asm { BR              X9 }
}

void sub_241286D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  if (v4)
  {
    OUTLINED_FUNCTION_21_3();
  }
  else
  {
    if (v3 != v1 || v2 != v0)
      OUTLINED_FUNCTION_6_4();
    v6 = OUTLINED_FUNCTION_33_1();
    sub_24125F7F4(v6, v7, v8);
  }
  OUTLINED_FUNCTION_48();
}

unint64_t sub_241286E10()
{
  return 0xD000000000000010;
}

uint64_t sub_241286E2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x49556E6F6ELL && a2 == 0xE500000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 26997 && a2 == 0xE200000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 7368801 && a2 == 0xE300000000000000;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6154656369766564 && a2 == 0xEC00000074656772;
        if (v8 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x5472657474616C70 && a2 == 0xED00007465677261)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_2412A8CFC();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_241287044()
{
  return 5;
}

uint64_t sub_24128704C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24128707C + 4 * byte_2412ACE6E[a1]))(0x49556E6F6ELL, 0xE500000000000000);
}

uint64_t sub_24128707C()
{
  return 26997;
}

uint64_t sub_241287088()
{
  return 7368801;
}

uint64_t sub_241287098()
{
  return 0x6154656369766564;
}

uint64_t sub_2412870B8()
{
  return 0x5472657474616C70;
}

unint64_t sub_2412870DC()
{
  return 0xD000000000000010;
}

void sub_2412870F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_170();
  if (v1 == v2 && v0 == 0x80000002412B4F60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

void sub_241287168(_BYTE *a1@<X8>)
{
  char v2;

  sub_241287EE8();
  *a1 = v2 & 1;
}

uint64_t sub_241287190()
{
  sub_24128C678();
  return sub_2412A8DBC();
}

uint64_t sub_2412871B8()
{
  sub_24128C678();
  return sub_2412A8DC8();
}

uint64_t sub_2412871E0()
{
  unsigned __int8 *v0;

  return sub_24128704C(*v0);
}

uint64_t sub_2412871E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241286E2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24128720C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_241287044();
  *a1 = result;
  return result;
}

uint64_t sub_241287230()
{
  sub_24128C72C();
  return sub_2412A8DBC();
}

uint64_t sub_241287258()
{
  sub_24128C72C();
  return sub_2412A8DC8();
}

void sub_241287284(_BYTE *a1@<X8>)
{
  char v2;

  sub_2412870F8();
  *a1 = v2 & 1;
}

uint64_t sub_2412872AC()
{
  sub_24128C63C();
  return sub_2412A8DBC();
}

uint64_t sub_2412872D4()
{
  sub_24128C63C();
  return sub_2412A8DC8();
}

uint64_t sub_2412872FC()
{
  sub_24128C6F0();
  return sub_2412A8DBC();
}

uint64_t sub_241287324()
{
  sub_24128C6F0();
  return sub_2412A8DC8();
}

uint64_t sub_24128734C()
{
  sub_24128C600();
  return sub_2412A8DBC();
}

uint64_t sub_241287374()
{
  sub_24128C600();
  return sub_2412A8DC8();
}

uint64_t sub_24128739C()
{
  sub_24128C6B4();
  return sub_2412A8DBC();
}

uint64_t sub_2412873C4()
{
  sub_24128C6B4();
  return sub_2412A8DC8();
}

void RoutingSessionConfiguration.Context.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[18];

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_27_2(v1, &qword_257105C78, (uint64_t (*)(void))sub_24128C600, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys);
  v25[11] = *(_QWORD *)(v4 - 8);
  v25[12] = v4;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_46_1(v6, v25[0]);
  OUTLINED_FUNCTION_27_2(v7, &qword_257105C88, (uint64_t (*)(void))sub_24128C63C, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys);
  v25[8] = *(_QWORD *)(v8 - 8);
  v25[9] = v8;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_85_1(v10, v25[0]);
  OUTLINED_FUNCTION_27_2(v11, &qword_257105C98, (uint64_t (*)(void))sub_24128C678, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.AppCodingKeys);
  v25[5] = *(_QWORD *)(v12 - 8);
  v25[6] = v12;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_154(v14, v25[0]);
  OUTLINED_FUNCTION_27_2(v15, &qword_257105CA8, (uint64_t (*)(void))sub_24128C6B4, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.UiCodingKeys);
  v25[2] = *(_QWORD *)(v16 - 8);
  v25[3] = v16;
  OUTLINED_FUNCTION_1_4();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v25[1] = (uint64_t)v25 - v19;
  OUTLINED_FUNCTION_27_2(v18, &qword_257105CB8, (uint64_t (*)(void))sub_24128C6F0, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.NonUICodingKeys);
  v25[0] = v20;
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_86_0();
  sub_241274E98(0, &qword_257105CC8, (uint64_t (*)(void))sub_24128C72C, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.CodingKeys, v3);
  v25[15] = *(_QWORD *)(v22 - 8);
  v25[16] = v22;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_94_1();
  v24 = *(unsigned __int8 *)(v0 + 16);
  OUTLINED_FUNCTION_136(v2);
  sub_24128C72C();
  OUTLINED_FUNCTION_105();
  sub_2412A8DB0();
  __asm { BR              X9 }
}

void sub_2412875C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_205();
  v2 = *(_QWORD *)(v1 - 192);
  OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_19_3();
  OUTLINED_FUNCTION_24_1(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 184) + 8));
  OUTLINED_FUNCTION_64_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 104) + 8));
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_0_1();
}

void RoutingSessionConfiguration.Context.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  OUTLINED_FUNCTION_46_0();
  __asm { BR              X9 }
}

void sub_241287750()
{
  sub_2412A8D68();
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_65_1();
}

void RoutingSessionConfiguration.Context.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_12_0(v2, &qword_257105CD8, (uint64_t (*)(void))sub_24128C600, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_153(v5, v30);
  OUTLINED_FUNCTION_12_0(v6, &qword_257105CE0, (uint64_t (*)(void))sub_24128C63C, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_156(v8, v31);
  OUTLINED_FUNCTION_12_0(v9, &qword_257105CE8, (uint64_t (*)(void))sub_24128C678, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.AppCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_29_3(v11, v32);
  OUTLINED_FUNCTION_12_0(v12, &qword_257105CF0, (uint64_t (*)(void))sub_24128C6B4, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.UiCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_86_1(v14, v33);
  OUTLINED_FUNCTION_12_0(v15, &qword_257105CF8, (uint64_t (*)(void))sub_24128C6F0, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.NonUICodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_11_4(0, &qword_257105D00, (uint64_t (*)(void))sub_24128C72C, (uint64_t)&type metadata for RoutingSessionConfiguration.Context.CodingKeys);
  v18 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_85_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128C72C();
  OUTLINED_FUNCTION_105();
  sub_2412A8DA4();
  if (!v0)
  {
    v34 = v18;
    v35 = v3;
    v20 = v1;
    v21 = sub_2412A8C24();
    if (*(_QWORD *)(v21 + 16))
    {
      OUTLINED_FUNCTION_131();
      v22 = *(unsigned __int8 *)(v21 + 32);
      sub_24127AA78(1);
      v24 = v23;
      v26 = v25;
      swift_bridgeObjectRelease();
      if (v24 == v26 >> 1)
        __asm { BR              X9 }
      v20 = v1;
    }
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    v28 = v27;
    OUTLINED_FUNCTION_96_0();
    *v28 = &type metadata for RoutingSessionConfiguration.Context;
    sub_2412A8B88();
    v29 = OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_101(v29, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_39_3(v20, *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    v3 = v35;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  OUTLINED_FUNCTION_0_1();
}

void sub_241287AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_197();
  OUTLINED_FUNCTION_148();
  v3 = *(_QWORD *)(v2 - 224);
  sub_2412A8B7C();
  if (v3)
    JUMPOUT(0x241287B1CLL);
  OUTLINED_FUNCTION_207(*(_QWORD *)(v2 - 192));
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_39_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8));
  *(_QWORD *)v0 = 1;
  *(_QWORD *)(v0 + 8) = 0;
  *(_BYTE *)(v0 + 16) = 3;
  JUMPOUT(0x241287ADCLL);
}

void sub_241287B30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_24_3();
  if (!v1)
  {
    *(_QWORD *)(v4 - 128) = v2;
    v5 = OUTLINED_FUNCTION_151();
    v6 = *(_QWORD *)(v4 - 216);
    v7 = v5;
    v9 = v8;
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 176) + 8));
    OUTLINED_FUNCTION_103_0();
    OUTLINED_FUNCTION_39_3(v3, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *(_QWORD *)v0 = v7;
    *(_QWORD *)(v0 + 8) = v9;
    *(_BYTE *)(v0 + 16) = 0;
    JUMPOUT(0x241287ADCLL);
  }
  OUTLINED_FUNCTION_18_2();
  JUMPOUT(0x241287AD0);
}

void sub_241287D08()
{
  RoutingSessionConfiguration.Context.init(from:)();
}

void sub_241287D1C()
{
  RoutingSessionConfiguration.Context.encode(to:)();
}

void sub_241287D38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2412A8D5C();
  __asm { BR              X9 }
}

uint64_t sub_241287D74()
{
  sub_2412A8D68();
  sub_2412A88B8();
  return sub_2412A8D98();
}

uint64_t RoutingSessionConfiguration.ItemType.description.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
    return 0x636570537070612ELL;
  else
    return 0x7261646E6174732ELL;
}

void RoutingSessionConfiguration.ItemType.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_2412A8D68();
    OUTLINED_FUNCTION_38_3();
  }
  else
  {
    sub_2412A8D68();
    OUTLINED_FUNCTION_37_0();
  }
}

uint64_t static RoutingSessionConfiguration.ItemType.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_2412A8CFC();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

void sub_241287EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_170();
  if (v1 == v2 && v0 == 0x80000002412B4F80)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_241287F54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x647261646E617473 && a2 == 0xE800000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6963657053707061 && a2 == 0xEB00000000636966)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241288058(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6963657053707061;
  else
    return 0x647261646E617473;
}

uint64_t sub_241288098()
{
  sub_24128C768();
  return sub_2412A8DBC();
}

uint64_t sub_2412880C0()
{
  sub_24128C768();
  return sub_2412A8DC8();
}

uint64_t sub_2412880E8()
{
  char *v0;

  return sub_241288058(*v0);
}

uint64_t sub_2412880F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241287F54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241288114()
{
  sub_24128C7E0();
  return sub_2412A8DBC();
}

uint64_t sub_24128813C()
{
  sub_24128C7E0();
  return sub_2412A8DC8();
}

uint64_t sub_241288164()
{
  sub_24128C7A4();
  return sub_2412A8DBC();
}

uint64_t sub_24128818C()
{
  sub_24128C7A4();
  return sub_2412A8DC8();
}

void RoutingSessionConfiguration.ItemType.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_1_2();
  v4 = (_QWORD *)v3;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_158(v3, &qword_257105D08, (uint64_t (*)(void))sub_24128C768, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys);
  v16 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_158(v8, &qword_257105D18, (uint64_t (*)(void))sub_24128C7A4, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType.StandardCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_46_1(v10, v15);
  sub_241274E98(0, &qword_257105D28, (uint64_t (*)(void))sub_24128C7E0, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType.CodingKeys, v5);
  v12 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_84_0();
  v14 = *(_QWORD *)(v0 + 8);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_24128C7E0();
  OUTLINED_FUNCTION_185();
  if (v14)
  {
    OUTLINED_FUNCTION_193();
    OUTLINED_FUNCTION_64_1();
    sub_2412A8C78();
    OUTLINED_FUNCTION_64_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    OUTLINED_FUNCTION_188(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }
  else
  {
    sub_24128C7A4();
    OUTLINED_FUNCTION_64_1();
    OUTLINED_FUNCTION_142();
    OUTLINED_FUNCTION_30_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_0_1();
}

void RoutingSessionConfiguration.ItemType.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  OUTLINED_FUNCTION_46_0();
  sub_2412A8D68();
  if (v1)
    OUTLINED_FUNCTION_167();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_65_1();
}

void RoutingSessionConfiguration.ItemType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  v32 = v4;
  OUTLINED_FUNCTION_12_0(v2, &qword_257105D38, (uint64_t (*)(void))sub_24128C768, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys);
  v31 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_155(v7, v29);
  OUTLINED_FUNCTION_12_0(v8, &qword_257105D40, (uint64_t (*)(void))sub_24128C7A4, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType.StandardCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_11_4(0, &qword_257105D48, (uint64_t (*)(void))sub_24128C7E0, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType.CodingKeys);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_43_3();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128C7E0();
  OUTLINED_FUNCTION_92_1();
  if (v0)
    goto LABEL_10;
  v30 = v12;
  v34 = v3;
  v14 = sub_2412A8C24();
  v15 = v11;
  if (!*(_QWORD *)(v14 + 16))
  {
    v21 = v1;
LABEL_8:
    v22 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    v24 = v23;
    OUTLINED_FUNCTION_96_0();
    *v24 = &type metadata for RoutingSessionConfiguration.ItemType;
    sub_2412A8B88();
    OUTLINED_FUNCTION_88_0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    OUTLINED_FUNCTION_174();
    OUTLINED_FUNCTION_145();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v21, v15);
    v3 = v34;
LABEL_10:
    v25 = (uint64_t)v3;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_131();
  v16 = *(_BYTE *)(v14 + 32);
  sub_24127AA78(1);
  v18 = v17;
  v20 = v19;
  OUTLINED_FUNCTION_23_2();
  if (v18 != v20 >> 1)
  {
    v21 = v1;
    v15 = v11;
    goto LABEL_8;
  }
  if ((v16 & 1) != 0)
  {
    OUTLINED_FUNCTION_193();
    OUTLINED_FUNCTION_61_1();
    v26 = sub_2412A8BC4();
    v28 = v27;
    OUTLINED_FUNCTION_64_0(v33, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  }
  else
  {
    sub_24128C7A4();
    OUTLINED_FUNCTION_61_1();
    OUTLINED_FUNCTION_142();
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v26 = 0;
    v28 = 0;
  }
  *v32 = v26;
  v32[1] = v28;
  v25 = (uint64_t)v34;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0(v25);
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_241288714()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_2412A8D5C();
  sub_2412A8D68();
  if (v1)
    sub_2412A88B8();
  return sub_2412A8D98();
}

void sub_24128877C()
{
  RoutingSessionConfiguration.ItemType.init(from:)();
}

void sub_241288790()
{
  RoutingSessionConfiguration.ItemType.encode(to:)();
}

uint64_t RoutingSessionConfiguration.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_24125E37C(v2, v3, v4);
}

void RoutingSessionConfiguration.context.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  sub_24125F7F4(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingSessionConfiguration.context.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingSessionConfiguration.filterInactiveSessions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t RoutingSessionConfiguration.filterInactiveSessions.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*RoutingSessionConfiguration.filterInactiveSessions.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingSessionConfiguration.itemTypes.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_176();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*RoutingSessionConfiguration.itemTypes.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL RoutingSessionConfiguration.supportsDialogs.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 16) != 3 || *(_OWORD *)v0 != 0;
}

void RoutingSessionConfiguration.init(context:filterInactiveSessions:)(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v5 = *a1;
  v6 = a1[1];
  v7 = *((_BYTE *)a1 + 16);
  v8 = sub_2412888BC((uint64_t)&unk_2511572A8);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7;
  *(_BYTE *)(a3 + 17) = a2;
  *(_QWORD *)(a3 + 24) = v8;
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2412888BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  sub_24128C81C();
  v2 = sub_2412A899C();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_24128A2E0(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

__n128 RoutingSessionConfiguration.init(context:itemTypes:filterInactiveSessions:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, __n128 *a4@<X8>)
{
  unsigned __int8 v4;
  __n128 result;

  v4 = a1[1].n128_u8[0];
  result = *a1;
  *a4 = *a1;
  a4[1].n128_u8[0] = v4;
  a4[1].n128_u8[1] = a3;
  a4[1].n128_u64[1] = a2;
  return result;
}

uint64_t RoutingSessionConfiguration.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  sub_2412A8ABC();
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_161();
  sub_2412A88DC();
  v0 = OUTLINED_FUNCTION_128();
  sub_24125E37C(v0, v1, v2);
  RoutingSessionConfiguration.Context.description.getter();
  OUTLINED_FUNCTION_161();
  swift_bridgeObjectRelease();
  v3 = OUTLINED_FUNCTION_128();
  sub_24125F7F4(v3, v4, v5);
  sub_2412A88DC();
  sub_24128C81C();
  OUTLINED_FUNCTION_8();
  sub_2412A8990();
  OUTLINED_FUNCTION_161();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_96();
  sub_2412A88DC();
  sub_2412A88DC();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_80_1();
  return 0;
}

void RoutingSessionConfiguration.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_241288B70()
{
  uint64_t v0;
  uint64_t v1;

  sub_2412A8D68();
  OUTLINED_FUNCTION_45_2();
  sub_2412A8D74();
  OUTLINED_FUNCTION_8();
  sub_24128AE0C(v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t static RoutingSessionConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(a1 + 17);
  v3 = *(unsigned __int8 *)(a2 + 17);
  static RoutingSessionConfiguration.Context.== infix(_:_:)();
  if ((v4 & 1) == 0 || ((v2 ^ v3) & 1) != 0)
    return 0;
  v5 = OUTLINED_FUNCTION_76_0();
  return sub_241288C74(v5, v6);
}

uint64_t sub_241288C74(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  int64_t v25;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v25 = (unint64_t)(v6 + 63) >> 6;
  v9 = a2 + 56;
LABEL_7:
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_25:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    sub_2412A8D5C();
    sub_2412A8D68();
    if (v16)
    {
      swift_bridgeObjectRetain();
      sub_2412A88B8();
    }
    v18 = sub_2412A8D98();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
    {
      v21 = ~v19;
      do
      {
        v22 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v20);
        v23 = v22[1];
        if (v23)
        {
          if (v16)
          {
            v24 = *v22 == v17 && v23 == v16;
            if (v24 || (sub_2412A8CFC() & 1) != 0)
            {
              result = swift_bridgeObjectRelease();
              goto LABEL_7;
            }
          }
        }
        else if (!v16)
        {
          result = swift_bridgeObjectRelease_n();
          goto LABEL_7;
        }
        v20 = (v20 + 1) & v21;
      }
      while (((*(_QWORD *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v12 >= v25)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  ++v4;
  if (v13)
  {
LABEL_24:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_25;
  }
  v4 = v12 + 1;
  if (v12 + 1 >= v25)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_24;
  v4 = v12 + 2;
  if (v12 + 2 >= v25)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_24;
  v4 = v12 + 3;
  if (v12 + 3 >= v25)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_24;
  v14 = v12 + 4;
  if (v14 >= v25)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v25)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_24;
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_241288EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  unint64_t j;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v3 = 0;
  v4 = *(_QWORD *)(a1 + 56);
  v34 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v35 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v36 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v19 = a1;
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    sub_2412A8D5C();
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_45_2();
    v23 = sub_2412A8D98();
    v24 = -1 << *(_BYTE *)(a2 + 32);
    v25 = v23 & ~v24;
    if (((*(_QWORD *)(v8 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      goto LABEL_45;
    v26 = *(_QWORD *)(a2 + 48);
    v27 = (_QWORD *)(v26 + 16 * v25);
    v28 = *v27 == v22 && v27[1] == v21;
    if (!v28 && (OUTLINED_FUNCTION_21_0() & 1) == 0)
    {
      v29 = ~v24;
      for (j = v25 + 1; ; j = v31 + 1)
      {
        v31 = j & v29;
        if (((*(_QWORD *)(v8 + (((j & v29) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v29)) & 1) == 0)
          break;
        v32 = (_QWORD *)(v26 + 16 * v31);
        v33 = *v32 == v22 && v32[1] == v21;
        if (v33 || (OUTLINED_FUNCTION_21_0() & 1) != 0)
          goto LABEL_34;
      }
LABEL_45:
      OUTLINED_FUNCTION_57();
      return;
    }
LABEL_34:
    OUTLINED_FUNCTION_57();
    a1 = v19;
    v3 = v36;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v11 >= v35)
      return;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      OUTLINED_FUNCTION_192();
      if (v14 == v15)
        return;
      OUTLINED_FUNCTION_191();
      if (!v12)
      {
        OUTLINED_FUNCTION_192();
        if (v14 == v15)
          return;
        OUTLINED_FUNCTION_191();
        if (!v12)
        {
          OUTLINED_FUNCTION_192();
          if (v14 == v15)
            return;
          OUTLINED_FUNCTION_191();
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v7 = (v12 - 1) & v12;
    v36 = v13;
  }
  v17 = v16 + 4;
  if (v17 >= v35)
    return;
  v12 = *(_QWORD *)(v34 + 8 * v17);
  if (v12)
  {
    v13 = v17;
    goto LABEL_27;
  }
  while (!__OFADD__(v17, 1))
  {
    OUTLINED_FUNCTION_192();
    if (v14 == v15)
      return;
    OUTLINED_FUNCTION_191();
    v17 = v18 + 1;
    if (v12)
      goto LABEL_27;
  }
LABEL_48:
  __break(1u);
}

uint64_t sub_241289164(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x747865746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002412B4FA0 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657079546D657469 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2412892B8(char a1)
{
  if (!a1)
    return 0x747865746E6F63;
  if (a1 == 1)
    return 0xD000000000000016;
  return 0x657079546D657469;
}

uint64_t sub_241289318()
{
  char *v0;

  return sub_2412892B8(*v0);
}

uint64_t sub_241289320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241289164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241289344()
{
  sub_24128C858();
  return sub_2412A8DBC();
}

uint64_t sub_24128936C()
{
  sub_24128C858();
  return sub_2412A8DC8();
}

void RoutingSessionConfiguration.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_48_0(v2, &qword_257105D58, (uint64_t (*)(void))sub_24128C858, (uint64_t)&type metadata for RoutingSessionConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v7 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_41_2();
  OUTLINED_FUNCTION_136(v3);
  sub_24128C858();
  OUTLINED_FUNCTION_123_0();
  sub_24128C894();
  sub_2412A8CB4();
  if (!v0)
  {
    v6 = sub_2412A8C84();
    OUTLINED_FUNCTION_48_0(v6, &qword_257105D70, (uint64_t (*)(void))sub_24128C81C, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE16D8]);
    sub_24128C8D0(&qword_257105D78, (uint64_t (*)(void))sub_24128C954, MEMORY[0x24BEE1700]);
    OUTLINED_FUNCTION_102();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_0_1();
}

void RoutingSessionConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  OUTLINED_FUNCTION_46_0();
  __asm { BR              X9 }
}

void sub_241289568(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  sub_2412A8D68();
  OUTLINED_FUNCTION_45_2();
  sub_2412A8D74();
  OUTLINED_FUNCTION_8();
  sub_24128AE0C((uint64_t)va, v1);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_109_0();
}

void RoutingSessionConfiguration.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  v5 = v4;
  OUTLINED_FUNCTION_15_0(v2, &qword_257105D88, (uint64_t (*)(void))sub_24128C858, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_84_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24128C858();
  sub_2412A8DA4();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    sub_24128C990();
    OUTLINED_FUNCTION_41_3();
    v10 = v12;
    LOBYTE(v12) = 1;
    OUTLINED_FUNCTION_117_0();
    v11 = sub_2412A8BD0();
    v15 = v11;
    OUTLINED_FUNCTION_48_0(v11, &qword_257105D70, (uint64_t (*)(void))sub_24128C81C, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE16D8]);
    sub_24128C8D0(&qword_257105D98, (uint64_t (*)(void))sub_24128C9CC, MEMORY[0x24BEE1720]);
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_24_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    OUTLINED_FUNCTION_117_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)v5 = v10;
    *(_QWORD *)(v5 + 8) = v13;
    *(_BYTE *)(v5 + 16) = v14;
    *(_BYTE *)(v5 + 17) = v15 & 1;
    *(_QWORD *)(v5 + 24) = v12;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_18();
  }
  OUTLINED_FUNCTION_116_0();
  OUTLINED_FUNCTION_0_1();
}

void sub_241289808()
{
  RoutingSessionConfiguration.init(from:)();
}

void sub_24128981C()
{
  RoutingSessionConfiguration.encode(to:)();
}

void sub_241289838()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2412A8D5C();
  __asm { BR              X9 }
}

uint64_t sub_241289880()
{
  uint64_t v0;
  uint64_t v2;

  sub_2412A8D68();
  sub_2412A88B8();
  sub_2412A8D74();
  swift_bridgeObjectRetain();
  sub_24128AE0C((uint64_t)&v2, v0);
  swift_bridgeObjectRelease();
  return sub_2412A8D98();
}

void sub_241289924(char a1, int64_t a2, char a3, uint64_t a4)
{
  sub_241289B30(a1, a2, a3, a4, &qword_257106098, MEMORY[0x24BEE0718], (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_241289C14, (void (*)(uint64_t, uint64_t, _QWORD *))sub_24128A008);
}

char *sub_241289948(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_241262124(0, &qword_257106088, (uint64_t)&type metadata for RoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 280);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_24128A08C((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_241289D08(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void sub_241289A50(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_241269054(0, &qword_257104CC8, (uint64_t (*)(uint64_t))sub_2412697B4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)OUTLINED_FUNCTION_178();
    _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_175();
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = v11;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((a1 & 1) != 0)
  {
    sub_24128A008((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_85();
  }
  else
  {
    sub_241289E04(0, v8, (unint64_t)v12, a4);
  }
  OUTLINED_FUNCTION_37_0();
}

void sub_241289B30(char a1, int64_t a2, char a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)(_QWORD, uint64_t, _QWORD *, uint64_t), void (*a8)(uint64_t, uint64_t, _QWORD *))
{
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;

  if ((a3 & 1) != 0)
  {
    v12 = *(_QWORD *)(a4 + 24);
    v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v13 = a2;
    }
  }
  else
  {
    v13 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v13 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v13;
  if (v15)
  {
    sub_241262124(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v16 = (_QWORD *)OUTLINED_FUNCTION_178();
    _swift_stdlib_malloc_size(v16);
    OUTLINED_FUNCTION_175();
    v16[2] = v14;
    v16[3] = v17;
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v18 = v16 + 4;
  if ((a1 & 1) != 0)
  {
    a8(a4 + 32, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_85();
  }
  else
  {
    a7(0, v14, v18, a4);
  }
  OUTLINED_FUNCTION_48();
}

uint64_t sub_241289C14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_2412A8B64();
  __break(1u);
  return result;
}

uint64_t sub_241289D08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 280 * a1 + 32;
    v6 = a3 + 280 * v4;
    if (v5 >= v6 || v5 + 280 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_2412A8B64();
  __break(1u);
  return result;
}

uint64_t sub_241289E04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_24129109C();
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_2412A8B64();
  __break(1u);
  return result;
}

uint64_t sub_241289F14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_2412A8B64();
  __break(1u);
  return result;
}

char *sub_24128A008(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_2412A8B64();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_24128A08C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_2412A8B64();
    __break(1u);
  }
  else if (__dst != __src || &__src[280 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 280 * a2);
  }
  return __src;
}

uint64_t sub_24128A114(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 280 * a2 <= a1 || a1 + 280 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_2412A8B64();
  __break(1u);
  return result;
}

uint64_t sub_24128A1E8(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_24128A204(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v5 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (v4 <= v5)
      v7 = v4 + v2;
    else
      v7 = v4;
    result = (uint64_t)sub_241289948((char *)result, v7, 1, v3);
    v3 = result;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = sub_24128A114(v6 + 32, v2, v3 + 280 * v8 + 32);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *(_QWORD *)(v3 + 16) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24128A2E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v7 = *v3;
  sub_2412A8D5C();
  sub_2412A8D68();
  swift_bridgeObjectRetain();
  if (a3)
    sub_2412A88B8();
  v8 = sub_2412A8D98();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_24128A7B8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  v11 = ~v9;
  while (1)
  {
    v12 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v10);
    v13 = v12[1];
    if (!v13)
      break;
    if (a3)
    {
      v14 = *v12 == a2 && v13 == a3;
      if (v14 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
LABEL_14:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_15;
  }
  if (a3)
    goto LABEL_14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_18:
  v17 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  v18 = v17[1];
  *a1 = *v17;
  a1[1] = v18;
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_24128A4A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_241274E98(0, &qword_257106070, (uint64_t (*)(void))sub_24128C81C, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType, MEMORY[0x24BEE24D8]);
  v3 = sub_2412A8AB0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v19 = *v17;
      v18 = v17[1];
      sub_2412A8D5C();
      sub_2412A8D68();
      if (v18)
        sub_2412A88B8();
      result = sub_2412A8D98();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v19;
      v28[1] = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v14 >= v8)
        goto LABEL_34;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_34;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_34;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_34:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_24128A1E8(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v11 >= v8)
                  goto LABEL_34;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_24128A7B8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_24128A4A8();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_24128A964();
        goto LABEL_22;
      }
      sub_24128AB2C();
    }
    v10 = *v4;
    sub_2412A8D5C();
    sub_2412A8D68();
    if (a2)
      sub_2412A88B8();
    result = sub_2412A8D98();
    v11 = -1 << *(_BYTE *)(v10 + 32);
    a3 = result & ~v11;
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v12 = ~v11;
      do
      {
        v13 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * a3);
        v14 = v13[1];
        if (v14)
        {
          if (a2)
          {
            if (*v13 == v7 && v14 == a2)
              goto LABEL_26;
            result = sub_2412A8CFC();
            if ((result & 1) != 0)
              goto LABEL_26;
          }
        }
        else if (!a2)
        {
          goto LABEL_25;
        }
        a3 = (a3 + 1) & v12;
      }
      while (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_22:
  v16 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v17 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * a3);
  *v17 = v7;
  v17[1] = a2;
  v18 = *(_QWORD *)(v16 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease_n();
LABEL_26:
    result = sub_2412A8D14();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v16 + 16) = v20;
  }
  return result;
}

void *sub_24128A964()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_241274E98(0, &qword_257106070, (uint64_t (*)(void))sub_24128C81C, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType, MEMORY[0x24BEE24D8]);
  v2 = *v0;
  v3 = sub_2412A8AA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * i) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24128AB2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_241274E98(0, &qword_257106070, (uint64_t (*)(void))sub_24128C81C, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType, MEMORY[0x24BEE24D8]);
  v3 = sub_2412A8AB0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_36:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v19 = *v17;
    v18 = v17[1];
    sub_2412A8D5C();
    sub_2412A8D68();
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_2412A88B8();
    }
    result = sub_2412A8D98();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_32:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v19;
    v28[1] = v18;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_38;
    if (v14 >= v29)
      goto LABEL_34;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_34;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_34;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_34:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_36;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_34;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_24128AE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_2412A8D98();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * i + 8);
    sub_2412A8D5C();
    sub_2412A8D68();
    if (v16)
    {
      swift_bridgeObjectRetain();
      sub_2412A88B8();
    }
    v17 = sub_2412A8D98();
    result = swift_bridgeObjectRelease();
    v9 ^= v17;
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
      goto LABEL_21;
    if (v10 >= v7)
    {
LABEL_19:
      swift_release();
      return sub_2412A8D68();
    }
    v14 = *(_QWORD *)(v3 + 8 * v10);
    if (!v14)
      break;
LABEL_14:
    v6 = (v14 - 1) & v14;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_19;
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v7)
      goto LABEL_19;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

void sub_24128AFC0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE v7[281];

  v4 = a2[2];
  sub_2412A8D68();
  if (v4)
  {
    memcpy(v7, a2 + 4, sizeof(v7));
    RoutingSession.hash(into:)(a1);
    v5 = v4 - 1;
    if (v5)
    {
      v6 = (char *)(a2 + 40);
      do
      {
        memcpy(v7, v6, sizeof(v7));
        RoutingSession.hash(into:)(a1);
        v6 += 288;
        --v5;
      }
      while (v5);
    }
  }
}

void sub_24128B05C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  sub_2412A8D68();
  if (v3)
  {
    v4 = a2 + 32;
    do
    {
      v4 += 8;
      sub_2412A8D8C();
      --v3;
    }
    while (v3);
  }
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_24128B0A8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  _BYTE __dst[273];

  v4 = a2[2];
  result = sub_2412A8D68();
  if (v4)
  {
    memcpy(__dst, a2 + 4, sizeof(__dst));
    result = RoutingItem.hash(into:)(a1);
    v6 = v4 - 1;
    if (v6)
    {
      v7 = (char *)(a2 + 39);
      do
      {
        memcpy(__dst, v7, sizeof(__dst));
        result = RoutingItem.hash(into:)(a1);
        v7 += 280;
        --v6;
      }
      while (v6);
    }
  }
  return result;
}

uint64_t sub_24128B144(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_2412A8D68();
  if (v3)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_24128B24C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v5 = *(_BYTE *)(a1 + 144);
  v8 = *(_BYTE *)(a1 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412612A8(v2);
  sub_2412612A8(v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412612D4(v7, v6, v5);
  sub_2412612D4(v10, v9, v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24128B350(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v5 = *(_BYTE *)(a1 + 144);
  v8 = *(_BYTE *)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24127DCE0(v2);
  sub_24127DCE0(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241260D28(v7, v6, v5);
  sub_241260D28(v10, v9, v8);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24128B454()
{
  unint64_t result;

  result = qword_257105A78;
  if (!qword_257105A78)
  {
    result = MEMORY[0x242691F34](&unk_2412AF4E4, &type metadata for RoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105A78);
  }
  return result;
}

unint64_t sub_24128B490()
{
  unint64_t result;

  result = qword_257105A80;
  if (!qword_257105A80)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.SelectionIndicator, &type metadata for RoutingItem.SelectionIndicator);
    atomic_store(result, (unint64_t *)&qword_257105A80);
  }
  return result;
}

unint64_t sub_24128B4CC()
{
  unint64_t result;

  result = qword_257105A88;
  if (!qword_257105A88)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls, &type metadata for RoutingControls);
    atomic_store(result, (unint64_t *)&qword_257105A88);
  }
  return result;
}

unint64_t sub_24128B508()
{
  unint64_t result;

  result = qword_257105A90;
  if (!qword_257105A90)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.Properties, &type metadata for RoutingItem.Properties);
    atomic_store(result, (unint64_t *)&qword_257105A90);
  }
  return result;
}

unint64_t sub_24128B544()
{
  unint64_t result;

  result = qword_257105AA0;
  if (!qword_257105AA0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.SelectionIndicator, &type metadata for RoutingItem.SelectionIndicator);
    atomic_store(result, (unint64_t *)&qword_257105AA0);
  }
  return result;
}

unint64_t sub_24128B580()
{
  unint64_t result;

  result = qword_257105AA8;
  if (!qword_257105AA8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls, &type metadata for RoutingControls);
    atomic_store(result, (unint64_t *)&qword_257105AA8);
  }
  return result;
}

unint64_t sub_24128B5BC()
{
  unint64_t result;

  result = qword_257105AB0;
  if (!qword_257105AB0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.Properties, &type metadata for RoutingItem.Properties);
    atomic_store(result, (unint64_t *)&qword_257105AB0);
  }
  return result;
}

unint64_t sub_24128B5F8()
{
  unint64_t result;

  result = qword_257105AC0;
  if (!qword_257105AC0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF494, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105AC0);
  }
  return result;
}

unint64_t sub_24128B634()
{
  unint64_t result;

  result = qword_257105AD0;
  if (!qword_257105AD0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF444, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PlayingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105AD0);
  }
  return result;
}

unint64_t sub_24128B670()
{
  unint64_t result;

  result = qword_257105AE0;
  if (!qword_257105AE0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF3F4, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105AE0);
  }
  return result;
}

unint64_t sub_24128B6AC()
{
  unint64_t result;

  result = qword_257105B08;
  if (!qword_257105B08)
  {
    result = MEMORY[0x242691F34](&unk_2412AF3A4, &type metadata for RoutingSession.NowPlayingInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105B08);
  }
  return result;
}

unint64_t sub_24128B6E8()
{
  unint64_t result;

  result = qword_257105B10;
  if (!qword_257105B10)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession.NowPlayingInfo.PlaybackState, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_257105B10);
  }
  return result;
}

unint64_t sub_24128B724()
{
  unint64_t result;

  result = qword_257105B28;
  if (!qword_257105B28)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession.NowPlayingInfo.PlaybackState, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_257105B28);
  }
  return result;
}

uint64_t sub_24128B760(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ArtworkToken();
    result = MEMORY[0x242691F34](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24128B7A0()
{
  unint64_t result;

  result = qword_257105B40;
  if (!qword_257105B40)
  {
    result = MEMORY[0x242691F34](&unk_2412AF354, &type metadata for RoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105B40);
  }
  return result;
}

unint64_t sub_24128B7DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257105B50;
  if (!qword_257105B50)
  {
    sub_241262124(255, &qword_257105B48, (uint64_t)&type metadata for RoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_24128B854();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12A0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257105B50);
  }
  return result;
}

unint64_t sub_24128B854()
{
  unint64_t result;

  result = qword_257105B58;
  if (!qword_257105B58)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem, &type metadata for RoutingItem);
    atomic_store(result, (unint64_t *)&qword_257105B58);
  }
  return result;
}

unint64_t sub_24128B890()
{
  unint64_t result;

  result = qword_257105B60;
  if (!qword_257105B60)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession.NowPlayingInfo, &type metadata for RoutingSession.NowPlayingInfo);
    atomic_store(result, (unint64_t *)&qword_257105B60);
  }
  return result;
}

unint64_t sub_24128B8CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257105B70;
  if (!qword_257105B70)
  {
    sub_241262124(255, &qword_257105B48, (uint64_t)&type metadata for RoutingItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_24128B944();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12D0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257105B70);
  }
  return result;
}

unint64_t sub_24128B944()
{
  unint64_t result;

  result = qword_257105B78;
  if (!qword_257105B78)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem, &type metadata for RoutingItem);
    atomic_store(result, (unint64_t *)&qword_257105B78);
  }
  return result;
}

unint64_t sub_24128B980()
{
  unint64_t result;

  result = qword_257105B80;
  if (!qword_257105B80)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession.NowPlayingInfo, &type metadata for RoutingSession.NowPlayingInfo);
    atomic_store(result, (unint64_t *)&qword_257105B80);
  }
  return result;
}

uint64_t sub_24128B9BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 200);
  v8 = *(_QWORD *)(a1 + 208);
  v12 = *(_QWORD *)(a1 + 224);
  v11 = *(_QWORD *)(a1 + 232);
  v7 = *(_BYTE *)(a1 + 216);
  v10 = *(_BYTE *)(a1 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_241261274(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412612A8(v4);
  sub_2412612A8(v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2412612D4(v9, v8, v7);
  sub_2412612D4(v12, v11, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24128BB20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 200);
  v8 = *(_QWORD *)(a1 + 208);
  v12 = *(_QWORD *)(a1 + 224);
  v11 = *(_QWORD *)(a1 + 232);
  v7 = *(_BYTE *)(a1 + 216);
  v10 = *(_BYTE *)(a1 + 240);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241260CC8(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24127DCE0(v4);
  sub_24127DCE0(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_241260D28(v9, v8, v7);
  sub_241260D28(v12, v11, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24128BC84()
{
  unint64_t result;

  result = qword_257105B90;
  if (!qword_257105B90)
  {
    result = MEMORY[0x242691F34](&unk_2412AF304, &type metadata for RoutingDialog.Action.AcknowledgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105B90);
  }
  return result;
}

unint64_t sub_24128BCC0()
{
  unint64_t result;

  result = qword_257105BA0;
  if (!qword_257105BA0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF2B4, &type metadata for RoutingDialog.Action.ConfirmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105BA0);
  }
  return result;
}

unint64_t sub_24128BCFC()
{
  unint64_t result;

  result = qword_257105BB0;
  if (!qword_257105BB0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF264, &type metadata for RoutingDialog.Action.CancelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105BB0);
  }
  return result;
}

unint64_t sub_24128BD38()
{
  unint64_t result;

  result = qword_257105BC0;
  if (!qword_257105BC0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF214, &type metadata for RoutingDialog.Action.DismissCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105BC0);
  }
  return result;
}

unint64_t sub_24128BD74()
{
  unint64_t result;

  result = qword_257105BD0;
  if (!qword_257105BD0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF1C4, &type metadata for RoutingDialog.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105BD0);
  }
  return result;
}

unint64_t sub_24128BDB0()
{
  unint64_t result;

  result = qword_257105C08;
  if (!qword_257105C08)
  {
    result = MEMORY[0x242691F34](&unk_2412AF174, &type metadata for RoutingDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105C08);
  }
  return result;
}

unint64_t sub_24128BDEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257105C18;
  if (!qword_257105C18)
  {
    sub_241262124(255, &qword_257105C10, (uint64_t)&type metadata for RoutingDialog.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_241274C28();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12A0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257105C18);
  }
  return result;
}

unint64_t sub_24128BE64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257105C28;
  if (!qword_257105C28)
  {
    sub_241262124(255, &qword_257105C10, (uint64_t)&type metadata for RoutingDialog.Action, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_241274C64();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12D0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257105C28);
  }
  return result;
}

uint64_t sub_24128BEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_241262124(0, &qword_257105C30, (uint64_t)&type metadata for RoutingSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24128BF38(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  char v6;

  v6 = *(_BYTE *)(a1 + 280);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    *(_QWORD *)(a1 + 272),
    v6);
  return a1;
}

uint64_t sub_24128BFC4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_24128BFDC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24128C004(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 296);
  v23 = *(_QWORD *)(a1 + 288);
  v3 = *(_QWORD *)(a1 + 304);
  v4 = *(_QWORD *)(a1 + 312);
  v5 = *(_QWORD *)(a1 + 320);
  v6 = *(_QWORD *)(a1 + 328);
  v7 = *(_QWORD *)(a1 + 336);
  v8 = *(_QWORD *)(a1 + 344);
  v21 = *(_OWORD *)(a1 + 368);
  v22 = *(_OWORD *)(a1 + 352);
  v19 = *(_OWORD *)(a1 + 400);
  v20 = *(_OWORD *)(a1 + 384);
  v17 = *(_OWORD *)(a1 + 432);
  v18 = *(_OWORD *)(a1 + 416);
  v15 = *(_OWORD *)(a1 + 464);
  v16 = *(_OWORD *)(a1 + 448);
  v13 = *(_OWORD *)(a1 + 496);
  v14 = *(_OWORD *)(a1 + 480);
  v11 = *(_OWORD *)(a1 + 528);
  v12 = *(_OWORD *)(a1 + 512);
  v10 = *(_OWORD *)(a1 + 208);
  sub_241260B54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v10,
    BYTE8(v10),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_OWORD *)(a1 + 240));
  sub_241260B54(v23, v2, v3, v4, v5, v6, v7, v8, v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    BYTE8(v13),
    v12,
    *((uint64_t *)&v12 + 1),
    v11);
  return a1;
}

unint64_t sub_24128C1AC()
{
  unint64_t result;

  result = qword_257105C40;
  if (!qword_257105C40)
  {
    result = MEMORY[0x242691F34](&unk_2412AF124, &type metadata for RoutingSessionSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105C40);
  }
  return result;
}

unint64_t sub_24128C1E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257105C50;
  if (!qword_257105C50)
  {
    sub_241262124(255, &qword_257105C48, (uint64_t)&type metadata for RoutingSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_24128C260();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12A0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257105C50);
  }
  return result;
}

unint64_t sub_24128C260()
{
  unint64_t result;

  result = qword_257105C58;
  if (!qword_257105C58)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession, &type metadata for RoutingSession);
    atomic_store(result, (unint64_t *)&qword_257105C58);
  }
  return result;
}

void sub_24128C29C(void *a1)
{
  bzero(a1, 0x119uLL);
}

unint64_t sub_24128C2A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_257105C68;
  if (!qword_257105C68)
  {
    sub_241262124(255, &qword_257105C48, (uint64_t)&type metadata for RoutingSession, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_24128C31C();
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12D0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_257105C68);
  }
  return result;
}

unint64_t sub_24128C31C()
{
  unint64_t result;

  result = qword_257105C70;
  if (!qword_257105C70)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession, &type metadata for RoutingSession);
    atomic_store(result, (unint64_t *)&qword_257105C70);
  }
  return result;
}

uint64_t sub_24128C358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v22 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v20 = *(_OWORD *)(a1 + 88);
  v21 = *(_OWORD *)(a1 + 72);
  v18 = *(_OWORD *)(a1 + 120);
  v19 = *(_OWORD *)(a1 + 104);
  v16 = *(_OWORD *)(a1 + 152);
  v17 = *(_OWORD *)(a1 + 136);
  v14 = *(_OWORD *)(a1 + 184);
  v15 = *(_OWORD *)(a1 + 168);
  v12 = *(_OWORD *)(a1 + 216);
  v13 = *(_OWORD *)(a1 + 200);
  v10 = *(_OWORD *)(a1 + 248);
  v11 = *(_OWORD *)(a1 + 232);
  swift_bridgeObjectRetain();
  sub_241261100(v22, v2, v3, v4, v5, v6, v7, v8, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    BYTE8(v12),
    v11,
    *((uint64_t *)&v11 + 1),
    v10);
  return a1;
}

uint64_t sub_24128C4AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v22 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v20 = *(_OWORD *)(a1 + 88);
  v21 = *(_OWORD *)(a1 + 72);
  v18 = *(_OWORD *)(a1 + 120);
  v19 = *(_OWORD *)(a1 + 104);
  v16 = *(_OWORD *)(a1 + 152);
  v17 = *(_OWORD *)(a1 + 136);
  v14 = *(_OWORD *)(a1 + 184);
  v15 = *(_OWORD *)(a1 + 168);
  v12 = *(_OWORD *)(a1 + 216);
  v13 = *(_OWORD *)(a1 + 200);
  v10 = *(_OWORD *)(a1 + 248);
  v11 = *(_OWORD *)(a1 + 232);
  swift_bridgeObjectRelease();
  sub_241260B54(v22, v2, v3, v4, v5, v6, v7, v8, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    BYTE8(v12),
    v11,
    *((uint64_t *)&v11 + 1),
    v10);
  return a1;
}

unint64_t sub_24128C600()
{
  unint64_t result;

  result = qword_257105C80;
  if (!qword_257105C80)
  {
    result = MEMORY[0x242691F34](&unk_2412AF0D4, &type metadata for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105C80);
  }
  return result;
}

unint64_t sub_24128C63C()
{
  unint64_t result;

  result = qword_257105C90;
  if (!qword_257105C90)
  {
    result = MEMORY[0x242691F34](&unk_2412AF084, &type metadata for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105C90);
  }
  return result;
}

unint64_t sub_24128C678()
{
  unint64_t result;

  result = qword_257105CA0;
  if (!qword_257105CA0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF034, &type metadata for RoutingSessionConfiguration.Context.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105CA0);
  }
  return result;
}

unint64_t sub_24128C6B4()
{
  unint64_t result;

  result = qword_257105CB0;
  if (!qword_257105CB0)
  {
    result = MEMORY[0x242691F34](&unk_2412AEFE4, &type metadata for RoutingSessionConfiguration.Context.UiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105CB0);
  }
  return result;
}

unint64_t sub_24128C6F0()
{
  unint64_t result;

  result = qword_257105CC0;
  if (!qword_257105CC0)
  {
    result = MEMORY[0x242691F34](&unk_2412AEF94, &type metadata for RoutingSessionConfiguration.Context.NonUICodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105CC0);
  }
  return result;
}

unint64_t sub_24128C72C()
{
  unint64_t result;

  result = qword_257105CD0;
  if (!qword_257105CD0)
  {
    result = MEMORY[0x242691F34](&unk_2412AEF44, &type metadata for RoutingSessionConfiguration.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105CD0);
  }
  return result;
}

unint64_t sub_24128C768()
{
  unint64_t result;

  result = qword_257105D10;
  if (!qword_257105D10)
  {
    result = MEMORY[0x242691F34](&unk_2412AEEF4, &type metadata for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105D10);
  }
  return result;
}

unint64_t sub_24128C7A4()
{
  unint64_t result;

  result = qword_257105D20;
  if (!qword_257105D20)
  {
    result = MEMORY[0x242691F34](&unk_2412AEEA4, &type metadata for RoutingSessionConfiguration.ItemType.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105D20);
  }
  return result;
}

unint64_t sub_24128C7E0()
{
  unint64_t result;

  result = qword_257105D30;
  if (!qword_257105D30)
  {
    result = MEMORY[0x242691F34](&unk_2412AEE54, &type metadata for RoutingSessionConfiguration.ItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105D30);
  }
  return result;
}

unint64_t sub_24128C81C()
{
  unint64_t result;

  result = qword_257105D50;
  if (!qword_257105D50)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration.ItemType, &type metadata for RoutingSessionConfiguration.ItemType);
    atomic_store(result, (unint64_t *)&qword_257105D50);
  }
  return result;
}

unint64_t sub_24128C858()
{
  unint64_t result;

  result = qword_257105D60;
  if (!qword_257105D60)
  {
    result = MEMORY[0x242691F34](&unk_2412AEE04, &type metadata for RoutingSessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105D60);
  }
  return result;
}

unint64_t sub_24128C894()
{
  unint64_t result;

  result = qword_257105D68;
  if (!qword_257105D68)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration.Context, &type metadata for RoutingSessionConfiguration.Context);
    atomic_store(result, (unint64_t *)&qword_257105D68);
  }
  return result;
}

uint64_t sub_24128C8D0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_241274E98(255, &qword_257105D70, (uint64_t (*)(void))sub_24128C81C, (uint64_t)&type metadata for RoutingSessionConfiguration.ItemType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE16D8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x242691F34](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24128C954()
{
  unint64_t result;

  result = qword_257105D80;
  if (!qword_257105D80)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration.ItemType, &type metadata for RoutingSessionConfiguration.ItemType);
    atomic_store(result, (unint64_t *)&qword_257105D80);
  }
  return result;
}

unint64_t sub_24128C990()
{
  unint64_t result;

  result = qword_257105D90;
  if (!qword_257105D90)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration.Context, &type metadata for RoutingSessionConfiguration.Context);
    atomic_store(result, (unint64_t *)&qword_257105D90);
  }
  return result;
}

unint64_t sub_24128C9CC()
{
  unint64_t result;

  result = qword_257105DA0;
  if (!qword_257105DA0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration.ItemType, &type metadata for RoutingSessionConfiguration.ItemType);
    atomic_store(result, (unint64_t *)&qword_257105DA0);
  }
  return result;
}

unint64_t sub_24128CA0C()
{
  unint64_t result;

  result = qword_257105DA8;
  if (!qword_257105DA8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.Properties, &type metadata for RoutingItem.Properties);
    atomic_store(result, (unint64_t *)&qword_257105DA8);
  }
  return result;
}

unint64_t sub_24128CA4C()
{
  unint64_t result;

  result = qword_257105DB0;
  if (!qword_257105DB0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.Properties, &type metadata for RoutingItem.Properties);
    atomic_store(result, (unint64_t *)&qword_257105DB0);
  }
  return result;
}

unint64_t sub_24128CA8C()
{
  unint64_t result;

  result = qword_257105DB8;
  if (!qword_257105DB8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.Properties, &type metadata for RoutingItem.Properties);
    atomic_store(result, (unint64_t *)&qword_257105DB8);
  }
  return result;
}

unint64_t sub_24128CACC()
{
  unint64_t result;

  result = qword_257105DC0;
  if (!qword_257105DC0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.Properties, &type metadata for RoutingItem.Properties);
    atomic_store(result, (unint64_t *)&qword_257105DC0);
  }
  return result;
}

unint64_t sub_24128CB0C()
{
  unint64_t result;

  result = qword_257105DC8;
  if (!qword_257105DC8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem.SelectionIndicator, &type metadata for RoutingItem.SelectionIndicator);
    atomic_store(result, (unint64_t *)&qword_257105DC8);
  }
  return result;
}

unint64_t sub_24128CB4C()
{
  unint64_t result;

  result = qword_257105DD0;
  if (!qword_257105DD0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingItem, &type metadata for RoutingItem);
    atomic_store(result, (unint64_t *)&qword_257105DD0);
  }
  return result;
}

unint64_t sub_24128CB8C()
{
  unint64_t result;

  result = qword_257105DD8;
  if (!qword_257105DD8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession.NowPlayingInfo.PlaybackState, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_257105DD8);
  }
  return result;
}

unint64_t sub_24128CBCC()
{
  unint64_t result;

  result = qword_257105DE0;
  if (!qword_257105DE0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession.NowPlayingInfo, &type metadata for RoutingSession.NowPlayingInfo);
    atomic_store(result, (unint64_t *)&qword_257105DE0);
  }
  return result;
}

unint64_t sub_24128CC0C()
{
  unint64_t result;

  result = qword_257105DE8;
  if (!qword_257105DE8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSession, &type metadata for RoutingSession);
    atomic_store(result, (unint64_t *)&qword_257105DE8);
  }
  return result;
}

unint64_t sub_24128CC4C()
{
  unint64_t result;

  result = qword_257105DF0;
  if (!qword_257105DF0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingDialog.Action, &type metadata for RoutingDialog.Action);
    atomic_store(result, (unint64_t *)&qword_257105DF0);
  }
  return result;
}

unint64_t sub_24128CC8C()
{
  unint64_t result;

  result = qword_257105DF8;
  if (!qword_257105DF8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingDialog, &type metadata for RoutingDialog);
    atomic_store(result, (unint64_t *)&qword_257105DF8);
  }
  return result;
}

unint64_t sub_24128CCCC()
{
  unint64_t result;

  result = qword_257105E00;
  if (!qword_257105E00)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionSnapshot, &type metadata for RoutingSessionSnapshot);
    atomic_store(result, (unint64_t *)&qword_257105E00);
  }
  return result;
}

unint64_t sub_24128CD0C()
{
  unint64_t result;

  result = qword_257105E08;
  if (!qword_257105E08)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration.Context, &type metadata for RoutingSessionConfiguration.Context);
    atomic_store(result, (unint64_t *)&qword_257105E08);
  }
  return result;
}

unint64_t sub_24128CD4C()
{
  unint64_t result;

  result = qword_257105E10;
  if (!qword_257105E10)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration.ItemType, &type metadata for RoutingSessionConfiguration.ItemType);
    atomic_store(result, (unint64_t *)&qword_257105E10);
  }
  return result;
}

unint64_t sub_24128CD8C()
{
  unint64_t result;

  result = qword_257105E18;
  if (!qword_257105E18)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingSessionConfiguration, &type metadata for RoutingSessionConfiguration);
    atomic_store(result, (unint64_t *)&qword_257105E18);
  }
  return result;
}

uint64_t destroy for RoutingItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 144))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 224) != 255)
    sub_24125F80C();
  if (*(unsigned __int8 *)(a1 + 248) != 255)
    sub_24125F80C();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoutingItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_DWORD *)(a2 + 68);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v8;
  v10 = (_OWORD *)(a2 + 112);
  v9 = *(_QWORD *)(a2 + 112);
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_QWORD *)(a1 + 112) = v9;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = v10[1];
    *(_OWORD *)(a1 + 112) = *v10;
    *(_OWORD *)(a1 + 128) = v13;
  }
  v14 = *(_QWORD *)(a2 + 144);
  if (v14)
  {
    *(_QWORD *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
  }
  v16 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v16;
  v17 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v17;
  v18 = *(unsigned __int8 *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18 == 255)
  {
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  }
  else
  {
    v19 = v18 & 1;
    v20 = *(_QWORD *)(a2 + 208);
    v21 = *(_QWORD *)(a2 + 216);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 208) = v20;
    *(_QWORD *)(a1 + 216) = v21;
    *(_BYTE *)(a1 + 224) = v19;
  }
  v22 = *(unsigned __int8 *)(a2 + 248);
  if (v22 == 255)
  {
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  }
  else
  {
    v23 = v22 & 1;
    v24 = *(_QWORD *)(a2 + 232);
    v25 = *(_QWORD *)(a2 + 240);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 232) = v24;
    *(_QWORD *)(a1 + 240) = v25;
    *(_BYTE *)(a1 + 248) = v23;
  }
  v26 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v26;
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoutingItem(uint64_t a1, uint64_t a2)
{
  int v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 *v16;
  int v17;
  char v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  __int128 *v27;
  int v28;
  char v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v4 = *(_DWORD *)(a2 + 68);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a1 + 112);
  v7 = (_OWORD *)(a2 + 112);
  v6 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 112) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241276134(a1 + 112);
      v8 = *(_OWORD *)(a2 + 128);
      *v5 = *v7;
      *(_OWORD *)(a1 + 128) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 112) = v6;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 128);
    *v5 = *v7;
    *(_OWORD *)(a1 + 128) = v9;
  }
  v10 = (_OWORD *)(a1 + 144);
  v12 = (_OWORD *)(a2 + 144);
  v11 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)(a1 + 144))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 144) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241276168(a1 + 144);
      v13 = *(_OWORD *)(a2 + 160);
      *v10 = *v12;
      *(_OWORD *)(a1 + 160) = v13;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 144) = v11;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 160);
    *v10 = *v12;
    *(_OWORD *)(a1 + 160) = v14;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = (__int128 *)(a1 + 208);
  v16 = (__int128 *)(a2 + 208);
  v17 = *(unsigned __int8 *)(a2 + 224);
  if (*(unsigned __int8 *)(a1 + 224) == 255)
  {
    if (v17 == 255)
    {
      v19 = *v16;
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *v15 = v19;
    }
    else
    {
      v23 = v17 & 1;
      v24 = *(_QWORD *)(a2 + 208);
      v25 = *(_QWORD *)(a2 + 216);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 208) = v24;
      *(_QWORD *)(a1 + 216) = v25;
      *(_BYTE *)(a1 + 224) = v23;
    }
  }
  else if (v17 == 255)
  {
    sub_24127619C(a1 + 208);
    v18 = *(_BYTE *)(a2 + 224);
    *v15 = *v16;
    *(_BYTE *)(a1 + 224) = v18;
  }
  else
  {
    v20 = v17 & 1;
    v21 = *(_QWORD *)(a2 + 208);
    v22 = *(_QWORD *)(a2 + 216);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 208) = v21;
    *(_QWORD *)(a1 + 216) = v22;
    *(_BYTE *)(a1 + 224) = v20;
    sub_24125F80C();
  }
  v26 = (__int128 *)(a1 + 232);
  v27 = (__int128 *)(a2 + 232);
  v28 = *(unsigned __int8 *)(a2 + 248);
  if (*(unsigned __int8 *)(a1 + 248) == 255)
  {
    if (v28 == 255)
    {
      v30 = *v27;
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      *v26 = v30;
    }
    else
    {
      v34 = v28 & 1;
      v35 = *(_QWORD *)(a2 + 232);
      v36 = *(_QWORD *)(a2 + 240);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 232) = v35;
      *(_QWORD *)(a1 + 240) = v36;
      *(_BYTE *)(a1 + 248) = v34;
    }
  }
  else if (v28 == 255)
  {
    sub_2412761D0(a1 + 232);
    v29 = *(_BYTE *)(a2 + 248);
    *v26 = *v27;
    *(_BYTE *)(a1 + 248) = v29;
  }
  else
  {
    v31 = v28 & 1;
    v32 = *(_QWORD *)(a2 + 232);
    v33 = *(_QWORD *)(a2 + 240);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 232) = v32;
    *(_QWORD *)(a1 + 240) = v33;
    *(_BYTE *)(a1 + 248) = v31;
    sub_24125F80C();
  }
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  return a1;
}

void *__swift_memcpy273_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x111uLL);
}

uint64_t assignWithTake for RoutingItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  int v19;
  _OWORD *v20;
  int v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v11 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_241276134(a1 + 112);
  }
  v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
LABEL_6:
  v13 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)(a1 + 144))
  {
    if (v13)
    {
      *(_QWORD *)(a1 + 144) = v13;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      v14 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_241276168(a1 + 144);
  }
  v15 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v15;
LABEL_11:
  v16 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v17;
  swift_bridgeObjectRelease();
  v18 = (_OWORD *)(a2 + 208);
  if (*(unsigned __int8 *)(a1 + 224) == 255)
  {
LABEL_14:
    *(_OWORD *)(a1 + 208) = *v18;
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    goto LABEL_16;
  }
  v19 = *(unsigned __int8 *)(a2 + 224);
  if (v19 == 255)
  {
    sub_24127619C(a1 + 208);
    goto LABEL_14;
  }
  *(_OWORD *)(a1 + 208) = *v18;
  *(_BYTE *)(a1 + 224) = v19 & 1;
  sub_24125F80C();
LABEL_16:
  v20 = (_OWORD *)(a2 + 232);
  if (*(unsigned __int8 *)(a1 + 248) != 255)
  {
    v21 = *(unsigned __int8 *)(a2 + 248);
    if (v21 != 255)
    {
      *(_OWORD *)(a1 + 232) = *v20;
      *(_BYTE *)(a1 + 248) = v21 & 1;
      sub_24125F80C();
      goto LABEL_21;
    }
    sub_2412761D0(a1 + 232);
  }
  *(_OWORD *)(a1 + 232) = *v20;
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
LABEL_21:
  v22 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 273))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 272) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 273) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 273) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RoutingItem()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingItem.Properties()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingItem.SelectionIndicator()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingSession(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) != 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 216) != 255)
    sub_24125F80C();
  if (*(unsigned __int8 *)(a1 + 240) != 255)
    sub_24125F80C();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoutingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  v8 = *(_QWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_QWORD *)(a1 + 104) = v8;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v11;
  }
  v12 = *(_QWORD *)(a2 + 136);
  if (v12)
  {
    *(_QWORD *)(a1 + 136) = v12;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v13;
  }
  v14 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v14;
  v15 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v15;
  v16 = *(unsigned __int8 *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16 == 255)
  {
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  }
  else
  {
    v17 = v16 & 1;
    v18 = *(_QWORD *)(a2 + 200);
    v19 = *(_QWORD *)(a2 + 208);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 200) = v18;
    *(_QWORD *)(a1 + 208) = v19;
    *(_BYTE *)(a1 + 216) = v17;
  }
  v20 = *(unsigned __int8 *)(a2 + 240);
  if (v20 == 255)
  {
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  }
  else
  {
    v21 = v20 & 1;
    v22 = *(_QWORD *)(a2 + 224);
    v23 = *(_QWORD *)(a2 + 232);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 224) = v22;
    *(_QWORD *)(a1 + 232) = v23;
    *(_BYTE *)(a1 + 240) = v21;
  }
  v24 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v24;
  v25 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v25;
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoutingSession(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  int v9;
  _OWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 *v20;
  __int128 *v21;
  int v22;
  char v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  __int128 *v32;
  int v33;
  char v34;
  __int128 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 48);
      *v4 = *v5;
      *(_OWORD *)(a1 + 48) = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_retain();
    }
  }
  else if (v6 == 1)
  {
    sub_241276100(a1 + 32);
    v8 = *(_OWORD *)(a2 + 48);
    *v4 = *v5;
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_retain();
    swift_release();
  }
  v9 = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_OWORD *)(a1 + 104);
  v12 = (_OWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 104) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241276134(a1 + 104);
      v13 = *(_OWORD *)(a2 + 120);
      *v10 = *v12;
      *(_OWORD *)(a1 + 120) = v13;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 104) = v11;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 120);
    *v10 = *v12;
    *(_OWORD *)(a1 + 120) = v14;
  }
  v15 = (_OWORD *)(a1 + 136);
  v17 = (_OWORD *)(a2 + 136);
  v16 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136))
  {
    if (v16)
    {
      *(_QWORD *)(a1 + 136) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241276168(a1 + 136);
      v18 = *(_OWORD *)(a2 + 152);
      *v15 = *v17;
      *(_OWORD *)(a1 + 152) = v18;
    }
  }
  else if (v16)
  {
    *(_QWORD *)(a1 + 136) = v16;
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 152);
    *v15 = *v17;
    *(_OWORD *)(a1 + 152) = v19;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (__int128 *)(a1 + 200);
  v21 = (__int128 *)(a2 + 200);
  v22 = *(unsigned __int8 *)(a2 + 216);
  if (*(unsigned __int8 *)(a1 + 216) == 255)
  {
    if (v22 == 255)
    {
      v24 = *v21;
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *v20 = v24;
    }
    else
    {
      v28 = v22 & 1;
      v29 = *(_QWORD *)(a2 + 200);
      v30 = *(_QWORD *)(a2 + 208);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 200) = v29;
      *(_QWORD *)(a1 + 208) = v30;
      *(_BYTE *)(a1 + 216) = v28;
    }
  }
  else if (v22 == 255)
  {
    sub_24127619C(a1 + 200);
    v23 = *(_BYTE *)(a2 + 216);
    *v20 = *v21;
    *(_BYTE *)(a1 + 216) = v23;
  }
  else
  {
    v25 = v22 & 1;
    v26 = *(_QWORD *)(a2 + 200);
    v27 = *(_QWORD *)(a2 + 208);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 200) = v26;
    *(_QWORD *)(a1 + 208) = v27;
    *(_BYTE *)(a1 + 216) = v25;
    sub_24125F80C();
  }
  v31 = (__int128 *)(a1 + 224);
  v32 = (__int128 *)(a2 + 224);
  v33 = *(unsigned __int8 *)(a2 + 240);
  if (*(unsigned __int8 *)(a1 + 240) == 255)
  {
    if (v33 == 255)
    {
      v35 = *v32;
      *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
      *v31 = v35;
    }
    else
    {
      v39 = v33 & 1;
      v40 = *(_QWORD *)(a2 + 224);
      v41 = *(_QWORD *)(a2 + 232);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 224) = v40;
      *(_QWORD *)(a1 + 232) = v41;
      *(_BYTE *)(a1 + 240) = v39;
    }
  }
  else if (v33 == 255)
  {
    sub_2412761D0(a1 + 224);
    v34 = *(_BYTE *)(a2 + 240);
    *v31 = *v32;
    *(_BYTE *)(a1 + 240) = v34;
  }
  else
  {
    v36 = v33 & 1;
    v37 = *(_QWORD *)(a2 + 224);
    v38 = *(_QWORD *)(a2 + 232);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 224) = v37;
    *(_QWORD *)(a1 + 232) = v38;
    *(_BYTE *)(a1 + 240) = v36;
    sub_24125F80C();
  }
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  return a1;
}

void *__swift_memcpy281_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x119uLL);
}

uint64_t assignWithTake for RoutingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  int v18;
  _OWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 40);
  if (v5 == 1)
  {
    sub_241276100(a1 + 32);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
LABEL_6:
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 68) = *(_BYTE *)(a2 + 68);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 104) = v9;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      v10 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_241276134(a1 + 104);
  }
  v11 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v11;
LABEL_11:
  v12 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136))
  {
    if (v12)
    {
      *(_QWORD *)(a1 + 136) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      v13 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_241276168(a1 + 136);
  }
  v14 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v14;
LABEL_16:
  v15 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v16;
  swift_bridgeObjectRelease();
  v17 = (_OWORD *)(a2 + 200);
  if (*(unsigned __int8 *)(a1 + 216) == 255)
  {
LABEL_19:
    *(_OWORD *)(a1 + 200) = *v17;
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    goto LABEL_21;
  }
  v18 = *(unsigned __int8 *)(a2 + 216);
  if (v18 == 255)
  {
    sub_24127619C(a1 + 200);
    goto LABEL_19;
  }
  *(_OWORD *)(a1 + 200) = *v17;
  *(_BYTE *)(a1 + 216) = v18 & 1;
  sub_24125F80C();
LABEL_21:
  v19 = (_OWORD *)(a2 + 224);
  if (*(unsigned __int8 *)(a1 + 240) != 255)
  {
    v20 = *(unsigned __int8 *)(a2 + 240);
    if (v20 != 255)
    {
      *(_OWORD *)(a1 + 224) = *v19;
      *(_BYTE *)(a1 + 240) = v20 & 1;
      sub_24125F80C();
      goto LABEL_26;
    }
    sub_2412761D0(a1 + 224);
  }
  *(_OWORD *)(a1 + 224) = *v19;
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
LABEL_26:
  v21 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingSession(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 281))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 280) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 281) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 281) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RoutingSession()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingSession.NowPlayingInfo()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for RoutingSession.NowPlayingInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RoutingSession.NowPlayingInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RoutingSession.NowPlayingInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingSession.NowPlayingInfo(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingSession.NowPlayingInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for RoutingSession.NowPlayingInfo()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackState()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingDialog()
{
  OUTLINED_FUNCTION_21_1();
}

void initializeBufferWithCopyOfBuffer for RoutingDialog.Action(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_24128F2F4(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_24125E37C);
}

uint64_t destroy for RoutingDialog.Action(uint64_t a1)
{
  return sub_24125F7F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void assignWithCopy for RoutingDialog.Action(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_24128F334(a1, a2, a3, (uint64_t)sub_24125E37C, (void (*)(uint64_t, uint64_t, uint64_t))sub_24125F7F4);
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for RoutingDialog.Action(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_24128F380(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_24125F7F4);
}

uint64_t sub_24128E4C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_24128E4DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for RoutingDialog.Action()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingSessionSnapshot(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 48) != 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 112))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(a1 + 144))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(a1 + 224) != 255)
      sub_24125F80C();
    if (*(unsigned __int8 *)(a1 + 248) != 255)
      sub_24125F80C();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RoutingSessionSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6 == 1)
    {
      v7 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    v8 = *(_QWORD *)(a2 + 112);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    v10 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(_QWORD *)(a1 + 112) = v8;
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v11;
    }
    v12 = *(_QWORD *)(a2 + 144);
    if (v12)
    {
      *(_QWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v13;
    }
    v14 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v14;
    v15 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v15;
    v16 = *(unsigned __int8 *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    }
    else
    {
      v17 = v16 & 1;
      v18 = *(_QWORD *)(a2 + 208);
      v19 = *(_QWORD *)(a2 + 216);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 208) = v18;
      *(_QWORD *)(a1 + 216) = v19;
      *(_BYTE *)(a1 + 224) = v17;
    }
    v20 = *(unsigned __int8 *)(a2 + 248);
    if (v20 == 255)
    {
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    }
    else
    {
      v21 = v20 & 1;
      v22 = *(_QWORD *)(a2 + 232);
      v23 = *(_QWORD *)(a2 + 240);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 232) = v22;
      *(_QWORD *)(a1 + 240) = v23;
      *(_BYTE *)(a1 + 248) = v21;
    }
    v24 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = v24;
    v25 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = v25;
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x119uLL);
  }
  return a1;
}

uint64_t assignWithCopy for RoutingSessionSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  int v12;
  uint64_t v13;
  int v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  int v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _OWORD *v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 *v38;
  __int128 *v39;
  int v40;
  char v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  __int128 *v50;
  int v51;
  char v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v5 = (_OWORD *)(a1 + 40);
      v6 = (_OWORD *)(a2 + 40);
      v7 = *(_QWORD *)(a2 + 48);
      if (*(_QWORD *)(a1 + 48) == 1)
      {
        if (v7 == 1)
        {
          v8 = *(_OWORD *)(a2 + 56);
          *v5 = *v6;
          *(_OWORD *)(a1 + 56) = v8;
        }
        else
        {
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          swift_bridgeObjectRetain();
          swift_retain();
        }
      }
      else if (v7 == 1)
      {
        sub_241276100(a1 + 40);
        v11 = *(_OWORD *)(a2 + 56);
        *v5 = *v6;
        *(_OWORD *)(a1 + 56) = v11;
      }
      else
      {
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        swift_retain();
        swift_release();
      }
      v14 = *(_DWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
      *(_DWORD *)(a1 + 72) = v14;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = (_OWORD *)(a1 + 112);
      v17 = (_OWORD *)(a2 + 112);
      v16 = *(_QWORD *)(a2 + 112);
      if (*(_QWORD *)(a1 + 112))
      {
        if (v16)
        {
          *(_QWORD *)(a1 + 112) = v16;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
          *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
          *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_241276134(a1 + 112);
          v18 = *(_OWORD *)(a2 + 128);
          *v15 = *v17;
          *(_OWORD *)(a1 + 128) = v18;
        }
      }
      else if (v16)
      {
        *(_QWORD *)(a1 + 112) = v16;
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v32 = *(_OWORD *)(a2 + 128);
        *v15 = *v17;
        *(_OWORD *)(a1 + 128) = v32;
      }
      v33 = (_OWORD *)(a1 + 144);
      v35 = (_OWORD *)(a2 + 144);
      v34 = *(_QWORD *)(a2 + 144);
      if (*(_QWORD *)(a1 + 144))
      {
        if (v34)
        {
          *(_QWORD *)(a1 + 144) = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
          *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
          *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_241276168(a1 + 144);
          v36 = *(_OWORD *)(a2 + 160);
          *v33 = *v35;
          *(_OWORD *)(a1 + 160) = v36;
        }
      }
      else if (v34)
      {
        *(_QWORD *)(a1 + 144) = v34;
        *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v37 = *(_OWORD *)(a2 + 160);
        *v33 = *v35;
        *(_OWORD *)(a1 + 160) = v37;
      }
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38 = (__int128 *)(a1 + 208);
      v39 = (__int128 *)(a2 + 208);
      v40 = *(unsigned __int8 *)(a2 + 224);
      if (*(unsigned __int8 *)(a1 + 224) == 255)
      {
        if (v40 == 255)
        {
          v42 = *v39;
          *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
          *v38 = v42;
        }
        else
        {
          v46 = v40 & 1;
          v47 = *(_QWORD *)(a2 + 208);
          v48 = *(_QWORD *)(a2 + 216);
          OUTLINED_FUNCTION_143();
          *(_QWORD *)(a1 + 208) = v47;
          *(_QWORD *)(a1 + 216) = v48;
          *(_BYTE *)(a1 + 224) = v46;
        }
      }
      else if (v40 == 255)
      {
        sub_24127619C(a1 + 208);
        v41 = *(_BYTE *)(a2 + 224);
        *v38 = *v39;
        *(_BYTE *)(a1 + 224) = v41;
      }
      else
      {
        v43 = v40 & 1;
        v44 = *(_QWORD *)(a2 + 208);
        v45 = *(_QWORD *)(a2 + 216);
        OUTLINED_FUNCTION_143();
        *(_QWORD *)(a1 + 208) = v44;
        *(_QWORD *)(a1 + 216) = v45;
        *(_BYTE *)(a1 + 224) = v43;
        sub_24125F80C();
      }
      v49 = (__int128 *)(a1 + 232);
      v50 = (__int128 *)(a2 + 232);
      v51 = *(unsigned __int8 *)(a2 + 248);
      if (*(unsigned __int8 *)(a1 + 248) == 255)
      {
        if (v51 == 255)
        {
          v53 = *v50;
          *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
          *v49 = v53;
        }
        else
        {
          v57 = v51 & 1;
          v58 = *(_QWORD *)(a2 + 232);
          v59 = *(_QWORD *)(a2 + 240);
          OUTLINED_FUNCTION_143();
          *(_QWORD *)(a1 + 232) = v58;
          *(_QWORD *)(a1 + 240) = v59;
          *(_BYTE *)(a1 + 248) = v57;
        }
      }
      else if (v51 == 255)
      {
        sub_2412761D0(a1 + 232);
        v52 = *(_BYTE *)(a2 + 248);
        *v49 = *v50;
        *(_BYTE *)(a1 + 248) = v52;
      }
      else
      {
        v54 = v51 & 1;
        v55 = *(_QWORD *)(a2 + 232);
        v56 = *(_QWORD *)(a2 + 240);
        OUTLINED_FUNCTION_143();
        *(_QWORD *)(a1 + 232) = v55;
        *(_QWORD *)(a1 + 240) = v56;
        *(_BYTE *)(a1 + 248) = v54;
        sub_24125F80C();
      }
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      return a1;
    }
    sub_241276204(a1 + 8);
LABEL_10:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x119uLL);
    return a1;
  }
  if (!v4)
    goto LABEL_10;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 1)
  {
    v10 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  v12 = *(_DWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v13 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    *(_QWORD *)(a1 + 112) = v13;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v19;
  }
  v20 = *(_QWORD *)(a2 + 144);
  if (v20)
  {
    *(_QWORD *)(a1 + 144) = v20;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v21 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v21;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v22 = *(unsigned __int8 *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22 == 255)
  {
    v23 = *(_OWORD *)(a2 + 208);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = v23;
  }
  else
  {
    v24 = v22 & 1;
    v25 = *(_QWORD *)(a2 + 208);
    v26 = *(_QWORD *)(a2 + 216);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 208) = v25;
    *(_QWORD *)(a1 + 216) = v26;
    *(_BYTE *)(a1 + 224) = v24;
  }
  v27 = *(unsigned __int8 *)(a2 + 248);
  if (v27 == 255)
  {
    v28 = *(_OWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = v28;
  }
  else
  {
    v29 = v27 & 1;
    v30 = *(_QWORD *)(a2 + 232);
    v31 = *(_QWORD *)(a2 + 240);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 232) = v30;
    *(_QWORD *)(a1 + 240) = v31;
    *(_BYTE *)(a1 + 248) = v29;
  }
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for RoutingSessionSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  int v18;
  _OWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48) != 1)
      {
        v5 = *(_QWORD *)(a2 + 48);
        if (v5 != 1)
        {
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = v5;
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          swift_release();
LABEL_10:
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
          *(_BYTE *)(a1 + 76) = *(_BYTE *)(a2 + 76);
          v7 = *(_QWORD *)(a2 + 88);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = v7;
          swift_bridgeObjectRelease();
          v8 = *(_QWORD *)(a2 + 104);
          *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
          *(_QWORD *)(a1 + 104) = v8;
          swift_bridgeObjectRelease();
          v9 = *(_QWORD *)(a2 + 112);
          if (*(_QWORD *)(a1 + 112))
          {
            if (v9)
            {
              *(_QWORD *)(a1 + 112) = v9;
              swift_bridgeObjectRelease();
              *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
              v10 = *(_QWORD *)(a2 + 136);
              *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
              *(_QWORD *)(a1 + 136) = v10;
              swift_bridgeObjectRelease();
              goto LABEL_15;
            }
            sub_241276134(a1 + 112);
          }
          v11 = *(_OWORD *)(a2 + 128);
          *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 128) = v11;
LABEL_15:
          v12 = *(_QWORD *)(a2 + 144);
          if (*(_QWORD *)(a1 + 144))
          {
            if (v12)
            {
              *(_QWORD *)(a1 + 144) = v12;
              swift_bridgeObjectRelease();
              *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
              v13 = *(_QWORD *)(a2 + 168);
              *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
              *(_QWORD *)(a1 + 168) = v13;
              swift_bridgeObjectRelease();
              goto LABEL_20;
            }
            sub_241276168(a1 + 144);
          }
          v14 = *(_OWORD *)(a2 + 160);
          *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
          *(_OWORD *)(a1 + 160) = v14;
LABEL_20:
          v15 = *(_QWORD *)(a2 + 184);
          *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
          *(_QWORD *)(a1 + 184) = v15;
          swift_bridgeObjectRelease();
          v16 = *(_QWORD *)(a2 + 200);
          *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
          *(_QWORD *)(a1 + 200) = v16;
          swift_bridgeObjectRelease();
          v17 = (_OWORD *)(a2 + 208);
          if (*(unsigned __int8 *)(a1 + 224) != 255)
          {
            v18 = *(unsigned __int8 *)(a2 + 224);
            if (v18 != 255)
            {
              *(_OWORD *)(a1 + 208) = *v17;
              *(_BYTE *)(a1 + 224) = v18 & 1;
              sub_24125F80C();
LABEL_25:
              v19 = (_OWORD *)(a2 + 232);
              if (*(unsigned __int8 *)(a1 + 248) != 255)
              {
                v20 = *(unsigned __int8 *)(a2 + 248);
                if (v20 != 255)
                {
                  *(_OWORD *)(a1 + 232) = *v19;
                  *(_BYTE *)(a1 + 248) = v20 & 1;
                  sub_24125F80C();
                  goto LABEL_30;
                }
                sub_2412761D0(a1 + 232);
              }
              *(_OWORD *)(a1 + 232) = *v19;
              *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
LABEL_30:
              v21 = *(_QWORD *)(a2 + 264);
              *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
              *(_QWORD *)(a1 + 264) = v21;
              swift_bridgeObjectRelease();
              v22 = *(_QWORD *)(a2 + 280);
              *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
              *(_QWORD *)(a1 + 280) = v22;
              swift_bridgeObjectRelease();
              *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
              return a1;
            }
            sub_24127619C(a1 + 208);
          }
          *(_OWORD *)(a1 + 208) = *v17;
          *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
          goto LABEL_25;
        }
        sub_241276100(a1 + 40);
      }
      v6 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v6;
      goto LABEL_10;
    }
    sub_241276204(a1 + 8);
  }
  memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x119uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingSessionSnapshot(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 289))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingSessionSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_BYTE *)(result + 288) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 289) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 289) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RoutingSessionSnapshot()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingSessionConfiguration()
{
  OUTLINED_FUNCTION_21_1();
}

void sub_24128F2F4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  OUTLINED_FUNCTION_37_0();
}

void sub_24128F334(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_BYTE *)a2 + 16);
  v10 = OUTLINED_FUNCTION_128();
  v11(v10);
  v12 = *a1;
  v13 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v14 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v12, v13, v14);
  OUTLINED_FUNCTION_48();
}

uint64_t *sub_24128F380(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t _s12MediaControl13RoutingDialogV6ActionOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return OUTLINED_FUNCTION_93_1(*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 3)
    return OUTLINED_FUNCTION_93_1(v3 ^ 0xFF);
  else
    return OUTLINED_FUNCTION_93_1(-1);
}

uint64_t _s12MediaControl13RoutingDialogV6ActionOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for RoutingSessionConfiguration.Context()
{
  OUTLINED_FUNCTION_21_1();
}

_QWORD *assignWithCopy for RoutingSessionConfiguration.ItemType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingSessionConfiguration.ItemType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RoutingSessionConfiguration.ItemType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

_QWORD *sub_24128F534(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for RoutingSessionConfiguration.ItemType()
{
  OUTLINED_FUNCTION_21_1();
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.CodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.ItemType.CodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.ItemType.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.ItemType.StandardCodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.ItemType.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys;
}

uint64_t getEnumTagSinglePayload for RoutingSessionConfiguration.Context.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingSessionConfiguration.Context.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_24128F680 + 4 * byte_2412ACE99[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_24128F6B4 + 4 * byte_2412ACE94[v4]))();
}

uint64_t sub_24128F6B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24128F6BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24128F6C4);
  return result;
}

uint64_t sub_24128F6D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24128F6D8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_24128F6DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24128F6E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.Context.CodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.Context.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.Context.NonUICodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.Context.NonUICodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.Context.UiCodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.Context.UiCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.Context.AppCodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.Context.AppCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys()
{
  return &type metadata for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSessionSnapshot.CodingKeys()
{
  return &type metadata for RoutingSessionSnapshot.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingDialog.CodingKeys()
{
  return &type metadata for RoutingDialog.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingDialog.Action.CodingKeys()
{
  return &type metadata for RoutingDialog.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingDialog.Action.DismissCodingKeys()
{
  return &type metadata for RoutingDialog.Action.DismissCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingDialog.Action.CancelCodingKeys()
{
  return &type metadata for RoutingDialog.Action.CancelCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingDialog.Action.ConfirmCodingKeys()
{
  return &type metadata for RoutingDialog.Action.ConfirmCodingKeys;
}

uint64_t _s12MediaControl27RoutingSessionConfigurationV8ItemTypeO21AppSpecificCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24128F7F0 + 4 * byte_2412ACE9E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24128F810 + 4 * byte_2412ACEA3[v4]))();
}

_BYTE *sub_24128F7F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24128F810(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24128F818(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24128F820(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24128F828(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24128F830(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RoutingDialog.Action.AcknowledgeCodingKeys()
{
  return &type metadata for RoutingDialog.Action.AcknowledgeCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSession.CodingKeys()
{
  return &type metadata for RoutingSession.CodingKeys;
}

uint64_t _s12MediaControl27RoutingSessionConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_93_1(v8);
}

uint64_t _s12MediaControl27RoutingSessionConfigurationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24128F934 + 4 * byte_2412ACEAD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_141 + 4 * byte_2412ACEA8[v4]))();
}

uint64_t sub_24128F96C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24128F974);
  return result;
}

uint64_t sub_24128F97C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x24128F984);
  return OUTLINED_FUNCTION_140();
}

ValueMetadata *type metadata accessor for RoutingSession.NowPlayingInfo.CodingKeys()
{
  return &type metadata for RoutingSession.NowPlayingInfo.CodingKeys;
}

uint64_t _s12MediaControl14RoutingSessionV14NowPlayingInfoV13PlaybackStateOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_93_1(v8);
}

uint64_t _s12MediaControl14RoutingSessionV14NowPlayingInfoV13PlaybackStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24128FA74 + 4 * byte_2412ACEB7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_141_0 + 4 * byte_2412ACEB2[v4]))();
}

uint64_t sub_24128FAAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24128FAB4);
  return result;
}

uint64_t sub_24128FABC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x24128FAC4);
  return OUTLINED_FUNCTION_140();
}

ValueMetadata *type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys()
{
  return &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackState.PlayingCodingKeys()
{
  return &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PlayingCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackState.PausedCodingKeys()
{
  return &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PausedCodingKeys;
}

uint64_t _s12MediaControl14RoutingSessionV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 8);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 8);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 8);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_93_1(v8);
}

uint64_t _s12MediaControl14RoutingSessionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_24128FBD4 + 4 * byte_2412ACEC1[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_141_1 + 4 * byte_2412ACEBC[v4]))();
}

uint64_t sub_24128FC0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24128FC14);
  return result;
}

uint64_t sub_24128FC1C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x24128FC24);
  return OUTLINED_FUNCTION_140();
}

ValueMetadata *type metadata accessor for RoutingItem.CodingKeys()
{
  return &type metadata for RoutingItem.CodingKeys;
}

uint64_t _s12MediaControl11RoutingItemV18SelectionIndicatorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_93_1((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_93_1(v8);
}

uint64_t _s12MediaControl11RoutingItemV18SelectionIndicatorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24128FD14 + 4 * byte_2412ACECB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_141_2 + 4 * byte_2412ACEC6[v4]))();
}

uint64_t sub_24128FD4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24128FD54);
  return result;
}

uint64_t sub_24128FD5C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x24128FD64);
  return OUTLINED_FUNCTION_140();
}

ValueMetadata *type metadata accessor for RoutingItem.SelectionIndicator.CodingKeys()
{
  return &type metadata for RoutingItem.SelectionIndicator.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingItem.SelectionIndicator.NoneCodingKeys()
{
  return &type metadata for RoutingItem.SelectionIndicator.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingItem.SelectionIndicator.SelectableCodingKeys()
{
  return &type metadata for RoutingItem.SelectionIndicator.SelectableCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingItem.SelectionIndicator.SelectedCodingKeys()
{
  return &type metadata for RoutingItem.SelectionIndicator.SelectedCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingItem.SelectionIndicator.PullableCodingKeys()
{
  return &type metadata for RoutingItem.SelectionIndicator.PullableCodingKeys;
}

unint64_t sub_24128FDC8()
{
  unint64_t result;

  result = qword_257105E20;
  if (!qword_257105E20)
  {
    result = MEMORY[0x242691F34](&unk_2412ADFC4, &type metadata for RoutingItem.SelectionIndicator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E20);
  }
  return result;
}

unint64_t sub_24128FE08()
{
  unint64_t result;

  result = qword_257105E28;
  if (!qword_257105E28)
  {
    result = MEMORY[0x242691F34](&unk_2412AE07C, &type metadata for RoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E28);
  }
  return result;
}

unint64_t sub_24128FE48()
{
  unint64_t result;

  result = qword_257105E30;
  if (!qword_257105E30)
  {
    result = MEMORY[0x242691F34](&unk_2412AE1D4, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E30);
  }
  return result;
}

unint64_t sub_24128FE88()
{
  unint64_t result;

  result = qword_257105E38;
  if (!qword_257105E38)
  {
    result = MEMORY[0x242691F34](&unk_2412AE28C, &type metadata for RoutingSession.NowPlayingInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E38);
  }
  return result;
}

unint64_t sub_24128FEC8()
{
  unint64_t result;

  result = qword_257105E40;
  if (!qword_257105E40)
  {
    result = MEMORY[0x242691F34](&unk_2412AE344, &type metadata for RoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E40);
  }
  return result;
}

unint64_t sub_24128FF08()
{
  unint64_t result;

  result = qword_257105E48;
  if (!qword_257105E48)
  {
    result = MEMORY[0x242691F34](&unk_2412AE3FC, &type metadata for RoutingDialog.Action.AcknowledgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E48);
  }
  return result;
}

unint64_t sub_24128FF48()
{
  unint64_t result;

  result = qword_257105E50;
  if (!qword_257105E50)
  {
    result = MEMORY[0x242691F34](&unk_2412AE4B4, &type metadata for RoutingDialog.Action.ConfirmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E50);
  }
  return result;
}

unint64_t sub_24128FF88()
{
  unint64_t result;

  result = qword_257105E58;
  if (!qword_257105E58)
  {
    result = MEMORY[0x242691F34](&unk_2412AE56C, &type metadata for RoutingDialog.Action.CancelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E58);
  }
  return result;
}

unint64_t sub_24128FFC8()
{
  unint64_t result;

  result = qword_257105E60;
  if (!qword_257105E60)
  {
    result = MEMORY[0x242691F34](&unk_2412AE674, &type metadata for RoutingDialog.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E60);
  }
  return result;
}

unint64_t sub_241290008()
{
  unint64_t result;

  result = qword_257105E68;
  if (!qword_257105E68)
  {
    result = MEMORY[0x242691F34](&unk_2412AE72C, &type metadata for RoutingDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E68);
  }
  return result;
}

unint64_t sub_241290048()
{
  unint64_t result;

  result = qword_257105E70;
  if (!qword_257105E70)
  {
    result = MEMORY[0x242691F34](&unk_2412AE7E4, &type metadata for RoutingSessionSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E70);
  }
  return result;
}

unint64_t sub_241290088()
{
  unint64_t result;

  result = qword_257105E78;
  if (!qword_257105E78)
  {
    result = MEMORY[0x242691F34](&unk_2412AE89C, &type metadata for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E78);
  }
  return result;
}

unint64_t sub_2412900C8()
{
  unint64_t result;

  result = qword_257105E80;
  if (!qword_257105E80)
  {
    result = MEMORY[0x242691F34](&unk_2412AE954, &type metadata for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E80);
  }
  return result;
}

unint64_t sub_241290108()
{
  unint64_t result;

  result = qword_257105E88;
  if (!qword_257105E88)
  {
    result = MEMORY[0x242691F34](&unk_2412AEA0C, &type metadata for RoutingSessionConfiguration.Context.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E88);
  }
  return result;
}

unint64_t sub_241290148()
{
  unint64_t result;

  result = qword_257105E90;
  if (!qword_257105E90)
  {
    result = MEMORY[0x242691F34](&unk_2412AEB64, &type metadata for RoutingSessionConfiguration.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E90);
  }
  return result;
}

unint64_t sub_241290188()
{
  unint64_t result;

  result = qword_257105E98;
  if (!qword_257105E98)
  {
    result = MEMORY[0x242691F34](&unk_2412AEC1C, &type metadata for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105E98);
  }
  return result;
}

unint64_t sub_2412901C8()
{
  unint64_t result;

  result = qword_257105EA0;
  if (!qword_257105EA0)
  {
    result = MEMORY[0x242691F34](&unk_2412AED24, &type metadata for RoutingSessionConfiguration.ItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EA0);
  }
  return result;
}

unint64_t sub_241290208()
{
  unint64_t result;

  result = qword_257105EA8;
  if (!qword_257105EA8)
  {
    result = MEMORY[0x242691F34](&unk_2412AEDDC, &type metadata for RoutingSessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EA8);
  }
  return result;
}

unint64_t sub_241290248()
{
  unint64_t result;

  result = qword_257105EB0;
  if (!qword_257105EB0)
  {
    result = MEMORY[0x242691F34](&unk_2412AED4C, &type metadata for RoutingSessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EB0);
  }
  return result;
}

unint64_t sub_241290288()
{
  unint64_t result;

  result = qword_257105EB8;
  if (!qword_257105EB8)
  {
    result = MEMORY[0x242691F34](&unk_2412AED74, &type metadata for RoutingSessionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EB8);
  }
  return result;
}

unint64_t sub_2412902C8()
{
  unint64_t result;

  result = qword_257105EC0;
  if (!qword_257105EC0)
  {
    result = MEMORY[0x242691F34](&unk_2412AEC94, &type metadata for RoutingSessionConfiguration.ItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EC0);
  }
  return result;
}

unint64_t sub_241290308()
{
  unint64_t result;

  result = qword_257105EC8;
  if (!qword_257105EC8)
  {
    result = MEMORY[0x242691F34](&unk_2412AECBC, &type metadata for RoutingSessionConfiguration.ItemType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EC8);
  }
  return result;
}

unint64_t sub_241290348()
{
  unint64_t result;

  result = qword_257105ED0;
  if (!qword_257105ED0)
  {
    result = MEMORY[0x242691F34](&unk_2412AEC44, &type metadata for RoutingSessionConfiguration.ItemType.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105ED0);
  }
  return result;
}

unint64_t sub_241290388()
{
  unint64_t result;

  result = qword_257105ED8;
  if (!qword_257105ED8)
  {
    result = MEMORY[0x242691F34](&unk_2412AEC6C, &type metadata for RoutingSessionConfiguration.ItemType.StandardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105ED8);
  }
  return result;
}

unint64_t sub_2412903C8()
{
  unint64_t result;

  result = qword_257105EE0;
  if (!qword_257105EE0)
  {
    result = MEMORY[0x242691F34](&unk_2412AEB8C, &type metadata for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EE0);
  }
  return result;
}

unint64_t sub_241290408()
{
  unint64_t result;

  result = qword_257105EE8;
  if (!qword_257105EE8)
  {
    result = MEMORY[0x242691F34](&unk_2412AEBB4, &type metadata for RoutingSessionConfiguration.ItemType.AppSpecificCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EE8);
  }
  return result;
}

unint64_t sub_241290448()
{
  unint64_t result;

  result = qword_257105EF0;
  if (!qword_257105EF0)
  {
    result = MEMORY[0x242691F34](&unk_2412AEAD4, &type metadata for RoutingSessionConfiguration.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EF0);
  }
  return result;
}

unint64_t sub_241290488()
{
  unint64_t result;

  result = qword_257105EF8;
  if (!qword_257105EF8)
  {
    result = MEMORY[0x242691F34](&unk_2412AEAFC, &type metadata for RoutingSessionConfiguration.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105EF8);
  }
  return result;
}

unint64_t sub_2412904C8()
{
  unint64_t result;

  result = qword_257105F00;
  if (!qword_257105F00)
  {
    result = MEMORY[0x242691F34](&unk_2412AEA84, &type metadata for RoutingSessionConfiguration.Context.NonUICodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F00);
  }
  return result;
}

unint64_t sub_241290508()
{
  unint64_t result;

  result = qword_257105F08;
  if (!qword_257105F08)
  {
    result = MEMORY[0x242691F34](&unk_2412AEAAC, &type metadata for RoutingSessionConfiguration.Context.NonUICodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F08);
  }
  return result;
}

unint64_t sub_241290548()
{
  unint64_t result;

  result = qword_257105F10;
  if (!qword_257105F10)
  {
    result = MEMORY[0x242691F34](&unk_2412AEA34, &type metadata for RoutingSessionConfiguration.Context.UiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F10);
  }
  return result;
}

unint64_t sub_241290588()
{
  unint64_t result;

  result = qword_257105F18;
  if (!qword_257105F18)
  {
    result = MEMORY[0x242691F34](&unk_2412AEA5C, &type metadata for RoutingSessionConfiguration.Context.UiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F18);
  }
  return result;
}

unint64_t sub_2412905C8()
{
  unint64_t result;

  result = qword_257105F20;
  if (!qword_257105F20)
  {
    result = MEMORY[0x242691F34](&unk_2412AE97C, &type metadata for RoutingSessionConfiguration.Context.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F20);
  }
  return result;
}

unint64_t sub_241290608()
{
  unint64_t result;

  result = qword_257105F28;
  if (!qword_257105F28)
  {
    result = MEMORY[0x242691F34](&unk_2412AE9A4, &type metadata for RoutingSessionConfiguration.Context.AppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F28);
  }
  return result;
}

unint64_t sub_241290648()
{
  unint64_t result;

  result = qword_257105F30;
  if (!qword_257105F30)
  {
    result = MEMORY[0x242691F34](&unk_2412AE8C4, &type metadata for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F30);
  }
  return result;
}

unint64_t sub_241290688()
{
  unint64_t result;

  result = qword_257105F38;
  if (!qword_257105F38)
  {
    result = MEMORY[0x242691F34](&unk_2412AE8EC, &type metadata for RoutingSessionConfiguration.Context.DeviceTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F38);
  }
  return result;
}

unint64_t sub_2412906C8()
{
  unint64_t result;

  result = qword_257105F40;
  if (!qword_257105F40)
  {
    result = MEMORY[0x242691F34](&unk_2412AE80C, &type metadata for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F40);
  }
  return result;
}

unint64_t sub_241290708()
{
  unint64_t result;

  result = qword_257105F48;
  if (!qword_257105F48)
  {
    result = MEMORY[0x242691F34](&unk_2412AE834, &type metadata for RoutingSessionConfiguration.Context.PlatterTargetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F48);
  }
  return result;
}

unint64_t sub_241290748()
{
  unint64_t result;

  result = qword_257105F50;
  if (!qword_257105F50)
  {
    result = MEMORY[0x242691F34](&unk_2412AE754, &type metadata for RoutingSessionSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F50);
  }
  return result;
}

unint64_t sub_241290788()
{
  unint64_t result;

  result = qword_257105F58;
  if (!qword_257105F58)
  {
    result = MEMORY[0x242691F34](&unk_2412AE77C, &type metadata for RoutingSessionSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F58);
  }
  return result;
}

unint64_t sub_2412907C8()
{
  unint64_t result;

  result = qword_257105F60;
  if (!qword_257105F60)
  {
    result = MEMORY[0x242691F34](&unk_2412AE69C, &type metadata for RoutingDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F60);
  }
  return result;
}

unint64_t sub_241290808()
{
  unint64_t result;

  result = qword_257105F68;
  if (!qword_257105F68)
  {
    result = MEMORY[0x242691F34](&unk_2412AE6C4, &type metadata for RoutingDialog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F68);
  }
  return result;
}

unint64_t sub_241290848()
{
  unint64_t result;

  result = qword_257105F70;
  if (!qword_257105F70)
  {
    result = MEMORY[0x242691F34](&unk_2412AE5E4, &type metadata for RoutingDialog.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F70);
  }
  return result;
}

unint64_t sub_241290888()
{
  unint64_t result;

  result = qword_257105F78;
  if (!qword_257105F78)
  {
    result = MEMORY[0x242691F34](&unk_2412AE60C, &type metadata for RoutingDialog.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F78);
  }
  return result;
}

unint64_t sub_2412908C8()
{
  unint64_t result;

  result = qword_257105F80;
  if (!qword_257105F80)
  {
    result = MEMORY[0x242691F34](&unk_2412AE594, &type metadata for RoutingDialog.Action.DismissCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F80);
  }
  return result;
}

unint64_t sub_241290908()
{
  unint64_t result;

  result = qword_257105F88;
  if (!qword_257105F88)
  {
    result = MEMORY[0x242691F34](&unk_2412AE5BC, &type metadata for RoutingDialog.Action.DismissCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F88);
  }
  return result;
}

unint64_t sub_241290948()
{
  unint64_t result;

  result = qword_257105F90;
  if (!qword_257105F90)
  {
    result = MEMORY[0x242691F34](&unk_2412AE4DC, &type metadata for RoutingDialog.Action.CancelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F90);
  }
  return result;
}

unint64_t sub_241290988()
{
  unint64_t result;

  result = qword_257105F98;
  if (!qword_257105F98)
  {
    result = MEMORY[0x242691F34](&unk_2412AE504, &type metadata for RoutingDialog.Action.CancelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105F98);
  }
  return result;
}

unint64_t sub_2412909C8()
{
  unint64_t result;

  result = qword_257105FA0;
  if (!qword_257105FA0)
  {
    result = MEMORY[0x242691F34](&unk_2412AE424, &type metadata for RoutingDialog.Action.ConfirmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FA0);
  }
  return result;
}

unint64_t sub_241290A08()
{
  unint64_t result;

  result = qword_257105FA8;
  if (!qword_257105FA8)
  {
    result = MEMORY[0x242691F34](&unk_2412AE44C, &type metadata for RoutingDialog.Action.ConfirmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FA8);
  }
  return result;
}

unint64_t sub_241290A48()
{
  unint64_t result;

  result = qword_257105FB0;
  if (!qword_257105FB0)
  {
    result = MEMORY[0x242691F34](&unk_2412AE36C, &type metadata for RoutingDialog.Action.AcknowledgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FB0);
  }
  return result;
}

unint64_t sub_241290A88()
{
  unint64_t result;

  result = qword_257105FB8;
  if (!qword_257105FB8)
  {
    result = MEMORY[0x242691F34](&unk_2412AE394, &type metadata for RoutingDialog.Action.AcknowledgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FB8);
  }
  return result;
}

unint64_t sub_241290AC8()
{
  unint64_t result;

  result = qword_257105FC0;
  if (!qword_257105FC0)
  {
    result = MEMORY[0x242691F34](&unk_2412AE2B4, &type metadata for RoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FC0);
  }
  return result;
}

unint64_t sub_241290B08()
{
  unint64_t result;

  result = qword_257105FC8;
  if (!qword_257105FC8)
  {
    result = MEMORY[0x242691F34](&unk_2412AE2DC, &type metadata for RoutingSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FC8);
  }
  return result;
}

unint64_t sub_241290B48()
{
  unint64_t result;

  result = qword_257105FD0;
  if (!qword_257105FD0)
  {
    result = MEMORY[0x242691F34](&unk_2412AE1FC, &type metadata for RoutingSession.NowPlayingInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FD0);
  }
  return result;
}

unint64_t sub_241290B88()
{
  unint64_t result;

  result = qword_257105FD8;
  if (!qword_257105FD8)
  {
    result = MEMORY[0x242691F34](&unk_2412AE224, &type metadata for RoutingSession.NowPlayingInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FD8);
  }
  return result;
}

unint64_t sub_241290BC8()
{
  unint64_t result;

  result = qword_257105FE0;
  if (!qword_257105FE0)
  {
    result = MEMORY[0x242691F34](&unk_2412AE144, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FE0);
  }
  return result;
}

unint64_t sub_241290C08()
{
  unint64_t result;

  result = qword_257105FE8;
  if (!qword_257105FE8)
  {
    result = MEMORY[0x242691F34](&unk_2412AE16C, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FE8);
  }
  return result;
}

unint64_t sub_241290C48()
{
  unint64_t result;

  result = qword_257105FF0;
  if (!qword_257105FF0)
  {
    result = MEMORY[0x242691F34](&unk_2412AE0F4, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PlayingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FF0);
  }
  return result;
}

unint64_t sub_241290C88()
{
  unint64_t result;

  result = qword_257105FF8;
  if (!qword_257105FF8)
  {
    result = MEMORY[0x242691F34](&unk_2412AE11C, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PlayingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257105FF8);
  }
  return result;
}

unint64_t sub_241290CC8()
{
  unint64_t result;

  result = qword_257106000;
  if (!qword_257106000)
  {
    result = MEMORY[0x242691F34](&unk_2412AE0A4, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106000);
  }
  return result;
}

unint64_t sub_241290D08()
{
  unint64_t result;

  result = qword_257106008;
  if (!qword_257106008)
  {
    result = MEMORY[0x242691F34](&unk_2412AE0CC, &type metadata for RoutingSession.NowPlayingInfo.PlaybackState.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106008);
  }
  return result;
}

unint64_t sub_241290D48()
{
  unint64_t result;

  result = qword_257106010;
  if (!qword_257106010)
  {
    result = MEMORY[0x242691F34](&unk_2412ADFEC, &type metadata for RoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106010);
  }
  return result;
}

unint64_t sub_241290D88()
{
  unint64_t result;

  result = qword_257106018;
  if (!qword_257106018)
  {
    result = MEMORY[0x242691F34](&unk_2412AE014, &type metadata for RoutingItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106018);
  }
  return result;
}

unint64_t sub_241290DC8()
{
  unint64_t result;

  result = qword_257106020;
  if (!qword_257106020)
  {
    result = MEMORY[0x242691F34](&unk_2412ADF34, &type metadata for RoutingItem.SelectionIndicator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106020);
  }
  return result;
}

unint64_t sub_241290E08()
{
  unint64_t result;

  result = qword_257106028;
  if (!qword_257106028)
  {
    result = MEMORY[0x242691F34](&unk_2412ADF5C, &type metadata for RoutingItem.SelectionIndicator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106028);
  }
  return result;
}

unint64_t sub_241290E48()
{
  unint64_t result;

  result = qword_257106030;
  if (!qword_257106030)
  {
    result = MEMORY[0x242691F34](&unk_2412ADEE4, &type metadata for RoutingItem.SelectionIndicator.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106030);
  }
  return result;
}

unint64_t sub_241290E88()
{
  unint64_t result;

  result = qword_257106038;
  if (!qword_257106038)
  {
    result = MEMORY[0x242691F34](&unk_2412ADF0C, &type metadata for RoutingItem.SelectionIndicator.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106038);
  }
  return result;
}

unint64_t sub_241290EC8()
{
  unint64_t result;

  result = qword_257106040;
  if (!qword_257106040)
  {
    result = MEMORY[0x242691F34](&unk_2412ADE94, &type metadata for RoutingItem.SelectionIndicator.SelectableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106040);
  }
  return result;
}

unint64_t sub_241290F08()
{
  unint64_t result;

  result = qword_257106048;
  if (!qword_257106048)
  {
    result = MEMORY[0x242691F34](&unk_2412ADEBC, &type metadata for RoutingItem.SelectionIndicator.SelectableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106048);
  }
  return result;
}

unint64_t sub_241290F48()
{
  unint64_t result;

  result = qword_257106050;
  if (!qword_257106050)
  {
    result = MEMORY[0x242691F34](&unk_2412ADE44, &type metadata for RoutingItem.SelectionIndicator.SelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106050);
  }
  return result;
}

unint64_t sub_241290F88()
{
  unint64_t result;

  result = qword_257106058;
  if (!qword_257106058)
  {
    result = MEMORY[0x242691F34](&unk_2412ADE6C, &type metadata for RoutingItem.SelectionIndicator.SelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106058);
  }
  return result;
}

unint64_t sub_241290FC8()
{
  unint64_t result;

  result = qword_257106060;
  if (!qword_257106060)
  {
    result = MEMORY[0x242691F34](&unk_2412ADDF4, &type metadata for RoutingItem.SelectionIndicator.PullableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106060);
  }
  return result;
}

unint64_t sub_241291008()
{
  unint64_t result;

  result = qword_257106068;
  if (!qword_257106068)
  {
    result = MEMORY[0x242691F34](&unk_2412ADE1C, &type metadata for RoutingItem.SelectionIndicator.PullableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106068);
  }
  return result;
}

unint64_t sub_241291044()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257106080;
  if (!qword_257106080)
  {
    sub_241262124(255, &qword_257106078, MEMORY[0x24BEE0D00], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x242691F34](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_257106080);
  }
  return result;
}

unint64_t sub_24129109C()
{
  unint64_t result;

  result = qword_257106090;
  if (!qword_257106090)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_257106090);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return sub_2412A8CFC();
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return sub_2412A8C3C();
}

void OUTLINED_FUNCTION_11_4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_241274E98(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_16_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void *OUTLINED_FUNCTION_17_4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return sub_2412A8D74();
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return sub_2412A8C78();
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  sub_24125E37C(v1, v0, v5);
  sub_24125E37C(v3, v2, v4);
  sub_24125F7F4(v3, v2, v4);
  return sub_24125F7F4(v1, v0, v5);
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_26_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_28_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_29_3(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_24125E37C(v1, v0, 2u);
  sub_24125E37C(v3, v2, 2u);
  sub_24125F7F4(v3, v2, 2u);
  return v1;
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_24125E37C(v1, v0, 0);
  sub_24125E37C(v3, v2, 0);
  sub_24125F7F4(v3, v2, 0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_24125E37C(v1, v0, 1u);
  sub_24125E37C(v3, v2, 1u);
  sub_24125F7F4(v3, v2, 1u);
  return v1;
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_39_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  return sub_2412A8C00();
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_24125F7F4(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return sub_2412A88B8();
}

void OUTLINED_FUNCTION_46_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_47_1()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_54_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_241260CC8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  return sub_2412A8B7C();
}

void *OUTLINED_FUNCTION_62_2(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x119uLL);
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return sub_2412A8BC4();
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_75_1()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_83_1()
{
  return sub_2412A8BC4();
}

void OUTLINED_FUNCTION_85_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - a1;
}

void OUTLINED_FUNCTION_86_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - a1;
}

void OUTLINED_FUNCTION_87_1(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_241262124(0, a2, a3, a4);
}

void OUTLINED_FUNCTION_88_1(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  uint64_t v0;
  uint64_t v1;

  sub_24125F7F4(v1, v0, 3u);
  return sub_24125F7F4(0, 0, 3u);
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return sub_2412A8DA4();
}

uint64_t OUTLINED_FUNCTION_93_1@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

void OUTLINED_FUNCTION_94_1()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[1];
  *(_QWORD *)(v1 - 120) = *v0;
  *(_QWORD *)(v1 - 112) = v2;
}

uint64_t OUTLINED_FUNCTION_95_1()
{
  return sub_2412A8AF8();
}

void OUTLINED_FUNCTION_96_0()
{
  sub_2412741B0();
}

unint64_t OUTLINED_FUNCTION_97_1@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v1;

  return a1 | ((unint64_t)v1 << 32);
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_101(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_102()
{
  return sub_2412A8CB4();
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_106_0()
{
  return sub_2412A8D74();
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0(*(_QWORD *)(v0 + 96));
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  return sub_2412A8ABC();
}

uint64_t OUTLINED_FUNCTION_111_0()
{
  return sub_2412A8D74();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0(*(_QWORD *)(v0 + 88));
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_114_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_117_0()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_24125E37C(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return sub_2412A8C48();
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  return sub_2412A8C6C();
}

uint64_t OUTLINED_FUNCTION_122_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_24128503C(&a9, (uint64_t)&STACK[0x240], (uint64_t)&STACK[0x250]);
}

uint64_t OUTLINED_FUNCTION_123_0()
{
  return sub_2412A8DB0();
}

uint64_t OUTLINED_FUNCTION_124_0()
{
  return sub_2412A8D68();
}

uint64_t OUTLINED_FUNCTION_128()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_130()
{
  return sub_2412A8D74();
}

uint64_t OUTLINED_FUNCTION_132()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_133()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_134()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_135()
{
  return swift_unknownObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_136(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_137()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_138(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_139(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *OUTLINED_FUNCTION_140@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_141(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_142()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 136) + 8))(v0, *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_145()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_146()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_147()
{
  return sub_2412A8D68();
}

uint64_t OUTLINED_FUNCTION_149()
{
  return sub_2412A8DA4();
}

uint64_t OUTLINED_FUNCTION_150()
{
  return sub_2412A8B94();
}

uint64_t OUTLINED_FUNCTION_151()
{
  return sub_2412A8BC4();
}

uint64_t OUTLINED_FUNCTION_152(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_24128BEDC((uint64_t)va, v1);
}

void OUTLINED_FUNCTION_153(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - a1;
}

void OUTLINED_FUNCTION_154(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - a1;
}

void OUTLINED_FUNCTION_155(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - a1;
}

void OUTLINED_FUNCTION_156(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_157(uint64_t a1)
{
  return sub_24128BEDC(a1, (uint64_t)&STACK[0x5A0]);
}

void OUTLINED_FUNCTION_158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_241274E98(0, a2, a3, a4, v4);
}

void OUTLINED_FUNCTION_159(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_241274E98(0, a2, a3, a4, v4);
}

void OUTLINED_FUNCTION_160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_241274E98(0, a2, a3, v5, a5);
}

uint64_t OUTLINED_FUNCTION_161()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_162()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_163(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  return sub_24128BF38((uint64_t)&STACK[0x900], a2);
}

unint64_t OUTLINED_FUNCTION_164()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_24128C600();
}

uint64_t OUTLINED_FUNCTION_165()
{
  return sub_2412A8C78();
}

uint64_t OUTLINED_FUNCTION_167()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  return sub_24128BEDC(a1, (uint64_t)&a45);
}

uint64_t OUTLINED_FUNCTION_169(uint64_t a1)
{
  return sub_24128BFC4(a1);
}

uint64_t OUTLINED_FUNCTION_172()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0(v0);
}

uint64_t OUTLINED_FUNCTION_173()
{
  return sub_2412A88DC();
}

uint64_t OUTLINED_FUNCTION_174()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_176()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_178()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_182()
{
  uint64_t v0;

  return sub_24128B350(v0 + 688);
}

uint64_t OUTLINED_FUNCTION_185()
{
  return sub_2412A8DB0();
}

uint64_t OUTLINED_FUNCTION_186()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_187()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_188@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

unint64_t OUTLINED_FUNCTION_193()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_24128C768();
}

unint64_t OUTLINED_FUNCTION_194()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_24128B5F8();
}

unint64_t OUTLINED_FUNCTION_195()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_24127F254();
}

unint64_t OUTLINED_FUNCTION_196()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_24128BCFC();
}

unint64_t OUTLINED_FUNCTION_197()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_24128C6B4();
}

uint64_t OUTLINED_FUNCTION_198()
{
  return swift_unknownObjectRelease();
}

unint64_t OUTLINED_FUNCTION_199()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_24127F1DC();
}

unint64_t OUTLINED_FUNCTION_200()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_24128BC84();
}

unint64_t OUTLINED_FUNCTION_201()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_24128C63C();
}

unint64_t OUTLINED_FUNCTION_203()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_24128BCC0();
}

unint64_t OUTLINED_FUNCTION_204()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_24127F218();
}

unint64_t OUTLINED_FUNCTION_205()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_24128C678();
}

uint64_t OUTLINED_FUNCTION_206()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_207@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t static ExecutionPriority.current.getter@<X0>(_DWORD *a1@<X8>)
{
  int v2;
  uint64_t result;

  v2 = MSVGetCurrentThreadPriority();
  result = qos_class_self();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t ExecutionPriority.qos.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t ExecutionPriority.priority.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t ExecutionPriority.priority.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ExecutionPriority.priority.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_241291A5C()
{
  uint64_t v0;
  int v1;

  v1 = *(_DWORD *)(v0 + 4);
  switch(v1)
  {
    case 0:
      return 0x7974696C6974752ELL;
    case 9:
      return 0x6F72676B6361622ELL;
    case 21:
      return 0x746C75616665642ELL;
    case 33:
      return 0xD000000000000010;
    case 25:
      return 0x696E49726573752ELL;
  }
  sub_2412A8CE4();
  sub_2412A88DC();
  OUTLINED_FUNCTION_85();
  sub_2412A88DC();
  return 0x28736F712ELL;
}

uint64_t ExecutionPriority.description.getter()
{
  sub_2412A8CE4();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_85();
  sub_2412A88DC();
  sub_241291A5C();
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_85();
  sub_2412A88DC();
  return 60;
}

uint64_t ExecutionPriority.hash(into:)()
{
  sub_2412A8D80();
  return sub_2412A8D80();
}

BOOL static ExecutionPriority.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_241291C6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x797469726F697270 && a2 == 0xE800000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x534F51776172 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_241291D50(char a1)
{
  if ((a1 & 1) != 0)
    return 0x534F51776172;
  else
    return 0x797469726F697270;
}

uint64_t sub_241291D84()
{
  return sub_24126CAB0();
}

uint64_t sub_241291D8C()
{
  char *v0;

  return sub_241291D50(*v0);
}

uint64_t sub_241291D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241291C6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241291DB8()
{
  sub_241291F18();
  return sub_2412A8DBC();
}

uint64_t sub_241291DE0()
{
  sub_241291F18();
  return sub_2412A8DC8();
}

void ExecutionPriority.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  sub_24129212C(0, &qword_2571060A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE3520]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v9 - v7;
  v10 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241291F18();
  sub_2412A8DB0();
  v12 = 0;
  sub_2412A8CC0();
  if (!v2)
  {
    v11 = 1;
    sub_2412A8CCC();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_241291F18()
{
  unint64_t result;

  result = qword_2571060A8;
  if (!qword_2571060A8)
  {
    result = MEMORY[0x242691F34](&unk_2412AF8A8, &type metadata for ExecutionPriority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571060A8);
  }
  return result;
}

uint64_t ExecutionPriority.hashValue.getter()
{
  sub_2412A8D5C();
  sub_2412A8D80();
  sub_2412A8D80();
  return sub_2412A8D98();
}

void ExecutionPriority.init(from:)(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  int v7;

  sub_24129212C(0, &qword_2571060B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEE33E0]);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241291F18();
  sub_2412A8DA4();
  if (!v2)
  {
    v6 = sub_2412A8C0C();
    v7 = sub_2412A8C18();
    OUTLINED_FUNCTION_1_5();
    *a2 = v6;
    a2[1] = v7;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_2412920D8()
{
  sub_2412A8D5C();
  sub_2412A8D80();
  sub_2412A8D80();
  return sub_2412A8D98();
}

void sub_24129212C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_241291F18();
    v7 = a3(a1, &type metadata for ExecutionPriority.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_24129218C()
{
  unint64_t result;

  result = qword_2571060B8;
  if (!qword_2571060B8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for ExecutionPriority, &type metadata for ExecutionPriority);
    atomic_store(result, (unint64_t *)&qword_2571060B8);
  }
  return result;
}

void sub_2412921C8(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  ExecutionPriority.init(from:)(a1, a2);
}

void sub_2412921DC(_QWORD *a1)
{
  ExecutionPriority.encode(to:)(a1);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ExecutionPriority(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ExecutionPriority(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ExecutionPriority()
{
  return &type metadata for ExecutionPriority;
}

uint64_t storeEnumTagSinglePayload for ExecutionPriority.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2412922A8 + 4 * byte_2412AF6D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2412922DC + 4 * byte_2412AF6D0[v4]))();
}

uint64_t sub_2412922DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412922E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412922ECLL);
  return result;
}

uint64_t sub_2412922F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x241292300);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_241292304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129230C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExecutionPriority.CodingKeys()
{
  return &type metadata for ExecutionPriority.CodingKeys;
}

unint64_t sub_24129232C()
{
  unint64_t result;

  result = qword_2571060C0;
  if (!qword_2571060C0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF880, &type metadata for ExecutionPriority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571060C0);
  }
  return result;
}

unint64_t sub_24129236C()
{
  unint64_t result;

  result = qword_2571060C8;
  if (!qword_2571060C8)
  {
    result = MEMORY[0x242691F34](&unk_2412AF7F0, &type metadata for ExecutionPriority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571060C8);
  }
  return result;
}

unint64_t sub_2412923AC()
{
  unint64_t result;

  result = qword_2571060D0;
  if (!qword_2571060D0)
  {
    result = MEMORY[0x242691F34](&unk_2412AF818, &type metadata for ExecutionPriority.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571060D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  return sub_2412A88DC();
}

uint64_t RoutingMode.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D7261776572702ELL;
  if (*v0 != 1)
    v1 = 0x656C69617465642ELL;
  if (*v0)
    return v1;
  else
    return 0x656C62617369642ELL;
}

BOOL static RoutingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RoutingMode.hash(into:)()
{
  return sub_2412A8D68();
}

uint64_t sub_24129249C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D726177657270 && a2 == 0xE700000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x64656C6961746564 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2412A8CFC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2412925E8(char a1)
{
  if (!a1)
    return 0x64656C6261736964;
  if (a1 == 1)
    return 0x6D726177657270;
  return 0x64656C6961746564;
}

uint64_t sub_241292640()
{
  char *v0;

  return sub_2412925E8(*v0);
}

uint64_t sub_241292648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24129249C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24129266C()
{
  sub_241292A90();
  return sub_2412A8DBC();
}

uint64_t sub_241292694()
{
  sub_241292A90();
  return sub_2412A8DC8();
}

uint64_t sub_2412926BC()
{
  sub_2412929DC();
  return sub_2412A8DBC();
}

uint64_t sub_2412926E4()
{
  sub_2412929DC();
  return sub_2412A8DC8();
}

uint64_t sub_24129270C()
{
  sub_241292A54();
  return sub_2412A8DBC();
}

uint64_t sub_241292734()
{
  sub_241292A54();
  return sub_2412A8DC8();
}

uint64_t sub_24129275C()
{
  sub_241292A18();
  return sub_2412A8DBC();
}

uint64_t sub_241292784()
{
  sub_241292A18();
  return sub_2412A8DC8();
}

void RoutingMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_4_1((uint64_t)a1, &qword_2571060D8, (uint64_t (*)(void))sub_2412929DC, (uint64_t)&type metadata for RoutingMode.DetailedCodingKeys);
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_2();
  v30 = v6;
  OUTLINED_FUNCTION_4_1(v7, &qword_2571060E8, (uint64_t (*)(void))sub_241292A18, (uint64_t)&type metadata for RoutingMode.PrewarmCodingKeys);
  v28 = *(_QWORD *)(v8 - 8);
  v29 = v8;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_2();
  v27 = v10;
  OUTLINED_FUNCTION_4_1(v11, &qword_2571060F8, (uint64_t (*)(void))sub_241292A54, (uint64_t)&type metadata for RoutingMode.DisabledCodingKeys);
  v25 = *(_QWORD *)(v12 - 8);
  v26 = v12;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - v14;
  sub_24127C278(0, &qword_257106108, (uint64_t (*)(void))sub_241292A90, (uint64_t)&type metadata for RoutingMode.CodingKeys, v3);
  v17 = v16;
  v33 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v25 - v19;
  v21 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_241292A90();
  sub_2412A8DB0();
  if (v21)
  {
    if (v21 == 1)
    {
      OUTLINED_FUNCTION_7_5();
      v22 = v27;
      OUTLINED_FUNCTION_2_3();
      v24 = v28;
      v23 = v29;
    }
    else
    {
      OUTLINED_FUNCTION_11_5();
      v22 = v30;
      OUTLINED_FUNCTION_2_3();
      v24 = v31;
      v23 = v32;
    }
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  else
  {
    v34 = 0;
    sub_241292A54();
    OUTLINED_FUNCTION_2_3();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v26);
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v17);
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_2412929DC()
{
  unint64_t result;

  result = qword_2571060E0;
  if (!qword_2571060E0)
  {
    result = MEMORY[0x242691F34](&unk_2412AFDCC, &type metadata for RoutingMode.DetailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571060E0);
  }
  return result;
}

unint64_t sub_241292A18()
{
  unint64_t result;

  result = qword_2571060F0;
  if (!qword_2571060F0)
  {
    result = MEMORY[0x242691F34](&unk_2412AFD7C, &type metadata for RoutingMode.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571060F0);
  }
  return result;
}

unint64_t sub_241292A54()
{
  unint64_t result;

  result = qword_257106100;
  if (!qword_257106100)
  {
    result = MEMORY[0x242691F34](&unk_2412AFD2C, &type metadata for RoutingMode.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106100);
  }
  return result;
}

unint64_t sub_241292A90()
{
  unint64_t result;

  result = qword_257106110;
  if (!qword_257106110)
  {
    result = MEMORY[0x242691F34](&unk_2412AFCDC, &type metadata for RoutingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106110);
  }
  return result;
}

void RoutingMode.hashValue.getter()
{
  sub_2412A8D5C();
  OUTLINED_FUNCTION_89();
  sub_2412A8D98();
  OUTLINED_FUNCTION_83();
}

void RoutingMode.init(from:)(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;

  v2 = (_QWORD *)a1;
  v48 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0];
  OUTLINED_FUNCTION_5_5(a1, &qword_257106118, (uint64_t (*)(void))sub_2412929DC, (uint64_t)&type metadata for RoutingMode.DetailedCodingKeys);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_2();
  v47 = v6;
  OUTLINED_FUNCTION_5_5(v7, &qword_257106120, (uint64_t (*)(void))sub_241292A18, (uint64_t)&type metadata for RoutingMode.PrewarmCodingKeys);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_2();
  v49 = v10;
  OUTLINED_FUNCTION_5_5(v11, &qword_257106128, (uint64_t (*)(void))sub_241292A54, (uint64_t)&type metadata for RoutingMode.DisabledCodingKeys);
  v41 = *(_QWORD *)(v12 - 8);
  v42 = v12;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v39 - v14;
  sub_24127C278(0, &qword_257106130, (uint64_t (*)(void))sub_241292A90, (uint64_t)&type metadata for RoutingMode.CodingKeys, v3);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v39 - v19;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_241292A90();
  v21 = v50;
  sub_2412A8DA4();
  if (v21)
    goto LABEL_10;
  v40 = v15;
  v22 = v49;
  v50 = v2;
  v23 = sub_2412A8C24();
  v24 = v17;
  if (!*(_QWORD *)(v23 + 16)
    || (v25 = *(unsigned __int8 *)(v23 + 32),
        v26 = sub_24127AA78(1),
        v28 = v27,
        v30 = v29,
        swift_bridgeObjectRelease(),
        v28 != v30 >> 1))
  {
    v32 = v24;
    v33 = sub_2412A8AF8();
    swift_allocError();
    v35 = v34;
    sub_2412741B0();
    *v35 = &type metadata for RoutingMode;
    sub_2412A8B88();
    sub_2412A8AE0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x24BEE26D0], v33);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v32);
    v2 = v50;
LABEL_10:
    v38 = (uint64_t)v2;
    goto LABEL_11;
  }
  if (v25)
  {
    v42 = v26;
    if (v25 == 1)
    {
      OUTLINED_FUNCTION_7_5();
      OUTLINED_FUNCTION_1_6();
      v31 = v48;
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v22, v44);
    }
    else
    {
      OUTLINED_FUNCTION_11_5();
      v37 = v47;
      OUTLINED_FUNCTION_1_6();
      v31 = v48;
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v37, v46);
    }
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6_5();
  }
  else
  {
    v51 = 0;
    sub_241292A54();
    v36 = v40;
    OUTLINED_FUNCTION_1_6();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v42);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_6_5();
    v31 = v48;
  }
  *v31 = v25;
  v38 = (uint64_t)v50;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0(v38);
  OUTLINED_FUNCTION_0_1();
}

void sub_241292EE0(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  RoutingMode.init(from:)(a1, a2);
}

void sub_241292EF4(_QWORD *a1)
{
  RoutingMode.encode(to:)(a1);
}

uint64_t ContinuousInteraction.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_241292F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_24125CFB8(v3);
}

_QWORD *sub_241292F4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;

  v2[2] = sub_24127B274(15);
  v2[3] = v5;
  v2[4] = a1;
  v2[5] = a2;
  sub_24125CFB8(0);
  return v2;
}

_QWORD *ContinuousInteraction.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  void (*v2)(uint64_t);
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v3 = v0 + 4;
  v2 = (void (*)(uint64_t))v0[4];
  if (v2)
  {
    v4 = qword_257104598;
    swift_retain();
    if (v4 != -1)
      swift_once();
    v5 = sub_2412A875C();
    __swift_project_value_buffer(v5, (uint64_t)qword_257106DD0);
    swift_retain_n();
    v6 = sub_2412A8750();
    v7 = sub_2412A89CC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      *(_DWORD *)v8 = 136315394;
      v9 = sub_2412A8DD4();
      sub_24125FA14(v9, v10, &v16);
      sub_2412A8A44();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      v12 = v1[2];
      v11 = v1[3];
      swift_bridgeObjectRetain();
      sub_24125FA14(v12, v11, &v16);
      sub_2412A8A44();
      OUTLINED_FUNCTION_3_0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24125A000, v6, v7, "[%s]<%s> Dealloc with finalizer still set.", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_3_0();
    v13 = v1[4];
    *v3 = 0;
    v3[1] = 0;
    v14 = sub_24125CFB8(v13);
    v2(v14);
    sub_24125CFB8((uint64_t)v2);
  }
  swift_bridgeObjectRelease();
  sub_24125CFB8(v1[4]);
  return v1;
}

uint64_t ContinuousInteraction.__deallocating_deinit()
{
  ContinuousInteraction.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_2412931E0()
{
  unint64_t result;

  result = qword_257106138;
  if (!qword_257106138)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingMode, &type metadata for RoutingMode);
    atomic_store(result, (unint64_t *)&qword_257106138);
  }
  return result;
}

ValueMetadata *type metadata accessor for RoutingMode()
{
  return &type metadata for RoutingMode;
}

uint64_t type metadata accessor for ContinuousInteraction()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContinuousInteraction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.snapshot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.listener.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.routingMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.routingMode.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.routingMode.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.isPresentingUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.isPresentingUI.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.isPresentingUI.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.expandedSessionIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.expandedSessionIdentifiers.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.expandedSessionIdentifiers.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.interactWithSession(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.interactWithItem(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.interact(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.beginInteraction(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of RoutingSessionsDataSource.end(continuousInteraction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of RoutingSessionsDataSourceListener.dataSource(_:didUpdateSnapshot:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of RoutingSessionsDataSourceListener.dataSource(_:willTransitionFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of RoutingSessionsDataSourceDelegate.dataSource(_:completedInteractionWithItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of RoutingSessionsDataSourceDelegate.dataSource(_:failedInteractionWithItem:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of RoutingSessionsDataSourceDelegate.dataSource(_:requestsToPresent:userActionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t _s12MediaControl11RoutingModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_241293358 + 4 * byte_2412AF905[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24129338C + 4 * byte_2412AF900[v4]))();
}

uint64_t sub_24129338C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_241293394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24129339CLL);
  return result;
}

uint64_t sub_2412933A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412933B0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2412933B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412933BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingMode.CodingKeys()
{
  return &type metadata for RoutingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingMode.DisabledCodingKeys()
{
  return &type metadata for RoutingMode.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingMode.PrewarmCodingKeys()
{
  return &type metadata for RoutingMode.PrewarmCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingMode.DetailedCodingKeys()
{
  return &type metadata for RoutingMode.DetailedCodingKeys;
}

unint64_t sub_24129340C()
{
  unint64_t result;

  result = qword_257106200;
  if (!qword_257106200)
  {
    result = MEMORY[0x242691F34](&unk_2412AFCB4, &type metadata for RoutingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106200);
  }
  return result;
}

unint64_t sub_24129344C()
{
  unint64_t result;

  result = qword_257106208;
  if (!qword_257106208)
  {
    result = MEMORY[0x242691F34](&unk_2412AFC24, &type metadata for RoutingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106208);
  }
  return result;
}

unint64_t sub_24129348C()
{
  unint64_t result;

  result = qword_257106210;
  if (!qword_257106210)
  {
    result = MEMORY[0x242691F34](&unk_2412AFC4C, &type metadata for RoutingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106210);
  }
  return result;
}

unint64_t sub_2412934CC()
{
  unint64_t result;

  result = qword_257106218;
  if (!qword_257106218)
  {
    result = MEMORY[0x242691F34](&unk_2412AFBD4, &type metadata for RoutingMode.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106218);
  }
  return result;
}

unint64_t sub_24129350C()
{
  unint64_t result;

  result = qword_257106220;
  if (!qword_257106220)
  {
    result = MEMORY[0x242691F34](&unk_2412AFBFC, &type metadata for RoutingMode.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106220);
  }
  return result;
}

unint64_t sub_24129354C()
{
  unint64_t result;

  result = qword_257106228;
  if (!qword_257106228)
  {
    result = MEMORY[0x242691F34](&unk_2412AFB84, &type metadata for RoutingMode.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106228);
  }
  return result;
}

unint64_t sub_24129358C()
{
  unint64_t result;

  result = qword_257106230;
  if (!qword_257106230)
  {
    result = MEMORY[0x242691F34](&unk_2412AFBAC, &type metadata for RoutingMode.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106230);
  }
  return result;
}

unint64_t sub_2412935CC()
{
  unint64_t result;

  result = qword_257106238;
  if (!qword_257106238)
  {
    result = MEMORY[0x242691F34](&unk_2412AFB34, &type metadata for RoutingMode.DetailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106238);
  }
  return result;
}

unint64_t sub_24129360C()
{
  unint64_t result;

  result = qword_257106240;
  if (!qword_257106240)
  {
    result = MEMORY[0x242691F34](&unk_2412AFB5C, &type metadata for RoutingMode.DetailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106240);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return sub_2412A8C3C();
}

void OUTLINED_FUNCTION_4_1(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_24127C278(0, a2, a3, a4, v4);
}

void OUTLINED_FUNCTION_5_5(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_24127C278(0, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

unint64_t OUTLINED_FUNCTION_7_5()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_241292A18();
}

unint64_t OUTLINED_FUNCTION_11_5()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_2412929DC();
}

void static RoutingControls.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  int v84;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  int v131;
  uint64_t v132;
  int v133;
  int v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  double v164;
  double v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  double v169;
  uint64_t v170;
  double v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v177 = *(_QWORD *)(a1 + 16);
  v178 = *(_QWORD *)(a1 + 32);
  v170 = *(_QWORD *)(a1 + 48);
  v171 = *(double *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 64);
  v173 = *(_QWORD *)(a1 + 56);
  v165 = *(double *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 136);
  v12 = *(unsigned __int8 *)(a1 + 144);
  v14 = *(_QWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a1 + 160);
  v15 = *(unsigned __int8 *)(a1 + 168);
  v16 = *(_QWORD *)(a1 + 184);
  v158 = *(_QWORD *)(a1 + 176);
  v17 = *(_QWORD *)(a2 + 8);
  v174 = *(_QWORD *)(a2 + 16);
  v18 = *(_QWORD *)(a2 + 24);
  v172 = *(_QWORD *)(a2 + 32);
  v167 = *(_QWORD *)(a2 + 48);
  v168 = *(_QWORD *)(a2 + 56);
  v169 = *(double *)(a2 + 40);
  v166 = *(_QWORD *)(a2 + 64);
  v162 = *(_QWORD *)(a2 + 80);
  v163 = *(_QWORD *)(a2 + 88);
  v164 = *(double *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 112);
  v160 = *(_QWORD *)(a2 + 96);
  v161 = *(_QWORD *)(a2 + 104);
  v20 = *(_QWORD *)(a2 + 120);
  v21 = *(_QWORD *)(a2 + 128);
  v22 = *(_QWORD *)(a2 + 136);
  LODWORD(v23) = *(unsigned __int8 *)(a2 + 144);
  v24 = *(_QWORD *)(a2 + 152);
  v159 = *(_QWORD *)(a2 + 160);
  v25 = *(unsigned __int8 *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 184);
  v157 = *(_QWORD *)(a2 + 176);
  if (!v2)
  {
    v156 = *(_QWORD *)(a1 + 80);
    if (v17)
      goto LABEL_31;
    goto LABEL_10;
  }
  if (!v17)
    goto LABEL_30;
  v156 = *(_QWORD *)(a1 + 80);
  v27 = *(_QWORD *)a1 == *(_QWORD *)a2 && v2 == v17;
  if (v27)
    goto LABEL_10;
  v136 = *(_QWORD *)(a1 + 88);
  v121 = *(_QWORD *)(a2 + 136);
  v125 = *(_QWORD *)(a1 + 160);
  v104 = *(_QWORD *)(a2 + 152);
  v107 = *(_QWORD *)(a1 + 104);
  v116 = *(_QWORD *)(a2 + 128);
  v110 = *(_QWORD *)(a2 + 112);
  v114 = *(_QWORD *)(a1 + 152);
  v28 = *(_QWORD *)(a1 + 184);
  v150 = *(_QWORD *)(a1 + 136);
  v139 = *(unsigned __int8 *)(a2 + 168);
  v144 = *(unsigned __int8 *)(a1 + 144);
  v29 = *(_QWORD *)(a2 + 184);
  v130 = *(unsigned __int8 *)(a2 + 144);
  v30 = *(unsigned __int8 *)(a1 + 168);
  v31 = *(_QWORD *)(a1 + 120);
  v32 = *(_QWORD *)(a1 + 112);
  v33 = *(_QWORD *)(a1 + 64);
  v34 = *(_QWORD *)(a2 + 120);
  v35 = sub_2412A8CFC();
  v7 = v107;
  v19 = v110;
  v20 = v34;
  v5 = v136;
  v4 = v33;
  v8 = v32;
  v9 = v31;
  v15 = v30;
  LODWORD(v23) = v130;
  v26 = v29;
  v25 = v139;
  v12 = v144;
  v11 = v150;
  v16 = v28;
  v14 = v114;
  v21 = v116;
  v22 = v121;
  v24 = v104;
  v13 = v125;
  if ((v35 & 1) != 0)
  {
LABEL_10:
    if (v3)
    {
      if (!v18)
        goto LABEL_30;
      if (v177 != v174 || v3 != v18)
      {
        v137 = v5;
        v140 = v25;
        v145 = v12;
        v122 = v22;
        v126 = v13;
        v115 = v14;
        v117 = v21;
        v37 = v16;
        v131 = v23;
        v118 = v10;
        v151 = v11;
        v38 = v26;
        v39 = v15;
        v23 = v24;
        v40 = v9;
        v41 = v8;
        v42 = v4;
        v43 = v7;
        v44 = v20;
        v45 = v19;
        LOBYTE(v177) = v6;
        v46 = sub_2412A8CFC();
        v19 = v45;
        v20 = v44;
        v7 = v43;
        v5 = v137;
        v4 = v42;
        v8 = v41;
        v9 = v40;
        v24 = v23;
        v15 = v39;
        v26 = v38;
        v11 = v151;
        v10 = v118;
        v22 = v122;
        LODWORD(v23) = v131;
        v16 = v37;
        v14 = v115;
        v21 = v117;
        v13 = v126;
        v25 = v140;
        v12 = v145;
        if ((v46 & 1) == 0)
          return;
      }
    }
    else if (v18)
    {
      goto LABEL_31;
    }
    if (v178)
    {
      v47 = v172;
      if (v172)
      {
        LOBYTE(v177) = v6;
        v108 = v7;
        v111 = v19;
        v119 = v20;
        v123 = v8;
        v132 = v4;
        v138 = v5;
        v127 = v9;
        v105 = v24;
        v146 = v12;
        v152 = v11;
        v175 = v15;
        v141 = v25;
        v48 = v26;
        v49 = v16;
        v50 = v13;
        if (sub_2412941F0(v178, v172) && v171 == v169)
        {
          v51 = v170 == v167 && v173 == v168;
          if (v51 || (OUTLINED_FUNCTION_21_0() & 1) != 0)
          {
            sub_241297188(v178);
            OUTLINED_FUNCTION_36_0();
            OUTLINED_FUNCTION_134();
            v13 = v50;
            v16 = v49;
            v26 = v48;
            v25 = v141;
            v12 = v146;
            v15 = v175;
            v11 = v152;
            v24 = v105;
            v7 = v108;
            v8 = v123;
            v9 = v127;
            v4 = v132;
            v5 = v138;
            v20 = v119;
            v19 = v111;
LABEL_34:
            v52 = v5;
            if (v4)
            {
              v53 = v166;
              if (v166)
              {
                LOBYTE(v177) = v6;
                v109 = v7;
                v112 = v19;
                v120 = v20;
                v124 = v8;
                v128 = v9;
                v147 = v12;
                v133 = v23;
                v153 = v11;
                v176 = v15;
                v142 = v25;
                v54 = v26;
                v55 = v24;
                v23 = v16;
                v56 = v13;
                v57 = v4;
                if (!sub_2412941F0(v4, v166)
                  || v165 != v164
                  || (v156 == v162 ? (v58 = v52 == v163) : (v58 = 0), !v58 && (OUTLINED_FUNCTION_21_0() & 1) == 0))
                {
                  sub_241297188(v57);
                  swift_bridgeObjectRelease();
                  goto LABEL_31;
                }
                sub_241297188(v57);
                OUTLINED_FUNCTION_134();
                OUTLINED_FUNCTION_36_0();
                v13 = v56;
                v16 = v23;
                v24 = v55;
                v26 = v54;
                v25 = v142;
                v12 = v147;
                v15 = v176;
                v11 = v153;
                LODWORD(v23) = v133;
                v8 = v124;
                v9 = v128;
                v7 = v109;
                v19 = v112;
                v20 = v120;
                goto LABEL_49;
              }
              v61 = v4;
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_121_1();
            }
            else
            {
              v61 = 0;
              v53 = v166;
              if (!v166)
              {
LABEL_49:
                if (v7)
                {
                  if (!v161)
                    goto LABEL_30;
                  if (v6 != v160 || v7 != v161)
                  {
                    v154 = v11;
                    v129 = v13;
                    v143 = v25;
                    v148 = v12;
                    v106 = v24;
                    v134 = v23;
                    v23 = v16;
                    v63 = v26;
                    v64 = v15;
                    v65 = v9;
                    v66 = v8;
                    v67 = v20;
                    v113 = v19;
                    v68 = sub_2412A8CFC();
                    v19 = v113;
                    v20 = v67;
                    v8 = v66;
                    v9 = v65;
                    v15 = v64;
                    v26 = v63;
                    v16 = v23;
                    LODWORD(v23) = v134;
                    v24 = v106;
                    v25 = v143;
                    v12 = v148;
                    v13 = v129;
                    v11 = v154;
                    if ((v68 & 1) == 0)
                      return;
                  }
                }
                else if (v161)
                {
                  goto LABEL_31;
                }
                if (!v9)
                {
                  if (v20)
                    goto LABEL_31;
LABEL_75:
                  if (v12 == 255)
                  {
                    if ((_DWORD)v23 == 255)
                      goto LABEL_100;
                  }
                  else
                  {
                    if ((_DWORD)v23 != 255)
                    {
                      if ((v12 & 1) != 0)
                      {
                        if ((v23 & 1) == 0)
                        {
                          OUTLINED_FUNCTION_81_1();
                          OUTLINED_FUNCTION_161_0();
LABEL_124:
                          sub_24125F80C();
                          return;
                        }
                        OUTLINED_FUNCTION_85_2();
                        if (!v27 || v82 != v22)
                        {
                          v86 = OUTLINED_FUNCTION_82_2();
                          OUTLINED_FUNCTION_76_1(v86);
                          OUTLINED_FUNCTION_161_0();
LABEL_96:
                          sub_24125F80C();
                          OUTLINED_FUNCTION_113_1();
                          if ((v177 & 1) == 0)
                            return;
                          goto LABEL_100;
                        }
                      }
                      else
                      {
                        if ((v23 & 1) != 0)
                        {
                          OUTLINED_FUNCTION_81_1();
                          OUTLINED_FUNCTION_157_0();
                          goto LABEL_124;
                        }
                        OUTLINED_FUNCTION_85_2();
                        if (!v27 || v82 != v22)
                        {
                          v84 = OUTLINED_FUNCTION_82_2();
                          OUTLINED_FUNCTION_76_1(v84);
                          OUTLINED_FUNCTION_157_0();
                          goto LABEL_96;
                        }
                      }
                      v87 = v82;
                      sub_2412612D4(v10, v82, v12);
                      sub_2412612D4(v10, v87, v23);
                      OUTLINED_FUNCTION_164_0();
                      OUTLINED_FUNCTION_164_0();
                      OUTLINED_FUNCTION_113_1();
LABEL_100:
                      if (v15 == 255)
                      {
                        if (v25 == 255)
                          goto LABEL_126;
                      }
                      else
                      {
                        if (v25 != 255)
                        {
                          if ((v15 & 1) != 0)
                          {
                            if ((v25 & 1) == 0)
                            {
                              v88 = v24;
                              sub_2412612D4(v14, v13, v15);
                              sub_2412612D4(v88, v159, v25);
                              OUTLINED_FUNCTION_161_0();
                              goto LABEL_124;
                            }
                            v95 = v25;
                            v96 = v26;
                            v98 = v14;
                            v97 = v16;
                            if (v98 != v24 || v13 != v159)
                            {
                              OUTLINED_FUNCTION_50_2();
                              OUTLINED_FUNCTION_73_0();
                              OUTLINED_FUNCTION_161_0();
LABEL_121:
                              sub_24125F80C();
                              v16 = v97;
                              v26 = v96;
                              if ((v25 & 1) == 0)
                                return;
                              goto LABEL_126;
                            }
                          }
                          else
                          {
                            v94 = v14;
                            v95 = v25;
                            if ((v25 & 1) != 0)
                            {
                              v101 = v24;
                              sub_2412612D4(v94, v13, v15);
                              sub_2412612D4(v101, v159, v25);
                              OUTLINED_FUNCTION_157_0();
                              goto LABEL_124;
                            }
                            v96 = v26;
                            v97 = v16;
                            v98 = v94;
                            if (v94 != v24 || v13 != v159)
                            {
                              OUTLINED_FUNCTION_50_2();
                              OUTLINED_FUNCTION_73_0();
                              OUTLINED_FUNCTION_157_0();
                              goto LABEL_121;
                            }
                          }
                          v102 = v13;
                          sub_2412612D4(v98, v13, v15);
                          sub_2412612D4(v98, v102, v95);
                          OUTLINED_FUNCTION_151_0();
                          OUTLINED_FUNCTION_151_0();
                          v16 = v97;
                          v26 = v96;
LABEL_126:
                          if (v16)
                          {
                            if (v26)
                            {
                              if (v158 != v157 || v16 != v26)
                                OUTLINED_FUNCTION_21_0();
                              return;
                            }
                            goto LABEL_30;
                          }
                          if (!v26)
                            return;
LABEL_31:
                          swift_bridgeObjectRelease();
                          return;
                        }
                        v89 = v24;
                        v90 = v13;
                        v91 = v15;
                        OUTLINED_FUNCTION_143();
                        OUTLINED_FUNCTION_111_1();
                        OUTLINED_FUNCTION_143();
                        OUTLINED_FUNCTION_111_1();
                        sub_24125F80C();
                        LOBYTE(v15) = v91;
                        v13 = v90;
                        v24 = v89;
                      }
                      v92 = v13;
                      v93 = v15;
                      sub_2412612D4(v24, v159, v25);
                      sub_241260D28(v14, v92, v93);
                      v79 = OUTLINED_FUNCTION_152_0();
LABEL_109:
                      sub_241260D28(v79, v80, v81);
                      return;
                    }
                    v23 = v11;
                    OUTLINED_FUNCTION_143();
                    OUTLINED_FUNCTION_143();
                    v75 = v23;
                    LOBYTE(v23) = -1;
                    sub_24125F80C();
                    v11 = v75;
                  }
                  v76 = v22;
                  v77 = v22;
                  v78 = v11;
                  sub_2412612D4(v21, v77, v23);
                  sub_241260D28(v10, v78, v12);
                  v79 = v21;
                  v80 = v76;
                  v81 = v23;
                  goto LABEL_109;
                }
                if (v20)
                {
                  if (v8 != v19 || v9 != v20)
                  {
                    v155 = v11;
                    v70 = v13;
                    v149 = v12;
                    v71 = v24;
                    v135 = v23;
                    v23 = v16;
                    v72 = v26;
                    v73 = v15;
                    v74 = sub_2412A8CFC();
                    v15 = v73;
                    v26 = v72;
                    v16 = v23;
                    LODWORD(v23) = v135;
                    v24 = v71;
                    v12 = v149;
                    v13 = v70;
                    v11 = v155;
                    if ((v74 & 1) == 0)
                      return;
                  }
                  goto LABEL_75;
                }
LABEL_30:
                swift_bridgeObjectRetain();
                goto LABEL_31;
              }
            }
            OUTLINED_FUNCTION_216(v53);
            sub_24127DCE0(v61);
            v59 = v53;
LABEL_59:
            sub_24127DCE0(v59);
            return;
          }
          v60 = v178;
        }
        else
        {
          v60 = v178;
        }
        sub_241297188(v60);
        OUTLINED_FUNCTION_36_0();
        goto LABEL_31;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v47 = v172;
      if (!v172)
        goto LABEL_34;
    }
    OUTLINED_FUNCTION_216(v47);
    sub_24127DCE0(v178);
    v59 = v47;
    goto LABEL_59;
  }
}

void sub_241294150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v8[288];
  _BYTE __dst[288];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (char *)(a1 + 32);
    v4 = (char *)(a2 + 32);
    v5 = v2 - 1;
    do
    {
      v6 = v5;
      memcpy(__dst, v3, 0x119uLL);
      memcpy(v8, v4, 0x119uLL);
      static RoutingSession.== infix(_:_:)((uint64_t)__dst, (uint64_t)v8);
      if ((v7 & 1) == 0)
        break;
      v5 = v6 - 1;
      v4 += 288;
      v3 += 288;
    }
    while (v6);
  }
  OUTLINED_FUNCTION_37_0();
}

BOOL sub_2412941F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  _BOOL8 result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

void sub_24129425C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v8[280];
  _BYTE __dst[280];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (char *)(a1 + 32);
    v4 = (char *)(a2 + 32);
    v5 = v2 - 1;
    do
    {
      v6 = v5;
      memcpy(__dst, v3, 0x111uLL);
      memcpy(v8, v4, 0x111uLL);
      static RoutingItem.== infix(_:_:)((uint64_t)__dst, (uint64_t)v8);
      if ((v7 & 1) == 0)
        break;
      v5 = v6 - 1;
      v4 += 280;
      v3 += 280;
    }
    while (v6);
  }
  OUTLINED_FUNCTION_37_0();
}

void sub_2412942FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
    __asm { BR              X8 }
  OUTLINED_FUNCTION_14();
}

uint64_t RoutingControls.play.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_24_4(*(_QWORD *)(v1 + 8), a1);
}

void RoutingControls.play.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControls.play.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.pause.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_24_4(*(_QWORD *)(v1 + 24), a1);
}

void RoutingControls.pause.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControls.pause.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.skipForward.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_218(v1[4], v1[5], v1[6], v1[7], a1);
}

__n128 RoutingControls.skipForward.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  sub_24127DCE0(v1[4]);
  *((_OWORD *)v1 + 2) = v5;
  v1[6] = v2;
  v1[7] = v3;
  OUTLINED_FUNCTION_79();
  return result;
}

uint64_t (*RoutingControls.skipForward.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.skipBackward.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_218(v1[8], v1[9], v1[10], v1[11], a1);
}

__n128 RoutingControls.skipBackward.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v5 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  sub_24127DCE0(v1[8]);
  *((_OWORD *)v1 + 4) = v5;
  v1[10] = v2;
  v1[11] = v3;
  OUTLINED_FUNCTION_79();
  return result;
}

uint64_t (*RoutingControls.skipBackward.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.nextTrack.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_24_4(*(_QWORD *)(v1 + 104), a1);
}

void RoutingControls.nextTrack.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v3;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControls.nextTrack.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.previousTrack.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_24_4(*(_QWORD *)(v1 + 120), a1);
}

void RoutingControls.previousTrack.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v3;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControls.previousTrack.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.absoluteVolume.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_QWORD *)(v1 + 136);
  *a1 = v2;
  a1[1] = v3;
  return OUTLINED_FUNCTION_139_0(v2, v3, *(_BYTE *)(v1 + 144), (uint64_t)a1);
}

void RoutingControls.absoluteVolume.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  sub_241260D28(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_BYTE *)(v1 + 144));
  *(_QWORD *)(v1 + 128) = v2;
  *(_QWORD *)(v1 + 136) = v3;
  *(_BYTE *)(v1 + 144) = v4;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControls.absoluteVolume.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.relativeVolume.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 152);
  v3 = *(_QWORD *)(v1 + 160);
  *a1 = v2;
  a1[1] = v3;
  return OUTLINED_FUNCTION_139_0(v2, v3, *(_BYTE *)(v1 + 168), (uint64_t)a1);
}

void RoutingControls.relativeVolume.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  sub_241260D28(*(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160), *(_BYTE *)(v1 + 168));
  *(_QWORD *)(v1 + 152) = v2;
  *(_QWORD *)(v1 + 160) = v3;
  *(_BYTE *)(v1 + 168) = v4;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControls.relativeVolume.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t RoutingControls.TVRemote.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_24_4(*(_QWORD *)(v1 + 184), a1);
}

void RoutingControls.TVRemote.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 176) = v2;
  *(_QWORD *)(v1 + 184) = v3;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControls.TVRemote.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingControls.init()(uint64_t a1@<X8>)
{
  bzero((void *)a1, 0x90uLL);
  *(_BYTE *)(a1 + 144) = -1;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 168) = -1;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  OUTLINED_FUNCTION_44();
}

void RoutingControls.PlayControl.control()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_82_0();
  v2 = OUTLINED_FUNCTION_43_4();
  *a1 = 2;
  OUTLINED_FUNCTION_27_5(v2, v3);
  OUTLINED_FUNCTION_37_0();
}

void RoutingControl.init(type:sessionIdentifier:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2412953C4(a1, a2, a3, 0, a4);
}

uint64_t sub_241294838()
{
  sub_2412971B0();
  return sub_2412A8DBC();
}

uint64_t sub_241294860()
{
  sub_2412971B0();
  return sub_2412A8DC8();
}

void RoutingControls.PlayControl.encode(to:)()
{
  sub_2412949D4();
}

void RoutingControls.PlayControl.init(from:)()
{
  sub_241294AC4();
}

void sub_2412948F0()
{
  RoutingControls.PlayControl.init(from:)();
}

void sub_241294904()
{
  RoutingControls.PlayControl.encode(to:)();
}

void RoutingControls.PauseControl.control()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_82_0();
  v2 = OUTLINED_FUNCTION_43_4();
  *a1 = 3;
  OUTLINED_FUNCTION_27_5(v2, v3);
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_241294958()
{
  sub_2412971EC();
  return sub_2412A8DBC();
}

uint64_t sub_241294980()
{
  sub_2412971EC();
  return sub_2412A8DC8();
}

void RoutingControls.PauseControl.encode(to:)()
{
  sub_2412949D4();
}

void sub_2412949D4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_1_2();
  v2 = (void (*)(void))v1;
  v4 = (_QWORD *)v3;
  OUTLINED_FUNCTION_64_2(v3, v5, v1, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_41_2();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  OUTLINED_FUNCTION_106();
  sub_2412A8DB0();
  sub_2412A8C78();
  OUTLINED_FUNCTION_150_0();
  OUTLINED_FUNCTION_30_0(v0, v8);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void RoutingControls.PauseControl.init(from:)()
{
  sub_241294AC4();
}

void sub_241294AC4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void (*v2)(void);
  uint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;

  OUTLINED_FUNCTION_1_2();
  v2 = (void (*)(void))v1;
  v17 = v3;
  OUTLINED_FUNCTION_64_2(v4, v5, v1, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - v10;
  OUTLINED_FUNCTION_88_2();
  v2();
  OUTLINED_FUNCTION_66_0();
  if (!v0)
  {
    v12 = v17;
    v13 = sub_2412A8BC4();
    v15 = v14;
    OUTLINED_FUNCTION_39_3((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    *v12 = v13;
    v12[1] = v15;
  }
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_0_1();
}

void sub_241294BB0()
{
  RoutingControls.PauseControl.init(from:)();
}

void sub_241294BC4()
{
  RoutingControls.PauseControl.encode(to:)();
}

void RoutingControls.NextTrackControl.control()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_82_0();
  v2 = OUTLINED_FUNCTION_43_4();
  *a1 = 1;
  OUTLINED_FUNCTION_27_5(v2, v3);
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_241294C14()
{
  sub_241297228();
  return sub_2412A8DBC();
}

uint64_t sub_241294C3C()
{
  sub_241297228();
  return sub_2412A8DC8();
}

void RoutingControls.NextTrackControl.encode(to:)()
{
  sub_2412949D4();
}

void RoutingControls.NextTrackControl.init(from:)()
{
  sub_241294AC4();
}

void sub_241294CC0()
{
  RoutingControls.NextTrackControl.init(from:)();
}

void sub_241294CD4()
{
  RoutingControls.NextTrackControl.encode(to:)();
}

MediaControl::RoutingControls::PreviousTrackControl __swiftcall RoutingControls.PreviousTrackControl.init(sessionIdentifier:)(MediaControl::RoutingControls::PreviousTrackControl sessionIdentifier)
{
  MediaControl::RoutingControls::PreviousTrackControl *v1;

  *v1 = sessionIdentifier;
  return sessionIdentifier;
}

void RoutingControls.PreviousTrackControl.control()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_82_0();
  v2 = OUTLINED_FUNCTION_43_4();
  *a1 = 0;
  OUTLINED_FUNCTION_27_5(v2, v3);
  OUTLINED_FUNCTION_37_0();
}

void sub_241294D28(_BYTE *a1@<X8>)
{
  char v2;

  sub_241297354();
  *a1 = v2 & 1;
}

uint64_t sub_241294D50()
{
  sub_241297264();
  return sub_2412A8DBC();
}

uint64_t sub_241294D78()
{
  sub_241297264();
  return sub_2412A8DC8();
}

void RoutingControls.PreviousTrackControl.encode(to:)()
{
  sub_2412949D4();
}

void RoutingControls.PreviousTrackControl.init(from:)()
{
  sub_241294AC4();
}

void sub_241294DFC()
{
  RoutingControls.PreviousTrackControl.init(from:)();
}

void sub_241294E10()
{
  RoutingControls.PreviousTrackControl.encode(to:)();
}

void static RoutingControls.AbsoluteVolumeControl.Target.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  sub_24129913C(a1, a2, (void (*)(uint64_t))OUTLINED_FUNCTION_143, (void (*)(uint64_t, uint64_t, uint64_t))sub_24125F80C);
}

uint64_t sub_241294E40()
{
  sub_241297318();
  return sub_2412A8DBC();
}

uint64_t sub_241294E68()
{
  sub_241297318();
  return sub_2412A8DC8();
}

uint64_t sub_241294E90()
{
  sub_2412972A0();
  return sub_2412A8DBC();
}

uint64_t sub_241294EB8()
{
  sub_2412972A0();
  return sub_2412A8DC8();
}

uint64_t sub_241294EE0()
{
  sub_2412972DC();
  return sub_2412A8DBC();
}

uint64_t sub_241294F08()
{
  sub_2412972DC();
  return sub_2412A8DC8();
}

void RoutingControls.AbsoluteVolumeControl.Target.encode(to:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_44_1(v1, &qword_2571062A8, (uint64_t (*)(void))sub_2412972A0, (uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_59_2(v3, v9);
  OUTLINED_FUNCTION_44_1(v4, &qword_2571062B8, (uint64_t (*)(void))sub_2412972DC, (uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_71_0(0, &qword_2571062C8, (uint64_t (*)(void))sub_241297318, (uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_35_2();
  sub_241297318();
  OUTLINED_FUNCTION_36_3();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_232();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_48_1();
    v7 = OUTLINED_FUNCTION_124_1();
  }
  else
  {
    sub_2412972DC();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_47_2();
    v7 = OUTLINED_FUNCTION_123_1();
  }
  OUTLINED_FUNCTION_64_0(v7, v8);
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_0_1();
}

void RoutingControls.AbsoluteVolumeControl.Target.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_184(v4);
  OUTLINED_FUNCTION_5_5(v5, &qword_2571062D8, (uint64_t (*)(void))sub_2412972A0, (uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_155(v7, v23);
  OUTLINED_FUNCTION_5_5(v8, &qword_2571062E0, (uint64_t (*)(void))sub_2412972DC, (uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_11_6(0, &qword_2571062E8, (uint64_t (*)(void))sub_241297318, (uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys);
  v11 = v10;
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_122_1();
  sub_241297318();
  OUTLINED_FUNCTION_29_4();
  if (v0)
    goto LABEL_8;
  OUTLINED_FUNCTION_46_2();
  OUTLINED_FUNCTION_158_0();
  if (!v13
    || (v14 = OUTLINED_FUNCTION_34_3(),
        sub_24127AA78(v14),
        OUTLINED_FUNCTION_56_1(),
        &type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys != (ValueMetadata *)(v3 >> 1)))
  {
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_109_1();
    OUTLINED_FUNCTION_106_1((uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.Target);
    v15 = OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_65_2(v15, *MEMORY[0x24BEE26D0]);
    OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_21_2();
    v16 = OUTLINED_FUNCTION_185_0();
    v18(v16, v17);
    v2 = v24;
LABEL_8:
    v19 = v2;
    goto LABEL_9;
  }
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_232();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_28_4();
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_169_0(v20);
  }
  else
  {
    sub_2412972DC();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_28_4();
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_168_0(v22);
  }
  OUTLINED_FUNCTION_26_4(v21);
  OUTLINED_FUNCTION_57_2();
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v19 = OUTLINED_FUNCTION_117_1();
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0(v19);
  OUTLINED_FUNCTION_0_1();
}

void sub_24129531C()
{
  RoutingControls.AbsoluteVolumeControl.Target.init(from:)();
}

void sub_241295330()
{
  RoutingControls.AbsoluteVolumeControl.Target.encode(to:)();
}

uint64_t RoutingControls.AbsoluteVolumeControl.init(sessionIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

uint64_t RoutingControls.AbsoluteVolumeControl.init(itemIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void RoutingControls.AbsoluteVolumeControl.control(volumeLevel:)(uint64_t a1@<X8>, unsigned int a2@<S0>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *v2;
  v5 = v2[1];
  v7 = *((_BYTE *)v2 + 16);
  swift_bridgeObjectRetain();
  v8 = OUTLINED_FUNCTION_43_4();
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 2;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  OUTLINED_FUNCTION_105_0();
}

void RoutingControl.init(type:itemIdentifier:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2412953C4(a1, a2, a3, 1, a4);
}

void sub_2412953C4(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *a1;
  v10 = *((_BYTE *)a1 + 8);
  v11 = OUTLINED_FUNCTION_43_4();
  *(_QWORD *)a5 = v9;
  *(_BYTE *)(a5 + 8) = v10;
  *(_QWORD *)(a5 + 16) = a2;
  *(_QWORD *)(a5 + 24) = a3;
  *(_BYTE *)(a5 + 32) = a4;
  *(_QWORD *)(a5 + 40) = v11;
  *(_QWORD *)(a5 + 48) = v12;
  OUTLINED_FUNCTION_48();
}

uint64_t static RoutingControls.AbsoluteVolumeControl.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2412963F4(a1, a2, (void (*)(_QWORD))OUTLINED_FUNCTION_143, (void (*)(_QWORD))sub_24125F80C);
}

uint64_t sub_241295428()
{
  return 0x746567726174;
}

void sub_241295440(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_241296554(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_241295468()
{
  sub_24129C860();
  return sub_2412A8DBC();
}

uint64_t sub_241295490()
{
  sub_24129C860();
  return sub_2412A8DC8();
}

void RoutingControls.AbsoluteVolumeControl.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_64_2(v0, &qword_2571062F0, (uint64_t (*)(void))sub_24129C860, (uint64_t)&type metadata for RoutingControls.AbsoluteVolumeControl.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v3 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_1();
  sub_24129C860();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_53_3();
  sub_24129C89C();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_89_1(v3);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void RoutingControls.AbsoluteVolumeControl.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_71(v2);
  OUTLINED_FUNCTION_6_2(v3, &qword_257106308, (uint64_t (*)(void))sub_24129C860, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_0();
  sub_24129C860();
  OUTLINED_FUNCTION_10_1();
  if (!v1)
  {
    sub_24129C8D8();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_188(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_193_0();
  }
  __swift_destroy_boxed_opaque_existential_0(v0);
  OUTLINED_FUNCTION_0_1();
}

void sub_241295658()
{
  RoutingControls.AbsoluteVolumeControl.init(from:)();
}

void sub_24129566C()
{
  RoutingControls.AbsoluteVolumeControl.encode(to:)();
}

uint64_t RoutingControls.RelativeVolumeControl.AdjustmentType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x736165726365642ELL;
  else
    return 0x73616572636E692ELL;
}

BOOL static RoutingControls.RelativeVolumeControl.AdjustmentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void RoutingControls.RelativeVolumeControl.AdjustmentType.hash(into:)()
{
  sub_2412A8D68();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412956F8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x6573616572636E69 && a2 == 0xE800000000000000;
  if (v3 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616572636564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2412957D0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6573616572636564;
  else
    return 0x6573616572636E69;
}

uint64_t sub_2412957F4()
{
  char *v0;

  return sub_2412957D0(*v0);
}

uint64_t sub_2412957FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412956F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241295820()
{
  sub_24129C98C();
  return sub_2412A8DBC();
}

uint64_t sub_241295848()
{
  sub_24129C98C();
  return sub_2412A8DC8();
}

uint64_t sub_241295870()
{
  sub_24129C914();
  return sub_2412A8DBC();
}

uint64_t sub_241295898()
{
  sub_24129C914();
  return sub_2412A8DC8();
}

uint64_t sub_2412958C0()
{
  sub_24129C950();
  return sub_2412A8DBC();
}

uint64_t sub_2412958E8()
{
  sub_24129C950();
  return sub_2412A8DC8();
}

void RoutingControls.RelativeVolumeControl.AdjustmentType.encode(to:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_188_0(0, &qword_257106318, (uint64_t (*)(void))sub_24129C914, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.DecreaseCodingKeys);
  v14 = *(_QWORD *)(v3 - 8);
  v15 = v3;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_20_2();
  v13 = v5;
  OUTLINED_FUNCTION_188_0(0, &qword_257106328, (uint64_t (*)(void))sub_24129C950, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.IncreaseCodingKeys);
  v11 = *(_QWORD *)(v6 - 8);
  v12 = v6;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_188_0(0, &qword_257106338, (uint64_t (*)(void))sub_24129C98C, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys);
  v16 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_84_0();
  v10 = *v0;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24129C98C();
  sub_2412A8DB0();
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_231();
    OUTLINED_FUNCTION_2_3();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  else
  {
    sub_24129C950();
    OUTLINED_FUNCTION_2_3();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v12);
  }
  OUTLINED_FUNCTION_188(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  OUTLINED_FUNCTION_0_1();
}

void RoutingControls.RelativeVolumeControl.AdjustmentType.hashValue.getter()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingControls.RelativeVolumeControl.AdjustmentType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;

  OUTLINED_FUNCTION_1_2();
  v4 = (_QWORD *)v3;
  v35 = v5;
  OUTLINED_FUNCTION_5_5(v3, &qword_257106348, (uint64_t (*)(void))sub_24129C914, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.DecreaseCodingKeys);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_155(v8, v29);
  OUTLINED_FUNCTION_5_5(v9, &qword_257106350, (uint64_t (*)(void))sub_24129C950, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.IncreaseCodingKeys);
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_11_6(0, &qword_257106358, (uint64_t (*)(void))sub_24129C98C, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys);
  v13 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_84_0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_24129C98C();
  sub_2412A8DA4();
  if (v0)
    goto LABEL_8;
  v30 = v4;
  v15 = sub_2412A8C24();
  if (!*(_QWORD *)(v15 + 16)
    || (v16 = *(_BYTE *)(v15 + 32),
        sub_24127AA78(1),
        v18 = v17,
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 != v20 >> 1))
  {
    v22 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    v24 = v23;
    sub_2412741B0();
    *v24 = &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType;
    sub_2412A8B88();
    OUTLINED_FUNCTION_88_0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_150_0();
    v25 = OUTLINED_FUNCTION_165_0();
    v27(v25, v26);
    v4 = v30;
LABEL_8:
    v28 = (uint64_t)v4;
    goto LABEL_9;
  }
  if ((v16 & 1) != 0)
  {
    OUTLINED_FUNCTION_231();
    OUTLINED_FUNCTION_147_0();
    v21 = v35;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v34);
  }
  else
  {
    sub_24129C950();
    OUTLINED_FUNCTION_147_0();
    v21 = v35;
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v1, v32);
  }
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  *v21 = v16;
  v28 = (uint64_t)v30;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0(v28);
  OUTLINED_FUNCTION_0_1();
}

void sub_241295E08()
{
  RoutingControls.RelativeVolumeControl.AdjustmentType.init(from:)();
}

void sub_241295E1C()
{
  RoutingControls.RelativeVolumeControl.AdjustmentType.encode(to:)();
}

uint64_t sub_241295E30()
{
  return RoutingControls.RelativeVolumeControl.AdjustmentType.description.getter();
}

void static RoutingControls.RelativeVolumeControl.Target.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  sub_24129913C(a1, a2, (void (*)(uint64_t))j__OUTLINED_FUNCTION_143, (void (*)(uint64_t, uint64_t, uint64_t))sub_2412A0A44);
}

uint64_t sub_241295E68()
{
  sub_24129CA40();
  return sub_2412A8DBC();
}

uint64_t sub_241295E90()
{
  sub_24129CA40();
  return sub_2412A8DC8();
}

uint64_t sub_241295EB8()
{
  sub_24129C9C8();
  return sub_2412A8DBC();
}

uint64_t sub_241295EE0()
{
  sub_24129C9C8();
  return sub_2412A8DC8();
}

uint64_t sub_241295F08()
{
  sub_24129CA04();
  return sub_2412A8DBC();
}

uint64_t sub_241295F30()
{
  sub_24129CA04();
  return sub_2412A8DC8();
}

void RoutingControls.RelativeVolumeControl.Target.encode(to:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_44_1(v1, &qword_257106360, (uint64_t (*)(void))sub_24129C9C8, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_59_2(v3, v9);
  OUTLINED_FUNCTION_44_1(v4, &qword_257106370, (uint64_t (*)(void))sub_24129CA04, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_71_0(0, &qword_257106380, (uint64_t (*)(void))sub_24129CA40, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_35_2();
  sub_24129CA40();
  OUTLINED_FUNCTION_36_3();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_233();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_48_1();
    v7 = OUTLINED_FUNCTION_124_1();
  }
  else
  {
    sub_24129CA04();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_47_2();
    v7 = OUTLINED_FUNCTION_123_1();
  }
  OUTLINED_FUNCTION_64_0(v7, v8);
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_0_1();
}

void RoutingControls.RelativeVolumeControl.Target.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_184(v4);
  OUTLINED_FUNCTION_5_5(v5, &qword_257106390, (uint64_t (*)(void))sub_24129C9C8, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_155(v7, v23);
  OUTLINED_FUNCTION_5_5(v8, &qword_257106398, (uint64_t (*)(void))sub_24129CA04, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_11_6(0, &qword_2571063A0, (uint64_t (*)(void))sub_24129CA40, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys);
  v11 = v10;
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_122_1();
  sub_24129CA40();
  OUTLINED_FUNCTION_29_4();
  if (v0)
    goto LABEL_8;
  OUTLINED_FUNCTION_46_2();
  OUTLINED_FUNCTION_158_0();
  if (!v13
    || (v14 = OUTLINED_FUNCTION_34_3(),
        sub_24127AA78(v14),
        OUTLINED_FUNCTION_56_1(),
        &type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys != (ValueMetadata *)(v3 >> 1)))
  {
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_109_1();
    OUTLINED_FUNCTION_106_1((uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.Target);
    v15 = OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_65_2(v15, *MEMORY[0x24BEE26D0]);
    OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_21_2();
    v16 = OUTLINED_FUNCTION_185_0();
    v18(v16, v17);
    v2 = v24;
LABEL_8:
    v19 = v2;
    goto LABEL_9;
  }
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_233();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_28_4();
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_169_0(v20);
  }
  else
  {
    sub_24129CA04();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_28_4();
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_168_0(v22);
  }
  OUTLINED_FUNCTION_26_4(v21);
  OUTLINED_FUNCTION_57_2();
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v19 = OUTLINED_FUNCTION_117_1();
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0(v19);
  OUTLINED_FUNCTION_0_1();
}

void sub_241296338()
{
  RoutingControls.RelativeVolumeControl.Target.init(from:)();
}

void sub_24129634C()
{
  RoutingControls.RelativeVolumeControl.Target.encode(to:)();
}

void RoutingControls.RelativeVolumeControl.control(adjustment:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_116_1();
  v0 = OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_144(v0, v1);
  OUTLINED_FUNCTION_48();
}

void RoutingControls.RelativeVolumeControl.continuousControl(adjustment:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_116_1();
  v0 = OUTLINED_FUNCTION_43_4();
  OUTLINED_FUNCTION_144(v0, v1);
  OUTLINED_FUNCTION_48();
}

uint64_t _s12MediaControl15RoutingControlsV014AbsoluteVolumeB0V6TargetO4hash4intoys6HasherVz_tF_0()
{
  OUTLINED_FUNCTION_131_0();
  return OUTLINED_FUNCTION_38_3();
}

uint64_t static RoutingControls.RelativeVolumeControl.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2412963F4(a1, a2, (void (*)(_QWORD))j__OUTLINED_FUNCTION_143, (void (*)(_QWORD))sub_2412A0A44);
}

uint64_t sub_2412963F4(uint64_t *a1, uint64_t *a2, void (*a3)(_QWORD), void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  v7 = *a1;
  v6 = a1[1];
  v9 = *a2;
  v8 = a2[1];
  if ((a1[2] & 1) == 0)
  {
    if ((a2[2] & 1) == 0)
    {
      v17 = *a1;
      if (v7 == v9 && v6 == v8)
      {
        ((void (*)(uint64_t, uint64_t, _QWORD))a3)(v17, v6, 0);
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_93_2();
        OUTLINED_FUNCTION_93_2();
      }
      else
      {
        v19 = OUTLINED_FUNCTION_21_0();
        ((void (*)(uint64_t, uint64_t, _QWORD))a3)(v9, v8, 0);
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_93_2();
        ((void (*)(uint64_t, uint64_t, _QWORD))a4)(v9, v8, 0);
        if ((v19 & 1) == 0)
          return 0;
      }
      return 1;
    }
    goto LABEL_10;
  }
  if ((a2[2] & 1) == 0)
  {
LABEL_10:
    v13 = OUTLINED_FUNCTION_178_0();
    a3(v13);
    v14 = OUTLINED_FUNCTION_111_1();
    a3(v14);
    v15 = OUTLINED_FUNCTION_111_1();
    a4(v15);
    v16 = OUTLINED_FUNCTION_178_0();
    a4(v16);
    return 0;
  }
  if (v7 == v9 && v6 == v8)
  {
    v12 = 1;
    OUTLINED_FUNCTION_94_2();
    OUTLINED_FUNCTION_94_2();
    OUTLINED_FUNCTION_95_2();
    OUTLINED_FUNCTION_95_2();
    return v12;
  }
  v11 = OUTLINED_FUNCTION_21_0();
  v12 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t))a3)(v9, v8, 1);
  OUTLINED_FUNCTION_94_2();
  OUTLINED_FUNCTION_95_2();
  ((void (*)(uint64_t, uint64_t, uint64_t))a4)(v9, v8, 1);
  if ((v11 & 1) != 0)
    return v12;
  return 0;
}

void sub_241296554(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746567726174 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412965C0()
{
  sub_24129CA7C();
  return sub_2412A8DBC();
}

uint64_t sub_2412965E8()
{
  sub_24129CA7C();
  return sub_2412A8DC8();
}

void RoutingControls.RelativeVolumeControl.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_64_2(v0, &qword_2571063A8, (uint64_t (*)(void))sub_24129CA7C, (uint64_t)&type metadata for RoutingControls.RelativeVolumeControl.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v3 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18_1();
  sub_24129CA7C();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_53_3();
  sub_24129CAB8();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_89_1(v3);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void _s12MediaControl15RoutingControlsV014AbsoluteVolumeB0V6TargetO9hashValueSivg_0()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_55_2();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_65_1();
}

void RoutingControls.RelativeVolumeControl.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_71(v2);
  OUTLINED_FUNCTION_6_2(v3, &qword_2571063C0, (uint64_t (*)(void))sub_24129CA7C, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_0();
  sub_24129CA7C();
  OUTLINED_FUNCTION_10_1();
  if (!v1)
  {
    sub_24129CAF4();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_188(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_193_0();
  }
  __swift_destroy_boxed_opaque_existential_0(v0);
  OUTLINED_FUNCTION_0_1();
}

void sub_2412967DC()
{
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_55_2();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_65_1();
}

void sub_241296810()
{
  RoutingControls.RelativeVolumeControl.init(from:)();
}

void sub_241296824()
{
  RoutingControls.RelativeVolumeControl.encode(to:)();
}

MediaControl::RoutingControls::SkipForwardControl __swiftcall RoutingControls.SkipForwardControl.init(intervals:preferredInterval:sessionIdentifier:)(Swift::OpaquePointer intervals, Swift::Double preferredInterval, Swift::String sessionIdentifier)
{
  uint64_t v3;
  MediaControl::RoutingControls::SkipForwardControl result;

  *(Swift::OpaquePointer *)v3 = intervals;
  *(Swift::Double *)(v3 + 8) = preferredInterval;
  *(Swift::String *)(v3 + 16) = sessionIdentifier;
  result.sessionIdentifier = sessionIdentifier;
  result.preferredInterval = preferredInterval;
  result.intervals = intervals;
  return result;
}

void RoutingControls.SkipForwardControl.control(skipInterval:)(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  OUTLINED_FUNCTION_82_0();
  v7 = OUTLINED_FUNCTION_43_4();
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  OUTLINED_FUNCTION_105_0();
}

uint64_t sub_241296898(char a1)
{
  if (a1)
    return 0xD000000000000011;
  else
    return 0x6C61767265746E69;
}

uint64_t sub_2412968FC()
{
  char *v0;

  return sub_241296898(*v0);
}

void sub_241296904(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_241296B3C(a1, a2);
  *a3 = v4;
}

uint64_t sub_241296928()
{
  sub_24129CB30();
  return sub_2412A8DBC();
}

uint64_t sub_241296950()
{
  sub_24129CB30();
  return sub_2412A8DC8();
}

void RoutingControls.SkipForwardControl.encode(to:)()
{
  sub_241296CD8();
}

void RoutingControls.SkipForwardControl.init(from:)()
{
  sub_241296ECC();
}

void sub_2412969E0()
{
  RoutingControls.SkipForwardControl.init(from:)();
}

void sub_2412969F4()
{
  RoutingControls.SkipForwardControl.encode(to:)();
}

void RoutingControls.SkipBackwardControl.control(skipInterval:)(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  OUTLINED_FUNCTION_82_0();
  v7 = OUTLINED_FUNCTION_43_4();
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  OUTLINED_FUNCTION_105_0();
}

uint64_t _s12MediaControl15RoutingControlsV011SkipForwardB0V4hash4intoys6HasherVz_tF_0(uint64_t a1)
{
  uint64_t *v1;

  sub_24128B05C(a1, *v1);
  sub_2412A8D8C();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_45_3();
  return swift_bridgeObjectRelease();
}

uint64_t _s12MediaControl15RoutingControlsV011SkipForwardB0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t result;

  v2 = *(double *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(double *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = sub_2412941F0(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if (v8 && v2 == v5)
  {
    if (v3 == v6 && v4 == v7)
    {
      return 1;
    }
    else
    {
      OUTLINED_FUNCTION_172_0();
      return sub_2412A8CFC();
    }
  }
  return result;
}

void sub_241296B3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = a1 == 0x6C61767265746E69 && a2 == 0xE900000000000073;
  if (v2
    || (OUTLINED_FUNCTION_210(), (OUTLINED_FUNCTION_21_0() & 1) != 0)
    || a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_163_0((uint64_t)"preferredInterval"), v2)
    || (OUTLINED_FUNCTION_21_0() & 1) != 0
    || a1 == 0xD000000000000011 && (OUTLINED_FUNCTION_163_0((uint64_t)"sessionIdentifier"), v2))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_37_0();
}

uint64_t sub_241296C5C()
{
  sub_24129CC10();
  return sub_2412A8DBC();
}

uint64_t sub_241296C84()
{
  sub_24129CC10();
  return sub_2412A8DC8();
}

void RoutingControls.SkipBackwardControl.encode(to:)()
{
  sub_241296CD8();
}

void sub_241296CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  void (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_99_1();
  v3 = (void (*)(void))v2;
  v5 = (_QWORD *)v4;
  OUTLINED_FUNCTION_64_2(v4, v6, v2, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v9 = v8;
  v11 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_41_2();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3();
  OUTLINED_FUNCTION_106();
  sub_2412A8DB0();
  sub_24129CB6C();
  sub_24129CBB4(&qword_2571063E8, MEMORY[0x24BEE13D8], MEMORY[0x24BEE12A0]);
  sub_2412A8CB4();
  if (!v0)
  {
    sub_2412A8C90();
    sub_2412A8C78();
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  OUTLINED_FUNCTION_19_4();
}

void _s12MediaControl15RoutingControlsV011SkipForwardB0V9hashValueSivg_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_217(v0);
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_45_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_109_0();
}

void RoutingControls.SkipBackwardControl.init(from:)()
{
  sub_241296ECC();
}

void sub_241296ECC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_99_1();
  v2 = (void (*)(void))v1;
  v15 = v3;
  OUTLINED_FUNCTION_64_2(v4, v5, v1, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_88_2();
  v2();
  OUTLINED_FUNCTION_66_0();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    sub_24129CB6C();
    sub_24129CBB4(&qword_2571063F8, MEMORY[0x24BEE1400], MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_199_0();
    sub_2412A8C00();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_199_0();
    sub_2412A8BDC();
    v11 = v10;
    OUTLINED_FUNCTION_199_0();
    v12 = sub_2412A8BC4();
    v14 = v13;
    OUTLINED_FUNCTION_188(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    *v15 = v16;
    v15[1] = v11;
    v15[2] = v12;
    v15[3] = v14;
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_18();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19_4();
}

void sub_24129706C()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_217(v0);
  OUTLINED_FUNCTION_170_0();
  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_45_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_109_0();
}

void sub_2412970B8()
{
  RoutingControls.SkipBackwardControl.init(from:)();
}

void sub_2412970CC()
{
  RoutingControls.SkipBackwardControl.encode(to:)();
}

void RoutingControls.TVRemoteControl.control()(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_82_0();
  v2 = OUTLINED_FUNCTION_43_4();
  *a1 = 6;
  OUTLINED_FUNCTION_27_5(v2, v3);
  OUTLINED_FUNCTION_37_0();
}

uint64_t _s12MediaControl15RoutingControlsV04PlayB0V4hash4intoys6HasherVz_tF_0()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_171_0();
  sub_2412A88B8();
  return swift_bridgeObjectRelease();
}

uint64_t _s12MediaControl15RoutingControlsV04PlayB0V2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2412A8CFC();
}

uint64_t sub_241297188(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return OUTLINED_FUNCTION_45_1();
  }
  return result;
}

unint64_t sub_2412971B0()
{
  unint64_t result;

  result = qword_257106250;
  if (!qword_257106250)
  {
    result = MEMORY[0x242691F34](&unk_2412B324C, &type metadata for RoutingControls.PlayControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106250);
  }
  return result;
}

unint64_t sub_2412971EC()
{
  unint64_t result;

  result = qword_257106268;
  if (!qword_257106268)
  {
    result = MEMORY[0x242691F34](&unk_2412B31FC, &type metadata for RoutingControls.PauseControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106268);
  }
  return result;
}

unint64_t sub_241297228()
{
  unint64_t result;

  result = qword_257106280;
  if (!qword_257106280)
  {
    result = MEMORY[0x242691F34](&unk_2412B31AC, &type metadata for RoutingControls.NextTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106280);
  }
  return result;
}

unint64_t sub_241297264()
{
  unint64_t result;

  result = qword_257106298;
  if (!qword_257106298)
  {
    result = MEMORY[0x242691F34](&unk_2412B315C, &type metadata for RoutingControls.PreviousTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106298);
  }
  return result;
}

unint64_t sub_2412972A0()
{
  unint64_t result;

  result = qword_2571062B0;
  if (!qword_2571062B0)
  {
    result = MEMORY[0x242691F34](&unk_2412B310C, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571062B0);
  }
  return result;
}

unint64_t sub_2412972DC()
{
  unint64_t result;

  result = qword_2571062C0;
  if (!qword_2571062C0)
  {
    result = MEMORY[0x242691F34](&unk_2412B30BC, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571062C0);
  }
  return result;
}

unint64_t sub_241297318()
{
  unint64_t result;

  result = qword_2571062D0;
  if (!qword_2571062D0)
  {
    result = MEMORY[0x242691F34](&unk_2412B306C, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571062D0);
  }
  return result;
}

void sub_241297354()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_220();
  if (v0 == 0xD000000000000011 && (OUTLINED_FUNCTION_163_0((uint64_t)"sessionIdentifier"), v1))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412973C0()
{
  sub_24129CC4C();
  return sub_2412A8DBC();
}

uint64_t sub_2412973E8()
{
  sub_24129CC4C();
  return sub_2412A8DC8();
}

void RoutingControls.TVRemoteControl.encode(to:)()
{
  sub_2412949D4();
}

void _s12MediaControl15RoutingControlsV04PlayB0V9hashValueSivg_0()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_176_0();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingControls.TVRemoteControl.init(from:)()
{
  sub_241294AC4();
}

void sub_24129749C()
{
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_176_0();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void sub_2412974CC()
{
  RoutingControls.TVRemoteControl.init(from:)();
}

void sub_2412974E0()
{
  RoutingControls.TVRemoteControl.encode(to:)();
}

uint64_t RoutingControls.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 64);
  v10 = *(_QWORD *)(v2 + 104);
  v6 = *(_QWORD *)(v2 + 120);
  v11 = *(unsigned __int8 *)(v2 + 144);
  v7 = *(unsigned __int8 *)(v2 + 168);
  v12 = *(_QWORD *)(v2 + 184);
  if (*(_QWORD *)(v2 + 8))
  {
    OUTLINED_FUNCTION_111_0();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_165_0();
    sub_2412A88B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_106_0();
  }
  if (v4)
  {
    OUTLINED_FUNCTION_111_0();
    swift_bridgeObjectRetain();
    sub_2412A88B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_106_0();
  }
  if (v5)
  {
    OUTLINED_FUNCTION_111_0();
    sub_24128B05C(a1, v5);
    sub_2412A8D8C();
    sub_241297188(v5);
    OUTLINED_FUNCTION_121_1();
    OUTLINED_FUNCTION_166_0();
    OUTLINED_FUNCTION_235();
    OUTLINED_FUNCTION_134();
    sub_24127DCE0(v5);
  }
  else
  {
    OUTLINED_FUNCTION_106_0();
  }
  if (v9)
  {
    OUTLINED_FUNCTION_111_0();
    sub_24128B05C(a1, v9);
    sub_2412A8D8C();
    sub_241297188(v9);
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_165_0();
    sub_2412A88B8();
    swift_bridgeObjectRelease();
    sub_24127DCE0(v9);
    if (v10)
      goto LABEL_12;
LABEL_15:
    OUTLINED_FUNCTION_106_0();
    if (v6)
      goto LABEL_13;
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_106_0();
  if (!v10)
    goto LABEL_15;
LABEL_12:
  OUTLINED_FUNCTION_111_0();
  OUTLINED_FUNCTION_121_1();
  OUTLINED_FUNCTION_235();
  OUTLINED_FUNCTION_134();
  if (v6)
  {
LABEL_13:
    OUTLINED_FUNCTION_111_0();
    swift_bridgeObjectRetain();
    sub_2412A88B8();
    OUTLINED_FUNCTION_23_2();
    goto LABEL_17;
  }
LABEL_16:
  OUTLINED_FUNCTION_106_0();
LABEL_17:
  if (v11 == 255)
  {
    OUTLINED_FUNCTION_106_0();
  }
  else
  {
    OUTLINED_FUNCTION_111_0();
    sub_2412A8D68();
    sub_2412A88B8();
  }
  if (v7 == 255)
  {
    OUTLINED_FUNCTION_106_0();
    if (v12)
    {
LABEL_22:
      OUTLINED_FUNCTION_111_0();
      OUTLINED_FUNCTION_8();
      sub_2412A88B8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    OUTLINED_FUNCTION_111_0();
    sub_2412A8D68();
    sub_2412A88B8();
    if (v12)
      goto LABEL_22;
  }
  return OUTLINED_FUNCTION_106_0();
}

uint64_t sub_2412977F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 2036427888 && a2 == 0xE400000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6573756170 && a2 == 0xE500000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x77726F4670696B73 && a2 == 0xEB00000000647261;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6B63614270696B73 && a2 == 0xEC00000064726177;
        if (v8 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x636172547478656ELL && a2 == 0xE90000000000006BLL;
          if (v9 || (sub_2412A8CFC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x73756F6976657270 && a2 == 0xED00006B63617254;
            if (v10 || (sub_2412A8CFC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6574756C6F736261 && a2 == 0xEE00656D756C6F56;
              if (v11 || (sub_2412A8CFC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x65766974616C6572 && a2 == 0xEE00656D756C6F56;
                if (v12 || (sub_2412A8CFC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x65746F6D65525654 && a2 == 0xE800000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v14 = sub_2412A8CFC();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 8;
                  else
                    return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_241297C14(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_241297C40 + 4 * byte_2412AFE24[a1]))(2036427888, 0xE400000000000000);
}

uint64_t sub_241297C40()
{
  return 0x6573756170;
}

uint64_t sub_241297C54()
{
  return 0x77726F4670696B73;
}

uint64_t sub_241297C74()
{
  return 0x6B63614270696B73;
}

uint64_t sub_241297C94()
{
  return 0x636172547478656ELL;
}

uint64_t sub_241297CB0()
{
  return 0x73756F6976657270;
}

uint64_t sub_241297CD4()
{
  return 0x6574756C6F736261;
}

uint64_t sub_241297D0C()
{
  return 0x65746F6D65525654;
}

uint64_t sub_241297D24()
{
  unsigned __int8 *v0;

  return sub_241297C14(*v0);
}

uint64_t sub_241297D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412977F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_241297D50()
{
  sub_24129CC88();
  return sub_2412A8DBC();
}

uint64_t sub_241297D78()
{
  sub_24129CC88();
  return sub_2412A8DC8();
}

void RoutingControls.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_64_2(v2, &qword_257106430, (uint64_t (*)(void))sub_24129CC88, (uint64_t)&type metadata for RoutingControls.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_85_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24129CC88();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_53_3();
  sub_24129CCC4();
  sub_2412A8C6C();
  if (!v0)
  {
    sub_24129CD00();
    OUTLINED_FUNCTION_9_4();
    sub_24129CD3C();
    OUTLINED_FUNCTION_9_4();
    sub_24129CD78();
    OUTLINED_FUNCTION_9_4();
    sub_24129CDB4();
    OUTLINED_FUNCTION_9_4();
    sub_24129CDF0();
    OUTLINED_FUNCTION_9_4();
    sub_24129CE2C();
    OUTLINED_FUNCTION_9_4();
    sub_24129CE68();
    OUTLINED_FUNCTION_9_4();
    sub_24129CEA4();
    OUTLINED_FUNCTION_9_4();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_0_1();
}

void RoutingControls.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_46_0();
  RoutingControls.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingControls.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[24];
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _DWORD v78[6];
  int v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD v82[3];

  OUTLINED_FUNCTION_1_2();
  v12 = v10;
  v14 = (_QWORD *)v13;
  v41 = v15;
  OUTLINED_FUNCTION_6_2(v13, &qword_257106488, (uint64_t (*)(void))sub_24129CC88, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v42 = v17;
  v18 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_85_0();
  v20 = v14[4];
  v45 = (uint64_t)v14;
  v21 = __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_24129CC88();
  v22 = v11;
  v23 = v21;
  sub_2412A8DA4();
  if (v10)
  {
    OUTLINED_FUNCTION_38_4();
    v44 = 0;
    v24 = 0;
    OUTLINED_FUNCTION_205_0();
  }
  else
  {
    v20 = v18;
    LOBYTE(v59[0]) = 0;
    sub_24129CEE0();
    v18 = v42;
    OUTLINED_FUNCTION_199_0();
    sub_2412A8BB8();
    v24 = v64;
    v40 = v63;
    LOBYTE(v59[0]) = 1;
    v25 = sub_24129CF1C();
    OUTLINED_FUNCTION_121_1();
    OUTLINED_FUNCTION_97_2();
    v12 = v25;
    v11 = v20;
    v44 = v64;
    if (v25)
    {
      OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
      OUTLINED_FUNCTION_134();
      OUTLINED_FUNCTION_38_4();
      OUTLINED_FUNCTION_205_0();
      v24 = v63;
    }
    else
    {
      v22 = v64;
      v39 = v63;
      LOBYTE(v59[0]) = 2;
      v26 = sub_24129CF58();
      OUTLINED_FUNCTION_101_0();
      OUTLINED_FUNCTION_97_2();
      if (v26)
      {
        OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
        OUTLINED_FUNCTION_134();
        OUTLINED_FUNCTION_53_2();
        v53 = 0;
        v11 = 0;
        v12 = 0;
        v57 = 0;
        v58 = 0;
        v54 = 0;
        v55 = 0;
        v20 = 0;
        v21 = 0;
        a10 = 0;
        v56 = 0;
        OUTLINED_FUNCTION_162_0();
      }
      else
      {
        v38 = v64;
        v27 = v66;
        a10 = v64;
        sub_241297188(v63);
        sub_24129CF94();
        OUTLINED_FUNCTION_42_3();
        v56 = v63;
        v57 = v63;
        v58 = v66;
        v54 = v64;
        v55 = v65;
        sub_241297188(v63);
        sub_24129CFD0();
        OUTLINED_FUNCTION_42_3();
        v36 = v63;
        v37 = v65;
        v22 = v64;
        LOBYTE(v59[0]) = 5;
        v28 = sub_24129D00C();
        v53 = v64;
        OUTLINED_FUNCTION_101_0();
        OUTLINED_FUNCTION_98_1();
        if (v28)
        {
          OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
          OUTLINED_FUNCTION_183();
          OUTLINED_FUNCTION_70_1();
          v21 = v65;
          OUTLINED_FUNCTION_125(v63);
          OUTLINED_FUNCTION_134();
          OUTLINED_FUNCTION_49_2();
          v20 = v66;
          v11 = 0;
          OUTLINED_FUNCTION_162_0();
          v12 = v63;
        }
        else
        {
          v22 = v64;
          v35 = v63;
          LOBYTE(v59[0]) = 6;
          v29 = sub_24129D048();
          v52 = v64;
          OUTLINED_FUNCTION_101_0();
          OUTLINED_FUNCTION_98_1();
          if (!v29)
          {
            LOBYTE(v59[0]) = 7;
            v50 = v63;
            v51 = v64;
            sub_2412612D4(v63, v64, v65);
            sub_24129D084();
            OUTLINED_FUNCTION_42_3();
            v49 = v65;
            v60 = 8;
            v47 = v63;
            v48 = v64;
            v46 = (char)v65;
            sub_2412612D4(v63, v64, v65);
            sub_24129D0C0();
            sub_2412A8BB8();
            OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
            v43 = v61;
            v34 = v62;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v59[0] = v40;
            v59[1] = v24;
            v59[2] = v39;
            v59[3] = v38;
            v59[4] = v56;
            v59[5] = a10;
            v59[6] = v37;
            v59[7] = v27;
            v59[8] = v57;
            v59[9] = v54;
            v59[10] = v55;
            v59[11] = v58;
            v59[12] = v36;
            v59[13] = v53;
            v59[14] = v35;
            v59[15] = v52;
            v59[16] = v50;
            v59[17] = v51;
            LOBYTE(v59[18]) = v49;
            v59[19] = v47;
            v59[20] = v48;
            LOBYTE(v59[21]) = v46;
            v59[22] = v43;
            v59[23] = v34;
            sub_24128B24C((uint64_t)v59);
            OUTLINED_FUNCTION_53_2();
            v30 = OUTLINED_FUNCTION_178_0();
            sub_241260D28(v30, v31, v32);
            sub_241260D28(v50, v51, v49);
            OUTLINED_FUNCTION_18();
            OUTLINED_FUNCTION_182_0();
            sub_24127DCE0(v57);
            sub_24127DCE0(v56);
            OUTLINED_FUNCTION_18();
            swift_bridgeObjectRelease();
            memcpy(v41, v59, 0xC0uLL);
            __swift_destroy_boxed_opaque_existential_0(v45);
            v63 = v40;
            v64 = v44;
            v65 = (uint64_t *)v39;
            v66 = v38;
            v67 = v56;
            v68 = a10;
            v69 = v37;
            v70 = v27;
            v71 = v57;
            v72 = v54;
            v73 = v55;
            v74 = v58;
            v75 = v36;
            v76 = v53;
            v77 = v35;
            OUTLINED_FUNCTION_91_1();
            v78[0] = v82[0];
            *(_DWORD *)((char *)v78 + 3) = *(_DWORD *)((char *)v82 + 3);
            OUTLINED_FUNCTION_129();
            *(_DWORD *)(v33 + 169) = *(_DWORD *)(v33 + 194);
            v79 = *(_DWORD *)(v33 + 197);
            v80 = v43;
            v81 = v34;
            goto LABEL_5;
          }
          OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
          OUTLINED_FUNCTION_183();
          OUTLINED_FUNCTION_182_0();
          OUTLINED_FUNCTION_70_1();
          v21 = v65;
          OUTLINED_FUNCTION_125(v63);
          OUTLINED_FUNCTION_134();
          OUTLINED_FUNCTION_49_2();
          v20 = v66;
          v23 = &v63;
          v18 = v63;
          v24 = v63;
          v11 = v63;
          v12 = v63;
        }
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_0(v45);
  v63 = v24;
  v64 = v44;
  v65 = (uint64_t *)v18;
  v66 = v22;
  v67 = v56;
  v68 = a10;
  v69 = v21;
  v70 = v20;
  v71 = v57;
  v72 = v54;
  v73 = v55;
  v74 = v58;
  v75 = v12;
  v76 = v53;
  v77 = v11;
  OUTLINED_FUNCTION_91_1();
  *(_DWORD *)((char *)v78 + 3) = *((_DWORD *)v23 + 51);
  *(_DWORD *)((char *)v23 + 145) = *(_DWORD *)((char *)v23 + 201);
  OUTLINED_FUNCTION_129();
  v79 = *(_DWORD *)((char *)v23 + 197);
  *(_DWORD *)((char *)v23 + 169) = *(_DWORD *)((char *)v23 + 194);
  v80 = 0;
  v81 = 0;
LABEL_5:
  sub_24128B350((uint64_t)&v63);
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_241298870()
{
  _BYTE v1[72];

  sub_2412A8D5C();
  RoutingControls.hash(into:)((uint64_t)v1);
  return sub_2412A8D98();
}

void sub_2412988A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  RoutingControls.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2412988BC()
{
  RoutingControls.encode(to:)();
}

uint64_t ContinuousRoutingControl.control.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  OUTLINED_FUNCTION_143();
  return OUTLINED_FUNCTION_45_1();
}

uint64_t ContinuousRoutingControl.control.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = a1[2];
  v5 = a1[3];
  v6 = *((_BYTE *)a1 + 32);
  v7 = a1[5];
  v8 = a1[6];
  sub_24125F80C();
  result = OUTLINED_FUNCTION_85();
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  *(_BYTE *)(v1 + 32) = v6;
  *(_QWORD *)(v1 + 40) = v7;
  *(_QWORD *)(v1 + 48) = v8;
  return result;
}

uint64_t (*ContinuousRoutingControl.control.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t ContinuousRoutingControl.description.getter()
{
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_8();
  RoutingControl.description.getter();
  sub_2412A88DC();
  OUTLINED_FUNCTION_134();
  sub_24125F80C();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_42();
  return 0xD000000000000025;
}

uint64_t ContinuousRoutingControl.hash(into:)()
{
  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_227();
  OUTLINED_FUNCTION_92_2();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_45_3();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_173_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_153_0();
  return OUTLINED_FUNCTION_68_1();
}

uint64_t static ContinuousRoutingControl.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *a2;
  v8 = *((_BYTE *)a2 + 8);
  v9 = *((_BYTE *)a2 + 32);
  v10 = a2[5];
  v17 = a2[6];
  v18 = v2;
  v19 = v3;
  v20 = *(_OWORD *)(a1 + 16);
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v12 = v7;
  v13 = v8;
  v14 = *((_OWORD *)a2 + 1);
  v15 = v9;
  v16 = v10;
  return static RoutingControl.== infix(_:_:)(&v18, (uint64_t)&v12) & 1;
}

uint64_t static RoutingControl.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t result;
  uint64_t v18;
  char v19;

  v2 = *((_BYTE *)a1 + 8);
  v4 = a1[2];
  v3 = a1[3];
  v5 = *((_BYTE *)a1 + 32);
  v6 = a1[5];
  v7 = a1[6];
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v18 = *a1;
  v19 = v2;
  if ((static RoutingControl.RoutingControlType.== infix(_:_:)((uint64_t)&v18) & 1) == 0)
    return 0;
  if ((v5 & 1) != 0)
  {
    if ((v10 & 1) != 0)
    {
      if (v4 != v9 || v3 != v8)
      {
        v14 = OUTLINED_FUNCTION_21_0();
        OUTLINED_FUNCTION_78_2();
        goto LABEL_20;
      }
      goto LABEL_22;
    }
    OUTLINED_FUNCTION_78_2();
    goto LABEL_12;
  }
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_77_1();
LABEL_12:
    sub_24125F80C();
    return 0;
  }
  if (v4 != v9 || v3 != v8)
  {
    v14 = OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_77_1();
LABEL_20:
    sub_24125F80C();
    result = 0;
    if ((v14 & 1) == 0)
      return result;
    goto LABEL_23;
  }
LABEL_22:
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_179();
  OUTLINED_FUNCTION_179();
LABEL_23:
  if (v6 == v11 && v7 == v12)
    return 1;
  OUTLINED_FUNCTION_172_0();
  return sub_2412A8CFC();
}

uint64_t sub_241298CF8()
{
  sub_24129D0FC();
  return sub_2412A8DBC();
}

uint64_t sub_241298D20()
{
  sub_24129D0FC();
  return sub_2412A8DC8();
}

void ContinuousRoutingControl.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_64_2(v0, &qword_2571064D8, (uint64_t (*)(void))sub_24129D0FC, (uint64_t)&type metadata for ContinuousRoutingControl.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v3 = *(_QWORD *)(v1 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_18_1();
  sub_24129D0FC();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_53_3();
  sub_241274CDC();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_89_1(v3);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0_1();
}

void ContinuousRoutingControl.hashValue.getter()
{
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_145_0();
  sub_2412A8D68();
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_45_3();
  OUTLINED_FUNCTION_8();
  sub_2412A88B8();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_153_0();
  OUTLINED_FUNCTION_85();
  sub_2412A8D98();
  OUTLINED_FUNCTION_126();
}

void ContinuousRoutingControl.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_71(v12);
  OUTLINED_FUNCTION_6_2(v13, &qword_2571064E8, (uint64_t (*)(void))sub_24129D0FC, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v16 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_4_0();
  sub_24129D0FC();
  OUTLINED_FUNCTION_10_1();
  if (!v11)
  {
    sub_241274D18();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_188(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    *(_QWORD *)a10 = v18;
    *(_BYTE *)(a10 + 8) = v19;
    *(_OWORD *)(a10 + 16) = v20;
    *(_BYTE *)(a10 + 32) = v21;
    *(_QWORD *)(a10 + 40) = v22;
    *(_QWORD *)(a10 + 48) = v23;
  }
  __swift_destroy_boxed_opaque_existential_0(v10);
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_241298FC8()
{
  sub_2412A8D5C();
  RoutingControl.RoutingControlType.hash(into:)();
  sub_2412A8D68();
  OUTLINED_FUNCTION_143();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  sub_24125F80C();
  swift_bridgeObjectRelease();
  return sub_2412A8D98();
}

void sub_2412990A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ContinuousRoutingControl.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2412990B8()
{
  ContinuousRoutingControl.encode(to:)();
}

uint64_t _s12MediaControl15RoutingControlsV014AbsoluteVolumeB0V6TargetO11descriptionSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
    OUTLINED_FUNCTION_192_0();
  else
    OUTLINED_FUNCTION_142_0();
  v3 = v1;
  sub_2412A88DC();
  OUTLINED_FUNCTION_90_1();
  return v3;
}

void static RoutingControl.Target.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  sub_24129913C(a1, a2, (void (*)(uint64_t))OUTLINED_FUNCTION_143, (void (*)(uint64_t, uint64_t, uint64_t))sub_24125F80C);
}

void sub_24129913C(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  v7 = a1[1];
  v8 = *((unsigned __int8 *)a1 + 16);
  v9 = *a2;
  v10 = a2[1];
  if ((v8 & 1) == 0)
  {
    if ((a2[2] & 1) != 0)
      goto LABEL_17;
    if (v6 == v9 && v7 == v10)
    {
      v8 = 0;
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if ((a2[2] & 1) == 0)
    goto LABEL_17;
  if (v6 != v9 || v7 != v10)
  {
LABEL_15:
    OUTLINED_FUNCTION_21_0();
    goto LABEL_17;
  }
  v8 = 1;
LABEL_17:
  v13 = OUTLINED_FUNCTION_152_0();
  a3(v13);
  ((void (*)(uint64_t, uint64_t, uint64_t))a3)(v6, v7, v8);
  a4(v6, v7, v8);
  v14 = OUTLINED_FUNCTION_152_0();
  ((void (*)(uint64_t))a4)(v14);
  OUTLINED_FUNCTION_14();
}

void sub_241299210(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000;
  if (v2
    || (OUTLINED_FUNCTION_21_0() & 1) != 0
    || (a1 == 1835365481 ? (v5 = a2 == 0xE400000000000000) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_2412992DC(char a1)
{
  if ((a1 & 1) != 0)
    return 1835365481;
  else
    return 0x6E6F6973736573;
}

void sub_24129930C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_24129938C()
{
  char *v0;

  return sub_2412992DC(*v0);
}

void sub_241299394(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_241299210(a1, a2);
  *a3 = v4;
}

uint64_t sub_2412993B8()
{
  sub_24129D1B0();
  return sub_2412A8DBC();
}

uint64_t sub_2412993E0()
{
  sub_24129D1B0();
  return sub_2412A8DC8();
}

void sub_241299408(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_24129930C(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_241299430()
{
  sub_24129D138();
  return sub_2412A8DBC();
}

uint64_t sub_241299458()
{
  sub_24129D138();
  return sub_2412A8DC8();
}

uint64_t sub_241299480()
{
  sub_24129D174();
  return sub_2412A8DBC();
}

uint64_t sub_2412994A8()
{
  sub_24129D174();
  return sub_2412A8DC8();
}

void RoutingControl.Target.encode(to:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_236();
  OUTLINED_FUNCTION_44_1(v1, &qword_2571064F0, (uint64_t (*)(void))sub_24129D138, (uint64_t)&type metadata for RoutingControl.Target.ItemCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_59_2(v3, v9);
  OUTLINED_FUNCTION_44_1(v4, &qword_257106500, (uint64_t (*)(void))sub_24129D174, (uint64_t)&type metadata for RoutingControl.Target.SessionCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_71_0(0, &qword_257106510, (uint64_t (*)(void))sub_24129D1B0, (uint64_t)&type metadata for RoutingControl.Target.CodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_35_2();
  sub_24129D1B0();
  OUTLINED_FUNCTION_36_3();
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_230();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_48_1();
    v7 = OUTLINED_FUNCTION_124_1();
  }
  else
  {
    sub_24129D174();
    OUTLINED_FUNCTION_14_3();
    OUTLINED_FUNCTION_47_2();
    v7 = OUTLINED_FUNCTION_123_1();
  }
  OUTLINED_FUNCTION_64_0(v7, v8);
  OUTLINED_FUNCTION_69_2();
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_0_1();
}

void RoutingControl.Target.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_1_2();
  OUTLINED_FUNCTION_184(v4);
  OUTLINED_FUNCTION_5_5(v5, &qword_257106520, (uint64_t (*)(void))sub_24129D138, (uint64_t)&type metadata for RoutingControl.Target.ItemCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_155(v7, v23);
  OUTLINED_FUNCTION_5_5(v8, &qword_257106528, (uint64_t (*)(void))sub_24129D174, (uint64_t)&type metadata for RoutingControl.Target.SessionCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_11_6(0, &qword_257106530, (uint64_t (*)(void))sub_24129D1B0, (uint64_t)&type metadata for RoutingControl.Target.CodingKeys);
  v11 = v10;
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_122_1();
  sub_24129D1B0();
  OUTLINED_FUNCTION_29_4();
  if (v0)
    goto LABEL_8;
  OUTLINED_FUNCTION_46_2();
  OUTLINED_FUNCTION_158_0();
  if (!v13
    || (v14 = OUTLINED_FUNCTION_34_3(),
        sub_24127AA78(v14),
        OUTLINED_FUNCTION_56_1(),
        &type metadata for RoutingControl.Target.CodingKeys != (ValueMetadata *)(v3 >> 1)))
  {
    OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_109_1();
    OUTLINED_FUNCTION_106_1((uint64_t)&type metadata for RoutingControl.Target);
    v15 = OUTLINED_FUNCTION_88_0();
    OUTLINED_FUNCTION_65_2(v15, *MEMORY[0x24BEE26D0]);
    OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_21_2();
    v16 = OUTLINED_FUNCTION_185_0();
    v18(v16, v17);
    v2 = v24;
LABEL_8:
    v19 = v2;
    goto LABEL_9;
  }
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_230();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_28_4();
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_169_0(v20);
  }
  else
  {
    sub_24129D174();
    OUTLINED_FUNCTION_7_6();
    OUTLINED_FUNCTION_28_4();
    OUTLINED_FUNCTION_143_0();
    OUTLINED_FUNCTION_168_0(v22);
  }
  OUTLINED_FUNCTION_26_4(v21);
  OUTLINED_FUNCTION_57_2();
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v19 = OUTLINED_FUNCTION_117_1();
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0(v19);
  OUTLINED_FUNCTION_0_1();
}

void sub_2412998B0()
{
  RoutingControl.Target.init(from:)();
}

void sub_2412998C4()
{
  RoutingControl.Target.encode(to:)();
}

void RoutingControl.RoutingControlType.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_241299910()
{
  uint64_t v1;

  OUTLINED_FUNCTION_132_0();
  OUTLINED_FUNCTION_174_0();
  sub_2412A88DC();
  sub_2412A8978();
  OUTLINED_FUNCTION_90_1();
  return v1;
}

void sub_241299AC4()
{
  JUMPOUT(0x241299AB0);
}

void sub_241299AD8()
{
  JUMPOUT(0x241299AB0);
}

void sub_241299AEC()
{
  JUMPOUT(0x241299AB0);
}

void sub_241299B04()
{
  JUMPOUT(0x241299AB0);
}

void sub_241299B24()
{
  JUMPOUT(0x241299AB0);
}

void sub_241299B54()
{
  JUMPOUT(0x241299AB0);
}

void RoutingControl.RoutingControlType.hash(into:)()
{
  __asm { BR              X10 }
}

void sub_241299B9C()
{
  sub_2412A8D68();
  sub_2412A8D8C();
  OUTLINED_FUNCTION_44();
}

void sub_241299C18()
{
  JUMPOUT(0x241299C0CLL);
}

void sub_241299C20()
{
  JUMPOUT(0x241299C0CLL);
}

void sub_241299C28()
{
  JUMPOUT(0x241299C0CLL);
}

void sub_241299C30()
{
  JUMPOUT(0x241299C0CLL);
}

void sub_241299C38()
{
  JUMPOUT(0x241299C0CLL);
}

void sub_241299C40()
{
  JUMPOUT(0x241299C0CLL);
}

void sub_241299C48()
{
  JUMPOUT(0x241299C0CLL);
}

void sub_241299C50()
{
  JUMPOUT(0x241299C0CLL);
}

uint64_t static RoutingControl.RoutingControlType.== infix(_:_:)(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_241299C80 + 4 * byte_2412AFE49[*(unsigned __int8 *)(a1 + 8)]))();
}

BOOL sub_241299C80@<W0>(double a1@<X8>)
{
  double v1;
  int v2;

  return !v2 && v1 == a1;
}

uint64_t sub_241299D8C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6C6576656CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_241299E08()
{
  return 0x6C6576656CLL;
}

uint64_t sub_241299E1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v18;

  v2 = a1 == 0x73756F6976657270 && a2 == 0xED00006B63617254;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x636172547478656ELL && a2 == 0xE90000000000006BLL;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 2036427888 && a2 == 0xE400000000000000;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6573756170 && a2 == 0xE500000000000000;
        if (v8 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x646E69776572 && a2 == 0xE600000000000000;
          if (v9 || (sub_2412A8CFC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x77726F4674736166 && a2 == 0xEB00000000647261;
            if (v10 || (sub_2412A8CFC() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x77726F4670696B73 && a2 == 0xEB00000000647261;
              if (v11 || (sub_2412A8CFC() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6B63614270696B73 && a2 == 0xEC00000064726177;
                if (v12 || (sub_2412A8CFC() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x65746F6D65527674 && a2 == 0xE800000000000000;
                  if (v13 || (sub_2412A8CFC() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x657469726F766166 && a2 == 0xE800000000000000;
                    if (v14 || (sub_2412A8CFC() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x6574756C6F736261 && a2 == 0xEE00656D756C6F56;
                      if (v15 || (sub_2412A8CFC() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x65766974616C6572 && a2 == 0xEE00656D756C6F56;
                        if (v16 || (sub_2412A8CFC() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else if (a1 == 1702131053 && a2 == 0xE400000000000000)
                        {
                          swift_bridgeObjectRelease();
                          return 12;
                        }
                        else
                        {
                          v18 = sub_2412A8CFC();
                          swift_bridgeObjectRelease();
                          if ((v18 & 1) != 0)
                            return 12;
                          else
                            return 13;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_24129A3A4()
{
  return 13;
}

uint64_t sub_24129A3AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24129A3EC + 4 * byte_2412AFE57[a1]))(0x73756F6976657270, 0xED00006B63617254);
}

uint64_t sub_24129A3EC()
{
  return 0x636172547478656ELL;
}

uint64_t sub_24129A408()
{
  return 2036427888;
}

uint64_t sub_24129A418()
{
  return 0x6573756170;
}

uint64_t sub_24129A42C()
{
  return 0x646E69776572;
}

uint64_t sub_24129A440()
{
  return 0x77726F4674736166;
}

uint64_t sub_24129A46C()
{
  return 0x6B63614270696B73;
}

uint64_t sub_24129A48C()
{
  return 0x65746F6D65527674;
}

uint64_t sub_24129A4B8()
{
  return 0x6574756C6F736261;
}

uint64_t sub_24129A4F0()
{
  return 1702131053;
}

uint64_t sub_24129A500(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656D7473756A6461 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24129A590()
{
  return 0x656D7473756A6461;
}

void sub_24129A5AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_210();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_85();
  }
  OUTLINED_FUNCTION_44();
}

uint64_t sub_24129A614()
{
  return 0x6C61767265746E69;
}

uint64_t sub_24129A630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241299D8C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24129A658()
{
  sub_24129D264();
  return sub_2412A8DBC();
}

uint64_t sub_24129A680()
{
  sub_24129D264();
  return sub_2412A8DC8();
}

uint64_t sub_24129A6A8()
{
  unsigned __int8 *v0;

  return sub_24129A3AC(*v0);
}

uint64_t sub_24129A6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_241299E1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24129A6D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24129A3A4();
  *a1 = result;
  return result;
}

uint64_t sub_24129A6F8()
{
  sub_24129D4F8();
  return sub_2412A8DBC();
}

uint64_t sub_24129A720()
{
  sub_24129D4F8();
  return sub_2412A8DC8();
}

uint64_t sub_24129A748()
{
  sub_24129D390();
  return sub_2412A8DBC();
}

uint64_t sub_24129A770()
{
  sub_24129D390();
  return sub_2412A8DC8();
}

uint64_t sub_24129A798()
{
  sub_24129D2A0();
  return sub_2412A8DBC();
}

uint64_t sub_24129A7C0()
{
  sub_24129D2A0();
  return sub_2412A8DC8();
}

uint64_t sub_24129A7E8()
{
  sub_24129D1EC();
  return sub_2412A8DBC();
}

uint64_t sub_24129A810()
{
  sub_24129D1EC();
  return sub_2412A8DC8();
}

uint64_t sub_24129A838()
{
  sub_24129D480();
  return sub_2412A8DBC();
}

uint64_t sub_24129A860()
{
  sub_24129D480();
  return sub_2412A8DC8();
}

uint64_t sub_24129A888()
{
  sub_24129D408();
  return sub_2412A8DBC();
}

uint64_t sub_24129A8B0()
{
  sub_24129D408();
  return sub_2412A8DC8();
}

uint64_t sub_24129A8D8()
{
  sub_24129D444();
  return sub_2412A8DBC();
}

uint64_t sub_24129A900()
{
  sub_24129D444();
  return sub_2412A8DC8();
}

uint64_t sub_24129A928()
{
  sub_24129D4BC();
  return sub_2412A8DBC();
}

uint64_t sub_24129A950()
{
  sub_24129D4BC();
  return sub_2412A8DC8();
}

uint64_t sub_24129A97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24129A500(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24129A9A4()
{
  sub_24129D228();
  return sub_2412A8DBC();
}

uint64_t sub_24129A9CC()
{
  sub_24129D228();
  return sub_2412A8DC8();
}

uint64_t sub_24129A9F4()
{
  sub_24129D3CC();
  return sub_2412A8DBC();
}

uint64_t sub_24129AA1C()
{
  sub_24129D3CC();
  return sub_2412A8DC8();
}

uint64_t sub_24129AA48()
{
  sub_24129D318();
  return sub_2412A8DBC();
}

uint64_t sub_24129AA70()
{
  sub_24129D318();
  return sub_2412A8DC8();
}

void sub_24129AA98(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_24129A5AC(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_24129AAC0()
{
  sub_24129D354();
  return sub_2412A8DBC();
}

uint64_t sub_24129AAE8()
{
  sub_24129D354();
  return sub_2412A8DC8();
}

uint64_t sub_24129AB10()
{
  sub_24129D2DC();
  return sub_2412A8DBC();
}

uint64_t sub_24129AB38()
{
  sub_24129D2DC();
  return sub_2412A8DC8();
}

void RoutingControl.RoutingControlType.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  OUTLINED_FUNCTION_99_1();
  a19 = v21;
  a20 = v22;
  v23 = v20;
  v25 = (_QWORD *)v24;
  v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_14_4(v24, &qword_257106538, (uint64_t (*)(void))sub_24129D1EC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.MuteCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_14_4(v28, &qword_257106548, (uint64_t (*)(void))sub_24129D228, (uint64_t)&type metadata for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_196_0(v30, v68);
  OUTLINED_FUNCTION_14_4(v31, &qword_257106558, (uint64_t (*)(void))sub_24129D264, (uint64_t)&type metadata for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_198_0(v33, v69);
  OUTLINED_FUNCTION_14_4(v34, &qword_257106568, (uint64_t (*)(void))sub_24129D2A0, (uint64_t)&type metadata for RoutingControl.RoutingControlType.FavoriteCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v36);
  OUTLINED_FUNCTION_14_4(v37, &qword_257106578, (uint64_t (*)(void))sub_24129D2DC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.TvRemoteCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v39);
  OUTLINED_FUNCTION_14_4(v40, &qword_257106588, (uint64_t (*)(void))sub_24129D318, (uint64_t)&type metadata for RoutingControl.RoutingControlType.SkipBackwardCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_154(v42, v70);
  OUTLINED_FUNCTION_14_4(v43, &qword_257106598, (uint64_t (*)(void))sub_24129D354, (uint64_t)&type metadata for RoutingControl.RoutingControlType.SkipForwardCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_197_0(v45, v71);
  OUTLINED_FUNCTION_14_4(v46, &qword_2571065A8, (uint64_t (*)(void))sub_24129D390, (uint64_t)&type metadata for RoutingControl.RoutingControlType.FastForwardCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v48);
  OUTLINED_FUNCTION_14_4(v49, &qword_2571065B8, (uint64_t (*)(void))sub_24129D3CC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.RewindCodingKeys);
  OUTLINED_FUNCTION_57_1(v50, (uint64_t)&a9);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v52);
  OUTLINED_FUNCTION_14_4(v53, &qword_2571065C8, (uint64_t (*)(void))sub_24129D408, (uint64_t)&type metadata for RoutingControl.RoutingControlType.PauseCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v55);
  OUTLINED_FUNCTION_14_4(v56, &qword_2571065D8, (uint64_t (*)(void))sub_24129D444, (uint64_t)&type metadata for RoutingControl.RoutingControlType.PlayCodingKeys);
  OUTLINED_FUNCTION_57_1(v57, (uint64_t)&v72);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v59);
  OUTLINED_FUNCTION_14_4(v60, &qword_2571065E8, (uint64_t (*)(void))sub_24129D480, (uint64_t)&type metadata for RoutingControl.RoutingControlType.NextTrackCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_63_0(v62);
  OUTLINED_FUNCTION_14_4(v63, &qword_2571065F8, (uint64_t (*)(void))sub_24129D4BC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.PreviousTrackCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_43_3();
  sub_24127C278(0, &qword_257106608, (uint64_t (*)(void))sub_24129D4F8, (uint64_t)&type metadata for RoutingControl.RoutingControlType.CodingKeys, v26);
  v72 = v65;
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_85_0();
  v67 = *(unsigned __int8 *)(v23 + 8);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  sub_24129D4F8();
  sub_2412A8DB0();
  __asm { BR              X9 }
}

void sub_24129AFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_211();
  v1 = *(_QWORD *)(v0 - 208);
  v2 = *(_QWORD *)(v0 - 120);
  OUTLINED_FUNCTION_14_3();
  v3 = *(_QWORD *)(v0 - 200);
  OUTLINED_FUNCTION_181();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 232) + 8))(v1, v3);
  OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 136) + 8));
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_19_4();
}

void sub_24129B2A0()
{
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_13_4();
  JUMPOUT(0x24129B27CLL);
}

uint64_t RoutingControl.RoutingControlType.hashValue.getter()
{
  OUTLINED_FUNCTION_46_0();
  RoutingControl.RoutingControlType.hash(into:)();
  return OUTLINED_FUNCTION_39_2();
}

void RoutingControl.RoutingControlType.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;

  OUTLINED_FUNCTION_99_1();
  a19 = v22;
  a20 = v23;
  v25 = (_QWORD *)v24;
  OUTLINED_FUNCTION_5_5(v24, &qword_257106620, (uint64_t (*)(void))sub_24129D1EC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.MuteCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_5_5(v27, &qword_257106628, (uint64_t (*)(void))sub_24129D228, (uint64_t)&type metadata for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_198_0(v29, v77);
  OUTLINED_FUNCTION_5_5(v30, &qword_257106630, (uint64_t (*)(void))sub_24129D264, (uint64_t)&type metadata for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_196_0(v32, v78);
  OUTLINED_FUNCTION_5_5(v33, &qword_257106638, (uint64_t (*)(void))sub_24129D2A0, (uint64_t)&type metadata for RoutingControl.RoutingControlType.FavoriteCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_5_5(v35, &qword_257106640, (uint64_t (*)(void))sub_24129D2DC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.TvRemoteCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_154(v37, v79);
  OUTLINED_FUNCTION_5_5(v38, &qword_257106648, (uint64_t (*)(void))sub_24129D318, (uint64_t)&type metadata for RoutingControl.RoutingControlType.SkipBackwardCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_5_5(v40, &qword_257106650, (uint64_t (*)(void))sub_24129D354, (uint64_t)&type metadata for RoutingControl.RoutingControlType.SkipForwardCodingKeys);
  OUTLINED_FUNCTION_57_1(v41, (uint64_t)&a13);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_59_2(v43, v80);
  OUTLINED_FUNCTION_5_5(v44, &qword_257106658, (uint64_t (*)(void))sub_24129D390, (uint64_t)&type metadata for RoutingControl.RoutingControlType.FastForwardCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_197_0(v46, v81);
  OUTLINED_FUNCTION_5_5(v47, &qword_257106660, (uint64_t (*)(void))sub_24129D3CC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.RewindCodingKeys);
  OUTLINED_FUNCTION_57_1(v48, (uint64_t)&a10);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_5_5(v50, &qword_257106668, (uint64_t (*)(void))sub_24129D408, (uint64_t)&type metadata for RoutingControl.RoutingControlType.PauseCodingKeys);
  OUTLINED_FUNCTION_57_1(v51, (uint64_t)&v84);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_5_5(v53, &qword_257106670, (uint64_t (*)(void))sub_24129D444, (uint64_t)&type metadata for RoutingControl.RoutingControlType.PlayCodingKeys);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_5_5(v55, &qword_257106678, (uint64_t (*)(void))sub_24129D480, (uint64_t)&type metadata for RoutingControl.RoutingControlType.NextTrackCodingKeys);
  OUTLINED_FUNCTION_57_1(v56, (uint64_t)&v82);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_5_5(v58, &qword_257106680, (uint64_t (*)(void))sub_24129D4BC, (uint64_t)&type metadata for RoutingControl.RoutingControlType.PreviousTrackCodingKeys);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_43_3();
  OUTLINED_FUNCTION_11_6(0, &qword_257106688, (uint64_t (*)(void))sub_24129D4F8, (uint64_t)&type metadata for RoutingControl.RoutingControlType.CodingKeys);
  v61 = v60;
  v62 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_41_2();
  v64 = v25[3];
  v82 = v25;
  __swift_project_boxed_opaque_existential_1(v25, v64);
  sub_24129D4F8();
  OUTLINED_FUNCTION_106();
  sub_2412A8DA4();
  if (v20)
  {
    v65 = (uint64_t)v82;
  }
  else
  {
    v83 = v61;
    v66 = v21;
    v67 = sub_2412A8C24();
    if (*(_QWORD *)(v67 + 16))
    {
      v68 = *(unsigned __int8 *)(v67 + 32);
      sub_24127AA78(1);
      v70 = v69;
      v72 = v71;
      OUTLINED_FUNCTION_53_2();
      if (v70 == v72 >> 1)
        __asm { BR              X9 }
      v65 = (uint64_t)v82;
      v66 = v21;
    }
    else
    {
      v65 = (uint64_t)v82;
    }
    v73 = OUTLINED_FUNCTION_95_1();
    OUTLINED_FUNCTION_12();
    v75 = v74;
    sub_2412741B0();
    *v75 = &type metadata for RoutingControl.RoutingControlType;
    v76 = v83;
    sub_2412A8B88();
    OUTLINED_FUNCTION_88_0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v75, *MEMORY[0x24BEE26D0], v73);
    OUTLINED_FUNCTION_177_0();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v66, v76);
  }
  __swift_destroy_boxed_opaque_existential_0(v65);
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_19_4();
}

void sub_24129B904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  uint64_t v5;

  OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_3_4();
  if (v0)
  {
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    v3 = OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_79_0(v3, v4);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v5 = *(_QWORD *)(v2 - 152);
    *(_QWORD *)v5 = 1;
    *(_BYTE *)(v5 + 8) = 4;
  }
  JUMPOUT(0x24129B8F0);
}

void sub_24129B954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  uint64_t v5;

  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_3_4();
  if (v0)
  {
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    v3 = OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_79_0(v3, v4);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v5 = *(_QWORD *)(v2 - 152);
    *(_QWORD *)v5 = 2;
    *(_BYTE *)(v5 + 8) = 4;
  }
  JUMPOUT(0x24129B8F0);
}

void sub_24129B9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  uint64_t v5;

  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_3_4();
  if (v0)
  {
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    v3 = OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_79_0(v3, v4);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v5 = *(_QWORD *)(v2 - 152);
    *(_QWORD *)v5 = 3;
    *(_BYTE *)(v5 + 8) = 4;
  }
  JUMPOUT(0x24129B8F0);
}

void sub_24129B9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_202();
  OUTLINED_FUNCTION_3_4();
  if (!v0)
  {
    v2 = OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_79_0(v2, v3);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    JUMPOUT(0x24129BA3CLL);
  }
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  JUMPOUT(0x24129B8F0);
}

void sub_24129BA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, _QWORD);
  uint64_t v5;

  OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_3_4();
  if (v0)
  {
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    v3 = OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_79_0(v3, v4);
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v5 = *(_QWORD *)(v2 - 152);
    *(_QWORD *)v5 = 5;
    *(_BYTE *)(v5 + 8) = 4;
  }
  JUMPOUT(0x24129B8F0);
}

void sub_24129BA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_3_4();
  if (v0)
  {
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_28_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  else
  {
    sub_2412A8BDC();
    OUTLINED_FUNCTION_214();
    v6 = v5;
    OUTLINED_FUNCTION_39_3(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 424) + 8));
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_28_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v7 = *(_QWORD *)(v4 - 152);
    *(_QWORD *)v7 = v6;
    *(_BYTE *)(v7 + 8) = 0;
  }
  JUMPOUT(0x24129B8F0);
}

void sub_24129BC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_213();
  v4 = *(_QWORD *)(v3 - 168);
  OUTLINED_FUNCTION_3_4();
  if (v0)
    JUMPOUT(0x24129BC98);
  OUTLINED_FUNCTION_39_3(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_26_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  JUMPOUT(0x24129BD34);
}

uint64_t sub_24129BE00()
{
  sub_2412A8D5C();
  RoutingControl.RoutingControlType.hash(into:)();
  return sub_2412A8D98();
}

#error "24129BE54: call analysis failed (funcsize=5)"

#error "24129BE68: call analysis failed (funcsize=5)"

void RoutingControl.type.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t RoutingControl.type.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*RoutingControl.type.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingControl.sessionIdentifier.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_166_0();
    OUTLINED_FUNCTION_44();
  }
}

void RoutingControl.itemIdentifier.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 32) == 1)
  {
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_166_0();
    OUTLINED_FUNCTION_44();
  }
  else
  {
    __break(1u);
  }
}

uint64_t RoutingControl.target.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return OUTLINED_FUNCTION_143();
}

void RoutingControl.target.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  sub_24125F80C();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControl.target.modify())(_QWORD)
{
  return nullsub_1;
}

void RoutingControl.identifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_44();
}

void RoutingControl.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  OUTLINED_FUNCTION_37_0();
}

uint64_t (*RoutingControl.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t RoutingControl.description.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 32);
  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_121_1();
  sub_2412A88DC();
  OUTLINED_FUNCTION_134();
  sub_2412A88DC();
  RoutingControl.RoutingControlType.description.getter();
  sub_2412A88DC();
  OUTLINED_FUNCTION_23_2();
  sub_2412A88DC();
  if ((v1 & 1) != 0)
    OUTLINED_FUNCTION_192_0();
  else
    OUTLINED_FUNCTION_142_0();
  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_171_0();
  sub_2412A88DC();
  OUTLINED_FUNCTION_90_1();
  sub_2412A88DC();
  OUTLINED_FUNCTION_23_2();
  OUTLINED_FUNCTION_171_0();
  sub_24125F80C();
  OUTLINED_FUNCTION_42();
  return 0xD00000000000001ELL;
}

uint64_t RoutingControl.hash(into:)()
{
  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_227();
  OUTLINED_FUNCTION_45_3();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_173_0();
  return OUTLINED_FUNCTION_68_1();
}

uint64_t sub_24129C168(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x746567726174 && a2 == 0xE600000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2412A8CFC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_24129C2A8(char a1)
{
  if (!a1)
    return 1701869940;
  if (a1 == 1)
    return 0x746567726174;
  return 0x696669746E656469;
}

uint64_t sub_24129C2F8()
{
  char *v0;

  return sub_24129C2A8(*v0);
}

uint64_t sub_24129C300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24129C168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24129C324()
{
  sub_24129D5AC();
  return sub_2412A8DBC();
}

uint64_t sub_24129C34C()
{
  sub_24129D5AC();
  return sub_2412A8DC8();
}

void RoutingControl.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_64_2(v2, &qword_257106698, (uint64_t (*)(void))sub_24129D5AC, (uint64_t)&type metadata for RoutingControl.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_41_2();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24129D5AC();
  OUTLINED_FUNCTION_106();
  sub_2412A8DB0();
  sub_24129D5E8();
  OUTLINED_FUNCTION_200_0();
  sub_2412A8CB4();
  if (!v0)
  {
    sub_24129D624();
    OUTLINED_FUNCTION_200_0();
    sub_2412A8CB4();
    sub_2412A8C78();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_0_1();
}

void RoutingControl.hashValue.getter()
{
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_145_0();
  sub_2412A8D68();
  sub_2412A88B8();
  OUTLINED_FUNCTION_121_1();
  OUTLINED_FUNCTION_235();
  OUTLINED_FUNCTION_134();
  sub_2412A8D98();
  OUTLINED_FUNCTION_126();
}

void RoutingControl.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  OUTLINED_FUNCTION_1_2();
  v2 = v1;
  v25 = v3;
  sub_24127C278(0, &qword_2571066B8, (uint64_t (*)(void))sub_24129D5AC, (uint64_t)&type metadata for RoutingControl.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - v7;
  sub_24127B274(15);
  v26 = v9;
  OUTLINED_FUNCTION_88_2();
  sub_24129D5AC();
  OUTLINED_FUNCTION_66_0();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    v10 = v25;
    sub_24129D660();
    OUTLINED_FUNCTION_108_0();
    v11 = v27;
    v12 = v28;
    sub_24129D69C();
    OUTLINED_FUNCTION_108_0();
    v22 = v12;
    v23 = v11;
    v13 = v27;
    v14 = v28;
    LOBYTE(v11) = v29;
    LOBYTE(v27) = 2;
    v24 = v13;
    OUTLINED_FUNCTION_223();
    v15 = sub_2412A8BC4();
    v17 = v16;
    v18 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    v21 = v15;
    OUTLINED_FUNCTION_110_1((uint64_t)v8, v18);
    OUTLINED_FUNCTION_82_0();
    swift_bridgeObjectRelease();
    v19 = v24;
    OUTLINED_FUNCTION_223();
    sub_24125F80C();
    *(_QWORD *)v10 = v23;
    *(_BYTE *)(v10 + 8) = v22;
    *(_QWORD *)(v10 + 16) = v19;
    *(_QWORD *)(v10 + 24) = v14;
    *(_BYTE *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v21;
    *(_QWORD *)(v10 + 48) = v17;
    __swift_destroy_boxed_opaque_existential_0(v2);
    sub_24125F80C();
  }
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_24129C784()
{
  sub_2412A8D5C();
  RoutingControl.RoutingControlType.hash(into:)();
  sub_2412A8D68();
  sub_2412A88B8();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  return sub_2412A8D98();
}

void sub_24129C830()
{
  RoutingControl.init(from:)();
}

void sub_24129C844()
{
  RoutingControl.encode(to:)();
}

unint64_t sub_24129C860()
{
  unint64_t result;

  result = qword_2571062F8;
  if (!qword_2571062F8)
  {
    result = MEMORY[0x242691F34](&unk_2412B301C, &type metadata for RoutingControls.AbsoluteVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571062F8);
  }
  return result;
}

unint64_t sub_24129C89C()
{
  unint64_t result;

  result = qword_257106300;
  if (!qword_257106300)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.AbsoluteVolumeControl.Target, &type metadata for RoutingControls.AbsoluteVolumeControl.Target);
    atomic_store(result, (unint64_t *)&qword_257106300);
  }
  return result;
}

unint64_t sub_24129C8D8()
{
  unint64_t result;

  result = qword_257106310;
  if (!qword_257106310)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.AbsoluteVolumeControl.Target, &type metadata for RoutingControls.AbsoluteVolumeControl.Target);
    atomic_store(result, (unint64_t *)&qword_257106310);
  }
  return result;
}

unint64_t sub_24129C914()
{
  unint64_t result;

  result = qword_257106320;
  if (!qword_257106320)
  {
    result = MEMORY[0x242691F34](&unk_2412B2FCC, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.DecreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106320);
  }
  return result;
}

unint64_t sub_24129C950()
{
  unint64_t result;

  result = qword_257106330;
  if (!qword_257106330)
  {
    result = MEMORY[0x242691F34](&unk_2412B2F7C, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.IncreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106330);
  }
  return result;
}

unint64_t sub_24129C98C()
{
  unint64_t result;

  result = qword_257106340;
  if (!qword_257106340)
  {
    result = MEMORY[0x242691F34](&unk_2412B2F2C, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106340);
  }
  return result;
}

unint64_t sub_24129C9C8()
{
  unint64_t result;

  result = qword_257106368;
  if (!qword_257106368)
  {
    result = MEMORY[0x242691F34](&unk_2412B2EDC, &type metadata for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106368);
  }
  return result;
}

unint64_t sub_24129CA04()
{
  unint64_t result;

  result = qword_257106378;
  if (!qword_257106378)
  {
    result = MEMORY[0x242691F34](&unk_2412B2E8C, &type metadata for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106378);
  }
  return result;
}

unint64_t sub_24129CA40()
{
  unint64_t result;

  result = qword_257106388;
  if (!qword_257106388)
  {
    result = MEMORY[0x242691F34](&unk_2412B2E3C, &type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106388);
  }
  return result;
}

unint64_t sub_24129CA7C()
{
  unint64_t result;

  result = qword_2571063B0;
  if (!qword_2571063B0)
  {
    result = MEMORY[0x242691F34](&unk_2412B2DEC, &type metadata for RoutingControls.RelativeVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571063B0);
  }
  return result;
}

unint64_t sub_24129CAB8()
{
  unint64_t result;

  result = qword_2571063B8;
  if (!qword_2571063B8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl.Target, &type metadata for RoutingControls.RelativeVolumeControl.Target);
    atomic_store(result, (unint64_t *)&qword_2571063B8);
  }
  return result;
}

unint64_t sub_24129CAF4()
{
  unint64_t result;

  result = qword_2571063C8;
  if (!qword_2571063C8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl.Target, &type metadata for RoutingControls.RelativeVolumeControl.Target);
    atomic_store(result, (unint64_t *)&qword_2571063C8);
  }
  return result;
}

unint64_t sub_24129CB30()
{
  unint64_t result;

  result = qword_2571063D8;
  if (!qword_2571063D8)
  {
    result = MEMORY[0x242691F34](&unk_2412B2D9C, &type metadata for RoutingControls.SkipForwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571063D8);
  }
  return result;
}

void sub_24129CB6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571063E0)
  {
    v0 = sub_2412A8948();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571063E0);
  }
}

uint64_t sub_24129CBB4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_24129CB6C();
    v8 = a2;
    result = MEMORY[0x242691F34](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24129CC10()
{
  unint64_t result;

  result = qword_257106408;
  if (!qword_257106408)
  {
    result = MEMORY[0x242691F34](&unk_2412B2D4C, &type metadata for RoutingControls.SkipBackwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106408);
  }
  return result;
}

unint64_t sub_24129CC4C()
{
  unint64_t result;

  result = qword_257106420;
  if (!qword_257106420)
  {
    result = MEMORY[0x242691F34](&unk_2412B2CFC, &type metadata for RoutingControls.TVRemoteControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106420);
  }
  return result;
}

unint64_t sub_24129CC88()
{
  unint64_t result;

  result = qword_257106438;
  if (!qword_257106438)
  {
    result = MEMORY[0x242691F34](&unk_2412B2CAC, &type metadata for RoutingControls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106438);
  }
  return result;
}

unint64_t sub_24129CCC4()
{
  unint64_t result;

  result = qword_257106440;
  if (!qword_257106440)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PlayControl, &type metadata for RoutingControls.PlayControl);
    atomic_store(result, (unint64_t *)&qword_257106440);
  }
  return result;
}

unint64_t sub_24129CD00()
{
  unint64_t result;

  result = qword_257106448;
  if (!qword_257106448)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PauseControl, &type metadata for RoutingControls.PauseControl);
    atomic_store(result, (unint64_t *)&qword_257106448);
  }
  return result;
}

unint64_t sub_24129CD3C()
{
  unint64_t result;

  result = qword_257106450;
  if (!qword_257106450)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.SkipForwardControl, &type metadata for RoutingControls.SkipForwardControl);
    atomic_store(result, (unint64_t *)&qword_257106450);
  }
  return result;
}

unint64_t sub_24129CD78()
{
  unint64_t result;

  result = qword_257106458;
  if (!qword_257106458)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.SkipBackwardControl, &type metadata for RoutingControls.SkipBackwardControl);
    atomic_store(result, (unint64_t *)&qword_257106458);
  }
  return result;
}

unint64_t sub_24129CDB4()
{
  unint64_t result;

  result = qword_257106460;
  if (!qword_257106460)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.NextTrackControl, &type metadata for RoutingControls.NextTrackControl);
    atomic_store(result, (unint64_t *)&qword_257106460);
  }
  return result;
}

unint64_t sub_24129CDF0()
{
  unint64_t result;

  result = qword_257106468;
  if (!qword_257106468)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PreviousTrackControl, &type metadata for RoutingControls.PreviousTrackControl);
    atomic_store(result, (unint64_t *)&qword_257106468);
  }
  return result;
}

unint64_t sub_24129CE2C()
{
  unint64_t result;

  result = qword_257106470;
  if (!qword_257106470)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.AbsoluteVolumeControl, &type metadata for RoutingControls.AbsoluteVolumeControl);
    atomic_store(result, (unint64_t *)&qword_257106470);
  }
  return result;
}

unint64_t sub_24129CE68()
{
  unint64_t result;

  result = qword_257106478;
  if (!qword_257106478)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl, &type metadata for RoutingControls.RelativeVolumeControl);
    atomic_store(result, (unint64_t *)&qword_257106478);
  }
  return result;
}

unint64_t sub_24129CEA4()
{
  unint64_t result;

  result = qword_257106480;
  if (!qword_257106480)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.TVRemoteControl, &type metadata for RoutingControls.TVRemoteControl);
    atomic_store(result, (unint64_t *)&qword_257106480);
  }
  return result;
}

unint64_t sub_24129CEE0()
{
  unint64_t result;

  result = qword_257106490;
  if (!qword_257106490)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PlayControl, &type metadata for RoutingControls.PlayControl);
    atomic_store(result, (unint64_t *)&qword_257106490);
  }
  return result;
}

unint64_t sub_24129CF1C()
{
  unint64_t result;

  result = qword_257106498;
  if (!qword_257106498)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PauseControl, &type metadata for RoutingControls.PauseControl);
    atomic_store(result, (unint64_t *)&qword_257106498);
  }
  return result;
}

unint64_t sub_24129CF58()
{
  unint64_t result;

  result = qword_2571064A0;
  if (!qword_2571064A0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.SkipForwardControl, &type metadata for RoutingControls.SkipForwardControl);
    atomic_store(result, (unint64_t *)&qword_2571064A0);
  }
  return result;
}

unint64_t sub_24129CF94()
{
  unint64_t result;

  result = qword_2571064A8;
  if (!qword_2571064A8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.SkipBackwardControl, &type metadata for RoutingControls.SkipBackwardControl);
    atomic_store(result, (unint64_t *)&qword_2571064A8);
  }
  return result;
}

unint64_t sub_24129CFD0()
{
  unint64_t result;

  result = qword_2571064B0;
  if (!qword_2571064B0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.NextTrackControl, &type metadata for RoutingControls.NextTrackControl);
    atomic_store(result, (unint64_t *)&qword_2571064B0);
  }
  return result;
}

unint64_t sub_24129D00C()
{
  unint64_t result;

  result = qword_2571064B8;
  if (!qword_2571064B8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PreviousTrackControl, &type metadata for RoutingControls.PreviousTrackControl);
    atomic_store(result, (unint64_t *)&qword_2571064B8);
  }
  return result;
}

unint64_t sub_24129D048()
{
  unint64_t result;

  result = qword_2571064C0;
  if (!qword_2571064C0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.AbsoluteVolumeControl, &type metadata for RoutingControls.AbsoluteVolumeControl);
    atomic_store(result, (unint64_t *)&qword_2571064C0);
  }
  return result;
}

unint64_t sub_24129D084()
{
  unint64_t result;

  result = qword_2571064C8;
  if (!qword_2571064C8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl, &type metadata for RoutingControls.RelativeVolumeControl);
    atomic_store(result, (unint64_t *)&qword_2571064C8);
  }
  return result;
}

unint64_t sub_24129D0C0()
{
  unint64_t result;

  result = qword_2571064D0;
  if (!qword_2571064D0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.TVRemoteControl, &type metadata for RoutingControls.TVRemoteControl);
    atomic_store(result, (unint64_t *)&qword_2571064D0);
  }
  return result;
}

unint64_t sub_24129D0FC()
{
  unint64_t result;

  result = qword_2571064E0;
  if (!qword_2571064E0)
  {
    result = MEMORY[0x242691F34](&unk_2412B2C5C, &type metadata for ContinuousRoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571064E0);
  }
  return result;
}

unint64_t sub_24129D138()
{
  unint64_t result;

  result = qword_2571064F8;
  if (!qword_2571064F8)
  {
    result = MEMORY[0x242691F34](&unk_2412B2C0C, &type metadata for RoutingControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571064F8);
  }
  return result;
}

unint64_t sub_24129D174()
{
  unint64_t result;

  result = qword_257106508;
  if (!qword_257106508)
  {
    result = MEMORY[0x242691F34](&unk_2412B2BBC, &type metadata for RoutingControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106508);
  }
  return result;
}

unint64_t sub_24129D1B0()
{
  unint64_t result;

  result = qword_257106518;
  if (!qword_257106518)
  {
    result = MEMORY[0x242691F34](&unk_2412B2B6C, &type metadata for RoutingControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106518);
  }
  return result;
}

unint64_t sub_24129D1EC()
{
  unint64_t result;

  result = qword_257106540;
  if (!qword_257106540)
  {
    result = MEMORY[0x242691F34](&unk_2412B2B1C, &type metadata for RoutingControl.RoutingControlType.MuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106540);
  }
  return result;
}

unint64_t sub_24129D228()
{
  unint64_t result;

  result = qword_257106550;
  if (!qword_257106550)
  {
    result = MEMORY[0x242691F34](&unk_2412B2ACC, &type metadata for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106550);
  }
  return result;
}

unint64_t sub_24129D264()
{
  unint64_t result;

  result = qword_257106560;
  if (!qword_257106560)
  {
    result = MEMORY[0x242691F34](&unk_2412B2A7C, &type metadata for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106560);
  }
  return result;
}

unint64_t sub_24129D2A0()
{
  unint64_t result;

  result = qword_257106570;
  if (!qword_257106570)
  {
    result = MEMORY[0x242691F34](&unk_2412B2A2C, &type metadata for RoutingControl.RoutingControlType.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106570);
  }
  return result;
}

unint64_t sub_24129D2DC()
{
  unint64_t result;

  result = qword_257106580;
  if (!qword_257106580)
  {
    result = MEMORY[0x242691F34](&unk_2412B29DC, &type metadata for RoutingControl.RoutingControlType.TvRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106580);
  }
  return result;
}

unint64_t sub_24129D318()
{
  unint64_t result;

  result = qword_257106590;
  if (!qword_257106590)
  {
    result = MEMORY[0x242691F34](&unk_2412B298C, &type metadata for RoutingControl.RoutingControlType.SkipBackwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106590);
  }
  return result;
}

unint64_t sub_24129D354()
{
  unint64_t result;

  result = qword_2571065A0;
  if (!qword_2571065A0)
  {
    result = MEMORY[0x242691F34](&unk_2412B293C, &type metadata for RoutingControl.RoutingControlType.SkipForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571065A0);
  }
  return result;
}

unint64_t sub_24129D390()
{
  unint64_t result;

  result = qword_2571065B0;
  if (!qword_2571065B0)
  {
    result = MEMORY[0x242691F34](&unk_2412B28EC, &type metadata for RoutingControl.RoutingControlType.FastForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571065B0);
  }
  return result;
}

unint64_t sub_24129D3CC()
{
  unint64_t result;

  result = qword_2571065C0;
  if (!qword_2571065C0)
  {
    result = MEMORY[0x242691F34](&unk_2412B289C, &type metadata for RoutingControl.RoutingControlType.RewindCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571065C0);
  }
  return result;
}

unint64_t sub_24129D408()
{
  unint64_t result;

  result = qword_2571065D0;
  if (!qword_2571065D0)
  {
    result = MEMORY[0x242691F34](&unk_2412B284C, &type metadata for RoutingControl.RoutingControlType.PauseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571065D0);
  }
  return result;
}

unint64_t sub_24129D444()
{
  unint64_t result;

  result = qword_2571065E0;
  if (!qword_2571065E0)
  {
    result = MEMORY[0x242691F34](&unk_2412B27FC, &type metadata for RoutingControl.RoutingControlType.PlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571065E0);
  }
  return result;
}

unint64_t sub_24129D480()
{
  unint64_t result;

  result = qword_2571065F0;
  if (!qword_2571065F0)
  {
    result = MEMORY[0x242691F34](&unk_2412B27AC, &type metadata for RoutingControl.RoutingControlType.NextTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571065F0);
  }
  return result;
}

unint64_t sub_24129D4BC()
{
  unint64_t result;

  result = qword_257106600;
  if (!qword_257106600)
  {
    result = MEMORY[0x242691F34](&unk_2412B275C, &type metadata for RoutingControl.RoutingControlType.PreviousTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106600);
  }
  return result;
}

unint64_t sub_24129D4F8()
{
  unint64_t result;

  result = qword_257106610;
  if (!qword_257106610)
  {
    result = MEMORY[0x242691F34](&unk_2412B270C, &type metadata for RoutingControl.RoutingControlType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106610);
  }
  return result;
}

unint64_t sub_24129D534()
{
  unint64_t result;

  result = qword_257106618;
  if (!qword_257106618)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl.AdjustmentType, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType);
    atomic_store(result, (unint64_t *)&qword_257106618);
  }
  return result;
}

unint64_t sub_24129D570()
{
  unint64_t result;

  result = qword_257106690;
  if (!qword_257106690)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl.AdjustmentType, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType);
    atomic_store(result, (unint64_t *)&qword_257106690);
  }
  return result;
}

unint64_t sub_24129D5AC()
{
  unint64_t result;

  result = qword_2571066A0;
  if (!qword_2571066A0)
  {
    result = MEMORY[0x242691F34](&unk_2412B26BC, &type metadata for RoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571066A0);
  }
  return result;
}

unint64_t sub_24129D5E8()
{
  unint64_t result;

  result = qword_2571066A8;
  if (!qword_2571066A8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl.RoutingControlType, &type metadata for RoutingControl.RoutingControlType);
    atomic_store(result, (unint64_t *)&qword_2571066A8);
  }
  return result;
}

unint64_t sub_24129D624()
{
  unint64_t result;

  result = qword_2571066B0;
  if (!qword_2571066B0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl.Target, &type metadata for RoutingControl.Target);
    atomic_store(result, (unint64_t *)&qword_2571066B0);
  }
  return result;
}

unint64_t sub_24129D660()
{
  unint64_t result;

  result = qword_2571066C0;
  if (!qword_2571066C0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl.RoutingControlType, &type metadata for RoutingControl.RoutingControlType);
    atomic_store(result, (unint64_t *)&qword_2571066C0);
  }
  return result;
}

unint64_t sub_24129D69C()
{
  unint64_t result;

  result = qword_2571066C8;
  if (!qword_2571066C8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl.Target, &type metadata for RoutingControl.Target);
    atomic_store(result, (unint64_t *)&qword_2571066C8);
  }
  return result;
}

unint64_t sub_24129D6DC()
{
  unint64_t result;

  result = qword_2571066D0;
  if (!qword_2571066D0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PlayControl, &type metadata for RoutingControls.PlayControl);
    atomic_store(result, (unint64_t *)&qword_2571066D0);
  }
  return result;
}

unint64_t sub_24129D71C()
{
  unint64_t result;

  result = qword_2571066D8;
  if (!qword_2571066D8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PauseControl, &type metadata for RoutingControls.PauseControl);
    atomic_store(result, (unint64_t *)&qword_2571066D8);
  }
  return result;
}

unint64_t sub_24129D75C()
{
  unint64_t result;

  result = qword_2571066E0;
  if (!qword_2571066E0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.NextTrackControl, &type metadata for RoutingControls.NextTrackControl);
    atomic_store(result, (unint64_t *)&qword_2571066E0);
  }
  return result;
}

unint64_t sub_24129D79C()
{
  unint64_t result;

  result = qword_2571066E8;
  if (!qword_2571066E8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.PreviousTrackControl, &type metadata for RoutingControls.PreviousTrackControl);
    atomic_store(result, (unint64_t *)&qword_2571066E8);
  }
  return result;
}

unint64_t sub_24129D7DC()
{
  unint64_t result;

  result = qword_2571066F0;
  if (!qword_2571066F0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.AbsoluteVolumeControl.Target, &type metadata for RoutingControls.AbsoluteVolumeControl.Target);
    atomic_store(result, (unint64_t *)&qword_2571066F0);
  }
  return result;
}

unint64_t sub_24129D81C()
{
  unint64_t result;

  result = qword_2571066F8;
  if (!qword_2571066F8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.AbsoluteVolumeControl, &type metadata for RoutingControls.AbsoluteVolumeControl);
    atomic_store(result, (unint64_t *)&qword_2571066F8);
  }
  return result;
}

unint64_t sub_24129D85C()
{
  unint64_t result;

  result = qword_257106700;
  if (!qword_257106700)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl.AdjustmentType, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType);
    atomic_store(result, (unint64_t *)&qword_257106700);
  }
  return result;
}

unint64_t sub_24129D89C()
{
  unint64_t result;

  result = qword_257106708;
  if (!qword_257106708)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl.Target, &type metadata for RoutingControls.RelativeVolumeControl.Target);
    atomic_store(result, (unint64_t *)&qword_257106708);
  }
  return result;
}

unint64_t sub_24129D8DC()
{
  unint64_t result;

  result = qword_257106710;
  if (!qword_257106710)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.RelativeVolumeControl, &type metadata for RoutingControls.RelativeVolumeControl);
    atomic_store(result, (unint64_t *)&qword_257106710);
  }
  return result;
}

unint64_t sub_24129D91C()
{
  unint64_t result;

  result = qword_257106718;
  if (!qword_257106718)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.SkipForwardControl, &type metadata for RoutingControls.SkipForwardControl);
    atomic_store(result, (unint64_t *)&qword_257106718);
  }
  return result;
}

unint64_t sub_24129D95C()
{
  unint64_t result;

  result = qword_257106720;
  if (!qword_257106720)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.SkipBackwardControl, &type metadata for RoutingControls.SkipBackwardControl);
    atomic_store(result, (unint64_t *)&qword_257106720);
  }
  return result;
}

unint64_t sub_24129D99C()
{
  unint64_t result;

  result = qword_257106728;
  if (!qword_257106728)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls.TVRemoteControl, &type metadata for RoutingControls.TVRemoteControl);
    atomic_store(result, (unint64_t *)&qword_257106728);
  }
  return result;
}

unint64_t sub_24129D9DC()
{
  unint64_t result;

  result = qword_257106730;
  if (!qword_257106730)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControls, &type metadata for RoutingControls);
    atomic_store(result, (unint64_t *)&qword_257106730);
  }
  return result;
}

unint64_t sub_24129DA1C()
{
  unint64_t result;

  result = qword_257106738;
  if (!qword_257106738)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for ContinuousRoutingControl, &type metadata for ContinuousRoutingControl);
    atomic_store(result, (unint64_t *)&qword_257106738);
  }
  return result;
}

unint64_t sub_24129DA5C()
{
  unint64_t result;

  result = qword_257106740;
  if (!qword_257106740)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl.Target, &type metadata for RoutingControl.Target);
    atomic_store(result, (unint64_t *)&qword_257106740);
  }
  return result;
}

unint64_t sub_24129DA9C()
{
  unint64_t result;

  result = qword_257106748;
  if (!qword_257106748)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl.RoutingControlType, &type metadata for RoutingControl.RoutingControlType);
    atomic_store(result, (unint64_t *)&qword_257106748);
  }
  return result;
}

unint64_t sub_24129DADC()
{
  unint64_t result;

  result = qword_257106750;
  if (!qword_257106750)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingControl, &type metadata for RoutingControl);
    atomic_store(result, (unint64_t *)&qword_257106750);
  }
  return result;
}

uint64_t destroy for RoutingControls(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 144) != 255)
    sub_24125F80C();
  if (*(unsigned __int8 *)(a1 + 168) != 255)
    sub_24125F80C();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RoutingControls(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v7 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(_QWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = v7[1];
    *(_OWORD *)(a1 + 32) = *v7;
    *(_OWORD *)(a1 + 48) = v8;
  }
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    *(_QWORD *)(a1 + 64) = v9;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
  }
  v11 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v11;
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  v13 = *(unsigned __int8 *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 == 255)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  }
  else
  {
    v14 = v13 & 1;
    v15 = *(_QWORD *)(a2 + 128);
    v16 = *(_QWORD *)(a2 + 136);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 128) = v15;
    *(_QWORD *)(a1 + 136) = v16;
    *(_BYTE *)(a1 + 144) = v14;
  }
  v17 = *(unsigned __int8 *)(a2 + 168);
  if (v17 == 255)
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  }
  else
  {
    v18 = v17 & 1;
    v19 = *(_QWORD *)(a2 + 152);
    v20 = *(_QWORD *)(a2 + 160);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 152) = v19;
    *(_QWORD *)(a1 + 160) = v20;
    *(_BYTE *)(a1 + 168) = v18;
  }
  v21 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoutingControls(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 *v14;
  __int128 *v15;
  int v16;
  char v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 *v26;
  int v27;
  char v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v6 = (_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241276134(a1 + 32);
      v7 = *(_OWORD *)(a2 + 48);
      *v4 = *v6;
      *(_OWORD *)(a1 + 48) = v7;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 48);
    *v4 = *v6;
    *(_OWORD *)(a1 + 48) = v8;
  }
  v9 = (_OWORD *)(a1 + 64);
  v11 = (_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 64) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_241276168(a1 + 64);
      v12 = *(_OWORD *)(a2 + 80);
      *v9 = *v11;
      *(_OWORD *)(a1 + 80) = v12;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 80);
    *v9 = *v11;
    *(_OWORD *)(a1 + 80) = v13;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = (__int128 *)(a1 + 128);
  v15 = (__int128 *)(a2 + 128);
  v16 = *(unsigned __int8 *)(a2 + 144);
  if (*(unsigned __int8 *)(a1 + 144) == 255)
  {
    if (v16 == 255)
    {
      v18 = *v15;
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *v14 = v18;
    }
    else
    {
      v22 = v16 & 1;
      v23 = *(_QWORD *)(a2 + 128);
      v24 = *(_QWORD *)(a2 + 136);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 128) = v23;
      *(_QWORD *)(a1 + 136) = v24;
      *(_BYTE *)(a1 + 144) = v22;
    }
  }
  else if (v16 == 255)
  {
    sub_24127619C(a1 + 128);
    v17 = *(_BYTE *)(a2 + 144);
    *v14 = *v15;
    *(_BYTE *)(a1 + 144) = v17;
  }
  else
  {
    v19 = v16 & 1;
    v20 = *(_QWORD *)(a2 + 128);
    v21 = *(_QWORD *)(a2 + 136);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 128) = v20;
    *(_QWORD *)(a1 + 136) = v21;
    *(_BYTE *)(a1 + 144) = v19;
    sub_24125F80C();
  }
  v25 = (__int128 *)(a1 + 152);
  v26 = (__int128 *)(a2 + 152);
  v27 = *(unsigned __int8 *)(a2 + 168);
  if (*(unsigned __int8 *)(a1 + 168) == 255)
  {
    if (v27 == 255)
    {
      v29 = *v26;
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *v25 = v29;
    }
    else
    {
      v33 = v27 & 1;
      v34 = *(_QWORD *)(a2 + 152);
      v35 = *(_QWORD *)(a2 + 160);
      OUTLINED_FUNCTION_143();
      *(_QWORD *)(a1 + 152) = v34;
      *(_QWORD *)(a1 + 160) = v35;
      *(_BYTE *)(a1 + 168) = v33;
    }
  }
  else if (v27 == 255)
  {
    sub_2412761D0(a1 + 152);
    v28 = *(_BYTE *)(a2 + 168);
    *v25 = *v26;
    *(_BYTE *)(a1 + 168) = v28;
  }
  else
  {
    v30 = v27 & 1;
    v31 = *(_QWORD *)(a2 + 152);
    v32 = *(_QWORD *)(a2 + 160);
    OUTLINED_FUNCTION_143();
    *(_QWORD *)(a1 + 152) = v31;
    *(_QWORD *)(a1 + 160) = v32;
    *(_BYTE *)(a1 + 168) = v30;
    sub_24125F80C();
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy192_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t assignWithTake for RoutingControls(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  int v15;
  _OWORD *v16;
  int v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = v6;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_241276134(a1 + 32);
  }
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
LABEL_6:
  v9 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v10 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_241276168(a1 + 64);
  }
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
LABEL_11:
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  swift_bridgeObjectRelease();
  v14 = (_OWORD *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 144) == 255)
  {
LABEL_14:
    *(_OWORD *)(a1 + 128) = *v14;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    goto LABEL_16;
  }
  v15 = *(unsigned __int8 *)(a2 + 144);
  if (v15 == 255)
  {
    sub_24127619C(a1 + 128);
    goto LABEL_14;
  }
  *(_OWORD *)(a1 + 128) = *v14;
  *(_BYTE *)(a1 + 144) = v15 & 1;
  sub_24125F80C();
LABEL_16:
  v16 = (_OWORD *)(a2 + 152);
  if (*(unsigned __int8 *)(a1 + 168) != 255)
  {
    v17 = *(unsigned __int8 *)(a2 + 168);
    if (v17 != 255)
    {
      *(_OWORD *)(a1 + 152) = *v16;
      *(_BYTE *)(a1 + 168) = v17 & 1;
      sub_24125F80C();
      goto LABEL_21;
    }
    sub_2412761D0(a1 + 152);
  }
  *(_OWORD *)(a1 + 152) = *v16;
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
LABEL_21:
  v18 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingControls(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingControls(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for RoutingControls()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingControls.PlayControl()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingControls.PauseControl()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingControls.NextTrackControl()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingControls.PreviousTrackControl()
{
  OUTLINED_FUNCTION_21_1();
}

void initializeBufferWithCopyOfBuffer for RoutingControls.AbsoluteVolumeControl.Target(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_24128F2F4(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))OUTLINED_FUNCTION_143);
}

void assignWithCopy for RoutingControls.AbsoluteVolumeControl.Target(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_24129E800(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))OUTLINED_FUNCTION_143, (void (*)(uint64_t, uint64_t, uint64_t))sub_24125F80C);
}

void assignWithTake for RoutingControls.AbsoluteVolumeControl.Target(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_24129E854(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_24125F80C);
}

void type metadata accessor for RoutingControls.AbsoluteVolumeControl()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingControls.AbsoluteVolumeControl.Target()
{
  OUTLINED_FUNCTION_21_1();
}

void initializeBufferWithCopyOfBuffer for RoutingControls.RelativeVolumeControl.Target(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_24128F2F4(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))j__OUTLINED_FUNCTION_143);
}

void assignWithCopy for RoutingControls.RelativeVolumeControl.Target(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_24129E800(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))j__OUTLINED_FUNCTION_143, (void (*)(uint64_t, uint64_t, uint64_t))sub_2412A0A44);
}

void assignWithTake for RoutingControls.RelativeVolumeControl.Target(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_24129E854(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_2412A0A44);
}

void type metadata accessor for RoutingControls.RelativeVolumeControl()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingControls.RelativeVolumeControl.Target()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingControls.SkipForwardControl()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void type metadata accessor for RoutingControls.SkipForwardControl()
{
  OUTLINED_FUNCTION_21_1();
}

void _s12MediaControl15RoutingControlsV18SkipForwardControlVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_44();
}

void _s12MediaControl15RoutingControlsV18SkipForwardControlVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_37_0();
}

void _s12MediaControl15RoutingControlsV18SkipForwardControlVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44();
}

uint64_t _s12MediaControl15RoutingControlsV18SkipForwardControlVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 < 0 && *((_BYTE *)a1 + 32))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return OUTLINED_FUNCTION_93_1(v2);
}

uint64_t sub_24129E588(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RoutingControls.SkipBackwardControl()
{
  OUTLINED_FUNCTION_21_1();
}

void _s12MediaControl15RoutingControlsV11PlayControlVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_44();
}

uint64_t _s12MediaControl15RoutingControlsV11PlayControlVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return OUTLINED_FUNCTION_93_1(v2);
}

void type metadata accessor for RoutingControls.TVRemoteControl()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for ContinuousRoutingControl()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t _s12MediaControl14RoutingControlVwxx_0()
{
  sub_24125F80C();
  return OUTLINED_FUNCTION_27_1();
}

void _s12MediaControl14RoutingControlVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_141_0(a1, a2);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_BYTE *)(v4 + 32);
  OUTLINED_FUNCTION_92_2();
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)(v3 + 24) = v6;
  *(_BYTE *)(v3 + 32) = v7;
  v8 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v3 + 48) = v8;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_48();
}

void _s12MediaControl14RoutingControlVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  v6 = a2[3];
  v7 = *((_BYTE *)a2 + 32);
  OUTLINED_FUNCTION_92_2();
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_24125F80C();
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_48();
}

void _s12MediaControl14RoutingControlVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  OUTLINED_FUNCTION_141_0(a1, a2);
  v5 = *(_BYTE *)(v4 + 32);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v2 + 16);
  *(_BYTE *)(v3 + 32) = v5;
  sub_24125F80C();
  v6 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v3 + 48) = v6;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44();
}

uint64_t _s12MediaControl14RoutingControlVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 48);
    if (v2 >= 0xFFFFFFFF)
      LODWORD(v2) = -1;
  }
  return OUTLINED_FUNCTION_93_1(v2);
}

void type metadata accessor for RoutingControl()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingControl.Target()
{
  return sub_24125F80C();
}

void sub_24129E800(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  OUTLINED_FUNCTION_48();
}

void sub_24129E854(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  v8 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  OUTLINED_FUNCTION_44();
}

uint64_t _s12MediaControl15RoutingControlsV21AbsoluteVolumeControlV6TargetOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return OUTLINED_FUNCTION_93_1(-1);
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return OUTLINED_FUNCTION_93_1(*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 1)
    return OUTLINED_FUNCTION_93_1(v3 ^ 0xFF);
  else
    return OUTLINED_FUNCTION_93_1(-1);
}

uint64_t _s12MediaControl15RoutingControlsV21AbsoluteVolumeControlV6TargetOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_24129E914(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24129E91C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for RoutingControl.Target()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t getEnumTagSinglePayload for RoutingControl.RoutingControlType(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingControl.RoutingControlType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24129E9B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_24129E9D0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for RoutingControl.RoutingControlType()
{
  OUTLINED_FUNCTION_21_1();
}

ValueMetadata *type metadata accessor for RoutingControl.CodingKeys()
{
  return &type metadata for RoutingControl.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RoutingControl.RoutingControlType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingControl.RoutingControlType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_24129EADC + 4 * byte_2412AFE91[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_24129EB10 + 4 * byte_2412AFE8C[v4]))();
}

uint64_t sub_24129EB10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129EB18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24129EB20);
  return result;
}

uint64_t sub_24129EB2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24129EB34);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_24129EB38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129EB40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.CodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.PreviousTrackCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.PreviousTrackCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.NextTrackCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.NextTrackCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.PlayCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.PlayCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.PauseCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.PauseCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.RewindCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.RewindCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.FastForwardCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.FastForwardCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.SkipForwardCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.SkipForwardCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.SkipBackwardCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.SkipBackwardCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.TvRemoteCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.TvRemoteCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.FavoriteCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.FavoriteCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.RoutingControlType.MuteCodingKeys()
{
  return &type metadata for RoutingControl.RoutingControlType.MuteCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.Target.CodingKeys()
{
  return &type metadata for RoutingControl.Target.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.Target.SessionCodingKeys()
{
  return &type metadata for RoutingControl.Target.SessionCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControl.Target.ItemCodingKeys()
{
  return &type metadata for RoutingControl.Target.ItemCodingKeys;
}

ValueMetadata *type metadata accessor for ContinuousRoutingControl.CodingKeys()
{
  return &type metadata for ContinuousRoutingControl.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RoutingControls.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_24129ECBC + 4 * byte_2412AFE9B[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_24129ECF0 + 4 * byte_2412AFE96[v4]))();
}

uint64_t sub_24129ECF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129ECF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24129ED00);
  return result;
}

uint64_t sub_24129ED0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24129ED14);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_24129ED18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129ED20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingControls.CodingKeys()
{
  return &type metadata for RoutingControls.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.TVRemoteControl.CodingKeys()
{
  return &type metadata for RoutingControls.TVRemoteControl.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.SkipBackwardControl.CodingKeys()
{
  return &type metadata for RoutingControls.SkipBackwardControl.CodingKeys;
}

uint64_t _s12MediaControl14RoutingControlV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24129EDA8 + 4 * byte_2412AFEA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24129EDDC + 4 * byte_2412AFEA0[v4]))();
}

uint64_t sub_24129EDDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129EDE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24129EDECLL);
  return result;
}

uint64_t sub_24129EDF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24129EE00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24129EE04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129EE0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingControls.SkipForwardControl.CodingKeys()
{
  return &type metadata for RoutingControls.SkipForwardControl.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.RelativeVolumeControl.CodingKeys()
{
  return &type metadata for RoutingControls.RelativeVolumeControl.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.RelativeVolumeControl.Target.CodingKeys()
{
  return &type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys()
{
  return &type metadata for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys()
{
  return &type metadata for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys()
{
  return &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType.IncreaseCodingKeys()
{
  return &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.IncreaseCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType.DecreaseCodingKeys()
{
  return &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.DecreaseCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.AbsoluteVolumeControl.CodingKeys()
{
  return &type metadata for RoutingControls.AbsoluteVolumeControl.CodingKeys;
}

uint64_t _s12MediaControl15RoutingControlsV21RelativeVolumeControlV14AdjustmentTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24129EEF4 + 4 * byte_2412AFEAF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24129EF28 + 4 * byte_2412AFEAA[v4]))();
}

uint64_t sub_24129EF28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129EF30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24129EF38);
  return result;
}

uint64_t sub_24129EF44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24129EF4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24129EF50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24129EF58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys()
{
  return &type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys()
{
  return &type metadata for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys()
{
  return &type metadata for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.PreviousTrackControl.CodingKeys()
{
  return &type metadata for RoutingControls.PreviousTrackControl.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.NextTrackControl.CodingKeys()
{
  return &type metadata for RoutingControls.NextTrackControl.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingControls.PauseControl.CodingKeys()
{
  return &type metadata for RoutingControls.PauseControl.CodingKeys;
}

uint64_t _s12MediaControl14RoutingControlV18RoutingControlTypeO21SkipForwardCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24129F004 + 4 * byte_2412AFEB4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24129F024 + 4 * byte_2412AFEB9[v4]))();
}

_BYTE *sub_24129F004(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24129F024(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24129F02C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24129F034(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24129F03C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24129F044(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RoutingControls.PlayControl.CodingKeys()
{
  return &type metadata for RoutingControls.PlayControl.CodingKeys;
}

unint64_t sub_24129F064()
{
  unint64_t result;

  result = qword_257106758;
  if (!qword_257106758)
  {
    result = MEMORY[0x242691F34](&unk_2412B1074, &type metadata for RoutingControls.PlayControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106758);
  }
  return result;
}

unint64_t sub_24129F0A4()
{
  unint64_t result;

  result = qword_257106760;
  if (!qword_257106760)
  {
    result = MEMORY[0x242691F34](&unk_2412B112C, &type metadata for RoutingControls.PauseControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106760);
  }
  return result;
}

unint64_t sub_24129F0E4()
{
  unint64_t result;

  result = qword_257106768;
  if (!qword_257106768)
  {
    result = MEMORY[0x242691F34](&unk_2412B11E4, &type metadata for RoutingControls.NextTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106768);
  }
  return result;
}

unint64_t sub_24129F124()
{
  unint64_t result;

  result = qword_257106770;
  if (!qword_257106770)
  {
    result = MEMORY[0x242691F34](&unk_2412B129C, &type metadata for RoutingControls.PreviousTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106770);
  }
  return result;
}

unint64_t sub_24129F164()
{
  unint64_t result;

  result = qword_257106778;
  if (!qword_257106778)
  {
    result = MEMORY[0x242691F34](&unk_2412B1354, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106778);
  }
  return result;
}

unint64_t sub_24129F1A4()
{
  unint64_t result;

  result = qword_257106780;
  if (!qword_257106780)
  {
    result = MEMORY[0x242691F34](&unk_2412B140C, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106780);
  }
  return result;
}

unint64_t sub_24129F1E4()
{
  unint64_t result;

  result = qword_257106788;
  if (!qword_257106788)
  {
    result = MEMORY[0x242691F34](&unk_2412B14C4, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106788);
  }
  return result;
}

unint64_t sub_24129F224()
{
  unint64_t result;

  result = qword_257106790;
  if (!qword_257106790)
  {
    result = MEMORY[0x242691F34](&unk_2412B157C, &type metadata for RoutingControls.AbsoluteVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106790);
  }
  return result;
}

unint64_t sub_24129F264()
{
  unint64_t result;

  result = qword_257106798;
  if (!qword_257106798)
  {
    result = MEMORY[0x242691F34](&unk_2412B16D4, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106798);
  }
  return result;
}

unint64_t sub_24129F2A4()
{
  unint64_t result;

  result = qword_2571067A0;
  if (!qword_2571067A0)
  {
    result = MEMORY[0x242691F34](&unk_2412B178C, &type metadata for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067A0);
  }
  return result;
}

unint64_t sub_24129F2E4()
{
  unint64_t result;

  result = qword_2571067A8;
  if (!qword_2571067A8)
  {
    result = MEMORY[0x242691F34](&unk_2412B1844, &type metadata for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067A8);
  }
  return result;
}

unint64_t sub_24129F324()
{
  unint64_t result;

  result = qword_2571067B0;
  if (!qword_2571067B0)
  {
    result = MEMORY[0x242691F34](&unk_2412B18FC, &type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067B0);
  }
  return result;
}

unint64_t sub_24129F364()
{
  unint64_t result;

  result = qword_2571067B8;
  if (!qword_2571067B8)
  {
    result = MEMORY[0x242691F34](&unk_2412B19B4, &type metadata for RoutingControls.RelativeVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067B8);
  }
  return result;
}

unint64_t sub_24129F3A4()
{
  unint64_t result;

  result = qword_2571067C0;
  if (!qword_2571067C0)
  {
    result = MEMORY[0x242691F34](&unk_2412B1A6C, &type metadata for RoutingControls.SkipForwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067C0);
  }
  return result;
}

unint64_t sub_24129F3E4()
{
  unint64_t result;

  result = qword_2571067C8;
  if (!qword_2571067C8)
  {
    result = MEMORY[0x242691F34](&unk_2412B1B24, &type metadata for RoutingControls.SkipBackwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067C8);
  }
  return result;
}

unint64_t sub_24129F424()
{
  unint64_t result;

  result = qword_2571067D0;
  if (!qword_2571067D0)
  {
    result = MEMORY[0x242691F34](&unk_2412B1BDC, &type metadata for RoutingControls.TVRemoteControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067D0);
  }
  return result;
}

unint64_t sub_24129F464()
{
  unint64_t result;

  result = qword_2571067D8;
  if (!qword_2571067D8)
  {
    result = MEMORY[0x242691F34](&unk_2412B1C94, &type metadata for RoutingControls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067D8);
  }
  return result;
}

unint64_t sub_24129F4A4()
{
  unint64_t result;

  result = qword_2571067E0;
  if (!qword_2571067E0)
  {
    result = MEMORY[0x242691F34](&unk_2412B1D4C, &type metadata for ContinuousRoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067E0);
  }
  return result;
}

unint64_t sub_24129F4E4()
{
  unint64_t result;

  result = qword_2571067E8;
  if (!qword_2571067E8)
  {
    result = MEMORY[0x242691F34](&unk_2412B1E04, &type metadata for RoutingControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067E8);
  }
  return result;
}

unint64_t sub_24129F524()
{
  unint64_t result;

  result = qword_2571067F0;
  if (!qword_2571067F0)
  {
    result = MEMORY[0x242691F34](&unk_2412B1EBC, &type metadata for RoutingControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067F0);
  }
  return result;
}

unint64_t sub_24129F564()
{
  unint64_t result;

  result = qword_2571067F8;
  if (!qword_2571067F8)
  {
    result = MEMORY[0x242691F34](&unk_2412B1F74, &type metadata for RoutingControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571067F8);
  }
  return result;
}

unint64_t sub_24129F5A4()
{
  unint64_t result;

  result = qword_257106800;
  if (!qword_257106800)
  {
    result = MEMORY[0x242691F34](&unk_2412B207C, &type metadata for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106800);
  }
  return result;
}

unint64_t sub_24129F5E4()
{
  unint64_t result;

  result = qword_257106808;
  if (!qword_257106808)
  {
    result = MEMORY[0x242691F34](&unk_2412B2134, &type metadata for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106808);
  }
  return result;
}

unint64_t sub_24129F624()
{
  unint64_t result;

  result = qword_257106810;
  if (!qword_257106810)
  {
    result = MEMORY[0x242691F34](&unk_2412B228C, &type metadata for RoutingControl.RoutingControlType.SkipBackwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106810);
  }
  return result;
}

unint64_t sub_24129F664()
{
  unint64_t result;

  result = qword_257106818;
  if (!qword_257106818)
  {
    result = MEMORY[0x242691F34](&unk_2412B2344, &type metadata for RoutingControl.RoutingControlType.SkipForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106818);
  }
  return result;
}

unint64_t sub_24129F6A4()
{
  unint64_t result;

  result = qword_257106820;
  if (!qword_257106820)
  {
    result = MEMORY[0x242691F34](&unk_2412B25DC, &type metadata for RoutingControl.RoutingControlType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106820);
  }
  return result;
}

unint64_t sub_24129F6E4()
{
  unint64_t result;

  result = qword_257106828;
  if (!qword_257106828)
  {
    result = MEMORY[0x242691F34](&unk_2412B2694, &type metadata for RoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106828);
  }
  return result;
}

unint64_t sub_24129F724()
{
  unint64_t result;

  result = qword_257106830;
  if (!qword_257106830)
  {
    result = MEMORY[0x242691F34](&unk_2412B2604, &type metadata for RoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106830);
  }
  return result;
}

unint64_t sub_24129F764()
{
  unint64_t result;

  result = qword_257106838;
  if (!qword_257106838)
  {
    result = MEMORY[0x242691F34](&unk_2412B262C, &type metadata for RoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106838);
  }
  return result;
}

unint64_t sub_24129F7A4()
{
  unint64_t result;

  result = qword_257106840;
  if (!qword_257106840)
  {
    result = MEMORY[0x242691F34](&unk_2412B254C, &type metadata for RoutingControl.RoutingControlType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106840);
  }
  return result;
}

unint64_t sub_24129F7E4()
{
  unint64_t result;

  result = qword_257106848;
  if (!qword_257106848)
  {
    result = MEMORY[0x242691F34](&unk_2412B2574, &type metadata for RoutingControl.RoutingControlType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106848);
  }
  return result;
}

unint64_t sub_24129F824()
{
  unint64_t result;

  result = qword_257106850;
  if (!qword_257106850)
  {
    result = MEMORY[0x242691F34](&unk_2412B24FC, &type metadata for RoutingControl.RoutingControlType.PreviousTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106850);
  }
  return result;
}

unint64_t sub_24129F864()
{
  unint64_t result;

  result = qword_257106858;
  if (!qword_257106858)
  {
    result = MEMORY[0x242691F34](&unk_2412B2524, &type metadata for RoutingControl.RoutingControlType.PreviousTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106858);
  }
  return result;
}

unint64_t sub_24129F8A4()
{
  unint64_t result;

  result = qword_257106860;
  if (!qword_257106860)
  {
    result = MEMORY[0x242691F34](&unk_2412B24AC, &type metadata for RoutingControl.RoutingControlType.NextTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106860);
  }
  return result;
}

unint64_t sub_24129F8E4()
{
  unint64_t result;

  result = qword_257106868;
  if (!qword_257106868)
  {
    result = MEMORY[0x242691F34](&unk_2412B24D4, &type metadata for RoutingControl.RoutingControlType.NextTrackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106868);
  }
  return result;
}

unint64_t sub_24129F924()
{
  unint64_t result;

  result = qword_257106870;
  if (!qword_257106870)
  {
    result = MEMORY[0x242691F34](&unk_2412B245C, &type metadata for RoutingControl.RoutingControlType.PlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106870);
  }
  return result;
}

unint64_t sub_24129F964()
{
  unint64_t result;

  result = qword_257106878;
  if (!qword_257106878)
  {
    result = MEMORY[0x242691F34](&unk_2412B2484, &type metadata for RoutingControl.RoutingControlType.PlayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106878);
  }
  return result;
}

unint64_t sub_24129F9A4()
{
  unint64_t result;

  result = qword_257106880;
  if (!qword_257106880)
  {
    result = MEMORY[0x242691F34](&unk_2412B240C, &type metadata for RoutingControl.RoutingControlType.PauseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106880);
  }
  return result;
}

unint64_t sub_24129F9E4()
{
  unint64_t result;

  result = qword_257106888;
  if (!qword_257106888)
  {
    result = MEMORY[0x242691F34](&unk_2412B2434, &type metadata for RoutingControl.RoutingControlType.PauseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106888);
  }
  return result;
}

unint64_t sub_24129FA24()
{
  unint64_t result;

  result = qword_257106890;
  if (!qword_257106890)
  {
    result = MEMORY[0x242691F34](&unk_2412B23BC, &type metadata for RoutingControl.RoutingControlType.RewindCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106890);
  }
  return result;
}

unint64_t sub_24129FA64()
{
  unint64_t result;

  result = qword_257106898;
  if (!qword_257106898)
  {
    result = MEMORY[0x242691F34](&unk_2412B23E4, &type metadata for RoutingControl.RoutingControlType.RewindCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106898);
  }
  return result;
}

unint64_t sub_24129FAA4()
{
  unint64_t result;

  result = qword_2571068A0;
  if (!qword_2571068A0)
  {
    result = MEMORY[0x242691F34](&unk_2412B236C, &type metadata for RoutingControl.RoutingControlType.FastForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068A0);
  }
  return result;
}

unint64_t sub_24129FAE4()
{
  unint64_t result;

  result = qword_2571068A8;
  if (!qword_2571068A8)
  {
    result = MEMORY[0x242691F34](&unk_2412B2394, &type metadata for RoutingControl.RoutingControlType.FastForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068A8);
  }
  return result;
}

unint64_t sub_24129FB24()
{
  unint64_t result;

  result = qword_2571068B0;
  if (!qword_2571068B0)
  {
    result = MEMORY[0x242691F34](&unk_2412B22B4, &type metadata for RoutingControl.RoutingControlType.SkipForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068B0);
  }
  return result;
}

unint64_t sub_24129FB64()
{
  unint64_t result;

  result = qword_2571068B8;
  if (!qword_2571068B8)
  {
    result = MEMORY[0x242691F34](&unk_2412B22DC, &type metadata for RoutingControl.RoutingControlType.SkipForwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068B8);
  }
  return result;
}

unint64_t sub_24129FBA4()
{
  unint64_t result;

  result = qword_2571068C0;
  if (!qword_2571068C0)
  {
    result = MEMORY[0x242691F34](&unk_2412B21FC, &type metadata for RoutingControl.RoutingControlType.SkipBackwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068C0);
  }
  return result;
}

unint64_t sub_24129FBE4()
{
  unint64_t result;

  result = qword_2571068C8;
  if (!qword_2571068C8)
  {
    result = MEMORY[0x242691F34](&unk_2412B2224, &type metadata for RoutingControl.RoutingControlType.SkipBackwardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068C8);
  }
  return result;
}

unint64_t sub_24129FC24()
{
  unint64_t result;

  result = qword_2571068D0;
  if (!qword_2571068D0)
  {
    result = MEMORY[0x242691F34](&unk_2412B21AC, &type metadata for RoutingControl.RoutingControlType.TvRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068D0);
  }
  return result;
}

unint64_t sub_24129FC64()
{
  unint64_t result;

  result = qword_2571068D8;
  if (!qword_2571068D8)
  {
    result = MEMORY[0x242691F34](&unk_2412B21D4, &type metadata for RoutingControl.RoutingControlType.TvRemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068D8);
  }
  return result;
}

unint64_t sub_24129FCA4()
{
  unint64_t result;

  result = qword_2571068E0;
  if (!qword_2571068E0)
  {
    result = MEMORY[0x242691F34](&unk_2412B215C, &type metadata for RoutingControl.RoutingControlType.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068E0);
  }
  return result;
}

unint64_t sub_24129FCE4()
{
  unint64_t result;

  result = qword_2571068E8;
  if (!qword_2571068E8)
  {
    result = MEMORY[0x242691F34](&unk_2412B2184, &type metadata for RoutingControl.RoutingControlType.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068E8);
  }
  return result;
}

unint64_t sub_24129FD24()
{
  unint64_t result;

  result = qword_2571068F0;
  if (!qword_2571068F0)
  {
    result = MEMORY[0x242691F34](&unk_2412B20A4, &type metadata for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068F0);
  }
  return result;
}

unint64_t sub_24129FD64()
{
  unint64_t result;

  result = qword_2571068F8;
  if (!qword_2571068F8)
  {
    result = MEMORY[0x242691F34](&unk_2412B20CC, &type metadata for RoutingControl.RoutingControlType.AbsoluteVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571068F8);
  }
  return result;
}

unint64_t sub_24129FDA4()
{
  unint64_t result;

  result = qword_257106900;
  if (!qword_257106900)
  {
    result = MEMORY[0x242691F34](&unk_2412B1FEC, &type metadata for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106900);
  }
  return result;
}

unint64_t sub_24129FDE4()
{
  unint64_t result;

  result = qword_257106908;
  if (!qword_257106908)
  {
    result = MEMORY[0x242691F34](&unk_2412B2014, &type metadata for RoutingControl.RoutingControlType.RelativeVolumeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106908);
  }
  return result;
}

unint64_t sub_24129FE24()
{
  unint64_t result;

  result = qword_257106910;
  if (!qword_257106910)
  {
    result = MEMORY[0x242691F34](&unk_2412B1F9C, &type metadata for RoutingControl.RoutingControlType.MuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106910);
  }
  return result;
}

unint64_t sub_24129FE64()
{
  unint64_t result;

  result = qword_257106918;
  if (!qword_257106918)
  {
    result = MEMORY[0x242691F34](&unk_2412B1FC4, &type metadata for RoutingControl.RoutingControlType.MuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106918);
  }
  return result;
}

unint64_t sub_24129FEA4()
{
  unint64_t result;

  result = qword_257106920;
  if (!qword_257106920)
  {
    result = MEMORY[0x242691F34](&unk_2412B1EE4, &type metadata for RoutingControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106920);
  }
  return result;
}

unint64_t sub_24129FEE4()
{
  unint64_t result;

  result = qword_257106928;
  if (!qword_257106928)
  {
    result = MEMORY[0x242691F34](&unk_2412B1F0C, &type metadata for RoutingControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106928);
  }
  return result;
}

unint64_t sub_24129FF24()
{
  unint64_t result;

  result = qword_257106930;
  if (!qword_257106930)
  {
    result = MEMORY[0x242691F34](&unk_2412B1E2C, &type metadata for RoutingControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106930);
  }
  return result;
}

unint64_t sub_24129FF64()
{
  unint64_t result;

  result = qword_257106938;
  if (!qword_257106938)
  {
    result = MEMORY[0x242691F34](&unk_2412B1E54, &type metadata for RoutingControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106938);
  }
  return result;
}

unint64_t sub_24129FFA4()
{
  unint64_t result;

  result = qword_257106940;
  if (!qword_257106940)
  {
    result = MEMORY[0x242691F34](&unk_2412B1D74, &type metadata for RoutingControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106940);
  }
  return result;
}

unint64_t sub_24129FFE4()
{
  unint64_t result;

  result = qword_257106948;
  if (!qword_257106948)
  {
    result = MEMORY[0x242691F34](&unk_2412B1D9C, &type metadata for RoutingControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106948);
  }
  return result;
}

unint64_t sub_2412A0024()
{
  unint64_t result;

  result = qword_257106950;
  if (!qword_257106950)
  {
    result = MEMORY[0x242691F34](&unk_2412B1CBC, &type metadata for ContinuousRoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106950);
  }
  return result;
}

unint64_t sub_2412A0064()
{
  unint64_t result;

  result = qword_257106958;
  if (!qword_257106958)
  {
    result = MEMORY[0x242691F34](&unk_2412B1CE4, &type metadata for ContinuousRoutingControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106958);
  }
  return result;
}

unint64_t sub_2412A00A4()
{
  unint64_t result;

  result = qword_257106960;
  if (!qword_257106960)
  {
    result = MEMORY[0x242691F34](&unk_2412B1C04, &type metadata for RoutingControls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106960);
  }
  return result;
}

unint64_t sub_2412A00E4()
{
  unint64_t result;

  result = qword_257106968;
  if (!qword_257106968)
  {
    result = MEMORY[0x242691F34](&unk_2412B1C2C, &type metadata for RoutingControls.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106968);
  }
  return result;
}

unint64_t sub_2412A0124()
{
  unint64_t result;

  result = qword_257106970;
  if (!qword_257106970)
  {
    result = MEMORY[0x242691F34](&unk_2412B1B4C, &type metadata for RoutingControls.TVRemoteControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106970);
  }
  return result;
}

unint64_t sub_2412A0164()
{
  unint64_t result;

  result = qword_257106978;
  if (!qword_257106978)
  {
    result = MEMORY[0x242691F34](&unk_2412B1B74, &type metadata for RoutingControls.TVRemoteControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106978);
  }
  return result;
}

unint64_t sub_2412A01A4()
{
  unint64_t result;

  result = qword_257106980;
  if (!qword_257106980)
  {
    result = MEMORY[0x242691F34](&unk_2412B1A94, &type metadata for RoutingControls.SkipBackwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106980);
  }
  return result;
}

unint64_t sub_2412A01E4()
{
  unint64_t result;

  result = qword_257106988;
  if (!qword_257106988)
  {
    result = MEMORY[0x242691F34](&unk_2412B1ABC, &type metadata for RoutingControls.SkipBackwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106988);
  }
  return result;
}

unint64_t sub_2412A0224()
{
  unint64_t result;

  result = qword_257106990;
  if (!qword_257106990)
  {
    result = MEMORY[0x242691F34](&unk_2412B19DC, &type metadata for RoutingControls.SkipForwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106990);
  }
  return result;
}

unint64_t sub_2412A0264()
{
  unint64_t result;

  result = qword_257106998;
  if (!qword_257106998)
  {
    result = MEMORY[0x242691F34](&unk_2412B1A04, &type metadata for RoutingControls.SkipForwardControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106998);
  }
  return result;
}

unint64_t sub_2412A02A4()
{
  unint64_t result;

  result = qword_2571069A0;
  if (!qword_2571069A0)
  {
    result = MEMORY[0x242691F34](&unk_2412B1924, &type metadata for RoutingControls.RelativeVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069A0);
  }
  return result;
}

unint64_t sub_2412A02E4()
{
  unint64_t result;

  result = qword_2571069A8;
  if (!qword_2571069A8)
  {
    result = MEMORY[0x242691F34](&unk_2412B194C, &type metadata for RoutingControls.RelativeVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069A8);
  }
  return result;
}

unint64_t sub_2412A0324()
{
  unint64_t result;

  result = qword_2571069B0;
  if (!qword_2571069B0)
  {
    result = MEMORY[0x242691F34](&unk_2412B186C, &type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069B0);
  }
  return result;
}

unint64_t sub_2412A0364()
{
  unint64_t result;

  result = qword_2571069B8;
  if (!qword_2571069B8)
  {
    result = MEMORY[0x242691F34](&unk_2412B1894, &type metadata for RoutingControls.RelativeVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069B8);
  }
  return result;
}

unint64_t sub_2412A03A4()
{
  unint64_t result;

  result = qword_2571069C0;
  if (!qword_2571069C0)
  {
    result = MEMORY[0x242691F34](&unk_2412B17B4, &type metadata for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069C0);
  }
  return result;
}

unint64_t sub_2412A03E4()
{
  unint64_t result;

  result = qword_2571069C8;
  if (!qword_2571069C8)
  {
    result = MEMORY[0x242691F34](&unk_2412B17DC, &type metadata for RoutingControls.RelativeVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069C8);
  }
  return result;
}

unint64_t sub_2412A0424()
{
  unint64_t result;

  result = qword_2571069D0;
  if (!qword_2571069D0)
  {
    result = MEMORY[0x242691F34](&unk_2412B16FC, &type metadata for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069D0);
  }
  return result;
}

unint64_t sub_2412A0464()
{
  unint64_t result;

  result = qword_2571069D8;
  if (!qword_2571069D8)
  {
    result = MEMORY[0x242691F34](&unk_2412B1724, &type metadata for RoutingControls.RelativeVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069D8);
  }
  return result;
}

unint64_t sub_2412A04A4()
{
  unint64_t result;

  result = qword_2571069E0;
  if (!qword_2571069E0)
  {
    result = MEMORY[0x242691F34](&unk_2412B1644, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069E0);
  }
  return result;
}

unint64_t sub_2412A04E4()
{
  unint64_t result;

  result = qword_2571069E8;
  if (!qword_2571069E8)
  {
    result = MEMORY[0x242691F34](&unk_2412B166C, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069E8);
  }
  return result;
}

unint64_t sub_2412A0524()
{
  unint64_t result;

  result = qword_2571069F0;
  if (!qword_2571069F0)
  {
    result = MEMORY[0x242691F34](&unk_2412B15F4, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.IncreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069F0);
  }
  return result;
}

unint64_t sub_2412A0564()
{
  unint64_t result;

  result = qword_2571069F8;
  if (!qword_2571069F8)
  {
    result = MEMORY[0x242691F34](&unk_2412B161C, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.IncreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571069F8);
  }
  return result;
}

unint64_t sub_2412A05A4()
{
  unint64_t result;

  result = qword_257106A00;
  if (!qword_257106A00)
  {
    result = MEMORY[0x242691F34](&unk_2412B15A4, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.DecreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A00);
  }
  return result;
}

unint64_t sub_2412A05E4()
{
  unint64_t result;

  result = qword_257106A08;
  if (!qword_257106A08)
  {
    result = MEMORY[0x242691F34](&unk_2412B15CC, &type metadata for RoutingControls.RelativeVolumeControl.AdjustmentType.DecreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A08);
  }
  return result;
}

unint64_t sub_2412A0624()
{
  unint64_t result;

  result = qword_257106A10;
  if (!qword_257106A10)
  {
    result = MEMORY[0x242691F34](&unk_2412B14EC, &type metadata for RoutingControls.AbsoluteVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A10);
  }
  return result;
}

unint64_t sub_2412A0664()
{
  unint64_t result;

  result = qword_257106A18;
  if (!qword_257106A18)
  {
    result = MEMORY[0x242691F34](&unk_2412B1514, &type metadata for RoutingControls.AbsoluteVolumeControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A18);
  }
  return result;
}

unint64_t sub_2412A06A4()
{
  unint64_t result;

  result = qword_257106A20;
  if (!qword_257106A20)
  {
    result = MEMORY[0x242691F34](&unk_2412B1434, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A20);
  }
  return result;
}

unint64_t sub_2412A06E4()
{
  unint64_t result;

  result = qword_257106A28;
  if (!qword_257106A28)
  {
    result = MEMORY[0x242691F34](&unk_2412B145C, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A28);
  }
  return result;
}

unint64_t sub_2412A0724()
{
  unint64_t result;

  result = qword_257106A30;
  if (!qword_257106A30)
  {
    result = MEMORY[0x242691F34](&unk_2412B137C, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A30);
  }
  return result;
}

unint64_t sub_2412A0764()
{
  unint64_t result;

  result = qword_257106A38;
  if (!qword_257106A38)
  {
    result = MEMORY[0x242691F34](&unk_2412B13A4, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.SessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A38);
  }
  return result;
}

unint64_t sub_2412A07A4()
{
  unint64_t result;

  result = qword_257106A40;
  if (!qword_257106A40)
  {
    result = MEMORY[0x242691F34](&unk_2412B12C4, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A40);
  }
  return result;
}

unint64_t sub_2412A07E4()
{
  unint64_t result;

  result = qword_257106A48;
  if (!qword_257106A48)
  {
    result = MEMORY[0x242691F34](&unk_2412B12EC, &type metadata for RoutingControls.AbsoluteVolumeControl.Target.ItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A48);
  }
  return result;
}

unint64_t sub_2412A0824()
{
  unint64_t result;

  result = qword_257106A50;
  if (!qword_257106A50)
  {
    result = MEMORY[0x242691F34](&unk_2412B120C, &type metadata for RoutingControls.PreviousTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A50);
  }
  return result;
}

unint64_t sub_2412A0864()
{
  unint64_t result;

  result = qword_257106A58;
  if (!qword_257106A58)
  {
    result = MEMORY[0x242691F34](&unk_2412B1234, &type metadata for RoutingControls.PreviousTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A58);
  }
  return result;
}

unint64_t sub_2412A08A4()
{
  unint64_t result;

  result = qword_257106A60;
  if (!qword_257106A60)
  {
    result = MEMORY[0x242691F34](&unk_2412B1154, &type metadata for RoutingControls.NextTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A60);
  }
  return result;
}

unint64_t sub_2412A08E4()
{
  unint64_t result;

  result = qword_257106A68;
  if (!qword_257106A68)
  {
    result = MEMORY[0x242691F34](&unk_2412B117C, &type metadata for RoutingControls.NextTrackControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A68);
  }
  return result;
}

unint64_t sub_2412A0924()
{
  unint64_t result;

  result = qword_257106A70;
  if (!qword_257106A70)
  {
    result = MEMORY[0x242691F34](&unk_2412B109C, &type metadata for RoutingControls.PauseControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A70);
  }
  return result;
}

unint64_t sub_2412A0964()
{
  unint64_t result;

  result = qword_257106A78;
  if (!qword_257106A78)
  {
    result = MEMORY[0x242691F34](&unk_2412B10C4, &type metadata for RoutingControls.PauseControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A78);
  }
  return result;
}

unint64_t sub_2412A09A4()
{
  unint64_t result;

  result = qword_257106A80;
  if (!qword_257106A80)
  {
    result = MEMORY[0x242691F34](&unk_2412B0FE4, &type metadata for RoutingControls.PlayControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A80);
  }
  return result;
}

unint64_t sub_2412A09E4()
{
  unint64_t result;

  result = qword_257106A88;
  if (!qword_257106A88)
  {
    result = MEMORY[0x242691F34](&unk_2412B100C, &type metadata for RoutingControls.PlayControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106A88);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return sub_2412A8C6C();
}

void OUTLINED_FUNCTION_11_6(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_24127C278(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_13_4()
{
  return sub_2412A8C3C();
}

void OUTLINED_FUNCTION_14_4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_24127C278(0, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_24_4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = v2;
  a2[1] = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_26_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_27_5(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 8) = 4;
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = result;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return sub_2412A8BC4();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return sub_2412A8DA4();
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return 1;
}

_QWORD *OUTLINED_FUNCTION_35_2()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v0;
  *(_QWORD *)(v2 - 104) = v0[1];
  *(_QWORD *)(v2 - 96) = v3;
  return __swift_project_boxed_opaque_existential_1(v1, v1[3]);
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return sub_2412A8DB0();
}

void OUTLINED_FUNCTION_38_4()
{
  _QWORD *v0;
  uint64_t v1;

  v0[13] = 0;
  v0[14] = 0;
  v0[17] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
  v0[24] = 0;
  v0[25] = 0;
  v0[21] = 0;
  v0[22] = 0;
  *(_QWORD *)(v1 - 72) = 0;
  v0[23] = 0;
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return sub_2412A8BB8();
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return sub_24127B274(15);
}

void OUTLINED_FUNCTION_44_1(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_24127C278(0, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 152) = v0;
  *(_QWORD *)(v3 - 144) = v1;
  *(_QWORD *)(v3 - 88) = v2;
  return sub_2412A8C24();
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  return sub_2412A8C78();
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return sub_2412A8C78();
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return sub_2412A8CFC();
}

void OUTLINED_FUNCTION_52_2()
{
  RoutingControl.RoutingControlType.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_53_3()
{
  return sub_2412A8DB0();
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_57_2()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_59_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return sub_2412A8C00();
}

uint64_t OUTLINED_FUNCTION_63_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

void OUTLINED_FUNCTION_64_2(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_24127C278(0, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_65_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_69_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  uint64_t v0;

  return sub_24127DCE0(*(_QWORD *)(v0 + 192));
}

void OUTLINED_FUNCTION_71_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_24127C278(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  sub_2412612D4(v2, v1, v0);
  sub_2412612D4(v3, v4, v5);
  return v2;
}

uint64_t OUTLINED_FUNCTION_74_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  sub_24125E37C(v2, v1, v3);
  return v0;
}

uint64_t OUTLINED_FUNCTION_75_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_24125E37C(a1, a2, 0);
  sub_24125E37C(v3, v2, 0);
  return sub_24125F7F4(v3, v2, 0);
}

uint64_t OUTLINED_FUNCTION_76_1(int a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(v7 - 104) = a1;
  sub_2412612D4(v4, v1, v3);
  sub_2412612D4(v6, v5, v2);
  return v4;
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  uint64_t v0;

  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_143();
  sub_24125F80C();
  return v0;
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  uint64_t v0;

  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_143();
  sub_24125F80C();
  return v0;
}

uint64_t OUTLINED_FUNCTION_79_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_80_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_24125E37C(a1, a2, 1u);
  sub_24125E37C(v3, v2, 1u);
  return sub_24125F7F4(v3, v2, 1u);
}

uint64_t OUTLINED_FUNCTION_81_1()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;

  sub_2412612D4(v4, v0, v3);
  sub_2412612D4(v5, v1, v2);
  return v4;
}

uint64_t OUTLINED_FUNCTION_82_2()
{
  return sub_2412A8CFC();
}

uint64_t OUTLINED_FUNCTION_84_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_24125E37C(a1, a2, 2u);
  sub_24125E37C(v3, v2, 2u);
  return sub_24125F7F4(v3, v2, 2u);
}

void OUTLINED_FUNCTION_85_2()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 112) = v1;
  *(_QWORD *)(v2 - 96) = v0;
}

uint64_t OUTLINED_FUNCTION_86_2()
{
  return sub_2412A8D68();
}

_QWORD *OUTLINED_FUNCTION_88_2()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_89_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  return sub_2412A88DC();
}

void OUTLINED_FUNCTION_91_1()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 544) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 552) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 568) = *(_DWORD *)(v0 + 124);
}

uint64_t OUTLINED_FUNCTION_92_2()
{
  return OUTLINED_FUNCTION_143();
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  uint64_t (*v0)(uint64_t, uint64_t, _QWORD);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1, 0);
}

uint64_t OUTLINED_FUNCTION_94_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);

  return v2(v1, v0, 1);
}

uint64_t OUTLINED_FUNCTION_95_2()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1, 1);
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  return sub_2412A8BB8();
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  return sub_2412A8BB8();
}

uint64_t OUTLINED_FUNCTION_101_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_106_1@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_2412A8B88();
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  return sub_2412A8C00();
}

void OUTLINED_FUNCTION_109_1()
{
  sub_2412741B0();
}

uint64_t OUTLINED_FUNCTION_110_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = *(_QWORD *)(v2 - 144);
  v4 = *(_QWORD *)(v2 - 136);
  *(_QWORD *)v4 = *(_QWORD *)(v2 - 160);
  *(_QWORD *)(v4 + 8) = v1;
  *(_BYTE *)(v4 + 16) = v0;
  return result;
}

uint64_t OUTLINED_FUNCTION_121_1()
{
  return swift_bridgeObjectRetain();
}

_QWORD *OUTLINED_FUNCTION_122_1()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_124_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_125(uint64_t result)
{
  return sub_24127DCE0(result);
}

void OUTLINED_FUNCTION_129()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 576) = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 584) = *(_QWORD *)(v0 + 112);
  *(_BYTE *)(v0 + 592) = *(_DWORD *)(v0 + 100);
}

uint64_t OUTLINED_FUNCTION_131_0()
{
  return sub_2412A8D68();
}

uint64_t OUTLINED_FUNCTION_132_0()
{
  return sub_2412A8ABC();
}

void OUTLINED_FUNCTION_133_0()
{
  _QWORD *v0;

  v0[13] = 0;
  v0[14] = 0;
  v0[17] = 0;
  v0[18] = 0;
  v0[19] = 0;
  v0[20] = 0;
}

uint64_t OUTLINED_FUNCTION_139_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  *(_BYTE *)(a4 + 16) = a3;
  return sub_2412612D4(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_141_0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)result = *(_QWORD *)a2;
  *(_BYTE *)(result + 8) = *(_BYTE *)(a2 + 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_144(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)v2 = v5;
  *(_BYTE *)(v2 + 8) = 3;
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = v4;
  *(_BYTE *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = result;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

void OUTLINED_FUNCTION_145_0()
{
  RoutingControl.RoutingControlType.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_147_0()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  return sub_24125F80C();
}

uint64_t OUTLINED_FUNCTION_152_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_153_0()
{
  return sub_24125F80C();
}

uint64_t OUTLINED_FUNCTION_154_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, _QWORD);

  return v2(v1, v0, 0);
}

uint64_t OUTLINED_FUNCTION_157_0()
{
  return sub_24125F80C();
}

uint64_t OUTLINED_FUNCTION_161_0()
{
  return sub_24125F80C();
}

void OUTLINED_FUNCTION_162_0()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 100) = 255;
  *(_DWORD *)(v0 + 124) = 255;
}

unint64_t OUTLINED_FUNCTION_163_0@<X0>(uint64_t a1@<X8>)
{
  return (a1 - 32) | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_164_0()
{
  return sub_24125F80C();
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_166_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_168_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_169_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_170_0()
{
  return sub_2412A8D8C();
}

uint64_t OUTLINED_FUNCTION_171_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_172_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_173_0()
{
  return sub_2412A88B8();
}

unint64_t OUTLINED_FUNCTION_174_0()
{
  return 0xD000000000000017;
}

uint64_t OUTLINED_FUNCTION_176_0()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_178_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_179()
{
  return sub_24125F80C();
}

uint64_t OUTLINED_FUNCTION_180()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_181()
{
  return sub_2412A8C90();
}

uint64_t OUTLINED_FUNCTION_182_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_183()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_184(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v1;
  *(_QWORD *)(v2 - 136) = a1;
}

uint64_t OUTLINED_FUNCTION_185_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_188_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  sub_24127C278(a1, a2, a3, a4, v4);
}

__n128 OUTLINED_FUNCTION_193_0()
{
  __n128 *v0;
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 - 96);
  result = *(__n128 *)(v1 - 112);
  *v0 = result;
  v0[1].n128_u8[0] = v2;
  return result;
}

void OUTLINED_FUNCTION_196_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - a1;
}

void OUTLINED_FUNCTION_197_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - a1;
}

void OUTLINED_FUNCTION_198_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_200_0()
{
  uint64_t v0;

  return v0 - 104;
}

unint64_t OUTLINED_FUNCTION_202()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 98) = 4;
  return sub_24129D3CC();
}

void OUTLINED_FUNCTION_205_0()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 100) = 255;
  *(_DWORD *)(v0 + 124) = 255;
}

unint64_t OUTLINED_FUNCTION_206_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 94) = 8;
  return sub_24129D2DC();
}

unint64_t OUTLINED_FUNCTION_207_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 95) = 7;
  return sub_24129D318();
}

unint64_t OUTLINED_FUNCTION_209()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 100) = 2;
  return sub_24129D444();
}

uint64_t OUTLINED_FUNCTION_210()
{
  return 0x6C61767265746E69;
}

unint64_t OUTLINED_FUNCTION_211()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 96) = 6;
  return sub_24129D354();
}

unint64_t OUTLINED_FUNCTION_212()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 97) = 5;
  return sub_24129D390();
}

unint64_t OUTLINED_FUNCTION_213()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 89) = 12;
  return sub_24129D1EC();
}

unint64_t OUTLINED_FUNCTION_215()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 93) = 9;
  return sub_24129D2A0();
}

uint64_t OUTLINED_FUNCTION_216(uint64_t result)
{
  return sub_241297188(result);
}

void OUTLINED_FUNCTION_217(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  sub_24128B05C((uint64_t)va, v1);
}

uint64_t OUTLINED_FUNCTION_218@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return sub_241297188(result);
}

unint64_t OUTLINED_FUNCTION_221()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 90) = 11;
  return sub_24129D228();
}

uint64_t OUTLINED_FUNCTION_223()
{
  return OUTLINED_FUNCTION_143();
}

unint64_t OUTLINED_FUNCTION_224()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 92) = 10;
  return sub_24129D264();
}

unint64_t OUTLINED_FUNCTION_225()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 99) = 3;
  return sub_24129D408();
}

uint64_t OUTLINED_FUNCTION_226()
{
  return sub_2412A8D5C();
}

uint64_t OUTLINED_FUNCTION_227()
{
  return sub_2412A8D68();
}

unint64_t OUTLINED_FUNCTION_229()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 101) = 1;
  return sub_24129D480();
}

unint64_t OUTLINED_FUNCTION_230()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_24129D138();
}

unint64_t OUTLINED_FUNCTION_231()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_24129C914();
}

unint64_t OUTLINED_FUNCTION_232()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_2412972A0();
}

unint64_t OUTLINED_FUNCTION_233()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_24129C9C8();
}

uint64_t OUTLINED_FUNCTION_235()
{
  return sub_2412A88B8();
}

void OUTLINED_FUNCTION_236()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

uint64_t sub_2412A16BC()
{
  uint64_t result;

  sub_2412A1B88();
  result = sub_2412A8A2C();
  qword_257106A90 = result;
  return result;
}

id static OS_os_log.mediaControl.getter()
{
  return sub_2412A189C(&qword_257104578, (id *)&qword_257106A90);
}

uint64_t sub_2412A1734()
{
  uint64_t result;

  sub_2412A1B88();
  result = sub_2412A8A2C();
  qword_257106A98 = result;
  return result;
}

id static OS_os_log.mediaControlOversize.getter()
{
  return sub_2412A189C(&qword_257104580, (id *)&qword_257106A98);
}

uint64_t sub_2412A17B4()
{
  uint64_t result;

  sub_2412A1B88();
  result = sub_2412A8A2C();
  qword_257106AA0 = result;
  return result;
}

id static OS_os_log.mediaControlIPC.getter()
{
  return sub_2412A189C(&qword_257104588, (id *)&qword_257106AA0);
}

uint64_t sub_2412A1824()
{
  uint64_t result;

  sub_2412A1B88();
  result = sub_2412A8A2C();
  qword_257106AA8 = result;
  return result;
}

id static OS_os_log.mediaControlArtwork.getter()
{
  return sub_2412A189C(&qword_257104590, (id *)&qword_257106AA8);
}

id sub_2412A189C(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_2412A18D4(uint64_t a1)
{
  return sub_2412A1940(a1, qword_257106DD0, &qword_257104578, (id *)&qword_257106A90);
}

uint64_t sub_2412A18F8(uint64_t a1)
{
  return sub_2412A1940(a1, qword_257106DE8, &qword_257104588, (id *)&qword_257106AA0);
}

uint64_t sub_2412A191C(uint64_t a1)
{
  return sub_2412A1940(a1, qword_257106E00, &qword_257104590, (id *)&qword_257106AA8);
}

uint64_t sub_2412A1940(uint64_t a1, uint64_t *a2, _QWORD *a3, id *a4)
{
  uint64_t v7;
  id v8;

  v7 = sub_2412A875C();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v8 = *a4;
  return sub_2412A8768();
}

uint64_t sub_2412A19C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2412A1A50();
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_257106E18);
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_257106E18);
  return sub_2412A1AA4(v2);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_2412A1A50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257104C70)
  {
    sub_2412A875C();
    v0 = sub_2412A8A38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257104C70);
  }
}

uint64_t sub_2412A1AA4@<X0>(uint64_t a1@<X8>)
{
  id v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentSettings);
  v3 = objc_msgSend(v2, sel_verboseMediaControlLogging);

  if (v3)
  {
    if (qword_257104598 != -1)
      swift_once();
    v4 = sub_2412A875C();
    v5 = __swift_project_value_buffer(v4, (uint64_t)qword_257106DD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v5, v4);
    v6 = a1;
    v7 = 0;
    v8 = v4;
  }
  else
  {
    v8 = sub_2412A875C();
    v6 = a1;
    v7 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v6, v7, 1, v8);
}

unint64_t sub_2412A1B88()
{
  unint64_t result;

  result = qword_257106AB0;
  if (!qword_257106AB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257106AB0);
  }
  return result;
}

const char *Features.MediaRemote.feature.getter()
{
  return "cayenne";
}

uint64_t Features.MediaRemote.isEnabled.getter()
{
  char v0;
  _BYTE v2[24];
  ValueMetadata *v3;
  unint64_t v4;

  v3 = &type metadata for Features.MediaRemote;
  v4 = sub_2412A1C24();
  v0 = sub_2412A86E4();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  return v0 & 1;
}

unint64_t sub_2412A1C24()
{
  unint64_t result;

  result = qword_25437B280;
  if (!qword_25437B280)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for Features.MediaRemote, &type metadata for Features.MediaRemote);
    atomic_store(result, (unint64_t *)&qword_25437B280);
  }
  return result;
}

const char *Features.MediaRemote.domain.getter()
{
  return "MediaRemote";
}

uint64_t static Features.MediaRemote.== infix(_:_:)()
{
  return 1;
}

uint64_t Features.MediaRemote.hash(into:)()
{
  return sub_2412A8D68();
}

uint64_t Features.MediaRemote.hashValue.getter()
{
  sub_2412A8D5C();
  sub_2412A8D68();
  return sub_2412A8D98();
}

uint64_t sub_2412A1CE0()
{
  return Features.MediaRemote.hashValue.getter();
}

uint64_t sub_2412A1CF4()
{
  return Features.MediaRemote.hash(into:)();
}

uint64_t sub_2412A1D08()
{
  sub_2412A8D5C();
  sub_2412A8D68();
  return sub_2412A8D98();
}

unint64_t sub_2412A1D48()
{
  unint64_t result;

  result = qword_257106AB8;
  if (!qword_257106AB8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for Features.MediaRemote, &type metadata for Features.MediaRemote);
    atomic_store(result, (unint64_t *)&qword_257106AB8);
  }
  return result;
}

const char *sub_2412A1D84()
{
  return "MediaRemote";
}

const char *sub_2412A1D98()
{
  return "cayenne";
}

ValueMetadata *type metadata accessor for Features()
{
  return &type metadata for Features;
}

uint64_t storeEnumTagSinglePayload for Features.MediaRemote(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2412A1DFC + 4 * byte_2412B329C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2412A1E1C + 4 * byte_2412B32A1[v4]))();
}

_BYTE *sub_2412A1DFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2412A1E1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412A1E24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412A1E2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412A1E34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412A1E3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Features.MediaRemote()
{
  return &type metadata for Features.MediaRemote;
}

void sub_2412A1E58(_QWORD *a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_24127C198(a1);
    if ((v2 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_44();
}

void sub_2412A1E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  id v6;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = sub_24127C1E4(a1, a2);
    if ((v5 & 1) != 0)
      v6 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * v4);
  }
  OUTLINED_FUNCTION_44();
}

double sub_2412A1ED4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_24127C760(a1), (v6 & 1) != 0))
  {
    sub_241262070(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_2412A1F24(uint64_t a1, uint64_t a2, void (*a3)(os_log_t, NSObject *, _QWORD *), uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  const __CFData *v25;
  CGImageSource *v26;
  uint64_t v27;
  uint64_t inited;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  __CFString *v32;
  __CFString *v33;
  const __CFDictionary *v34;
  CFDictionaryRef v35;
  CFDictionaryRef v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  NSObject *v44;
  double v45;
  const __CFString *v47;
  _QWORD *v48;
  CGImageSourceRef v49;
  double v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  int EnumTagSinglePayload;
  uint64_t v56;
  _QWORD *v57;
  unint64_t v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  NSObject *v65;
  NSObject *v66;
  NSObject *v67;
  NSObject *v68;
  char v69;
  _QWORD *v70;
  NSObject *v71;
  uint64_t v72;
  void *v73;
  void *v74;
  uint64_t v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  id v80;
  id v81;
  const __CFDictionary *v82;
  __CFData *v83;
  __CFString *v84;
  CGImageDestination *v85;
  CGImageSourceRef v86;
  NSObject *v87;
  uint64_t v88;
  unint64_t v89;
  __CFData *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  objc_class *v96;
  _QWORD *v97;
  uint64_t v98;
  char v99;
  __CFData *v100;
  char v101;
  NSObject *v102;
  int v103;
  unint64_t v104;
  uint64_t v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  id v115;
  id v116;
  const __CFDictionary *v117;
  __CFData *v118;
  __CFString *v119;
  CGImageDestination *v120;
  NSObject *v121;
  unint64_t v122;
  __CFData *v123;
  os_log_type_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  __CFData *v129;
  uint64_t v130;
  __CFData *v131;
  uint64_t v132;
  os_log_t v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  NSObject *v137;
  id v138;
  __CFString *v139;
  uint64_t v140;
  void (*v141)(os_log_t, NSObject *, _QWORD *);
  NSObject *v142;
  os_log_t v143;
  NSObject *v144;
  NSObject *v145;
  uint64_t v146;
  NSObject *v147;
  _QWORD *v148;
  unint64_t v149;
  uint64_t v150;
  NSObject *v151;
  uint64_t v152;
  uint64_t v153;
  const __CFDictionary *v154;
  id v155;
  uint64_t v156;
  uint64_t v157[5];
  _QWORD *v158;
  uint64_t v159;
  CGImageSourceRef v160;

  v149 = a5;
  v146 = a4;
  sub_2412A32A0(0, &qword_257106B58, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v9 = (char *)&v132 - v8;
  v148 = (_QWORD *)sub_2412A8738();
  v10 = *(v148 - 1);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v143 = (os_log_t)((char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_37_3();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v144 = ((char *)&v132 - v12);
  OUTLINED_FUNCTION_37_3();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v145 = ((char *)&v132 - v13);
  OUTLINED_FUNCTION_37_3();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v147 = ((char *)&v132 - v14);
  sub_2412A32A0(0, (unint64_t *)&qword_257104C70, (void (*)(uint64_t))MEMORY[0x24BEE78D8]);
  v150 = v15;
  v16 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v18 = ((char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v142 = ((char *)&v132 - v19);
  OUTLINED_FUNCTION_37_3();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = ((char *)&v132 - v22);
  MEMORY[0x24BDAC7A8](v21);
  v151 = ((char *)&v132 - v24);
  v152 = a2;
  v153 = a1;
  v25 = (const __CFData *)sub_2412A86C0();
  v26 = CGImageSourceCreateWithData(v25, 0);

  if (!v26)
  {
    sub_2412A32E8();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_31_2();
    return v10;
  }
  v141 = a3;
  v136 = v18;
  v137 = v23;
  v27 = MEMORY[0x24BEE1328];
  sub_2412A33E4(0, &qword_257106B68, &qword_257106B70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2412A9A20;
  v29 = (void *)*MEMORY[0x24BDD97D0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD97D0];
  *(_BYTE *)(inited + 40) = 0;
  type metadata accessor for CFString(0);
  v31 = v30;
  sub_241262190(&qword_257104878, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_2412A95D4);
  v33 = v32;
  v138 = v29;
  sub_2412A8864();
  v139 = v33;
  v140 = v31;
  v34 = (const __CFDictionary *)sub_2412A8834();
  OUTLINED_FUNCTION_134();
  v160 = v26;
  v154 = v34;
  v35 = CGImageSourceCopyPropertiesAtIndex(v26, 0, v34);
  if (!v35)
  {
    __break(1u);
    goto LABEL_89;
  }
  v36 = v35;
  v157[0] = 0;
  sub_2412A8840();
  if (!v157[0])
  {
LABEL_89:
    __break(1u);
LABEL_90:
    swift_once();
    goto LABEL_63;
  }

  v155 = (id)sub_2412A88A0();
  v156 = v37;
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_24_5();
  sub_24127CA4C((uint64_t)v157);
  if (!v159)
  {
    OUTLINED_FUNCTION_134();
LABEL_22:
    sub_2412A3324((uint64_t)&v158);
    goto LABEL_24;
  }
  sub_241261758(0, &qword_257106B80);
  if ((OUTLINED_FUNCTION_8_3() & 1) == 0)
  {
    OUTLINED_FUNCTION_134();
    goto LABEL_24;
  }
  v38 = v155;
  v39 = objc_msgSend(v155, sel_integerValue);

  v155 = (id)sub_2412A88A0();
  v156 = v40;
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_24_5();
  OUTLINED_FUNCTION_134();
  sub_24127CA4C((uint64_t)v157);
  if (!v159)
    goto LABEL_22;
  if ((OUTLINED_FUNCTION_8_3() & 1) == 0)
  {
LABEL_24:
    v49 = v160;
    sub_2412A32E8();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_31_2();

    OUTLINED_FUNCTION_4_2();
    return v10;
  }
  v41 = v155;
  v42 = objc_msgSend(v155, sel_integerValue);

  if ((uint64_t)v42 <= (uint64_t)v39)
    v43 = (uint64_t)v39;
  else
    v43 = (uint64_t)v42;
  v44 = v160;
  if (__OFSUB__(v43, v141))
  {
    __break(1u);
    goto LABEL_80;
  }
  v45 = (double)v43 / (double)(uint64_t)v141;
  if (v43 - (uint64_t)v141 >= 101 && v45 > 1.25)
  {
    v51 = floor(v45);
    if ((~*(_QWORD *)&v51 & 0x7FF0000000000000) != 0)
    {
      v9 = (char *)v152;
      v10 = v153;
      v44 = v151;
      if (v51 > -9.22337204e18)
      {
        if (v51 < 9.22337204e18)
        {
          v52 = flsl((uint64_t)v51);
          v53 = v52 - 1;
          if (!__OFSUB__(v52, 1))
          {
            if ((v52 - 66) < 0xFFFFFF7F)
            {
LABEL_31:
              v148 = 0;
              goto LABEL_35;
            }
            if ((v53 & 0x80000000) != 0)
            {
              if (v53 <= 0xFFFFFFC0)
                v148 = 0;
              else
                v148 = (_QWORD *)(1uLL >> (1 - v52));
              v10 = v153;
              v44 = v151;
              v9 = (char *)v152;
            }
            else
            {
              if (v53 >= 0x40)
                goto LABEL_31;
              v148 = (_QWORD *)(1 << v53);
            }
LABEL_35:
            if (qword_2571045B0 == -1)
            {
LABEL_36:
              v147 = __swift_project_value_buffer(v150, (uint64_t)qword_257106E18);
              sub_24126958C((uint64_t)v147, (uint64_t)v44);
              v54 = sub_2412A875C();
              EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v54);
              v150 = v54;
              if (EnumTagSinglePayload == 1)
              {
                sub_2412A33AC((uint64_t)v44, (unint64_t *)&qword_257104C70, (void (*)(uint64_t))MEMORY[0x24BEE78D8]);
                v57 = v148;
              }
              else
              {
                v135 = (uint64_t)v42;
                v58 = v149;
                OUTLINED_FUNCTION_101_0();
                OUTLINED_FUNCTION_13_5();
                OUTLINED_FUNCTION_101_0();
                OUTLINED_FUNCTION_13_5();
                sub_2412A8750();
                v59 = OUTLINED_FUNCTION_17_5();
                LODWORD(v145) = v59;
                if (os_log_type_enabled(v44, v59))
                {
                  v60 = OUTLINED_FUNCTION_9();
                  v143 = v44;
                  v134 = (uint64_t)v39;
                  v61 = v60;
                  v144 = OUTLINED_FUNCTION_9();
                  v157[0] = (uint64_t)v144;
                  *(_DWORD *)v61 = 136316418;
                  OUTLINED_FUNCTION_101_0();
                  v62 = OUTLINED_FUNCTION_34_4();
                  v64 = sub_24125FA14(v62, v58, v63);
                  OUTLINED_FUNCTION_21_4(v64);
                  sub_2412A8A44();
                  OUTLINED_FUNCTION_20_4();
                  *(_WORD *)(v61 + 12) = 2080;
                  sub_24125E338(v10, (unint64_t)v9);
                  sub_2412A86B4();
                  OUTLINED_FUNCTION_32_4();
                  v158 = (_QWORD *)OUTLINED_FUNCTION_23_3();
                  sub_2412A8A44();
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_32_4();
                  sub_24125F7B0(v10, (unint64_t)v9);
                  *(_WORD *)(v61 + 22) = 2048;
                  OUTLINED_FUNCTION_6_6(v134);
                  *(_WORD *)(v61 + 32) = 2048;
                  OUTLINED_FUNCTION_6_6(v135);
                  *(_WORD *)(v61 + 42) = 2048;
                  OUTLINED_FUNCTION_6_6((uint64_t)v141);
                  *(_WORD *)(v61 + 52) = 2048;
                  v158 = v148;
                  sub_2412A8A44();
                  _os_log_impl(&dword_24125A000, v143, (os_log_type_t)v145, "[ImageUtilities] Format<%s> %s, size:%ldx%ld to: %ld, subsample: %ld", (uint8_t *)v61, 0x3Eu);
                  swift_arrayDestroy();
                  OUTLINED_FUNCTION_5();
                }
                OUTLINED_FUNCTION_19_5();

                OUTLINED_FUNCTION_35_3();
                OUTLINED_FUNCTION_35_3();
                v57 = v148;
                v56 = (*(uint64_t (**)(NSObject *, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v44, v54);
              }
              OUTLINED_FUNCTION_30_1(v56, &qword_257106B90, &qword_257106B98);
              v72 = swift_initStackObject();
              *(_OWORD *)(v72 + 16) = xmmword_2412B3370;
              v73 = v138;
              *(_QWORD *)(v72 + 32) = v138;
              *(_BYTE *)(v72 + 40) = 0;
              v74 = (void *)*MEMORY[0x24BDD97F8];
              v75 = MEMORY[0x24BEE1768];
              *(_QWORD *)(v72 + 64) = MEMORY[0x24BEE1328];
              *(_QWORD *)(v72 + 72) = v74;
              *(_QWORD *)(v72 + 80) = v57;
              v76 = (void *)*MEMORY[0x24BDD9218];
              *(_QWORD *)(v72 + 104) = v75;
              *(_QWORD *)(v72 + 112) = v76;
              *(_QWORD *)(v72 + 120) = v141;
              v77 = (void *)*MEMORY[0x24BDD9220];
              *(_QWORD *)(v72 + 144) = v75;
              *(_QWORD *)(v72 + 152) = v77;
              *(_QWORD *)(v72 + 184) = MEMORY[0x24BEE13C8];
              *(_QWORD *)(v72 + 160) = 0x3FECCCCCCCCCCCCDLL;
              v78 = v73;
              v79 = v74;
              v80 = v76;
              v81 = v77;
              OUTLINED_FUNCTION_9_5();
              v82 = (const __CFDictionary *)OUTLINED_FUNCTION_12_2();
              swift_bridgeObjectRelease();
              v83 = (__CFData *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
              v84 = (__CFString *)OUTLINED_FUNCTION_3_5();
              v85 = CGImageDestinationCreateWithData(v83, v84, 1uLL, v82);

              if (v85)
              {
                v86 = v160;
                CGImageDestinationAddImageFromSource(v85, v160, 0, v82);
                CGImageDestinationFinalize(v85);
                if ((uint64_t)-[__CFData length](v83, sel_length) > 0)
                {
                  v87 = v137;
                  sub_24126958C((uint64_t)v147, (uint64_t)v137);
                  v88 = v150;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v150) == 1)
                  {
                    sub_2412A33AC((uint64_t)v87, (unint64_t *)&qword_257104C70, (void (*)(uint64_t))MEMORY[0x24BEE78D8]);
                  }
                  else
                  {
                    v89 = v149;
                    swift_bridgeObjectRetain_n();
                    v90 = v83;
                    sub_2412A8750();
                    v91 = OUTLINED_FUNCTION_17_5();
                    if (OUTLINED_FUNCTION_14_5(v91))
                    {
                      v92 = OUTLINED_FUNCTION_9();
                      v148 = v90;
                      v93 = v92;
                      v151 = OUTLINED_FUNCTION_9();
                      v152 = OUTLINED_FUNCTION_9();
                      v157[0] = v152;
                      *(_DWORD *)v93 = 136315394;
                      swift_bridgeObjectRetain();
                      v94 = OUTLINED_FUNCTION_34_4();
                      v158 = (_QWORD *)sub_24125FA14(v94, v89, v95);
                      v147 = v87;
                      sub_2412A8A44();
                      OUTLINED_FUNCTION_20_4();
                      *(_WORD *)(v93 + 12) = 2112;
                      v149 = v93 + 14;
                      v96 = (objc_class *)v148;
                      v158 = v148;
                      v97 = v148;
                      sub_2412A8A44();
                      v151->isa = v96;

                      OUTLINED_FUNCTION_15_2(&dword_24125A000, v147, v98, "[ImageUtilities] Format<%s> result: %@");
                      sub_2412601A0();
                      swift_arrayDestroy();
                      OUTLINED_FUNCTION_5();
                    }

                    OUTLINED_FUNCTION_19_5();
                    (*(void (**)(NSObject *, uint64_t))(*(_QWORD *)(v88 - 8) + 8))(v137, v88);
                  }
                  v100 = v83;
                  v10 = sub_2412A86D8();
                  OUTLINED_FUNCTION_7_7();
                  OUTLINED_FUNCTION_4_2();

                  return v10;
                }

              }
              else
              {
                OUTLINED_FUNCTION_7_7();
              }

              goto LABEL_51;
            }
LABEL_84:
            swift_once();
            goto LABEL_36;
          }
LABEL_83:
          __break(1u);
          goto LABEL_84;
        }
LABEL_82:
        __break(1u);
        goto LABEL_83;
      }
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v135 = (uint64_t)v42;
  v47 = (id)CGImageSourceGetType(v160);
  if (!v47)
  {

LABEL_51:
    OUTLINED_FUNCTION_4_2();
    goto LABEL_57;
  }
  v33 = (__CFString *)v47;
  sub_2412A88A0();
  sub_2412A8744();
  v48 = v148;
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v148) == 1)
  {

    OUTLINED_FUNCTION_4_2();
    sub_2412A33AC((uint64_t)v9, &qword_257106B58, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
LABEL_57:
    v10 = v153;
    OUTLINED_FUNCTION_13_5();
    return v10;
  }
  v134 = (uint64_t)v39;
  v65 = v147;
  (*(void (**)(NSObject *, char *, _QWORD *))(v10 + 32))(v147, v9, v48);
  v66 = v145;
  v141 = *(void (**)(os_log_t, NSObject *, _QWORD *))(v10 + 16);
  v141(v145, v65, v48);
  v67 = v144;
  sub_2412A872C();
  sub_241262190(&qword_257106B88, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE63E8]);
  v151 = v68;
  v69 = sub_2412A8888();
  v70 = *(_QWORD **)(v10 + 8);
  ((void (*)(NSObject *, _QWORD *))v70)(v67, v48);
  v10 = (uint64_t)v48;
  if ((v69 & 1) != 0)
  {
    OUTLINED_FUNCTION_4_2();

    OUTLINED_FUNCTION_7_7();
    OUTLINED_FUNCTION_5_6((uint64_t)v66);
    v71 = v65;
LABEL_56:
    OUTLINED_FUNCTION_5_6((uint64_t)v71);
    goto LABEL_57;
  }
  sub_2412A8714();
  OUTLINED_FUNCTION_29_5();
  v99 = sub_2412A8888();
  OUTLINED_FUNCTION_5_6((uint64_t)v67);
  if ((v99 & 1) != 0)
  {
    OUTLINED_FUNCTION_4_2();

    OUTLINED_FUNCTION_7_7();
    OUTLINED_FUNCTION_5_6((uint64_t)v66);
    v71 = v147;
    goto LABEL_56;
  }
  sub_2412A8720();
  OUTLINED_FUNCTION_29_5();
  v101 = sub_2412A8888();
  OUTLINED_FUNCTION_5_6((uint64_t)v67);
  OUTLINED_FUNCTION_5_6((uint64_t)v66);
  if ((v101 & 1) != 0)
  {
    OUTLINED_FUNCTION_5_6((uint64_t)v147);

    OUTLINED_FUNCTION_7_7();
    OUTLINED_FUNCTION_4_2();
    goto LABEL_57;
  }
  v151 = v70;
  v27 = v153;
  if (qword_2571045B0 != -1)
    goto LABEL_90;
LABEL_63:
  v145 = __swift_project_value_buffer(v150, (uint64_t)qword_257106E18);
  v102 = v142;
  sub_24126958C((uint64_t)v145, (uint64_t)v142);
  v150 = sub_2412A875C();
  v103 = __swift_getEnumTagSinglePayload((uint64_t)v102, 1, v150);
  v104 = v149;
  v137 = v33;
  if (v103 == 1)
  {
    sub_2412A33AC((uint64_t)v102, (unint64_t *)&qword_257104C70, (void (*)(uint64_t))MEMORY[0x24BEE78D8]);
  }
  else
  {
    v141(v143, v147, (_QWORD *)v10);
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_26_5(v27);
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_26_5(v27);
    sub_2412A8750();
    v106 = OUTLINED_FUNCTION_17_5();
    LODWORD(v144) = v106;
    if (os_log_type_enabled(v102, v106))
    {
      v107 = OUTLINED_FUNCTION_9();
      v141 = (void (*)(os_log_t, NSObject *, _QWORD *))OUTLINED_FUNCTION_9();
      v157[0] = (uint64_t)v141;
      *(_DWORD *)v107 = 136316162;
      v133 = v102;
      OUTLINED_FUNCTION_81_0();
      v108 = OUTLINED_FUNCTION_34_4();
      v158 = (_QWORD *)sub_24125FA14(v108, v104, v109);
      OUTLINED_FUNCTION_25_4();
      OUTLINED_FUNCTION_20_4();
      *(_WORD *)(v107 + 12) = 2080;
      OUTLINED_FUNCTION_26_5(v27);
      sub_2412A86B4();
      OUTLINED_FUNCTION_2_4();
      v158 = (_QWORD *)OUTLINED_FUNCTION_23_3();
      OUTLINED_FUNCTION_25_4();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_2_4();
      *(_WORD *)(v107 + 22) = 2048;
      OUTLINED_FUNCTION_18_4(v134);
      *(_WORD *)(v107 + 32) = 2048;
      OUTLINED_FUNCTION_18_4(v135);
      *(_WORD *)(v107 + 42) = 2080;
      sub_241262190(&qword_257106BA0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE6408]);
      v110 = sub_2412A8CE4();
      v158 = (_QWORD *)sub_24125FA14(v110, v111, v157);
      sub_2412A8A44();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_7();
      _os_log_impl(&dword_24125A000, v133, (os_log_type_t)v144, "[ImageUtilities] Format<%s> %s, size:%ldx%ld f: %s", (uint8_t *)v107, 0x34u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }
    OUTLINED_FUNCTION_19_5();

    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_11_7();
    v105 = (*(uint64_t (**))(*(_QWORD *)(v150 - 8) + 8))(v102);
  }
  OUTLINED_FUNCTION_30_1(v105, &qword_257106B90, &qword_257106B98);
  v112 = swift_initStackObject();
  *(_OWORD *)(v112 + 16) = xmmword_2412B3360;
  v113 = v138;
  *(_QWORD *)(v112 + 32) = v138;
  *(_BYTE *)(v112 + 40) = 0;
  v114 = (void *)*MEMORY[0x24BDD9220];
  *(_QWORD *)(v112 + 64) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v112 + 72) = v114;
  *(_QWORD *)(v112 + 104) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v112 + 80) = 0x3FECCCCCCCCCCCCDLL;
  v115 = v113;
  v116 = v114;
  OUTLINED_FUNCTION_9_5();
  v117 = (const __CFDictionary *)OUTLINED_FUNCTION_12_2();
  swift_bridgeObjectRelease();
  v118 = (__CFData *)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEC8]), sel_init);
  v119 = (__CFString *)OUTLINED_FUNCTION_3_5();
  v120 = CGImageDestinationCreateWithData(v118, v119, 1uLL, v117);

  if (!v120)
  {
    OUTLINED_FUNCTION_11_7();
LABEL_74:

    OUTLINED_FUNCTION_7_7();
    goto LABEL_51;
  }
  CGImageDestinationAddImageFromSource(v120, v160, 0, v117);
  CGImageDestinationFinalize(v120);
  if ((uint64_t)-[__CFData length](v118, sel_length) <= 0)
  {
    OUTLINED_FUNCTION_11_7();

    goto LABEL_74;
  }
  v121 = v136;
  sub_24126958C((uint64_t)v145, (uint64_t)v136);
  if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v150) == 1)
  {
    sub_2412A33AC((uint64_t)v121, (unint64_t *)&qword_257104C70, (void (*)(uint64_t))MEMORY[0x24BEE78D8]);
  }
  else
  {
    v122 = v149;
    swift_bridgeObjectRetain_n();
    v123 = v118;
    sub_2412A8750();
    v124 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_14_5(v124))
    {
      v125 = OUTLINED_FUNCTION_9();
      v145 = OUTLINED_FUNCTION_9();
      v152 = OUTLINED_FUNCTION_9();
      v157[0] = v152;
      *(_DWORD *)v125 = 136315394;
      v144 = v121;
      swift_bridgeObjectRetain();
      v126 = OUTLINED_FUNCTION_34_4();
      v128 = sub_24125FA14(v126, v122, v127);
      OUTLINED_FUNCTION_21_4(v128);
      sub_2412A8A44();
      OUTLINED_FUNCTION_20_4();
      *(_WORD *)(v125 + 12) = 2112;
      v149 = v125 + 22;
      v158 = v123;
      v129 = v123;
      sub_2412A8A44();
      v145->isa = v123;

      OUTLINED_FUNCTION_15_2(&dword_24125A000, v144, v130, "[ImageUtilities] Format<%s> result: %@");
      sub_2412601A0();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_5();
    }

    OUTLINED_FUNCTION_19_5();
    (*(void (**))(*(_QWORD *)(v150 - 8) + 8))(v136);
  }
  v131 = v118;
  v10 = sub_2412A86D8();
  OUTLINED_FUNCTION_4_2();

  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_11_7();
  return v10;
}

uint64_t sub_2412A322C()
{
  sub_2412A8D5C();
  sub_2412A8D68();
  return sub_2412A8D98();
}

uint64_t sub_2412A3270()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageUtilities()
{
  return objc_opt_self();
}

void sub_2412A32A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2412A8A38();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_44();
}

unint64_t sub_2412A32E8()
{
  unint64_t result;

  result = qword_257106B60;
  if (!qword_257106B60)
  {
    result = MEMORY[0x242691F34](&unk_2412B3420, &type metadata for ImageUtilities.Error);
    atomic_store(result, (unint64_t *)&qword_257106B60);
  }
  return result;
}

uint64_t sub_2412A3324(uint64_t a1)
{
  uint64_t v2;

  sub_2412A3360();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2412A3360()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257106B78)
  {
    v0 = sub_2412A8A38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257106B78);
  }
}

void sub_2412A33AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_2412A32A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  OUTLINED_FUNCTION_44();
}

void sub_2412A33E4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_2412A3434(255, a3);
    v4 = sub_2412A8CF0();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_44();
}

void sub_2412A3434(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    type metadata accessor for CFString(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t storeEnumTagSinglePayload for ImageUtilities.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2412A34D8 + 4 * byte_2412B3398[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2412A34F8 + 4 * byte_2412B339D[v4]))();
}

_BYTE *sub_2412A34D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2412A34F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412A3500(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412A3508(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412A3510(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412A3518(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ImageUtilities.Error()
{
  return &type metadata for ImageUtilities.Error;
}

unint64_t sub_2412A3538()
{
  unint64_t result;

  result = qword_257106BA8;
  if (!qword_257106BA8)
  {
    result = MEMORY[0x242691F34](&unk_2412B33F8, &type metadata for ImageUtilities.Error);
    atomic_store(result, (unint64_t *)&qword_257106BA8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_24125F7B0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return sub_2412A8894();
}

void OUTLINED_FUNCTION_4_2()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_5_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_6_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return sub_2412A8A44();
}

void OUTLINED_FUNCTION_7_7()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  return sub_2412A8864();
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return sub_2412A8834();
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24125E338(v0, v1);
}

BOOL OUTLINED_FUNCTION_14_5(os_log_type_t a1)
{
  uint64_t v1;
  NSObject *v2;

  *(_DWORD *)(v1 + 168) = a1;
  return os_log_type_enabled(v2, a1);
}

void OUTLINED_FUNCTION_15_2(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, (os_log_type_t)*(_DWORD *)(v4 + 168), a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return sub_2412A89D8();
}

uint64_t OUTLINED_FUNCTION_18_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_21_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t OUTLINED_FUNCTION_23_3()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_24125FA14(v0, v1, (uint64_t *)(v2 - 208));
}

double OUTLINED_FUNCTION_24_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2412A1ED4(v1 - 208, v0, (_OWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return sub_2412A8A44();
}

uint64_t OUTLINED_FUNCTION_26_5(uint64_t a1)
{
  unint64_t v1;

  return sub_24125E338(a1, v1);
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_30_1(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_2412A33E4(0, a2, a3);
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24125F7B0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24125F7B0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  return sub_2412A8A98();
}

void RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

void RoutingInteraction.Action.HandoffContext.mediaTitle.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

MediaControl::RoutingInteraction::Action::HandoffContext __swiftcall RoutingInteraction.Action.HandoffContext.init(sourceBundleIdentifier:mediaTitle:)(Swift::String sourceBundleIdentifier, Swift::String mediaTitle)
{
  Swift::String *v2;
  MediaControl::RoutingInteraction::Action::HandoffContext result;

  *v2 = sourceBundleIdentifier;
  v2[1] = mediaTitle;
  result.mediaTitle = mediaTitle;
  result.sourceBundleIdentifier = sourceBundleIdentifier;
  return result;
}

uint64_t RoutingInteraction.Action.HandoffContext.description.getter()
{
  uint64_t v0;
  uint64_t v2;

  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_75_3();
  v2 = v0;
  OUTLINED_FUNCTION_40_0();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  swift_bridgeObjectRetain();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_80_1();
  return v2;
}

uint64_t RoutingInteraction.Action.HandoffContext.hash(into:)()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_64_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_48_2();
  return swift_bridgeObjectRelease();
}

uint64_t static RoutingInteraction.Action.HandoffContext.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = OUTLINED_FUNCTION_21_0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      OUTLINED_FUNCTION_76_0();
      return sub_2412A8CFC();
    }
  }
  return result;
}

uint64_t sub_2412A393C(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000016 && a2 == 0x80000002412B5210 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746954616964656DLL && a2 == 0xEA0000000000656CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2412A3A30(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746954616964656DLL;
  else
    return 0xD000000000000016;
}

uint64_t sub_2412A3A70()
{
  char *v0;

  return sub_2412A3A30(*v0);
}

uint64_t sub_2412A3A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A393C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412A3A9C()
{
  sub_2412A3C00();
  return sub_2412A8DBC();
}

uint64_t sub_2412A3AC4()
{
  sub_2412A3C00();
  return sub_2412A8DC8();
}

void RoutingInteraction.Action.HandoffContext.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  v3 = v2;
  sub_24127C278(0, &qword_257106BB0, (uint64_t (*)(void))sub_2412A3C00, (uint64_t)&type metadata for RoutingInteraction.Action.HandoffContext.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_41_2();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2412A3C00();
  sub_2412A8DB0();
  sub_2412A8C78();
  if (!v0)
    OUTLINED_FUNCTION_45_4();
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_2412A3C00()
{
  unint64_t result;

  result = qword_257106BB8;
  if (!qword_257106BB8)
  {
    result = MEMORY[0x242691F34](&unk_2412B4284, &type metadata for RoutingInteraction.Action.HandoffContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106BB8);
  }
  return result;
}

uint64_t RoutingInteraction.Action.HandoffContext.hashValue.getter()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_40_0();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_48_2();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_39_2();
}

void RoutingInteraction.Action.HandoffContext.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v21 = v3;
  OUTLINED_FUNCTION_6_2(v1, &qword_257106BC0, (uint64_t (*)(void))sub_2412A3C00, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - v9;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2412A3C00();
  OUTLINED_FUNCTION_22_3();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    v11 = v21;
    OUTLINED_FUNCTION_58_2();
    v12 = OUTLINED_FUNCTION_42_1();
    v14 = v13;
    swift_bridgeObjectRetain();
    v15 = OUTLINED_FUNCTION_42_1();
    v17 = v16;
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19 = v15;
    v18(v10, v6);
    *v11 = v12;
    v11[1] = v14;
    v11[2] = v19;
    v11[3] = v17;
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_53_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_0();
  }
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_2412A3DE0()
{
  sub_2412A8D5C();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  return sub_2412A8D98();
}

void sub_2412A3E60()
{
  RoutingInteraction.Action.HandoffContext.init(from:)();
}

void sub_2412A3E74()
{
  RoutingInteraction.Action.HandoffContext.encode(to:)();
}

void RoutingInteraction.Action.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2412A3ED0()
{
  uint64_t v1;

  OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_78_3();
  sub_2412A88DC();
  sub_2412A88DC();
  sub_2412A88DC();
  OUTLINED_FUNCTION_80_1();
  return v1;
}

void RoutingInteraction.Action.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_2412A417C()
{
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_64_3();
  return sub_2412A88B8();
}

uint64_t sub_2412A41E4()
{
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_62_3();
  sub_2412A88B8();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_40_0();
  sub_2412A88B8();
  return swift_bridgeObjectRelease();
}

void static RoutingInteraction.Action.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_2412A4304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  BOOL v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  if (v9)
  {
    v13 = OUTLINED_FUNCTION_53_4();
    sub_2412A46CC(v13, v14, v15, v16, v17);
    v18 = OUTLINED_FUNCTION_79_1();
    sub_2412A46CC(v18, v19, v20, v21, v8);
    v22 = OUTLINED_FUNCTION_79_1();
    sub_2412A473C(v22, v23, v24, v25, v8);
    v26 = OUTLINED_FUNCTION_53_4();
LABEL_13:
    sub_2412A473C(v26, v27, v28, v29, v30);
    v12 = 0;
    return v12 & 1;
  }
  v10 = v7 == v3 && v6 == v2;
  if (!v10 && (OUTLINED_FUNCTION_4_3() & 1) == 0)
  {
    OUTLINED_FUNCTION_32_5();
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_40_4();
    v26 = OUTLINED_FUNCTION_55_3();
    goto LABEL_13;
  }
  if (v5 == v1 && v4 == v0)
    v12 = 1;
  else
    v12 = OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_32_5();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_40_4();
  v31 = OUTLINED_FUNCTION_55_3();
  sub_2412A473C(v31, v32, v33, v34, v35);
  return v12 & 1;
}

uint64_t sub_2412A46CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 1:
    case 2:
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 3:
    case 4:
LABEL_4:
      result = swift_bridgeObjectRetain();
      break;
    case 5:
    case 6:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2412A473C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 3:
    case 4:
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    case 5:
    case 6:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2412A47AC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F6973736573;
  else
    return 1835365481;
}

uint64_t sub_2412A47DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 6579297 && a2 == 0xE300000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65766F6D6572 && a2 == 0xE600000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 7628147 && a2 == 0xE300000000000000;
      if (v7 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000002412B5230 || (sub_2412A8CFC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x7669746341746573 && a2 == 0xED00006D65744965;
        if (v8 || (sub_2412A8CFC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x66666F646E6168 && a2 == 0xE700000000000000;
          if (v9 || (sub_2412A8CFC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x6C6F72746E6F63 && a2 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v11 = sub_2412A8CFC();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_2412A4AA8()
{
  return 7;
}

uint64_t sub_2412A4AB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2412A4ADC + 4 * byte_2412B3483[a1]))(6579297, 0xE300000000000000);
}

uint64_t sub_2412A4ADC()
{
  return 0x65766F6D6572;
}

uint64_t sub_2412A4AF0()
{
  return 7628147;
}

unint64_t sub_2412A4AFC()
{
  return 0xD000000000000010;
}

uint64_t sub_2412A4B18()
{
  return 0x7669746341746573;
}

uint64_t sub_2412A4B3C()
{
  return 0x66666F646E6168;
}

uint64_t sub_2412A4B54()
{
  return 0x6C6F72746E6F63;
}

uint64_t sub_2412A4B6C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2412A4BD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1835365481 && a2 == 0xE400000000000000;
    if (v6 || (sub_2412A8CFC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2412A8CFC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2412A4D14(char a1)
{
  if (!a1)
    return 0x6E6F6973736573;
  if (a1 == 1)
    return 1835365481;
  return 0x747865746E6F63;
}

uint64_t sub_2412A4D64(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1835365481 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2412A4DD8()
{
  return 1835365481;
}

uint64_t sub_2412A4DE8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2412A4E6C()
{
  return 0x6E6F6973736573;
}

uint64_t sub_2412A4E84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1835365481 && a2 == 0xE400000000000000;
  if (v2 || (OUTLINED_FUNCTION_21_0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_21_0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2412A4F58()
{
  char *v0;

  return sub_2412A47AC(*v0);
}

uint64_t sub_2412A4F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A4E84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412A4F84()
{
  sub_2412A5B28();
  return sub_2412A8DBC();
}

uint64_t sub_2412A4FAC()
{
  sub_2412A5B28();
  return sub_2412A8DC8();
}

uint64_t sub_2412A4FD4()
{
  unsigned __int8 *v0;

  return sub_2412A4AB0(*v0);
}

uint64_t sub_2412A4FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A47DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412A5000@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2412A4AA8();
  *a1 = result;
  return result;
}

uint64_t sub_2412A5024()
{
  sub_2412A5B64();
  return sub_2412A8DBC();
}

uint64_t sub_2412A504C()
{
  sub_2412A5B64();
  return sub_2412A8DC8();
}

uint64_t sub_2412A5074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A4B6C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412A509C()
{
  sub_2412A59C0();
  return sub_2412A8DBC();
}

uint64_t sub_2412A50C4()
{
  sub_2412A59C0();
  return sub_2412A8DC8();
}

uint64_t sub_2412A50EC()
{
  char *v0;

  return sub_2412A4D14(*v0);
}

uint64_t sub_2412A50F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A4BD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412A5118()
{
  sub_2412A59FC();
  return sub_2412A8DBC();
}

uint64_t sub_2412A5140()
{
  sub_2412A59FC();
  return sub_2412A8DC8();
}

uint64_t sub_2412A5168()
{
  sub_2412A5AEC();
  return sub_2412A8DBC();
}

uint64_t sub_2412A5190()
{
  sub_2412A5AEC();
  return sub_2412A8DC8();
}

uint64_t sub_2412A51BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A4D64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412A51E4()
{
  sub_2412A5A38();
  return sub_2412A8DBC();
}

uint64_t sub_2412A520C()
{
  sub_2412A5A38();
  return sub_2412A8DC8();
}

uint64_t sub_2412A5238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A4DE8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2412A5260()
{
  sub_2412A5A74();
  return sub_2412A8DBC();
}

uint64_t sub_2412A5288()
{
  sub_2412A5A74();
  return sub_2412A8DC8();
}

uint64_t sub_2412A52B0()
{
  sub_2412A5AB0();
  return sub_2412A8DBC();
}

uint64_t sub_2412A52D8()
{
  sub_2412A5AB0();
  return sub_2412A8DC8();
}

void RoutingInteraction.Action.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[36];

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520];
  OUTLINED_FUNCTION_14_4(v1, &qword_257106BC8, (uint64_t (*)(void))sub_2412A59C0, (uint64_t)&type metadata for RoutingInteraction.Action.ControlCodingKeys);
  v36[18] = v4;
  v36[7] = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_2();
  v36[17] = v6;
  OUTLINED_FUNCTION_14_4(v7, &qword_257106BD8, (uint64_t (*)(void))sub_2412A59FC, (uint64_t)&type metadata for RoutingInteraction.Action.HandoffCodingKeys);
  v36[20] = v8;
  v36[1] = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_2();
  v36[19] = v10;
  OUTLINED_FUNCTION_14_4(v11, &qword_257106BE8, (uint64_t (*)(void))sub_2412A5A38, (uint64_t)&type metadata for RoutingInteraction.Action.SetActiveItemCodingKeys);
  v36[16] = v12;
  v36[6] = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_20_2();
  v36[15] = v14;
  OUTLINED_FUNCTION_14_4(v15, &qword_257106BF8, (uint64_t (*)(void))sub_2412A5A74, (uint64_t)&type metadata for RoutingInteraction.Action.SetActiveSessionCodingKeys);
  v36[13] = v16;
  v36[5] = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_20_2();
  v36[11] = v18;
  OUTLINED_FUNCTION_14_4(v19, &qword_257106C08, (uint64_t (*)(void))sub_2412A5AB0, (uint64_t)&type metadata for RoutingInteraction.Action.SetCodingKeys);
  v36[14] = v20;
  v36[4] = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_20_2();
  v36[12] = v22;
  OUTLINED_FUNCTION_14_4(v23, &qword_257106C18, (uint64_t (*)(void))sub_2412A5AEC, (uint64_t)&type metadata for RoutingInteraction.Action.RemoveCodingKeys);
  v36[10] = v24;
  v36[3] = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_20_2();
  v36[9] = v26;
  OUTLINED_FUNCTION_14_4(v27, &qword_257106C28, (uint64_t (*)(void))sub_2412A5B28, (uint64_t)&type metadata for RoutingInteraction.Action.AddCodingKeys);
  v36[8] = v28;
  v36[2] = *(_QWORD *)(v28 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v29);
  sub_24127C278(0, &qword_257106C38, (uint64_t (*)(void))sub_2412A5B64, (uint64_t)&type metadata for RoutingInteraction.Action.CodingKeys, v3);
  v36[27] = v30;
  v36[24] = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)v36 - v32;
  v34 = *(_QWORD *)(v0 + 8);
  v36[22] = *(_QWORD *)(v0 + 16);
  v36[23] = v34;
  v36[21] = *(_QWORD *)(v0 + 24);
  v35 = *(unsigned __int8 *)(v0 + 32);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2412A5B64();
  v36[26] = v33;
  sub_2412A8DB0();
  __asm { BR              X9 }
}

void sub_2412A55F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  *(_BYTE *)(v2 - 144) = 0;
  sub_2412A5B28();
  v4 = *(_QWORD *)(v2 - 160);
  v3 = *(_QWORD *)(v2 - 152);
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_29_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_77_2();
    OUTLINED_FUNCTION_45_4();
  }
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_30_0(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v4, v3);
  OUTLINED_FUNCTION_0_1();
}

unint64_t sub_2412A59C0()
{
  unint64_t result;

  result = qword_257106BD0;
  if (!qword_257106BD0)
  {
    result = MEMORY[0x242691F34](&unk_2412B4234, &type metadata for RoutingInteraction.Action.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106BD0);
  }
  return result;
}

unint64_t sub_2412A59FC()
{
  unint64_t result;

  result = qword_257106BE0;
  if (!qword_257106BE0)
  {
    result = MEMORY[0x242691F34](&unk_2412B41E4, &type metadata for RoutingInteraction.Action.HandoffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106BE0);
  }
  return result;
}

unint64_t sub_2412A5A38()
{
  unint64_t result;

  result = qword_257106BF0;
  if (!qword_257106BF0)
  {
    result = MEMORY[0x242691F34](&unk_2412B4194, &type metadata for RoutingInteraction.Action.SetActiveItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106BF0);
  }
  return result;
}

unint64_t sub_2412A5A74()
{
  unint64_t result;

  result = qword_257106C00;
  if (!qword_257106C00)
  {
    result = MEMORY[0x242691F34](&unk_2412B4144, &type metadata for RoutingInteraction.Action.SetActiveSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106C00);
  }
  return result;
}

unint64_t sub_2412A5AB0()
{
  unint64_t result;

  result = qword_257106C10;
  if (!qword_257106C10)
  {
    result = MEMORY[0x242691F34](&unk_2412B40F4, &type metadata for RoutingInteraction.Action.SetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106C10);
  }
  return result;
}

unint64_t sub_2412A5AEC()
{
  unint64_t result;

  result = qword_257106C20;
  if (!qword_257106C20)
  {
    result = MEMORY[0x242691F34](&unk_2412B40A4, &type metadata for RoutingInteraction.Action.RemoveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106C20);
  }
  return result;
}

unint64_t sub_2412A5B28()
{
  unint64_t result;

  result = qword_257106C30;
  if (!qword_257106C30)
  {
    result = MEMORY[0x242691F34](&unk_2412B4054, &type metadata for RoutingInteraction.Action.AddCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106C30);
  }
  return result;
}

unint64_t sub_2412A5B64()
{
  unint64_t result;

  result = qword_257106C40;
  if (!qword_257106C40)
  {
    result = MEMORY[0x242691F34](&unk_2412B4004, &type metadata for RoutingInteraction.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106C40);
  }
  return result;
}

unint64_t sub_2412A5BA0()
{
  unint64_t result;

  result = qword_257106C48;
  if (!qword_257106C48)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingInteraction.Action.HandoffContext, &type metadata for RoutingInteraction.Action.HandoffContext);
    atomic_store(result, (unint64_t *)&qword_257106C48);
  }
  return result;
}

uint64_t RoutingInteraction.Action.hashValue.getter()
{
  OUTLINED_FUNCTION_46_0();
  RoutingInteraction.Action.hash(into:)();
  return OUTLINED_FUNCTION_39_2();
}

void RoutingInteraction.Action.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;

  OUTLINED_FUNCTION_1_2();
  v78 = v0;
  v3 = (_QWORD *)v2;
  v69 = v4;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0];
  OUTLINED_FUNCTION_5_5(v2, &qword_257106C50, (uint64_t (*)(void))sub_2412A59C0, (uint64_t)&type metadata for RoutingInteraction.Action.ControlCodingKeys);
  v67 = v6;
  v60 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_20_2();
  v76 = v8;
  OUTLINED_FUNCTION_5_5(v9, &qword_257106C58, (uint64_t (*)(void))sub_2412A59FC, (uint64_t)&type metadata for RoutingInteraction.Action.HandoffCodingKeys);
  v68 = v10;
  v61 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_20_2();
  v75 = v12;
  OUTLINED_FUNCTION_5_5(v13, &qword_257106C60, (uint64_t (*)(void))sub_2412A5A38, (uint64_t)&type metadata for RoutingInteraction.Action.SetActiveItemCodingKeys);
  v66 = v14;
  v59 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_20_2();
  v74 = v16;
  OUTLINED_FUNCTION_5_5(v17, &qword_257106C68, (uint64_t (*)(void))sub_2412A5A74, (uint64_t)&type metadata for RoutingInteraction.Action.SetActiveSessionCodingKeys);
  v64 = v18;
  v58 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_20_2();
  v71 = v20;
  OUTLINED_FUNCTION_5_5(v21, &qword_257106C70, (uint64_t (*)(void))sub_2412A5AB0, (uint64_t)&type metadata for RoutingInteraction.Action.SetCodingKeys);
  v65 = v22;
  v73 = *(_QWORD *)(v22 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_20_2();
  v72 = v24;
  OUTLINED_FUNCTION_5_5(v25, &qword_257106C78, (uint64_t (*)(void))sub_2412A5AEC, (uint64_t)&type metadata for RoutingInteraction.Action.RemoveCodingKeys);
  v63 = v26;
  v57 = *(_QWORD *)(v26 - 8);
  OUTLINED_FUNCTION_1_4();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_20_2();
  v70 = v28;
  OUTLINED_FUNCTION_5_5(v29, &qword_257106C80, (uint64_t (*)(void))sub_2412A5B28, (uint64_t)&type metadata for RoutingInteraction.Action.AddCodingKeys);
  v62 = v30;
  v31 = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)v54 - v33;
  sub_24127C278(0, &qword_257106C88, (uint64_t (*)(void))sub_2412A5B64, (uint64_t)&type metadata for RoutingInteraction.Action.CodingKeys, v5);
  v36 = v35;
  v37 = *(_QWORD *)(v35 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_41_2();
  v39 = v3[3];
  v77 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v39);
  sub_2412A5B64();
  v40 = v78;
  sub_2412A8DA4();
  if (!v40)
  {
    v54[1] = v34;
    v54[0] = v31;
    v56 = 0;
    v78 = v37;
    v41 = v1;
    v42 = sub_2412A8C24();
    v43 = v36;
    if (*(_QWORD *)(v42 + 16))
    {
      v55 = v36;
      v44 = v1;
      v45 = *(unsigned __int8 *)(v42 + 32);
      v46 = sub_24127AA78(1);
      v48 = v47;
      v50 = v49;
      swift_bridgeObjectRelease();
      v54[2] = v46;
      if (v48 == v50 >> 1)
        __asm { BR              X9 }
      v41 = v44;
      v43 = v55;
    }
    v51 = sub_2412A8AF8();
    swift_allocError();
    v53 = v52;
    sub_2412741B0();
    *v53 = &type metadata for RoutingInteraction.Action;
    sub_2412A8B88();
    sub_2412A8AE0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v51 - 8) + 104))(v53, *MEMORY[0x24BEE26D0], v51);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v41, v43);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
  OUTLINED_FUNCTION_0_1();
}

void sub_2412A60AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  *(_BYTE *)(v3 - 65) = 1;
  sub_2412A5AEC();
  OUTLINED_FUNCTION_3_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_58_2();
    v4 = OUTLINED_FUNCTION_19_6();
    v5 = *(_QWORD *)(v3 - 96);
    v6 = v4;
    v8 = v7;
    *(_BYTE *)(v3 - 65) = 1;
    OUTLINED_FUNCTION_19_6();
    v11 = v10;
    v12 = OUTLINED_FUNCTION_49_3();
    v14 = v13;
    v15(v12, v16);
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v9 = *(_QWORD *)(v3 - 168);
    *(_QWORD *)v9 = v6;
    *(_QWORD *)(v9 + 8) = v8;
    *(_QWORD *)(v9 + 16) = v14;
    *(_QWORD *)(v9 + 24) = v11;
    *(_BYTE *)(v9 + 32) = v2;
    JUMPOUT(0x2412A6098);
  }
  OUTLINED_FUNCTION_0_3();
  JUMPOUT(0x2412A6090);
}

void sub_2412A6268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 - 65) = 5;
  sub_2412A59FC();
  OUTLINED_FUNCTION_3_6();
  if (!v1)
  {
    v4 = (_QWORD *)swift_allocObject();
    OUTLINED_FUNCTION_58_2();
    v5 = OUTLINED_FUNCTION_19_6();
    v6 = *(_QWORD *)(v3 - 96);
    v4[2] = v5;
    v4[3] = v7;
    OUTLINED_FUNCTION_76_2();
    v4[4] = OUTLINED_FUNCTION_19_6();
    v4[5] = v8;
    *(_BYTE *)(v3 - 65) = 2;
    sub_2412A7110();
    sub_2412A8C00();
    OUTLINED_FUNCTION_30_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 232) + 8));
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_64_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    JUMPOUT(0x2412A6560);
  }
  OUTLINED_FUNCTION_0_3();
  JUMPOUT(0x2412A6090);
}

uint64_t sub_2412A66D0()
{
  sub_2412A8D5C();
  RoutingInteraction.Action.hash(into:)();
  return sub_2412A8D98();
}

void sub_2412A671C()
{
  RoutingInteraction.Action.init(from:)();
}

void sub_2412A6730()
{
  RoutingInteraction.Action.encode(to:)();
}

void RoutingInteraction.identifier.getter()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_44();
}

uint64_t RoutingInteraction.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v6;
  return sub_2412A46CC(v2, v3, v4, v5, v6);
}

__n128 RoutingInteraction.init(action:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  unint64_t v6;
  __n128 result;
  __n128 v8;

  v8 = *a1;
  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = a1[2].n128_u8[0];
  a2->n128_u64[0] = OUTLINED_FUNCTION_43_4();
  a2->n128_u64[1] = v6;
  result = v8;
  a2[1] = v8;
  a2[2].n128_u64[0] = v3;
  a2[2].n128_u64[1] = v4;
  a2[3].n128_u8[0] = v5;
  return result;
}

uint64_t RoutingInteraction.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;

  sub_2412A8ABC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_75_3();
  v12 = v0;
  OUTLINED_FUNCTION_93_0();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  sub_2412A88DC();
  v1 = OUTLINED_FUNCTION_65_3();
  sub_2412A46CC(v1, v2, v3, v4, v5);
  RoutingInteraction.Action.description.getter();
  sub_2412A88DC();
  swift_bridgeObjectRelease();
  v6 = OUTLINED_FUNCTION_65_3();
  sub_2412A473C(v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_80_1();
  return v12;
}

void static RoutingInteraction.add(item:to:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a1;
  v4 = a1[1];
  v7 = *a2;
  v6 = a2[1];
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_40_0();
  *(_QWORD *)a3 = OUTLINED_FUNCTION_43_4();
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v4;
  *(_QWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = v6;
  *(_BYTE *)(a3 + 48) = 0;
  OUTLINED_FUNCTION_48();
}

void static RoutingInteraction.remove(item:to:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a1;
  v4 = a1[1];
  v7 = *a2;
  v6 = a2[1];
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_40_0();
  *(_QWORD *)a3 = OUTLINED_FUNCTION_43_4();
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v4;
  *(_QWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = v6;
  *(_BYTE *)(a3 + 48) = 1;
  OUTLINED_FUNCTION_48();
}

void static RoutingInteraction.setActive(session:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  OUTLINED_FUNCTION_82_0();
  *(_QWORD *)a2 = OUTLINED_FUNCTION_43_4();
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 3;
  OUTLINED_FUNCTION_37_0();
}

void static RoutingInteraction.setActive(item:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  OUTLINED_FUNCTION_82_0();
  *(_QWORD *)a2 = OUTLINED_FUNCTION_43_4();
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 4;
  OUTLINED_FUNCTION_37_0();
}

uint64_t static RoutingInteraction.control(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  v5 = a1[2];
  v6 = a1[3];
  v7 = *((_BYTE *)a1 + 32);
  v9 = a1[5];
  v8 = a1[6];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v3;
  *(_BYTE *)(v10 + 24) = v4;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v6;
  *(_BYTE *)(v10 + 48) = v7;
  *(_QWORD *)(v10 + 56) = v9;
  *(_QWORD *)(v10 + 64) = v8;
  OUTLINED_FUNCTION_143();
  swift_bridgeObjectRetain();
  result = OUTLINED_FUNCTION_43_4();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 6;
  return result;
}

uint64_t static RoutingInteraction.== infix(_:_:)(uint64_t a1, _QWORD *a2)
{
  __int128 v2;
  __int128 v3;
  char v4;
  BOOL v5;
  char v6;
  char v7;
  char v8;
  __int128 v10;
  __int128 v11;
  _OWORD v12[2];
  char v13;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1];
  if (v5
    || (v10 = *(_OWORD *)(a1 + 32),
        v11 = *(_OWORD *)(a1 + 16),
        v6 = sub_2412A8CFC(),
        v3 = v10,
        v2 = v11,
        v7 = v6,
        v8 = 0,
        (v7 & 1) != 0))
  {
    v12[0] = v2;
    v12[1] = v3;
    v13 = v4;
    static RoutingInteraction.Action.== infix(_:_:)((uint64_t)v12);
  }
  return v8 & 1;
}

uint64_t RoutingInteraction.hash(into:)()
{
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_48_2();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2412A6B5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2412A8CFC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2412A8CFC();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2412A6C4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F69746361;
  else
    return 0x696669746E656469;
}

uint64_t sub_2412A6C84()
{
  char *v0;

  return sub_2412A6C4C(*v0);
}

uint64_t sub_2412A6C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2412A6B5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2412A6CB0()
{
  sub_2412A714C();
  return sub_2412A8DBC();
}

uint64_t sub_2412A6CD8()
{
  sub_2412A714C();
  return sub_2412A8DC8();
}

void RoutingInteraction.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_1_2();
  v3 = v2;
  sub_24127C278(0, &qword_257106C98, (uint64_t (*)(void))sub_2412A714C, (uint64_t)&type metadata for RoutingInteraction.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_41_2();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2412A714C();
  sub_2412A8DB0();
  sub_2412A8C78();
  if (!v0)
  {
    sub_2412A7188();
    sub_2412A8CB4();
  }
  OUTLINED_FUNCTION_30_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_0_1();
}

void RoutingInteraction.hashValue.getter()
{
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_48_2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_83();
}

void RoutingInteraction.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)v1;
  v17 = v3;
  OUTLINED_FUNCTION_6_2(v1, &qword_257106CB0, (uint64_t (*)(void))sub_2412A714C, v4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_2_1();
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2412A714C();
  OUTLINED_FUNCTION_22_3();
  if (v0)
  {
    OUTLINED_FUNCTION_53_1();
  }
  else
  {
    LOBYTE(v18) = 0;
    v6 = OUTLINED_FUNCTION_42_1();
    v8 = v7;
    sub_2412A71C4();
    OUTLINED_FUNCTION_93_0();
    sub_2412A8C00();
    OUTLINED_FUNCTION_16_1();
    OUTLINED_FUNCTION_93_0();
    v9 = OUTLINED_FUNCTION_84_2();
    sub_2412A46CC(v9, v10, v11, v12, v22);
    OUTLINED_FUNCTION_44_0();
    *(_QWORD *)v17 = v6;
    *(_QWORD *)(v17 + 8) = v8;
    *(_QWORD *)(v17 + 16) = v18;
    *(_QWORD *)(v17 + 24) = v19;
    *(_QWORD *)(v17 + 32) = v20;
    *(_QWORD *)(v17 + 40) = v21;
    *(_BYTE *)(v17 + 48) = v22;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
    OUTLINED_FUNCTION_44_0();
    v13 = OUTLINED_FUNCTION_84_2();
    sub_2412A473C(v13, v14, v15, v16, v22);
  }
  OUTLINED_FUNCTION_0_1();
}

uint64_t sub_2412A7020()
{
  sub_2412A8D5C();
  swift_bridgeObjectRetain();
  sub_2412A88B8();
  swift_bridgeObjectRelease();
  return sub_2412A8D98();
}

void sub_2412A7074()
{
  RoutingInteraction.init(from:)();
}

void sub_2412A7088()
{
  RoutingInteraction.encode(to:)();
}

uint64_t sub_2412A70A4()
{
  sub_24125F80C();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2412A70D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_2412A7110()
{
  unint64_t result;

  result = qword_257106C90;
  if (!qword_257106C90)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingInteraction.Action.HandoffContext, &type metadata for RoutingInteraction.Action.HandoffContext);
    atomic_store(result, (unint64_t *)&qword_257106C90);
  }
  return result;
}

unint64_t sub_2412A714C()
{
  unint64_t result;

  result = qword_257106CA0;
  if (!qword_257106CA0)
  {
    result = MEMORY[0x242691F34](&unk_2412B3FB4, &type metadata for RoutingInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106CA0);
  }
  return result;
}

unint64_t sub_2412A7188()
{
  unint64_t result;

  result = qword_257106CA8;
  if (!qword_257106CA8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingInteraction.Action, &type metadata for RoutingInteraction.Action);
    atomic_store(result, (unint64_t *)&qword_257106CA8);
  }
  return result;
}

unint64_t sub_2412A71C4()
{
  unint64_t result;

  result = qword_257106CB8;
  if (!qword_257106CB8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingInteraction.Action, &type metadata for RoutingInteraction.Action);
    atomic_store(result, (unint64_t *)&qword_257106CB8);
  }
  return result;
}

unint64_t sub_2412A7204()
{
  unint64_t result;

  result = qword_257106CC0;
  if (!qword_257106CC0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingInteraction.Action.HandoffContext, &type metadata for RoutingInteraction.Action.HandoffContext);
    atomic_store(result, (unint64_t *)&qword_257106CC0);
  }
  return result;
}

unint64_t sub_2412A7244()
{
  unint64_t result;

  result = qword_257106CC8;
  if (!qword_257106CC8)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingInteraction.Action, &type metadata for RoutingInteraction.Action);
    atomic_store(result, (unint64_t *)&qword_257106CC8);
  }
  return result;
}

unint64_t sub_2412A7284()
{
  unint64_t result;

  result = qword_257106CD0;
  if (!qword_257106CD0)
  {
    result = MEMORY[0x242691F34](&protocol conformance descriptor for RoutingInteraction, &type metadata for RoutingInteraction);
    atomic_store(result, (unint64_t *)&qword_257106CD0);
  }
  return result;
}

uint64_t destroy for RoutingInteraction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_2412A473C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for RoutingInteraction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_2412A46CC(v4, v5, v6, v7, v8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for RoutingInteraction(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[5];
  LOBYTE(v2) = *((_BYTE *)v2 + 48);
  sub_2412A46CC(v4, v5, v6, v7, (char)v2);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v12 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = (_BYTE)v2;
  sub_2412A473C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RoutingInteraction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_2412A473C(v6, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingInteraction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingInteraction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RoutingInteraction()
{
  OUTLINED_FUNCTION_21_1();
}

uint64_t destroy for RoutingInteraction.Action(uint64_t a1)
{
  return sub_2412A473C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for RoutingInteraction.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_2412A46CC(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for RoutingInteraction.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_2412A46CC(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_2412A473C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for RoutingInteraction.Action(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_2412A473C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoutingInteraction.Action(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingInteraction.Action(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_2412A76B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_2412A76B8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

void type metadata accessor for RoutingInteraction.Action()
{
  OUTLINED_FUNCTION_21_1();
}

void type metadata accessor for RoutingInteraction.Action.HandoffContext()
{
  OUTLINED_FUNCTION_21_1();
}

ValueMetadata *type metadata accessor for RoutingInteraction.CodingKeys()
{
  return &type metadata for RoutingInteraction.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RoutingInteraction.Action.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RoutingInteraction.Action.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2412A77C0 + 4 * byte_2412B349D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2412A77F4 + 4 * byte_2412B3498[v4]))();
}

uint64_t sub_2412A77F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412A77FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412A7804);
  return result;
}

uint64_t sub_2412A7810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412A7818);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2412A781C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412A7824(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.CodingKeys()
{
  return &type metadata for RoutingInteraction.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.AddCodingKeys()
{
  return &type metadata for RoutingInteraction.Action.AddCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.RemoveCodingKeys()
{
  return &type metadata for RoutingInteraction.Action.RemoveCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.SetCodingKeys()
{
  return &type metadata for RoutingInteraction.Action.SetCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.SetActiveSessionCodingKeys()
{
  return &type metadata for RoutingInteraction.Action.SetActiveSessionCodingKeys;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.SetActiveItemCodingKeys()
{
  return &type metadata for RoutingInteraction.Action.SetActiveItemCodingKeys;
}

uint64_t storeEnumTagSinglePayload for RoutingInteraction.Action.HandoffCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2412A78E0 + 4 * byte_2412B34A7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2412A7914 + 4 * byte_2412B34A2[v4]))();
}

uint64_t sub_2412A7914(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412A791C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412A7924);
  return result;
}

uint64_t sub_2412A7930(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412A7938);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2412A793C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412A7944(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.HandoffCodingKeys()
{
  return &type metadata for RoutingInteraction.Action.HandoffCodingKeys;
}

uint64_t _s12MediaControl18RoutingInteractionV6ActionO26SetActiveSessionCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2412A79A0 + 4 * byte_2412B34AC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2412A79C0 + 4 * byte_2412B34B1[v4]))();
}

_BYTE *sub_2412A79A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2412A79C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412A79C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412A79D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2412A79D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2412A79E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.ControlCodingKeys()
{
  return &type metadata for RoutingInteraction.Action.ControlCodingKeys;
}

uint64_t _s12MediaControl18RoutingInteractionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2412A7A48 + 4 * byte_2412B34BB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2412A7A7C + 4 * byte_2412B34B6[v4]))();
}

uint64_t sub_2412A7A7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412A7A84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2412A7A8CLL);
  return result;
}

uint64_t sub_2412A7A98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2412A7AA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2412A7AA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2412A7AAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoutingInteraction.Action.HandoffContext.CodingKeys()
{
  return &type metadata for RoutingInteraction.Action.HandoffContext.CodingKeys;
}

unint64_t sub_2412A7ACC()
{
  unint64_t result;

  result = qword_257106CD8;
  if (!qword_257106CD8)
  {
    result = MEMORY[0x242691F34](&unk_2412B3914, &type metadata for RoutingInteraction.Action.HandoffContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106CD8);
  }
  return result;
}

unint64_t sub_2412A7B0C()
{
  unint64_t result;

  result = qword_257106CE0;
  if (!qword_257106CE0)
  {
    result = MEMORY[0x242691F34](&unk_2412B39CC, &type metadata for RoutingInteraction.Action.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106CE0);
  }
  return result;
}

unint64_t sub_2412A7B4C()
{
  unint64_t result;

  result = qword_257106CE8;
  if (!qword_257106CE8)
  {
    result = MEMORY[0x242691F34](&unk_2412B3A84, &type metadata for RoutingInteraction.Action.HandoffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106CE8);
  }
  return result;
}

unint64_t sub_2412A7B8C()
{
  unint64_t result;

  result = qword_257106CF0;
  if (!qword_257106CF0)
  {
    result = MEMORY[0x242691F34](&unk_2412B3B3C, &type metadata for RoutingInteraction.Action.SetActiveItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106CF0);
  }
  return result;
}

unint64_t sub_2412A7BCC()
{
  unint64_t result;

  result = qword_257106CF8;
  if (!qword_257106CF8)
  {
    result = MEMORY[0x242691F34](&unk_2412B3BF4, &type metadata for RoutingInteraction.Action.SetActiveSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106CF8);
  }
  return result;
}

unint64_t sub_2412A7C0C()
{
  unint64_t result;

  result = qword_257106D00;
  if (!qword_257106D00)
  {
    result = MEMORY[0x242691F34](&unk_2412B3CAC, &type metadata for RoutingInteraction.Action.SetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D00);
  }
  return result;
}

unint64_t sub_2412A7C4C()
{
  unint64_t result;

  result = qword_257106D08;
  if (!qword_257106D08)
  {
    result = MEMORY[0x242691F34](&unk_2412B3D64, &type metadata for RoutingInteraction.Action.RemoveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D08);
  }
  return result;
}

unint64_t sub_2412A7C8C()
{
  unint64_t result;

  result = qword_257106D10;
  if (!qword_257106D10)
  {
    result = MEMORY[0x242691F34](&unk_2412B3E1C, &type metadata for RoutingInteraction.Action.AddCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D10);
  }
  return result;
}

unint64_t sub_2412A7CCC()
{
  unint64_t result;

  result = qword_257106D18;
  if (!qword_257106D18)
  {
    result = MEMORY[0x242691F34](&unk_2412B3ED4, &type metadata for RoutingInteraction.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D18);
  }
  return result;
}

unint64_t sub_2412A7D0C()
{
  unint64_t result;

  result = qword_257106D20;
  if (!qword_257106D20)
  {
    result = MEMORY[0x242691F34](&unk_2412B3F8C, &type metadata for RoutingInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D20);
  }
  return result;
}

unint64_t sub_2412A7D4C()
{
  unint64_t result;

  result = qword_257106D28;
  if (!qword_257106D28)
  {
    result = MEMORY[0x242691F34](&unk_2412B3EFC, &type metadata for RoutingInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D28);
  }
  return result;
}

unint64_t sub_2412A7D8C()
{
  unint64_t result;

  result = qword_257106D30;
  if (!qword_257106D30)
  {
    result = MEMORY[0x242691F34](&unk_2412B3F24, &type metadata for RoutingInteraction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D30);
  }
  return result;
}

unint64_t sub_2412A7DCC()
{
  unint64_t result;

  result = qword_257106D38;
  if (!qword_257106D38)
  {
    result = MEMORY[0x242691F34](&unk_2412B3E44, &type metadata for RoutingInteraction.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D38);
  }
  return result;
}

unint64_t sub_2412A7E0C()
{
  unint64_t result;

  result = qword_257106D40;
  if (!qword_257106D40)
  {
    result = MEMORY[0x242691F34](&unk_2412B3E6C, &type metadata for RoutingInteraction.Action.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D40);
  }
  return result;
}

unint64_t sub_2412A7E4C()
{
  unint64_t result;

  result = qword_257106D48;
  if (!qword_257106D48)
  {
    result = MEMORY[0x242691F34](&unk_2412B3D8C, &type metadata for RoutingInteraction.Action.AddCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D48);
  }
  return result;
}

unint64_t sub_2412A7E8C()
{
  unint64_t result;

  result = qword_257106D50;
  if (!qword_257106D50)
  {
    result = MEMORY[0x242691F34](&unk_2412B3DB4, &type metadata for RoutingInteraction.Action.AddCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D50);
  }
  return result;
}

unint64_t sub_2412A7ECC()
{
  unint64_t result;

  result = qword_257106D58;
  if (!qword_257106D58)
  {
    result = MEMORY[0x242691F34](&unk_2412B3CD4, &type metadata for RoutingInteraction.Action.RemoveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D58);
  }
  return result;
}

unint64_t sub_2412A7F0C()
{
  unint64_t result;

  result = qword_257106D60;
  if (!qword_257106D60)
  {
    result = MEMORY[0x242691F34](&unk_2412B3CFC, &type metadata for RoutingInteraction.Action.RemoveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D60);
  }
  return result;
}

unint64_t sub_2412A7F4C()
{
  unint64_t result;

  result = qword_257106D68;
  if (!qword_257106D68)
  {
    result = MEMORY[0x242691F34](&unk_2412B3C1C, &type metadata for RoutingInteraction.Action.SetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D68);
  }
  return result;
}

unint64_t sub_2412A7F8C()
{
  unint64_t result;

  result = qword_257106D70;
  if (!qword_257106D70)
  {
    result = MEMORY[0x242691F34](&unk_2412B3C44, &type metadata for RoutingInteraction.Action.SetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D70);
  }
  return result;
}

unint64_t sub_2412A7FCC()
{
  unint64_t result;

  result = qword_257106D78;
  if (!qword_257106D78)
  {
    result = MEMORY[0x242691F34](&unk_2412B3B64, &type metadata for RoutingInteraction.Action.SetActiveSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D78);
  }
  return result;
}

unint64_t sub_2412A800C()
{
  unint64_t result;

  result = qword_257106D80;
  if (!qword_257106D80)
  {
    result = MEMORY[0x242691F34](&unk_2412B3B8C, &type metadata for RoutingInteraction.Action.SetActiveSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D80);
  }
  return result;
}

unint64_t sub_2412A804C()
{
  unint64_t result;

  result = qword_257106D88;
  if (!qword_257106D88)
  {
    result = MEMORY[0x242691F34](&unk_2412B3AAC, &type metadata for RoutingInteraction.Action.SetActiveItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D88);
  }
  return result;
}

unint64_t sub_2412A808C()
{
  unint64_t result;

  result = qword_257106D90;
  if (!qword_257106D90)
  {
    result = MEMORY[0x242691F34](&unk_2412B3AD4, &type metadata for RoutingInteraction.Action.SetActiveItemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D90);
  }
  return result;
}

unint64_t sub_2412A80CC()
{
  unint64_t result;

  result = qword_257106D98;
  if (!qword_257106D98)
  {
    result = MEMORY[0x242691F34](&unk_2412B39F4, &type metadata for RoutingInteraction.Action.HandoffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106D98);
  }
  return result;
}

unint64_t sub_2412A810C()
{
  unint64_t result;

  result = qword_257106DA0;
  if (!qword_257106DA0)
  {
    result = MEMORY[0x242691F34](&unk_2412B3A1C, &type metadata for RoutingInteraction.Action.HandoffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106DA0);
  }
  return result;
}

unint64_t sub_2412A814C()
{
  unint64_t result;

  result = qword_257106DA8;
  if (!qword_257106DA8)
  {
    result = MEMORY[0x242691F34](&unk_2412B393C, &type metadata for RoutingInteraction.Action.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106DA8);
  }
  return result;
}

unint64_t sub_2412A818C()
{
  unint64_t result;

  result = qword_257106DB0;
  if (!qword_257106DB0)
  {
    result = MEMORY[0x242691F34](&unk_2412B3964, &type metadata for RoutingInteraction.Action.ControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106DB0);
  }
  return result;
}

unint64_t sub_2412A81CC()
{
  unint64_t result;

  result = qword_257106DB8;
  if (!qword_257106DB8)
  {
    result = MEMORY[0x242691F34](&unk_2412B3884, &type metadata for RoutingInteraction.Action.HandoffContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106DB8);
  }
  return result;
}

unint64_t sub_2412A820C()
{
  unint64_t result;

  result = qword_257106DC0;
  if (!qword_257106DC0)
  {
    result = MEMORY[0x242691F34](&unk_2412B38AC, &type metadata for RoutingInteraction.Action.HandoffContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257106DC0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return sub_2412A8B7C();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return sub_2412A8CFC();
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 5);
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A473C(v3, v2, v1, v0, 5);
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 5);
}

uint64_t OUTLINED_FUNCTION_19_6()
{
  return sub_2412A8BC4();
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return sub_2412A8DA4();
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  return sub_2412A8C78();
}

uint64_t OUTLINED_FUNCTION_26_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 360) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return sub_2412A8C78();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 2);
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A473C(v3, v2, v1, v0, 5);
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 0);
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 1);
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = 0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A473C(v3, v2, v1, v0, 2);
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 2);
}

uint64_t OUTLINED_FUNCTION_40_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A473C(v3, v2, v1, v0, 0);
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 0);
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A473C(v3, v2, v1, v0, 1);
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_2412A46CC(v3, v2, v1, v0, 1);
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return sub_2412A8D68();
}

uint64_t OUTLINED_FUNCTION_45_4()
{
  return sub_2412A8C78();
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return sub_2412A8ABC();
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_52_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_54_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
  return v0 - 65;
}

uint64_t OUTLINED_FUNCTION_59_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_60_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_62_3()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  return sub_2412A88B8();
}

uint64_t OUTLINED_FUNCTION_65_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return sub_2412A8C3C();
}

uint64_t OUTLINED_FUNCTION_76_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return v0 - 65;
}

uint64_t OUTLINED_FUNCTION_77_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 1;
  return *(_QWORD *)(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_84_2()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2412A8678()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2412A8684()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2412A8690()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2412A869C()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_2412A86A8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2412A86B4()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_2412A86C0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2412A86CC()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_2412A86D8()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2412A86E4()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_2412A86F0()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_2412A86FC()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_2412A8708()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_2412A8714()
{
  return MEMORY[0x24BEE62B8]();
}

uint64_t sub_2412A8720()
{
  return MEMORY[0x24BEE62C0]();
}

uint64_t sub_2412A872C()
{
  return MEMORY[0x24BEE62D8]();
}

uint64_t sub_2412A8738()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_2412A8744()
{
  return MEMORY[0x24BEE6410]();
}

uint64_t sub_2412A8750()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2412A875C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2412A8768()
{
  return MEMORY[0x24BEE78E8]();
}

uint64_t sub_2412A8774()
{
  return MEMORY[0x24BEE64F0]();
}

uint64_t sub_2412A8780()
{
  return MEMORY[0x24BEE6518]();
}

uint64_t sub_2412A878C()
{
  return MEMORY[0x24BEE6520]();
}

uint64_t sub_2412A8798()
{
  return MEMORY[0x24BEE6530]();
}

uint64_t sub_2412A87A4()
{
  return MEMORY[0x24BEE6568]();
}

uint64_t sub_2412A87B0()
{
  return MEMORY[0x24BEE6570]();
}

uint64_t sub_2412A87BC()
{
  return MEMORY[0x24BEE6578]();
}

uint64_t sub_2412A87C8()
{
  return MEMORY[0x24BEE65A0]();
}

uint64_t sub_2412A87D4()
{
  return MEMORY[0x24BEE65A8]();
}

uint64_t sub_2412A87E0()
{
  return MEMORY[0x24BEE6678]();
}

uint64_t sub_2412A87EC()
{
  return MEMORY[0x24BEE6750]();
}

uint64_t sub_2412A87F8()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2412A8804()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2412A8810()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2412A881C()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_2412A8828()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_2412A8834()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2412A8840()
{
  return MEMORY[0x24BDCF818]();
}

uint64_t sub_2412A884C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2412A8858()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_2412A8864()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_2412A8870()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_2412A887C()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2412A8888()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2412A8894()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2412A88A0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2412A88AC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2412A88B8()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2412A88C4()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_2412A88D0()
{
  return MEMORY[0x24BEE0B88]();
}

uint64_t sub_2412A88DC()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2412A88E8()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2412A88F4()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_2412A8900()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_2412A890C()
{
  return MEMORY[0x24BEE1048]();
}

uint64_t sub_2412A8918()
{
  return MEMORY[0x24BEE10C8]();
}

uint64_t sub_2412A8924()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2412A8930()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2412A893C()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_2412A8948()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2412A8954()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_2412A8960()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_2412A896C()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_2412A8978()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_2412A8984()
{
  return MEMORY[0x24BEE14C8]();
}

uint64_t sub_2412A8990()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_2412A899C()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_2412A89A8()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_2412A89B4()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2412A89C0()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2412A89CC()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2412A89D8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2412A89E4()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_2412A89F0()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_2412A89FC()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_2412A8A08()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_2412A8A14()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_2412A8A20()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_2412A8A2C()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_2412A8A38()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2412A8A44()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2412A8A50()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2412A8A5C()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2412A8A68()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_2412A8A74()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_2412A8A80()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_2412A8A8C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_2412A8A98()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_2412A8AA4()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2412A8AB0()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2412A8ABC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2412A8AC8()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2412A8AD4()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2412A8AE0()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2412A8AEC()
{
  return MEMORY[0x24BEE2700]();
}

uint64_t sub_2412A8AF8()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2412A8B04()
{
  return MEMORY[0x24BEE2798]();
}

uint64_t sub_2412A8B10()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2412A8B1C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2412A8B28()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_2412A8B34()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_2412A8B40()
{
  return MEMORY[0x24BEE2E90]();
}

uint64_t sub_2412A8B4C()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2412A8B58()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2412A8B64()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2412A8B70()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2412A8B7C()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_2412A8B88()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_2412A8B94()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2412A8BA0()
{
  return MEMORY[0x24BEE32F0]();
}

uint64_t sub_2412A8BAC()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_2412A8BB8()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2412A8BC4()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2412A8BD0()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_2412A8BDC()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_2412A8BE8()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_2412A8BF4()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_2412A8C00()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2412A8C0C()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_2412A8C18()
{
  return MEMORY[0x24BEE33B8]();
}

uint64_t sub_2412A8C24()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_2412A8C30()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_2412A8C3C()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2412A8C48()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2412A8C54()
{
  return MEMORY[0x24BEE3440]();
}

uint64_t sub_2412A8C60()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_2412A8C6C()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2412A8C78()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2412A8C84()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2412A8C90()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_2412A8C9C()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_2412A8CA8()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_2412A8CB4()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2412A8CC0()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_2412A8CCC()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_2412A8CD8()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_2412A8CE4()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2412A8CF0()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_2412A8CFC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2412A8D08()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_2412A8D14()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2412A8D20()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2412A8D2C()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2412A8D38()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2412A8D44()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2412A8D50()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2412A8D5C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2412A8D68()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2412A8D74()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2412A8D80()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_2412A8D8C()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2412A8D98()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2412A8DA4()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2412A8DB0()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2412A8DBC()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2412A8DC8()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_2412A8DD4()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t CGImageCopySourceData()
{
  return MEMORY[0x24BDD9010]();
}

void CGImageDestinationAddImageFromSource(CGImageDestinationRef idst, CGImageSourceRef isrc, size_t index, CFDictionaryRef properties)
{
  MEMORY[0x24BDD9058](idst, isrc, index, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x24BDD9078](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x24BDD9090](idst);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x24BDD9148](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x24BDD9170](data, options);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return (CFStringRef)MEMORY[0x24BDD91A0](isrc);
}

uint64_t MSVGetCurrentThreadPriority()
{
  return MEMORY[0x24BE65B38]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

int flsl(uint64_t a1)
{
  return MEMORY[0x24BDAE3D0](a1);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x24BDAF458](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x24BDAFA10]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x24BEE4D20]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D28]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x24BEE4D58]();
}

uint64_t swift_getFunctionTypeMetadata2()
{
  return MEMORY[0x24BEE4D68]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

