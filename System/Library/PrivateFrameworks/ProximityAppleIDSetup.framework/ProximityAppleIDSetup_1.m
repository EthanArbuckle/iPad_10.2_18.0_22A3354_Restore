uint64_t sub_21F6C9564(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21F6C9594()
{
  unint64_t result;

  result = qword_2554E0BE0;
  if (!qword_2554E0BE0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720E10, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0BE0);
  }
  return result;
}

unint64_t sub_21F6C95D8()
{
  unint64_t result;

  result = qword_2554E0BE8;
  if (!qword_2554E0BE8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720DC0, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0BE8);
  }
  return result;
}

unint64_t sub_21F6C961C()
{
  unint64_t result;

  result = qword_2554E0BF0;
  if (!qword_2554E0BF0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Request, &type metadata for AuthenticateCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0BF0);
  }
  return result;
}

unint64_t sub_21F6C9660()
{
  unint64_t result;

  result = qword_2554E0BF8;
  if (!qword_2554E0BF8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720D70, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0BF8);
  }
  return result;
}

unint64_t sub_21F6C96A4()
{
  unint64_t result;

  result = qword_2554E0C08;
  if (!qword_2554E0C08)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720D20, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0C08);
  }
  return result;
}

uint64_t _s21ProximityAppleIDSetup9V1CommandO8ResponseO21__derived_enum_equalsySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int16 v11;
  int v12;
  char v13;
  uint64_t v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int8x16_t v26;
  unint64_t v27;
  unint64_t v28;
  int8x16_t v29;
  char v30;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[32];
  _BYTE v42[184];
  _BYTE v43[82];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _BYTE v53[32];
  __int128 v54;
  _BYTE v55[32];
  __int128 v56[2];
  __int128 v57;
  _OWORD v58[3];
  _OWORD v59[2];
  _OWORD v60[5];
  __int128 v61[2];
  __int128 v62;
  _BYTE v63[32];
  __int128 v64[2];
  __int128 v65;
  _OWORD v66[3];
  _OWORD v67[2];
  _OWORD v68[5];
  __int128 v69[2];
  int8x16_t v70;
  int8x16_t v71;
  char v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char v77;

  sub_21F677BA4(a1, (uint64_t)v43);
  v3 = sub_21F677BE0((uint64_t)v43);
  if (!v3)
  {
    v10 = sub_21F677BEC((uint64_t)v43);
    v11 = *(_WORD *)v10;
    v12 = *(unsigned __int8 *)(v10 + 2);
    v13 = *(_BYTE *)(v10 + 3);
    sub_21F677BA4(a2, (uint64_t)v42);
    if (sub_21F677BE0((uint64_t)v42))
      goto LABEL_45;
    v14 = sub_21F677BEC((uint64_t)v42);
    if (((v11 ^ *(_WORD *)v14) & 1) != 0 || ((v11 ^ *(_WORD *)v14) & 0x100) != 0)
      goto LABEL_45;
    if ((v13 & 1) != 0)
    {
      if ((*(_BYTE *)(v14 + 3) & 1) == 0)
        goto LABEL_45;
    }
    else if ((*(_BYTE *)(v14 + 3) & 1) != 0 || v12 != *(unsigned __int8 *)(v14 + 2))
    {
      goto LABEL_45;
    }
LABEL_35:
    v21 = 1;
    return v21 & 1;
  }
  if (v3 == 1)
  {
    v4 = sub_21F677BEC((uint64_t)v43);
    v51 = *(_OWORD *)(v4 + 112);
    v52 = *(_OWORD *)(v4 + 128);
    *(_OWORD *)v53 = *(_OWORD *)(v4 + 144);
    *(_OWORD *)&v53[16] = *(_OWORD *)(v4 + 160);
    v47 = *(_OWORD *)(v4 + 48);
    v48 = *(_OWORD *)(v4 + 64);
    v49 = *(_OWORD *)(v4 + 80);
    v50 = *(_OWORD *)(v4 + 96);
    v44 = *(_OWORD *)v4;
    v45 = *(_OWORD *)(v4 + 16);
    v46 = *(_OWORD *)(v4 + 32);
    v5 = *(_QWORD *)(v4 + 176);
    sub_21F677BA4(a2, (uint64_t)v42);
    if (sub_21F677BE0((uint64_t)v42) != 1)
      goto LABEL_45;
    v6 = sub_21F677BEC((uint64_t)v42);
    v39 = *(_OWORD *)(v6 + 112);
    v40 = *(_OWORD *)(v6 + 128);
    *(_OWORD *)v41 = *(_OWORD *)(v6 + 144);
    *(_OWORD *)&v41[16] = *(_OWORD *)(v6 + 160);
    v35 = *(_OWORD *)(v6 + 48);
    v36 = *(_OWORD *)(v6 + 64);
    v37 = *(_OWORD *)(v6 + 80);
    v38 = *(_OWORD *)(v6 + 96);
    v32 = *(_OWORD *)v6;
    v33 = *(_OWORD *)(v6 + 16);
    v34 = *(_OWORD *)(v6 + 32);
    v7 = *(_QWORD *)(v6 + 176);
    v54 = v44;
    *(_OWORD *)v55 = v45;
    *(_OWORD *)&v55[16] = v46;
    v56[0] = v47;
    v56[1] = v48;
    v57 = v49;
    v58[0] = v50;
    v58[1] = v51;
    v58[2] = v52;
    v59[0] = *(_OWORD *)v53;
    *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)&v53[9];
    v66[2] = v40;
    v67[0] = *(_OWORD *)v41;
    *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)&v41[9];
    v64[1] = v36;
    v65 = v37;
    v66[1] = v39;
    v66[0] = v38;
    v62 = v32;
    *(_OWORD *)v63 = v33;
    v64[0] = v35;
    *(_OWORD *)&v63[16] = v34;
    v8 = v45;
    v9 = v46;
    if (v44 != v32 && (sub_21F716800() & 1) == 0)
      goto LABEL_45;
    if (*((_QWORD *)&v8 + 1))
    {
      if (!*((_QWORD *)&v33 + 1) || v8 != v33 && (sub_21F716800() & 1) == 0)
        goto LABEL_45;
    }
    else if (*((_QWORD *)&v33 + 1))
    {
      goto LABEL_45;
    }
    if (*((_QWORD *)&v9 + 1))
    {
      if (!*((_QWORD *)&v34 + 1) || v9 != v34 && (sub_21F716800() & 1) == 0)
        goto LABEL_45;
    }
    else if (*((_QWORD *)&v34 + 1))
    {
      goto LABEL_45;
    }
    sub_21F65EF28(v56, (uint64_t)v61);
    sub_21F65EF28(v64, (uint64_t)v69);
    sub_21F65EF28(v61, (uint64_t)&v73);
    if (v77)
    {
      if (v77 == 1)
      {
        v22 = v73;
        v23 = v74;
        v24 = v75;
        v25 = v76;
        sub_21F65EF28(v69, (uint64_t)&v70);
        if (v72 != 1)
          goto LABEL_45;
        v26 = v71;
        if (__PAIR128__(v23, v22) != *(_OWORD *)&v70 && (sub_21F716800() & 1) == 0)
          goto LABEL_45;
        if (__PAIR128__(v25, v24) != *(_OWORD *)&v26)
        {
LABEL_38:
          if ((sub_21F716800() & 1) == 0)
            goto LABEL_45;
        }
      }
      else
      {
        sub_21F65EF28(v69, (uint64_t)&v70);
        if (v72 != 2)
          goto LABEL_45;
        v29 = vorrq_s8(v70, v71);
        if (vorr_s8(*(int8x8_t *)v29.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v29, v29, 8uLL)))
          goto LABEL_45;
      }
LABEL_42:
      if ((sub_21F6C4BDC(*((uint64_t *)&v57 + 1), *((uint64_t *)&v65 + 1)) & 1) == 0)
        goto LABEL_45;
      sub_21F65EF00(v58, v60);
      sub_21F65EF00(v66, v68);
      _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v60);
      if ((v30 & 1) == 0 || (sub_21F6C4EEC(v5, v7) & 1) == 0)
        goto LABEL_45;
      goto LABEL_35;
    }
    v27 = v73;
    v28 = v74;
    sub_21F65EF28(v69, (uint64_t)&v70);
    if (!v72)
    {
      if (__PAIR128__(v28, v27) != *(_OWORD *)&v70)
        goto LABEL_38;
      goto LABEL_42;
    }
LABEL_45:
    v21 = 0;
    return v21 & 1;
  }
  v15 = (__int128 *)sub_21F677BEC((uint64_t)v43);
  v16 = *(__int128 *)((char *)v15 + 26);
  v17 = v15[1];
  v62 = *v15;
  *(_OWORD *)v63 = v17;
  *(_OWORD *)&v63[10] = v16;
  sub_21F677BA4(a2, (uint64_t)v42);
  if (sub_21F677BE0((uint64_t)v42) != 2)
    goto LABEL_45;
  v18 = (__int128 *)sub_21F677BEC((uint64_t)v42);
  v19 = *(__int128 *)((char *)v18 + 26);
  v20 = v18[1];
  v54 = *v18;
  *(_OWORD *)v55 = v20;
  *(_OWORD *)&v55[10] = v19;
  sub_21F6CB580((uint64_t)&v62, (uint64_t)&v32);
  sub_21F6CB580((uint64_t)&v54, (uint64_t)&v44);
  sub_21F6CB580((uint64_t)&v32, (uint64_t)v68);
  sub_21F6CB580((uint64_t)&v44, (uint64_t)v60);
  sub_21F67166C();
  sub_21F6CDF5C();
  sub_21F6CDF14();
  v21 = sub_21F716998();
  return v21 & 1;
}

uint64_t _s21ProximityAppleIDSetup9V1CommandO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  __int128 *v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unsigned __int16 v27;
  int v28;
  char v29;
  uint64_t v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  char *v37;
  char v38;
  int v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int8x16_t v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int8x16_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  int8x16_t v67;
  unint64_t v68;
  unint64_t v69;
  int8x16_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  unint64_t v75;
  unint64_t v76;
  int8x16_t v77;
  char v78;
  void *v79;
  void *v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  int8x16_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[106];
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _BYTE v112[32];
  __int128 v113[13];
  _BYTE v114[208];
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  _BYTE v124[32];
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  _BYTE v134[32];
  _BYTE v135[208];
  _BYTE v136[208];
  _BYTE v137[208];
  __int128 v138;
  _BYTE v139[32];
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  _OWORD v146[2];
  _OWORD v147[5];
  __int128 v148[2];
  __int128 v149;
  _BYTE v150[32];
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  _OWORD v157[2];
  _OWORD v158[5];
  __int128 v159[2];
  int8x16_t v160;
  int8x16_t v161;
  char v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  char v167;
  _BYTE v168[224];

  sub_21F676AA4(a2, (uint64_t)v102);
  sub_21F676AA4((uint64_t)v102, (uint64_t)v168);
  sub_21F676AA4(a1, (uint64_t)v135);
  v4 = sub_21F677B88((uint64_t)v135);
  if (!v4)
  {
    v14 = sub_21F677B94((uint64_t)v135);
    sub_21F676AA4(v14, (uint64_t)v136);
    sub_21F676AA4(a2, (uint64_t)&v103);
    if (sub_21F677B88((uint64_t)&v103))
      goto LABEL_138;
    v15 = sub_21F677B94((uint64_t)&v103);
    sub_21F676AA4(v15, (uint64_t)v113);
    sub_21F676AA4((uint64_t)v136, (uint64_t)v137);
    v16 = sub_21F677BE0((uint64_t)v137);
    if (!v16)
    {
      v37 = (char *)sub_21F677BEC((uint64_t)v137);
      v38 = *v37;
      v39 = v37[1];
      v40 = v37[2];
      sub_21F676AA4((uint64_t)v113, (uint64_t)v114);
      if (sub_21F677BE0((uint64_t)v114))
        goto LABEL_138;
      v41 = (_BYTE *)sub_21F677BEC((uint64_t)v114);
      if (((v38 & 1) == 0) == (*v41 & 1) || v39 != v41[1] || v40 != v41[2])
        goto LABEL_138;
      goto LABEL_81;
    }
    if (v16 == 1)
    {
      v17 = (__int128 *)sub_21F677BEC((uint64_t)v137);
      v122 = v17[7];
      v123 = v17[8];
      *(_OWORD *)v124 = v17[9];
      *(_OWORD *)&v124[16] = v17[10];
      v118 = v17[3];
      v119 = v17[4];
      v120 = v17[5];
      v121 = v17[6];
      v115 = *v17;
      v116 = v17[1];
      v117 = v17[2];
      sub_21F676AA4((uint64_t)v113, (uint64_t)v114);
      if (sub_21F677BE0((uint64_t)v114) != 1)
        goto LABEL_138;
      v18 = (__int128 *)sub_21F677BEC((uint64_t)v114);
      v132 = v18[7];
      v133 = v18[8];
      *(_OWORD *)v134 = v18[9];
      *(_OWORD *)&v134[16] = v18[10];
      v128 = v18[3];
      v129 = v18[4];
      v130 = v18[5];
      v131 = v18[6];
      v125 = *v18;
      v126 = v18[1];
      v127 = v18[2];
      v138 = v115;
      *(_OWORD *)v139 = v116;
      *(_OWORD *)&v139[16] = v117;
      v140 = v118;
      v141 = v119;
      v142 = v120;
      v143 = v121;
      v144 = v122;
      v145 = v123;
      v146[0] = *(_OWORD *)v124;
      *(_OWORD *)((char *)v146 + 9) = *(_OWORD *)&v124[9];
      v156 = v133;
      v157[0] = *(_OWORD *)v134;
      *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)&v134[9];
      v152 = v129;
      v153 = v130;
      v155 = v132;
      v154 = v131;
      v149 = v125;
      *(_OWORD *)v150 = v126;
      v151 = v128;
      *(_OWORD *)&v150[16] = v127;
      v19 = v116;
      v20 = v117;
      v21 = v126;
      v22 = v127;
      if (v115 != v125 && (sub_21F716800() & 1) == 0)
        goto LABEL_138;
      if (*((_QWORD *)&v19 + 1))
      {
        if (!*((_QWORD *)&v21 + 1) || v19 != v21 && (sub_21F716800() & 1) == 0)
          goto LABEL_138;
      }
      else if (*((_QWORD *)&v21 + 1))
      {
        goto LABEL_138;
      }
      if (*((_QWORD *)&v20 + 1))
      {
        if (!*((_QWORD *)&v22 + 1) || v20 != v22 && (sub_21F716800() & 1) == 0)
          goto LABEL_138;
      }
      else if (*((_QWORD *)&v22 + 1))
      {
        goto LABEL_138;
      }
      sub_21F65EF28(&v140, (uint64_t)v148);
      sub_21F65EF28(&v151, (uint64_t)v159);
      sub_21F65EF28(v148, (uint64_t)&v163);
      if (v167)
      {
        if (v167 == 1)
        {
          v58 = v163;
          v59 = v164;
          v60 = v165;
          v61 = v166;
          sub_21F65EF28(v159, (uint64_t)&v160);
          if (v162 != 1)
            goto LABEL_138;
          v62 = v161;
          if (__PAIR128__(v59, v58) != *(_OWORD *)&v160 && (sub_21F716800() & 1) == 0)
            goto LABEL_138;
          if (__PAIR128__(v61, v60) != *(_OWORD *)&v62)
          {
LABEL_111:
            if ((sub_21F716800() & 1) == 0)
              goto LABEL_138;
          }
        }
        else
        {
          sub_21F65EF28(v159, (uint64_t)&v160);
          if (v162 != 2)
            goto LABEL_138;
          v77 = vorrq_s8(v160, v161);
          if (vorr_s8(*(int8x8_t *)v77.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v77, v77, 8uLL)))
            goto LABEL_138;
        }
LABEL_115:
        if ((sub_21F6C4BDC(*((uint64_t *)&v142 + 1), *((uint64_t *)&v153 + 1)) & 1) == 0)
          goto LABEL_138;
        sub_21F65EF00(&v143, v147);
        sub_21F65EF00(&v154, v158);
        _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v147);
        if ((v78 & 1) == 0)
          goto LABEL_138;
        sub_21F67C664();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
        v79 = (void *)sub_21F71602C();
        v80 = (void *)sub_21F71602C();
        v81 = sub_21F7163EC();

        if ((v81 & 1) == 0)
          goto LABEL_138;
        goto LABEL_81;
      }
      v75 = v163;
      v76 = v164;
      sub_21F65EF28(v159, (uint64_t)&v160);
      if (v162)
        goto LABEL_138;
      if (__PAIR128__(v76, v75) == *(_OWORD *)&v160)
        goto LABEL_115;
      goto LABEL_111;
    }
    v42 = sub_21F677BEC((uint64_t)v137);
    v122 = *(_OWORD *)(v42 + 112);
    v123 = *(_OWORD *)(v42 + 128);
    *(_OWORD *)v124 = *(_OWORD *)(v42 + 144);
    *(_OWORD *)&v124[16] = *(_OWORD *)(v42 + 160);
    v118 = *(_OWORD *)(v42 + 48);
    v119 = *(_OWORD *)(v42 + 64);
    v120 = *(_OWORD *)(v42 + 80);
    v121 = *(_OWORD *)(v42 + 96);
    v115 = *(_OWORD *)v42;
    v116 = *(_OWORD *)(v42 + 16);
    v117 = *(_OWORD *)(v42 + 32);
    v43 = *(_QWORD *)(v42 + 184);
    v44 = *(_QWORD *)(v42 + 200);
    v99 = *(_QWORD *)(v42 + 192);
    v101 = *(_QWORD *)(v42 + 176);
    sub_21F676AA4((uint64_t)v113, (uint64_t)v114);
    if (sub_21F677BE0((uint64_t)v114) != 2)
      goto LABEL_138;
    v45 = sub_21F677BEC((uint64_t)v114);
    v132 = *(_OWORD *)(v45 + 112);
    v133 = *(_OWORD *)(v45 + 128);
    *(_OWORD *)v134 = *(_OWORD *)(v45 + 144);
    *(_OWORD *)&v134[16] = *(_OWORD *)(v45 + 160);
    v128 = *(_OWORD *)(v45 + 48);
    v129 = *(_OWORD *)(v45 + 64);
    v130 = *(_OWORD *)(v45 + 80);
    v131 = *(_OWORD *)(v45 + 96);
    v125 = *(_OWORD *)v45;
    v126 = *(_OWORD *)(v45 + 16);
    v127 = *(_OWORD *)(v45 + 32);
    v96 = *(_QWORD *)(v45 + 176);
    v97 = *(_QWORD *)(v45 + 184);
    v94 = *(_QWORD *)(v45 + 200);
    v95 = *(_QWORD *)(v45 + 192);
    v138 = v115;
    *(_OWORD *)v139 = v116;
    *(_OWORD *)&v139[16] = v117;
    v140 = v118;
    v141 = v119;
    v142 = v120;
    v143 = v121;
    v144 = v122;
    v145 = v123;
    v146[0] = *(_OWORD *)v124;
    *(_OWORD *)((char *)v146 + 9) = *(_OWORD *)&v124[9];
    v156 = v133;
    v157[0] = *(_OWORD *)v134;
    *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)&v134[9];
    v152 = v129;
    v153 = v130;
    v155 = v132;
    v154 = v131;
    v149 = v125;
    *(_OWORD *)v150 = v126;
    v151 = v128;
    *(_OWORD *)&v150[16] = v127;
    v46 = v116;
    v47 = v117;
    v48 = v126;
    v49 = v127;
    if (v115 != v125 && (sub_21F716800() & 1) == 0)
      goto LABEL_138;
    if (*((_QWORD *)&v46 + 1))
    {
      if (!*((_QWORD *)&v48 + 1) || v46 != v48 && (sub_21F716800() & 1) == 0)
        goto LABEL_138;
    }
    else if (*((_QWORD *)&v48 + 1))
    {
      goto LABEL_138;
    }
    if (*((_QWORD *)&v47 + 1))
    {
      if (!*((_QWORD *)&v49 + 1) || v47 != v49 && (sub_21F716800() & 1) == 0)
        goto LABEL_138;
    }
    else if (*((_QWORD *)&v49 + 1))
    {
      goto LABEL_138;
    }
    sub_21F65EF28(&v140, (uint64_t)v148);
    sub_21F65EF28(&v151, (uint64_t)v159);
    sub_21F65EF28(v148, (uint64_t)&v163);
    if (v167)
    {
      if (v167 != 1)
      {
        sub_21F65EF28(v159, (uint64_t)&v160);
        if (v162 != 2)
          goto LABEL_138;
        v84 = vorrq_s8(v160, v161);
        if (vorr_s8(*(int8x8_t *)v84.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v84, v84, 8uLL)))
          goto LABEL_138;
        goto LABEL_125;
      }
      v63 = v163;
      v64 = v164;
      v65 = v165;
      v66 = v166;
      sub_21F65EF28(v159, (uint64_t)&v160);
      if (v162 != 1)
        goto LABEL_138;
      v67 = v161;
      if (__PAIR128__(v64, v63) != *(_OWORD *)&v160 && (sub_21F716800() & 1) == 0)
        goto LABEL_138;
      if (__PAIR128__(v66, v65) != *(_OWORD *)&v67)
        goto LABEL_121;
    }
    else
    {
      v82 = v163;
      v83 = v164;
      sub_21F65EF28(v159, (uint64_t)&v160);
      if (v162)
        goto LABEL_138;
      if (__PAIR128__(v83, v82) != *(_OWORD *)&v160)
      {
LABEL_121:
        if ((sub_21F716800() & 1) == 0)
          goto LABEL_138;
      }
    }
LABEL_125:
    if ((sub_21F6C4BDC(*((uint64_t *)&v142 + 1), *((uint64_t *)&v153 + 1)) & 1) == 0)
      goto LABEL_138;
    sub_21F65EF00(&v143, v147);
    sub_21F65EF00(&v154, v158);
    _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v147);
    if ((v85 & 1) == 0)
      goto LABEL_138;
    v86 = v43;
    if (v43)
    {
      v87 = v101;
      v89 = v96;
      v88 = v97;
      if (v97)
      {
        if (v101 == v96 && v86 == v97 || (sub_21F716800() & 1) != 0)
        {
          if (v99 == v95 && v44 == v94)
          {
            sub_21F6C9564(v101, v86);
            sub_21F6C9564(v101, v86);
            sub_21F6C9564(v96, v97);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21F676840(v101, v86);
          }
          else
          {
            v93 = sub_21F716800();
            sub_21F6C9564(v101, v86);
            sub_21F6C9564(v101, v86);
            sub_21F6C9564(v96, v97);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21F676840(v101, v86);
            if ((v93 & 1) == 0)
              goto LABEL_138;
          }
          goto LABEL_81;
        }
        sub_21F6C9564(v101, v86);
        sub_21F6C9564(v101, v86);
        sub_21F6C9564(v96, v97);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v90 = v101;
        v91 = v86;
LABEL_137:
        sub_21F676840(v90, v91);
        goto LABEL_138;
      }
    }
    else
    {
      v87 = v101;
      v89 = v96;
      v88 = v97;
      if (!v97)
        goto LABEL_81;
    }
    sub_21F6C9564(v87, v86);
    sub_21F6C9564(v89, v88);
    sub_21F676840(v87, v86);
    v90 = v89;
    v91 = v88;
    goto LABEL_137;
  }
  if (v4 == 1)
  {
    v5 = (__int128 *)sub_21F677B94((uint64_t)v135);
    sub_21F677BA4(v5, (uint64_t)v113);
    sub_21F676AA4(a2, (uint64_t)v137);
    if (sub_21F677B88((uint64_t)v137) == 1)
    {
      v6 = (__int128 *)sub_21F677B94((uint64_t)v137);
      sub_21F677BA4(v6, (uint64_t)&v115);
      sub_21F677BA4(v113, (uint64_t)v114);
      v7 = sub_21F677BE0((uint64_t)v114);
      if (v7)
      {
        if (v7 == 1)
        {
          v8 = sub_21F677BEC((uint64_t)v114);
          v110 = *(_OWORD *)(v8 + 112);
          v111 = *(_OWORD *)(v8 + 128);
          *(_OWORD *)v112 = *(_OWORD *)(v8 + 144);
          *(_OWORD *)&v112[16] = *(_OWORD *)(v8 + 160);
          v106 = *(_OWORD *)(v8 + 48);
          v107 = *(_OWORD *)(v8 + 64);
          v108 = *(_OWORD *)(v8 + 80);
          v109 = *(_OWORD *)(v8 + 96);
          v103 = *(_OWORD *)v8;
          v104 = *(_OWORD *)(v8 + 16);
          v105 = *(_OWORD *)(v8 + 32);
          v100 = *(_QWORD *)(v8 + 176);
          sub_21F677BA4(&v115, (uint64_t)v136);
          if (sub_21F677BE0((uint64_t)v136) != 1)
            goto LABEL_138;
          v9 = sub_21F677BEC((uint64_t)v136);
          v132 = *(_OWORD *)(v9 + 112);
          v133 = *(_OWORD *)(v9 + 128);
          *(_OWORD *)v134 = *(_OWORD *)(v9 + 144);
          *(_OWORD *)&v134[16] = *(_OWORD *)(v9 + 160);
          v128 = *(_OWORD *)(v9 + 48);
          v129 = *(_OWORD *)(v9 + 64);
          v130 = *(_OWORD *)(v9 + 80);
          v131 = *(_OWORD *)(v9 + 96);
          v125 = *(_OWORD *)v9;
          v126 = *(_OWORD *)(v9 + 16);
          v127 = *(_OWORD *)(v9 + 32);
          v98 = *(_QWORD *)(v9 + 176);
          v138 = v103;
          *(_OWORD *)v139 = v104;
          *(_OWORD *)&v139[16] = v105;
          v140 = v106;
          v141 = v107;
          v142 = v108;
          v143 = v109;
          v144 = v110;
          v145 = v111;
          v146[0] = *(_OWORD *)v112;
          *(_OWORD *)((char *)v146 + 9) = *(_OWORD *)&v112[9];
          v156 = v133;
          v157[0] = *(_OWORD *)v134;
          *(_OWORD *)((char *)v157 + 9) = *(_OWORD *)&v134[9];
          v152 = v129;
          v153 = v130;
          v155 = v132;
          v154 = v131;
          v149 = v125;
          *(_OWORD *)v150 = v126;
          v151 = v128;
          *(_OWORD *)&v150[16] = v127;
          v10 = v104;
          v11 = v105;
          v12 = v126;
          v13 = v127;
          if (v103 != v125 && (sub_21F716800() & 1) == 0)
            goto LABEL_138;
          if (*((_QWORD *)&v10 + 1))
          {
            if (!*((_QWORD *)&v12 + 1) || v10 != v12 && (sub_21F716800() & 1) == 0)
              goto LABEL_138;
          }
          else if (*((_QWORD *)&v12 + 1))
          {
            goto LABEL_138;
          }
          if (*((_QWORD *)&v11 + 1))
          {
            if (!*((_QWORD *)&v13 + 1) || v11 != v13 && (sub_21F716800() & 1) == 0)
              goto LABEL_138;
          }
          else if (*((_QWORD *)&v13 + 1))
          {
            goto LABEL_138;
          }
          sub_21F65EF28(&v140, (uint64_t)v148);
          sub_21F65EF28(&v151, (uint64_t)v159);
          sub_21F65EF28(v148, (uint64_t)&v163);
          if (v167)
          {
            if (v167 == 1)
            {
              v52 = v163;
              v53 = v164;
              v54 = v165;
              v55 = v166;
              sub_21F65EF28(v159, (uint64_t)&v160);
              if (v162 != 1)
                goto LABEL_138;
              v56 = v161;
              if (__PAIR128__(v53, v52) != *(_OWORD *)&v160 && (sub_21F716800() & 1) == 0)
                goto LABEL_138;
              if (__PAIR128__(v55, v54) != *(_OWORD *)&v56)
              {
LABEL_100:
                if ((sub_21F716800() & 1) == 0)
                  goto LABEL_138;
              }
            }
            else
            {
              sub_21F65EF28(v159, (uint64_t)&v160);
              if (v162 != 2)
                goto LABEL_138;
              v70 = vorrq_s8(v160, v161);
              if (vorr_s8(*(int8x8_t *)v70.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v70, v70, 8uLL)))
                goto LABEL_138;
            }
LABEL_104:
            v71 = *((_QWORD *)&v142 + 1);
            v72 = *((_QWORD *)&v153 + 1);
            sub_21F6D07BC(a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CE0AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CBFA0, (uint64_t (*)(void))sub_21F67C398);
            sub_21F6D07BC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CE0AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CBFA0, (uint64_t (*)(void))sub_21F67C398);
            if ((sub_21F6C4BDC(v71, v72) & 1) != 0)
            {
              sub_21F65EF00(&v143, v147);
              sub_21F65EF00(&v154, v158);
              _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v147);
              if ((v73 & 1) != 0)
              {
                v74 = sub_21F6C4EEC(v100, v98);
                sub_21F6D07BC(a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
                sub_21F6D07BC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
                if ((v74 & 1) == 0)
                  goto LABEL_138;
                goto LABEL_81;
              }
            }
            sub_21F6D07BC(a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
            v30 = a1;
            goto LABEL_29;
          }
          v68 = v163;
          v69 = v164;
          sub_21F65EF28(v159, (uint64_t)&v160);
          if (v162)
            goto LABEL_138;
          if (__PAIR128__(v69, v68) == *(_OWORD *)&v160)
            goto LABEL_104;
          goto LABEL_100;
        }
        v31 = (__int128 *)sub_21F677BEC((uint64_t)v114);
        v32 = *(__int128 *)((char *)v31 + 26);
        v33 = v31[1];
        v149 = *v31;
        *(_OWORD *)v150 = v33;
        *(_OWORD *)&v150[10] = v32;
        sub_21F677BA4(&v115, (uint64_t)v136);
        if (sub_21F677BE0((uint64_t)v136) != 2)
          goto LABEL_138;
        v34 = (__int128 *)sub_21F677BEC((uint64_t)v136);
        v35 = *(__int128 *)((char *)v34 + 26);
        v36 = v34[1];
        v138 = *v34;
        *(_OWORD *)v139 = v36;
        *(_OWORD *)&v139[10] = v35;
        sub_21F6CB580((uint64_t)&v149, (uint64_t)&v125);
        sub_21F6CB580((uint64_t)&v125, (uint64_t)v158);
        sub_21F6CB580((uint64_t)&v138, (uint64_t)&v103);
        sub_21F6CB580((uint64_t)&v103, (uint64_t)v147);
        sub_21F67166C();
        sub_21F6CDF5C();
        sub_21F6CDF14();
        if ((sub_21F716998() & 1) == 0)
          goto LABEL_138;
LABEL_81:
        v25 = 1;
        return v25 & 1;
      }
      v26 = sub_21F677BEC((uint64_t)v114);
      v27 = *(_WORD *)v26;
      v28 = *(unsigned __int8 *)(v26 + 2);
      v29 = *(_BYTE *)(v26 + 3);
      sub_21F677BA4(&v115, (uint64_t)&v103);
      if (sub_21F677BE0((uint64_t)&v103))
      {
        v30 = a1;
LABEL_29:
        sub_21F6D07BC(v30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
        goto LABEL_138;
      }
      v50 = sub_21F677BEC((uint64_t)&v103);
      if (((v27 ^ *(_WORD *)v50) & 1) != 0 || ((v27 ^ *(_WORD *)v50) & 0x100) != 0)
      {
LABEL_48:
        sub_21F676AA4((uint64_t)v168, (uint64_t)v136);
        v51 = (_QWORD *)sub_21F677B94((uint64_t)v136);
        sub_21F6CBF34(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6CBFA0);
        goto LABEL_138;
      }
      if ((v29 & 1) != 0)
      {
        if ((*(_BYTE *)(v50 + 3) & 1) == 0)
          goto LABEL_48;
      }
      else if ((*(_BYTE *)(v50 + 3) & 1) != 0 || v28 != *(unsigned __int8 *)(v50 + 2))
      {
        goto LABEL_48;
      }
      sub_21F676AA4((uint64_t)v168, (uint64_t)v136);
      v57 = (_QWORD *)sub_21F677B94((uint64_t)v136);
      sub_21F6CBF34(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6CBFA0);
      goto LABEL_81;
    }
LABEL_138:
    v25 = 0;
    return v25 & 1;
  }
  v23 = sub_21F677B94((uint64_t)v135);
  sub_21F66A620(v23, (uint64_t)v136);
  sub_21F676AA4(a2, (uint64_t)v137);
  if (sub_21F677B88((uint64_t)v137) != 2)
    goto LABEL_138;
  v24 = sub_21F677B94((uint64_t)v137);
  sub_21F66A620(v24, (uint64_t)v114);
  sub_21F6D07BC(a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CE0AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CBFA0, (uint64_t (*)(void))sub_21F67C398);
  sub_21F6D07BC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CE0AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CBFA0, (uint64_t (*)(void))sub_21F67C398);
  v25 = static V1CommandError.__derived_enum_equals(_:_:)((uint64_t)v136, (uint64_t)v114);
  sub_21F6D07BC(a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
  sub_21F6D07BC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
  return v25 & 1;
}

uint64_t sub_21F6CAF38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  _BYTE v72[216];
  uint64_t v73;

  v40 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10A0);
  v39 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10A8);
  v5 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  v38 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10B0);
  v7 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10B8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_21F6C9594();
  v44 = v13;
  v15 = v73;
  sub_21F7169B0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  v35 = v7;
  v16 = v41;
  v17 = v42;
  v18 = v43;
  v73 = v11;
  v19 = sub_21F7166EC();
  v20 = v10;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = sub_21F71653C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
    *v25 = &type metadata for V1Command.Request;
    v26 = v44;
    sub_21F716674();
    sub_21F716530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v26, v20);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  }
  v21 = v44;
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      LOBYTE(v59) = 1;
      sub_21F6C9660();
      v22 = v21;
      sub_21F716668();
      v28 = v20;
      sub_21F67B668();
      v29 = v37;
      sub_21F7166C8();
      v30 = v73;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v28);
      v67 = v54;
      v68 = v55;
      v69 = v56;
      *(_QWORD *)&v70 = v57;
      v63 = v50;
      v64 = v51;
      v65 = v52;
      v66 = v53;
      v59 = v46;
      v60 = v47;
      v61 = v48;
      v62 = v49;
      sub_21F678BE4((uint64_t)&v59);
      sub_21F676AA4((uint64_t)&v59, (uint64_t)v72);
    }
    else
    {
      LOBYTE(v59) = 2;
      sub_21F6C95D8();
      sub_21F716668();
      v31 = v20;
      sub_21F6D087C();
      v32 = v36;
      sub_21F7166C8();
      v33 = v73;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v31);
      v56 = v69;
      v57 = v70;
      v58 = v71;
      v52 = v65;
      v53 = v66;
      v54 = v67;
      v55 = v68;
      v48 = v61;
      v49 = v62;
      v50 = v63;
      v51 = v64;
      v46 = v59;
      v47 = v60;
      sub_21F6D08C0((uint64_t)&v46);
      sub_21F676AA4((uint64_t)&v46, (uint64_t)v72);
    }
  }
  else
  {
    LOBYTE(v59) = 0;
    sub_21F6C96A4();
    sub_21F716668();
    sub_21F6780E4();
    sub_21F7166C8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v20);
    LOBYTE(v59) = v46;
    *(_WORD *)((char *)&v59 + 1) = *(_WORD *)((char *)&v46 + 1);
    sub_21F676A88((uint64_t)&v59);
    sub_21F676AA4((uint64_t)&v59, (uint64_t)v72);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  return sub_21F676AA4((uint64_t)v72, v40);
}

uint64_t sub_21F6CB580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F6CB5C8()
{
  unint64_t result;

  result = qword_2554E0C20;
  if (!qword_2554E0C20)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASCodableAuthResults, &type metadata for PASCodableAuthResults);
    atomic_store(result, (unint64_t *)&qword_2554E0C20);
  }
  return result;
}

unint64_t sub_21F6CB60C()
{
  unint64_t result;

  result = qword_2554E0C50;
  if (!qword_2554E0C50)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720CD0, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0C50);
  }
  return result;
}

uint64_t sub_21F6CB650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  if ((a7 & 1) != 0)
    return sub_21F67C398(a1, a2, a3, a4, a5, a6);
  else
    return swift_bridgeObjectRetain();
}

unint64_t sub_21F6CB65C()
{
  unint64_t result;

  result = qword_2554E0C58;
  if (!qword_2554E0C58)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720C80, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0C58);
  }
  return result;
}

unint64_t sub_21F6CB6A0()
{
  unint64_t result;

  result = qword_2554E0C60;
  if (!qword_2554E0C60)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Response, &type metadata for AuthenticateCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0C60);
  }
  return result;
}

unint64_t sub_21F6CB6E4()
{
  unint64_t result;

  result = qword_2554E0C68;
  if (!qword_2554E0C68)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720C30, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0C68);
  }
  return result;
}

unint64_t sub_21F6CB728()
{
  unint64_t result;

  result = qword_2554E0C78;
  if (!qword_2554E0C78)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720BE0, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0C78);
  }
  return result;
}

uint64_t sub_21F6CB76C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6B616873646E6168 && a2 == 0xE900000000000065;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E496E676973 && a2 == 0xE600000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6568747561 && a2 == 0xEC00000065746163)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F6CB8C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70[12];
  uint64_t v71;

  v40 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1078);
  v39 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1080);
  v5 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  v38 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1088);
  v7 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1090);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_21F6CB60C();
  v44 = v13;
  v15 = v71;
  sub_21F7169B0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  v35 = v7;
  v16 = v41;
  v17 = v42;
  v18 = v43;
  v71 = v11;
  v19 = sub_21F7166EC();
  v20 = v10;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = sub_21F71653C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
    *v25 = &type metadata for V1Command.Response;
    v26 = v44;
    sub_21F716674();
    sub_21F716530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v20);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  }
  v21 = v44;
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      LOBYTE(v58) = 1;
      sub_21F6CB6E4();
      v22 = v21;
      sub_21F716668();
      v28 = v20;
      sub_21F67B868();
      v29 = v37;
      sub_21F7166C8();
      v30 = v71;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v28);
      v54 = v66;
      v55 = v67;
      v56 = v68;
      v57 = v69;
      v50 = v62;
      v51 = v63;
      v52 = v64;
      v53 = v65;
      v46 = v58;
      v47 = v59;
      v48 = v60;
      v49 = v61;
      sub_21F678BE4((uint64_t)&v46);
      sub_21F677BA4(&v46, (uint64_t)v70);
    }
    else
    {
      LOBYTE(v58) = 2;
      sub_21F6CB65C();
      sub_21F716668();
      v31 = v20;
      sub_21F6D0838();
      v32 = v36;
      sub_21F7166C8();
      v33 = v71;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v31);
      v58 = v46;
      v59 = v47;
      *(_QWORD *)&v60 = v48;
      WORD4(v60) = WORD4(v48);
      sub_21F6D08C0((uint64_t)&v58);
      sub_21F677BA4(&v58, (uint64_t)v70);
    }
  }
  else
  {
    LOBYTE(v58) = 0;
    sub_21F6CB728();
    sub_21F716668();
    sub_21F6782E4();
    sub_21F7166C8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v21, v20);
    LODWORD(v58) = v46;
    sub_21F676A88((uint64_t)&v58);
    sub_21F677BA4(&v58, (uint64_t)v70);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  return sub_21F677BA4(v70, v40);
}

uint64_t sub_21F6CBEFC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

_QWORD *sub_21F6CBF34(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

uint64_t sub_21F6CBFA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  if (a22 >> 62 == 2)
    return sub_21F6CB650(result, a2, a3, a4, a5, a6, HIBYTE(a6) & 1);
  if (a22 >> 62 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F667678(a7, a8, a9, a10, a11);
    swift_bridgeObjectRetain();
    sub_21F66428C(a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21F6CC108()
{
  unint64_t result;

  result = qword_2554E0CA8;
  if (!qword_2554E0CA8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720B90, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0CA8);
  }
  return result;
}

unint64_t sub_21F6CC14C()
{
  unint64_t result;

  result = qword_2554E0CB0;
  if (!qword_2554E0CB0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720B40, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0CB0);
  }
  return result;
}

unint64_t sub_21F6CC190()
{
  unint64_t result;

  result = qword_2554E0CC0;
  if (!qword_2554E0CC0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720AF0, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0CC0);
  }
  return result;
}

unint64_t sub_21F6CC1D4()
{
  unint64_t result;

  result = qword_2554E0CC8;
  if (!qword_2554E0CC8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Response, &type metadata for V1Command.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0CC8);
  }
  return result;
}

unint64_t sub_21F6CC218()
{
  unint64_t result;

  result = qword_2554E0CD0;
  if (!qword_2554E0CD0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720AA0, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0CD0);
  }
  return result;
}

unint64_t sub_21F6CC25C()
{
  unint64_t result;

  result = qword_2554E0CD8;
  if (!qword_2554E0CD8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Request, &type metadata for V1Command.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0CD8);
  }
  return result;
}

uint64_t sub_21F6CC2A0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F6CC3E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  __int128 v46[13];
  __int128 v47[2];
  uint64_t v48;
  char v49;
  _OWORD v50[2];
  uint64_t v51;
  char v52;
  _BYTE v53[216];
  uint64_t v54;

  v40 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1050);
  v39 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1058);
  v5 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  v38 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1060);
  v7 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E1068);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_21F6CC108();
  v44 = v13;
  v15 = v54;
  sub_21F7169B0();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  v35 = v7;
  v16 = v41;
  v17 = v42;
  v18 = v43;
  v54 = v11;
  v19 = sub_21F7166EC();
  v20 = v10;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = sub_21F71653C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
    *v25 = &type metadata for V1Command;
    v26 = v44;
    sub_21F716674();
    sub_21F716530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v20);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  }
  v21 = v44;
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      LOBYTE(v50[0]) = 1;
      sub_21F6CC190();
      v22 = v21;
      sub_21F716668();
      v28 = v20;
      sub_21F6CDB7C();
      v29 = v37;
      sub_21F7166C8();
      v30 = v54;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v28);
      sub_21F677BA4(v47, (uint64_t)v46);
      sub_21F677BA4(v46, (uint64_t)v50);
      sub_21F677BFC((uint64_t)v50);
    }
    else
    {
      LOBYTE(v50[0]) = 2;
      sub_21F6CC14C();
      sub_21F716668();
      v31 = v20;
      sub_21F67C348();
      v32 = v36;
      sub_21F7166C8();
      v33 = v54;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v31);
      v50[0] = v47[0];
      v50[1] = v47[1];
      v51 = v48;
      v52 = v49;
      sub_21F6D079C((uint64_t)v50);
    }
    sub_21F676AA4((uint64_t)v50, (uint64_t)v53);
  }
  else
  {
    LOBYTE(v50[0]) = 0;
    sub_21F6CC218();
    sub_21F716668();
    sub_21F6CDA28();
    sub_21F7166C8();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v20);
    sub_21F676AA4((uint64_t)v50, (uint64_t)v46);
    sub_21F676AA4((uint64_t)v46, (uint64_t)v47);
    sub_21F676AE0((uint64_t)v47);
    sub_21F676AA4((uint64_t)v47, (uint64_t)v53);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v45);
  return sub_21F676AA4((uint64_t)v53, v40);
}

unint64_t sub_21F6CC9F0()
{
  unint64_t result;

  result = qword_2554E0D18;
  if (!qword_2554E0D18)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720A50, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0D18);
  }
  return result;
}

unint64_t sub_21F6CCA34()
{
  unint64_t result;

  result = qword_2554E0D20;
  if (!qword_2554E0D20)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720A00, &type metadata for V1CommandError.UnexpectedFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0D20);
  }
  return result;
}

unint64_t sub_21F6CCA78()
{
  unint64_t result;

  result = qword_2554E0D28;
  if (!qword_2554E0D28)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7209B0, &type metadata for V1CommandError.UnexpectedResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0D28);
  }
  return result;
}

unint64_t sub_21F6CCABC()
{
  unint64_t result;

  result = qword_2554E0D30;
  if (!qword_2554E0D30)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720960, &type metadata for V1CommandError.UnexpectedRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0D30);
  }
  return result;
}

unint64_t sub_21F6CCB00()
{
  unint64_t result;

  result = qword_2554E0D38;
  if (!qword_2554E0D38)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720910, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0D38);
  }
  return result;
}

unint64_t sub_21F6CCB44()
{
  unint64_t result;

  result = qword_2554E0D40;
  if (!qword_2554E0D40)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7208C0, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0D40);
  }
  return result;
}

unint64_t sub_21F6CCB88()
{
  unint64_t result;

  result = qword_2554E0D48;
  if (!qword_2554E0D48)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720870, &type metadata for V1CommandError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0D48);
  }
  return result;
}

uint64_t sub_21F6CCBCC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636972656E6567 && a2 == 0xE700000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657473656ELL && a2 == 0xE600000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021F7296A0 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021F7296C0 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021F7296E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_21F6CCE14(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F6CCF50(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F6CD008@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v27[17];
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;

  v27[15] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1010);
  v27[11] = *(_QWORD *)(v3 - 8);
  v27[12] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v27[14] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1018);
  v27[9] = *(_QWORD *)(v5 - 8);
  v27[10] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1020);
  v27[7] = *(_QWORD *)(v7 - 8);
  v27[8] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v27[13] = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1028);
  v27[5] = *(_QWORD *)(v9 - 8);
  v27[6] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v29 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1030);
  v27[4] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27[16] = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1038);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E1040);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_21F6CC9F0();
  v21 = v32;
  sub_21F7169B0();
  if (!v21)
  {
    v27[2] = v15;
    v27[0] = v13;
    v27[1] = v12;
    v27[3] = 0;
    v32 = v17;
    v22 = sub_21F7166EC();
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v23 = sub_21F71653C();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
    *v25 = &type metadata for V1CommandError;
    sub_21F716674();
    sub_21F716530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v16);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
}

unint64_t sub_21F6CD960()
{
  unint64_t result;

  result = qword_2554E0D50;
  if (!qword_2554E0D50)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command, &type metadata for V1Command);
    atomic_store(result, (unint64_t *)&qword_2554E0D50);
  }
  return result;
}

unint64_t sub_21F6CD9A4(uint64_t a1)
{
  unint64_t result;

  result = sub_21F6CD9C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F6CD9C8()
{
  unint64_t result;

  result = qword_2554E0D78;
  if (!qword_2554E0D78)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Request, &type metadata for V1Command.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0D78);
  }
  return result;
}

uint64_t sub_21F6CDA0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6CDA28, (uint64_t (*)(void))sub_21F6CC25C, (uint64_t (*)(void))sub_21F6CDA6C);
}

unint64_t sub_21F6CDA28()
{
  unint64_t result;

  result = qword_2554E0D80;
  if (!qword_2554E0D80)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Request, &type metadata for V1Command.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0D80);
  }
  return result;
}

unint64_t sub_21F6CDA6C()
{
  unint64_t result;

  result = qword_2554E0D88;
  if (!qword_2554E0D88)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Request, &type metadata for V1Command.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0D88);
  }
  return result;
}

unint64_t sub_21F6CDAB4()
{
  unint64_t result;

  result = qword_2554E0D90;
  if (!qword_2554E0D90)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Request, &type metadata for V1Command.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0D90);
  }
  return result;
}

unint64_t sub_21F6CDAF8(uint64_t a1)
{
  unint64_t result;

  result = sub_21F6CDB1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F6CDB1C()
{
  unint64_t result;

  result = qword_2554E0DB8;
  if (!qword_2554E0DB8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Response, &type metadata for V1Command.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0DB8);
  }
  return result;
}

uint64_t sub_21F6CDB60(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6CDB7C, (uint64_t (*)(void))sub_21F6CC1D4, (uint64_t (*)(void))sub_21F6CDBC0);
}

unint64_t sub_21F6CDB7C()
{
  unint64_t result;

  result = qword_2554E0DC0;
  if (!qword_2554E0DC0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Response, &type metadata for V1Command.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0DC0);
  }
  return result;
}

unint64_t sub_21F6CDBC0()
{
  unint64_t result;

  result = qword_2554E0DC8;
  if (!qword_2554E0DC8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Response, &type metadata for V1Command.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0DC8);
  }
  return result;
}

unint64_t sub_21F6CDC08()
{
  unint64_t result;

  result = qword_2554E0DD0;
  if (!qword_2554E0DD0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Response, &type metadata for V1Command.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0DD0);
  }
  return result;
}

unint64_t sub_21F6CDC50()
{
  unint64_t result;

  result = qword_2554E0DD8;
  if (!qword_2554E0DD8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Request, &type metadata for V1Command.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0DD8);
  }
  return result;
}

unint64_t sub_21F6CDC98()
{
  unint64_t result;

  result = qword_2554E0DE0;
  if (!qword_2554E0DE0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command.Response, &type metadata for V1Command.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0DE0);
  }
  return result;
}

uint64_t sub_21F6CDCDC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6CDCF8, (uint64_t (*)(void))sub_21F6CDD3C, (uint64_t (*)(void))sub_21F6CDD80);
}

unint64_t sub_21F6CDCF8()
{
  unint64_t result;

  result = qword_2554E0E10;
  if (!qword_2554E0E10)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command, &type metadata for V1Command);
    atomic_store(result, (unint64_t *)&qword_2554E0E10);
  }
  return result;
}

unint64_t sub_21F6CDD3C()
{
  unint64_t result;

  result = qword_2554E0E18;
  if (!qword_2554E0E18)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command, &type metadata for V1Command);
    atomic_store(result, (unint64_t *)&qword_2554E0E18);
  }
  return result;
}

unint64_t sub_21F6CDD80()
{
  unint64_t result;

  result = qword_2554E0E20;
  if (!qword_2554E0E20)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command, &type metadata for V1Command);
    atomic_store(result, (unint64_t *)&qword_2554E0E20);
  }
  return result;
}

unint64_t sub_21F6CDDC8()
{
  unint64_t result;

  result = qword_2554E0E28;
  if (!qword_2554E0E28)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1Command, &type metadata for V1Command);
    atomic_store(result, (unint64_t *)&qword_2554E0E28);
  }
  return result;
}

uint64_t sub_21F6CDE0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6CDE28, (uint64_t (*)(void))sub_21F6CDE6C, (uint64_t (*)(void))sub_21F6CDEB0);
}

unint64_t sub_21F6CDE28()
{
  unint64_t result;

  result = qword_2554E0E30;
  if (!qword_2554E0E30)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554E0E30);
  }
  return result;
}

unint64_t sub_21F6CDE6C()
{
  unint64_t result;

  result = qword_2554E0E38;
  if (!qword_2554E0E38)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554E0E38);
  }
  return result;
}

unint64_t sub_21F6CDEB0()
{
  unint64_t result;

  result = qword_2554E0E40;
  if (!qword_2554E0E40)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554E0E40);
  }
  return result;
}

uint64_t sub_21F6CDEF4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F67C348, (uint64_t (*)(void))sub_21F67B0A0, (uint64_t (*)(void))sub_21F67C3D8);
}

unint64_t sub_21F6CDF14()
{
  unint64_t result;

  result = qword_2554E0E50;
  if (!qword_2554E0E50)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554E0E50);
  }
  return result;
}

unint64_t sub_21F6CDF5C()
{
  unint64_t result;

  result = qword_2554E0E58;
  if (!qword_2554E0E58)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554E0E58);
  }
  return result;
}

uint64_t sub_21F6CDFA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a28)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t (*a29)(void))
{
  uint64_t v29;

  v29 = (a22 >> 60) & 3;
  switch((_DWORD)v29)
  {
    case 2:
      return a29();
    case 1:
      return a28(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
    case 0:
      return a27(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return result;
}

uint64_t sub_21F6CE0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t result;

  if (a22 >> 62 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F667678(a7, a8, a9, a10, a11);
    swift_bridgeObjectRetain();
    sub_21F66428C(a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return sub_21F6C9564(a23, a24);
  }
  else if (a22 >> 62 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21F667678(a7, a8, a9, a10, a11);
    swift_bridgeObjectRetain();
    sub_21F66428C(a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for V1Command(uint64_t a1)
{
  return sub_21F6CDFA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C,
           (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870,
           (uint64_t (*)(void))sub_21F6769E4);
}

uint64_t *initializeWithCopy for V1Command(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  v22 = a2[18];
  v23 = a2[19];
  v24 = a2[20];
  v25 = a2[21];
  v26 = a2[22];
  v27 = a2[23];
  v28 = a2[24];
  v29 = a2[25];
  v3 = a2[8];
  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  sub_21F6CDFA0(*a2, v5, v6, v7, v8, v9, v10, v11, v3, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CE0AC,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CBFA0,
    (uint64_t (*)(void))sub_21F67C398);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v3;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  a1[23] = v27;
  a1[24] = v28;
  a1[25] = v29;
  return a1;
}

uint64_t assignWithCopy for V1Command(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v31 = a2[9];
  v32 = a2[10];
  v33 = a2[11];
  v34 = a2[12];
  v35 = a2[13];
  v36 = a2[14];
  v37 = a2[15];
  v38 = a2[16];
  v39 = a2[17];
  v40 = a2[18];
  v41 = a2[19];
  v42 = a2[20];
  v43 = a2[21];
  v44 = a2[22];
  v45 = a2[23];
  v46 = a2[24];
  v47 = a2[25];
  v3 = a2[8];
  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  sub_21F6CDFA0(*a2, v5, v6, v7, v8, v9, v10, v11, v3, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CE0AC,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6CBFA0,
    (uint64_t (*)(void))sub_21F67C398);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 72) = v31;
  *(_QWORD *)(a1 + 80) = v32;
  *(_QWORD *)(a1 + 88) = v33;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v34;
  *(_QWORD *)(a1 + 104) = v35;
  *(_QWORD *)(a1 + 112) = v36;
  *(_QWORD *)(a1 + 120) = v37;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v38;
  *(_QWORD *)(a1 + 136) = v39;
  *(_QWORD *)(a1 + 144) = v40;
  *(_QWORD *)(a1 + 152) = v41;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v42;
  *(_QWORD *)(a1 + 168) = v43;
  *(_QWORD *)(a1 + 176) = v44;
  *(_QWORD *)(a1 + 184) = v45;
  v28 = *(_QWORD *)(a1 + 192);
  v29 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 192) = v46;
  *(_QWORD *)(a1 + 200) = v47;
  sub_21F6CDFA0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((unint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    v29,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870,
    (uint64_t (*)(void))sub_21F6769E4);
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for V1Command(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 160);
  v19 = *(_OWORD *)(a1 + 176);
  v20 = *(_QWORD *)(a1 + 192);
  v21 = *(_QWORD *)(a1 + 200);
  v22 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v22;
  v23 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v23;
  v24 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v24;
  v25 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v25;
  v26 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v26;
  v27 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v27;
  *(_OWORD *)(a1 + 192) = a2[12];
  sub_21F6CDFA0(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((unint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    v21,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870,
    (uint64_t (*)(void))sub_21F6769E4);
  return a1;
}

uint64_t sub_21F6CE75C(uint64_t result, char a2)
{
  unint64_t v2;

  v2 = *(_QWORD *)(result + 168) & 0xC000000000000003 | ((unint64_t)(a2 & 3) << 60);
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v2;
  return result;
}

ValueMetadata *type metadata accessor for V1Command()
{
  return &type metadata for V1Command;
}

uint64_t destroy for V1Command.Request(uint64_t a1)
{
  return sub_21F67667C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_OWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184));
}

uint64_t *initializeWithCopy for V1Command.Request(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = a2[7];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  v22 = a2[18];
  v23 = a2[19];
  v24 = a2[20];
  v25 = a2[21];
  v26 = a2[22];
  v27 = a2[23];
  v28 = a2[24];
  v29 = a2[25];
  v4 = a2[8];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  sub_21F6CE0AC(*a2, v6, v7, v8, v9, v10, v11, v3, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v3;
  a1[8] = v4;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  a1[23] = v27;
  a1[24] = v28;
  a1[25] = v29;
  return a1;
}

uint64_t assignWithCopy for V1Command.Request(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = a2[7];
  v29 = a2[9];
  v30 = a2[10];
  v31 = a2[11];
  v32 = a2[12];
  v33 = a2[13];
  v34 = a2[14];
  v35 = a2[15];
  v36 = a2[16];
  v37 = a2[17];
  v38 = a2[18];
  v39 = a2[19];
  v40 = a2[20];
  v41 = a2[21];
  v42 = a2[22];
  v43 = a2[23];
  v44 = a2[24];
  v45 = a2[25];
  v4 = a2[8];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  sub_21F6CE0AC(*a2, v6, v7, v8, v9, v10, v11, v3, v4, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
    v39,
    v40,
    v41,
    v42,
    v43);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v3;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 72) = v29;
  *(_QWORD *)(a1 + 80) = v30;
  *(_QWORD *)(a1 + 88) = v31;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v32;
  *(_QWORD *)(a1 + 104) = v33;
  *(_QWORD *)(a1 + 112) = v34;
  *(_QWORD *)(a1 + 120) = v35;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v36;
  *(_QWORD *)(a1 + 136) = v37;
  *(_QWORD *)(a1 + 144) = v38;
  *(_QWORD *)(a1 + 152) = v39;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 160) = v40;
  *(_QWORD *)(a1 + 168) = v41;
  *(_QWORD *)(a1 + 176) = v42;
  *(_QWORD *)(a1 + 184) = v43;
  *(_QWORD *)(a1 + 192) = v44;
  *(_QWORD *)(a1 + 200) = v45;
  sub_21F67667C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((unint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1));
  return a1;
}

uint64_t assignWithTake for V1Command.Request(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = *(_OWORD *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 128);
  v16 = *(_OWORD *)(a1 + 144);
  v17 = *(_OWORD *)(a1 + 160);
  v18 = *(_OWORD *)(a1 + 176);
  v19 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v19;
  v20 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v20;
  v21 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v21;
  v22 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v22;
  v23 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v23;
  v24 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v24;
  *(_OWORD *)(a1 + 192) = a2[12];
  sub_21F67667C(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((unint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1));
  return a1;
}

uint64_t _s21ProximityAppleIDSetup9V1CommandO7RequestOwet_0(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80) >> 2;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double sub_21F6CEBE8(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 200) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 80) = 4 * -a2;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      *(_OWORD *)(a1 + 152) = 0u;
      *(_OWORD *)(a1 + 168) = 0u;
      *(_OWORD *)(a1 + 184) = 0u;
      *(_QWORD *)(a1 + 200) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_21F6CEC90(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 168) & 3 | (a2 << 62);
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v2;
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Request()
{
  return &type metadata for V1Command.Request;
}

uint64_t destroy for V1Command.Response(uint64_t a1)
{
  return sub_21F676870(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_OWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168));
}

uint64_t *initializeWithCopy for V1Command.Response(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v3 = a2[4];
  v4 = a2[5];
  v5 = a2[6];
  v6 = a2[7];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  v22 = a2[18];
  v23 = a2[19];
  v24 = a2[20];
  v25 = a2[21];
  v26 = a2[22];
  v7 = a2[8];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  sub_21F6CBFA0(*a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  *a1 = v8;
  a1[1] = v9;
  a1[2] = v10;
  a1[3] = v11;
  a1[4] = v3;
  a1[5] = v4;
  a1[6] = v5;
  a1[7] = v6;
  a1[8] = v7;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  return a1;
}

uint64_t assignWithCopy for V1Command.Response(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v28 = a2[9];
  v29 = a2[10];
  v30 = a2[11];
  v31 = a2[12];
  v32 = a2[13];
  v33 = a2[14];
  v34 = a2[15];
  v35 = a2[16];
  v36 = a2[17];
  v37 = a2[18];
  v38 = a2[19];
  v39 = a2[20];
  v40 = a2[21];
  v41 = a2[22];
  sub_21F6CBFA0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v28;
  *(_QWORD *)(a1 + 80) = v29;
  *(_QWORD *)(a1 + 88) = v30;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v31;
  *(_QWORD *)(a1 + 104) = v32;
  *(_QWORD *)(a1 + 112) = v33;
  *(_QWORD *)(a1 + 120) = v34;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v35;
  *(_QWORD *)(a1 + 136) = v36;
  *(_QWORD *)(a1 + 144) = v37;
  *(_QWORD *)(a1 + 152) = v38;
  v26 = *(_OWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v39;
  *(_QWORD *)(a1 + 168) = v40;
  *(_QWORD *)(a1 + 176) = v41;
  sub_21F676870(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((unint64_t *)&v26 + 1));
  return a1;
}

uint64_t assignWithTake for V1Command.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v3 = *(_QWORD *)(a2 + 176);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_OWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 144);
  v18 = *(_OWORD *)(a1 + 160);
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  v21 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v21;
  v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
  v23 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v23;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = v3;
  sub_21F676870(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((unint64_t *)&v18 + 1));
  return a1;
}

uint64_t getEnumTagSinglePayload for V1Command.Response(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80) >> 2;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for V1Command.Response(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 80) = 4 * -a2;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      *(_OWORD *)(a1 + 136) = 0u;
      *(_OWORD *)(a1 + 152) = 0u;
      *(_OWORD *)(a1 + 168) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Response()
{
  return &type metadata for V1Command.Response;
}

uint64_t destroy for V1CommandError(uint64_t a1)
{
  return sub_21F6769E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_21F67C398(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_21F67C398(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_21F6769E4(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_21F6769E4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for V1CommandError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for V1CommandError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F6CF39C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 1u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_21F6CF3B4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError()
{
  return &type metadata for V1CommandError;
}

uint64_t getEnumTagSinglePayload for V1CommandError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for V1CommandError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_21F6CF4C4 + 4 * byte_21F71F5C1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_21F6CF4F8 + 4 * byte_21F71F5BC[v4]))();
}

uint64_t sub_21F6CF4F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6CF500(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6CF508);
  return result;
}

uint64_t sub_21F6CF514(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6CF51CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_21F6CF520(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6CF528(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError.CodingKeys()
{
  return &type metadata for V1CommandError.CodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnknownCodingKeys()
{
  return &type metadata for V1CommandError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.GenericCodingKeys()
{
  return &type metadata for V1CommandError.GenericCodingKeys;
}

uint64_t storeEnumTagSinglePayload for V1CommandError.NestedCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F6CF5B4 + 4 * byte_21F71F5CB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F6CF5E8 + 4 * byte_21F71F5C6[v4]))();
}

uint64_t sub_21F6CF5E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6CF5F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6CF5F8);
  return result;
}

uint64_t sub_21F6CF604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6CF60CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F6CF610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6CF618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError.NestedCodingKeys()
{
  return &type metadata for V1CommandError.NestedCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedRequestCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedRequestCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedResponseCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedResponseCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedFailureCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedFailureCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.CodingKeys()
{
  return &type metadata for V1Command.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.RequestCodingKeys()
{
  return &type metadata for V1Command.RequestCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.ResponseCodingKeys()
{
  return &type metadata for V1Command.ResponseCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.FailureCodingKeys()
{
  return &type metadata for V1Command.FailureCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.CodingKeys()
{
  return &type metadata for V1Command.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.HandshakeCodingKeys()
{
  return &type metadata for V1Command.Response.HandshakeCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.SignInCodingKeys()
{
  return &type metadata for V1Command.Response.SignInCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.AuthenticateCodingKeys()
{
  return &type metadata for V1Command.Response.AuthenticateCodingKeys;
}

uint64_t _s21ProximityAppleIDSetup14V1CommandErrorO17GenericCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F6CF734 + 4 * byte_21F71F5D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F6CF768 + 4 * byte_21F71F5D0[v4]))();
}

uint64_t sub_21F6CF768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6CF770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6CF778);
  return result;
}

uint64_t sub_21F6CF784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6CF78CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F6CF790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6CF798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Request.CodingKeys()
{
  return &type metadata for V1Command.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.HandshakeCodingKeys()
{
  return &type metadata for V1Command.Request.HandshakeCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.SignInCodingKeys()
{
  return &type metadata for V1Command.Request.SignInCodingKeys;
}

uint64_t _s21ProximityAppleIDSetup9V1CommandO17RequestCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6CF814 + 4 * byte_21F71F5DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6CF834 + 4 * byte_21F71F5DF[v4]))();
}

_BYTE *sub_21F6CF814(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6CF834(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6CF83C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6CF844(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6CF84C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6CF854(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Request.AuthenticateCodingKeys()
{
  return &type metadata for V1Command.Request.AuthenticateCodingKeys;
}

unint64_t sub_21F6CF874()
{
  unint64_t result;

  result = qword_2554E0E60;
  if (!qword_2554E0E60)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FCF8, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E60);
  }
  return result;
}

unint64_t sub_21F6CF8BC()
{
  unint64_t result;

  result = qword_2554E0E68;
  if (!qword_2554E0E68)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FDB0, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E68);
  }
  return result;
}

unint64_t sub_21F6CF904()
{
  unint64_t result;

  result = qword_2554E0E70;
  if (!qword_2554E0E70)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FE68, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E70);
  }
  return result;
}

unint64_t sub_21F6CF94C()
{
  unint64_t result;

  result = qword_2554E0E78;
  if (!qword_2554E0E78)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FF20, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E78);
  }
  return result;
}

unint64_t sub_21F6CF994()
{
  unint64_t result;

  result = qword_2554E0E80;
  if (!qword_2554E0E80)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FFD8, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E80);
  }
  return result;
}

unint64_t sub_21F6CF9DC()
{
  unint64_t result;

  result = qword_2554E0E88;
  if (!qword_2554E0E88)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720090, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E88);
  }
  return result;
}

unint64_t sub_21F6CFA24()
{
  unint64_t result;

  result = qword_2554E0E90;
  if (!qword_2554E0E90)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720148, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E90);
  }
  return result;
}

unint64_t sub_21F6CFA6C()
{
  unint64_t result;

  result = qword_2554E0E98;
  if (!qword_2554E0E98)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720200, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0E98);
  }
  return result;
}

unint64_t sub_21F6CFAB4()
{
  unint64_t result;

  result = qword_2554E0EA0;
  if (!qword_2554E0EA0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7202B8, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EA0);
  }
  return result;
}

unint64_t sub_21F6CFAFC()
{
  unint64_t result;

  result = qword_2554E0EA8;
  if (!qword_2554E0EA8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720370, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EA8);
  }
  return result;
}

unint64_t sub_21F6CFB44()
{
  unint64_t result;

  result = qword_2554E0EB0;
  if (!qword_2554E0EB0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720428, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EB0);
  }
  return result;
}

unint64_t sub_21F6CFB8C()
{
  unint64_t result;

  result = qword_2554E0EB8;
  if (!qword_2554E0EB8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7204E0, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EB8);
  }
  return result;
}

unint64_t sub_21F6CFBD4()
{
  unint64_t result;

  result = qword_2554E0EC0;
  if (!qword_2554E0EC0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720688, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EC0);
  }
  return result;
}

unint64_t sub_21F6CFC1C()
{
  unint64_t result;

  result = qword_2554E0EC8;
  if (!qword_2554E0EC8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720740, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EC8);
  }
  return result;
}

unint64_t sub_21F6CFC64()
{
  unint64_t result;

  result = qword_2554E0ED0;
  if (!qword_2554E0ED0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720848, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0ED0);
  }
  return result;
}

unint64_t sub_21F6CFCAC()
{
  unint64_t result;

  result = qword_2554E0ED8;
  if (!qword_2554E0ED8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720768, &type metadata for V1CommandError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0ED8);
  }
  return result;
}

unint64_t sub_21F6CFCF4()
{
  unint64_t result;

  result = qword_2554E0EE0;
  if (!qword_2554E0EE0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720790, &type metadata for V1CommandError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EE0);
  }
  return result;
}

unint64_t sub_21F6CFD3C()
{
  unint64_t result;

  result = qword_2554E0EE8;
  if (!qword_2554E0EE8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7206B0, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EE8);
  }
  return result;
}

unint64_t sub_21F6CFD84()
{
  unint64_t result;

  result = qword_2554E0EF0;
  if (!qword_2554E0EF0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7206D8, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EF0);
  }
  return result;
}

unint64_t sub_21F6CFDCC()
{
  unint64_t result;

  result = qword_2554E0EF8;
  if (!qword_2554E0EF8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7205F8, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0EF8);
  }
  return result;
}

unint64_t sub_21F6CFE14()
{
  unint64_t result;

  result = qword_2554E0F00;
  if (!qword_2554E0F00)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720620, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F00);
  }
  return result;
}

unint64_t sub_21F6CFE5C()
{
  unint64_t result;

  result = qword_2554E0F08;
  if (!qword_2554E0F08)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7205A8, &type metadata for V1CommandError.UnexpectedRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F08);
  }
  return result;
}

unint64_t sub_21F6CFEA4()
{
  unint64_t result;

  result = qword_2554E0F10;
  if (!qword_2554E0F10)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7205D0, &type metadata for V1CommandError.UnexpectedRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F10);
  }
  return result;
}

unint64_t sub_21F6CFEEC()
{
  unint64_t result;

  result = qword_2554E0F18;
  if (!qword_2554E0F18)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720558, &type metadata for V1CommandError.UnexpectedResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F18);
  }
  return result;
}

unint64_t sub_21F6CFF34()
{
  unint64_t result;

  result = qword_2554E0F20;
  if (!qword_2554E0F20)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720580, &type metadata for V1CommandError.UnexpectedResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F20);
  }
  return result;
}

unint64_t sub_21F6CFF7C()
{
  unint64_t result;

  result = qword_2554E0F28;
  if (!qword_2554E0F28)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720508, &type metadata for V1CommandError.UnexpectedFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F28);
  }
  return result;
}

unint64_t sub_21F6CFFC4()
{
  unint64_t result;

  result = qword_2554E0F30;
  if (!qword_2554E0F30)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720530, &type metadata for V1CommandError.UnexpectedFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F30);
  }
  return result;
}

unint64_t sub_21F6D000C()
{
  unint64_t result;

  result = qword_2554E0F38;
  if (!qword_2554E0F38)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7207B8, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F38);
  }
  return result;
}

unint64_t sub_21F6D0054()
{
  unint64_t result;

  result = qword_2554E0F40;
  if (!qword_2554E0F40)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7207E0, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F40);
  }
  return result;
}

unint64_t sub_21F6D009C()
{
  unint64_t result;

  result = qword_2554E0F48;
  if (!qword_2554E0F48)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720398, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F48);
  }
  return result;
}

unint64_t sub_21F6D00E4()
{
  unint64_t result;

  result = qword_2554E0F50;
  if (!qword_2554E0F50)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7203C0, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F50);
  }
  return result;
}

unint64_t sub_21F6D012C()
{
  unint64_t result;

  result = qword_2554E0F58;
  if (!qword_2554E0F58)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7202E0, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F58);
  }
  return result;
}

unint64_t sub_21F6D0174()
{
  unint64_t result;

  result = qword_2554E0F60;
  if (!qword_2554E0F60)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720308, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F60);
  }
  return result;
}

unint64_t sub_21F6D01BC()
{
  unint64_t result;

  result = qword_2554E0F68;
  if (!qword_2554E0F68)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720228, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F68);
  }
  return result;
}

unint64_t sub_21F6D0204()
{
  unint64_t result;

  result = qword_2554E0F70;
  if (!qword_2554E0F70)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720250, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F70);
  }
  return result;
}

unint64_t sub_21F6D024C()
{
  unint64_t result;

  result = qword_2554E0F78;
  if (!qword_2554E0F78)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720450, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F78);
  }
  return result;
}

unint64_t sub_21F6D0294()
{
  unint64_t result;

  result = qword_2554E0F80;
  if (!qword_2554E0F80)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720478, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F80);
  }
  return result;
}

unint64_t sub_21F6D02DC()
{
  unint64_t result;

  result = qword_2554E0F88;
  if (!qword_2554E0F88)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7200B8, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F88);
  }
  return result;
}

unint64_t sub_21F6D0324()
{
  unint64_t result;

  result = qword_2554E0F90;
  if (!qword_2554E0F90)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7200E0, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F90);
  }
  return result;
}

unint64_t sub_21F6D036C()
{
  unint64_t result;

  result = qword_2554E0F98;
  if (!qword_2554E0F98)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720000, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0F98);
  }
  return result;
}

unint64_t sub_21F6D03B4()
{
  unint64_t result;

  result = qword_2554E0FA0;
  if (!qword_2554E0FA0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720028, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FA0);
  }
  return result;
}

unint64_t sub_21F6D03FC()
{
  unint64_t result;

  result = qword_2554E0FA8;
  if (!qword_2554E0FA8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FF48, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FA8);
  }
  return result;
}

unint64_t sub_21F6D0444()
{
  unint64_t result;

  result = qword_2554E0FB0;
  if (!qword_2554E0FB0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FF70, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FB0);
  }
  return result;
}

unint64_t sub_21F6D048C()
{
  unint64_t result;

  result = qword_2554E0FB8;
  if (!qword_2554E0FB8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720170, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FB8);
  }
  return result;
}

unint64_t sub_21F6D04D4()
{
  unint64_t result;

  result = qword_2554E0FC0;
  if (!qword_2554E0FC0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F720198, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FC0);
  }
  return result;
}

unint64_t sub_21F6D051C()
{
  unint64_t result;

  result = qword_2554E0FC8;
  if (!qword_2554E0FC8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FDD8, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FC8);
  }
  return result;
}

unint64_t sub_21F6D0564()
{
  unint64_t result;

  result = qword_2554E0FD0;
  if (!qword_2554E0FD0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FE00, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FD0);
  }
  return result;
}

unint64_t sub_21F6D05AC()
{
  unint64_t result;

  result = qword_2554E0FD8;
  if (!qword_2554E0FD8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FD20, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FD8);
  }
  return result;
}

unint64_t sub_21F6D05F4()
{
  unint64_t result;

  result = qword_2554E0FE0;
  if (!qword_2554E0FE0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FD48, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FE0);
  }
  return result;
}

unint64_t sub_21F6D063C()
{
  unint64_t result;

  result = qword_2554E0FE8;
  if (!qword_2554E0FE8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FC68, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FE8);
  }
  return result;
}

unint64_t sub_21F6D0684()
{
  unint64_t result;

  result = qword_2554E0FF0;
  if (!qword_2554E0FF0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FC90, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FF0);
  }
  return result;
}

unint64_t sub_21F6D06CC()
{
  unint64_t result;

  result = qword_2554E0FF8;
  if (!qword_2554E0FF8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FE90, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E0FF8);
  }
  return result;
}

unint64_t sub_21F6D0714()
{
  unint64_t result;

  result = qword_2554E1000;
  if (!qword_2554E1000)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71FEB8, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E1000);
  }
  return result;
}

uint64_t sub_21F6D0758()
{
  uint64_t v0;

  sub_21F6769E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  sub_21F6769E4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  return swift_deallocObject();
}

uint64_t sub_21F6D079C(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 168) & 0xC000000000000003 | 0x2000000000000000;
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v1;
  return result;
}

uint64_t sub_21F6D07BC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a4)(void))
{
  sub_21F6CDFA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    a2,
    a3,
    a4);
  return a1;
}

unint64_t sub_21F6D0838()
{
  unint64_t result;

  result = qword_2554E1098;
  if (!qword_2554E1098)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Response, &type metadata for AuthenticateCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E1098);
  }
  return result;
}

unint64_t sub_21F6D087C()
{
  unint64_t result;

  result = qword_2554E10C0;
  if (!qword_2554E10C0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Request, &type metadata for AuthenticateCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E10C0);
  }
  return result;
}

uint64_t sub_21F6D08C0(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 168) & 3 | 0x8000000000000000;
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v1;
  return result;
}

id PASFamilyMember.dsid.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_dsid);
}

uint64_t PASFamilyMember.altDSID.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_altDSID);
}

id PASFamilyMember.isChildAccount.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_isChildAccount);
}

uint64_t PASFamilyMember.firstName.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_firstName);
}

uint64_t PASFamilyMember.formattedUsername.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(*(id *)(v0 + 16), sel_appleID);
  v3 = objc_msgSend(v1, sel_formattedUsernameFromUsername_, v2);

  if (!v3)
    return 0;
  v4 = sub_21F716104();

  return v4;
}

uint64_t PASFamilyMember.appleID.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_appleID);
}

uint64_t PASAccountContextFamilyMember.init()()
{
  return 0;
}

_QWORD *PASFamilyMember.__allocating_init(familyMember:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t PASFamilyMemberSelection.selectedMemberId.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  id *v4;
  id *v6;
  _QWORD v7[5];
  char v8;

  sub_21F674A3C(v0, (uint64_t)&v6);
  if (v8 != 3)
  {
    if (v8 == 2)
    {
      v1 = objc_msgSend(v6[2], sel_aa_altDSID);
      if (v1)
      {
LABEL_5:
        v2 = v1;
        v3 = sub_21F716104();
        swift_release();

LABEL_10:
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
        return v3;
      }
    }
    else
    {
      if (v8 != 1)
      {
        sub_21F674A78((uint64_t)&v6);
        return 0;
      }
      v1 = objc_msgSend(v6[2], sel_altDSID);
      if (v1)
        goto LABEL_5;
    }
    swift_release();
    v3 = 0;
    goto LABEL_10;
  }
  v4 = v6;

  swift_release();
  if (*(id *)((char *)v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID + 8))
    v3 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID);
  else
    v3 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID);
  swift_bridgeObjectRetain();

  return v3;
}

void PASFamilyMemberSelection.description.getter()
{
  uint64_t v0;
  _BYTE v1[56];

  sub_21F674A3C(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_21F6D0BC0()
{
  uint64_t v1;

  sub_21F674A78((uint64_t)&v1);
  return 7824750;
}

uint64_t PASFamilyMemberPresentable.altDSID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.__allocating_init(familyMember:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;

  v6 = swift_allocObject();
  type metadata accessor for PASFamilyMember();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  *(_QWORD *)(v6 + 16) = v7;
  return v6;
}

uint64_t PASFamilyMemberPresentable.init(familyMember:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  type metadata accessor for PASFamilyMember();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  *(_QWORD *)(v3 + 16) = v7;
  return v3;
}

uint64_t PASFamilyMemberPresentable.__allocating_init(familyMember:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t PASFamilyMemberPresentable.init(familyMember:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t PASFamilyMemberPresentable.__allocating_init(account:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  type metadata accessor for PASAccountWithImage();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v6 + 16) = v7 | 0x8000000000000000;
  return v6;
}

uint64_t PASFamilyMemberPresentable.init(account:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  type metadata accessor for PASAccountWithImage();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v3 + 16) = v7 | 0x8000000000000000;
  return v3;
}

uint64_t PASFamilyMemberPresentable.__allocating_init(account:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1 | 0x8000000000000000;
  return result;
}

uint64_t PASFamilyMemberPresentable.init(account:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1 | 0x8000000000000000;
  return v1;
}

uint64_t PASFamilyMemberPresentable.dsid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.firstName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 32);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.lastName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 40);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.appleID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.accountUsername.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 56);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.formattedUsername.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 64);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.memberTypeDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v6;

  v1 = sub_21F715E28();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21F7160C8();
  MEMORY[0x24BDAC7A8](v2);
  if ((*(_QWORD *)(v0 + 16) & 0x8000000000000000) != 0)
  {
    sub_21F7160D4();
    type metadata accessor for PASSourceFlowController();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_21F715E1C();
    return sub_21F71611C();
  }
  else
  {
    swift_retain();
    v3 = PASFamilyMember.memberTypeDescription.getter();
    swift_release();
    return v3;
  }
}

uint64_t PASFamilyMember.memberTypeDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t ObjCClassFromMetadata;
  id v5;

  v1 = sub_21F715E28();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_21F7160C8();
  MEMORY[0x24BDAC7A8](v2);
  v3 = *(void **)(v0 + 16);
  if (!objc_msgSend(v3, sel_isMe))
    objc_msgSend(v3, sel_memberType);
  sub_21F7160D4();
  type metadata accessor for PASSourceFlowController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_21F715E1C();
  return sub_21F71611C();
}

uint64_t PASFamilyMemberPresentable.isMe.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  char v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 72);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9 & 1;
}

uint64_t PASFamilyMemberPresentable.imageData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 80);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t PASFamilyMemberPresentable.description.getter()
{
  uint64_t v0;

  if (*(uint64_t *)(v0 + 16) < 0)
    return 0x6C616E6F73726570;
  else
    return 0x6E65646E65706564;
}

uint64_t PASFamilyMemberPresentable.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PASFamilyMemberPresentable.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6D1ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D1B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 24);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D1C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 32);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D1D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 40);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D1E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D1F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 56);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D1FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 64);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D20B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  char v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 72);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9 & 1;
}

uint64_t sub_21F6D218C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  unint64_t *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1 < 0)
  {
    v1 &= ~0x8000000000000000;
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = type metadata accessor for PASAccountWithImage;
    v5 = &qword_2554DE3E0;
    v6 = &protocol conformance descriptor for PASAccountWithImage;
    v2 = 255;
  }
  else
  {
    v3 = type metadata accessor for PASFamilyMember();
    v4 = type metadata accessor for PASFamilyMember;
    v5 = &qword_2554E0800;
    v6 = &protocol conformance descriptor for PASFamilyMember;
  }
  v7 = sub_21F695B30(v5, v2, (uint64_t (*)(uint64_t))v4, (uint64_t)v6);
  v11[3] = v3;
  v11[4] = v7;
  v11[0] = v1;
  __swift_project_boxed_opaque_existential_1(v11, v3);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 80);
  swift_retain();
  v9 = v8(v3, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return v9;
}

uint64_t sub_21F6D2268@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21F716500();
  *a1 = result;
  return result;
}

uint64_t sub_21F6D2290(uint64_t *a1, uint64_t *a2)
{
  return _s21ProximityAppleIDSetup26PASFamilyMemberPresentableC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t static PASFamilyMember.== infix(_:_:)()
{
  sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
  return sub_21F7163EC() & 1;
}

uint64_t sub_21F6D22EC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7461446567616D69;
  else
    return 0x654D796C696D6166;
}

uint64_t sub_21F6D2330()
{
  char *v0;

  return sub_21F6D22EC(*v0);
}

uint64_t sub_21F6D2338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6D7348(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6D235C()
{
  sub_21F6D6EC4();
  return sub_21F7169E0();
}

uint64_t sub_21F6D2384()
{
  sub_21F6D6EC4();
  return sub_21F7169EC();
}

uint64_t PASFamilyMember.imageData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_21F647CC0(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t PASFamilyMember.dictionary.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_dictionary);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_21F716044();

  return v3;
}

_QWORD *PASFamilyMember.init(familyMember:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t PASFamilyMember.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PASFamilyMember.init(from:)(a1);
  return v2;
}

unint64_t *PASFamilyMember.init(from:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  unint64_t v21[2];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;

  v3 = v1;
  v5 = *v1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10E0);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6D6EC4();
  sub_21F7169B0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21[1] = v5;
    v22 = v6;
    v25 = 0;
    sub_21F671A18();
    v9 = v23;
    sub_21F7166C8();
    v10 = v24;
    sub_21F64779C(0, &qword_2554E3110);
    sub_21F64779C(0, (unint64_t *)&qword_2554DB318);
    v11 = (id)sub_21F716380();
    v21[0] = *((_QWORD *)&v10 + 1);
    if (v11)
    {
      v12 = v10;
    }
    else
    {
      v12 = v10;
      if (qword_2554DA718 != -1)
        swift_once();
      v13 = sub_21F715F3C();
      __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
      v14 = sub_21F715F24();
      v15 = sub_21F71635C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        v17 = v15;
        v18 = v16;
        _os_log_impl(&dword_21F63C000, v14, v17, "PASFamilyMember failed to init from decoder. FamilyMember is missing.", v16, 2u);
        MEMORY[0x2207CC514](v18, -1, -1);
      }

      v19 = objc_allocWithZone(MEMORY[0x24BE30A70]);
      v11 = objc_msgSend(v19, sel_init, v21[0]);
    }
    v3[2] = (unint64_t)v11;
    v25 = 1;
    sub_21F71668C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v9);
    sub_21F649BB0(v12, v21[0]);
    *(_OWORD *)(v3 + 3) = v24;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v3;
}

uint64_t PASFamilyMember.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;

  v3 = v1;
  v25 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6D6EC4();
  sub_21F7169C8();
  v9 = (void *)objc_opt_self();
  v10 = v3[2];
  v23 = 0;
  v11 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v10, 1, &v23);
  v12 = v23;
  if (v11)
  {
    v13 = (void *)sub_21F715D80();
    v15 = v14;

    v23 = v13;
    v24 = v15;
    v22 = 0;
    sub_21F6715E0();
    sub_21F716758();
    if (v2 || (v16 = v3[4], v16 >> 60 == 15))
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return sub_21F649BB0((uint64_t)v13, v15);
    }
    else
    {
      v19 = (void *)v3[3];
      v23 = v19;
      v24 = v16;
      v22 = 1;
      v21 = v16;
      sub_21F647CD4((uint64_t)v19, v16);
      sub_21F716758();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_21F649BB0((uint64_t)v13, v15);
      return sub_21F649B9C((uint64_t)v19, v21);
    }
  }
  else
  {
    v18 = v12;
    sub_21F715D50();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t PASFamilyMember.deinit()
{
  uint64_t v0;

  sub_21F649B9C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t PASFamilyMember.__deallocating_deinit()
{
  uint64_t v0;

  sub_21F649B9C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t sub_21F6D2A74()
{
  sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
  return sub_21F7163EC() & 1;
}

unint64_t *sub_21F6D2AC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t *result;

  v5 = swift_allocObject();
  result = PASFamilyMember.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_21F6D2B1C(_QWORD *a1)
{
  return PASFamilyMember.encode(to:)(a1);
}

uint64_t PASFamilyMember.lastName.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_lastName);
}

uint64_t PASFamilyMember.accountUsername.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_appleID);
}

uint64_t sub_21F6D2B54(SEL *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(*(id *)(v1 + 16), *a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_21F716104();

  return v4;
}

id PASFamilyMember.age.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_age);
}

id PASFamilyMember.isMe.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_isMe);
}

id sub_21F6D2BE8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_dsid);
}

uint64_t sub_21F6D2C10(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_altDSID);
}

uint64_t sub_21F6D2C1C(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_firstName);
}

uint64_t sub_21F6D2C28(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_lastName);
}

uint64_t sub_21F6D2C34(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_appleID);
}

uint64_t sub_21F6D2C40(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)v3 + 16), *a3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_21F716104();

  return v6;
}

uint64_t sub_21F6D2CA4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(*(id *)(v1 + 16), sel_appleID);
  v4 = objc_msgSend(v2, sel_formattedUsernameFromUsername_, v3);

  if (!v4)
    return 0;
  v5 = sub_21F716104();

  return v5;
}

id sub_21F6D2D44()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_isMe);
}

uint64_t sub_21F6D2D68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  sub_21F647CC0(v1, *(_QWORD *)(*(_QWORD *)v0 + 32));
  return v1;
}

uint64_t PASAccountContextFamilyMember.requiresCDP.getter()
{
  return 1;
}

uint64_t PASAccountContextFamilyMember.requiresManateeRepair.getter()
{
  return 1;
}

uint64_t PASAccountContextFamilyMember.requiresFamilyRepair.getter()
{
  return 1;
}

uint64_t PASAccountContextFamilyMember.showPrivacyDisclosureOnSourceDevice.getter()
{
  return 1;
}

uint64_t PASAccountContextFamilyMember.showPasscodeBiometricsRequestOnTargetDevice.getter()
{
  return 1;
}

void *PASAccountContextFamilyMember.flowStepAllSetContext.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

void PASAccountContextFamilyMember.flowStepAllSetContext.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*PASAccountContextFamilyMember.flowStepAllSetContext.modify())()
{
  return nullsub_1;
}

BOOL PASFlowStepFamilyPickerError.init(rawValue:)()
{
  uint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_21F6D2E78@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_21F6D2EC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s21ProximityAppleIDSetup28PASFlowStepFamilyPickerErrorO8rawValueSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_21F6D2EEC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70E61C();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F6D2F64()
{
  sub_21F6D7A18();
  return sub_21F7168C0();
}

uint64_t sub_21F6D2F8C()
{
  sub_21F6D7A18();
  return sub_21F7168B4();
}

uint64_t property wrapper backing initializer of PASFlowStepFamilyPicker.selectedMember()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10F8);
  return sub_21F715F78();
}

uint64_t PASFlowStepFamilyPicker.selectedMember.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21F6D3068@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21F6D30E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t PASFlowStepFamilyPicker.$selectedMember.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__selectedMember, &qword_2554E1108);
}

uint64_t property wrapper backing initializer of PASFlowStepFamilyPicker.canAddMembers()
{
  return sub_21F715F78();
}

uint64_t PASFlowStepFamilyPicker.canAddMembers.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21F6D320C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21F6D3288()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t PASFlowStepFamilyPicker.$canAddMembers.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__canAddMembers, &qword_2554E24B0);
}

uint64_t property wrapper backing initializer of PASFlowStepFamilyPicker.familyMembers()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2460);
  return sub_21F715F78();
}

uint64_t PASFlowStepFamilyPicker.familyMembers.getter()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21F6D33C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21F6D343C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t PASFlowStepFamilyPicker.$familyMembers.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__familyMembers, &qword_2554E1120);
}

uint64_t sub_21F6D34C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a5);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t sub_21F6D3534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v18 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_21F715F90();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_21F6D364C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___fetchLock;
  swift_beginAccess();
  sub_21F647624(v3, (uint64_t)&v7, &qword_2554E11A0);
  if (v8)
    return sub_21F64756C(&v7, (uint64_t)a1);
  sub_21F6D78C4((uint64_t)&v7);
  swift_retain();
  sub_21F656BB0((uint64_t)&v7);
  swift_release();
  v5 = type metadata accessor for PASLock();
  v6 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_BYTE *)(v6 + 112) = 0;
  a1[3] = v5;
  a1[4] = (uint64_t)&off_24E45B1B8;
  *a1 = v6;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
  sub_21F647710((uint64_t)a1, (uint64_t)&v7);
  swift_beginAccess();
  sub_21F6D8954((uint64_t)&v7, v3);
  return swift_endAccess();
}

uint64_t PASFlowStepFamilyPicker.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_21F6D7224(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_21F6D3790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___analytics;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___analytics))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___analytics);
  }
  else
  {
    v3 = v0;
    swift_retain();
    sub_21F6569AC((uint64_t)v7);
    swift_release();
    v4 = v8;
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v2 = (*(uint64_t (**)(ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(&type metadata for PASFlowStepFamilyPicker.AnalyticsEvent, &off_24E458E48, v4, v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t PASFlowStepFamilyPicker.__allocating_init(delegate:dataSource:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  v10 = sub_21F6D7734(a1, a2, v9, v3, v7, v8);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(a3);
  return v10;
}

uint64_t PASFlowStepFamilyPicker.init(delegate:dataSource:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_21F6D7448(a1, a2, (uint64_t)v11, v3, v7, v8);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(a3);
  return v13;
}

uint64_t PASFlowStepFamilyPicker.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1[8] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE878);
  v1[9] = v2;
  v1[10] = *(_QWORD *)(v2 - 8);
  v1[11] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1130);
  v1[12] = v3;
  v1[13] = *(_QWORD *)(v3 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = sub_21F7162A8();
  v1[16] = sub_21F71629C();
  v4 = (_QWORD *)swift_task_alloc();
  v1[17] = v4;
  *v4 = v1;
  v4[1] = sub_21F6D3A64;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F6D3A64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6D3AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__deviceProvider);
  swift_beginAccess();
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v2 + 24);
    swift_retain();
  }
  else
  {
    v4 = qword_2554DA6A0;
    swift_retain();
    if (v4 != -1)
      swift_once();
    v5 = sub_21F63EB84();
    v3 = v6;
    *(_QWORD *)(v2 + 16) = v5;
    *(_QWORD *)(v2 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v7 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 80);
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 48))(ObjectType, v3);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1140);
  sub_21F6A1030(&qword_2554E1148, &qword_2554DE878, MEMORY[0x24BDB9EE8]);
  sub_21F715FCC();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v8, v10);
  sub_21F6A1030(&qword_2554E1150, &qword_2554E1130, MEMORY[0x24BDB94C8]);
  swift_retain();
  sub_21F715FF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v7, v9);
  swift_beginAccess();
  sub_21F715F54();
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6D3D48()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6D3D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_21F647624(a1, a2, &qword_2554DA770);
}

uint64_t sub_21F6D3DB4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24))(0xD000000000000015, 0x800000021F728010, v3, v4);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_supportedAuthModes) = &unk_24E4513C0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PASFlowStepFamilyPicker.fetchFamilyMembers(using:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[26] = a1;
  v2[27] = v1;
  v3 = sub_21F716278();
  v2[28] = v3;
  v2[29] = *(_QWORD *)(v3 - 8);
  v2[30] = swift_task_alloc();
  sub_21F7162A8();
  v2[31] = sub_21F71629C();
  v2[32] = sub_21F716248();
  v2[33] = v4;
  return swift_task_switch();
}

uint64_t sub_21F6D3ED0()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[34] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepFamilyPicker fetchFamilyMembers", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  sub_21F6D364C(v0 + 2);
  v0[35] = (uint64_t)__swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  return swift_task_switch();
}

uint64_t sub_21F6D3FDC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 368) = *(_BYTE *)(**(_QWORD **)(v0 + 280) + 112);
  return swift_task_switch();
}

uint64_t sub_21F6D3FFC()
{
  uint64_t v0;
  char v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  v1 = *(_BYTE *)(v0 + 368);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if ((v1 & 1) != 0)
  {
    swift_release();
    v2 = sub_21F715F24();
    v3 = sub_21F716350();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepFamilyPicker fetchFamilyMembers called again!", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_21F6D364C((uint64_t *)(v0 + 56));
    *(_QWORD *)(v0 + 288) = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
    return swift_task_switch();
  }
}

uint64_t sub_21F6D4100()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 288);
  if (*(_BYTE *)(v1 + 112) == 1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v2;
    *v2 = v0;
    v2[1] = sub_21F6D4180;
    return sub_21F7162FC();
  }
  else
  {
    *(_BYTE *)(v1 + 112) = 1;
    return swift_task_switch();
  }
}

uint64_t sub_21F6D4180()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6D41E8()
{
  uint64_t v0;
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v1;
  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = sub_21F6D4250;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 208);
  return swift_task_switch();
}

uint64_t sub_21F6D4250(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 320) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 328) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6D42C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  v1 = *(void **)(v0 + 304);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v3 = sub_21F715F24();
    v4 = sub_21F716374();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_21F63C000, v3, v4, "PASFlowStepFamilyPicker fetchFamilyMembers task was cancelled", v5, 2u);
      MEMORY[0x2207CC514](v5, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 232);
    v6 = *(_QWORD *)(v0 + 240);
    v8 = *(_QWORD *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = *(void **)(v0 + 176);
  }
  else
  {

    v10 = v1;
    v11 = v1;
    v12 = sub_21F715F24();
    v13 = sub_21F71635C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138543362;
      v16 = v1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 200) = v17;
      sub_21F716428();
      *v15 = v17;

      _os_log_impl(&dword_21F63C000, v12, v13, "PASFlowStepFamilyPicker fetchFamilyMembers failed with error %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v15, -1, -1);
      MEMORY[0x2207CC514](v14, -1, -1);
    }
    else
    {

    }
    v18 = *(_QWORD *)(v0 + 216);

    v19 = *(void **)(v18 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error);
    *(_QWORD *)(v18 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error) = v1;

    v20 = v1;
    PASFlowStepBase.setFinished()();
    v9 = v1;
  }

  sub_21F6D364C((uint64_t *)(v0 + 136));
  *(_QWORD *)(v0 + 360) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
  return swift_task_switch();
}

uint64_t sub_21F6D4574()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = v0[41];
  swift_getKeyPath();
  swift_getKeyPath();
  v0[23] = v1;
  swift_retain();
  sub_21F715FB4();
  sub_21F6D5558();
  v0[42] = sub_21F6D3790();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  v2 = v0[24];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_21F716608();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v0[43] = v3;
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6D46AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 344);
  *(_QWORD *)(v0 + 120) = &type metadata for PASFlowStepFamilyPicker.AnalyticsEvent;
  *(_QWORD *)(v0 + 128) = &off_24E458E48;
  *(_QWORD *)(v0 + 96) = v1;
  *(_QWORD *)(v0 + 104) = 0;
  *(_BYTE *)(v0 + 112) = 0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 352) = v2;
  *v2 = v0;
  v2[1] = sub_21F6D4728;
  return sub_21F6B7FC0(v0 + 96, 0, 0);
}

uint64_t sub_21F6D4728()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 96);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6D4794()
{
  uint64_t *v0;

  sub_21F6D364C(v0 + 17);
  v0[45] = (uint64_t)__swift_project_boxed_opaque_existential_1(v0 + 17, v0[20]);
  return swift_task_switch();
}

uint64_t sub_21F6D47E8()
{
  uint64_t v0;

  *(_BYTE *)(**(_QWORD **)(v0 + 360) + 112) = 0;
  return swift_task_switch();
}

uint64_t sub_21F6D4804()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6D4848()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v1 = *(void **)(v0 + 320);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v3 = sub_21F715F24();
    v4 = sub_21F716374();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_21F63C000, v3, v4, "PASFlowStepFamilyPicker fetchFamilyMembers task was cancelled", v5, 2u);
      MEMORY[0x2207CC514](v5, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 232);
    v6 = *(_QWORD *)(v0 + 240);
    v8 = *(_QWORD *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = *(void **)(v0 + 176);
  }
  else
  {

    v10 = v1;
    v11 = v1;
    v12 = sub_21F715F24();
    v13 = sub_21F71635C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138543362;
      v16 = v1;
      v17 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 200) = v17;
      sub_21F716428();
      *v15 = v17;

      _os_log_impl(&dword_21F63C000, v12, v13, "PASFlowStepFamilyPicker fetchFamilyMembers failed with error %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v15, -1, -1);
      MEMORY[0x2207CC514](v14, -1, -1);
    }
    else
    {

    }
    v18 = *(_QWORD *)(v0 + 216);

    v19 = *(void **)(v18 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error);
    *(_QWORD *)(v18 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error) = v1;

    v20 = v1;
    PASFlowStepBase.setFinished()();
    v9 = v1;
  }

  sub_21F6D364C((uint64_t *)(v0 + 136));
  *(_QWORD *)(v0 + 360) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
  return swift_task_switch();
}

uint64_t sub_21F6D4AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6D4B08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, uint64_t, uint64_t);

  v1 = v0[7];
  v2 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_dataSource;
  v0[8] = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_dataSource;
  v3 = *(_QWORD *)(v1 + v2 + 24);
  v4 = *(_QWORD *)(v1 + v2 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + v2), v3);
  v7 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_21F6D4B98;
  return v7(v0[6], v3, v4);
}

uint64_t sub_21F6D4B98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6D4C0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v1 = v0[11];
  __swift_instantiateConcreteTypeFromMangledName(qword_2554E1660);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_21F7215D0;
  type metadata accessor for PASFamilyMemberPresentable();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1 | 0x8000000000000000;
  *(_QWORD *)(v2 + 32) = v3;
  sub_21F7161E8();
  v0[12] = v2;
  v4 = (_QWORD *)(v0[7] + v0[8]);
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  v0[13] = v7;
  *v7 = v0;
  v7[1] = sub_21F6D4CE4;
  return v9(v5, v6);
}

uint64_t sub_21F6D4CE4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  *(_QWORD *)(v5 + 112) = a2;
  *(_QWORD *)(v5 + 120) = v2;
  swift_task_dealloc();
  if (!v2)
    *(_BYTE *)(v5 + 146) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_21F6D4D5C()
{
  uint64_t v0;

  sub_21F7162A8();
  *(_QWORD *)(v0 + 128) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6D4DC4()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 146);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_BYTE *)(v0 + 145) = v1;
  swift_retain();
  sub_21F715FB4();
  return swift_task_switch();
}

uint64_t sub_21F6D4E5C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 112);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
LABEL_13:
    v11 = *(_QWORD *)(v0 + 96);
    sub_21F6D6824(v9);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
  }
  swift_bridgeObjectRetain();
  v2 = sub_21F716608();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_12;
LABEL_3:
  v10 = MEMORY[0x24BEE4AF8];
  result = sub_21F716578();
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        v5 = v4 + 1;
        v6 = MEMORY[0x2207CBA94]();
        type metadata accessor for PASFamilyMemberPresentable();
        *(_QWORD *)(swift_allocObject() + 16) = v6;
        sub_21F716560();
        sub_21F716584();
        sub_21F716590();
        sub_21F71656C();
        v4 = v5;
      }
      while (v2 != v5);
    }
    else
    {
      v7 = (uint64_t *)(*(_QWORD *)(v0 + 112) + 32);
      type metadata accessor for PASFamilyMemberPresentable();
      do
      {
        v8 = *v7++;
        *(_QWORD *)(swift_allocObject() + 16) = v8;
        swift_retain();
        sub_21F716560();
        sub_21F716584();
        sub_21F716590();
        sub_21F71656C();
        --v2;
      }
      while (v2);
    }
    v9 = v10;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F6D5020()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 80);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 80);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 32) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v12 = sub_21F716128();
    *(_QWORD *)(v0 + 40) = sub_21F644208(v12, v13, &v20);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepFamilyPicker fetchMemberPresentables failed to fetch local account: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
  }
  else
  {

  }
  *(_QWORD *)(v0 + 96) = MEMORY[0x24BEE4AF8];
  v14 = (_QWORD *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 64));
  v15 = v14[3];
  v16 = v14[4];
  __swift_project_boxed_opaque_existential_1(v14, v15);
  v19 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v16 + 8) + *(_QWORD *)(v16 + 8));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v17;
  *v17 = v0;
  v17[1] = sub_21F6D4CE4;
  return v19(v15, v16);
}

uint64_t sub_21F6D525C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = (void *)v0[15];
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[15];
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    v0[2] = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v12 = sub_21F716128();
    v0[3] = sub_21F644208(v12, v13, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepFamilyPicker fetchMemberPresentables failed to fetch family members: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
  }
  else
  {

  }
  sub_21F7162A8();
  v0[17] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6D5478()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_BYTE *)(v0 + 144) = 1;
  swift_retain();
  sub_21F715FB4();
  return swift_task_switch();
}

uint64_t sub_21F6D5508()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 96);
  sub_21F6D6824(MEMORY[0x24BEE4AF8]);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

void sub_21F6D5558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t (*v10)();
  void *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  v0 = v19[0];
  if (v19[0] >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v1 = sub_21F716608();
    if (v1)
      goto LABEL_3;
  }
  else
  {
    v1 = *(_QWORD *)((v19[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v1)
    {
LABEL_3:
      v2 = 4;
      do
      {
        v3 = v2 - 4;
        if ((v0 & 0xC000000000000001) != 0)
        {
          v4 = MEMORY[0x2207CBA94](v2 - 4, v0);
          v5 = v2 - 3;
          if (__OFADD__(v3, 1))
            goto LABEL_20;
        }
        else
        {
          v4 = *(_QWORD *)(v0 + 8 * v2);
          swift_retain();
          v5 = v2 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v6 = *(_QWORD *)(v4 + 16);
        if (v6 < 0)
        {
          v6 &= ~0x8000000000000000;
          v8 = type metadata accessor for PASAccountWithImage();
          v20 = v8;
          v9 = &qword_2554DE3E0;
          v7 = 255;
          v10 = type metadata accessor for PASAccountWithImage;
          v11 = &protocol conformance descriptor for PASAccountWithImage;
        }
        else
        {
          v8 = type metadata accessor for PASFamilyMember();
          v20 = v8;
          v9 = &qword_2554E0800;
          v10 = type metadata accessor for PASFamilyMember;
          v11 = &protocol conformance descriptor for PASFamilyMember;
        }
        v12 = sub_21F695B30(v9, v7, (uint64_t (*)(uint64_t))v10, (uint64_t)v11);
        v21 = v12;
        v19[0] = v6;
        __swift_project_boxed_opaque_existential_1(v19, v8);
        v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 72);
        swift_retain();
        v14 = v13(v8, v12);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
        if ((v14 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          swift_getKeyPath();
          swift_getKeyPath();
          v19[0] = v4;
          swift_retain();
          sub_21F715FB4();
          return;
        }
        swift_release();
        ++v2;
      }
      while (v5 != v1);
    }
  }
  swift_bridgeObjectRelease_n();
  if (qword_2554DA718 != -1)
    swift_once();
  v15 = sub_21F715F3C();
  __swift_project_value_buffer(v15, (uint64_t)static PASLogger.common);
  v16 = sub_21F715F24();
  v17 = sub_21F71635C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_21F63C000, v16, v17, "Failed to select current user because the current family member was not in the list", v18, 2u);
    MEMORY[0x2207CC514](v18, -1, -1);
  }

}

void PASFlowStepFamilyPicker.setError(error:)(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error) = a1;

  v4 = a1;
  PASFlowStepBase.setFinished()();
}

uint64_t PASFlowStepFamilyPicker.setSelectedMember(_:)()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t PASFlowStepFamilyPicker.nextStep()()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[7];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error);
  if (v1)
  {
    v2 = v1;
    swift_willThrow();
  }
  else
  {
    v3 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v4 = MEMORY[0x2207CC5BC](v3);
    v5 = *(_QWORD *)(v3 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21F715FA8();
    swift_release();
    swift_release();
    sub_21F6D5AC0(v12[0], v0, (uint64_t)v12);
    swift_release();
    type metadata accessor for PASFlowStepSendSelectedAccount();
    v6 = swift_allocObject();
    v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__messageSessionProvider;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = 0u;
    *(_OWORD *)(v8 + 32) = 0u;
    *(_QWORD *)(v8 + 48) = 0;
    *(_QWORD *)(v6 + v7) = v8;
    v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__deviceProvider;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v6 + v9) = v10;
    *(_BYTE *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_isSignInForSelfSupported) = 0;
    sub_21F674A3C((uint64_t)v12, v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection);
    v0 = sub_21F6BC954(v4, v5);
    swift_unknownObjectRelease();
    sub_21F674A78((uint64_t)v12);
    sub_21F695B30(&qword_2554DD090, 255, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSendSelectedAccount, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  }
  return v0;
}

id sub_21F6D5AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id result;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  __int128 v25;
  uint64_t v26;
  _UNKNOWN **v27;

  if (a1)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 < 0)
    {
      *(_QWORD *)a3 = v4 & 0x7FFFFFFFFFFFFFFFLL;
      v17 = type metadata accessor for PASPersonalSourceAuthController();
      v18 = (_QWORD *)swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = 0u;
      *(_OWORD *)(v19 + 32) = 0u;
      *(_QWORD *)(v19 + 48) = 0;
      v18[2] = v19;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = 0u;
      *(_OWORD *)(v20 + 32) = 0u;
      *(_QWORD *)(v20 + 48) = 0;
      v18[3] = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA780);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = 0u;
      *(_OWORD *)(v21 + 32) = 0u;
      *(_QWORD *)(v21 + 48) = 0;
      v18[4] = v21;
      *(_QWORD *)(a3 + 32) = v17;
      *(_QWORD *)(a3 + 40) = &off_24E45A5C8;
      *(_QWORD *)(a3 + 8) = v18;
      *(_BYTE *)(a3 + 48) = 2;
      return (id)swift_retain();
    }
    *(_QWORD *)a3 = v4;
    v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_supportedAuthModes);
    v6 = (void *)objc_opt_self();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    result = objc_msgSend(v6, sel_defaultStore);
    if (result)
    {
      v8 = result;
      v26 = sub_21F64779C(0, &qword_2554DABC0);
      v27 = &off_24E45B1F0;
      *(_QWORD *)&v25 = v8;
      result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0ACC0]), sel_init);
      if (result)
      {
        v9 = (uint64_t)result;
        v10 = type metadata accessor for FAFamilyMemberProxiedAuthController();
        v11 = swift_allocObject();
        v12 = sub_21F6D69DC(v4, (uint64_t)&v25, v9, v5, v11);
        *(_QWORD *)(a3 + 32) = v10;
        *(_QWORD *)(a3 + 40) = &off_24E45B290;
        swift_release();
        result = (id)swift_release();
        *(_QWORD *)(a3 + 8) = v12;
        *(_BYTE *)(a3 + 48) = 1;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
  result = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v13 = result;
  v26 = sub_21F64779C(0, &qword_2554DABC0);
  v27 = &off_24E45B1F0;
  *(_QWORD *)&v25 = v13;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0ACC0]), sel_init);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v14 = result;
  v23 = sub_21F64779C(0, &qword_2554DABF8);
  v24 = &protocol witness table for AKAppleIDAuthenticationController;
  *(_QWORD *)&v22 = v14;
  v15 = type metadata accessor for FACreateChildProxiedAuthController();
  v16 = swift_allocObject();
  sub_21F64756C(&v25, v16 + 16);
  result = (id)sub_21F64756C(&v22, v16 + 56);
  *(_QWORD *)(a3 + 24) = v15;
  *(_QWORD *)(a3 + 32) = &off_24E45AA48;
  *(_QWORD *)a3 = v16;
  *(_BYTE *)(a3 + 48) = 0;
  return result;
}

Swift::Void __swiftcall PASFlowStepFamilyPicker.continueWithSelectedAccount()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_21F6D3790();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  if ((unint64_t)v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_21F716608();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  v5 = v12;
  v6 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  *(_QWORD *)&v12 = v4;
  *((_QWORD *)&v12 + 1) = v5;
  v13 = 1;
  v7 = qword_2554DA730;
  swift_retain();
  swift_retain();
  if (v7 != -1)
    swift_once();
  v8 = qword_2554E51F0;
  v9 = sub_21F695B30((unint64_t *)&qword_2554DFBB8, 255, (uint64_t (*)(uint64_t))type metadata accessor for PASAnalyticsActor.PASAnalyticsActorType, (uint64_t)&unk_21F71EAC4);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v8;
  v10[3] = v9;
  v10[4] = v3;
  sub_21F6BD0F4(&v12, (uint64_t)(v10 + 5));
  swift_retain();
  sub_21F6B4038((uint64_t)v2, (uint64_t)&unk_2554E1170, (uint64_t)v10);
  swift_release();
  swift_release();
  swift_release();
  PASFlowStepBase.setFinished()();
}

uint64_t PASFlowStepFamilyPicker.createNewAccount()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[9] = v0;
  sub_21F7162A8();
  v1[10] = sub_21F71629C();
  v1[11] = sub_21F716248();
  v1[12] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6D607C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;

  swift_getKeyPath();
  swift_getKeyPath();
  v0[7] = 0;
  swift_retain();
  sub_21F715FB4();
  v0[13] = sub_21F6D3790();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  v1 = v0[8];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_21F716608();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v0[14] = v2;
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6D61A4()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepFamilyPicker.AnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E458E48;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_21F6D6224;
  return sub_21F6B7FC0(v0 + 16, 0, 0);
}

uint64_t sub_21F6D6224()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 16);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6D6290()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6D62C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__selectedMember;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1108);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__canAddMembers;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__familyMembers;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_dataSource);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  sub_21F6D78C4(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___fetchLock);
  swift_release();
  return swift_release();
}

uint64_t PASFlowStepFamilyPicker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = PASSourceFlowStepBase.deinit();
  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__selectedMember;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1108);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__canAddMembers;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__familyMembers;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_dataSource);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  sub_21F6D78C4(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___fetchLock);
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASFlowStepFamilyPicker.__deallocating_deinit()
{
  PASFlowStepFamilyPicker.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6D6524()
{
  return PASFlowStepFamilyPicker.nextStep()();
}

void sub_21F6D6538()
{
  strcpy((char *)&qword_2554E5210, "member_count");
  algn_2554E5218[5] = 0;
  *(_WORD *)&algn_2554E5218[6] = -5120;
}

void sub_21F6D6564()
{
  qword_2554E5220 = 0x6F697463656C6573;
  *(_QWORD *)algn_2554E5228 = 0xE90000000000006ELL;
}

unint64_t sub_21F6D658C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
  if ((a3 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717F00;
    v11 = qword_2554DA738;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = *(_QWORD *)algn_2554E5218;
    v13 = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 32) = qword_2554E5210;
    *(_QWORD *)(inited + 40) = v12;
    *(_QWORD *)(inited + 72) = v13;
    *(_QWORD *)(inited + 80) = &protocol witness table for Int;
    *(_QWORD *)(inited + 48) = a1;
    v14 = qword_2554DA740;
    swift_bridgeObjectRetain();
    if (v14 != -1)
      swift_once();
    v15 = *(_QWORD *)algn_2554E5228;
    *(_QWORD *)(inited + 88) = qword_2554E5220;
    *(_QWORD *)(inited + 96) = v15;
    if (a2)
    {
      v16 = 0x6E65646E65706564;
      if (*(uint64_t *)(a2 + 16) < 0)
        v16 = 0x6C616E6F73726570;
      v17 = 0xE800000000000000;
      if (*(uint64_t *)(a2 + 16) >= 0)
        v17 = 0xE900000000000074;
      *(_QWORD *)(inited + 128) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      *(_QWORD *)(inited + 104) = v16;
    }
    else
    {
      *(_QWORD *)(inited + 128) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 136) = &protocol witness table for String;
      *(_QWORD *)(inited + 104) = 7824750;
      v17 = 0xE300000000000000;
    }
    *(_QWORD *)(inited + 112) = v17;
    swift_bridgeObjectRetain();
    v9 = sub_21F640D60(inited);
    sub_21F6D782C(a1, a2, 1);
  }
  else
  {
    v6 = swift_initStackObject();
    *(_OWORD *)(v6 + 16) = xmmword_21F717EF0;
    if (qword_2554DA738 != -1)
      swift_once();
    v7 = *(_QWORD *)algn_2554E5218;
    v8 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v6 + 32) = qword_2554E5210;
    *(_QWORD *)(v6 + 40) = v7;
    *(_QWORD *)(v6 + 72) = v8;
    *(_QWORD *)(v6 + 80) = &protocol witness table for Int;
    *(_QWORD *)(v6 + 48) = a1;
    swift_bridgeObjectRetain();
    return sub_21F640D60(v6);
  }
  return v9;
}

unint64_t sub_21F6D67A8()
{
  return 0xD000000000000020;
}

unint64_t sub_21F6D67D8()
{
  uint64_t v0;

  return sub_21F6D658C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t PASAccountContextCreateAccount.requiresCDP.getter()
{
  return 1;
}

uint64_t PASAccountContextCreateAccount.requiresManateeRepair.getter()
{
  return 1;
}

uint64_t PASAccountContextCreateAccount.requiresFamilyRepair.getter()
{
  return 1;
}

uint64_t PASAccountContextCreateAccount.showPrivacyDisclosureOnSourceDevice.getter()
{
  return 1;
}

uint64_t PASAccountContextCreateAccount.showPasscodeBiometricsRequestOnTargetDevice.getter()
{
  return 1;
}

uint64_t (*PASAccountContextCreateAccount.flowStepAllSetContext.modify())()
{
  return nullsub_1;
}

uint64_t PASAccountContextCreateAccount.init()()
{
  return 0;
}

uint64_t sub_21F6D6824(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_21F716608();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21F716608();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x2207CBAA0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_21F6EA7C4(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_21F716608();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_21F7161E8();
  }
  __break(1u);
  return result;
}

uint64_t sub_21F6D69DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD v16[5];
  _BYTE v17[24];
  ValueMetadata *v18;
  _UNKNOWN **v19;
  _QWORD v20[5];

  v20[3] = sub_21F64779C(0, &qword_2554DABF8);
  v20[4] = &protocol witness table for AKAppleIDAuthenticationController;
  v20[0] = a3;
  v18 = &type metadata for PASUserPasswordDataSource;
  v19 = &protocol witness table for PASUserPasswordDataSource;
  v16[3] = type metadata accessor for PASFamilyMember();
  v16[4] = sub_21F695B30(&qword_2554E0800, v10, (uint64_t (*)(uint64_t))type metadata accessor for PASFamilyMember, (uint64_t)&protocol conformance descriptor for PASFamilyMember);
  v16[0] = a1;
  sub_21F647710((uint64_t)v16, a5 + 16);
  sub_21F647710(a2, a5 + 56);
  sub_21F647710((uint64_t)v20, a5 + 96);
  sub_21F647710((uint64_t)v17, a5 + 136);
  *(_QWORD *)(a5 + 176) = a4;
  if (!*(_QWORD *)(a4 + 16))
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v11 = sub_21F715F3C();
    __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
    v12 = sub_21F715F24();
    v13 = sub_21F71635C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21F63C000, v12, v13, "FAFamilyMemberProxiedAuthController was init'ed with no auth modes!", v14, 2u);
      MEMORY[0x2207CC514](v14, -1, -1);
    }

  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_0Tm(a2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  return a5;
}

uint64_t sub_21F6D6B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_OWORD *)(v5 + 64) = *(_OWORD *)a5;
  *(_BYTE *)(v5 + 88) = *(_BYTE *)(a5 + 16);
  if (qword_2554DA730 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_21F6D6C08()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepFamilyPicker.AnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E458E48;
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  *(_BYTE *)(v0 + 32) = v1;
  sub_21F6D8608(v2, v3, v1);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v4;
  *v4 = v0;
  v4[1] = sub_21F6B1030;
  return sub_21F6B7FC0(v0 + 16, 0, 0);
}

uint64_t _s21ProximityAppleIDSetup28PASFlowStepFamilyPickerErrorO8rawValueSSvg_0()
{
  return 0x6E65736572506F6ELL;
}

uint64_t _s21ProximityAppleIDSetup26PASFamilyMemberPresentableC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  unint64_t *v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)();
  unint64_t *v18;
  void *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 < 0)
  {
    v3 &= ~0x8000000000000000;
    v5 = type metadata accessor for PASAccountWithImage();
    v6 = type metadata accessor for PASAccountWithImage;
    v7 = &qword_2554DE3E0;
    v8 = &protocol conformance descriptor for PASAccountWithImage;
    v4 = 255;
  }
  else
  {
    v5 = type metadata accessor for PASFamilyMember();
    v6 = type metadata accessor for PASFamilyMember;
    v7 = &qword_2554E0800;
    v8 = &protocol conformance descriptor for PASFamilyMember;
  }
  v9 = sub_21F695B30(v7, v4, (uint64_t (*)(uint64_t))v6, (uint64_t)v8);
  v29 = v5;
  v30 = v9;
  v28[0] = v3;
  __swift_project_boxed_opaque_existential_1(v28, v5);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 24);
  swift_retain();
  v11 = v10(v5, v9);
  v13 = v12;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
  v14 = *(_QWORD *)(a2 + 16);
  if (v14 < 0)
  {
    v14 &= ~0x8000000000000000;
    v16 = type metadata accessor for PASAccountWithImage();
    v17 = type metadata accessor for PASAccountWithImage;
    v18 = &qword_2554DE3E0;
    v19 = &protocol conformance descriptor for PASAccountWithImage;
    v15 = 255;
  }
  else
  {
    v16 = type metadata accessor for PASFamilyMember();
    v17 = type metadata accessor for PASFamilyMember;
    v18 = &qword_2554E0800;
    v19 = &protocol conformance descriptor for PASFamilyMember;
  }
  v20 = sub_21F695B30(v18, v15, (uint64_t (*)(uint64_t))v17, (uint64_t)v19);
  v29 = v16;
  v30 = v20;
  v28[0] = v14;
  __swift_project_boxed_opaque_existential_1(v28, v16);
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 24);
  swift_retain();
  v22 = v21(v16, v20);
  v24 = v23;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
  if (v13)
  {
    if (v24)
    {
      if (v11 == v22 && v13 == v24)
      {
        swift_bridgeObjectRelease();
        v26 = 1;
      }
      else
      {
        v26 = sub_21F716800();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v26 = 0;
    }
  }
  else
  {
    if (!v24)
    {
      v26 = 1;
      return v26 & 1;
    }
    v26 = 0;
  }
  swift_bridgeObjectRelease();
  return v26 & 1;
}

uint64_t type metadata accessor for PASFamilyMember()
{
  return objc_opt_self();
}

unint64_t sub_21F6D6EC4()
{
  unint64_t result;

  result = qword_2554E10E8;
  if (!qword_2554E10E8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F72157C, &type metadata for PASFamilyMember.Key);
    atomic_store(result, (unint64_t *)&qword_2554E10E8);
  }
  return result;
}

uint64_t sub_21F6D6F20(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];

  v34 = a1;
  v35 = a2;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1120);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1108);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[3] = &type metadata for PASFamilyMemberPickerDataSource;
  v37[4] = &protocol witness table for PASFamilyMemberPickerDataSource;
  v17 = (_OWORD *)swift_allocObject();
  v36 = 0;
  v37[0] = v17;
  v18 = a3[3];
  v17[3] = a3[2];
  v17[4] = v18;
  v17[5] = a3[4];
  v19 = a3[1];
  v17[1] = *a3;
  v17[2] = v19;
  v20 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__selectedMember;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10F8);
  sub_21F715F78();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v20, v16, v13);
  v21 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__canAddMembers;
  LOBYTE(v36) = 0;
  sub_21F715F78();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  v22 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__familyMembers;
  v36 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2460);
  sub_21F715F78();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v22, v8, v33);
  v23 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(a4 + v23) = v24;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_supportedAuthModes) = &unk_24E450F80;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error) = 0;
  v25 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__lockProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA828);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = 0u;
  *(_OWORD *)(v26 + 32) = 0u;
  *(_QWORD *)(v26 + 48) = 0;
  *(_QWORD *)(a4 + v25) = v26;
  v27 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___fetchLock;
  *(_OWORD *)v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(_QWORD *)(v27 + 32) = 0;
  v28 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__analyticsProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE710);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = 0u;
  *(_OWORD *)(v29 + 32) = 0u;
  *(_QWORD *)(v29 + 48) = 0;
  *(_QWORD *)(a4 + v28) = v29;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___analytics) = 0;
  sub_21F647710((uint64_t)v37, a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_dataSource);
  swift_release();
  v30 = sub_21F6BC954(v34, v35);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
  return v30;
}

uint64_t sub_21F6D7224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[5];
  _QWORD v11[10];

  v11[5] = type metadata accessor for PASFamilyMemberImageProvider();
  v11[6] = &off_24E459ED0;
  v11[2] = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 48) = 0;
  v11[7] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA838);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_QWORD *)(v5 + 48) = 0;
  v11[8] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA780);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  v11[9] = v6;
  v11[0] = sub_21F6E7B68;
  v11[1] = 0;
  type metadata accessor for PASFlowStepFamilyPicker();
  v7 = swift_allocObject();
  sub_21F6D899C((uint64_t)v11, (uint64_t)v10);
  v8 = sub_21F6D6F20(a1, a2, v10, v7);
  sub_21F6D89D8((uint64_t)v11);
  return v8;
}

uint64_t sub_21F6D7348(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x654D796C696D6166 && a2 == 0xEC0000007265626DLL;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F6D7448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];

  v34 = a3;
  v37 = a1;
  v38 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1120);
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1108);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[3] = a5;
  v40[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, v34, a5);
  v21 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__selectedMember;
  v39 = 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E10F8);
  sub_21F715F78();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v19, v16);
  v22 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__canAddMembers;
  LOBYTE(v39) = 0;
  sub_21F715F78();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22, v15, v12);
  v23 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__familyMembers;
  v39 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2460);
  sub_21F715F78();
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v23, v11, v36);
  v24 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v25 + 24) = 0;
  *(_QWORD *)(a4 + v24) = v25;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_supportedAuthModes) = &unk_24E451398;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_error) = 0;
  v26 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__lockProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA828);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = 0u;
  *(_OWORD *)(v27 + 32) = 0u;
  *(_QWORD *)(v27 + 48) = 0;
  *(_QWORD *)(a4 + v26) = v27;
  v28 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___fetchLock;
  *(_OWORD *)v28 = 0u;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_QWORD *)(v28 + 32) = 0;
  v29 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__analyticsProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE710);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_QWORD *)(v30 + 48) = 0;
  *(_QWORD *)(a4 + v29) = v30;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker____lazy_storage___analytics) = 0;
  sub_21F647710((uint64_t)v40, a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker_dataSource);
  swift_release();
  v31 = sub_21F6BC954(v37, v38);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v40);
  return v31;
}

uint64_t sub_21F6D7734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  return sub_21F6D7448(a1, a2, (uint64_t)v13, v14, a5, a6);
}

uint64_t sub_21F6D77EC(_QWORD *a1)
{
  uint64_t v1;

  return sub_21F6D3DB4(a1, v1);
}

uint64_t sub_21F6D77F4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_21F6D782C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_21F6D782C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_release();
  return result;
}

uint64_t sub_21F6D783C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F651418;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2554E1168
                                                                              + dword_2554E1168))(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_21F6D78C4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E11A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F6D7904(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_21F695B30(&qword_2554E11B8, a2, (uint64_t (*)(uint64_t))type metadata accessor for PASFamilyMemberPresentable, (uint64_t)&protocol conformance descriptor for PASFamilyMemberPresentable);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFamilyMemberPresentable()
{
  return objc_opt_self();
}

uint64_t sub_21F6D7960(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_21F695B30(&qword_2554E11C0, a2, (uint64_t (*)(uint64_t))type metadata accessor for PASFamilyMember, (uint64_t)&protocol conformance descriptor for PASFamilyMember);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F6D79A0()
{
  unint64_t result;

  result = qword_2554E11C8;
  if (!qword_2554E11C8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepFamilyPickerError, &type metadata for PASFlowStepFamilyPickerError);
    atomic_store(result, (unint64_t *)&qword_2554E11C8);
  }
  return result;
}

unint64_t sub_21F6D79E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6D7A18();
  a1[2] = sub_21F6D7A5C();
  result = sub_21F6D7AA0();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6D7A18()
{
  unint64_t result;

  result = qword_2554E11D0;
  if (!qword_2554E11D0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepFamilyPickerError, &type metadata for PASFlowStepFamilyPickerError);
    atomic_store(result, (unint64_t *)&qword_2554E11D0);
  }
  return result;
}

unint64_t sub_21F6D7A5C()
{
  unint64_t result;

  result = qword_2554E11D8;
  if (!qword_2554E11D8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepFamilyPickerError, &type metadata for PASFlowStepFamilyPickerError);
    atomic_store(result, (unint64_t *)&qword_2554E11D8);
  }
  return result;
}

unint64_t sub_21F6D7AA0()
{
  unint64_t result;

  result = qword_2554E11E0;
  if (!qword_2554E11E0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepFamilyPickerError, &type metadata for PASFlowStepFamilyPickerError);
    atomic_store(result, (unint64_t *)&qword_2554E11E0);
  }
  return result;
}

unint64_t sub_21F6D7AE8()
{
  unint64_t result;

  result = qword_2554E11E8;
  if (!qword_2554E11E8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepFamilyPickerError, &type metadata for PASFlowStepFamilyPickerError);
    atomic_store(result, (unint64_t *)&qword_2554E11E8);
  }
  return result;
}

uint64_t sub_21F6D7B2C(uint64_t a1)
{
  uint64_t result;

  result = sub_21F695B30(&qword_2554E11F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepFamilyPicker, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepFamilyPicker()
{
  uint64_t result;

  result = qword_2554E1388;
  if (!qword_2554E1388)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6D7BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F6D34C8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__selectedMember, &qword_2554E1108);
}

uint64_t sub_21F6D7BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6D3534(a1, a2, a3, a4, &qword_2554E1658, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__selectedMember, &qword_2554E1108);
}

uint64_t sub_21F6D7BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F6D34C8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__canAddMembers, &qword_2554E24B0);
}

uint64_t sub_21F6D7C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6D3534(a1, a2, a3, a4, (uint64_t *)&unk_2554DF5B0, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__canAddMembers, &qword_2554E24B0);
}

uint64_t sub_21F6D7C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F6D34C8(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__familyMembers, &qword_2554E1120);
}

uint64_t sub_21F6D7C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6D3534(a1, a2, a3, a4, &qword_2554E1650, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepFamilyPicker__familyMembers, &qword_2554E1120);
}

void destroy for PASFamilyMemberSelection(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;

  v1 = a1;
  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 >= 4)
    v2 = *(_DWORD *)a1 + 4;
  switch(v2)
  {
    case 0u:
      goto LABEL_5;
    case 1u:
    case 2u:
      v1 = a1 + 8;
      swift_release();
LABEL_5:
      __swift_destroy_boxed_opaque_existential_0Tm(v1);
      break;
    case 3u:

      swift_release();
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for PASFamilyMemberSelection(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;

  v3 = *(unsigned __int8 *)(a2 + 48);
  if (v3 >= 4)
    v3 = *(_DWORD *)a2 + 4;
  switch(v3)
  {
    case 0u:
      v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t))(v4 - 8))(a1);
      *(_BYTE *)(a1 + 48) = 0;
      return a1;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = a2 + 8;
      v8 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 32) = v8;
      v9 = v8;
      v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v10(a1 + 8, v7, v9);
      v6 = 1;
      goto LABEL_8;
    case 2u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = a2 + 8;
      v12 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 32) = v12;
      v13 = v12;
      v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
      swift_retain();
      v14(a1 + 8, v11, v13);
      v6 = 2;
      goto LABEL_8;
    case 3u:
      v15 = *(void **)a2;
      v16 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v16;
      v17 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v17;
      *(_BYTE *)(a1 + 48) = 3;
      v18 = v15;
      swift_retain();
      v19 = v17;
      return a1;
    default:
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v6 = *(_BYTE *)(a2 + 48);
LABEL_8:
      *(_BYTE *)(a1 + 48) = v6;
      return a1;
  }
}

uint64_t assignWithCopy for PASFamilyMemberSelection(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  void *v16;
  void *v17;
  id v18;
  id v19;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 4)
      v4 = *(_DWORD *)a1 + 4;
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_0Tm(a1);
        break;
      case 1u:
      case 2u:
        swift_release();
        __swift_destroy_boxed_opaque_existential_0Tm(a1 + 8);
        break;
      case 3u:

        swift_release();
        break;
      default:
        break;
    }
    v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 4)
      v5 = *(_DWORD *)a2 + 4;
    switch(v5)
    {
      case 0u:
        v6 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
        *(_BYTE *)(a1 + 48) = 0;
        break;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = (uint64_t)a2 + 8;
        v11 = *((_QWORD *)a2 + 4);
        *(_QWORD *)(a1 + 32) = v11;
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
        swift_retain();
        v12(a1 + 8, v10, v11);
        *(_BYTE *)(a1 + 48) = 1;
        break;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = (uint64_t)a2 + 8;
        v14 = *((_QWORD *)a2 + 4);
        *(_QWORD *)(a1 + 32) = v14;
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
        swift_retain();
        v15(a1 + 8, v13, v14);
        *(_BYTE *)(a1 + 48) = 2;
        break;
      case 3u:
        v16 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v17 = (void *)*((_QWORD *)a2 + 2);
        *(_QWORD *)(a1 + 16) = v17;
        *(_BYTE *)(a1 + 48) = 3;
        v18 = v16;
        swift_retain();
        v19 = v17;
        break;
      default:
        v7 = *a2;
        v8 = a2[1];
        v9 = a2[2];
        *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
        *(_OWORD *)(a1 + 16) = v8;
        *(_OWORD *)(a1 + 32) = v9;
        *(_OWORD *)a1 = v7;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for PASFamilyMemberSelection(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __int128 v9;
  __int128 v10;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 4)
      v4 = *(_DWORD *)a1 + 4;
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_0Tm(a1);
        break;
      case 1u:
      case 2u:
        swift_release();
        __swift_destroy_boxed_opaque_existential_0Tm(a1 + 8);
        break;
      case 3u:

        swift_release();
        break;
      default:
        break;
    }
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 4)
      v5 = *(_DWORD *)a2 + 4;
    switch(v5)
    {
      case 0u:
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      case 1u:
        v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v8 = 1;
        goto LABEL_16;
      case 2u:
        v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v8 = 2;
        goto LABEL_16;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v8 = 3;
        goto LABEL_16;
      default:
        v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v8 = *(_BYTE *)(a2 + 48);
LABEL_16:
        *(_BYTE *)(a1 + 48) = v8;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PASFamilyMemberSelection(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 5)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PASFamilyMemberSelection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F6D8248(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 4)
    return (*(_DWORD *)a1 + 4);
  return result;
}

uint64_t sub_21F6D8264(uint64_t result, unsigned int a2)
{
  if (a2 > 3)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PASFamilyMemberSelection()
{
  return &type metadata for PASFamilyMemberSelection;
}

ValueMetadata *type metadata accessor for PASAccountContextFamilyMember()
{
  return &type metadata for PASAccountContextFamilyMember;
}

uint64_t storeEnumTagSinglePayload for PASFlowStepFamilyPickerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6D82F4 + 4 * byte_21F720F1D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6D8314 + 4 * byte_21F720F22[v4]))();
}

_BYTE *sub_21F6D82F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6D8314(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6D831C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6D8324(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6D832C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6D8334(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepFamilyPickerError()
{
  return &type metadata for PASFlowStepFamilyPickerError;
}

uint64_t sub_21F6D8350()
{
  return type metadata accessor for PASFlowStepFamilyPicker();
}

void sub_21F6D8358()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_21F65A5AC(319, &qword_2554E1398, &qword_2554E10F8);
  if (v0 <= 0x3F)
  {
    sub_21F690CF8();
    if (v1 <= 0x3F)
    {
      sub_21F65A5AC(319, qword_2554E13A0, &qword_2554E2460);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

ValueMetadata *type metadata accessor for PASAccountContextCreateAccount()
{
  return &type metadata for PASAccountContextCreateAccount;
}

_QWORD *initializeBufferWithCopyOfBuffer for PASFamilyMemberPresentable.Representation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for PASFamilyMemberPresentable.Representation()
{
  return swift_release();
}

_QWORD *assignWithCopy for PASFamilyMemberPresentable.Representation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for PASFamilyMemberPresentable.Representation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PASFamilyMemberPresentable.Representation(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PASFamilyMemberPresentable.Representation(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_21F6D85C4(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_21F6D85D0(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_21F6D85E0(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for PASFamilyMemberPresentable.Representation()
{
  return &type metadata for PASFamilyMemberPresentable.Representation;
}

uint64_t sub_21F6D8608(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_retain();
  return result;
}

uint64_t destroy for PASFlowStepFamilyPicker.AnalyticsEvent(uint64_t a1)
{
  return sub_21F6D782C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s21ProximityAppleIDSetup23PASFlowStepFamilyPickerC14AnalyticsEventOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F6D8608(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PASFlowStepFamilyPicker.AnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F6D8608(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_21F6D782C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PASFlowStepFamilyPicker.AnalyticsEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_21F6D782C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PASFlowStepFamilyPicker.AnalyticsEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PASFlowStepFamilyPicker.AnalyticsEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F6D8794(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepFamilyPicker.AnalyticsEvent()
{
  return &type metadata for PASFlowStepFamilyPicker.AnalyticsEvent;
}

uint64_t storeEnumTagSinglePayload for PASFamilyMember.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F6D87FC + 4 * byte_21F720F2C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F6D8830 + 4 * byte_21F720F27[v4]))();
}

uint64_t sub_21F6D8830(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6D8838(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6D8840);
  return result;
}

uint64_t sub_21F6D884C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6D8854);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F6D8858(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6D8860(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASFamilyMember.Key()
{
  return &type metadata for PASFamilyMember.Key;
}

unint64_t sub_21F6D8880()
{
  unint64_t result;

  result = qword_2554E1638;
  if (!qword_2554E1638)
  {
    result = MEMORY[0x2207CC46C](&unk_21F721544, &type metadata for PASFamilyMember.Key);
    atomic_store(result, (unint64_t *)&qword_2554E1638);
  }
  return result;
}

unint64_t sub_21F6D88C8()
{
  unint64_t result;

  result = qword_2554E1640;
  if (!qword_2554E1640)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7214B4, &type metadata for PASFamilyMember.Key);
    atomic_store(result, (unint64_t *)&qword_2554E1640);
  }
  return result;
}

unint64_t sub_21F6D8910()
{
  unint64_t result;

  result = qword_2554E1648;
  if (!qword_2554E1648)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7214DC, &type metadata for PASFamilyMember.Key);
    atomic_store(result, (unint64_t *)&qword_2554E1648);
  }
  return result;
}

uint64_t sub_21F6D8954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E11A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6D899C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PASFamilyMemberPickerDataSource(a2, a1);
  return a2;
}

uint64_t sub_21F6D89D8(uint64_t a1)
{
  destroy for PASFamilyMemberPickerDataSource(a1);
  return a1;
}

uint64_t sub_21F6D8A0C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 32);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6D8A70()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21F6D8AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_21F6D8B14(a1, a2);
  return v4;
}

_QWORD *sub_21F6D8B14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;

  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  sub_21F71626C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554E16E8);
  swift_getTupleTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_21F71620C();
  v5 = sub_21F716050();
  v2[15] = a2;
  v2[16] = v5;
  v2[14] = a1;
  return v2;
}

uint64_t sub_21F6D8BF0(uint64_t a1, unint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint8_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54[3];
  uint64_t v55;
  unint64_t v56;

  v49 = a4;
  v50 = a3;
  v7 = *(_QWORD *)(*v4 + 80);
  v45 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v44 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v40 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v46 = v7;
  v47 = v11;
  v12 = sub_21F71626C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554E16E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = sub_21F71641C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v52 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v40 - v19;
  v21 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v40 - v22;
  v48 = v4 + 16;
  swift_beginAccess();
  v24 = v4[16];
  v53 = a1;
  v54[0] = a1;
  v54[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x2207CB608](v54, v24, MEMORY[0x24BEE0D00], TupleTypeMetadata2, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, TupleTypeMetadata2) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  v27 = *(_QWORD *)&v20[*(int *)(TupleTypeMetadata2 + 48)];
  v42 = v25;
  v43 = v27;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v20, v12);
  if (qword_2554DA718 != -1)
    swift_once();
  v28 = sub_21F715F3C();
  __swift_project_value_buffer(v28, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  v29 = sub_21F715F24();
  v30 = sub_21F716374();
  if (os_log_type_enabled(v29, v30))
  {
    v40 = v23;
    v31 = swift_slowAlloc();
    v41 = v21;
    v32 = (uint8_t *)v31;
    v33 = swift_slowAlloc();
    v54[0] = v33;
    *(_DWORD *)v32 = 136315138;
    swift_bridgeObjectRetain();
    v55 = sub_21F644208(v53, a2, v54);
    v23 = v40;
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v29, v30, "Received incoming response from peer for identifier: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v33, -1, -1);
    v34 = v32;
    v21 = v41;
    MEMORY[0x2207CC514](v34, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v35 = v51;
  v36 = sub_21F7162D8();
  v50(v36);
  v37 = v45;
  v38 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v44, v35, v46);
  sub_21F716260();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v38);
  v39 = v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v52, 1, 1, TupleTypeMetadata2);
  v55 = v39;
  v56 = a2;
  swift_beginAccess();
  sub_21F716068();
  swift_bridgeObjectRetain();
  sub_21F716098();
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v12);
}

uint64_t sub_21F6D90CC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  unint64_t v42;

  v4 = v3;
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v9 = sub_21F71626C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554E16E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = sub_21F71641C();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v20 = type metadata accessor for IDSResponseHandler(255, v8, v18, v19);
  v21 = MEMORY[0x2207CC46C](&unk_21F721680, v20);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v4;
  v22[3] = v21;
  v22[4] = v4;
  v22[5] = a1;
  v22[6] = a2;
  swift_retain_n();
  swift_bridgeObjectRetain();
  v23 = sub_21F6B4318((uint64_t)v16, (uint64_t)&unk_2554E16F8, (uint64_t)v22);
  if (qword_2554DA718 != -1)
    swift_once();
  v24 = sub_21F715F3C();
  __swift_project_value_buffer(v24, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  v25 = sub_21F715F24();
  v26 = sub_21F716374();
  if (os_log_type_enabled(v25, v26))
  {
    v36 = v23;
    v27 = swift_slowAlloc();
    v37 = a3;
    v28 = (uint8_t *)v27;
    v29 = swift_slowAlloc();
    v38 = v4;
    v39 = a1;
    v30 = v29;
    v40[0] = v29;
    *(_DWORD *)v28 = 136315138;
    swift_bridgeObjectRetain();
    v41 = sub_21F644208(v39, a2, v40);
    v23 = v36;
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v25, v26, "Sent outgoing request to peer for identifier: %s", v28, 0xCu);
    swift_arrayDestroy();
    v31 = v30;
    a1 = v39;
    MEMORY[0x2207CC514](v31, -1, -1);
    v32 = v28;
    a3 = v37;
    MEMORY[0x2207CC514](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v33 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v13, a3, v9);
  *(_QWORD *)&v13[v33] = v23;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v13, 0, 1, TupleTypeMetadata2);
  v41 = a1;
  v42 = a2;
  swift_beginAccess();
  sub_21F716068();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21F716098();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_21F6D9498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v7 = sub_21F71626C();
  v6[16] = v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554E16E8);
  v6[17] = swift_getTupleTypeMetadata2();
  v8 = sub_21F71641C();
  v6[18] = v8;
  v6[19] = *(_QWORD *)(v8 - 8);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  v6[22] = *(_QWORD *)(v7 - 8);
  v6[23] = swift_task_alloc();
  v9 = sub_21F7165B4();
  v6[24] = v9;
  v6[25] = *(_QWORD *)(v9 - 8);
  v6[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6D95BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  v2 = *(_QWORD *)(v1 + 120);
  sub_21F7165A8();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2554E3160 + dword_2554E3160);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v4;
  *v4 = v0;
  v4[1] = sub_21F6D9644;
  return v6(v3, v2, 0, 0, 1);
}

uint64_t sub_21F6D9644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 200);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_task_switch();
}

uint64_t sub_21F6D96CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = (uint64_t *)(*(_QWORD *)(v0 + 104) + 128);
  swift_beginAccess();
  v6 = *v5;
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 72) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x2207CB608](v0 + 64, v6, MEMORY[0x24BEE0D00], v2, MEMORY[0x24BEE0D10]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144));
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 112);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v10, v12);
    sub_21F6D9A68();
    v15 = swift_allocError();
    *v16 = 4;
    *(_QWORD *)(v0 + 96) = v15;
    sub_21F716254();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v11, 1, 1, v13);
    *(_QWORD *)(v0 + 80) = v18;
    *(_QWORD *)(v0 + 88) = v14;
    swift_beginAccess();
    sub_21F716068();
    swift_bridgeObjectRetain();
    sub_21F716098();
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6D98EC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6D9948()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_21F6D996C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for IDSResponseHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IDSResponseHandler);
}

uint64_t sub_21F6D999C()
{
  return sub_21F6706A0();
}

uint64_t sub_21F6D99B4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F6D99E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21F651418;
  return sub_21F6D9498(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_21F6D9A68()
{
  unint64_t result;

  result = qword_2554E49A0;
  if (!qword_2554E49A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7254F8, &type metadata for PASIDSMessageTransportError);
    atomic_store(result, (unint64_t *)&qword_2554E49A0);
  }
  return result;
}

uint64_t Message.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21F715E10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Message.version.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t Message.metrics.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Message.metrics.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*Message.metrics.modify())()
{
  return nullsub_1;
}

uint64_t Message.command.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t Message.command.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*Message.command.modify())()
{
  return nullsub_1;
}

uint64_t static Message.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if ((sub_21F715DF8() & 1) != 0
    && (v9 = type metadata accessor for Message(0, a3, a4, v8),
        *(unsigned __int8 *)(a1 + *(int *)(v9 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v9 + 36)))
    && (static Message.Metrics.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + *(int *)(v9 + 40)), *(_QWORD *)(a2 + *(int *)(v9 + 40)), a3, a4) & 1) != 0)
  {
    return sub_21F7160BC() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for Message(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Message);
}

uint64_t Message.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_21F715E10();
  sub_21F6DA6A8(&qword_2554E1700, MEMORY[0x24BDCEA88]);
  sub_21F7160B0();
  sub_21F716938();
  v5 = *(_QWORD *)(v2 + *(int *)(a2 + 40));
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  Message.Metrics.hash(into:)(a1, v5, v6, v7);
  swift_bridgeObjectRelease();
  return sub_21F7160B0();
}

uint64_t sub_21F6D9D08(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_21F6D9E90(char a1)
{
  return qword_21F721950[a1];
}

BOOL sub_21F6D9EB0(char *a1, char *a2)
{
  return sub_21F687CC8(*a1, *a2);
}

uint64_t sub_21F6D9EC4()
{
  return sub_21F687CFC();
}

uint64_t sub_21F6D9ED0()
{
  return sub_21F687CD8();
}

uint64_t sub_21F6D9EDC()
{
  sub_21F716920();
  sub_21F687CD8();
  return sub_21F716968();
}

uint64_t sub_21F6D9F20()
{
  char *v0;

  return sub_21F6D9E90(*v0);
}

uint64_t sub_21F6D9F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6D9D08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6D9F58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F6DB158();
  *a1 = result;
  return result;
}

uint64_t sub_21F6D9F80(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F7218F8, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F6D9FB4(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F7218F8, a1);
  return sub_21F7169EC();
}

uint64_t Message.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v22 = a2;
  v5 = v4;
  v7 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(a2 + 24);
  v21 = v7;
  v8 = type metadata accessor for Message.CodingKeys(255, v7, v20, a4);
  MEMORY[0x2207CC46C](&unk_21F7218F8, v8);
  v9 = sub_21F71677C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169C8();
  v28 = 0;
  sub_21F715E10();
  sub_21F6DA6A8(&qword_2554E1708, MEMORY[0x24BDCEA70]);
  v13 = v23;
  sub_21F716758();
  if (!v13)
  {
    v15 = v20;
    v14 = v21;
    v27 = 1;
    sub_21F716764();
    v24 = *(_QWORD *)(v5 + *(int *)(v22 + 40));
    v26 = 2;
    v17 = type metadata accessor for Message.Metrics(0, v14, v15, v16);
    MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics, v17);
    sub_21F716758();
    v25 = 3;
    sub_21F716758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t Message.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_21F716920();
  Message.hash(into:)((uint64_t)v3, a1);
  return sub_21F716968();
}

uint64_t Message.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v32 = a4;
  v31 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_21F715E10();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Message.CodingKeys(255, a2, a3, v9);
  MEMORY[0x2207CC46C](&unk_21F7218F8, v10);
  v41 = sub_21F7166F8();
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v12 = (char *)&v30 - v11;
  v36 = a3;
  v37 = a2;
  v14 = (int *)type metadata accessor for Message(0, a2, a3, v13);
  v15 = *((_QWORD *)v14 - 1);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v40 = v12;
  v18 = (uint64_t)v42;
  sub_21F7169B0();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v30 = v15;
  v20 = v36;
  v19 = v37;
  v21 = v17;
  v23 = v34;
  v22 = v35;
  v42 = a1;
  v47 = 0;
  sub_21F6DA6A8(qword_2554E1710, MEMORY[0x24BDCEAA8]);
  v24 = v38;
  sub_21F7166C8();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v39, v24);
  v46 = 1;
  v21[v14[9]] = sub_21F7166D4();
  v26 = type metadata accessor for Message.Metrics(0, v19, v20, v25);
  v45 = 2;
  MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics, v26);
  sub_21F7166C8();
  *(_QWORD *)&v21[v14[10]] = v43;
  v44 = 3;
  v27 = v33;
  sub_21F7166C8();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v40, v41);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v21[v14[11]], v27, v19);
  v28 = v30;
  (*(void (**)(uint64_t, char *, int *))(v30 + 16))(v32, v21, v14);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v42);
  return (*(uint64_t (**)(char *, int *))(v28 + 8))(v21, v14);
}

uint64_t sub_21F6DA5E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_21F715E10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_21F6DA618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Message.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_21F6DA634(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Message.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_21F6DA648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Message.__derived_struct_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_21F6DA65C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_21F716920();
  Message.hash(into:)((uint64_t)v4, a2);
  return sub_21F716968();
}

uint64_t type metadata accessor for Message.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Message.CodingKeys);
}

uint64_t sub_21F6DA6A8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_21F715E10();
    result = MEMORY[0x2207CC46C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F6DA6E8()
{
  return sub_21F6DA6A8(&qword_2554E1700, MEMORY[0x24BDCEA88]);
}

uint64_t sub_21F6DA70C(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>);
  a1[2] = MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>, a2);
  result = MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>, a2);
  a1[3] = result;
  return result;
}

void sub_21F6DA764()
{
  JUMPOUT(0x2207CC46CLL);
}

uint64_t sub_21F6DA774()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21F715E10();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_21F6DA818(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v6 = sub_21F715E10();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v12 = *(_QWORD *)(v7 + 64), ((v10 + (v12 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v10) + *(_QWORD *)(v9 + 64) <= 0x18)
      ? (v13 = v11 > 7)
      : (v13 = 1),
        v13))
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v14 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    v16 = (v14 + v10 + 16) & ~v10;
    v17 = (v15 + v10 + 16) & ~v10;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v18(v16, v17, v8);
  }
  return a1;
}

uint64_t sub_21F6DA938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = sub_21F715E10();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (*(_QWORD *)(v5 + 64) + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v6 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_21F6DA9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21F715E10();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 16 + v9) & ~v13;
  v15 = (v13 + 16 + v10) & ~v13;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  v16(v14, v15, v11);
  return a1;
}

uint64_t sub_21F6DAA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v6 = sub_21F715E10();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((*(unsigned __int8 *)(v13 + 80) + 16 + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 16 + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_21F6DAB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_21F715E10();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((*(unsigned __int8 *)(v11 + 80) + 16 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 16 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_21F6DABB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v6 = sub_21F715E10();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((*(unsigned __int8 *)(v13 + 80) + 16 + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 16 + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_21F6DAC54(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v6 = sub_21F715E10();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = *(_DWORD *)(v7 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (!a2)
    return 0;
  v14 = v6;
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v13)
    goto LABEL_27;
  v17 = ((v16 + (v15 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v16) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v13 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if (v8 == v13)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v14);
      v24 = (v15 + a1) & 0xFFFFFFFFFFFFFFF8;
      if ((v12 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v24 + v16 + 16) & ~v16, v11, v9);
      v25 = *(_QWORD *)(v24 + 8);
      if (v25 >= 0xFFFFFFFF)
        LODWORD(v25) = -1;
      return (v25 + 1);
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = ((v16 + (v15 & 0xFFFFFFF8) + 16) & ~(_DWORD)v16) + *(_DWORD *)(v10 + 64);
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v13 + v22 + 1;
}

void sub_21F6DAE1C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_21F715E10() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((v12 + (*(_QWORD *)(v8 + 64) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + *(_QWORD *)(v9 + 64);
  if (a3 <= v11)
  {
    v14 = 0;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, ((v12 + (*(_QWORD *)(v8 + 64) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, ((v12 + (*(_QWORD *)(v8 + 64) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

uint64_t sub_21F6DB06C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21F6DB0B8 + 4 * byte_21F7216C3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21F6DB0EC + 4 * byte_21F7216BE[v4]))();
}

uint64_t sub_21F6DB0EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6DB0F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6DB0FCLL);
  return result;
}

uint64_t sub_21F6DB108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6DB110);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21F6DB114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6DB11C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_21F6DB128()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F6DB138()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F6DB148()
{
  JUMPOUT(0x2207CC46CLL);
}

uint64_t sub_21F6DB158()
{
  return 4;
}

id PASAnisetteRemoteRequestHandler.__allocating_init(messageSessionProvider:anisetteController:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = __swift_mutable_project_boxed_opaque_existential_1(a2, v8);
  v11 = sub_21F6E1ECC(v7, v10, v2, v5, v8, v6, v9);
  __swift_destroy_boxed_opaque_existential_0Tm(a2);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v11;
}

uint64_t sub_21F6DB1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_21F716980();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_21F716254();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_21F716260();
  }
}

uint64_t sub_21F6DB350(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_21F656988;
  return v7();
}

uint64_t sub_21F6DB3A4()
{
  sub_21F7164E8();
  sub_21F716140();
  sub_21F716140();
  return 0;
}

unint64_t sub_21F6DB464()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F6DB3A4();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F6DB4F4()
{
  return sub_21F6DB3A4();
}

uint64_t sub_21F6DB500()
{
  sub_21F6E4A48();
  return sub_21F7168C0();
}

uint64_t sub_21F6DB528()
{
  sub_21F6E4A48();
  return sub_21F7168B4();
}

uint64_t sub_21F6DB550(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);

  v13 = 8 * a1;
  v14 = *(_QWORD *)&aProvisiosync[v13];
  v15 = *(_QWORD *)&aAttestatn[v13 + 8];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a3;
  v16[6] = a4;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(a7 + 32);
  swift_retain();
  v17(v14, v15, a2, sub_21F6E4650, v16, a5, a7);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_21F6DB61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a3;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a7;
  v20[5] = a8;
  v20[6] = a9;
  v20[7] = a5;
  v20[8] = a6;
  v20[9] = a1;
  v21 = v24;
  v20[10] = a2;
  v20[11] = v21;
  v20[12] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_21F6B4038((uint64_t)v18, (uint64_t)&unk_2554E1B18, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_21F6DB748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[9] = v13;
  v8[10] = v14;
  v8[7] = v11;
  v8[8] = v12;
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v9 = sub_21F716980();
  v8[11] = v9;
  v8[12] = *(_QWORD *)(v9 - 8);
  v8[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6DB7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v4 + 32) = v1;
  *(_OWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 64) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v6;
  *v6 = v0;
  v6[1] = sub_21F6DB874;
  return Result<>.init(catching:)(*(_QWORD *)(v0 + 104), (int *)&unk_2554E1B28);
}

uint64_t sub_21F6DB874()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DB8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD, uint64_t);
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 48);
  v5 = sub_21F6894B8(v1, *(_QWORD *)(v0 + 72));
  v4(v5, 0, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DB950(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 64) = v7;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = a4;
  *(_BYTE *)(v8 + 96) = a2;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6DB978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 96);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  v5 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = v2;
  *(_QWORD *)(v4 + 64) = v1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v6;
  *v6 = v0;
  v6[1] = sub_21F6DBA2C;
  return sub_21F71686C();
}

uint64_t sub_21F6DBA2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F6DBAA0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DBAD4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v26 = a6;
  v27 = a4;
  v28 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v13 = sub_21F71626C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - v15;
  v17 = 8 * a3;
  v25 = *(_QWORD *)&aProvisiosync[v17];
  v18 = *(_QWORD *)&aAttestatn[v17 + 8];
  v29 = sub_21F640AEC(MEMORY[0x24BEE4AF8]);
  v19 = swift_bridgeObjectRetain();
  sub_21F6E22C8(v19, (uint64_t *)&v29, (void (*)(_QWORD *__return_ptr, char *))sub_21F6DBC80, 0, a5);
  swift_bridgeObjectRelease();
  v20 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v21 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = (char *)swift_allocObject();
  v23 = v26;
  *((_QWORD *)v22 + 2) = v26;
  *((_QWORD *)v22 + 3) = a7;
  *((_QWORD *)v22 + 4) = a8;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v22[v21], v16, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), char *, uint64_t, uint64_t))(a8 + 40))(v25, v18, v27, v20, sub_21F6E2740, v22, v23, a8);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F6DBC80()
{
  return sub_21F7164B8();
}

uint64_t sub_21F6DBCD4(char a1)
{
  return *(_QWORD *)&aSimdata_2[8 * a1];
}

uint64_t sub_21F6DBCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v8 = sub_21F716980();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - v10;
  sub_21F689958(a3, a6, (uint64_t *)((char *)&v14 - v10));
  v12 = sub_21F71626C();
  sub_21F6DB1F0((uint64_t)v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_21F6DBDCC@<X0>(uint64_t a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[40];
  _OWORD v25[2];

  v6 = 8 * a2;
  v7 = *(_QWORD *)&aSimdata_2[v6];
  v8 = *(_QWORD *)&aDoprovisurlreq_0[v6 + 16];
  *(_QWORD *)&v22 = v7;
  *((_QWORD *)&v22 + 1) = v8;
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_21F644994((uint64_t)v24), (v10 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_21F647538((uint64_t)v24);
  if (*((_QWORD *)&v23 + 1))
  {
    sub_21F644FEC(&v22, v25);
    sub_21F6429E4((uint64_t)v25, (uint64_t)v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1890);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
      *a3 = v22;
    }
    else
    {
      sub_21F6429E4((uint64_t)v25, (uint64_t)v24);
      v15 = sub_21F716128();
      v17 = v16;
      v18 = 8 * a2;
      v19 = *(_QWORD *)&aSimdata_2[v18];
      v20 = *(_QWORD *)&aDoprovisurlreq_0[v18 + 16];
      sub_21F655840();
      swift_allocError();
      *(_QWORD *)v21 = v15;
      *(_QWORD *)(v21 + 8) = v17;
      *(_QWORD *)(v21 + 16) = v19;
      *(_QWORD *)(v21 + 24) = v20;
      *(_BYTE *)(v21 + 32) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    }
  }
  else
  {
    sub_21F6476AC((uint64_t)&v22, &qword_2554DA750);
    v12 = *(_QWORD *)&aSimdata_2[8 * a2];
    v13 = *(_QWORD *)&aDoprovisurlreq_0[8 * a2 + 16];
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v14 = v12;
    *(_QWORD *)(v14 + 8) = v13;
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    *(_BYTE *)(v14 + 32) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_21F6DBFB0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  _BYTE v23[40];
  _OWORD v24[2];

  v4 = 8 * a2;
  v5 = *(_QWORD *)&aSimdata_2[v4];
  v6 = *(_QWORD *)&aDoprovisurlreq_0[v4 + 16];
  *(_QWORD *)&v21 = v5;
  *((_QWORD *)&v21 + 1) = v6;
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_21F644994((uint64_t)v23), (v8 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  v9 = a2;
  sub_21F647538((uint64_t)v23);
  if (*((_QWORD *)&v22 + 1))
  {
    sub_21F644FEC(&v21, v24);
    sub_21F6429E4((uint64_t)v24, (uint64_t)v23);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
      v10 = v21 & 1;
    }
    else
    {
      sub_21F6429E4((uint64_t)v24, (uint64_t)v23);
      v14 = sub_21F716128();
      v16 = v15;
      v17 = *(_QWORD *)&aSimdata_2[8 * v9];
      v18 = *(_QWORD *)&aDoprovisurlreq_0[8 * v9 + 16];
      sub_21F655840();
      swift_allocError();
      *(_QWORD *)v19 = v14;
      *(_QWORD *)(v19 + 8) = v16;
      *(_QWORD *)(v19 + 16) = v17;
      *(_QWORD *)(v19 + 24) = v18;
      *(_BYTE *)(v19 + 32) = 1;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
    }
  }
  else
  {
    sub_21F6476AC((uint64_t)&v21, &qword_2554DA750);
    v11 = *(_QWORD *)&aSimdata_2[8 * a2];
    v12 = *(_QWORD *)&aDoprovisurlreq_0[8 * a2 + 16];
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v13 = v11;
    *(_QWORD *)(v13 + 8) = v12;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_BYTE *)(v13 + 32) = 0;
    swift_willThrow();
  }
  return v10 & 1;
}

uint64_t sub_21F6DC18C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[40];
  _OWORD v23[2];

  v4 = 8 * a2;
  v5 = *(_QWORD *)&aSimdata_2[v4];
  v6 = *(_QWORD *)&aDoprovisurlreq_0[v4 + 16];
  *(_QWORD *)&v20 = v5;
  *((_QWORD *)&v20 + 1) = v6;
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_21F644994((uint64_t)v22), (v8 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  v9 = a2;
  sub_21F647538((uint64_t)v22);
  if (*((_QWORD *)&v21 + 1))
  {
    sub_21F644FEC(&v20, v23);
    sub_21F6429E4((uint64_t)v23, (uint64_t)v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1AF0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
      return v20;
    }
    else
    {
      sub_21F6429E4((uint64_t)v23, (uint64_t)v22);
      v14 = sub_21F716128();
      v16 = v15;
      v17 = *(_QWORD *)&aSimdata_2[8 * v9];
      v18 = *(_QWORD *)&aDoprovisurlreq_0[8 * v9 + 16];
      sub_21F655840();
      swift_allocError();
      *(_QWORD *)v19 = v14;
      *(_QWORD *)(v19 + 8) = v16;
      *(_QWORD *)(v19 + 16) = v17;
      *(_QWORD *)(v19 + 24) = v18;
      *(_BYTE *)(v19 + 32) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
  }
  else
  {
    sub_21F6476AC((uint64_t)&v20, &qword_2554DA750);
    v11 = *(_QWORD *)&aSimdata_2[8 * a2];
    v12 = *(_QWORD *)&aDoprovisurlreq_0[8 * a2 + 16];
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v13 = v11;
    *(_QWORD *)(v13 + 8) = v12;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_BYTE *)(v13 + 32) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_21F6DC368@<X0>(uint64_t a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[40];
  _OWORD v25[2];

  v6 = 8 * a2;
  v7 = *(_QWORD *)&aSimdata_2[v6];
  v8 = *(_QWORD *)&aDoprovisurlreq_0[v6 + 16];
  *(_QWORD *)&v22 = v7;
  *((_QWORD *)&v22 + 1) = v8;
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_21F644994((uint64_t)v24), (v10 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_21F647538((uint64_t)v24);
  if (*((_QWORD *)&v23 + 1))
  {
    sub_21F644FEC(&v22, v25);
    sub_21F6429E4((uint64_t)v25, (uint64_t)v24);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
      *a3 = v22;
    }
    else
    {
      sub_21F6429E4((uint64_t)v25, (uint64_t)v24);
      v15 = sub_21F716128();
      v17 = v16;
      v18 = 8 * a2;
      v19 = *(_QWORD *)&aSimdata_2[v18];
      v20 = *(_QWORD *)&aDoprovisurlreq_0[v18 + 16];
      sub_21F655840();
      swift_allocError();
      *(_QWORD *)v21 = v15;
      *(_QWORD *)(v21 + 8) = v17;
      *(_QWORD *)(v21 + 16) = v19;
      *(_QWORD *)(v21 + 24) = v20;
      *(_BYTE *)(v21 + 32) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    }
  }
  else
  {
    sub_21F6476AC((uint64_t)&v22, &qword_2554DA750);
    v12 = *(_QWORD *)&aSimdata_2[8 * a2];
    v13 = *(_QWORD *)&aDoprovisurlreq_0[8 * a2 + 16];
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v14 = v12;
    *(_QWORD *)(v14 + 8) = v13;
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    *(_BYTE *)(v14 + 32) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_21F6DC544(char *a1, char *a2)
{
  return sub_21F70BF38(*a1, *a2);
}

uint64_t sub_21F6DC550()
{
  return sub_21F70CAD4();
}

uint64_t sub_21F6DC558()
{
  return sub_21F70D264();
}

uint64_t sub_21F6DC560()
{
  return sub_21F70DB98();
}

uint64_t sub_21F6DC568@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F6E2C70();
  *a1 = result;
  return result;
}

uint64_t sub_21F6DC594@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F6DBCD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t AKAnisetteProvisioningController.fetch(doProvision:)()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6DC5D4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[16];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_21F6DC668;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_21F6DC714;
  v3[3] = &block_descriptor_6;
  v3[4] = v2;
  objc_msgSend(v1, sel_anisetteDataWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_21F6DC668()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21F6DC6C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_21F6DC6D8()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DC714(uint64_t a1, void *a2, void *a3)
{
  return sub_21F6DCE0C(a1, a2, a3, &qword_2554E19A8);
}

uint64_t sub_21F6DC720()
{
  void **v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_21F681604;
  v3 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v4 = v1 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_21F6FED2C;
  v4[3] = &block_descriptor_155;
  v4[4] = v3;
  objc_msgSend(v2, sel_provisionWithCompletion_, v4);
  return swift_continuation_await();
}

uint64_t sub_21F6DC7B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, unint64_t);

  v7 = (uint64_t (*)(uint64_t, unint64_t))((char *)&dword_2554E1AB8 + dword_2554E1AB8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F651694;
  return v7(a1, a2);
}

uint64_t sub_21F6DC828(uint64_t a1, unint64_t a2)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (a2 >> 60 == 15)
    v4 = 0;
  else
    v4 = sub_21F715D68();
  v3[15] = v4;
  v3[7] = v3 + 16;
  v3[2] = v3;
  v3[3] = sub_21F6DC8E4;
  v5 = swift_continuation_init();
  v3[10] = MEMORY[0x24BDAC760];
  v6 = v3 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_21F6FED2C;
  v6[3] = &block_descriptor_153;
  v6[4] = v5;
  objc_msgSend(v2, sel_syncWithSIMData_completion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_21F6DC8E4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = *(void **)(v1 + 120);
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();

    v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
    v4 = 0;
  }
  else
  {
    v5 = *(unsigned __int8 *)(v1 + 128);

    v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
    v4 = v5;
  }
  return v3(v4);
}

uint64_t sub_21F6DC95C()
{
  void **v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_21F67F10C;
  v3 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v4 = v1 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_21F6FED2C;
  v4[3] = &block_descriptor_149;
  v4[4] = v3;
  objc_msgSend(v2, sel_eraseWithCompletion_, v4);
  return swift_continuation_await();
}

uint64_t sub_21F6DC9F0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = *v0;
  return swift_task_switch();
}

uint64_t sub_21F6DCA0C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[16];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_21F6DC668;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_21F6DC714;
  v3[3] = &block_descriptor_147;
  v3[4] = v2;
  objc_msgSend(v1, sel_anisetteDataWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_21F6DCAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2554E1AB0 + dword_2554E1AB0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F6514BC;
  return v7(a1, a2);
}

uint64_t sub_21F6DCB14(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (a2)
    v4 = sub_21F7160E0();
  else
    v4 = 0;
  v3[16] = v4;
  v3[7] = v3 + 15;
  v3[2] = v3;
  v3[3] = sub_21F67EF64;
  v5 = swift_continuation_init();
  v3[10] = MEMORY[0x24BDAC760];
  v6 = v3 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_21F6DC714;
  v6[3] = &block_descriptor_145;
  v6[4] = v5;
  objc_msgSend(v2, sel_legacyAnisetteDataForDSID_withCompletion_, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_21F6DCBC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2554E1A98 + dword_2554E1A98);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F671A5C;
  return v5(a1);
}

uint64_t sub_21F6DCC30(uint64_t a1)
{
  void *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1AA0);
  v5 = swift_task_alloc();
  v2[16] = v5;
  sub_21F6E2C28(a1, v5);
  v6 = sub_21F715C0C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    v8 = sub_21F715BF4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  v2[17] = v8;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_21F6DCD60;
  v9 = swift_continuation_init();
  v2[10] = MEMORY[0x24BDAC760];
  v10 = v2 + 10;
  v10[1] = 0x40000000;
  v10[2] = sub_21F6DCE00;
  v10[3] = &block_descriptor_141;
  v10[4] = v9;
  objc_msgSend(v3, sel_fetchPeerAttestationDataForRequest_completion_, v8, v10);
  return swift_continuation_await();
}

uint64_t sub_21F6DCD60()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(void **)(v1 + 136);
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 120);

    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_21F6DCE00(uint64_t a1, void *a2, void *a3)
{
  return sub_21F6DCE0C(a1, a2, a3, &qword_2554E1AA8);
}

uint64_t sub_21F6DCE0C(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *v6;
  id v7;
  uint64_t v10;
  id v11;
  void *v12;

  v4 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v6 = a3;
    v7 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v12 = a2;
    v10 = *(_QWORD *)(*(_QWORD *)(v4 + 64) + 40);
    v11 = a2;
    sub_21F658D18((uint64_t)&v12, v10, a4);
    return swift_continuation_throwingResume();
  }
}

id PASAnisetteRemoteRequestHandler.init(messageSessionProvider:anisetteController:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v20;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v6);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = __swift_mutable_project_boxed_opaque_existential_1(a2, v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v18 = sub_21F6E1D14((uint64_t)v10, (uint64_t)v16, v3, v6, v12, v7, v13);
  __swift_destroy_boxed_opaque_existential_0Tm(a2);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v18;
}

id PASAnisetteRemoteRequestHandler.__deallocating_deinit()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  objc_super v8;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_2554DA718 != -1)
    swift_once();
  v3 = sub_21F715F3C();
  __swift_project_value_buffer(v3, (uint64_t)static PASLogger.common);
  v4 = sub_21F715F24();
  v5 = sub_21F716350();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_21F63C000, v4, v5, "PASAnisetteRemoteRequestHandler deinit", v6, 2u);
    MEMORY[0x2207CC514](v6, -1, -1);
  }

  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

uint64_t PASAnisetteRemoteRequestHandler.registerForRequests()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6DD228()
{
  _QWORD *v0;

  v0[35] = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_registered;
  v0[36] = sub_21F7162A8();
  v0[37] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6DD2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  swift_release();
  *(_BYTE *)(v0 + 432) = *(_BYTE *)(v1 + v2);
  return swift_task_switch();
}

uint64_t sub_21F6DD2E8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 432) == 1)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716350();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler registerForRequests again", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

  }
  v5 = *(_QWORD *)(v0 + 272);
  v6 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_messageSessionProvider;
  *(_QWORD *)(v0 + 304) = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_messageSessionProvider;
  v7 = *(_QWORD *)(v5 + v6 + 24);
  v8 = *(_QWORD *)(v5 + v6 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + v6), v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v9;
  *v9 = v0;
  v9[1] = sub_21F6DD43C;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F6DD43C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DD4A0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = (_QWORD *)(v0[34] + v0[38]);
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF18);
  v0[41] = v5;
  sub_21F6DB550(0, 0, (uint64_t)&unk_2554E1850, v4, v2, v5, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  v6 = v1[3];
  v7 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[42] = v8;
  *v8 = v0;
  v8[1] = sub_21F6DD5C8;
  return v10(v0 + 17, v6, v7);
}

uint64_t sub_21F6DD5C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DD62C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[41];
  v2 = (_QWORD *)(v0[34] + v0[38]);
  v3 = v0[20];
  v4 = v0[21];
  __swift_project_boxed_opaque_existential_1(v0 + 17, v3);
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_21F6DB550(1, 0, (uint64_t)&unk_2554E1868, v5, v3, v1, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 17));
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[44] = v8;
  *v8 = v0;
  v8[1] = sub_21F6DD74C;
  return v10(v0 + 22, v6, v7);
}

uint64_t sub_21F6DD74C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DD7B0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[41];
  v2 = (_QWORD *)(v0[34] + v0[38]);
  v3 = v0[25];
  v4 = v0[26];
  __swift_project_boxed_opaque_existential_1(v0 + 22, v3);
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_21F6DB550(2, 0, (uint64_t)&unk_2554E1878, v5, v3, v1, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 22));
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[46] = v8;
  *v8 = v0;
  v8[1] = sub_21F6DD8D0;
  return v10(v0 + 27, v6, v7);
}

uint64_t sub_21F6DD8D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DD934()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = (_QWORD *)(v0[34] + v0[38]);
  v2 = v0[30];
  v3 = v0[31];
  __swift_project_boxed_opaque_existential_1(v0 + 27, v2);
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1890);
  v0[48] = v5;
  sub_21F6DB550(3, 0, (uint64_t)&unk_2554E1888, v4, v2, v5, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 27));
  v6 = v1[3];
  v7 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[49] = v8;
  *v8 = v0;
  v8[1] = sub_21F6DDA5C;
  return v10(v0 + 12, v6, v7);
}

uint64_t sub_21F6DDA5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DDAC0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[48];
  v2 = (_QWORD *)(v0[34] + v0[38]);
  v3 = v0[15];
  v4 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 12, v3);
  v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_21F6DB550(4, 0, (uint64_t)&unk_2554E18A0, v5, v3, v1, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 12));
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[51] = v8;
  *v8 = v0;
  v8[1] = sub_21F6DDBE0;
  return v10(v0 + 7, v6, v7);
}

uint64_t sub_21F6DDBE0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DDC44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[48];
  v2 = v0[10];
  v3 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v2);
  v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_21F6DB550(5, 0, (uint64_t)&unk_2554E18B0, v4, v2, v1, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  v0[53] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6DDD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 280);
  swift_release();
  *(_BYTE *)(v1 + v2) = 1;
  return swift_task_switch();
}

uint64_t sub_21F6DDD80()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler did registerForRequests", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DDE5C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 320);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 264) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 256) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASAnisetteRemoteRequestHandler failed to register target anisette requests %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DE044()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 344);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 264) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 256) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASAnisetteRemoteRequestHandler failed to register target anisette requests %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DE22C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 360);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 264) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 256) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASAnisetteRemoteRequestHandler failed to register target anisette requests %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DE414()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 376);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 264) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 256) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASAnisetteRemoteRequestHandler failed to register target anisette requests %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DE5FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 400);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 264) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 256) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASAnisetteRemoteRequestHandler failed to register target anisette requests %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DE7E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 416);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 264) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 256) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASAnisetteRemoteRequestHandler failed to register target anisette requests %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DE9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F6DE9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 56) = v2;
  if (v2)
  {
    v6 = (uint64_t (*)(void))((char *)&dword_2554E1B30 + dword_2554E1B30);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_21F6DEA80;
    v4 = v6;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_21F6DEA80(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_BYTE *)(v4 + 80) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6DEB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6DEB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    v5 = (uint64_t (*)(uint64_t))((char *)&dword_2554E1B08 + dword_2554E1B08);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_21F6DEBCC;
    return v5(*(_QWORD *)(v0 + 48));
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6DEBCC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_BYTE *)(v4 + 88) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6DEC4C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_BYTE *)(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DEC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F6DEC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 56) = v2;
  if (v2)
  {
    v6 = (uint64_t (*)(void))((char *)&dword_2554E1B00 + dword_2554E1B00);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_21F6DED18;
    v4 = v6;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_21F6DED18(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_BYTE *)(v4 + 80) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6DED98()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DEDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6DEDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    v5 = (uint64_t (*)(uint64_t))((char *)&dword_2554E1AF8 + dword_2554E1AF8);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_21F6DEE9C;
    return v5(*(_QWORD *)(v0 + 48));
  }
  else
  {
    *(_OWORD *)*(_QWORD *)(v0 + 40) = xmmword_21F717E50;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6DEE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 80) = v2;
  swift_task_dealloc();
  if (!v2)
  {

    *(_QWORD *)(v6 + 88) = a2;
    *(_QWORD *)(v6 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6DEF1C()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 40) = vextq_s8(*(int8x16_t *)(v0 + 88), *(int8x16_t *)(v0 + 88), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DEF38()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6DEF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6DEF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    v5 = (uint64_t (*)(uint64_t))((char *)&dword_2554E1AE8 + dword_2554E1AE8);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_21F6DF03C;
    return v5(*(_QWORD *)(v0 + 48));
  }
  else
  {
    *(_OWORD *)*(_QWORD *)(v0 + 40) = xmmword_21F717E50;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6DF03C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 80) = v2;
  swift_task_dealloc();
  if (!v2)
  {

    *(_QWORD *)(v6 + 88) = a2;
    *(_QWORD *)(v6 + 96) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6DF0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6DF0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 64) = v2;
  if (v2)
  {
    v5 = (uint64_t (*)(uint64_t))((char *)&dword_2554E1AC0 + dword_2554E1AC0);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v3;
    *v3 = v0;
    v3[1] = sub_21F6DF03C;
    return v5(*(_QWORD *)(v0 + 48));
  }
  else
  {
    *(_OWORD *)*(_QWORD *)(v0 + 40) = xmmword_21F717E50;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

id PASAnisetteRemoteRequestHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PASAnisetteRemoteRequestHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6DF204()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F656988;
  v3[34] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6DF264()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6DF27C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteDataRequester provisionAnisette", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 56);

  v6 = v5 + 14;
  v7 = v5[17];
  v8 = v5[18];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v9;
  *v9 = v0;
  v9[1] = sub_21F6DF3B4;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F6DF3B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DF418()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[6];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v4 = sub_21F6410E0(MEMORY[0x24BEE4AF8]);
  v0[10] = v4;
  v5 = swift_task_alloc();
  v0[11] = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF18);
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F6DF4CC;
  *(_QWORD *)(v5 + 56) = v2;
  *(_QWORD *)(v5 + 64) = v3;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 16) = v0 + 13;
  return swift_task_switch();
}

uint64_t sub_21F6DF4CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6DF540()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_BYTE *)(v0 + 104) & 1;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6DF6A0(const void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_21F6E4B14;
  v4[7] = a2;
  return swift_task_switch();
}

uint64_t sub_21F6DF718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6DF734()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteDataRequester syncAnisette", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 144);

  v6 = v5 + 14;
  v7 = v5[17];
  v8 = v5[18];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v9;
  *v9 = v0;
  v9[1] = sub_21F6DF86C;
  return v11(v0 + 88, v7, v8);
}

uint64_t sub_21F6DF86C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DF8D0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t v8;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[14];
  v4 = v0[15];
  v5 = __swift_project_boxed_opaque_existential_1(v0 + 11, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1978);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = v1;
  sub_21F647CD4(v2, v1);
  v7 = sub_21F6410E0(inited);
  v0[21] = v7;
  v8 = swift_task_alloc();
  v0[22] = v8;
  *(_QWORD *)v8 = v0;
  *(_QWORD *)(v8 + 8) = sub_21F6DF9D4;
  *(_QWORD *)(v8 + 64) = v5;
  *(_QWORD *)(v8 + 48) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v3;
  *(_BYTE *)(v8 + 96) = 1;
  *(_QWORD *)(v8 + 16) = v0 + 24;
  *(_QWORD *)(v8 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F6DF9D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6DFA48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 192);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6DFA84()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6DFA94()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6DFC0C(void *a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = a1;
  swift_retain();
  v7 = sub_21F715D80();
  v9 = v8;

  v3[4] = v7;
  v3[5] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v3[6] = v10;
  *v10 = v3;
  v10[1] = sub_21F6DFCB4;
  v10[17] = v9;
  v10[18] = a3;
  v10[16] = v7;
  return swift_task_switch();
}

uint64_t sub_21F6DFCB4(char a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v2;
  swift_task_dealloc();
  swift_release();
  v5 = *(_QWORD *)(v4 + 24);
  sub_21F649BB0(*(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
  if (v1)
  {
    v6 = (void *)sub_21F715D44();

    (*(void (**)(uint64_t, _QWORD, void *))(v5 + 16))(v5, 0, v6);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v5 + 16))(v5, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_21F6DFD6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6DFD84()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteDataRequester eraseAnisette", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 56);

  v6 = v5 + 14;
  v7 = v5[17];
  v8 = v5[18];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v9;
  *v9 = v0;
  v9[1] = sub_21F6DFEBC;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F6DFEBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6DFF20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[5];
  v2 = v0[6];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v4 = sub_21F6410E0(MEMORY[0x24BEE4AF8]);
  v0[10] = v4;
  v5 = swift_task_alloc();
  v0[11] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F6DFFD4;
  *(_QWORD *)(v5 + 64) = v3;
  *(_QWORD *)(v5 + 48) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 56) = v2;
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 40) = v1;
  *(_BYTE *)(v5 + 96) = 2;
  *(_QWORD *)(v5 + 16) = v0 + 13;
  *(_QWORD *)(v5 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F6DFFD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6E0168(const void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_21F6E01E0;
  v4[7] = a2;
  return swift_task_switch();
}

uint64_t sub_21F6E01E0(char a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v2;
  swift_task_dealloc();
  swift_release();
  v5 = *(_QWORD *)(v4 + 24);
  if (v1)
  {
    v6 = (void *)sub_21F715D44();

    (*(void (**)(uint64_t, _QWORD, void *))(v5 + 16))(v5, 0, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v4 + 24), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_21F6E0290(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 168) = v1;
  *(_BYTE *)(v2 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E02AC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteDataRequester fetchAnisetteDataAndProvisionIfNecessary", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = (_QWORD *)v0[21];

  v6 = v5 + 14;
  v7 = v5[17];
  v8 = v5[18];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  v0[23] = v9;
  *v9 = v0;
  v9[1] = sub_21F6E03E8;
  return v11(v0 + 11, v7, v8);
}

uint64_t sub_21F6E03E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6E044C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t inited;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_BYTE *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1978);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 40) = v1;
  v6 = sub_21F6410E0(inited);
  *(_QWORD *)(v0 + 200) = v6;
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v7;
  *(_QWORD *)v7 = v0;
  *(_QWORD *)(v7 + 8) = sub_21F6E0538;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 48) = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v2;
  *(_BYTE *)(v7 + 96) = 3;
  *(_QWORD *)(v7 + 16) = v0 + 128;
  *(_QWORD *)(v7 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F6E0538()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6E05AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  void *v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  sub_21F64779C(0, &qword_2554E3110);
  sub_21F64779C(0, &qword_2554E19A0);
  v4 = (void *)sub_21F716380();
  if (v1)
  {
    sub_21F649BB0(v3, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = v4;
    v7 = v4;
    v8 = sub_21F715F24();
    v9 = sub_21F716374();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v15 = v11;
      *(_DWORD *)v10 = 141558274;
      *(_QWORD *)(v0 + 144) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v10 + 12) = 2080;
      *(_QWORD *)(v0 + 152) = v6;
      v12 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19A8);
      v13 = sub_21F716128();
      *(_QWORD *)(v0 + 160) = sub_21F644208(v13, v14, &v15);
      sub_21F716428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21F63C000, v8, (os_log_type_t)v9, "PASAnisetteDataRequester fetchAnisetteDataAndProvisionIfNecessary returning with data: %{mask.hash}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v11, -1, -1);
      MEMORY[0x2207CC514](v10, -1, -1);
    }
    else
    {

    }
    sub_21F649BB0(v3, v2);

    return (*(uint64_t (**)(void *))(v0 + 8))(v6);
  }
}

uint64_t sub_21F6E07F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E0804()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E0974(char a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  swift_retain();
  v6 = swift_task_alloc();
  v3[4] = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_21F6E0A00;
  *(_QWORD *)(v6 + 168) = a3;
  *(_BYTE *)(v6 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E0A00(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);
  void *v7;

  v3 = v1;
  v5 = *v2;
  swift_task_dealloc();
  swift_release();
  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 24);
  if (v3)
  {
    v7 = (void *)sub_21F715D44();

    ((void (**)(_QWORD, _QWORD, void *))v6)[2](v6, 0, v7);
    _Block_release(v6);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](*(_QWORD *)(v5 + 24), a1, 0);
    _Block_release(v6);

  }
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_21F6E0AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E0ADC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteDataRequester legacyAnisetteData", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 160);

  v6 = v5 + 14;
  v7 = v5[17];
  v8 = v5[18];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v9;
  *v9 = v0;
  v9[1] = sub_21F6E0C14;
  return v11(v0 + 88, v7, v8);
}

uint64_t sub_21F6E0C14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6E0C78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t inited;
  unint64_t v7;
  uint64_t v8;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[14];
  v4 = v0[15];
  v5 = __swift_project_boxed_opaque_existential_1(v0 + 11, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1978);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_BYTE *)(inited + 32) = 1;
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = v1;
  swift_bridgeObjectRetain();
  v7 = sub_21F6410E0(inited);
  v0[23] = v7;
  v8 = swift_task_alloc();
  v0[24] = v8;
  *(_QWORD *)v8 = v0;
  *(_QWORD *)(v8 + 8) = sub_21F6E0D7C;
  *(_QWORD *)(v8 + 64) = v5;
  *(_QWORD *)(v8 + 48) = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(v8 + 56) = v4;
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v3;
  *(_BYTE *)(v8 + 96) = 4;
  *(_QWORD *)(v8 + 16) = v0 + 16;
  *(_QWORD *)(v8 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F6E0D7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6E0DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  sub_21F64779C(0, &qword_2554E3110);
  sub_21F64779C(0, &qword_2554E19A0);
  v4 = sub_21F716380();
  v5 = sub_21F649BB0(v2, v3);
  if (!v1)
    v5 = v4;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_21F6E0EA0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E0EAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E1020(int a1, void *aBlock, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_21F716104();
  v7 = v6;
  v3[4] = v6;
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_21F6E10C0;
  v8[19] = v7;
  v8[20] = a3;
  v8[18] = v5;
  return swift_task_switch();
}

uint64_t sub_21F6E10C0(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);
  void *v7;

  v3 = v1;
  v5 = *v2;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 24);
  if (v3)
  {
    v7 = (void *)sub_21F715D44();

    ((void (**)(_QWORD, _QWORD, void *))v6)[2](v6, 0, v7);
    _Block_release(v6);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](*(_QWORD *)(v5 + 24), a1, 0);
    _Block_release(v6);

  }
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_21F6E1190(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = a1;
  *(_QWORD *)(v2 + 160) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E11F4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v19;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteDataRequester fetchPeerAttestationData", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_21F715BF4();
  *(_QWORD *)(v0 + 144) = 0;
  v7 = objc_msgSend(v5, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v6, 1, v0 + 144);

  v8 = *(id *)(v0 + 144);
  if (v7)
  {
    v9 = *(_QWORD **)(v0 + 160);
    v10 = sub_21F715D80();
    v12 = v11;

    *(_QWORD *)(v0 + 168) = v10;
    *(_QWORD *)(v0 + 176) = v12;
    v13 = v9[17];
    v14 = v9[18];
    __swift_project_boxed_opaque_existential_1(v9 + 14, v13);
    v15 = *(int **)(v14 + 16);
    v16 = *v15;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v17;
    *v17 = v0;
    v17[1] = sub_21F6E1410;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v15 + v16))(v0 + 88, v13, v14);
  }
  else
  {
    v19 = v8;
    sub_21F715D50();

    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6E1410()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6E14C0()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t inited;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v0[21];
  v1 = v0[22];
  v3 = v0[14];
  v4 = v0[15];
  v5 = __swift_project_boxed_opaque_existential_1(v0 + 11, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1978);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_BYTE *)(inited + 32) = 3;
  v7 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(inited + 64) = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = v1;
  sub_21F647CD4(v2, v1);
  v8 = sub_21F6410E0(inited);
  v0[25] = v8;
  v9 = swift_task_alloc();
  v0[26] = v9;
  *(_QWORD *)v9 = v0;
  *(_QWORD *)(v9 + 8) = sub_21F6E15F4;
  *(_QWORD *)(v9 + 56) = v4;
  *(_QWORD *)(v9 + 64) = v5;
  *(_QWORD *)(v9 + 40) = v3;
  *(_QWORD *)(v9 + 48) = v7;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v8;
  *(_BYTE *)(v9 + 96) = 5;
  *(_QWORD *)(v9 + 16) = v0 + 16;
  return swift_task_switch();
}

uint64_t sub_21F6E15F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6E16B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  sub_21F64779C(0, &qword_2554E3110);
  sub_21F64779C(0, (unint64_t *)&unk_2554E1990);
  v4 = sub_21F716380();
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  sub_21F649BB0(v2, v3);
  v7 = sub_21F649BB0(v6, v5);
  if (!v1)
    v7 = v4;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_21F6E17C0()
{
  uint64_t v0;

  sub_21F649BB0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E1820()
{
  uint64_t v0;

  sub_21F649BB0(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E19D4(uint64_t a1, const void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[2] = a3;
  v6 = sub_21F715C0C();
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v3[5] = v7;
  v3[6] = _Block_copy(a2);
  sub_21F715C00();
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  v3[7] = v8;
  *v8 = v3;
  v8[1] = sub_21F6E1A98;
  v8[19] = v7;
  v8[20] = a3;
  return swift_task_switch();
}

uint64_t sub_21F6E1A98(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);
  void *v7;

  v3 = v1;
  v5 = *v2;
  swift_task_dealloc();
  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 48);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 + 32) + 8))(*(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 24));
  swift_release();
  if (v3)
  {
    v7 = (void *)sub_21F715D44();

    ((void (**)(_QWORD, _QWORD, void *))v6)[2](v6, 0, v7);
    _Block_release(v6);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](v6, a1, 0);
    _Block_release(v6);

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_21F6E1BA4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 112);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_21F6E1BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21F7162C0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21F7162B4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21F6476AC(a1, &qword_2554E19B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21F716248();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

id sub_21F6E1D14(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *ObjectType;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  objc_super v25;
  uint64_t v26[5];
  uint64_t v27[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v27[3] = a4;
  v27[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  v26[3] = a5;
  v26[4] = a7;
  v16 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v16, a2, a5);
  a3[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_registered] = 0;
  v17 = qword_2554DA718;
  v18 = a3;
  if (v17 != -1)
    swift_once();
  v19 = sub_21F715F3C();
  __swift_project_value_buffer(v19, (uint64_t)static PASLogger.common);
  v20 = sub_21F715F24();
  v21 = sub_21F716350();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_21F63C000, v20, v21, "PASAnisetteRemoteRequestHandler init", v22, 2u);
    MEMORY[0x2207CC514](v22, -1, -1);
  }

  sub_21F647710((uint64_t)v27, (uint64_t)&v18[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_messageSessionProvider]);
  sub_21F647710((uint64_t)v26, (uint64_t)&v18[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController]);

  v25.receiver = v18;
  v25.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v25, sel_init);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  return v23;
}

id sub_21F6E1ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Class v20;
  _BYTE *v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a7;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = objc_allocWithZone(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, a5);
  return sub_21F6E1D14((uint64_t)v19, (uint64_t)v15, v21, a4, a5, a6, v24);
}

uint64_t sub_21F6E1FD0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F6E1FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E2054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F656988;
  v7[6] = a3;
  v7[7] = v3;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E20C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E2124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F656988;
  v7[6] = a3;
  v7[7] = v3;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E2194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F656988;
  v7[6] = a3;
  v7[7] = v3;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E2204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F656988;
  v7[6] = a3;
  v7[7] = v3;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t type metadata accessor for PASAnisetteRemoteRequestHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASAnisetteDataRequester()
{
  return objc_opt_self();
}

uint64_t sub_21F6E22B4(uint64_t a1)
{
  uint64_t v1;

  return sub_21F6DBAD4(a1, *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_21F6E22C8(uint64_t a1, uint64_t *a2, void (*a3)(_QWORD *__return_ptr, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v47;
  uint64_t v48;
  _OWORD v49[2];
  _OWORD v50[2];
  _QWORD v51[5];
  char v52;

  v8 = a1;
  v44 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v45 = (unint64_t)(v9 + 63) >> 6;
  v12 = 0;
  v43 = swift_bridgeObjectRetain();
  if (v11)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v15 = v12 + 1;
    if (!__OFADD__(v12, 1))
    {
      if (v15 < v45)
      {
        v16 = *(_QWORD *)(v44 + 8 * v15);
        ++v12;
        if (v16)
          goto LABEL_23;
        v12 = v15 + 1;
        if (v15 + 1 >= v45)
          return swift_release();
        v16 = *(_QWORD *)(v44 + 8 * v12);
        if (v16)
          goto LABEL_23;
        v12 = v15 + 2;
        if (v15 + 2 >= v45)
          return swift_release();
        v16 = *(_QWORD *)(v44 + 8 * v12);
        if (v16)
          goto LABEL_23;
        v12 = v15 + 3;
        if (v15 + 3 >= v45)
          return swift_release();
        v16 = *(_QWORD *)(v44 + 8 * v12);
        if (v16)
        {
LABEL_23:
          v11 = (v16 - 1) & v16;
          for (i = __clz(__rbit64(v16)) + (v12 << 6); ; i = v13 | (v12 << 6))
          {
            v18 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + i);
            v52 = v18;
            a3(v51, &v52);
            if (*(_QWORD *)(a5 + 16))
            {
              v19 = sub_21F644A38(v18);
              if ((v20 & 1) != 0)
                break;
            }
            swift_bridgeObjectRetain();
            v33 = sub_21F644994((uint64_t)v51);
            v35 = v34;
            swift_bridgeObjectRelease();
            if ((v35 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v37 = *a2;
              v48 = *a2;
              *a2 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_21F6F95F4();
                v37 = v48;
              }
              sub_21F647538(*(_QWORD *)(v37 + 48) + 40 * v33);
              sub_21F644FEC((_OWORD *)(*(_QWORD *)(v37 + 56) + 32 * v33), v49);
              sub_21F6F8ED8(v33, v37);
              *a2 = v37;
              swift_bridgeObjectRelease();
            }
            else
            {
              memset(v49, 0, sizeof(v49));
            }
            sub_21F647538((uint64_t)v51);
            sub_21F6476AC((uint64_t)v49, &qword_2554DA750);
            if (!v11)
              goto LABEL_8;
LABEL_7:
            v13 = __clz(__rbit64(v11));
            v11 &= v11 - 1;
          }
          v21 = a4;
          sub_21F6429E4(*(_QWORD *)(a5 + 56) + 32 * v19, (uint64_t)v50);
          sub_21F644FEC(v50, v49);
          v22 = swift_isUniquelyReferenced_nonNull_native();
          v23 = *a2;
          v47 = (_QWORD *)*a2;
          *a2 = 0x8000000000000000;
          v25 = sub_21F644994((uint64_t)v51);
          v26 = *(_QWORD *)(v23 + 16);
          v27 = (v24 & 1) == 0;
          v28 = v26 + v27;
          if (__OFADD__(v26, v27))
            goto LABEL_45;
          v29 = v24;
          if (*(_QWORD *)(v23 + 24) < v28)
          {
            sub_21F6F7D90(v28, v22);
            v30 = sub_21F644994((uint64_t)v51);
            if ((v29 & 1) != (v31 & 1))
              goto LABEL_48;
            v25 = v30;
            v32 = v47;
            if ((v29 & 1) == 0)
              goto LABEL_39;
LABEL_37:
            v38 = (_OWORD *)(v32[7] + 32 * v25);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v38);
            sub_21F644FEC(v49, v38);
            goto LABEL_41;
          }
          if ((v22 & 1) != 0)
          {
            v32 = v47;
            if ((v24 & 1) != 0)
              goto LABEL_37;
          }
          else
          {
            sub_21F6F95F4();
            v32 = v47;
            if ((v29 & 1) != 0)
              goto LABEL_37;
          }
LABEL_39:
          v32[(v25 >> 6) + 8] |= 1 << v25;
          sub_21F6474FC((uint64_t)v51, v32[6] + 40 * v25);
          sub_21F644FEC(v49, (_OWORD *)(v32[7] + 32 * v25));
          v39 = v32[2];
          v40 = __OFADD__(v39, 1);
          v41 = v39 + 1;
          if (v40)
            goto LABEL_46;
          v32[2] = v41;
LABEL_41:
          *a2 = (uint64_t)v32;
          swift_bridgeObjectRelease();
          sub_21F647538((uint64_t)v51);
          a4 = v21;
          v8 = v43;
          if (!v11)
            continue;
          goto LABEL_7;
        }
        v17 = v15 + 4;
        if (v17 < v45)
        {
          v16 = *(_QWORD *)(v44 + 8 * v17);
          if (v16)
          {
            v12 = v17;
            goto LABEL_23;
          }
          while (1)
          {
            v12 = v17 + 1;
            if (__OFADD__(v17, 1))
              goto LABEL_47;
            if (v12 >= v45)
              return swift_release();
            v16 = *(_QWORD *)(v44 + 8 * v12);
            ++v17;
            if (v16)
              goto LABEL_23;
          }
        }
      }
      return swift_release();
    }
    break;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t sub_21F6E26C0()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v1 = sub_21F71626C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_21F6E2740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_21F71626C() - 8) + 80);
  return sub_21F6DBCF4(a1, a2, a3, v3 + ((v9 + 40) & ~v9), v7, v8);
}

uint64_t sub_21F6E27D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (const void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, const void *, uint64_t))((char *)&dword_2554E19B8 + dword_2554E19B8))(v2, v3, v4);
}

uint64_t sub_21F6E2848()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2554E19C8 + dword_2554E19C8))(v2, v3, v4);
}

uint64_t sub_21F6E28C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6E28E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2554E19E8 + dword_2554E19E8))(a1, v4);
}

uint64_t sub_21F6E295C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(int, void *, uint64_t))((char *)&dword_2554E19F8 + dword_2554E19F8))(v2, v3, v4);
}

uint64_t sub_21F6E29D0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6E29FC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  v2 = *(_BYTE *)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21F651418;
  return ((uint64_t (*)(char, void *, uint64_t))((char *)&dword_2554E1A18 + dword_2554E1A18))(v2, v4, v3);
}

uint64_t sub_21F6E2A74()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_21F656988;
  return ((uint64_t (*)(const void *, uint64_t))((char *)&dword_2554E1A38 + dword_2554E1A38))(v2, v3);
}

uint64_t objectdestroy_44Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6E2B18()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(void *, void *, uint64_t))((char *)&dword_2554E1A58 + dword_2554E1A58))(v2, v3, v4);
}

uint64_t objectdestroy_94Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6E2BBC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_21F656988;
  return ((uint64_t (*)(const void *, uint64_t))((char *)&dword_2554E1A78 + dword_2554E1A78))(v2, v3);
}

uint64_t sub_21F6E2C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6E2C70()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_21F6E2CB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6E2CD0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler handleProvision", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  v6 = (_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController + 24);
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  *v9 = v0;
  v9[1] = sub_21F6E4B24;
  return v11(v7, v8);
}

uint64_t sub_21F6E2E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E2E18()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler handleSync", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v6 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);

  sub_21F647710(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController, v0 + 16);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
  sub_21F6DBDCC(v6, 0, (_OWORD *)(v0 + 56));
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 88) = v9;
  *(_QWORD *)(v0 + 96) = v10;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v11;
  *v11 = v0;
  v11[1] = sub_21F6E2FC4;
  return v13(v9, v10, v7, v8);
}

uint64_t sub_21F6E2FC4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *v2;
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = *(_QWORD *)(v4 + 88);
    v6 = *(_QWORD *)(v4 + 96);
    *(_BYTE *)(v4 + 120) = a1 & 1;
    sub_21F649B9C(v5, v6);
  }
  return swift_task_switch();
}

uint64_t sub_21F6E3044()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 120));
}

uint64_t sub_21F6E307C()
{
  uint64_t v0;

  sub_21F649B9C(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6E30C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6E30D8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler handleErase", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  v6 = (_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController + 24);
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v8 + 24) + *(_QWORD *)(v8 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v9;
  *v9 = v0;
  v9[1] = sub_21F6E3208;
  return v11(v7, v8);
}

uint64_t sub_21F6E3208(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_21F6E3264(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E32C8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[7] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler handleFetch", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[5];

  v6 = sub_21F6DBFB0(v5, 2);
  v7 = (_QWORD *)(v0[6] + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController);
  v8 = v7[3];
  v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v10 = *(int **)(v9 + 32);
  v11 = *v10;
  v12 = (_QWORD *)swift_task_alloc();
  v0[8] = v12;
  *v12 = v0;
  v12[1] = sub_21F6E3494;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))((char *)v10 + v11))(v6 & 1, v8, v9);
}

uint64_t sub_21F6E3494(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F6E354C()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v23;
  uint64_t v24;
  uint64_t v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 72);
  if (v1)
  {
    v2 = (id *)(v0 + 16);
    v3 = v1;
    v4 = sub_21F715F24();
    v5 = sub_21F716350();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v25[0] = v24;
      *(_DWORD *)v6 = 141558274;
      *(_QWORD *)(v0 + 24) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v6 + 12) = 2080;
      v7 = v3;
      v8 = objc_msgSend(v7, sel_description);
      v9 = sub_21F716104();
      v11 = v10;

      *(_QWORD *)(v0 + 32) = sub_21F644208(v9, v11, v25);
      sub_21F716428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21F63C000, v4, v5, "PASAnisetteRemoteRequestHandler fetch completed with result %{mask.hash}s", (uint8_t *)v6, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v24, -1, -1);
      MEMORY[0x2207CC514](v6, -1, -1);
    }
    else
    {

    }
    v16 = (void *)objc_opt_self();
    *v2 = 0;
    v17 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v3, 1, v0 + 16);
    v18 = *v2;
    if (v17)
    {
      v19 = sub_21F715D80();
      v21 = v20;

      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v19, v21);
    }
    v23 = v18;
    sub_21F715D50();

    swift_willThrow();
  }
  else
  {
    v12 = sub_21F715F24();
    v13 = sub_21F71635C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21F63C000, v12, v13, "PASAnisetteRemoteRequestHandler fetch completed without data", v14, 2u);
      MEMORY[0x2207CC514](v14, -1, -1);
    }

    sub_21F6E45A0();
    swift_allocError();
    *(_OWORD *)v15 = xmmword_21F721990;
    *(_BYTE *)(v15 + 16) = 0;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E38A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E3908()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler handleLegacy", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[8];
  v6 = v0[9];

  sub_21F647710(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController, (uint64_t)(v0 + 2));
  v7 = v0[5];
  v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v7);
  v9 = sub_21F6DC18C(v5, 1);
  v0[10] = v10;
  v11 = v9;
  v12 = v10;
  v13 = *(int **)(v8 + 40);
  v14 = *v13;
  v15 = (_QWORD *)swift_task_alloc();
  v0[11] = v15;
  *v15 = v0;
  v15[1] = sub_21F6E3AE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v13 + v14))(v11, v12, v7, v8);
}

uint64_t sub_21F6E3AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6E3BA8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  void *v11;

  v1 = v0 + 16;
  v2 = *(void **)(v0 + 96);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    v3 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 56) = 0;
    v4 = objc_msgSend(v3, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v0 + 56);
    v5 = *(id *)(v0 + 56);
    if (v4)
    {
      v6 = sub_21F715D80();
      v8 = v7;

      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v6, v8);
    }
    v11 = v5;
    sub_21F715D50();

    swift_willThrow();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    sub_21F6E45A0();
    swift_allocError();
    *(_OWORD *)v10 = xmmword_21F7219A0;
    *(_BYTE *)(v10 + 16) = 0;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E3D18()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E3D84(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1AA0);
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v3 = sub_21F715C0C();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6E3E50()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, _QWORD, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAnisetteRemoteRequestHandler handleAttestationData", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 24);

  sub_21F6DC368(v5, 3, &v28);
  v6 = v28;
  *(_OWORD *)(v0 + 88) = v28;
  sub_21F64779C(0, &qword_2554E3110);
  sub_21F64779C(0, &qword_2554E1AC8);
  v7 = (void *)sub_21F716380();
  v8 = *(_QWORD *)(v0 + 72);
  if (!v7)
  {
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    goto LABEL_10;
  }
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v11(v10, 1, 1, v9);
  sub_21F6E45E4();
  sub_21F716650();

  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v12(v10, 1, v9) == 1)
  {
LABEL_10:
    v11(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 64));
    goto LABEL_11;
  }
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 56);
  v15 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 72) + 32);
  v15(v14, *(_QWORD *)(v0 + 48), v13);
  v11(v14, 0, 1, v13);
  if (v12(v14, 1, v13) != 1)
  {
    v17 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 64);
    v19 = *(_QWORD *)(v0 + 32);
    v20 = *(_QWORD *)(v0 + 40);
    v15(v16, *(_QWORD *)(v0 + 56), v18);
    v21 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController
                    + 24);
    v22 = *(_QWORD *)(v19
                    + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController
                    + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v19 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController), v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v20, v16, v18);
    v11(v20, 0, 1, v18);
    v23 = *(int **)(v22 + 48);
    v24 = *v23;
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v25;
    *v25 = v0;
    v25[1] = sub_21F6E41F8;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))((char *)v23 + v24))(*(_QWORD *)(v0 + 40), v21, v22);
  }
LABEL_11:
  sub_21F6476AC(*(_QWORD *)(v0 + 56), &qword_2554E1AA0);
  sub_21F6E45A0();
  swift_allocError();
  *(_OWORD *)v27 = xmmword_21F7219B0;
  *(_BYTE *)(v27 + 16) = 1;
  swift_willThrow();
  sub_21F649BB0(v6, *((unint64_t *)&v6 + 1));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E41F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v3;

  v3 = *v2;
  v3[14] = a1;
  v3[15] = v1;
  swift_task_dealloc();
  sub_21F6476AC(v3[5], &qword_2554E1AA0);
  return swift_task_switch();
}

uint64_t sub_21F6E42C0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 112);
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 16) = 0;
    v3 = objc_msgSend(v2, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v1, 1, v0 + 16);
    v4 = *(id *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 64);
    if (v3)
    {
      v10 = sub_21F715D80();
      v20 = v11;
      v21 = v10;
      sub_21F649BB0(v6, v5);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v21, v20);
    }
    v19 = v4;
    sub_21F715D50();

    swift_willThrow();
    sub_21F649BB0(v6, v5);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 64);
    sub_21F6E45A0();
    swift_allocError();
    *(_OWORD *)v18 = xmmword_21F7219B0;
    *(_BYTE *)(v18 + 16) = 0;
    swift_willThrow();
    sub_21F649BB0(v14, v13);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E44F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  sub_21F649BB0(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21F6E45A0()
{
  unint64_t result;

  result = qword_2554E1AD0;
  if (!qword_2554E1AD0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F721CBC, &type metadata for PASAnisetteDataExchangeError);
    atomic_store(result, (unint64_t *)&qword_2554E1AD0);
  }
  return result;
}

unint64_t sub_21F6E45E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554E1AD8;
  if (!qword_2554E1AD8)
  {
    v1 = sub_21F715C0C();
    result = MEMORY[0x2207CC46C](MEMORY[0x24BDCB0E0], v1);
    atomic_store(result, (unint64_t *)&qword_2554E1AD8);
  }
  return result;
}

uint64_t sub_21F6E462C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6E4650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_21F6DB61C(a1, a2, a3, a4, v4[5], v4[6], v4[2], v4[3], v4[4]);
}

uint64_t sub_21F6E467C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6E46C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v11 = v1[2];
  v10 = v1[3];
  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  v6 = v1[10];
  v7 = v1[11];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_21F656988;
  return sub_21F6DB748(a1, v11, v10, v3, v4, v5, v6, v7);
}

uint64_t sub_21F6E4770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_21F651418;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E47EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for PASAnisetteDataExchangeError()
{
  return sub_21F6E4804();
}

uint64_t sub_21F6E4804()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s21ProximityAppleIDSetup28PASAnisetteDataExchangeErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_21F6E47EC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PASAnisetteDataExchangeError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_21F6E47EC();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_21F6E4804();
  return a1;
}

uint64_t assignWithTake for PASAnisetteDataExchangeError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_21F6E4804();
  return a1;
}

ValueMetadata *type metadata accessor for PASAnisetteDataExchangeError()
{
  return &type metadata for PASAnisetteDataExchangeError;
}

uint64_t storeEnumTagSinglePayload for PASAnisetteExchangeRequestKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21F6E4948 + 4 * byte_21F7219C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21F6E497C + 4 * byte_21F7219C0[v4]))();
}

uint64_t sub_21F6E497C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6E4984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6E498CLL);
  return result;
}

uint64_t sub_21F6E4998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6E49A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21F6E49A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6E49AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASAnisetteExchangeRequestKey()
{
  return &type metadata for PASAnisetteExchangeRequestKey;
}

unint64_t sub_21F6E49CC()
{
  unint64_t result;

  result = qword_2554E1B38;
  if (!qword_2554E1B38)
  {
    result = MEMORY[0x2207CC46C](&unk_21F721BC8, &type metadata for PASAnisetteExchangeRequestKey);
    atomic_store(result, (unint64_t *)&qword_2554E1B38);
  }
  return result;
}

unint64_t sub_21F6E4A14(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6E4A48();
  a1[2] = sub_21F6E4A8C();
  result = sub_21F6E4AD0();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6E4A48()
{
  unint64_t result;

  result = qword_2554E1B40;
  if (!qword_2554E1B40)
  {
    result = MEMORY[0x2207CC46C](&unk_21F721C60, &type metadata for PASAnisetteDataExchangeError);
    atomic_store(result, (unint64_t *)&qword_2554E1B40);
  }
  return result;
}

unint64_t sub_21F6E4A8C()
{
  unint64_t result;

  result = qword_2554E1B48;
  if (!qword_2554E1B48)
  {
    result = MEMORY[0x2207CC46C](&unk_21F721C18, &type metadata for PASAnisetteDataExchangeError);
    atomic_store(result, (unint64_t *)&qword_2554E1B48);
  }
  return result;
}

unint64_t sub_21F6E4AD0()
{
  unint64_t result;

  result = qword_2554E1B50;
  if (!qword_2554E1B50)
  {
    result = MEMORY[0x2207CC46C](&unk_21F721BF0, &type metadata for PASAnisetteDataExchangeError);
    atomic_store(result, (unint64_t *)&qword_2554E1B50);
  }
  return result;
}

uint64_t AnyTransport.availableRoutes.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t AnyTransport.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t *boxed_opaque_existential_1;

  a4[3] = a2;
  a4[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_1, a1, a2);
}

uint64_t AnyTransport.send(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_BYTE *)(v7 + 72) = a5;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6E4BCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD **)(v0 + 56);
  v3 = v1[3];
  v4 = __swift_project_boxed_opaque_existential_1(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  v6 = *(_QWORD *)(v2 + 16);
  *v5 = v0;
  v5[1] = sub_21F687C80;
  return sub_21F6E4C4C(*(_QWORD *)(v0 + 16), (uint64_t)v4, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 72), v6, v3);
}

uint64_t sub_21F6E4C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  *(_QWORD *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 72) = v11;
  *(_BYTE *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 80) = *(_QWORD *)(a7 - 8);
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 96) = AssociatedTypeWitness;
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v8 + 112) = swift_task_alloc();
  *(_QWORD *)(v8 + 120) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6E4D0C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 56));
  swift_dynamicCast();
  v4 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v1 + 32)
                                                                                      + *(_QWORD *)(v1 + 32));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  *v2 = v0;
  v2[1] = sub_21F6E4DC4;
  return v4(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 144), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_21F6E4DC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
  return swift_task_switch();
}

uint64_t sub_21F6E4E38()
{
  uint64_t v0;

  swift_dynamicCast();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E4EA0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E4F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;

  v14 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *(_QWORD *)v14 = v7;
  *(_QWORD *)(v14 + 8) = sub_21F651418;
  *(_QWORD *)(v14 + 48) = a6;
  *(_QWORD *)(v14 + 56) = v6;
  *(_BYTE *)(v14 + 72) = a5;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  return swift_task_switch();
}

uint64_t Transport.into()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;

  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(boxed_opaque_existential_1, v3, a1);
}

uint64_t TransportBuilding.buildAny()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)&v14 - v9;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  if (!v3)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    a3[3] = AssociatedTypeWitness;
    a3[4] = AssociatedConformanceWitness;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_1, v10, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_21F6E50D4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *sub_21F6E510C(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t sub_21F6E5130(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_21F6E5168(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21F6E51B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for AnyTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyTransport);
}

uint64_t PASFlowStepAllSet.__allocating_init(delegate:authResults:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_allocObject();
  v6 = sub_21F6E689C(a1, a2, a3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t PASFlowStepAllSet.init(delegate:authResults:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_21F6E689C(a1, a2, a3);
  swift_unknownObjectRelease();
  return v3;
}

uint64_t PASFlowStepAllSet.targetAccount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  swift_retain();
  sub_21F656B40((uint64_t)v3);
  swift_release();
  v0 = v4;
  v1 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
}

uint64_t PASFlowStepAllSet.targetAccountContext.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  swift_retain();
  sub_21F656B40((uint64_t)v3);
  swift_release();
  v0 = v4;
  v1 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
}

uint64_t PASFlowStepAllSet.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v1[3] = swift_task_alloc();
  v1[4] = sub_21F7162A8();
  v1[5] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[6] = v2;
  *v2 = v1;
  v2[1] = sub_21F6E5424;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F6E5424()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6E54AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  swift_retain();
  v4 = sub_21F71629C();
  v5 = (_QWORD *)swift_allocObject();
  v6 = MEMORY[0x24BEE6930];
  v5[2] = v4;
  v5[3] = v6;
  v5[4] = v2;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet_notifyExtensionsAboutFlowCompletionTask) = sub_21F6B4038(v1, (uint64_t)&unk_2554E1C30, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E5578()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E55B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;

  v4[2] = sub_21F7162A8();
  v4[3] = sub_21F71629C();
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_21F69E768;
  v6[18] = a4;
  return swift_task_switch();
}

uint64_t sub_21F6E5630()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6E5648()
{
  uint64_t v0;

  sub_21F7162A8();
  *(_QWORD *)(v0 + 152) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6E56B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_retain();
  sub_21F656B40((uint64_t)(v0 + 7));
  swift_release();
  v1 = v0[10];
  v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  return swift_task_switch();
}

uint64_t sub_21F6E5758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 40);
  if (!v1)
  {
    sub_21F6476AC(v0 + 16, &qword_2554DEF00);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
  v5 = v4;
  *(_QWORD *)(v0 + 160) = v3;
  *(_QWORD *)(v0 + 168) = v4;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (!v5)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v6 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v0 + 144)
                             + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet__extensionCache)
                 + 16);
  swift_beginAccess();
  v7 = *v6;
  if (*v6)
  {
    swift_retain();
  }
  else
  {
    v9 = qword_2554DA6A0;
    swift_retain();
    if (v9 != -1)
      swift_once();
    v7 = sub_21F63FE04();
    *v6 = v7;
    swift_retain();
    swift_release();
  }
  *(_QWORD *)(v0 + 176) = v7;
  *(_QWORD *)(v0 + 184) = v7;
  swift_retain();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6E58AC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 192) = sub_21F6AC1D8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFAD8);
  *v1 = v0;
  v1[1] = sub_21F6E592C;
  return sub_21F7162E4();
}

uint64_t sub_21F6E592C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6E5984()
{
  uint64_t v0;

  swift_release();
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 120);
  return swift_task_switch();
}

uint64_t sub_21F6E59C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 168);
  if (*(_QWORD *)(v0 + 208))
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v2;
    *v2 = v0;
    v2[1] = sub_21F6E5A44;
    return sub_21F696C18(*(_QWORD *)(v0 + 160), v1);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6E5A44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6E5AB0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E5AE8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v14;

  swift_bridgeObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 232);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 232);
  if (v7)
  {
    v14 = *(void **)(v0 + 216);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 136) = v12;
    sub_21F716428();
    *v10 = v12;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepAllSet notifyExtensionsAboutFlowCompletion failed to notify extension of successful sign-in: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

    swift_release();
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall PASFlowStepAllSet.doneButtonTapped()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD v17[3];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  v6 = sub_21F715F24();
  v7 = sub_21F716350();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_21F63C000, v6, v7, "PASFlowStepAllSet doneButtonTapped", v8, 2u);
    MEMORY[0x2207CC514](v8, -1, -1);
  }

  swift_retain();
  sub_21F656B40((uint64_t)v18);
  swift_release();
  v9 = v19;
  v10 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v17, v9, v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet_authResults);
  sub_21F65D4EC((uint64_t)v17, (uint64_t)v18);
  v21 = v11;
  v12 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 1, 1, v12);
  sub_21F6E6A10((uint64_t)v18, (uint64_t)v17);
  sub_21F7162A8();
  swift_bridgeObjectRetain();
  swift_retain();
  v13 = sub_21F71629C();
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v15;
  *(_QWORD *)(v14 + 32) = v1;
  v16 = v17[1];
  *(_OWORD *)(v14 + 40) = v17[0];
  *(_OWORD *)(v14 + 56) = v16;
  *(_OWORD *)(v14 + 72) = v17[2];
  sub_21F6B4038((uint64_t)v4, (uint64_t)&unk_2554E1C50, v14);
  swift_release();
  sub_21F6A1960((uint64_t)v18);
}

uint64_t sub_21F6E5F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;

  v5[12] = a4;
  v5[13] = a5;
  v5[14] = sub_21F7162A8();
  v5[15] = sub_21F71629C();
  v7 = (_QWORD *)swift_task_alloc();
  v5[16] = v7;
  *v7 = v5;
  v7[1] = sub_21F6E5F94;
  v7[8] = a4;
  return swift_task_switch();
}

uint64_t sub_21F6E5F94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_task_dealloc();
  *(_QWORD *)(v1 + 136) = sub_21F716248();
  *(_QWORD *)(v1 + 144) = v2;
  return swift_task_switch();
}

uint64_t sub_21F6E6008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 152) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    sub_21F6E6A10(v3, v0 + 16);
    *(_BYTE *)(v0 + 64) = 0;
    v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v6;
    *v6 = v0;
    v6[1] = sub_21F6E616C;
    return v10(v0 + 16, ObjectType, v4);
  }
  else
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v0 + 96)
                   + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet_notifyExtensionsAboutFlowCompletionTask);
    *(_QWORD *)(v0 + 168) = v8;
    if (v8)
    {
      swift_retain();
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 176) = v9;
      *v9 = v0;
      v9[1] = sub_21F6E6274;
      return sub_21F7162E4();
    }
    else
    {
      swift_release();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_21F6E616C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F6476AC(v1 + 16, (uint64_t *)&unk_2554DB8E0);
  return swift_task_switch();
}

uint64_t sub_21F6E61DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 96)
                 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet_notifyExtensionsAboutFlowCompletionTask);
  *(_QWORD *)(v0 + 168) = v1;
  if (v1)
  {
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v2;
    *v2 = v0;
    v2[1] = sub_21F6E6274;
    return sub_21F7162E4();
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6E6274()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6E62C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E62F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6E6310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  swift_retain();
  sub_21F6569C8((uint64_t)(v0 + 2));
  swift_release();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v5 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  *v3 = v0;
  v3[1] = sub_21F6E63B8;
  return v5(v1, v2);
}

uint64_t sub_21F6E63B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E642C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = *(void **)(v0 + 88);

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (!v1)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v2 = sub_21F715F3C();
    __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
    v3 = sub_21F715F24();
    v4 = sub_21F71635C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_21F63C000, v3, v4, "PASFlowStepAllSet ensureFlowCompletion local account is nil", v5, 2u);
      MEMORY[0x2207CC514](v5, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E6520()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 80);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 80);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 56) = v12;
    sub_21F716428();
    *v10 = v12;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepAllSet ensureFlowCompletion unable to check for local account\n%{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void PASFlowStepAllSet.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepAllSet.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6E674C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t PASFlowStepAllSet.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PASFlowStepAllSet.__deallocating_deinit()
{
  PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6E689C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v3 + v7) = v8;
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v3 + v9) = v10;
  v11 = OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet__extensionCache;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA830);
  v12 = swift_allocObject();
  *(_QWORD *)(v3 + v11) = v12;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet_notifyExtensionsAboutFlowCompletionTask) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASFlowStepAllSet_authResults) = a3;
  return sub_21F6BC954(a1, a2);
}

uint64_t sub_21F6E6978()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6E69A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F6E55B8(a1, v4, v5, v6);
}

uint64_t sub_21F6E6A10(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PASSourceFlowResultSuccess(a2, a1);
  return a2;
}

uint64_t sub_21F6E6A4C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 64))
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F6E6A90(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F651418;
  return sub_21F6E5F18(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_21F6E6B0C()
{
  return type metadata accessor for PASFlowStepAllSet();
}

uint64_t type metadata accessor for PASFlowStepAllSet()
{
  uint64_t result;

  result = qword_2554E1C90;
  if (!qword_2554E1C90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6E6B50()
{
  return swift_updateClassMetadata2();
}

unint64_t PASUserPasswordDataSourceError.description.getter()
{
  return 0xD000000000000027;
}

uint64_t static PASUserPasswordDataSourceError.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t PASUserPasswordDataSourceError.hash(into:)()
{
  return sub_21F71692C();
}

uint64_t PASUserPasswordDataSourceError.hashValue.getter()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

unint64_t sub_21F6E6C38()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000027;
  *(_QWORD *)(inited + 56) = 0x800000021F729D30;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6E6CC0()
{
  return 0xD000000000000027;
}

uint64_t sub_21F6E6CDC()
{
  sub_21F6E6E5C();
  return sub_21F7168C0();
}

uint64_t sub_21F6E6D04()
{
  sub_21F6E6E5C();
  return sub_21F7168B4();
}

uint64_t PASUserPasswordDataSource.fetchPassword(forObjectID:)()
{
  return swift_task_switch();
}

uint64_t sub_21F6E6D44()
{
  uint64_t v0;

  sub_21F6E6D9C();
  swift_allocError();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21F6E6D9C()
{
  unint64_t result;

  result = qword_2554E1F70;
  if (!qword_2554E1F70)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASUserPasswordDataSourceError, &type metadata for PASUserPasswordDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E1F70);
  }
  return result;
}

unint64_t sub_21F6E6DE4()
{
  unint64_t result;

  result = qword_2554E1F78;
  if (!qword_2554E1F78)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASUserPasswordDataSourceError, &type metadata for PASUserPasswordDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E1F78);
  }
  return result;
}

unint64_t sub_21F6E6E28(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6E6E5C();
  a1[2] = sub_21F6E6EA0();
  result = sub_21F6E6EE4();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6E6E5C()
{
  unint64_t result;

  result = qword_2554E1F80;
  if (!qword_2554E1F80)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASUserPasswordDataSourceError, &type metadata for PASUserPasswordDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E1F80);
  }
  return result;
}

unint64_t sub_21F6E6EA0()
{
  unint64_t result;

  result = qword_2554E1F88;
  if (!qword_2554E1F88)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASUserPasswordDataSourceError, &type metadata for PASUserPasswordDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E1F88);
  }
  return result;
}

unint64_t sub_21F6E6EE4()
{
  unint64_t result;

  result = qword_2554E1F90;
  if (!qword_2554E1F90)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASUserPasswordDataSourceError, &type metadata for PASUserPasswordDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E1F90);
  }
  return result;
}

uint64_t sub_21F6E6F2C()
{
  return swift_task_switch();
}

uint64_t storeEnumTagSinglePayload for PASUserPasswordDataSourceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6E6F80 + 4 * byte_21F721EA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6E6FA0 + 4 * byte_21F721EA5[v4]))();
}

_BYTE *sub_21F6E6F80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6E6FA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6E6FA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6E6FB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6E6FB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6E6FC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASUserPasswordDataSourceError()
{
  return &type metadata for PASUserPasswordDataSourceError;
}

ValueMetadata *type metadata accessor for PASUserPasswordDataSource()
{
  return &type metadata for PASUserPasswordDataSource;
}

uint64_t PASFeatureFlagsKey.feature.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_21F6E701C + 4 * asc_21F7220D0[a1]))("PASSignInForSelf", 16);
}

const char *sub_21F6E701C()
{
  return "PASEnableEasySignIn";
}

const char *sub_21F6E7030()
{
  return "PASEnableAllFamilyMembers";
}

const char *sub_21F6E7044()
{
  return "PASAccountPickerExtensions";
}

Swift::Bool __swiftcall PASFeatureFlags.isEnabled(_:)(ProximityAppleIDSetup::PASFeatureFlagsKey a1)
{
  char v2;
  ProximityAppleIDSetup::PASFeatureFlagsKey v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for PASFeatureFlagsKey;
  v6 = sub_21F6E70AC();
  v4[0] = a1;
  v2 = sub_21F715E64();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_21F6E70AC()
{
  unint64_t result;

  result = qword_2554E1FA0;
  if (!qword_2554E1FA0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFeatureFlagsKey, &type metadata for PASFeatureFlagsKey);
    atomic_store(result, (unint64_t *)&qword_2554E1FA0);
  }
  return result;
}

uint64_t PASFeatureFlags.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PASFeatureFlags.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F6E7108(char a1)
{
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v5 = &type metadata for PASFeatureFlagsKey;
  v6 = sub_21F6E70AC();
  v4[0] = a1;
  v2 = sub_21F715E64();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  return v2 & 1;
}

const char *PASFeatureFlagsKey.domain.getter()
{
  return "ProximityAppleIDSetup";
}

BOOL static PASFeatureFlagsKey.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t PASFeatureFlagsKey.hash(into:)()
{
  return sub_21F71692C();
}

uint64_t PASFeatureFlagsKey.hashValue.getter()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

unint64_t sub_21F6E71EC()
{
  unint64_t result;

  result = qword_2554E1FA8;
  if (!qword_2554E1FA8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFeatureFlagsKey, &type metadata for PASFeatureFlagsKey);
    atomic_store(result, (unint64_t *)&qword_2554E1FA8);
  }
  return result;
}

const char *sub_21F6E7230()
{
  return "ProximityAppleIDSetup";
}

uint64_t sub_21F6E7244()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_21F6E726C + 4 * byte_21F7220D4[*v0]))("PASSignInForSelf", 16);
}

const char *sub_21F6E726C()
{
  return "PASEnableEasySignIn";
}

const char *sub_21F6E7280()
{
  return "PASEnableAllFamilyMembers";
}

const char *sub_21F6E7294()
{
  return "PASAccountPickerExtensions";
}

uint64_t type metadata accessor for PASFeatureFlags()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PASFeatureFlagsKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21F6E7314 + 4 * byte_21F7220DD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21F6E7348 + 4 * byte_21F7220D8[v4]))();
}

uint64_t sub_21F6E7348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6E7350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6E7358);
  return result;
}

uint64_t sub_21F6E7364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6E736CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21F6E7370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6E7378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASFeatureFlagsKey()
{
  return &type metadata for PASFeatureFlagsKey;
}

uint64_t PASFlowStepSourceError.__allocating_init(delegate:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  *(_QWORD *)(swift_allocObject() + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepSourceError_error) = a3;
  v5 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v5;
}

void *PASFlowStepSourceError.error.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepSourceError_error);
  v2 = v1;
  return v1;
}

uint64_t PASFlowStepSourceError.init(delegate:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepSourceError_error) = a3;
  v4 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t PASFlowStepSourceError.exitFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6E7480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  int *v7;
  id v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 104) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  v6 = *(void **)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepSourceError_error);
  *(_QWORD *)(v0 + 16) = v6;
  *(_BYTE *)(v0 + 64) = 1;
  v7 = *(int **)(v4 + 16);
  v8 = v6;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v9;
  *v9 = v0;
  v9[1] = sub_21F67E708;
  return v11(v0 + 16, ObjectType, v4);
}

void PASFlowStepSourceError.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepSourceError.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21F6E75D0()
{
  uint64_t v0;

}

uint64_t PASFlowStepSourceError.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();

  return v0;
}

uint64_t PASFlowStepSourceError.__deallocating_deinit()
{
  objc_release(*(id *)(PASSourceFlowStepBase.deinit()
                     + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepSourceError_error));
  return swift_deallocClassInstance();
}

uint64_t sub_21F6E7654()
{
  return type metadata accessor for PASFlowStepSourceError();
}

uint64_t type metadata accessor for PASFlowStepSourceError()
{
  uint64_t result;

  result = qword_2554E2078;
  if (!qword_2554E2078)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6E7698()
{
  return swift_updateClassMetadata2();
}

uint64_t PASFamilyMemberPickerDataSourceError.rawValue.getter(char a1)
{
  return *(_QWORD *)&aNorequesnoimag[8 * a1];
}

uint64_t sub_21F6E76FC(char *a1, char *a2)
{
  return sub_21F70BDB8(*a1, *a2);
}

uint64_t sub_21F6E7708()
{
  return sub_21F70CB3C();
}

uint64_t sub_21F6E7710()
{
  return sub_21F70D1A4();
}

uint64_t sub_21F6E7718()
{
  return sub_21F70DCA0();
}

uint64_t sub_21F6E7720@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s21ProximityAppleIDSetup36PASFamilyMemberPickerDataSourceErrorO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21F6E774C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = PASFamilyMemberPickerDataSourceError.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F6E7774()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v3;
  v4 = sub_21F70E67C(v1);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F6E77F0()
{
  unsigned __int8 *v0;

  return sub_21F70E67C(*v0);
}

uint64_t sub_21F6E77F8()
{
  sub_21F6EBB1C();
  return sub_21F7168C0();
}

uint64_t sub_21F6E7820()
{
  sub_21F6EBB1C();
  return sub_21F7168B4();
}

uint64_t sub_21F6E7848(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  _QWORD *v6;
  id v7;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;

  v4 = *(_QWORD *)(a1 + 32);
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v6 = a4;
    v7 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      v10 = a2;
      v11 = sub_21F715D80();
      v13 = v12;

    }
    else
    {
      v11 = 0;
      v13 = 0xF000000000000000;
    }
    v14 = *(uint64_t **)(*(_QWORD *)(v4 + 64) + 40);
    *v14 = v11;
    v14[1] = v13;
    v14[2] = a3;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21F6E790C(uint64_t a1, void *a2, void *a3, void *a4)
{
  _QWORD *v5;
  id v6;
  _QWORD *v9;
  id v10;
  id v11;

  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v5 = a4;
    v6 = a4;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v9 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40);
    *v9 = a2;
    v9[1] = a3;
    v10 = a2;
    v11 = a3;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21F6E7998()
{
  return swift_deallocClassInstance();
}

uint64_t sub_21F6E79A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2554E2400 + dword_2554E2400);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F652D84;
  return v5(a1);
}

uint64_t sub_21F6E7A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6E7A20()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  v0[4] = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2554E23D8 + dword_2554E23D8);
  v2 = (_QWORD *)swift_task_alloc();
  v0[5] = v2;
  *v2 = v0;
  v2[1] = sub_21F6E7AA4;
  return v4(v0[2], v0[3], (uint64_t)v1);
}

uint64_t sub_21F6E7AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 48) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_21F6E7B34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_21F6E7B68()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE30A88]), sel_init);
  objc_msgSend(v0, sel_setCachePolicy_, 2);
  return v0;
}

uint64_t (**PASFamilyMemberPickerDataSource.requestIgnoringCacheBuilder.unsafeMutableAddressor())()
{
  return &static PASFamilyMemberPickerDataSource.requestIgnoringCacheBuilder;
}

id (*static PASFamilyMemberPickerDataSource.requestIgnoringCacheBuilder.getter())()
{
  return sub_21F6E7B68;
}

uint64_t PASFamilyMemberPickerDataSource.fetchFamilyMembers()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6E7BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  sub_21F656B94(v0 + 120);
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 120), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  v4 = __swift_destroy_boxed_opaque_existential_0Tm(v0 + 120);
  if ((v3 & 1) != 0)
  {
    v5 = (void *)(**(uint64_t (***)(uint64_t))(v0 + 208))(v4);
    *(_QWORD *)(v0 + 216) = v5;
    *(_QWORD *)(v0 + 56) = v0 + 184;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_21F6E7DAC;
    v6 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v7 = (_QWORD *)(v0 + 80);
    v7[1] = 0x40000000;
    v7[2] = sub_21F6E858C;
    v7[3] = &block_descriptor_7;
    v7[4] = v6;
    objc_msgSend(v5, sel_startRequestWithCompletionHandler_, v7);
    return swift_continuation_await();
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v9 = sub_21F715F3C();
    __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
    v10 = sub_21F715F24();
    v11 = sub_21F71635C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_21F63C000, v10, v11, "PASFamilyMemberPickerDataSource fetchFamilyMembers internet is not reachable", v12, 2u);
      MEMORY[0x2207CC514](v12, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, MEMORY[0x24BEE4AF8]);
  }
}

uint64_t sub_21F6E7DAC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21F6E7E0C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v19;
  void *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  id v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;

  v1 = *(void **)(v0 + 216);
  v2 = *(void **)(v0 + 184);
  *(_QWORD *)(v0 + 232) = v2;

  v3 = objc_msgSend(v2, sel_members);
  sub_21F6EBA20();
  v4 = sub_21F7161D0();

  *(_QWORD *)(v0 + 192) = v4;
  v5 = (uint64_t *)(v0 + 192);
  *(_BYTE *)(v0 + 264) = objc_msgSend(v2, sel_canAddMembers);
  if (v4 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v6 = sub_21F716608();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = 0;
      v8 = v4 & 0xC000000000000001;
      while (1)
      {
        v9 = v8 ? (id)MEMORY[0x2207CBA94](v7, v4) : *(id *)(v4 + 8 * v7 + 32);
        v10 = v9;
        v11 = objc_msgSend(v9, sel_isMe);

        if ((v11 & 1) != 0)
          break;
        v12 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          goto LABEL_37;
        }
        ++v7;
        if (v12 == v6)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      if (v8)
      {
        v19 = (id)MEMORY[0x2207CBA94](v7, v4);
      }
      else
      {
        if (v7 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_48:
          swift_once();
LABEL_44:
          v32 = sub_21F715F3C();
          __swift_project_value_buffer(v32, (uint64_t)static PASLogger.common);
          v14 = sub_21F715F24();
          v33 = sub_21F716374();
          if (!os_log_type_enabled(v14, v33))
          {
            v17 = 1;
            goto LABEL_17;
          }
          v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_21F63C000, v14, v33, "PASFamilyMemberPickerDataSource fetchFamilyMembers empty family", v16, 2u);
          v17 = 1;
          goto LABEL_15;
        }
        v19 = *(id *)(v4 + 8 * v7 + 32);
      }
      v20 = v19;
      v21 = objc_msgSend(v19, sel_isGuardian);

      if (!v21)
        goto LABEL_11;

      v22 = *v5;
      if ((unint64_t)*v5 >> 62)
      {
        swift_bridgeObjectRetain();
        v30 = sub_21F716608();
        swift_bridgeObjectRelease();
        if (v30)
        {
          v34 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          v31 = sub_21F716608();
          if (!v31)
          {
            swift_bridgeObjectRelease();
            v27 = MEMORY[0x24BEE4AF8];
LABEL_35:
            *(_QWORD *)(v0 + 240) = v27;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v0 + 192) = v27;
            swift_bridgeObjectRetain();
            v28 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 248) = v28;
            *v28 = v0;
            v28[1] = sub_21F6E82E8;
            v29 = *(_QWORD *)(v0 + 208);
            v28[3] = v27;
            v28[4] = v29;
            return swift_task_switch();
          }
          v23 = v31;
          if (v31 >= 1)
          {
LABEL_26:
            for (i = 0; i != v23; ++i)
            {
              if ((v22 & 0xC000000000000001) != 0)
                v25 = (id)MEMORY[0x2207CBA94](i, v22);
              else
                v25 = *(id *)(v22 + 8 * i + 32);
              v26 = v25;
              if (objc_msgSend(v25, sel_isChildAccount, v34))
              {
                sub_21F716560();
                sub_21F716584();
                sub_21F716590();
                sub_21F71656C();
              }
              else
              {

              }
            }
            swift_bridgeObjectRelease();
            v27 = v34;
            goto LABEL_35;
          }
          __break(1u);
        }
      }
      else
      {
        v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v23)
        {
          v34 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        }
      }
      if (qword_2554DA718 == -1)
        goto LABEL_44;
      goto LABEL_48;
    }
  }
LABEL_10:
  swift_bridgeObjectRelease();
LABEL_11:
  if (qword_2554DA718 != -1)
    swift_once();
  v13 = sub_21F715F3C();
  __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
  v14 = sub_21F715F24();
  v15 = sub_21F716374();
  if (!os_log_type_enabled(v14, v15))
  {
    v17 = 0;
    goto LABEL_17;
  }
  v16 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v16 = 0;
  _os_log_impl(&dword_21F63C000, v14, v15, "PASFamilyMemberPickerDataSource fetchFamilyMembers not a guardian", v16, 2u);
  v17 = 0;
LABEL_15:
  MEMORY[0x2207CC514](v16, -1, -1);
LABEL_17:

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v17, MEMORY[0x24BEE4AF8]);
}

uint64_t sub_21F6E82E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = a1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6E834C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 256);
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    v11 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_21F6E9A34(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v12 = v2;
  sub_21F6E9B48(&v12);
  swift_bridgeObjectRelease();
  v3 = v12;
  if (qword_2554DA718 != -1)
    swift_once();
  v4 = sub_21F715F3C();
  __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
  v5 = sub_21F715F24();
  v6 = sub_21F716350();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134349056;
    swift_beginAccess();
    v8 = *(_QWORD *)(v0 + 192);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_21F716608();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(v0 + 200) = v9;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v5, v6, "PASFamilyMemberPickerDataSource fetchFamilyMembers complete with %{public}ld members", v7, 0xCu);
    MEMORY[0x2207CC514](v7, -1, -1);
  }

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(unsigned __int8 *)(v0 + 264), v3);
}

uint64_t sub_21F6E8548()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6E858C(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F6E8618(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_21F6EA75C(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_21F7161E8();
      return v10;
    }
  }
  result = sub_21F716638();
  __break(1u);
  return result;
}

uint64_t sub_21F6E86F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E8710()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21F716608();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    type metadata accessor for PASFamilyMember();
    v2 = swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v2;
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2410);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v3;
    *v3 = v0;
    v3[1] = sub_21F6E88D4;
    return sub_21F716554();
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v6 = sub_21F715F3C();
  __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
  v7 = sub_21F715F24();
  v8 = sub_21F716374();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21F63C000, v7, v8, "PASFamilyMemberPickerDataSource hydrateFamilyMemberImages members isEmpty", v9, 2u);
    MEMORY[0x2207CC514](v9, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_21F6E88D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t PASFamilyMemberPickerDataSource.fetchLocalAccount(using:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E8948()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFamilyMemberPickerDataSource fetchLocalAccount", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  sub_21F6569C8((uint64_t)(v0 + 2));
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  v0[15] = v7;
  *v7 = v0;
  v7[1] = sub_21F6E8A88;
  return v9(v5, v6);
}

uint64_t sub_21F6E8A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6E8AF4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  uint8_t *v10;
  _BYTE *v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t (*v19)(id, _QWORD, uint64_t, uint64_t);

  v1 = v0 + 16;
  v2 = *(void **)(v0 + 128);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    v3 = v2;
    v4 = sub_21F715F24();
    v5 = sub_21F716350();
    if (os_log_type_enabled(v4, v5))
    {
      v18 = *(_QWORD *)(v0 + 128);
      v6 = swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 141558274;
      *(_QWORD *)(v0 + 80) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v6 + 12) = 2112;
      *(_QWORD *)(v0 + 88) = v3;
      v7 = v3;
      sub_21F716428();
      *v17 = v18;

      _os_log_impl(&dword_21F63C000, v4, v5, "PASFamilyMemberPickerDataSource fetchLocalAccount got local account %{mask.hash}@", (uint8_t *)v6, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v17, -1, -1);
      MEMORY[0x2207CC514](v6, -1, -1);
    }
    else
    {

    }
    v13 = *(_QWORD **)(v0 + 104);
    v14 = v13[5];
    v15 = v13[6];
    __swift_project_boxed_opaque_existential_1(v13 + 2, v14);
    v19 = (uint64_t (*)(id, _QWORD, uint64_t, uint64_t))(**(int **)(v15 + 16) + *(_QWORD *)(v15 + 16));
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v16;
    *v16 = v0;
    v16[1] = sub_21F6E8DA4;
    return v19(v3, *(_QWORD *)(v0 + 96), v14, v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    v8 = sub_21F715F24();
    v9 = sub_21F71635C();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, (os_log_type_t)v9, "PASFamilyMemberPickerDataSource fetchLocalAccount accountStore returned no account", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

    sub_21F6EBA5C();
    swift_allocError();
    *v11 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6E8DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 152) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 160) = a2;
    *(_QWORD *)(v6 + 168) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6E8E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 128);
  type metadata accessor for PASAccountWithImage();
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E8E74()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E8EA8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v19;
  NSObject *log;

  v1 = *(void **)(v0 + 152);
  v2 = *(id *)(v0 + 128);
  v3 = v1;
  v4 = v2;
  v5 = v1;
  v6 = sub_21F715F24();
  v7 = sub_21F71635C();
  if (os_log_type_enabled(v6, v7))
  {
    v19 = *(id *)(v0 + 152);
    v8 = *(void **)(v0 + 128);
    log = v6;
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_QWORD *)(v0 + 56) = 1752392040;
    *(_DWORD *)v9 = 141558530;
    sub_21F716428();
    *(_WORD *)(v9 + 12) = 2112;
    *(_QWORD *)(v0 + 64) = v8;
    v11 = v8;
    sub_21F716428();
    *v10 = v8;

    *(_WORD *)(v9 + 22) = 2114;
    v12 = v19;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 72) = v13;
    sub_21F716428();
    v10[1] = v13;

    _os_log_impl(&dword_21F63C000, log, v7, "PASFamilyMemberPickerDataSource fetch image failed for %{mask.hash}@ with error %{public}@", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 152);
    v15 = *(void **)(v0 + 128);

  }
  v16 = *(_QWORD *)(v0 + 128);
  type metadata accessor for PASAccountWithImage();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_OWORD *)(v17 + 24) = xmmword_21F717E50;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6E90FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E2430);
  v4[25] = v5;
  v4[26] = *(_QWORD *)(v5 - 8);
  v4[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6E9198()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 184);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21F716608();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 152) = MEMORY[0x24BEE4AF8];
    type metadata accessor for PASFamilyMember();
    sub_21F716284();
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v25;
    *v25 = v0;
    v25[1] = sub_21F6E94CC;
    return sub_21F716290();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v27 = v1 & 0xC000000000000001;
    v26 = *(_QWORD *)(v0 + 184) + 32;
    v28 = v2;
    while (1)
    {
      if (v27)
        v6 = (id)MEMORY[0x2207CBA94](v4, *(_QWORD *)(v0 + 184));
      else
        v6 = *(id *)(v26 + 8 * v4);
      v7 = v6;
      v9 = *(_QWORD *)(v0 + 224);
      v8 = *(_QWORD *)(v0 + 232);
      v10 = *(_QWORD *)(v0 + 192);
      v11 = sub_21F7162C0();
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
      sub_21F6D899C(v10, v0 + 16);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = 0;
      v14 = (_QWORD *)(v13 + 16);
      *(_QWORD *)(v13 + 24) = 0;
      v15 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v13 + 64) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v13 + 80) = v15;
      *(_OWORD *)(v13 + 96) = *(_OWORD *)(v0 + 80);
      v16 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v13 + 32) = *(_OWORD *)(v0 + 16);
      *(_OWORD *)(v13 + 48) = v16;
      *(_QWORD *)(v13 + 112) = v7;
      sub_21F6EC7BC(v8, v9);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
      v17 = v7;
      v18 = *(_QWORD *)(v0 + 224);
      if ((_DWORD)v8 == 1)
      {
        sub_21F6EC804(*(_QWORD *)(v0 + 224));
        if (!*v14)
          goto LABEL_13;
      }
      else
      {
        sub_21F7162B4();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v11);
        if (!*v14)
        {
LABEL_13:
          v19 = 0;
          v21 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v19 = sub_21F716248();
      v21 = v20;
      swift_unknownObjectRelease();
LABEL_14:
      v22 = **(_QWORD **)(v0 + 176);
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = &unk_2554E2450;
      *(_QWORD *)(v23 + 24) = v13;
      type metadata accessor for PASFamilyMember();
      v24 = v21 | v19;
      if (v21 | v19)
      {
        v24 = v0 + 96;
        *(_QWORD *)(v0 + 96) = 0;
        *(_QWORD *)(v0 + 104) = 0;
        *(_QWORD *)(v0 + 112) = v19;
        *(_QWORD *)(v0 + 120) = v21;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 232);
      *(_QWORD *)(v0 + 128) = 1;
      *(_QWORD *)(v0 + 136) = v24;
      *(_QWORD *)(v0 + 144) = v22;
      swift_task_create();

      swift_release();
      sub_21F6EC804(v5);
      if (v28 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F6E94CC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6E9520()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;

  if (*(_QWORD *)(v0 + 160))
  {
    v1 = swift_retain();
    MEMORY[0x2207CB734](v1);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 152) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 152) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_21F716200();
    sub_21F716224();
    sub_21F7161E8();
    swift_release();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v2;
    *v2 = v0;
    v2[1] = sub_21F6E94CC;
    return sub_21F716290();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    if (qword_2554DA718 != -1)
      swift_once();
    v4 = sub_21F715F3C();
    __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
    v5 = sub_21F715F24();
    v6 = sub_21F716350();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_21F63C000, v5, v6, "PASFamilyMemberPickerDataSource hydrateFamilyMemberImages complete", v7, 2u);
      MEMORY[0x2207CC514](v7, -1, -1);
    }
    v8 = *(_QWORD **)(v0 + 168);

    *v8 = *(_QWORD *)(v0 + 152);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6E96F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6E9710()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  *v4 = v0;
  v4[1] = sub_21F6E9794;
  return v6(v0[4], v2, v3);
}

uint64_t sub_21F6E9794(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {

  }
  else
  {
    *(_QWORD *)(v6 + 48) = a2;
    *(_QWORD *)(v6 + 56) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6E9810()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  _QWORD *v5;
  id v6;
  uint64_t (*v8)(void);

  v1 = v0[6];
  v2 = v0[7];
  v3 = (void *)v0[4];
  v4 = (_QWORD *)v0[2];
  type metadata accessor for PASFamilyMember();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  *v4 = v5;
  v8 = (uint64_t (*)(void))v0[1];
  v6 = v3;
  return v8();
}

uint64_t sub_21F6E987C()
{
  _QWORD *v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;
  uint64_t (*v6)(void);

  v1 = (void *)v0[4];
  v2 = (uint64_t *)v0[2];
  type metadata accessor for PASFamilyMember();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = xmmword_21F717E50;
  *v2 = v3;
  v6 = (uint64_t (*)(void))v0[1];
  v4 = v1;
  return v6();
}

uint64_t sub_21F6E98E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F6E9940;
  v2[26] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6E9940(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    v8 = 0;
  }
  else
  {
    v8 = a1 & 1;
    v7 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v7);
}

uint64_t sub_21F6E99AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F6514BC;
  v4[12] = a1;
  v4[13] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6E9A0C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

_QWORD *sub_21F6E9A34(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_2554E1660);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_21F6EA7E8((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for PASFamilyMember, &qword_2554E2418, &qword_2554E2410, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_21F6EA9F0);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_21F716608();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_21F6E9B48(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_21F6C106C();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_21F6E9BC0(v6);
  return sub_21F71656C();
}

uint64_t sub_21F6E9BC0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;

  v3 = a1[1];
  result = sub_21F716794();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      return sub_21F6EA344(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v101 = result;
  v108 = v1;
  v96 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x24BEE4AF8];
    v109 = MEMORY[0x24BEE4AF8];
    v107 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_98:
      if (v11 >= 2)
      {
        v90 = *v96;
        do
        {
          v91 = v11 - 2;
          if (v11 < 2)
            goto LABEL_127;
          if (!v90)
            goto LABEL_139;
          v92 = *(_QWORD *)&v8[16 * v91 + 32];
          v93 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_21F6EA440((char *)(v90 + 8 * v92), (char *)(v90 + 8 * *(_QWORD *)&v8[16 * v11 + 16]), v90 + 8 * v93, v107);
          if (v108)
            break;
          if (v93 < v92)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_21F6C1000((uint64_t)v8);
          if (v91 >= *((_QWORD *)v8 + 2))
            goto LABEL_129;
          v94 = &v8[16 * v91 + 32];
          *(_QWORD *)v94 = v92;
          *((_QWORD *)v94 + 1) = v93;
          v95 = *((_QWORD *)v8 + 2);
          if (v11 > v95)
            goto LABEL_130;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v95 - v11));
          *((_QWORD *)v8 + 2) = v95 - 1;
          v11 = v95 - 1;
        }
        while (v95 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_21F7161E8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    type metadata accessor for PASFamilyMember();
    v7 = sub_21F716218();
    *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v107 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    v109 = v7;
  }
  v9 = 0;
  v10 = *a1;
  v97 = *a1 - 8;
  v98 = *a1 + 16;
  v8 = (char *)MEMORY[0x24BEE4AF8];
  v104 = v3;
  while (1)
  {
    v12 = v9++;
    v105 = v12;
    if (v9 < v3)
    {
      v13 = *(_QWORD *)(v10 + 8 * v12);
      v14 = *(void **)(*(_QWORD *)(v10 + 8 * v9) + 16);
      swift_retain();
      swift_retain();
      v102 = objc_msgSend(v14, sel_age);
      v15 = objc_msgSend(*(id *)(v13 + 16), sel_age);
      swift_release();
      v3 = v104;
      swift_release();
      v9 = v12 + 2;
      if (v12 + 2 < v104)
      {
        v99 = v8;
        v16 = v98 + 8 * v12;
        while (1)
        {
          v17 = *(_QWORD *)(v16 - 8);
          v18 = *(void **)(*(_QWORD *)v16 + 16);
          swift_retain();
          swift_retain();
          v19 = objc_msgSend(v18, sel_age);
          v20 = objc_msgSend(*(id *)(v17 + 16), sel_age);
          swift_release();
          swift_release();
          if ((uint64_t)v15 < (uint64_t)v102 == (uint64_t)v20 >= (uint64_t)v19)
            break;
          ++v9;
          v16 += 8;
          v3 = v104;
          if (v104 == v9)
          {
            v9 = v104;
            v8 = v99;
            goto LABEL_22;
          }
        }
        v8 = v99;
        v3 = v104;
LABEL_22:
        v12 = v105;
      }
      if ((uint64_t)v15 < (uint64_t)v102)
      {
        if (v9 < v12)
          goto LABEL_133;
        if (v12 < v9)
        {
          v21 = (uint64_t *)(v97 + 8 * v9);
          v22 = v9;
          v23 = v12;
          v24 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v23 != --v22)
            {
              if (!v10)
                goto LABEL_138;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12))
        goto LABEL_131;
      if (v9 - v12 < v101)
        break;
    }
LABEL_48:
    if (v9 < v12)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_21F6C0DB8(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v37 = *((_QWORD *)v8 + 2);
    v36 = *((_QWORD *)v8 + 3);
    v11 = v37 + 1;
    if (v37 >= v36 >> 1)
      v8 = sub_21F6C0DB8((char *)(v36 > 1), v37 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v11;
    v38 = v8 + 32;
    v39 = &v8[16 * v37 + 32];
    *(_QWORD *)v39 = v12;
    *((_QWORD *)v39 + 1) = v9;
    if (v37)
    {
      v106 = v9;
      while (1)
      {
        v40 = v11 - 1;
        if (v11 >= 4)
        {
          v45 = &v38[16 * v11];
          v46 = *((_QWORD *)v45 - 8);
          v47 = *((_QWORD *)v45 - 7);
          v51 = __OFSUB__(v47, v46);
          v48 = v47 - v46;
          if (v51)
            goto LABEL_115;
          v50 = *((_QWORD *)v45 - 6);
          v49 = *((_QWORD *)v45 - 5);
          v51 = __OFSUB__(v49, v50);
          v43 = v49 - v50;
          v44 = v51;
          if (v51)
            goto LABEL_116;
          v52 = v11 - 2;
          v53 = &v38[16 * v11 - 32];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          v51 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          if (v51)
            goto LABEL_118;
          v51 = __OFADD__(v43, v56);
          v57 = v43 + v56;
          if (v51)
            goto LABEL_121;
          if (v57 >= v48)
          {
            v75 = &v38[16 * v40];
            v77 = *(_QWORD *)v75;
            v76 = *((_QWORD *)v75 + 1);
            v51 = __OFSUB__(v76, v77);
            v78 = v76 - v77;
            if (v51)
              goto LABEL_125;
            v68 = v43 < v78;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v69 = *((_QWORD *)v8 + 4);
            v70 = *((_QWORD *)v8 + 5);
            v51 = __OFSUB__(v70, v69);
            v62 = v70 - v69;
            v63 = v51;
            goto LABEL_80;
          }
          v42 = *((_QWORD *)v8 + 4);
          v41 = *((_QWORD *)v8 + 5);
          v51 = __OFSUB__(v41, v42);
          v43 = v41 - v42;
          v44 = v51;
        }
        if ((v44 & 1) != 0)
          goto LABEL_117;
        v52 = v11 - 2;
        v58 = &v38[16 * v11 - 32];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v61 = __OFSUB__(v59, v60);
        v62 = v59 - v60;
        v63 = v61;
        if (v61)
          goto LABEL_120;
        v64 = &v38[16 * v40];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v51 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v51)
          goto LABEL_123;
        if (__OFADD__(v62, v67))
          goto LABEL_124;
        if (v62 + v67 >= v43)
        {
          v68 = v43 < v67;
LABEL_86:
          if (v68)
            v40 = v52;
          goto LABEL_88;
        }
LABEL_80:
        if ((v63 & 1) != 0)
          goto LABEL_119;
        v71 = &v38[16 * v40];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v51 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v51)
          goto LABEL_122;
        if (v74 < v62)
          goto LABEL_14;
LABEL_88:
        v79 = v40 - 1;
        if (v40 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v80 = v10;
        if (!v10)
          goto LABEL_137;
        v81 = v8;
        v82 = &v38[16 * v79];
        v83 = *(_QWORD *)v82;
        v84 = v38;
        v85 = v40;
        v86 = &v38[16 * v40];
        v87 = *((_QWORD *)v86 + 1);
        v88 = v80;
        sub_21F6EA440((char *)(v80 + 8 * *(_QWORD *)v82), (char *)(v80 + 8 * *(_QWORD *)v86), v80 + 8 * v87, v107);
        if (v108)
          goto LABEL_109;
        if (v87 < v83)
          goto LABEL_112;
        if (v85 > *((_QWORD *)v81 + 2))
          goto LABEL_113;
        *(_QWORD *)v82 = v83;
        *(_QWORD *)&v84[16 * v79 + 8] = v87;
        v89 = *((_QWORD *)v81 + 2);
        if (v85 >= v89)
          goto LABEL_114;
        v8 = v81;
        v11 = v89 - 1;
        memmove(v86, v86 + 16, 16 * (v89 - 1 - v85));
        v38 = v84;
        *((_QWORD *)v81 + 2) = v89 - 1;
        v10 = v88;
        v9 = v106;
        if (v89 <= 2)
          goto LABEL_14;
      }
    }
    v11 = 1;
LABEL_14:
    v3 = v104;
    if (v9 >= v104)
      goto LABEL_98;
  }
  if (__OFADD__(v12, v101))
    goto LABEL_134;
  if (v12 + v101 >= v3)
    v26 = v3;
  else
    v26 = v12 + v101;
  if (v26 >= v12)
  {
    if (v9 != v26)
    {
      v100 = v8;
      v27 = (uint64_t *)(v97 + 8 * v9);
      v103 = v26;
      do
      {
        v28 = *(_QWORD *)(v10 + 8 * v9);
        v29 = v12;
        v30 = v27;
        do
        {
          v31 = *v30;
          v32 = *(void **)(v28 + 16);
          swift_retain();
          swift_retain();
          v33 = objc_msgSend(v32, sel_age);
          v34 = objc_msgSend(*(id *)(v31 + 16), sel_age);
          swift_release();
          swift_release();
          if ((uint64_t)v34 >= (uint64_t)v33)
            break;
          if (!v10)
            goto LABEL_136;
          v35 = *v30;
          v28 = v30[1];
          *v30 = v28;
          v30[1] = v35;
          --v30;
          ++v29;
        }
        while (v9 != v29);
        ++v9;
        ++v27;
        v12 = v105;
      }
      while (v9 != v103);
      v9 = v103;
      v8 = v100;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  result = sub_21F7165F0();
  __break(1u);
  return result;
}

uint64_t sub_21F6EA344(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v15 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = (_QWORD *)(*a4 + 8 * a3 - 8);
LABEL_5:
    v7 = *(_QWORD *)(v5 + 8 * v4);
    v8 = v15;
    v16 = v6;
    while (1)
    {
      v9 = *v6;
      v10 = *(void **)(v7 + 16);
      swift_retain();
      swift_retain();
      v11 = objc_msgSend(v10, sel_age);
      v12 = objc_msgSend(*(id *)(v9 + 16), sel_age);
      swift_release();
      result = swift_release();
      if ((uint64_t)v12 >= (uint64_t)v11)
      {
LABEL_4:
        ++v4;
        v6 = v16 + 1;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v13 = *v6;
      v7 = v6[1];
      *v6 = v7;
      v6[1] = v13;
      --v6;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_21F6EA440(char *a1, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t result;
  char *v31;
  char *v32;
  char *v33;
  char *v34;

  v4 = __src;
  v5 = __src - a1;
  v6 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v6 = __src - a1;
  v7 = v6 >> 3;
  v8 = a3 - (_QWORD)__src;
  v9 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v9 = a3 - (_QWORD)__src;
  v10 = v9 >> 3;
  v34 = a1;
  v33 = a4;
  if (v7 >= v9 >> 3)
  {
    if (v8 >= -7)
    {
      if (a4 != __src || &__src[8 * v10] <= a4)
        memmove(a4, __src, 8 * v10);
      v19 = &a4[8 * v10];
      v32 = v19;
      v34 = v4;
      if (a1 < v4 && v8 >= 8)
      {
        v20 = (char *)(a3 - 8);
        v21 = v4;
        do
        {
          v31 = v4;
          v22 = v20 + 8;
          v23 = *((_QWORD *)v21 - 1);
          v21 -= 8;
          v24 = *(void **)(*((_QWORD *)v19 - 1) + 16);
          swift_retain();
          swift_retain();
          v25 = objc_msgSend(v24, sel_age);
          v26 = objc_msgSend(*(id *)(v23 + 16), sel_age);
          swift_release();
          swift_release();
          if ((uint64_t)v26 >= (uint64_t)v25)
          {
            v32 = v19 - 8;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
              *(_QWORD *)v20 = *((_QWORD *)v19 - 1);
            v21 = v31;
            v19 -= 8;
          }
          else
          {
            if (v22 != v31 || v20 >= v31)
              *(_QWORD *)v20 = *(_QWORD *)v21;
            v34 = v21;
          }
          if (v21 <= a1)
            break;
          v20 -= 8;
          v4 = v21;
        }
        while (v19 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v5 >= -7)
  {
    if (a4 != a1 || &a1[8 * v7] <= a4)
      memmove(a4, a1, 8 * v7);
    v11 = &a4[8 * v7];
    v32 = v11;
    if ((unint64_t)v4 < a3 && v5 >= 8)
    {
      v12 = a4;
      v13 = a1;
      do
      {
        v14 = *(_QWORD *)v12;
        v15 = *(void **)(*(_QWORD *)v4 + 16);
        swift_retain();
        swift_retain();
        v16 = objc_msgSend(v15, sel_age);
        v17 = objc_msgSend(*(id *)(v14 + 16), sel_age);
        swift_release();
        swift_release();
        if ((uint64_t)v17 >= (uint64_t)v16)
        {
          if (v13 != v12)
            *(_QWORD *)v13 = *(_QWORD *)v12;
          v12 += 8;
          v33 = v12;
          v18 = v4;
        }
        else
        {
          v18 = v4 + 8;
          if (v13 < v4 || v13 >= v18 || v13 != v4)
            *(_QWORD *)v13 = *(_QWORD *)v4;
        }
        v13 += 8;
        if (v12 >= v11)
          break;
        v4 = v18;
      }
      while ((unint64_t)v18 < a3);
      v34 = v13;
    }
LABEL_43:
    sub_21F6C0F58((void **)&v34, (const void **)&v33, &v32);
    return 1;
  }
  result = sub_21F716638();
  __break(1u);
  return result;
}

void sub_21F6EA75C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_21F716608();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2207CBAA0);
}

uint64_t sub_21F6EA7C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_21F6EA7E8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PASFamilyMemberPresentable, &qword_2554E2468, &qword_2554E2460, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_21F6EAA48);
}

uint64_t sub_21F6EA7E8(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_21F716608();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_21F716608();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_21F6EC8D8(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_21F716638();
  __break(1u);
  return result;
}

uint64_t (*sub_21F6EA9F0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21F6EAAC8(v6, a2, a3);
  return sub_21F6EAA44;
}

uint64_t (*sub_21F6EAA48(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21F6EAB3C(v6, a2, a3);
  return sub_21F6EAA44;
}

void sub_21F6EAA9C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_21F6EAAC8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2207CBA94](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_21F6EAB34;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F6EAB34()
{
  return swift_release();
}

uint64_t (*sub_21F6EAB3C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2207CBA94](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_21F6EC918;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F6EABA8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_21F6EAC10;
  return v5(v2 + 16);
}

uint64_t sub_21F6EAC10()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_21F6EAC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6EACC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  void *v43;
  uint64_t v44;
  id v45;
  _BYTE *v46;
  _QWORD *v47;
  NSObject *log;
  _QWORD *v49;
  _QWORD *v50;

  v1 = v0 + 80;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = *(void **)(v0 + 136);
  v3 = sub_21F715F3C();
  *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v3, (uint64_t)static PASLogger.common);
  v4 = v2;
  v5 = sub_21F715F24();
  v6 = sub_21F716374();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 136);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v49 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 141558274;
    *(_QWORD *)(v0 + 80) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v9 + 12) = 2112;
    *(_QWORD *)(v0 + 80) = v8;
    v10 = v8;
    sub_21F716428();
    *v49 = v8;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFamilyMemberImageProvider fetchImage for %{mask.hash}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v49, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
  }
  else
  {

  }
  if (objc_msgSend(*(id *)(v0 + 136), sel_isEnabledForDataclass_, *MEMORY[0x24BDB3DE8]))
  {
    v11 = *(void **)(v0 + 152);
    v12 = (void *)*MEMORY[0x24BDBA3E8];
    __swift_instantiateConcreteTypeFromMangledName(qword_2554E1660);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_21F7215D0;
    *(_QWORD *)(v13 + 32) = v12;
    sub_21F7161E8();
    v14 = v12;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E23F0);
    v15 = (void *)sub_21F7161C4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = 0;
    v16 = objc_msgSend(v11, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v15, v0 + 80);

    v17 = *(void **)(v0 + 80);
    if (v16)
    {
      v18 = v16;
      v19 = v17;
      v20 = v18;
      v21 = sub_21F715F24();
      v22 = sub_21F716350();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v47 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v23 = 141558274;
        *(_QWORD *)(v0 + 80) = 1752392040;
        sub_21F716428();
        *(_WORD *)(v23 + 12) = 2112;
        *(_QWORD *)(v0 + 80) = v20;
        log = v21;
        v24 = v20;
        sub_21F716428();
        *v47 = v16;

        v21 = log;
        _os_log_impl(&dword_21F63C000, log, v22, "PASFamilyMemberPickerDataSource fetchImage got contact %{mask.hash}@", (uint8_t *)v23, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v47, -1, -1);
        MEMORY[0x2207CC514](v23, -1, -1);
      }
      else
      {

      }
      v27 = objc_msgSend(v20, sel_thumbnailImageData);
      if (v27)
      {
        v28 = v27;
        v29 = sub_21F715D80();
        v31 = v30;

        return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v29, v31);
      }

      v1 = v0 + 80;
    }
    else
    {
      v25 = v17;
      v26 = (void *)sub_21F715D50();

      swift_willThrow();
    }
  }
  v33 = sub_21F715F24();
  v34 = sub_21F71635C();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_21F63C000, v33, v34, "PASFamilyMemberImageProvider fetchImage no contact image. Fallback to AAMyPhotoRequest", v35, 2u);
    MEMORY[0x2207CC514](v35, -1, -1);
  }
  v36 = *(_QWORD *)(v0 + 136);

  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE049E0]), sel_initWithAccount_, v36);
  *(_QWORD *)(v0 + 168) = v37;
  if (v37)
  {
    v38 = v37;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_21F6EB448;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_21F6E790C;
    *(_QWORD *)(v0 + 104) = &block_descriptor_8;
    objc_msgSend(v38, sel_performRequestWithHandler_, v1);
    return swift_continuation_await();
  }
  else
  {
    v39 = *(id *)(v0 + 136);
    v40 = sub_21F715F24();
    v41 = sub_21F71635C();
    v42 = os_log_type_enabled(v40, v41);
    v43 = *(void **)(v0 + 136);
    if (v42)
    {
      v44 = swift_slowAlloc();
      v50 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v44 = 141558274;
      *(_QWORD *)(v0 + 80) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v44 + 12) = 2112;
      *(_QWORD *)(v0 + 80) = v43;
      v45 = v43;
      sub_21F716428();
      *v50 = v36;

      _os_log_impl(&dword_21F63C000, v40, v41, "PASFamilyMemberImageProvider failed to fetchImage for account %{mask.hash}@. A request could not be made.", (uint8_t *)v44, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v50, -1, -1);
      MEMORY[0x2207CC514](v44, -1, -1);
    }
    else
    {

      v40 = *(NSObject **)(v0 + 136);
    }

    sub_21F6EBA5C();
    swift_allocError();
    *v46 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6EB448()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21F6EB4EC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  _BYTE *v29;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  NSObject *log;
  os_log_type_t type;
  uint64_t v42;
  uint64_t v43[2];

  v43[1] = *MEMORY[0x24BDAC8D0];
  v2 = *(void **)(v0 + 120);
  v1 = *(void **)(v0 + 128);
  if (v1 && (objc_opt_self(), (v3 = swift_dynamicCastObjCClass()) != 0))
  {
    v4 = (void *)v3;
    v5 = v1;
    v6 = objc_msgSend(v4, sel_photoData);
    if (v6)
    {
      v7 = v6;
      v8 = *(void **)(v0 + 168);
      v9 = sub_21F715D80();
      v11 = v10;

    }
    else
    {
      v31 = sub_21F715F24();
      v32 = sub_21F71635C();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_21F63C000, v31, v32, "PASFamilyMemberImageProvider fetchImage no photo data in AAPhotoResponse. Fallback to monogram", v33, 2u);
        MEMORY[0x2207CC514](v33, -1, -1);
      }
      v7 = *(void **)(v0 + 168);
      v35 = *(_QWORD *)(v0 + 136);
      v34 = *(_QWORD **)(v0 + 144);

      v36 = v34[3];
      v37 = v34[4];
      __swift_project_boxed_opaque_existential_1(v34, v36);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 8))(v35, v36, v37);
      v11 = v38;
      v8 = v5;
    }

    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v9, v11);
  }
  else
  {
    v12 = *(void **)(v0 + 136);
    v13 = v2;
    v14 = v12;
    v15 = v1;
    v16 = v13;
    v17 = v14;
    v18 = v15;
    v19 = sub_21F715F24();
    v20 = sub_21F71635C();
    v21 = os_log_type_enabled(v19, v20);
    v22 = *(void **)(v0 + 136);
    if (v21)
    {
      type = v20;
      v23 = swift_slowAlloc();
      v39 = (_QWORD *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v43[0] = v42;
      *(_DWORD *)v23 = 141558786;
      *(_QWORD *)(v0 + 80) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v23 + 12) = 2112;
      *(_QWORD *)(v0 + 80) = v22;
      log = v19;
      v24 = v22;
      sub_21F716428();
      *v39 = v22;

      *(_WORD *)(v23 + 22) = 2160;
      *(_QWORD *)(v0 + 80) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v23 + 32) = 2080;
      *(_QWORD *)(v0 + 80) = v1;
      v25 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E23E0);
      v26 = sub_21F716128();
      *(_QWORD *)(v0 + 80) = sub_21F644208(v26, v27, v43);
      sub_21F716428();
      swift_bridgeObjectRelease();

      v19 = log;
      _os_log_impl(&dword_21F63C000, log, type, "PASFamilyMemberImageProvider failed to fetchImage for account %{mask.hash}@. the response was not in the correct format: %{mask.hash}s", (uint8_t *)v23, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v39, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v42, -1, -1);
      MEMORY[0x2207CC514](v23, -1, -1);
    }
    else
    {

    }
    v28 = *(void **)(v0 + 168);
    sub_21F6EBA5C();
    swift_allocError();
    *v29 = 1;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6EB96C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s21ProximityAppleIDSetup36PASFamilyMemberPickerDataSourceErrorO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_21F6EBA20()
{
  unint64_t result;

  result = qword_2554DB318;
  if (!qword_2554DB318)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554DB318);
  }
  return result;
}

unint64_t sub_21F6EBA5C()
{
  unint64_t result;

  result = qword_2554E22F0;
  if (!qword_2554E22F0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFamilyMemberPickerDataSourceError, &type metadata for PASFamilyMemberPickerDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E22F0);
  }
  return result;
}

unint64_t sub_21F6EBAA4()
{
  unint64_t result;

  result = qword_2554E2300;
  if (!qword_2554E2300)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFamilyMemberPickerDataSourceError, &type metadata for PASFamilyMemberPickerDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E2300);
  }
  return result;
}

unint64_t sub_21F6EBAE8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6EBB1C();
  a1[2] = sub_21F6EBB60();
  result = sub_21F6EBBA4();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6EBB1C()
{
  unint64_t result;

  result = qword_2554E2308;
  if (!qword_2554E2308)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFamilyMemberPickerDataSourceError, &type metadata for PASFamilyMemberPickerDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E2308);
  }
  return result;
}

unint64_t sub_21F6EBB60()
{
  unint64_t result;

  result = qword_2554E2310;
  if (!qword_2554E2310)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFamilyMemberPickerDataSourceError, &type metadata for PASFamilyMemberPickerDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E2310);
  }
  return result;
}

unint64_t sub_21F6EBBA4()
{
  unint64_t result;

  result = qword_2554E2318;
  if (!qword_2554E2318)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFamilyMemberPickerDataSourceError, &type metadata for PASFamilyMemberPickerDataSourceError);
    atomic_store(result, (unint64_t *)&qword_2554E2318);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PASFamilyMemberPickerDataSourceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F6EBC38 + 4 * byte_21F722285[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F6EBC6C + 4 * byte_21F722280[v4]))();
}

uint64_t sub_21F6EBC6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6EBC74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6EBC7CLL);
  return result;
}

uint64_t sub_21F6EBC88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6EBC90);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F6EBC94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6EBC9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASFamilyMemberPickerDataSourceError()
{
  return &type metadata for PASFamilyMemberPickerDataSourceError;
}

uint64_t type metadata accessor for PASFamilyMemberImageProvider()
{
  return objc_opt_self();
}

uint64_t destroy for PASFamilyMemberPickerDataSource(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 16);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PASFamilyMemberPickerDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for PASFamilyMemberPickerDataSource(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for PASFamilyMemberPickerDataSource(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PASFamilyMemberPickerDataSource(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PASFamilyMemberPickerDataSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASFamilyMemberPickerDataSource()
{
  return &type metadata for PASFamilyMemberPickerDataSource;
}

uint64_t sub_21F6EBF7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6EBF94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  _BYTE *v24;
  _QWORD *v25;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 144);
  v2 = sub_21F715F3C();
  *(_QWORD *)(v0 + 152) = __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F716374();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 144);
  if (v6)
  {
    v8 = swift_slowAlloc();
    v25 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 141558274;
    *(_QWORD *)(v0 + 80) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v8 + 12) = 2112;
    *(_QWORD *)(v0 + 80) = v7;
    v9 = v4;
    v10 = v7;
    sub_21F716428();
    *v25 = v7;

    v4 = v9;
    _os_log_impl(&dword_21F63C000, v9, v5, "PASFamilyMemberImageProvider fetchImage for %{mask.hash}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v25, -1, -1);
    MEMORY[0x2207CC514](v8, -1, -1);
  }
  else
  {

  }
  v11 = objc_msgSend(*(id *)(v0 + 144), sel_hashedDSID);
  if (v11)
  {
    v12 = v11;
    sub_21F716104();

    v13 = (void *)sub_21F7160E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE30A90]), sel_initWithFamilyMemberHashedDSID_size_localFallback_, v13, 1, 1);
  *(_QWORD *)(v0 + 160) = v14;

  if (v14)
  {
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_21F6EC3E0;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_21F6E7848;
    *(_QWORD *)(v0 + 104) = &block_descriptor_12;
    objc_msgSend(v14, sel_startRequestWithCompletionHandler_, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    v16 = *(id *)(v0 + 144);
    v17 = sub_21F715F24();
    v18 = sub_21F71635C();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(void **)(v0 + 144);
    if (v19)
    {
      v21 = swift_slowAlloc();
      v22 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v21 = 141558274;
      *(_QWORD *)(v0 + 80) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v21 + 12) = 2112;
      *(_QWORD *)(v0 + 80) = v20;
      v23 = v20;
      sub_21F716428();
      *v22 = v20;

      _os_log_impl(&dword_21F63C000, v17, v18, "PASFamilyMemberImageProvider failed to fetchImage for family member%{mask.hash}@. A request could not be made.", (uint8_t *)v21, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v22, -1, -1);
      MEMORY[0x2207CC514](v21, -1, -1);
    }
    else
    {

      v17 = *(NSObject **)(v0 + 144);
    }

    sub_21F6EBA5C();
    swift_allocError();
    *v24 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6EC3E0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21F6EC440()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v11;
  _BYTE *v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 128);
  if (v1 >> 60 == 15)
  {
    v2 = *(id *)(v0 + 144);
    v3 = sub_21F715F24();
    v4 = sub_21F71635C();
    v5 = os_log_type_enabled(v3, v4);
    v6 = *(void **)(v0 + 144);
    if (v5)
    {
      v7 = swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 141558274;
      *(_QWORD *)(v0 + 80) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v7 + 12) = 2112;
      *(_QWORD *)(v0 + 80) = v6;
      v8 = v6;
      sub_21F716428();
      *v13 = v6;

      _os_log_impl(&dword_21F63C000, v3, v4, "PASFamilyMemberPickerDataSource failed to fetchImage for %{mask.hash}@. no image data was returned.", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v13, -1, -1);
      MEMORY[0x2207CC514](v7, -1, -1);
    }
    else
    {

      v3 = *(NSObject **)(v0 + 144);
    }
    v11 = *(void **)(v0 + 160);

    sub_21F6EBA5C();
    swift_allocError();
    *v12 = 1;
    swift_willThrow();

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 120);

    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v9, v1);
  }
}

uint64_t sub_21F6EC648()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6EC688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_21F656988;
  return sub_21F6E90FC(a1, a2, v7, v6);
}

uint64_t sub_21F6EC6F4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 48);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_21F6EC748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = v1 + 32;
  v5 = *(_QWORD *)(v1 + 112);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_21F651418;
  v6[3] = v4;
  v6[4] = v5;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6EC7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6EC804(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F6EC844()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6EC868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F651418;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2554E2448 + dword_2554E2448))(a1, v4);
}

uint64_t sub_21F6EC8D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PASFlowStepSendSignInResults.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647710(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_account, a1);
}

uint64_t PASFlowStepSendSignInResults.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[33] = v0;
  v1[34] = sub_21F7162A8();
  v1[35] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[36] = v2;
  *v2 = v1;
  v2[1] = sub_21F6EC99C;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F6EC99C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc();
  v3 = sub_21F716248();
  if (!v0)
  {
    *(_QWORD *)(v2 + 304) = v3;
    *(_QWORD *)(v2 + 312) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_21F6ECA24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 18));
  swift_release();
  v1 = v0[21];
  v2 = v0[22];
  __swift_project_boxed_opaque_existential_1(v0 + 18, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[40] = v3;
  *v3 = v0;
  v3[1] = sub_21F6ECADC;
  return v5(v0 + 23, v1, v2);
}

uint64_t sub_21F6ECADC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6ECB3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v1 = v0[33];
  v2 = v0[26];
  __swift_project_boxed_opaque_existential_1(v0 + 23, v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E24A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_BYTE *)(inited + 32) = 2;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_authResults);
  *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  *(_QWORD *)(inited + 40) = v4;
  swift_bridgeObjectRetain();
  v5 = sub_21F640C2C(inited);
  v0[42] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v0[43] = v6;
  *v6 = v0;
  v6[1] = sub_21F6ECC44;
  return sub_21F64B604((uint64_t)v0 + 137, 3, 0, 0, 1, v5, v2, MEMORY[0x24BEE1328]);
}

uint64_t sub_21F6ECC44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6ECCB0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 137);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 144);
  if ((v1 & 1) != 0)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v2 = sub_21F715F3C();
    __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
    v3 = sub_21F715F24();
    v4 = sub_21F716374();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      v6 = "PASFlowStepSendSignInResults sent results to source device";
LABEL_10:
      _os_log_impl(&dword_21F63C000, v3, v4, v6, v5, 2u);
      MEMORY[0x2207CC514](v5, -1, -1);
    }
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v3 = sub_21F715F24();
    v4 = sub_21F71635C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      v6 = "PASFlowStepSendSignInResults failed to send to source device";
      goto LABEL_10;
    }
  }

  v8 = *(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v9 = MEMORY[0x2207CC5BC](v8);
  *(_QWORD *)(v0 + 360) = v9;
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 264);
    v11 = *(_QWORD *)(v8 + 8);
    ObjectType = swift_getObjectType();
    sub_21F647710(v10 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_account, v0 + 88);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v10
                                      + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_authResults);
    *(_BYTE *)(v0 + 136) = 0;
    v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 24) + *(_QWORD *)(v11 + 24));
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v13;
    *v13 = v0;
    v13[1] = sub_21F6ECF60;
    return v17(v0 + 88, ObjectType, v11);
  }
  else
  {
    swift_release();
    v15 = *(_QWORD *)(v0 + 264);
    sub_21F658AF4();
    swift_allocError();
    *(_OWORD *)v16 = xmmword_21F7225B0;
    *(_QWORD *)(v16 + 16) = &unk_2554E2498;
    *(_QWORD *)(v16 + 24) = v15;
    *(_BYTE *)(v16 + 32) = 0;
    swift_retain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6ECF60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F698B34(v1 + 88);
  return swift_task_switch();
}

uint64_t sub_21F6ECFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = *(_QWORD *)(v0 + 264);
  sub_21F658AF4();
  swift_allocError();
  *(_OWORD *)v2 = xmmword_21F7225B0;
  *(_QWORD *)(v2 + 16) = &unk_2554E2498;
  *(_QWORD *)(v2 + 24) = v1;
  *(_BYTE *)(v2 + 32) = 0;
  swift_retain();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6ED054()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6ED088()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  v1 = *(void **)(v0 + 328);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 144);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v22 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 256) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 248) = sub_21F644208(v10, v11, &v22);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepSendSignInResults failed to send to source\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v13 = MEMORY[0x2207CC5BC](v12);
  *(_QWORD *)(v0 + 360) = v13;
  if (v13)
  {
    v14 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType();
    sub_21F647710(v14 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_account, v0 + 88);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v14
                                      + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_authResults);
    *(_BYTE *)(v0 + 136) = 0;
    v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v15 + 24) + *(_QWORD *)(v15 + 24));
    swift_bridgeObjectRetain();
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v17;
    *v17 = v0;
    v17[1] = sub_21F6ECF60;
    return v21(v0 + 88, ObjectType, v15);
  }
  else
  {
    swift_release();
    v19 = *(_QWORD *)(v0 + 264);
    sub_21F658AF4();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_21F7225B0;
    *(_QWORD *)(v20 + 16) = &unk_2554E2498;
    *(_QWORD *)(v20 + 24) = v19;
    *(_BYTE *)(v20 + 32) = 0;
    swift_retain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6ED3C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 184);
  v1 = *(void **)(v0 + 352);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 144);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v22 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 256) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 248) = sub_21F644208(v10, v11, &v22);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepSendSignInResults failed to send to source\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 264) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v13 = MEMORY[0x2207CC5BC](v12);
  *(_QWORD *)(v0 + 360) = v13;
  if (v13)
  {
    v14 = *(_QWORD *)(v0 + 264);
    v15 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType();
    sub_21F647710(v14 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_account, v0 + 88);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v14
                                      + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_authResults);
    *(_BYTE *)(v0 + 136) = 0;
    v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v15 + 24) + *(_QWORD *)(v15 + 24));
    swift_bridgeObjectRetain();
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v17;
    *v17 = v0;
    v17[1] = sub_21F6ECF60;
    return v21(v0 + 88, ObjectType, v15);
  }
  else
  {
    swift_release();
    v19 = *(_QWORD *)(v0 + 264);
    sub_21F658AF4();
    swift_allocError();
    *(_OWORD *)v20 = xmmword_21F7225B0;
    *(_QWORD *)(v20 + 16) = &unk_2554E2498;
    *(_QWORD *)(v20 + 24) = v19;
    *(_BYTE *)(v20 + 32) = 0;
    swift_retain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6ED710()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F65C168(v0);
}

void PASFlowStepSendSignInResults.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepSendSignInResults.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6ED7B0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_account);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t PASFlowStepSendSignInResults.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_account);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PASFlowStepSendSignInResults.__deallocating_deinit()
{
  PASFlowStepSendSignInResults.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6ED8E0()
{
  return type metadata accessor for PASFlowStepSendSignInResults();
}

uint64_t type metadata accessor for PASFlowStepSendSignInResults()
{
  uint64_t result;

  result = qword_2554E24E0;
  if (!qword_2554E24E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6ED924()
{
  return swift_updateClassMetadata2();
}

uint64_t PASFlowStepConnectPeer.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = swift_allocObject();
  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v4 + v5) = v6;
  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v4 + v7) = v8;
  v9 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = -1;
  v10 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_21F6EDA5C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_21F6EDAAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F6EF3FC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21F6EDAD8()
{
  sub_21F6EF8A0();
  return sub_21F7168C0();
}

uint64_t sub_21F6EDB00()
{
  sub_21F6EF8A0();
  return sub_21F7168B4();
}

uint64_t PASFlowStepConnectPeer.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[25] = v0;
  v1[26] = sub_21F7162A8();
  v1[27] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[28] = v2;
  *v2 = v1;
  v2[1] = sub_21F6EDBC8;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F6EDBC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6EDC90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;

  v1 = (uint64_t *)(v0 + 200);
  swift_release();
  swift_retain();
  sub_21F656B40(v0 + 56);
  swift_release();
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (*(_QWORD *)(v0 + 120))
  {
    v4 = v0 + 16;
    sub_21F64756C((__int128 *)(v0 + 96), v0 + 16);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    if (qword_2554DA718 != -1)
      swift_once();
    v5 = sub_21F715F3C();
    __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
    sub_21F647710(v0 + 16, v0 + 136);
    v6 = sub_21F715F24();
    v7 = sub_21F716350();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v22 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v8 = 141558274;
      *(_QWORD *)(v0 + 176) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v8 + 12) = 2112;
      v10 = *(_QWORD *)(v0 + 160);
      v9 = *(_QWORD *)(v0 + 168);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v10);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 56))(v10, v9);
      if (v12)
      {
        v13 = v11;
        v14 = v12;
        sub_21F66A660();
        swift_allocError();
        *v15 = v13;
        v15[1] = v14;
        v16 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v0 + 192) = v16;
        sub_21F716428();
      }
      else
      {
        *(_QWORD *)(v0 + 184) = 0;
        sub_21F716428();
        v16 = 0;
      }
      *v22 = v16;
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
      _os_log_impl(&dword_21F63C000, v6, v7, "PASFlowStepConnectPeer prepareForPresentation targetAccount %{mask.hash}@ already exists", (uint8_t *)v8, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v22, -1, -1);
      MEMORY[0x2207CC514](v8, -1, -1);

      v4 = v0 + 16;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);

    }
    v19 = *v1;
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v20 = 0xD000000000000015;
    *(_QWORD *)(v20 + 8) = 0x800000021F729FD0;
    *(_QWORD *)(v20 + 16) = &unk_2554E26A8;
    *(_QWORD *)(v20 + 24) = v19;
    *(_BYTE *)(v20 + 32) = 0;
    swift_retain();
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0Tm(v4);
  }
  else
  {
    v17 = *v1;
    sub_21F6476AC(v0 + 96, &qword_2554DEF00);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v18 = 0xD00000000000002CLL;
    *(_QWORD *)(v18 + 8) = 0x800000021F729FA0;
    *(_QWORD *)(v18 + 16) = &unk_2554E2698;
    *(_QWORD *)(v18 + 24) = v17;
    *(_BYTE *)(v18 + 32) = 0;
    swift_retain();
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6EE060()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6EE0C0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 24) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6EE12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_21F6EF578();
  v2 = swift_allocError();
  v3 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result);
  *(_QWORD *)v3 = v2;
  v5 = *(_BYTE *)(v3 + 8);
  *(_BYTE *)(v3 + 8) = 1;
  sub_21F674A0C(v4, v5);
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6EE1A4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 24) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6EE210()
{
  uint64_t v0;

  swift_release();
  sub_21F6EE244();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6EE244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2940);
  MEMORY[0x24BDAC7A8](v20);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE878);
  MEMORY[0x24BDAC7A8](v19);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2948);
  v21 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v5 = PASFlowStepBase.startTimeout(seconds:with:)(60, (uint64_t)&unk_2554E2958, v0);
  swift_release();
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__deviceProvider);
  swift_beginAccess();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(_QWORD *)(v6 + 24);
    swift_retain();
  }
  else
  {
    v8 = qword_2554DA6A0;
    swift_retain();
    if (v8 != -1)
      swift_once();
    v9 = sub_21F63EB84();
    v7 = v10;
    *(_QWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 24) = v10;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v7 + 48))(ObjectType, v7);
  swift_unknownObjectRelease();
  swift_retain();
  sub_21F656B40((uint64_t)v22);
  swift_release();
  v12 = v23;
  v13 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
  v14 = MEMORY[0x24BDB9EE8];
  sub_21F6A1030(&qword_2554E1148, &qword_2554DE878, MEMORY[0x24BDB9EE8]);
  sub_21F6A1030(&qword_2554E2960, &qword_2554E2940, v14);
  sub_21F715F48();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v5;
  *(_QWORD *)(v15 + 24) = v1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_21F6EF638;
  *(_QWORD *)(v16 + 24) = v15;
  sub_21F6A1030(&qword_2554E2968, &qword_2554E2948, MEMORY[0x24BDB9450]);
  swift_retain();
  swift_retain();
  sub_21F715FF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  swift_beginAccess();
  sub_21F715F54();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_21F6EE5D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6EE630()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v19;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 24);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 24);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v10 = v8;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v11;
    sub_21F716428();
    *v19 = v11;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepConnectPeer waitForPeerToBecomeReady timeout.\n%{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v19, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 40);
  v14 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  sub_21F7162A8();
  swift_retain();
  v15 = sub_21F71629C();
  v16 = (_QWORD *)swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  v16[2] = v15;
  v16[3] = v17;
  v16[4] = v13;
  sub_21F6B4038(v12, (uint64_t)&unk_2554E2988, (uint64_t)v16);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6EE878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 120) = a4;
  sub_21F7162A8();
  *(_QWORD *)(v4 + 128) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6EE8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release();
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__deviceProvider);
  swift_beginAccess();
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v2 + 24);
    swift_retain();
  }
  else
  {
    v4 = qword_2554DA6A0;
    swift_retain();
    if (v4 != -1)
      swift_once();
    v5 = sub_21F63EB84();
    v3 = v6;
    *(_QWORD *)(v2 + 16) = v5;
    *(_QWORD *)(v2 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  swift_unknownObjectRelease();
  v8 = *(_QWORD *)(v0 + 40);
  sub_21F6476AC(v0 + 16, &qword_2554DA770);
  if (!v8)
    goto LABEL_13;
  swift_retain();
  sub_21F656B40(v0 + 16);
  swift_release();
  v9 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v11 = *(_QWORD *)(v0 + 80);
  sub_21F6476AC(v0 + 56, (uint64_t *)&unk_2554DB8A0);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
    v13 = *(void **)v12;
    *(_QWORD *)v12 = 1;
    v14 = *(_BYTE *)(v12 + 8);
    *(_BYTE *)(v12 + 8) = 0;
    sub_21F674A0C(v13, v14);
    if (qword_2554DA718 != -1)
      swift_once();
    v15 = sub_21F715F3C();
    __swift_project_value_buffer(v15, (uint64_t)static PASLogger.common);
    v16 = sub_21F715F24();
    v17 = sub_21F71635C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21F63C000, v16, v17, "PASFlowStepConnectPeer waitForPeerToBecomeReady timer failed BUT the device and account contexts were present. This is unexpected, but we can continue.", v18, 2u);
      MEMORY[0x2207CC514](v18, -1, -1);
    }

  }
  else
  {
LABEL_13:
    v19 = *(_QWORD *)(v0 + 120);
    sub_21F658AF4();
    v20 = swift_allocError();
    *(_OWORD *)v21 = 0u;
    *(_OWORD *)(v21 + 16) = 0u;
    *(_BYTE *)(v21 + 32) = 4;
    v22 = v19 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
    v23 = *(void **)(v19 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result);
    *(_QWORD *)v22 = v20;
    LOBYTE(v21) = *(_BYTE *)(v22 + 8);
    *(_BYTE *)(v22 + 8) = 1;
    sub_21F674A0C(v23, v21);
  }
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6EEBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[40];
  _BYTE v32[24];
  uint64_t v33;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v11 = sub_21F715F3C();
  __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
  sub_21F647624(a1, (uint64_t)v32, &qword_2554DA770);
  sub_21F647624(a2, (uint64_t)v31, (uint64_t *)&unk_2554DB8A0);
  v12 = sub_21F715F24();
  v13 = sub_21F716374();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v30 = v15;
    *(_DWORD *)v14 = 136446466;
    v27 = a1;
    v28 = a4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA770);
    v16 = sub_21F716410();
    v29 = sub_21F644208(v16, v17, &v30);
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F6476AC((uint64_t)v32, &qword_2554DA770);
    *(_WORD *)(v14 + 12) = 2082;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DB8A0);
    v18 = sub_21F716410();
    v29 = sub_21F644208(v18, v19, &v30);
    a1 = v27;
    sub_21F716428();
    swift_bridgeObjectRelease();
    a4 = v28;
    sub_21F6476AC((uint64_t)v31, (uint64_t *)&unk_2554DB8A0);
    _os_log_impl(&dword_21F63C000, v12, v13, "PASFlowStepConnectPeer waitForPeerToBecomeReady sink got: %{public}s, %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v15, -1, -1);
    MEMORY[0x2207CC514](v14, -1, -1);
  }
  else
  {
    sub_21F6476AC((uint64_t)v32, &qword_2554DA770);
    sub_21F6476AC((uint64_t)v31, (uint64_t *)&unk_2554DB8A0);
  }

  v20 = *(_QWORD *)(a1 + 24);
  sub_21F647624(a2, (uint64_t)v32, (uint64_t *)&unk_2554DB8A0);
  if (!v20)
    return sub_21F6476AC((uint64_t)v32, (uint64_t *)&unk_2554DB8A0);
  v21 = v33;
  result = sub_21F6476AC((uint64_t)v32, (uint64_t *)&unk_2554DB8A0);
  if (v21)
  {
    v23 = sub_21F7162C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
    sub_21F7162A8();
    swift_retain();
    swift_retain();
    v24 = sub_21F71629C();
    v25 = (_QWORD *)swift_allocObject();
    v26 = MEMORY[0x24BEE6930];
    v25[2] = v24;
    v25[3] = v26;
    v25[4] = a3;
    v25[5] = a4;
    sub_21F6B4038((uint64_t)v10, (uint64_t)&unk_2554E2978, (uint64_t)v25);
    return swift_release();
  }
  return result;
}

uint64_t sub_21F6EEF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_21F7162A8();
  v5[4] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6EEF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  sub_21F7162D8();
  v2 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result);
  *(_QWORD *)v2 = 1;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = 0;
  sub_21F674A0C(v3, v4);
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepConnectPeer.nextStep()()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t (*v10)();
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result + 8);
  if (v1 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v11 = 0xD000000000000029;
    *(_QWORD *)(v11 + 8) = 0x800000021F729FF0;
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0;
    *(_BYTE *)(v11 + 32) = 1;
    swift_willThrow();
  }
  else
  {
    if ((v1 & 1) != 0)
    {
      v12 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result);
      v13 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
      swift_beginAccess();
      v14 = MEMORY[0x2207CC5BC](v13);
      v15 = *(_QWORD *)(v13 + 8);
      type metadata accessor for PASFlowStepSourceError();
      *(_QWORD *)(swift_allocObject() + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepSourceError_error) = v12;
      sub_21F6763A4(v12, v1);
      v0 = sub_21F6BC954(v14, v15);
      swift_unknownObjectRelease();
      v9 = (unint64_t *)&unk_2554DF580;
      v10 = type metadata accessor for PASFlowStepSourceError;
    }
    else
    {
      v2 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
      swift_beginAccess();
      v3 = MEMORY[0x2207CC5BC](v2);
      v4 = *(_QWORD *)(v2 + 8);
      type metadata accessor for PASFlowStepSelectPicker();
      v5 = swift_allocObject();
      v6 = (_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension);
      *v6 = 0;
      v6[1] = 0;
      v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker__extensionCache;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA830);
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = 0;
      *(_QWORD *)(v5 + v7) = v8;
      v0 = sub_21F6BC954(v3, v4);
      swift_unknownObjectRelease();
      v9 = (unint64_t *)&unk_2554E26B0;
      v10 = type metadata accessor for PASFlowStepSelectPicker;
    }
    sub_21F65EAB0(v9, (uint64_t (*)(uint64_t))v10);
  }
  return v0;
}

uint64_t PASFlowStepConnectPeer.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v2 + v5) = v6;
  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v2 + v7) = v8;
  v9 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = -1;
  v10 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v10;
}

void sub_21F6EF2E0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result + 8));
}

uint64_t PASFlowStepConnectPeer.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result + 8));
  return v0;
}

uint64_t PASFlowStepConnectPeer.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result + 8));
  return swift_deallocClassInstance();
}

uint64_t sub_21F6EF3E8()
{
  return PASFlowStepConnectPeer.nextStep()();
}

uint64_t sub_21F6EF3FC()
{
  return 0x676E697473697865;
}

uint64_t sub_21F6EF420()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656988;
  return sub_21F6EE1A4(v0);
}

uint64_t sub_21F6EF468()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656988;
  return sub_21F6EE0C0(v0);
}

uint64_t sub_21F6EF4B0(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DD358, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepConnectPeer);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepConnectPeer()
{
  uint64_t result;

  result = qword_2554E26E0;
  if (!qword_2554E26E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6EF520()
{
  return type metadata accessor for PASFlowStepConnectPeer();
}

uint64_t sub_21F6EF528()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_21F6EF578()
{
  unint64_t result;

  result = qword_2554E2938;
  if (!qword_2554E2938)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722838, &type metadata for PASFlowStepConnectPeerError);
    atomic_store(result, (unint64_t *)&qword_2554E2938);
  }
  return result;
}

uint64_t sub_21F6EF5BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  return sub_21F6EE5D4(a1, v1);
}

uint64_t sub_21F6EF60C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6EF638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21F6EEBBC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_21F6EF640()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6EF664(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, a1 + 40);
}

uint64_t sub_21F6EF688()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6EF6BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_21F651418;
  return sub_21F6EEF28(a1, v4, v5, v7, v6);
}

uint64_t sub_21F6EF734()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6EF760(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F6EE878(a1, v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for PASFlowStepConnectPeerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6EF80C + 4 * byte_21F722630[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6EF82C + 4 * byte_21F722635[v4]))();
}

_BYTE *sub_21F6EF80C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6EF82C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6EF834(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6EF83C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6EF844(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6EF84C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepConnectPeerError()
{
  return &type metadata for PASFlowStepConnectPeerError;
}

unint64_t sub_21F6EF86C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6EF8A0();
  a1[2] = sub_21F6EF8E4();
  result = sub_21F6EF928();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6EF8A0()
{
  unint64_t result;

  result = qword_2554E2990;
  if (!qword_2554E2990)
  {
    result = MEMORY[0x2207CC46C](&unk_21F72273C, &type metadata for PASFlowStepConnectPeerError);
    atomic_store(result, (unint64_t *)&qword_2554E2990);
  }
  return result;
}

unint64_t sub_21F6EF8E4()
{
  unint64_t result;

  result = qword_2554E2998;
  if (!qword_2554E2998)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7226F4, &type metadata for PASFlowStepConnectPeerError);
    atomic_store(result, (unint64_t *)&qword_2554E2998);
  }
  return result;
}

unint64_t sub_21F6EF928()
{
  unint64_t result;

  result = qword_2554E29A0;
  if (!qword_2554E29A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7226CC, &type metadata for PASFlowStepConnectPeerError);
    atomic_store(result, (unint64_t *)&qword_2554E29A0);
  }
  return result;
}

unint64_t sub_21F6EF970()
{
  unint64_t result;

  result = qword_2554E29A8;
  if (!qword_2554E29A8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722810, &type metadata for PASFlowStepConnectPeerError);
    atomic_store(result, (unint64_t *)&qword_2554E29A8);
  }
  return result;
}

uint64_t PASFlowStepSignInResult.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = swift_allocObject();
  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName(qword_2554DA840);
  v6 = swift_allocObject();
  *(_QWORD *)(v4 + v5) = v6;
  *(_QWORD *)(v6 + 16) = 0;
  v7 = (_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep);
  *v7 = 0;
  v7[1] = 0;
  v8 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t PASFlowStepSignInResult.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = sub_21F7162A8();
  v1[4] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_21F6EFAB0;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F6EFAB0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_21F716248();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v2[7] = v3;
    *v3 = v2;
    v3[1] = sub_21F65DC64;
    v3[13] = v2[2];
  }
  return swift_task_switch();
}

uint64_t sub_21F6EFB60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6EFB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__messageSessionProvider;
  v3 = (uint64_t *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__messageSessionProvider)
                 + 16);
  swift_beginAccess();
  if (*v3)
  {
    swift_retain();
  }
  else
  {
    v4 = qword_2554DA6A0;
    swift_retain();
    if (v4 != -1)
      swift_once();
    *v3 = sub_21F63FD84();
    swift_retain();
    swift_release();
  }
  swift_retain();
  swift_release();
  PASMessageSessionProvider.getMessageSession()(v0 + 16);
  swift_release();
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v5);
  v7 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(3u, 0, (uint64_t)&unk_2554E2C50, v7, v5, MEMORY[0x24BEE1328], v6);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  v8 = (uint64_t *)(*(_QWORD *)(v1 + v2) + 16);
  swift_beginAccess();
  if (*v8)
  {
    swift_retain();
  }
  else
  {
    v9 = qword_2554DA6A0;
    swift_retain();
    if (v9 != -1)
      swift_once();
    *v8 = sub_21F63FD84();
    swift_retain();
    swift_release();
  }
  swift_retain();
  swift_release();
  PASMessageSessionProvider.getMessageSession()(v0 + 16);
  swift_release();
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v10);
  v12 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(6u, 0, (uint64_t)&unk_2554E2C60, v12, v10, MEMORY[0x24BEE1328], v11);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F0024()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F6F0068()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F0098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = a4;
  v4[8] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6F00B4()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = Strong;
  if (!Strong)
  {
    **(_BYTE **)(v0 + 64) = 0;
    v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  v2 = Strong;
  v3 = sub_21F64D2A8(*(_QWORD *)(v0 + 72), 2);
  v6 = v3;
  if (!v3)
  {
    sub_21F655840();
    swift_allocError();
    *(_OWORD *)v18 = xmmword_21F718DA0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)(v18 + 24) = 0;
    *(_BYTE *)(v18 + 32) = 0;
    swift_willThrow();
    swift_release();
    v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  v7 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v8 = MEMORY[0x2207CC5BC](v7);
  v9 = *(_QWORD *)(v7 + 8);
  type metadata accessor for PASFlowStepRepairFamily();
  v10 = swift_allocObject();
  v11 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v10 + v11) = v12;
  v13 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v10 + v13) = v14;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_familyMember) = 0;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_error) = 0;
  *(_QWORD *)(v10 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_authResults) = v6;
  v15 = sub_21F6BC954(v8, v9);
  swift_unknownObjectRelease();
  v16 = sub_21F647438(&qword_2554E2C70, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepRepairFamily, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep);
  *v17 = v15;
  v17[1] = v16;
  swift_unknownObjectRelease();
  sub_21F7162A8();
  *(_QWORD *)(v0 + 96) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6F032C()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F6F036C()
{
  uint64_t v0;

  swift_release();
  **(_BYTE **)(v0 + 64) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F03AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = a4;
  v4[8] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6F03C8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 88) = Strong;
  if (!Strong)
  {
    v4 = 0;
LABEL_7:
    **(_BYTE **)(v0 + 64) = v4;
    v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  v2 = Strong;
  v3 = (void *)sub_21F64DF0C(*(_QWORD *)(v0 + 72), 6);
  *(_QWORD *)(v0 + 96) = v3;
  v5 = v3;
  if (!v3)
  {
    sub_21F655840();
    swift_allocError();
    *(_OWORD *)v8 = xmmword_21F722880;
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    *(_BYTE *)(v8 + 32) = 0;
    swift_willThrow();
    swift_release();
    v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  if (_s21ProximityAppleIDSetup22PASCDPEnrollmentStatusO8rawValueACSgSi_tcfC_0((unint64_t)objc_msgSend(v3, sel_integerValue)))
  {

    swift_release();
    v4 = 1;
    goto LABEL_7;
  }
  v9 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v10 = MEMORY[0x2207CC5BC](v9);
  v11 = *(_QWORD *)(v9 + 8);
  type metadata accessor for PASFlowStepConfirmExistingPasscode();
  v12 = swift_allocObject();
  v13 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v12 + v13) = v14;
  v15 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_QWORD *)(v16 + 48) = 0;
  *(_QWORD *)(v12 + v15) = v16;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode_authResults) = 0;
  v17 = sub_21F6BC954(v10, v11);
  swift_unknownObjectRelease();
  v18 = sub_21F647438(&qword_2554E2C68, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepConfirmExistingPasscode, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep);
  *v19 = v17;
  v19[1] = v18;
  swift_unknownObjectRelease();
  sub_21F7162A8();
  *(_QWORD *)(v0 + 104) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6F0660()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F6F06A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release();

  **(_BYTE **)(v0 + 64) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepSignInResult.nextStep()()
{
  uint64_t v0;
  uint64_t v2;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep))
    return swift_unknownObjectRetain();
  sub_21F658AF4();
  swift_allocError();
  *(_QWORD *)v2 = 0xD000000000000028;
  *(_QWORD *)(v2 + 8) = 0x800000021F72A060;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  return swift_willThrow();
}

uint64_t PASFlowStepSignInResult.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName(qword_2554DA840);
  v6 = swift_allocObject();
  *(_QWORD *)(v2 + v5) = v6;
  *(_QWORD *)(v6 + 16) = 0;
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep);
  *v7 = 0;
  v7[1] = 0;
  v8 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_21F6F07FC()
{
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t PASFlowStepSignInResult.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t PASFlowStepSignInResult.__deallocating_deinit()
{
  PASSourceFlowStepBase.deinit();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6F08BC()
{
  uint64_t v0;
  uint64_t v2;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep))
    return swift_unknownObjectRetain();
  sub_21F658AF4();
  swift_allocError();
  *(_QWORD *)v2 = 0xD000000000000028;
  *(_QWORD *)(v2 + 8) = 0x800000021F72A060;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  return swift_willThrow();
}

uint64_t sub_21F6F0954(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DB3A8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSignInResult, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepSignInResult()
{
  uint64_t result;

  result = qword_2554E29F8;
  if (!qword_2554E29F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6F09CC()
{
  return type metadata accessor for PASFlowStepSignInResult();
}

uint64_t sub_21F6F09D4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F6F0A20()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F6F0A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F656988;
  v7[9] = a3;
  v7[10] = v3;
  v7[8] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6F0AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F651418;
  v7[9] = a3;
  v7[10] = v3;
  v7[8] = a1;
  return swift_task_switch();
}

uint64_t ACAccount.altDSID.getter()
{
  return sub_21F6F169C((SEL *)&selRef_aa_altDSID);
}

uint64_t ACAccount.dsid.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = (void *)sub_21F7160E0();
  v2 = objc_msgSend(v0, sel_accountPropertyForKey_, v1);

  if (v2)
  {
    sub_21F716458();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_21F6F0C1C((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_21F64779C(0, (unint64_t *)&qword_2554DADD0);
    if (swift_dynamicCast())
      return v4;
    else
      return 0;
  }
  else
  {
    sub_21F649B5C((uint64_t)v6);
    return 0;
  }
}

uint64_t sub_21F6F0C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ACAccount.accountUsername.getter()
{
  return sub_21F6F169C((SEL *)&selRef_username);
}

uint64_t PASAccountWithImage.firstName.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_aa_firstName);
}

uint64_t PASAccountWithImage.accountUsername.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_username);
}

uint64_t PASAccountWithImage.altDSID.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_aa_altDSID);
}

_QWORD *PASAccountWithImage.__allocating_init(account:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t sub_21F6F0CD8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7461446567616D69;
  else
    return 0x746E756F636361;
}

uint64_t sub_21F6F0D14()
{
  char *v0;

  return sub_21F6F0CD8(*v0);
}

uint64_t sub_21F6F0D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6F1934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6F0D40()
{
  sub_21F6F11A0();
  return sub_21F7169E0();
}

uint64_t sub_21F6F0D68()
{
  sub_21F6F11A0();
  return sub_21F7169EC();
}

uint64_t static PASAccountWithImage.== infix(_:_:)()
{
  sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
  return sub_21F7163EC() & 1;
}

uint64_t PASAccountWithImage.imageData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_21F647CC0(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

_QWORD *PASAccountWithImage.init(account:imageData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t PASAccountWithImage.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PASAccountWithImage.init(from:)(a1);
  return v2;
}

unint64_t *PASAccountWithImage.init(from:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  unint64_t v21[2];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;

  v3 = v1;
  v5 = *v1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2C78);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6F11A0();
  sub_21F7169B0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21[1] = v5;
    v22 = v6;
    v25 = 0;
    sub_21F671A18();
    v9 = v23;
    sub_21F7166C8();
    v10 = v24;
    sub_21F64779C(0, &qword_2554E3110);
    sub_21F64779C(0, &qword_2554DD778);
    v11 = (id)sub_21F716380();
    v21[0] = *((_QWORD *)&v10 + 1);
    if (v11)
    {
      v12 = v10;
    }
    else
    {
      v12 = v10;
      if (qword_2554DA718 != -1)
        swift_once();
      v13 = sub_21F715F3C();
      __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
      v14 = sub_21F715F24();
      v15 = sub_21F71635C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        v17 = v15;
        v18 = v16;
        _os_log_impl(&dword_21F63C000, v14, v17, "PASAccountWithImage failed to init from decoder. Account is missing.", v16, 2u);
        MEMORY[0x2207CC514](v18, -1, -1);
      }

      v19 = objc_allocWithZone(MEMORY[0x24BDB4380]);
      v11 = objc_msgSend(v19, sel_init, v21[0]);
    }
    v3[2] = (unint64_t)v11;
    v25 = 1;
    sub_21F71668C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v9);
    sub_21F649BB0(v12, v21[0]);
    *(_OWORD *)(v3 + 3) = v24;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v3;
}

unint64_t sub_21F6F11A0()
{
  unint64_t result;

  result = qword_2554E2C80;
  if (!qword_2554E2C80)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722AD0, &type metadata for PASAccountWithImage.Key);
    atomic_store(result, (unint64_t *)&qword_2554E2C80);
  }
  return result;
}

uint64_t PASAccountWithImage.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;

  v3 = v1;
  v25 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2C88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6F11A0();
  sub_21F7169C8();
  v9 = (void *)objc_opt_self();
  v10 = v3[2];
  v23 = 0;
  v11 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v10, 1, &v23);
  v12 = v23;
  if (v11)
  {
    v13 = (void *)sub_21F715D80();
    v15 = v14;

    v23 = v13;
    v24 = v15;
    v22 = 0;
    sub_21F6715E0();
    sub_21F716758();
    if (v2 || (v16 = v3[4], v16 >> 60 == 15))
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return sub_21F649BB0((uint64_t)v13, v15);
    }
    else
    {
      v19 = (void *)v3[3];
      v23 = v19;
      v24 = v16;
      v22 = 1;
      v21 = v16;
      sub_21F647CD4((uint64_t)v19, v16);
      sub_21F716758();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_21F649BB0((uint64_t)v13, v15);
      return sub_21F649B9C((uint64_t)v19, v21);
    }
  }
  else
  {
    v18 = v12;
    sub_21F715D50();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t PASAccountWithImage.deinit()
{
  uint64_t v0;

  sub_21F649B9C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t PASAccountWithImage.__deallocating_deinit()
{
  uint64_t v0;

  sub_21F649B9C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

unint64_t *sub_21F6F1480@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t *result;

  v5 = swift_allocObject();
  result = PASAccountWithImage.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_21F6F14D4(_QWORD *a1)
{
  return PASAccountWithImage.encode(to:)(a1);
}

uint64_t PASAccountWithImage.dsid.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_21F7160E0();
  v3 = objc_msgSend(v1, sel_accountPropertyForKey_, v2);

  if (v3)
  {
    sub_21F716458();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_21F6F0C1C((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_21F64779C(0, (unint64_t *)&qword_2554DADD0);
    if (swift_dynamicCast())
      return v5;
    else
      return 0;
  }
  else
  {
    sub_21F649B5C((uint64_t)v7);
    return 0;
  }
}

uint64_t PASAccountWithImage.lastName.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_aa_lastName);
}

uint64_t PASAccountWithImage.appleID.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_appleID);
}

uint64_t PASAccountWithImage.formattedUsername.getter()
{
  return sub_21F6D2B54((SEL *)&selRef_aa_formattedUsername);
}

uint64_t PASAccountWithImage.isMe.getter()
{
  return 1;
}

uint64_t ACAccount.isMe.getter()
{
  return 1;
}

uint64_t sub_21F6F1610()
{
  return PASAccountWithImage.dsid.getter();
}

uint64_t sub_21F6F1630(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_aa_altDSID);
}

uint64_t sub_21F6F163C(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_aa_firstName);
}

uint64_t sub_21F6F1648(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_aa_lastName);
}

uint64_t sub_21F6F1654(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_username);
}

uint64_t sub_21F6F1660(uint64_t a1, uint64_t a2)
{
  return sub_21F6D2C40(a1, a2, (SEL *)&selRef_aa_formattedUsername);
}

uint64_t ACAccount.firstName.getter()
{
  return sub_21F6F169C((SEL *)&selRef_aa_firstName);
}

uint64_t ACAccount.lastName.getter()
{
  return sub_21F6F169C((SEL *)&selRef_aa_lastName);
}

uint64_t ACAccount.appleID.getter()
{
  return sub_21F6F169C((SEL *)&selRef_appleID);
}

uint64_t ACAccount.formattedUsername.getter()
{
  return sub_21F6F169C((SEL *)&selRef_aa_formattedUsername);
}

uint64_t sub_21F6F169C(SEL *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(v1, *a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_21F716104();

  return v4;
}

uint64_t ACAccount.imageData.getter()
{
  return 0;
}

unint64_t sub_21F6F1708(uint64_t a1)
{
  unint64_t result;

  result = sub_21F6F172C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F6F172C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554E2C90;
  if (!qword_2554E2C90)
  {
    v1 = type metadata accessor for PASAccountWithImage();
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAccountWithImage, v1);
    atomic_store(result, (unint64_t *)&qword_2554E2C90);
  }
  return result;
}

uint64_t type metadata accessor for PASAccountWithImage()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PASAccountWithImage.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F6F17DC + 4 * byte_21F722905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F6F1810 + 4 * byte_21F722900[v4]))();
}

uint64_t sub_21F6F1810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6F1818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6F1820);
  return result;
}

uint64_t sub_21F6F182C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6F1834);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F6F1838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6F1840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASAccountWithImage.Key()
{
  return &type metadata for PASAccountWithImage.Key;
}

unint64_t sub_21F6F1860()
{
  unint64_t result;

  result = qword_2554E2D48;
  if (!qword_2554E2D48)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722AA8, &type metadata for PASAccountWithImage.Key);
    atomic_store(result, (unint64_t *)&qword_2554E2D48);
  }
  return result;
}

unint64_t sub_21F6F18A8()
{
  unint64_t result;

  result = qword_2554E2D50;
  if (!qword_2554E2D50)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722A18, &type metadata for PASAccountWithImage.Key);
    atomic_store(result, (unint64_t *)&qword_2554E2D50);
  }
  return result;
}

unint64_t sub_21F6F18F0()
{
  unint64_t result;

  result = qword_2554E2D58;
  if (!qword_2554E2D58)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722A40, &type metadata for PASAccountWithImage.Key);
    atomic_store(result, (unint64_t *)&qword_2554E2D58);
  }
  return result;
}

uint64_t sub_21F6F1934(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t PASExtensionProvidedViewDetails.proxCardSubtitle.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle);
}

uint64_t PASExtensionProvidedViewDetails.biometricsNotEnrolledErrorSubtitle.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle);
}

uint64_t PASExtensionProvidedViewDetails.description.getter()
{
  sub_21F7164E8();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F7165CC();
  sub_21F716140();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1AF0);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return 0;
}

uint64_t PASExtensionProvidedViewDetails.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  char *v10;
  _BYTE v11[24];
  uint64_t v12;

  swift_getObjectType();
  sub_21F649B14(a1, (uint64_t)v11);
  if (!v12)
  {
    sub_21F649B5C((uint64_t)v11);
    goto LABEL_21;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle + 8);
  v4 = *(_QWORD *)&v10[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle + 8];
  if (!v3)
  {
    if (!v4)
      goto LABEL_10;
LABEL_20:

    goto LABEL_21;
  }
  if (!v4)
    goto LABEL_20;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle) == *(_QWORD *)&v10[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle]
    && v3 == v4;
  if (!v5 && (sub_21F716800() & 1) == 0)
    goto LABEL_20;
LABEL_10:
  v6 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle
                 + 8);
  v7 = *(_QWORD *)&v10[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle
                     + 8];
  if (!v6)
  {
    swift_bridgeObjectRetain();

    if (!v7)
      goto LABEL_26;
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v7)
  {
    if (*(_QWORD *)(v1
                   + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle) != *(_QWORD *)&v10[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle]
      || v6 != v7)
    {
      LOBYTE(v7) = sub_21F716800();
      goto LABEL_17;
    }

LABEL_26:
    LOBYTE(v7) = 1;
    return v7 & 1;
  }
LABEL_17:

  return v7 & 1;
}

uint64_t PASExtensionProvidedViewDetails.hash.getter()
{
  uint64_t v0;

  sub_21F716974();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle
                 + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  return sub_21F71695C();
}

char *PASExtensionProvidedViewDetails.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static PASExtensionProvidedViewDetails.supportsSecureCoding;
}

uint64_t static PASExtensionProvidedViewDetails.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return static PASExtensionProvidedViewDetails.supportsSecureCoding;
}

uint64_t static PASExtensionProvidedViewDetails.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static PASExtensionProvidedViewDetails.supportsSecureCoding = a1;
  return result;
}

uint64_t (*static PASExtensionProvidedViewDetails.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall PASExtensionProvidedViewDetails.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle + 8))
    v3 = sub_21F7160E0();
  else
    v3 = 0;
  v4 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle
                 + 8))
    v5 = sub_21F7160E0();
  else
    v5 = 0;
  v6 = (id)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

}

id PASExtensionProvidedViewDetails.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21F6F25DC();

  return v4;
}

id PASExtensionProvidedViewDetails.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_21F6F25DC();

  return v2;
}

id PASExtensionProvidedViewDetails.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t PASExtensionProvidedViewDetailsBuilder.proxCardSubtitle.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_proxCardSubtitle);
}

uint64_t PASExtensionProvidedViewDetailsBuilder.proxCardSubtitle.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_proxCardSubtitle);
}

uint64_t (*PASExtensionProvidedViewDetailsBuilder.proxCardSubtitle.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionProvidedViewDetailsBuilder.biometricsNotEnrolledErrorSubtitle.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_biometricsNotEnrolledErrorSubtitle);
}

uint64_t PASExtensionProvidedViewDetailsBuilder.biometricsNotEnrolledErrorSubtitle.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_biometricsNotEnrolledErrorSubtitle);
}

uint64_t (*PASExtensionProvidedViewDetailsBuilder.biometricsNotEnrolledErrorSubtitle.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id PASExtensionProvidedViewDetailsBuilder.build()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  char *v9;
  char *v10;
  objc_super v12;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_proxCardSubtitle);
  swift_beginAccess();
  v3 = *v1;
  v2 = v1[1];
  v4 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_biometricsNotEnrolledErrorSubtitle);
  swift_beginAccess();
  v6 = *v4;
  v5 = v4[1];
  v7 = (objc_class *)type metadata accessor for PASExtensionProvidedViewDetails();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = &v8[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle];
  *(_QWORD *)v9 = v3;
  *((_QWORD *)v9 + 1) = v2;
  v10 = &v8[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle];
  *(_QWORD *)v10 = v6;
  *((_QWORD *)v10 + 1) = v5;
  v12.receiver = v8;
  v12.super_class = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v12, sel_init);
}

id PASExtensionProvidedViewDetailsBuilder.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PASExtensionProvidedViewDetailsBuilder.init()()
{
  char *v0;
  char *v1;
  char *v2;
  objc_class *v3;
  objc_super v5;

  v1 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_proxCardSubtitle];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup38PASExtensionProvidedViewDetailsBuilder_biometricsNotEnrolledErrorSubtitle];
  v3 = (objc_class *)type metadata accessor for PASExtensionProvidedViewDetailsBuilder();
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v5.receiver = v0;
  v5.super_class = v3;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PASExtensionProvidedViewDetailsBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASExtensionProvidedViewDetailsBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21F6F25A0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_21F6F25DC()
{
  void *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_21F673640();
  v2 = v0;
  v3 = sub_21F7163E0();
  v4 = 0uLL;
  if (v3)
  {
    v5 = (void *)v3;
    sub_21F7160F8();

    v4 = 0uLL;
  }
  *(_OWORD *)&v2[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_proxCardSubtitle] = v4;
  v6 = sub_21F7163E0();
  v7 = 0uLL;
  if (v6)
  {
    v8 = (void *)v6;
    sub_21F7160F8();

    v7 = 0uLL;
  }
  *(_OWORD *)&v2[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASExtensionProvidedViewDetails_biometricsNotEnrolledErrorSubtitle] = v7;

  v10.receiver = v2;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for PASExtensionProvidedViewDetails()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASExtensionProvidedViewDetailsBuilder()
{
  return objc_opt_self();
}

uint64_t Result<>.init(catching:)(uint64_t a1, int *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2[2] = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v4 = sub_21F716980();
  v2[3] = v4;
  v2[4] = *(_QWORD *)(v4 - 8);
  v5 = swift_task_alloc();
  v2[5] = v5;
  v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  v2[6] = v6;
  *v6 = v2;
  v6[1] = sub_21F6F27EC;
  return v8(v5);
}

uint64_t sub_21F6F27EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F2850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F28B4()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASExtensionHandle.bundleIdentifier.getter()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_21F715F00();
}

uint64_t PASExtensionHandle.manifest()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F293C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_21F67F70C;
  return sub_21F695BDC();
}

uint64_t PASExtensionHandle.authenticator(for:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = *(_QWORD *)(v2 + 56);
  v6 = type metadata accessor for PASExtensionAuthController();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v5;
  a2[3] = v6;
  a2[4] = (uint64_t)&off_24E457998;
  *a2 = v7;
  v8 = a1;
  return swift_retain();
}

uint64_t PASExtensionHandle.signInSucceeded(appleID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6F2A04()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_21F6F2A58;
  return sub_21F696C18(v0[2], v0[3]);
}

uint64_t sub_21F6F2A58()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t PASExtensionHandle.typeErasedIdentity.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_1;

  v3 = (_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = __swift_project_boxed_opaque_existential_1(v3, v4);
  a1[3] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return (*(uint64_t (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1, v5, v4);
}

uint64_t PASExtensionHandle.viewDetails(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6F2B0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_21F6F2B60;
  return sub_21F696038(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21F6F2B60(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t PASExtensionHandle.shouldPerformLocalAuthentication()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F2BCC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_21F6E3208;
  return sub_21F697054();
}

uint64_t PASExtensionHandle.didPerformLocalAuthentication()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F2C30()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_21F6F2C7C;
  return sub_21F69751C();
}

uint64_t sub_21F6F2C7C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t PASExtensionHandle.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_release();
  return v0;
}

uint64_t PASExtensionHandle.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t PASExtensionHandle.debugDescription.getter()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_21F715EF4();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_21F715F00();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F7165CC();
  sub_21F716140();
  return 0;
}

uint64_t sub_21F6F2DF8()
{
  return PASExtensionHandle.debugDescription.getter();
}

uint64_t type metadata accessor for PASExtensionHandle()
{
  return objc_opt_self();
}

uint64_t sub_21F6F2E38(char a1)
{
  if (!a1)
    return 0xD000000000000017;
  if (a1 == 1)
    return 0x6E756F6363416F6ELL;
  return 0x6341534D44496F6ELL;
}

uint64_t sub_21F6F2EA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F70BC90(*a1, *a2);
}

uint64_t sub_21F6F2EB0()
{
  return sub_21F70CBA4();
}

uint64_t sub_21F6F2EB8()
{
  return sub_21F70D118();
}

uint64_t sub_21F6F2EC0()
{
  return sub_21F70DD04();
}

uint64_t sub_21F6F2EC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F6F48EC();
  *a1 = result;
  return result;
}

uint64_t sub_21F6F2EF4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F6F2E38(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F6F2F1C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70E3E8();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F6F2F98()
{
  return sub_21F70E3E8();
}

uint64_t sub_21F6F2FA0()
{
  sub_21F6F35AC();
  return sub_21F7168C0();
}

uint64_t sub_21F6F2FC8()
{
  sub_21F6F35AC();
  return sub_21F7168B4();
}

uint64_t sub_21F6F2FF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6F3008()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  swift_retain();
  sub_21F6569C8((uint64_t)(v0 + 2));
  swift_release();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v5 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
  v3 = (_QWORD *)swift_task_alloc();
  v0[14] = v3;
  *v3 = v0;
  v3[1] = sub_21F6F30A8;
  return v5(v1, v2);
}

uint64_t sub_21F6F30A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F3114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (v1)
  {
    swift_retain();
    sub_21F6569C8(v0 + 56);
    swift_release();
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v2);
    v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 56) + *(_QWORD *)(v3 + 56));
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v4;
    *v4 = v0;
    v4[1] = sub_21F6F321C;
    return v7(v1, v2, v3);
  }
  else
  {
    sub_21F6F3534();
    swift_allocError();
    *v6 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F321C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F3288()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  void *v10;
  _BYTE *v11;

  v1 = v0[18];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  if (v1)
  {
    v2 = (void *)v0[18];
    v3 = qword_2554DA6C0;
    v4 = v2;
    if (v3 != -1)
    {
      swift_once();
      v2 = (void *)v0[18];
    }
    v5 = (void *)v0[15];
    v6 = (uint64_t *)v0[12];
    v6[3] = (uint64_t)&type metadata for PASDevice;
    v6[4] = (uint64_t)&protocol witness table for PASDevice;
    v6[5] = sub_21F655910();
    v6[6] = sub_21F658E18();
    v7 = swift_allocObject();
    *v6 = v7;
    sub_21F645048((uint64_t)&static PASDevice.current, v7 + 16);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = 0u;
    *(_OWORD *)(v8 + 32) = 0u;
    *(_QWORD *)(v8 + 48) = 0;
    v6[7] = (uint64_t)v2;
    v6[8] = v8;
    v9 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v10 = (void *)v0[15];
    sub_21F6F3534();
    swift_allocError();
    *v11 = 2;
    swift_willThrow();

    v9 = (uint64_t (*)(void))v0[1];
  }
  return v9();
}

uint64_t sub_21F6F33D0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F3410()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PASPersonalSourceAuthController()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PASPersonalSourceAuthControllerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F6F34B0 + 4 * byte_21F722C25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F6F34E4 + 4 * asc_21F722C20[v4]))();
}

uint64_t sub_21F6F34E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6F34EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6F34F4);
  return result;
}

uint64_t sub_21F6F3500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6F3508);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F6F350C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6F3514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASPersonalSourceAuthControllerError()
{
  return &type metadata for PASPersonalSourceAuthControllerError;
}

unint64_t sub_21F6F3534()
{
  unint64_t result;

  result = qword_2554E2F90;
  if (!qword_2554E2F90)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722CD8, &type metadata for PASPersonalSourceAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E2F90);
  }
  return result;
}

unint64_t sub_21F6F3578(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6F35AC();
  a1[2] = sub_21F6F35F0();
  result = sub_21F6F3634();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6F35AC()
{
  unint64_t result;

  result = qword_2554E2F98;
  if (!qword_2554E2F98)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722D88, &type metadata for PASPersonalSourceAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E2F98);
  }
  return result;
}

unint64_t sub_21F6F35F0()
{
  unint64_t result;

  result = qword_2554E2FA0;
  if (!qword_2554E2FA0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722D40, &type metadata for PASPersonalSourceAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E2FA0);
  }
  return result;
}

unint64_t sub_21F6F3634()
{
  unint64_t result;

  result = qword_2554E2FA8;
  if (!qword_2554E2FA8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722D18, &type metadata for PASPersonalSourceAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E2FA8);
  }
  return result;
}

unint64_t sub_21F6F367C()
{
  unint64_t result;

  result = qword_2554E2FB0;
  if (!qword_2554E2FB0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722E5C, &type metadata for PASPersonalSourceAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E2FB0);
  }
  return result;
}

uint64_t sub_21F6F36C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_2554E2FC0 + dword_2554E2FC0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F6514BC;
  return v3();
}

uint64_t sub_21F6F371C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[30] = v0;
  v2 = sub_21F715F3C();
  v1[31] = v2;
  v1[32] = *(_QWORD *)(v2 - 8);
  v1[33] = swift_task_alloc();
  v3 = (_QWORD *)swift_task_alloc();
  v1[34] = v3;
  *v3 = v1;
  v3[1] = sub_21F6F37A8;
  v3[12] = v1 + 2;
  v3[13] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F37A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F380C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 16));
  swift_release();
  v1 = v0[19];
  v2 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[36] = v3;
  *v3 = v0;
  v3[1] = sub_21F6F38BC;
  return v5(v0 + 21, v1, v2);
}

uint64_t sub_21F6F38BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F3920()
{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;

  v1 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = v1;
  *(_QWORD *)(v0 + 320) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 168), v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v2;
  *v2 = v0;
  v2[1] = sub_21F6F3984;
  return sub_21F6F4D20(1);
}

uint64_t sub_21F6F3984(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  _QWORD *v6;

  v4 = *v2;
  v4[42] = a1;
  v4[43] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v6 = (_QWORD *)swift_task_alloc();
  v4[44] = (uint64_t)v6;
  *v6 = v4;
  v6[1] = sub_21F6F3A50;
  return sub_21F64B604((uint64_t)(v4 + 46), 4, 0, 0, 1, a1, v4[38], MEMORY[0x24BEE1328]);
}

uint64_t sub_21F6F3A50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6F3ABC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(unsigned __int8 *)(v0 + 368);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 168);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  if (qword_2554DA718 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  v8 = os_log_type_enabled(v6, v7);
  v10 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 264);
  v11 = *(_QWORD *)(v0 + 248);
  if (v8)
  {
    v22 = *(_QWORD *)(v0 + 264);
    v12 = swift_slowAlloc();
    v21 = v10;
    v13 = swift_slowAlloc();
    v23 = v13;
    *(_DWORD *)v12 = 141558274;
    *(_QWORD *)(v0 + 224) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v12 + 12) = 2080;
    if (v1)
      v14 = 1702195828;
    else
      v14 = 0x65736C6166;
    if (v1)
      v15 = 0xE400000000000000;
    else
      v15 = 0xE500000000000000;
    *(_QWORD *)(v0 + 232) = sub_21F644208(v14, v15, &v23);
    sub_21F716428();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v6, v7, "PASPersonalSourceAuthController sent selectedOwnAccount and got response: %{mask.hash}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v13, -1, -1);
    MEMORY[0x2207CC514](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v11);
    v16 = v0 + 16;
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    v16 = v0 + 16;
  }
  sub_21F658DA0(v16);
  swift_retain();
  sub_21F656B24(v0 + 88);
  swift_release();
  v17 = *(_QWORD *)(v0 + 112);
  v18 = *(_QWORD *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v17);
  LOBYTE(v17) = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v18 + 8))(0, v17, v18);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  if ((v17 & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_21F6F3534();
    swift_allocError();
    *v20 = 0;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F3DC8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 280);
  if (qword_2554DA718 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 248), (uint64_t)static PASLogger.common);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 208) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    *(_QWORD *)(v0 + 216) = sub_21F644208(v9, v10, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASPersonalSourceAuthController failed to send selectedOwnAccount\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

  }
  swift_retain();
  sub_21F656B24(v0 + 88);
  swift_release();
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v11);
  LOBYTE(v11) = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v12 + 8))(0, v11, v12);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  if ((v11 & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_21F6F3534();
    swift_allocError();
    *v14 = 0;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F407C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v14;
  uint64_t v15;

  sub_21F658DA0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  v1 = *(void **)(v0 + 296);
  if (qword_2554DA718 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 248), (uint64_t)static PASLogger.common);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 208) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    *(_QWORD *)(v0 + 216) = sub_21F644208(v9, v10, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASPersonalSourceAuthController failed to send selectedOwnAccount\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

  }
  swift_retain();
  sub_21F656B24(v0 + 88);
  swift_release();
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v11);
  LOBYTE(v11) = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v12 + 8))(0, v11, v12);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  if ((v11 & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_21F6F3534();
    swift_allocError();
    *v14 = 0;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F4344()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v14;
  uint64_t v15;

  sub_21F658DA0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 168);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  v1 = *(void **)(v0 + 344);
  if (qword_2554DA718 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 248), (uint64_t)static PASLogger.common);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 208) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    *(_QWORD *)(v0 + 216) = sub_21F644208(v9, v10, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASPersonalSourceAuthController failed to send selectedOwnAccount\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

  }
  swift_retain();
  sub_21F656B24(v0 + 88);
  swift_release();
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v11);
  LOBYTE(v11) = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v12 + 8))(0, v11, v12);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  if ((v11 & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_21F6F3534();
    swift_allocError();
    *v14 = 0;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F4618()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v14;
  uint64_t v15;

  sub_21F658DA0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 168);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  v1 = *(void **)(v0 + 360);
  if (qword_2554DA718 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v0 + 248), (uint64_t)static PASLogger.common);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 208) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    *(_QWORD *)(v0 + 216) = sub_21F644208(v9, v10, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASPersonalSourceAuthController failed to send selectedOwnAccount\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

  }
  swift_retain();
  sub_21F656B24(v0 + 88);
  swift_release();
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v11);
  LOBYTE(v11) = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v12 + 8))(0, v11, v12);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  if ((v11 & 1) != 0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    sub_21F6F3534();
    swift_allocError();
    *v14 = 0;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F48EC()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21F6F4934()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_21F6F4960(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t inited;
  unint64_t v12;

  sub_21F715C54();
  swift_allocObject();
  sub_21F715C48();
  type metadata accessor for PASDeviceContext();
  sub_21F647438(&qword_2554DE928, (uint64_t (*)(uint64_t))type metadata accessor for PASDeviceContext, (uint64_t)&protocol conformance descriptor for PASDeviceContext);
  v8 = sub_21F715C3C();
  v10 = v9;
  swift_release();
  if (!v4)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E24A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    *(_BYTE *)(inited + 32) = a4;
    *(_QWORD *)(inited + 64) = MEMORY[0x24BDCDDE8];
    *(_QWORD *)(inited + 40) = v8;
    *(_QWORD *)(inited + 48) = v10;
    swift_bridgeObjectRetain();
    sub_21F647CD4(v8, v10);
    v12 = sub_21F640C2C(inited);
    a1 = sub_21F6F4C10(v12, a1, a3 & 1);
    sub_21F649BB0(v8, v10);
  }
  return a1;
}

uint64_t sub_21F6F4AA8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t inited;
  unint64_t v13;
  void *v14;
  id v16[11];

  v16[10] = *(id *)MEMORY[0x24BDAC8D0];
  v16[0] = 0;
  v7 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, a2, 1, v16);
  v8 = v16[0];
  if (v7)
  {
    v9 = sub_21F715D80();
    v11 = v10;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E24A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    *(_BYTE *)(inited + 32) = a4;
    *(_QWORD *)(inited + 64) = MEMORY[0x24BDCDDE8];
    *(_QWORD *)(inited + 40) = v9;
    *(_QWORD *)(inited + 48) = v11;
    swift_bridgeObjectRetain();
    sub_21F647CD4(v9, v11);
    v13 = sub_21F640C2C(inited);
    a1 = sub_21F6F4C10(v13, a1, a3 & 1);
    sub_21F649BB0(v9, v11);
  }
  else
  {
    v14 = v8;
    sub_21F715D50();

    swift_willThrow();
  }
  return a1;
}

uint64_t sub_21F6F4C10(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = a2;
  sub_21F6F9F10(a1, (uint64_t)sub_21F6F9EE4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v10, a3);
  v8 = v10;
  swift_bridgeObjectRelease();
  if (v3)
    swift_bridgeObjectRelease();
  return v8;
}

uint64_t PASDeviceAndAccount.init(device:account:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(a3 + 64) = v6;
  result = sub_21F6F4D00(a1, a3);
  *(_QWORD *)(a3 + 56) = a2;
  return result;
}

uint64_t sub_21F6F4D00(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_QWORD *)(a2 + 48) = *((_QWORD *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_21F6F4D20(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = v1;
  *(_BYTE *)(v2 + 112) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6F4D3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(id, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 56);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  *(_QWORD *)(v0 + 64) = v4;
  if (v4)
  {
    v5 = (void *)v4;
    v6 = __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 56), v1[3]);
    v7 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
    v8 = sub_21F64E550(v7, (uint64_t)v6, 0, 5);
    *(_QWORD *)(v0 + 72) = v8;
    v11 = v8;
    v12 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
    v13 = *(void **)(v12 + 56);
    *(_QWORD *)(v0 + 80) = v13;
    if (v13)
    {
      v14 = v13;
      sub_21F6569C8(v0 + 16);
      v15 = *(_QWORD *)(v0 + 40);
      v16 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v15);
      v18 = (uint64_t (*)(id, _QWORD, uint64_t, uint64_t))(**(int **)(v16 + 64) + *(_QWORD *)(v16 + 64));
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v17;
      *v17 = v0;
      v17[1] = sub_21F6F4F1C;
      return v18(v14, *(unsigned __int8 *)(v0 + 112), v15, v16);
    }
    else
    {

      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
    }
  }
  else
  {
    sub_21F6F77A0();
    swift_allocError();
    *v9 = 1;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F4F1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6F4F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 72);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  v4 = sub_21F6F4AA8(v3, v1, 0, 0);
  v5 = *(void **)(v0 + 80);
  v6 = *(void **)(v0 + 64);

  swift_bridgeObjectRelease();
  if (!v2)
    v7 = v4;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_21F6F5024()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F506C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  sub_21F64D6C8(a1, 5, 5, (uint64_t)&v12);
  if (v2)
    return swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v13 + 1))
  {
    sub_21F6476AC((uint64_t)&v12, (uint64_t *)&unk_2554E3100);
    sub_21F655840();
    swift_allocError();
    *(_OWORD *)v6 = xmmword_21F722EA0;
    *(_QWORD *)(v6 + 16) = 0;
    *(_QWORD *)(v6 + 24) = 0;
    *(_BYTE *)(v6 + 32) = 0;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  v16 = v12;
  v17 = v13;
  v18 = v14;
  v19 = v15;
  sub_21F64D0A8(a1, 0, 0, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)&v12 + 1);
  if (*((_QWORD *)&v12 + 1) >> 60 == 15)
  {
    v8 = 0;
  }
  else
  {
    v9 = v12;
    sub_21F64779C(0, &qword_2554E3110);
    sub_21F64779C(0, &qword_2554DD778);
    v8 = sub_21F716380();
    sub_21F649B9C(v9, v7);
  }
  a2[3] = (uint64_t)&type metadata for PASDevice;
  a2[4] = (uint64_t)&protocol witness table for PASDevice;
  a2[5] = sub_21F655910();
  a2[6] = sub_21F658E18();
  v10 = swift_allocObject();
  *a2 = v10;
  v11 = v17;
  *(_OWORD *)(v10 + 16) = v16;
  *(_OWORD *)(v10 + 32) = v11;
  *(_OWORD *)(v10 + 48) = v18;
  *(_QWORD *)(v10 + 64) = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_QWORD *)(result + 48) = 0;
  a2[7] = v8;
  a2[8] = result;
  return result;
}

uint64_t sub_21F6F5284(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4, __int128 *a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v7 = v6;
  if (qword_2554DA718 != -1)
    swift_once();
  v14 = sub_21F715F3C();
  __swift_project_value_buffer(v14, (uint64_t)static PASLogger.common);
  v15 = sub_21F715F24();
  v16 = sub_21F716350();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_21F63C000, v15, v16, "PASDeviceInfoExchanger init", v17, 2u);
    MEMORY[0x2207CC514](v17, -1, -1);
  }

  sub_21F64756C(a1, v7 + 16);
  sub_21F64756C(a2, v7 + 56);
  *(_QWORD *)(v7 + 96) = a3;
  *(_QWORD *)(v7 + 104) = a4;
  sub_21F64756C(a5, v7 + 112);
  *(_BYTE *)(v7 + 152) = a6 & 1;
  return v7;
}

uint64_t sub_21F6F53B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F53D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 72);
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v4;
  *v4 = v0;
  v4[1] = sub_21F6F5460;
  return v6(v0 + 16, v2, v3);
}

uint64_t sub_21F6F5460()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F54C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DC340);
  sub_21F64AC5C(5u, 0, (uint64_t)&unk_2554E3178, v3, v1, v4, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_21F63C000, v6, v7, "PASDeviceInfoExchanger did registerForRequests", v8, 2u);
    MEMORY[0x2207CC514](v8, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F562C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 88);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 88);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 56) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v12 = sub_21F716128();
    *(_QWORD *)(v0 + 64) = sub_21F644208(v12, v13, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASDeviceInfoExchanger failed to registerForRequests. %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F581C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6F5838()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v4 = (uint64_t (*)(uint64_t))((char *)&dword_2554E3188 + dword_2554E3188);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_21F6F58E4;
    return v4(*(_QWORD *)(v0 + 48));
  }
  else
  {
    **(_QWORD **)(v0 + 40) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6F58E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6F5960()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 40) = *(_QWORD *)(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F5978()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F59AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  *(_QWORD *)(v1 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6F5A08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[15];
  v1 = v0[16];
  v3 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  swift_retain();
  v0[17] = sub_21F6F60CC(v1, 3, 1000000000000000000, 0, 0, (uint64_t)sub_21F6F5EC8, 0, (uint64_t)&unk_2554E3120, v2);
  swift_release();
  sub_21F6476AC(v1, &qword_2554E19B0);
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E3128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  *v4 = v0;
  v4[1] = sub_21F6F5B24;
  return sub_21F7162CC();
}

uint64_t sub_21F6F5B24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6F5B90()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (void *)v0[14];
  v0[20] = v1;
  v2 = qword_2554DA6C0;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v0[5] = &type metadata for PASDevice;
  v0[6] = &protocol witness table for PASDevice;
  v0[7] = sub_21F655910();
  v0[8] = sub_21F658E18();
  v4 = swift_allocObject();
  v0[2] = v4;
  sub_21F645048((uint64_t)&static PASDevice.current, v4 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_QWORD *)(v5 + 48) = 0;
  v0[9] = v1;
  v0[10] = v5;
  v6 = swift_task_alloc();
  v0[21] = v6;
  *(_QWORD *)v6 = v0;
  *(_QWORD *)(v6 + 8) = sub_21F6F5CA4;
  *(_QWORD *)(v6 + 56) = v0 + 2;
  *(_BYTE *)(v6 + 112) = 0;
  return swift_task_switch();
}

uint64_t sub_21F6F5CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *v2 + 16;
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  swift_task_dealloc();
  sub_21F658DA0(v4);
  return swift_task_switch();
}

uint64_t sub_21F6F5D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  if (qword_2554DA6F0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  swift_beginAccess();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_21F6472BC(v3);
  swift_bridgeObjectRelease();
  type metadata accessor for PASDeviceContext();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v6 = sub_21F6F4960(v1, v5, 0, 10);
  v7 = *(void **)(v0 + 160);
  swift_bridgeObjectRelease();
  swift_release();

  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  else
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_21F6F5E58()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F5E8C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_21F6F5EC8()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v9;

  v0 = (void *)sub_21F715D44();
  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_21F716104();
  v4 = v3;

  if (v2 == sub_21F716104() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = sub_21F716800();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {

      return 0;
    }
  }
  v9 = objc_msgSend(v0, sel_code);

  return v9 == (id)10002;
}

uint64_t sub_21F6F5FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6F5FBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[10];
  v3 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_21F6F6038;
  return v6(v2, v3);
}

uint64_t sub_21F6F6038(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6F60B4()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F60CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a5;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F6EC7BC(a1, (uint64_t)v18);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = a2;
  *(_QWORD *)(v19 + 40) = a8;
  *(_QWORD *)(v19 + 48) = a9;
  *(_QWORD *)(v19 + 56) = a6;
  *(_QWORD *)(v19 + 64) = a7;
  *(_QWORD *)(v19 + 72) = a3;
  *(_QWORD *)(v19 + 80) = a4;
  *(_BYTE *)(v19 + 88) = v27 & 1;
  v20 = sub_21F7162C0();
  v21 = *(_QWORD *)(v20 - 8);
  LODWORD(a6) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20);
  swift_retain();
  swift_retain();
  if ((_DWORD)a6 == 1)
  {
    sub_21F6476AC((uint64_t)v18, &qword_2554E19B0);
    v22 = 0;
    v23 = 0;
  }
  else
  {
    sub_21F7162B4();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    if (*(_QWORD *)(v19 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v22 = sub_21F716248();
      v23 = v24;
      swift_unknownObjectRelease();
    }
    else
    {
      v22 = 0;
      v23 = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E3128);
  if (v23 | v22)
  {
    v28 = 0;
    v29 = 0;
    v30 = v22;
    v31 = v23;
  }
  return swift_task_create();
}

uint64_t sub_21F6F62C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F62D8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASDeviceInfoExchanger sendPASDeviceInfo", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 64);

  v6 = v5 + 2;
  v7 = v5[5];
  v8 = v5[6];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v9;
  *v9 = v0;
  v9[1] = sub_21F6F6410;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F6F6410()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F6474()
{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;

  v1 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 104) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_21F6F64D4;
  return sub_21F6F59AC();
}

uint64_t sub_21F6F64D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t *v4;
  _QWORD *v6;
  uint64_t v7;

  v4 = *v2;
  v4[15] = a1;
  v4[16] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v6 = (_QWORD *)swift_task_alloc();
  v4[17] = (uint64_t)v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
  *v6 = v4;
  v6[1] = sub_21F6F65B4;
  return sub_21F64B604((uint64_t)(v4 + 7), 5, 0, 10, 0, a1, v4[11], v7);
}

uint64_t sub_21F6F65B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6F6620()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = v0[7];
  v0[19] = v1;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  v2 = (_QWORD *)swift_task_alloc();
  v0[20] = v2;
  *v2 = v0;
  v2[1] = sub_21F6F6690;
  v3 = v0[8];
  v2[26] = v1;
  v2[27] = v3;
  return swift_task_switch();
}

uint64_t sub_21F6F6690()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6F66F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F6728()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F6734()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F6774()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F67A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6F67C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *boxed_opaque_existential_1;
  __int128 v10;

  v1 = swift_bridgeObjectRetain();
  sub_21F6F506C(v1, (uint64_t *)(v0 + 16));
  v2 = sub_21F64D900(*(_QWORD *)(v0 + 208), 10, 10);
  if (!v2)
  {
    type metadata accessor for PASDeviceContext();
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4B08];
  }
  *(_QWORD *)(v0 + 224) = v2;
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_BYTE *)(v3 + 152);
  *(_QWORD *)(v0 + 232) = *(_QWORD *)(v3 + 96);
  v5 = *(_QWORD *)(v3 + 104);
  *(_QWORD *)(v0 + 240) = v5;
  *(_QWORD *)(v0 + 248) = swift_getObjectType();
  v10 = *(_OWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v6);
  *(_OWORD *)(v0 + 112) = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 88));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_1, v7, v6);
  *(_QWORD *)(v0 + 152) = type metadata accessor for PASDeviceContext();
  *(_QWORD *)(v0 + 160) = sub_21F647438(&qword_2554DA768, (uint64_t (*)(uint64_t))type metadata accessor for PASDeviceContext, (uint64_t)&protocol conformance descriptor for PASDeviceContext);
  *(_QWORD *)(v0 + 128) = v2;
  if ((v4 & 1) != 0)
  {
    *(_QWORD *)(v0 + 320) = *(_QWORD *)(v5 + 80);
    sub_21F7162A8();
    swift_retain();
    *(_QWORD *)(v0 + 328) = sub_21F71629C();
  }
  else
  {
    *(_QWORD *)(v0 + 256) = *(_QWORD *)(v5 + 72);
    *(_QWORD *)(v0 + 264) = sub_21F7162A8();
    swift_retain();
    *(_QWORD *)(v0 + 272) = sub_21F71629C();
  }
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6F69C8()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  uint64_t v3;

  v1 = v0[31];
  v2 = (void (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))v0[32];
  v3 = v0[30];
  swift_release();
  v2(v0 + 11, v0 + 16, v1, v3);
  sub_21F6476AC((uint64_t)(v0 + 16), &qword_2554DA770);
  sub_21F6476AC((uint64_t)(v0 + 11), &qword_2554DA778);
  return swift_task_switch();
}

uint64_t sub_21F6F6A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  sub_21F647710(*(_QWORD *)(v0 + 216) + 112, v0 + 88);
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 280) = v1;
  *(_QWORD *)(v0 + 288) = v2;
  *(_QWORD *)(v0 + 296) = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), v1);
  v3 = *(void **)(v0 + 72);
  if (v3)
  {
    v4 = type metadata accessor for PASAccountWithImage();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_OWORD *)(v5 + 24) = xmmword_21F717E50;
    *(_QWORD *)(v0 + 152) = v4;
    *(_QWORD *)(v0 + 160) = sub_21F647438(&qword_2554DE3E0, (uint64_t (*)(uint64_t))type metadata accessor for PASAccountWithImage, (uint64_t)&protocol conformance descriptor for PASAccountWithImage);
    *(_QWORD *)(v0 + 128) = v5;
  }
  else
  {
    *(_QWORD *)(v0 + 160) = 0;
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
  }
  *(_QWORD *)(v0 + 192) = &type metadata for PASAccountContextExistingAccount;
  *(_QWORD *)(v0 + 200) = &off_24E452508;
  *(_QWORD *)(v0 + 168) = 0;
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v2 + 40);
  v6 = v3;
  *(_QWORD *)(v0 + 312) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6F6B88()
{
  _QWORD *v0;
  void (*v1)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))v0[38];
  v2 = v0[36];
  v3 = v0[35];
  swift_release();
  v1(v0 + 16, v0 + 21, v3, v2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 21));
  sub_21F6476AC((uint64_t)(v0 + 16), &qword_2554DEF00);
  return swift_task_switch();
}

uint64_t sub_21F6F6C10()
{
  uint64_t v0;

  swift_release();
  sub_21F658DA0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F6C5C()
{
  _QWORD *v0;
  void (*v1)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))v0[40];
  v3 = v0[30];
  v2 = v0[31];
  swift_release();
  v1(v0 + 11, v0 + 16, v2, v3);
  sub_21F6476AC((uint64_t)(v0 + 16), &qword_2554DA770);
  sub_21F6476AC((uint64_t)(v0 + 11), &qword_2554DA778);
  return swift_task_switch();
}

uint64_t sub_21F6F6CEC()
{
  uint64_t v0;

  swift_release();
  sub_21F658DA0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F6D2C(char *a1)
{
  sub_21F64B194(*a1);
  return sub_21F7164B8();
}

uint64_t sub_21F6F6D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716374();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASDeviceInfoExchanger deinit", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 112);
  return v1;
}

uint64_t sub_21F6F6E6C()
{
  sub_21F6F6D78();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6F6E8C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6563697665446F6ELL;
  else
    return 0xD000000000000016;
}

uint64_t sub_21F6F6EC8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  v2[9] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F6F24()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  v2[8] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6F6F80(char *a1, char *a2)
{
  return sub_21F70C3EC(*a1, *a2);
}

uint64_t sub_21F6F6F8C()
{
  return sub_21F70CC58();
}

uint64_t sub_21F6F6F94()
{
  return sub_21F70D468();
}

uint64_t sub_21F6F6F9C()
{
  return sub_21F70D86C();
}

uint64_t sub_21F6F6FA4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_21F6F7000@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F6F6E8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F6F7028()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70E018();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F6F70A4()
{
  return sub_21F70E018();
}

uint64_t sub_21F6F70AC()
{
  sub_21F6FC1B8();
  return sub_21F7168C0();
}

uint64_t sub_21F6F70D4()
{
  sub_21F6FC1B8();
  return sub_21F7168B4();
}

uint64_t PASDeviceAndAccount.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_21F7164E8();
  swift_bridgeObjectRelease();
  v24 = 0xD00000000000001CLL;
  v25 = 0x800000021F72A320;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&v20, v2, v3);
  v4 = v22;
  v5 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  sub_21F716140();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v20);
  sub_21F716140();
  v7 = v24;
  v6 = v25;
  v20 = 0x6563766965446B61;
  v21 = 0xEA0000000000203ALL;
  v8 = v0[3];
  v9 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E2FC8);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  v20 = v7;
  v21 = v6;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v20;
  v10 = v21;
  v20 = 0x797274656D6F6962;
  v21 = 0xEA0000000000203ALL;
  v12 = v0[3];
  v13 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v20 = v11;
  v21 = v10;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v20;
  v14 = v21;
  v20 = 0x3A746E756F636361;
  v21 = 0xE800000000000000;
  v16 = (void *)v0[7];
  if (v16)
  {
    v17 = objc_msgSend(v16, sel_username);
    if (v17)
    {
      v18 = v17;
      sub_21F716104();

    }
  }
  sub_21F716140();
  swift_bridgeObjectRelease();
  v20 = v15;
  v21 = v14;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t type metadata accessor for PASDeviceInfoExchanger()
{
  return objc_opt_self();
}

uint64_t destroy for PASDeviceAndAccount(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);

  return swift_release();
}

uint64_t initializeWithCopy for PASDeviceAndAccount(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  id v7;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v7 = v5;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for PASDeviceAndAccount(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_3(a1, a2);
  v4 = (void *)a1[7];
  v5 = (void *)a2[7];
  a1[7] = (uint64_t)v5;
  v6 = v5;

  a1[8] = a2[8];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_3(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      result[6] = a2[6];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for PASDeviceAndAccount(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(void **)(a1 + 56);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PASDeviceAndAccount(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PASDeviceAndAccount(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASDeviceAndAccount()
{
  return &type metadata for PASDeviceAndAccount;
}

ValueMetadata *type metadata accessor for PASDeviceInfoExchanger.RelativeName()
{
  return &type metadata for PASDeviceInfoExchanger.RelativeName;
}

unint64_t sub_21F6F775C()
{
  unint64_t result;

  result = qword_2554E3090;
  if (!qword_2554E3090)
  {
    result = MEMORY[0x2207CC46C](&unk_21F722FE4, &type metadata for PASDeviceInfoExchanger.RelativeName);
    atomic_store(result, (unint64_t *)&qword_2554E3090);
  }
  return result;
}

unint64_t sub_21F6F77A0()
{
  unint64_t result;

  result = qword_2554E30B0;
  if (!qword_2554E30B0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7231A8, &type metadata for PASDeviceAndAccountError);
    atomic_store(result, (unint64_t *)&qword_2554E30B0);
  }
  return result;
}

uint64_t sub_21F6F77E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_21F71659C();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_21F6F7888()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_21F7165B4();
  sub_21F647438(&qword_2554E3148, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_21F71689C();
  sub_21F647438(&qword_2554E3150, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_21F7165C0();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_21F6F79A0;
  return sub_21F7168A8();
}

uint64_t sub_21F6F79A0()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_21F6F7A4C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6F7A88(uint64_t a1, char a2)
{
  return sub_21F6F89F4(a1, a2, &qword_2554E3190);
}

uint64_t sub_21F6F7A94(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB28);
  v6 = sub_21F716620();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_21F644FEC(v24, v35);
      }
      else
      {
        sub_21F6429E4((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_21F716920();
      sub_21F716134();
      result = sub_21F716968();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_21F644FEC(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21F6F7D90(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC4C0);
  v6 = sub_21F716620();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_21F644FEC((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_21F6474FC(v25, (uint64_t)&v38);
      sub_21F6429E4(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_21F7164A0();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_21F644FEC(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21F6F80A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  _OWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E30C0);
  v6 = sub_21F716620();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v32 = v2;
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
      sub_21F644FEC(v23, v34);
    else
      sub_21F6429E4((uint64_t)v23, (uint64_t)v34);
    sub_21F716920();
    sub_21F716134();
    swift_bridgeObjectRelease();
    result = sub_21F716968();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    result = (uint64_t)sub_21F644FEC(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21F6F83B8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA30);
  v38 = a2;
  v6 = sub_21F716620();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_21F716920();
    sub_21F716134();
    result = sub_21F716968();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21F6F86C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAA0);
  v37 = a2;
  v6 = sub_21F716620();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_21F64756C(v25, (uint64_t)v38);
    }
    else
    {
      sub_21F647710((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_21F716920();
    sub_21F716134();
    result = sub_21F716968();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_21F64756C(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21F6F89E8(uint64_t a1, char a2)
{
  return sub_21F6F89F4(a1, a2, &qword_2554DAAF8);
}

uint64_t sub_21F6F89F4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_21F716620();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_21F716920();
    sub_21F716134();
    result = sub_21F716968();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

unint64_t sub_21F6F8D04(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21F716488();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21F716920();
        swift_bridgeObjectRetain();
        sub_21F716134();
        v10 = sub_21F716968();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F6F8ED8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21F716488();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21F6474FC(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_21F7164A0();
        result = sub_21F647538((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21F6F90A0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21F716488();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_21F716920();
        swift_bridgeObjectRetain();
        sub_21F716134();
        v9 = sub_21F716968();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_21F6F9278(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_21F644FEC(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_21F6F92E0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_21F644FEC(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

_OWORD *sub_21F6F9358(unint64_t a1, char a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_21F644FEC(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_21F6F93BC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void *sub_21F6F9404()
{
  return sub_21F6F9D38(&qword_2554E3190);
}

void *sub_21F6F9410()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB28);
  v2 = *v0;
  v3 = sub_21F716614();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_21F6429E4(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_21F644FEC(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F6F95F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC4C0);
  v2 = *v0;
  v3 = sub_21F716614();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_21F6474FC(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_21F6429E4(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_21F644FEC(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F6F97D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _OWORD v20[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E30C0);
  v2 = *v0;
  v3 = sub_21F716614();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_21F6429E4(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v20);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = sub_21F644FEC(v20, (_OWORD *)(*(_QWORD *)(v4 + 56) + 32 * v15));
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_21F6F9994()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA30);
  v2 = *v0;
  v3 = sub_21F716614();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21F6F9B44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAA0);
  v2 = *v0;
  v3 = sub_21F716614();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_21F647710(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_21F64756C(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_21F6F9D2C()
{
  return sub_21F6F9D38(&qword_2554DAAF8);
}

void *sub_21F6F9D38(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21F716614();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F6F9EE4@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  result = sub_21F6429E4((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
  *a2 = v3;
  return result;
}

uint64_t sub_21F6F9F10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  _BYTE *v26;
  _OWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  _OWORD *v34;
  char v35;
  _QWORD *v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  _BYTE v48[32];
  _OWORD v49[2];
  _OWORD v50[2];
  char v51[8];
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v9 = -1 << *(_BYTE *)(a1 + 32);
  v10 = ~v9;
  v11 = *(_QWORD *)(a1 + 64);
  v12 = -v9;
  v54 = a1;
  v55 = a1 + 64;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v56 = v10;
  v57 = 0;
  v58 = v13 & v11;
  v59 = a2;
  v60 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21F6FA2A0((uint64_t)v51);
  if (!v53)
    goto LABEL_32;
  v14 = v51[0];
  sub_21F644FEC(&v52, v50);
  v15 = *(_QWORD **)a5;
  v17 = sub_21F6449C4(v14);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      if ((v16 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_21F6F97D8();
      if ((v21 & 1) != 0)
        goto LABEL_12;
    }
LABEL_17:
    v28 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    *(_BYTE *)(v28[6] + v17) = v14;
    sub_21F644FEC(v50, (_OWORD *)(v28[7] + 32 * v17));
    v29 = v28[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v28[2] = v31;
    v25 = a6;
LABEL_19:
    sub_21F6FA2A0((uint64_t)v51);
    if (v53)
    {
      if ((v25 & 1) != 0)
        v32 = v50;
      else
        v32 = v48;
      do
      {
        v35 = v51[0];
        sub_21F644FEC(&v52, v50);
        v36 = *(_QWORD **)a5;
        v37 = sub_21F6449C4(v35);
        v39 = v36[2];
        v40 = (v38 & 1) == 0;
        v30 = __OFADD__(v39, v40);
        v41 = v39 + v40;
        if (v30)
          goto LABEL_33;
        v42 = v38;
        if (v36[3] < v41)
        {
          sub_21F6F80A4(v41, 1);
          v37 = sub_21F6449C4(v35);
          if ((v42 & 1) != (v43 & 1))
            goto LABEL_35;
        }
        if ((v42 & 1) != 0)
        {
          v33 = 32 * v37;
          sub_21F6429E4(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v37, (uint64_t)v48);
          sub_21F6429E4((uint64_t)v32, (uint64_t)v49);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v48);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v50);
          v34 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + v33);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
          sub_21F644FEC(v49, v34);
        }
        else
        {
          v44 = *(_QWORD **)a5;
          *(_QWORD *)(*(_QWORD *)a5 + 8 * (v37 >> 6) + 64) |= 1 << v37;
          *(_BYTE *)(v44[6] + v37) = v35;
          sub_21F644FEC(v50, (_OWORD *)(v44[7] + 32 * v37));
          v45 = v44[2];
          v30 = __OFADD__(v45, 1);
          v46 = v45 + 1;
          if (v30)
            goto LABEL_34;
          v44[2] = v46;
        }
        sub_21F6FA2A0((uint64_t)v51);
      }
      while (v53);
    }
LABEL_32:
    swift_release();
    swift_bridgeObjectRelease();
    sub_21F671984();
    return swift_release();
  }
  sub_21F6F80A4(v20, a4 & 1);
  v22 = sub_21F6449C4(v14);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    if ((v21 & 1) == 0)
      goto LABEL_17;
LABEL_12:
    v24 = 32 * v17;
    sub_21F6429E4(*(_QWORD *)(*(_QWORD *)a5 + 56) + v24, (uint64_t)v48);
    v25 = a6;
    if ((a6 & 1) != 0)
      v26 = v50;
    else
      v26 = v48;
    sub_21F6429E4((uint64_t)v26, (uint64_t)v49);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v48);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v50);
    v27 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + v24);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
    sub_21F644FEC(v49, v27);
    goto LABEL_19;
  }
LABEL_35:
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t sub_21F6FA2A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void (*v17)(_OWORD *);
  uint64_t result;
  _OWORD v19[2];
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10);
    sub_21F6429E4(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v23 + 8);
    LOBYTE(v23[0]) = v11;
    goto LABEL_23;
  }
  v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    v14 = *(_QWORD *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v12 << 6);
      v7 = v12;
      goto LABEL_3;
    }
    v15 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        v12 = v15;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        v14 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          v12 = v5 + 3;
          goto LABEL_7;
        }
        v15 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          v14 = *(_QWORD *)(v4 + 8 * v15);
          if (v14)
            goto LABEL_10;
          v12 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            v14 = *(_QWORD *)(v4 + 8 * v12);
            if (v14)
              goto LABEL_7;
            v7 = v13 - 1;
            v16 = v5 + 6;
            while (v13 != v16)
            {
              v14 = *(_QWORD *)(v4 + 8 * v16++);
              if (v14)
              {
                v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v17 = (void (*)(_OWORD *))v1[5];
  result = sub_21F6FA46C((uint64_t)v23, (uint64_t)v21);
  if (v22)
  {
    v19[0] = v21[0];
    v19[1] = v21[1];
    v20 = v22;
    v17(v19);
    return sub_21F6476AC((uint64_t)v19, &qword_2554E30D0);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_21F6FA46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E30C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6FA4B4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_21F6FA4E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F651418;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6FA540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  char v18;

  *(_QWORD *)(v8 + 16) = a1;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 24) = v14;
  *v14 = v8;
  v14[1] = sub_21F6FA5E4;
  return sub_21F6FB11C(a4, a5, a6, a7, a8, v16, v17, v18 & 1);
}

uint64_t sub_21F6FA5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_21F6FA640()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21F6FA674()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F656988;
  __asm { BR              X9; sub_21F6FA540 }
}

uint64_t sub_21F6FA734(uint64_t a1, uint64_t *a2, void (*a3)(_QWORD *__return_ptr, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v47;
  uint64_t v48;
  _OWORD v49[2];
  _OWORD v50[2];
  _QWORD v51[5];
  char v52;

  v8 = a1;
  v44 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v45 = (unint64_t)(v9 + 63) >> 6;
  v12 = 0;
  v43 = swift_bridgeObjectRetain();
  if (v11)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v15 = v12 + 1;
    if (!__OFADD__(v12, 1))
    {
      if (v15 < v45)
      {
        v16 = *(_QWORD *)(v44 + 8 * v15);
        ++v12;
        if (v16)
          goto LABEL_23;
        v12 = v15 + 1;
        if (v15 + 1 >= v45)
          return swift_release();
        v16 = *(_QWORD *)(v44 + 8 * v12);
        if (v16)
          goto LABEL_23;
        v12 = v15 + 2;
        if (v15 + 2 >= v45)
          return swift_release();
        v16 = *(_QWORD *)(v44 + 8 * v12);
        if (v16)
          goto LABEL_23;
        v12 = v15 + 3;
        if (v15 + 3 >= v45)
          return swift_release();
        v16 = *(_QWORD *)(v44 + 8 * v12);
        if (v16)
        {
LABEL_23:
          v11 = (v16 - 1) & v16;
          for (i = __clz(__rbit64(v16)) + (v12 << 6); ; i = v13 | (v12 << 6))
          {
            v18 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + i);
            v52 = v18;
            a3(v51, &v52);
            if (*(_QWORD *)(a5 + 16))
            {
              v19 = sub_21F6449C4(v18);
              if ((v20 & 1) != 0)
                break;
            }
            swift_bridgeObjectRetain();
            v33 = sub_21F644994((uint64_t)v51);
            v35 = v34;
            swift_bridgeObjectRelease();
            if ((v35 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v37 = *a2;
              v48 = *a2;
              *a2 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_21F6F95F4();
                v37 = v48;
              }
              sub_21F647538(*(_QWORD *)(v37 + 48) + 40 * v33);
              sub_21F644FEC((_OWORD *)(*(_QWORD *)(v37 + 56) + 32 * v33), v49);
              sub_21F6F8ED8(v33, v37);
              *a2 = v37;
              swift_bridgeObjectRelease();
            }
            else
            {
              memset(v49, 0, sizeof(v49));
            }
            sub_21F647538((uint64_t)v51);
            sub_21F6476AC((uint64_t)v49, &qword_2554DA750);
            if (!v11)
              goto LABEL_8;
LABEL_7:
            v13 = __clz(__rbit64(v11));
            v11 &= v11 - 1;
          }
          v21 = a4;
          sub_21F6429E4(*(_QWORD *)(a5 + 56) + 32 * v19, (uint64_t)v50);
          sub_21F644FEC(v50, v49);
          v22 = swift_isUniquelyReferenced_nonNull_native();
          v23 = *a2;
          v47 = (_QWORD *)*a2;
          *a2 = 0x8000000000000000;
          v25 = sub_21F644994((uint64_t)v51);
          v26 = *(_QWORD *)(v23 + 16);
          v27 = (v24 & 1) == 0;
          v28 = v26 + v27;
          if (__OFADD__(v26, v27))
            goto LABEL_45;
          v29 = v24;
          if (*(_QWORD *)(v23 + 24) < v28)
          {
            sub_21F6F7D90(v28, v22);
            v30 = sub_21F644994((uint64_t)v51);
            if ((v29 & 1) != (v31 & 1))
              goto LABEL_48;
            v25 = v30;
            v32 = v47;
            if ((v29 & 1) == 0)
              goto LABEL_39;
LABEL_37:
            v38 = (_OWORD *)(v32[7] + 32 * v25);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v38);
            sub_21F644FEC(v49, v38);
            goto LABEL_41;
          }
          if ((v22 & 1) != 0)
          {
            v32 = v47;
            if ((v24 & 1) != 0)
              goto LABEL_37;
          }
          else
          {
            sub_21F6F95F4();
            v32 = v47;
            if ((v29 & 1) != 0)
              goto LABEL_37;
          }
LABEL_39:
          v32[(v25 >> 6) + 8] |= 1 << v25;
          sub_21F6474FC((uint64_t)v51, v32[6] + 40 * v25);
          sub_21F644FEC(v49, (_OWORD *)(v32[7] + 32 * v25));
          v39 = v32[2];
          v40 = __OFADD__(v39, 1);
          v41 = v39 + 1;
          if (v40)
            goto LABEL_46;
          v32[2] = v41;
LABEL_41:
          *a2 = (uint64_t)v32;
          swift_bridgeObjectRelease();
          sub_21F647538((uint64_t)v51);
          a4 = v21;
          v8 = v43;
          if (!v11)
            continue;
          goto LABEL_7;
        }
        v17 = v15 + 4;
        if (v17 < v45)
        {
          v16 = *(_QWORD *)(v44 + 8 * v17);
          if (v16)
          {
            v12 = v17;
            goto LABEL_23;
          }
          while (1)
          {
            v12 = v17 + 1;
            if (__OFADD__(v17, 1))
              goto LABEL_47;
            if (v12 >= v45)
              return swift_release();
            v16 = *(_QWORD *)(v44 + 8 * v12);
            ++v17;
            if (v16)
              goto LABEL_23;
          }
        }
      }
      return swift_release();
    }
    break;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t sub_21F6FAB2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6FAB44()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  *(_QWORD *)(v0 + 48) = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASDeviceInfoExchanger handlePASDeviceInfo", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F6FAC5C;
  *(_OWORD *)(v5 + 208) = *(_OWORD *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_21F6FAC5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 72) = v4;
  *v4 = v2;
  v4[1] = sub_21F6FACE8;
  return sub_21F6F59AC();
}

uint64_t sub_21F6FACE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6FAD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v4 = sub_21F640AEC(MEMORY[0x24BEE4AF8]);
  v2 = swift_bridgeObjectRetain();
  sub_21F6FA734(v2, (uint64_t *)&v4, (void (*)(_QWORD *__return_ptr, char *))sub_21F6F6D2C, 0, v1);
  swift_bridgeObjectRelease_n();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v4);
}

uint64_t sub_21F6FADD4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v12 = v7;
    *(_QWORD *)(v0 + 16) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    *(_QWORD *)(v0 + 24) = sub_21F644208(v9, v10, &v12);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASDeviceInfoExchanger failed to handlePASDeviceInfo\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6FAF78()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 80);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v12 = v7;
    *(_QWORD *)(v0 + 16) = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    *(_QWORD *)(v0 + 24) = sub_21F644208(v9, v10, &v12);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASDeviceInfoExchanger failed to handlePASDeviceInfo\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6FB11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v8 + 57) = a8;
  *(_QWORD *)(v8 + 136) = a6;
  *(_QWORD *)(v8 + 144) = a7;
  *(_QWORD *)(v8 + 120) = a4;
  *(_QWORD *)(v8 + 128) = a5;
  *(_QWORD *)(v8 + 104) = a2;
  *(_QWORD *)(v8 + 112) = a3;
  *(_QWORD *)(v8 + 96) = a1;
  v9 = sub_21F71659C();
  *(_QWORD *)(v8 + 152) = v9;
  *(_QWORD *)(v8 + 160) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v10 = sub_21F7165B4();
  *(_QWORD *)(v8 + 184) = v10;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  return swift_task_switch();
}

void sub_21F6FB1C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 96);
  if (v1 < 0)
  {
    __break(1u);
  }
  else if (v1)
  {
    *(_QWORD *)(v0 + 208) = 0;
    *(_QWORD *)(v0 + 216) = 0;
    sub_21F7162F0();
    v3 = (void (*)(uint64_t))(**(int **)(v0 + 104) + *(_QWORD *)(v0 + 104));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v2;
    *v2 = v0;
    v2[1] = sub_21F6FB600;
    v3(v0 + 80);
  }
  else
  {
    sub_21F6FBFDC();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6FB600()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6FB664()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

void sub_21F6FB6C4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  _QWORD *v22;
  _QWORD *v23;
  void (*v24)(uint64_t);
  uint64_t v25;

  v1 = *(void **)(v0 + 232);
  *(_QWORD *)(v0 + 240) = v1;

  v2 = v1;
  if (qword_2554DA718 != -1)
    swift_once();
  v3 = sub_21F715F3C();
  __swift_project_value_buffer(v3, (uint64_t)static PASLogger.common);
  v4 = v1;
  v5 = v1;
  v6 = sub_21F715F24();
  v7 = sub_21F716350();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 216);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v25 = v10;
    *(_DWORD *)v9 = 136446466;
    swift_getErrorValue();
    v11 = sub_21F7168CC();
    *(_QWORD *)(v9 + 4) = sub_21F644208(v11, v12, &v25);
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2050;
    *(_QWORD *)(v9 + 14) = v8;
    _os_log_impl(&dword_21F63C000, v6, v7, "Retry task received error: %{public}s, retryCount: %{public}ld)", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
  }
  else
  {

  }
  if (((*(uint64_t (**)(void *))(v0 + 120))(v1) & 1) == 0)
  {
    swift_willThrow();

LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if ((*(_BYTE *)(v0 + 57) & 1) == 0)
  {
    v17 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 168);
    v18 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 136);
    sub_21F7165A8();
    *(_QWORD *)(v0 + 64) = v20;
    *(_QWORD *)(v0 + 72) = v18;
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 40) = 0;
    *(_BYTE *)(v0 + 56) = 1;
    sub_21F647438(&qword_2554E3148, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    sub_21F71689C();
    sub_21F647438(&qword_2554E3150, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
    sub_21F7165C0();
    v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    *(_QWORD *)(v0 + 248) = v21;
    v21(v16, v19);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v22;
    *v22 = v0;
    v22[1] = sub_21F6FBAC4;
    sub_21F7168A8();
    return;
  }
  v13 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 216) + 1;

  if (v14 == v13)
  {
    swift_willThrow();
    goto LABEL_14;
  }
  v15 = *(_QWORD *)(v0 + 216) + 1;
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 216) = v15;
  if (v15 == *(_QWORD *)(v0 + 96))
  {
    __break(1u);
  }
  else
  {
    sub_21F7162F0();
    v24 = (void (*)(uint64_t))(**(int **)(v0 + 104) + *(_QWORD *)(v0 + 104));
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v23;
    *v23 = v0;
    v23[1] = sub_21F6FB600;
    v24(v0 + 80);
  }
}

uint64_t sub_21F6FBAC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 248))(*(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 152));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 192);
    v3 = *(_QWORD *)(v2 + 200);
    v5 = *(_QWORD *)(v2 + 184);
    (*(void (**)(_QWORD, _QWORD))(v2 + 248))(*(_QWORD *)(v2 + 176), *(_QWORD *)(v2 + 152));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

void sub_21F6FBB64()
{
  uint64_t v0;
  void *v1;
  char **p_name;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  _QWORD *v26;
  void (*v27)(uint64_t);
  uint64_t v28;

  v1 = *(void **)(v0 + 264);
  p_name = &PASAnisetteRemoteRequestHandler.name;
  while (1)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 216) + 1;

    if (v4 == v3)
    {
      swift_willThrow();
LABEL_16:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
      return;
    }
    v5 = *(_QWORD *)(v0 + 216) + 1;
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v0 + 216) = v5;
    if (v5 == *(_QWORD *)(v0 + 96))
      break;
    sub_21F7162F0();
    if (!v1)
    {
      v27 = (void (*)(uint64_t))(**(int **)(v0 + 104) + *(_QWORD *)(v0 + 104));
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v19;
      *v19 = v0;
      v19[1] = sub_21F6FB600;
      v27(v0 + 80);
      return;
    }
    v6 = v1;
    *(_QWORD *)(v0 + 240) = v1;

    v7 = v1;
    if (p_name[227] != (char *)-1)
      swift_once();
    v8 = sub_21F715F3C();
    __swift_project_value_buffer(v8, (uint64_t)static PASLogger.common);
    v9 = v1;
    v10 = v1;
    v11 = sub_21F715F24();
    v12 = sub_21F716350();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = p_name;
      v14 = *(_QWORD *)(v0 + 216);
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v28 = v16;
      *(_DWORD *)v15 = 136446466;
      swift_getErrorValue();
      v17 = sub_21F7168CC();
      *(_QWORD *)(v15 + 4) = sub_21F644208(v17, v18, &v28);
      swift_bridgeObjectRelease();

      *(_WORD *)(v15 + 12) = 2050;
      *(_QWORD *)(v15 + 14) = v14;
      p_name = v13;
      _os_log_impl(&dword_21F63C000, v11, v12, "Retry task received error: %{public}s, retryCount: %{public}ld)", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v16, -1, -1);
      MEMORY[0x2207CC514](v15, -1, -1);
    }
    else
    {

    }
    if (((*(uint64_t (**)(void *))(v0 + 120))(v6) & 1) == 0)
    {
      swift_willThrow();

      goto LABEL_16;
    }
    v1 = 0;
    if ((*(_BYTE *)(v0 + 57) & 1) == 0)
    {
      v21 = *(_QWORD *)(v0 + 160);
      v20 = *(_QWORD *)(v0 + 168);
      v22 = *(_QWORD *)(v0 + 144);
      v23 = *(_QWORD *)(v0 + 152);
      v24 = *(_QWORD *)(v0 + 136);
      sub_21F7165A8();
      *(_QWORD *)(v0 + 64) = v24;
      *(_QWORD *)(v0 + 72) = v22;
      *(_QWORD *)(v0 + 48) = 0;
      *(_QWORD *)(v0 + 40) = 0;
      *(_BYTE *)(v0 + 56) = 1;
      sub_21F647438(&qword_2554E3148, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
      sub_21F71689C();
      sub_21F647438(&qword_2554E3150, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
      sub_21F7165C0();
      v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      *(_QWORD *)(v0 + 248) = v25;
      v25(v20, v23);
      v26 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v26;
      *v26 = v0;
      v26[1] = sub_21F6FBAC4;
      sub_21F7168A8();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_21F6FBF68()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 240);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_21F6FBFDC()
{
  unint64_t result;

  result = qword_2554E3158;
  if (!qword_2554E3158)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724D00, &type metadata for PASTaskRetryError);
    atomic_store(result, (unint64_t *)&qword_2554E3158);
  }
  return result;
}

uint64_t sub_21F6FC020()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F6FC044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F656988;
  v7[6] = a3;
  v7[7] = v3;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t _s21ProximityAppleIDSetup22PASDeviceInfoExchangerC12RelativeNameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F6FC100 + 4 * byte_21F722EB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F6FC134 + 4 * byte_21F722EB0[v4]))();
}

uint64_t sub_21F6FC134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6FC13C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6FC144);
  return result;
}

uint64_t sub_21F6FC150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6FC158);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F6FC15C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6FC164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASDeviceAndAccountError()
{
  return &type metadata for PASDeviceAndAccountError;
}

unint64_t sub_21F6FC184(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6FC1B8();
  a1[2] = sub_21F6FC1FC();
  result = sub_21F6FC240();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6FC1B8()
{
  unint64_t result;

  result = qword_2554E3198;
  if (!qword_2554E3198)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7230AC, &type metadata for PASDeviceAndAccountError);
    atomic_store(result, (unint64_t *)&qword_2554E3198);
  }
  return result;
}

unint64_t sub_21F6FC1FC()
{
  unint64_t result;

  result = qword_2554E31A0;
  if (!qword_2554E31A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723064, &type metadata for PASDeviceAndAccountError);
    atomic_store(result, (unint64_t *)&qword_2554E31A0);
  }
  return result;
}

unint64_t sub_21F6FC240()
{
  unint64_t result;

  result = qword_2554E31A8;
  if (!qword_2554E31A8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F72303C, &type metadata for PASDeviceAndAccountError);
    atomic_store(result, (unint64_t *)&qword_2554E31A8);
  }
  return result;
}

unint64_t sub_21F6FC288()
{
  unint64_t result;

  result = qword_2554E31B0;
  if (!qword_2554E31B0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723180, &type metadata for PASDeviceAndAccountError);
    atomic_store(result, (unint64_t *)&qword_2554E31B0);
  }
  return result;
}

uint64_t sub_21F6FC2D8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_21F6FC328@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F6FCE50();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21F6FC34C()
{
  return 9010;
}

uint64_t sub_21F6FC35C()
{
  sub_21F6FCD3C();
  return sub_21F7168C0();
}

uint64_t sub_21F6FC384()
{
  sub_21F6FCD3C();
  return sub_21F7168B4();
}

uint64_t sub_21F6FC3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6FC3C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 64);
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_21F6FC444;
  return v6(v2, v3);
}

uint64_t sub_21F6FC444(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F6FC4B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  _BYTE *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 80);
  if (v1)
  {
    v2 = (void *)(*(uint64_t (**)(void))(v0 + 48))();
    *(_QWORD *)(v0 + 88) = v2;
    objc_msgSend(v2, sel_setAuthenticationType_, 0);
    objc_msgSend(v2, sel_setAppProvidedContext_, *MEMORY[0x24BE0AB10]);
    v3 = objc_msgSend(v1, sel_aa_altDSID);
    if (v3)
    {
      sub_21F716104();

      v3 = (id)sub_21F7160E0();
      swift_bridgeObjectRelease();
    }
    v4 = *(_QWORD **)(v0 + 64);
    objc_msgSend(v2, sel_setAltDSID_, v3);

    objc_msgSend(v2, sel_setNeedsNewChildAccount_, 1);
    objc_msgSend(v2, sel__setProxyingForApp_, 1);
    v5 = v4 + 7;
    v6 = v4[10];
    v7 = v4[11];
    __swift_project_boxed_opaque_existential_1(v5, v6);
    v12 = (uint64_t (*)(void *, uint64_t, uint64_t))(**(int **)(v7 + 8) + *(_QWORD *)(v7 + 8));
    v8 = v2;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v9;
    *v9 = v0;
    v9[1] = sub_21F6FC668;
    return v12(v2, v6, v7);
  }
  else
  {
    sub_21F6FCBE0();
    swift_allocError();
    *v11 = 3;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6FC668(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_QWORD *)(v4 + 112) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6FC6E4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 112));
}

uint64_t sub_21F6FC720()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  void *v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v35[2];

  v1 = (void *)sub_21F715D44();
  v2 = objc_msgSend(v1, sel_code);

  if (v2 == (id)-7003)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v3 = *(void **)(v0 + 104);
    v4 = sub_21F715F3C();
    __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
    v5 = v3;
    v6 = v3;
    v7 = sub_21F715F24();
    v8 = sub_21F716374();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(void **)(v0 + 104);
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v35[0] = v12;
      *(_DWORD *)v11 = 136446210;
      *(_QWORD *)(v0 + 32) = v10;
      v13 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
      v14 = sub_21F716128();
      *(_QWORD *)(v0 + 40) = sub_21F644208(v14, v15, v35);
      sub_21F716428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21F63C000, v7, v8, "PASFlowStepAccountCreation user cancelled: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v12, -1, -1);
      MEMORY[0x2207CC514](v11, -1, -1);
    }
    else
    {

    }
    v29 = *(void **)(v0 + 104);
    v31 = *(void **)(v0 + 80);
    v30 = *(void **)(v0 + 88);
    sub_21F6FCC24();
    swift_allocError();
    swift_willThrow();

  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v16 = *(void **)(v0 + 104);
    v17 = sub_21F715F3C();
    __swift_project_value_buffer(v17, (uint64_t)static PASLogger.common);
    v18 = v16;
    v19 = v16;
    v20 = sub_21F715F24();
    v21 = sub_21F71635C();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(void **)(v0 + 104);
    if (v22)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v35[0] = v25;
      *(_DWORD *)v24 = 136446210;
      *(_QWORD *)(v0 + 16) = v23;
      v26 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
      v27 = sub_21F716128();
      *(_QWORD *)(v0 + 24) = sub_21F644208(v27, v28, v35);
      sub_21F716428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21F63C000, v20, v21, "PASFlowStepAccountCreation failed: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v25, -1, -1);
      MEMORY[0x2207CC514](v24, -1, -1);
    }
    else
    {

    }
    v32 = *(void **)(v0 + 80);
    v33 = *(void **)(v0 + 88);
    swift_willThrow();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6FCB20()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FACreateChildProxiedAuthController()
{
  return objc_opt_self();
}

uint64_t sub_21F6FCB6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21F6514BC;
  v7[7] = a2;
  v7[8] = v6;
  v7[6] = a1;
  return swift_task_switch();
}

unint64_t sub_21F6FCBE0()
{
  unint64_t result;

  result = qword_2554E3270;
  if (!qword_2554E3270)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724048, &type metadata for FAFamilyMemberProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3270);
  }
  return result;
}

unint64_t sub_21F6FCC24()
{
  unint64_t result;

  result = qword_2554E3278;
  if (!qword_2554E3278)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7234B4, &type metadata for FACreateChildProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3278);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FACreateChildProxiedAuthControllerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6FCCA8 + 4 * byte_21F7232A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6FCCC8 + 4 * byte_21F7232A5[v4]))();
}

_BYTE *sub_21F6FCCA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6FCCC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6FCCD0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6FCCD8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6FCCE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6FCCE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FACreateChildProxiedAuthControllerError()
{
  return &type metadata for FACreateChildProxiedAuthControllerError;
}

unint64_t sub_21F6FCD08(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6FCD3C();
  a1[2] = sub_21F6FCD80();
  result = sub_21F6FCDC4();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6FCD3C()
{
  unint64_t result;

  result = qword_2554E3280;
  if (!qword_2554E3280)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7233B8, &type metadata for FACreateChildProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3280);
  }
  return result;
}

unint64_t sub_21F6FCD80()
{
  unint64_t result;

  result = qword_2554E3288;
  if (!qword_2554E3288)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723370, &type metadata for FACreateChildProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3288);
  }
  return result;
}

unint64_t sub_21F6FCDC4()
{
  unint64_t result;

  result = qword_2554E3290;
  if (!qword_2554E3290)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723348, &type metadata for FACreateChildProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3290);
  }
  return result;
}

unint64_t sub_21F6FCE0C()
{
  unint64_t result;

  result = qword_2554E3298;
  if (!qword_2554E3298)
  {
    result = MEMORY[0x2207CC46C](&unk_21F72348C, &type metadata for FACreateChildProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3298);
  }
  return result;
}

uint64_t sub_21F6FCE50()
{
  return 0x636E614372657375;
}

unint64_t PASFlowStepProxiedTermsError.description.getter(uint64_t a1, char a2)
{
  unint64_t v3;

  if ((a2 & 1) != 0)
  {
    v3 = 0xD00000000000002CLL;
    if (a1 == 1)
      v3 = 0xD000000000000023;
    if (a1)
      return v3;
    else
      return 0xD000000000000023;
  }
  else
  {
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    sub_21F7167A0();
    sub_21F716140();
    swift_bridgeObjectRelease();
    return 0xD00000000000002BLL;
  }
}

uint64_t sub_21F6FCF64()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return qword_21F7237E8[*(_QWORD *)v0];
  else
    return 2201;
}

unint64_t sub_21F6FCF8C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v4;
  v5 = PASFlowStepProxiedTermsError.description.getter(v1, v2);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v6;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6FD018()
{
  uint64_t v0;

  return PASFlowStepProxiedTermsError.description.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_21F6FD024()
{
  sub_21F6FE918();
  return sub_21F7168C0();
}

uint64_t sub_21F6FD04C()
{
  sub_21F6FE918();
  return sub_21F7168B4();
}

uint64_t PASFlowStepProxiedTerms.proxiedAuthResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F6FD084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms____lazy_storage___analytics;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms____lazy_storage___analytics))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms____lazy_storage___analytics);
  }
  else
  {
    v3 = v0;
    swift_retain();
    sub_21F6569AC((uint64_t)v7);
    swift_release();
    v4 = v8;
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v2 = (*(uint64_t (**)(ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(&type metadata for PASFlowStepProxiedTerms.AnalyticsEvent, &off_24E45AD90, v4, v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t PASFlowStepProxiedTerms.presentTerms(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6FD170()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716344();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepProxiedTerms presentTerms(with:)", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[20];
  v6 = v0[21];

  sub_21F647710(v5, (uint64_t)(v0 + 2));
  v7 = v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_termsHandler;
  swift_beginAccess();
  sub_21F6FD8FC((uint64_t)(v0 + 2), v7);
  swift_endAccess();
  v8 = (_QWORD *)swift_task_alloc();
  v0[23] = v8;
  *v8 = v0;
  v8[1] = sub_21F6FD2DC;
  v8[5] = v0[21];
  return swift_task_switch();
}

uint64_t sub_21F6FD2DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_21F6FD348()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = (_QWORD *)v0[20];
  v2 = v0[21];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v4 = (uint64_t *)(*(_QWORD *)(v2
                             + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms__anisetteProvisioningController)
                 + 16);
  swift_beginAccess();
  v5 = *v4;
  if (*v4)
  {
    swift_retain();
    v6 = v5;
  }
  else
  {
    v7 = qword_2554DA6A0;
    swift_retain();
    if (v7 != -1)
      swift_once();
    v6 = sub_21F63F7C0();
    *v4 = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[26] = v6;
  swift_unknownObjectRetain();
  swift_release();
  if (qword_2554DA6B0 != -1)
    swift_once();
  v9 = **(int **)(v3 + 8) + *(_QWORD *)(v3 + 8);
  swift_retain_n();
  v8 = (_QWORD *)swift_task_alloc();
  v0[27] = v8;
  *v8 = v0;
  v8[1] = sub_21F6FD4F0;
  __asm { BR              X8 }
}

uint64_t sub_21F6FD4F0()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_release_n();
  return swift_task_switch();
}

uint64_t sub_21F6FD55C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 224) = sub_21F6FD084();
  *(_QWORD *)(v0 + 80) = &type metadata for PASFlowStepProxiedTerms.AnalyticsEvent;
  *(_QWORD *)(v0 + 88) = &off_24E45AD90;
  *(_BYTE *)(v0 + 56) = 0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v1;
  *v1 = v0;
  v1[1] = sub_21F6FD5D8;
  return sub_21F6B83E4(v0 + 56, 0, 0);
}

uint64_t sub_21F6FD5D8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 56;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6FD640()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6FD670()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  unsigned __int8 v16;
  id v17;
  uint64_t v19;

  v1 = (void *)v0[25];
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[25];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v19 = v8;
    v0[18] = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    v0[19] = sub_21F644208(v10, v11, &v19);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "Failed to load terms error: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);
  }
  else
  {
    v12 = (void *)v0[25];

  }
  v13 = (void *)v0[25];
  v14 = v0[21] + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result;
  v15 = *(void **)v14;
  *(_QWORD *)v14 = v13;
  v16 = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(v14 + 8) = 1;
  v17 = v13;
  sub_21F68624C(v15, v16);
  sub_21F7162A8();
  v0[30] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6FD888()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F6FD8CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6FD8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E32B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6FD944()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6FD95C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716344();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepProxiedTerms fetchProxiedDevice", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[5];

  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms__sourceAppleIDExchanger);
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(v6 + 24);
    swift_retain();
    v9 = v7;
  }
  else
  {
    v10 = qword_2554DA6A0;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v9 = sub_21F63F1E4();
    v8 = v11;
    *(_QWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 24) = v11;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[6] = v9;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v15 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v8 + 40) + *(_QWORD *)(v8 + 40));
  v13 = (_QWORD *)swift_task_alloc();
  v0[7] = v13;
  *v13 = v0;
  v13[1] = sub_21F6FDB34;
  return v15(ObjectType, v8);
}

uint64_t sub_21F6FDB34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_unknownObjectRelease();
    *(_QWORD *)(v4 + 72) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F6FDBB0()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 72), sel_setLinkType_, 3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_21F6FDBF4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6FDC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6FDC40()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  v1 = v0[8] + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result;
  v2 = *(void **)v1;
  *(_QWORD *)v1 = v0[7];
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(v1 + 8) = 0;
  sub_21F68624C(v2, v3);
  sub_21F7162A8();
  swift_bridgeObjectRetain();
  v0[9] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6FDCD4()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F6FDD14()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 80) = sub_21F6FD084();
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepProxiedTerms.AnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E45AD90;
  *(_BYTE *)(v0 + 16) = 1;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_21F6FDD94;
  return sub_21F6B83E4(v0 + 16, 0, 0);
}

uint64_t sub_21F6FDD94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  swift_release();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21F6FDDF0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6FDE08()
{
  uint64_t v0;

  sub_21F7162A8();
  *(_QWORD *)(v0 + 64) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6FDE70()
{
  swift_release();
  PASSourceFlowStepBase.promptForCancel()();
  return swift_task_switch();
}

uint64_t sub_21F6FDEB0()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 72) = sub_21F6FD084();
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepProxiedTerms.AnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E45AD90;
  *(_BYTE *)(v0 + 16) = 2;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_21F6FDF30;
  return sub_21F6B83E4(v0 + 16, 0, 0);
}

uint64_t sub_21F6FDF30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  swift_release();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t PASFlowStepProxiedTerms.nextStep()()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[40];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result);
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result + 8);
  if (v2 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v12 = 0xD00000000000002FLL;
    *(_QWORD *)(v12 + 8) = 0x800000021F72A4C0;
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    *(_BYTE *)(v12 + 32) = 1;
    goto LABEL_5;
  }
  if ((v2 & 1) != 0)
  {
LABEL_5:
    sub_21F686270(v1, v2);
    swift_willThrow();
    return v0;
  }
  v3 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v4 = MEMORY[0x2207CC5BC](v3);
  v5 = *(_QWORD *)(v3 + 8);
  sub_21F647710(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_account, (uint64_t)v14);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_proxiedAuthResults);
  sub_21F686240(v1, 0);
  v7 = PASAuthResults.acceptingTerms(with:)((uint64_t)v1, v6);
  sub_21F68624C(v1, v2);
  type metadata accessor for PASFlowStepSendAuthResults();
  v8 = swift_allocObject();
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults__sourceAppleIDExchanger;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7F0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v8 + v9) = v10;
  v11 = v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = -1;
  sub_21F647710((uint64_t)v14, v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_account);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_proxiedAuthResults) = v7;
  v0 = sub_21F6BC954(v4, v5);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  sub_21F65EAB0(&qword_2554DEF50, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSendAuthResults);
  return v0;
}

Swift::Void __swiftcall PASFlowStepProxiedTerms.dismissCancelAlert()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[40];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  v6 = sub_21F715F24();
  v7 = sub_21F716344();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_21F63C000, v6, v7, "PASFlowStepProxiedTerms dismissCancelAlert", v8, 2u);
    MEMORY[0x2207CC514](v8, -1, -1);
  }

  v9 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_termsHandler;
  swift_beginAccess();
  sub_21F6FE79C(v9, (uint64_t)&v16);
  if (v17)
  {
    sub_21F64756C(&v16, (uint64_t)v18);
    v10 = sub_21F7162C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
    sub_21F647710((uint64_t)v18, (uint64_t)&v16);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v1;
    sub_21F64756C(&v16, (uint64_t)(v11 + 5));
    swift_retain();
    sub_21F6B4038((uint64_t)v4, (uint64_t)&unk_2554E3310, (uint64_t)v11);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
  }
  else
  {
    sub_21F6FE7E4((uint64_t)&v16);
    v12 = sub_21F715F24();
    v13 = sub_21F71635C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21F63C000, v12, v13, "PASFlowStepProxiedTerms dismissCancelAlert termsHandler is nil", v14, 2u);
      MEMORY[0x2207CC514](v14, -1, -1);
    }

  }
}

uint64_t sub_21F6FE3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v8;
  *v8 = v5;
  v8[1] = sub_21F656988;
  v8[20] = a5;
  v8[21] = a4;
  return swift_task_switch();
}

void PASFlowStepProxiedTerms.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepProxiedTerms.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6FE498()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_account);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21F68624C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result + 8));
  return sub_21F6FE7E4(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_termsHandler);
}

uint64_t PASFlowStepProxiedTerms.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_account);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_21F68624C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result + 8));
  sub_21F6FE7E4(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_termsHandler);
  return v0;
}

uint64_t PASFlowStepProxiedTerms.__deallocating_deinit()
{
  PASFlowStepProxiedTerms.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_21F6FE5F8(char a1)
{
  if (!a1)
    return 0xD000000000000020;
  if (a1 == 1)
    return 0xD00000000000001CLL;
  return 0xD00000000000001FLL;
}

uint64_t sub_21F6FE654()
{
  return PASFlowStepProxiedTerms.nextStep()();
}

uint64_t sub_21F6FE668(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F70C494(*a1, *a2);
}

uint64_t sub_21F6FE674()
{
  return sub_21F70CCDC();
}

uint64_t sub_21F6FE67C()
{
  return sub_21F70D4C4();
}

uint64_t sub_21F6FE684()
{
  return sub_21F70D7CC();
}

uint64_t sub_21F6FE68C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F6FECE4();
  *a1 = result;
  return result;
}

unint64_t sub_21F6FE6B8@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_21F6FE5F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21F6FE6E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F651418;
  v4[7] = a1;
  v4[8] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6FE740()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656988;
  v2[7] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6FE79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E32B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6FE7E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E32B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F6FE824()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_21F6FE858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = v0 + 40;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_21F656988;
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_21F656988;
  v5[20] = v3;
  v5[21] = v2;
  return swift_task_switch();
}

unint64_t sub_21F6FE8E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6FE918();
  a1[2] = sub_21F6FE95C();
  result = sub_21F6FE9A0();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6FE918()
{
  unint64_t result;

  result = qword_2554E3330;
  if (!qword_2554E3330)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedTermsError, &type metadata for PASFlowStepProxiedTermsError);
    atomic_store(result, (unint64_t *)&qword_2554E3330);
  }
  return result;
}

unint64_t sub_21F6FE95C()
{
  unint64_t result;

  result = qword_2554E3338;
  if (!qword_2554E3338)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedTermsError, &type metadata for PASFlowStepProxiedTermsError);
    atomic_store(result, (unint64_t *)&qword_2554E3338);
  }
  return result;
}

unint64_t sub_21F6FE9A0()
{
  unint64_t result;

  result = qword_2554E3340;
  if (!qword_2554E3340)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedTermsError, &type metadata for PASFlowStepProxiedTermsError);
    atomic_store(result, (unint64_t *)&qword_2554E3340);
  }
  return result;
}

unint64_t sub_21F6FE9E8()
{
  unint64_t result;

  result = qword_2554E3348;
  if (!qword_2554E3348)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedTermsError, &type metadata for PASFlowStepProxiedTermsError);
    atomic_store(result, (unint64_t *)&qword_2554E3348);
  }
  return result;
}

uint64_t sub_21F6FEA2C(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554E3350, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepProxiedTerms);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepProxiedTerms()
{
  uint64_t result;

  result = qword_2554E3380;
  if (!qword_2554E3380)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PASFlowStepProxiedTermsError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PASFlowStepProxiedTermsError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_21F6FEB00(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21F6FEB1C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepProxiedTermsError()
{
  return &type metadata for PASFlowStepProxiedTermsError;
}

uint64_t sub_21F6FEB4C()
{
  return type metadata accessor for PASFlowStepProxiedTerms();
}

uint64_t sub_21F6FEB54()
{
  return swift_updateClassMetadata2();
}

uint64_t storeEnumTagSinglePayload for PASFlowStepProxiedTerms.AnalyticsEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F6FEC1C + 4 * byte_21F723505[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F6FEC50 + 4 * byte_21F723500[v4]))();
}

uint64_t sub_21F6FEC50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6FEC58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6FEC60);
  return result;
}

uint64_t sub_21F6FEC6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6FEC74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F6FEC78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6FEC80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepProxiedTerms.AnalyticsEvent()
{
  return &type metadata for PASFlowStepProxiedTerms.AnalyticsEvent;
}

unint64_t sub_21F6FECA0()
{
  unint64_t result;

  result = qword_2554E3608;
  if (!qword_2554E3608)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7237A8, &type metadata for PASFlowStepProxiedTerms.AnalyticsEvent);
    atomic_store(result, (unint64_t *)&qword_2554E3608);
  }
  return result;
}

uint64_t sub_21F6FECE4()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21F6FED2C(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t PASFlowStepAIDASignIn.__allocating_init(delegate:account:authResults:serviceOwnersManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(a3 + 24);
  v12 = *(_QWORD *)(a3 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a3, v11);
  v14 = sub_21F702B58(a1, a2, v13, a4, a5, v5, v11, v12);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(a3);
  return v14;
}

uint64_t sub_21F6FEE40(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *v1;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_21F67F10C;
  v5 = swift_continuation_init();
  v2[10] = MEMORY[0x24BDAC760];
  v6 = v2 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_21F6FED2C;
  v6[3] = &block_descriptor_8;
  v6[4] = v5;
  objc_msgSend(v4, sel_signInToAllServicesInBackgroundUsingContext_completion_, a1, v6);
  return swift_continuation_await();
}

uint64_t PASCDPEnrollmentStatus.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_21F6FEEEC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s21ProximityAppleIDSetup22PASCDPEnrollmentStatusO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_21F6FEF14(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_21F6FEF20()
{
  sub_21F702F48();
  return sub_21F7161AC();
}

uint64_t sub_21F6FEF7C()
{
  sub_21F702F48();
  return sub_21F716170();
}

uint64_t sub_21F6FEFC8()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F6FF01C()
{
  return sub_21F716134();
}

uint64_t sub_21F6FF038()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F6FF088@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21F6FF0D8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x800000021F725E70;
}

uint64_t sub_21F6FF100()
{
  sub_21F7030E4();
  return sub_21F7168C0();
}

uint64_t sub_21F6FF128()
{
  sub_21F7030E4();
  return sub_21F7168B4();
}

uint64_t PASFlowStepAIDASignIn.authResults.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t PASFlowStepAIDASignIn.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647710(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account, a1);
}

uint64_t PASFlowStepAIDASignIn.init(delegate:account:authResults:serviceOwnersManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v11 = *(_QWORD *)(a3 + 24);
  v12 = *(_QWORD *)(a3 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a3, v11);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_21F702938(a1, a2, (uint64_t)v15, a4, a5, v5, v11, v12);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(a3);
  return v17;
}

uint64_t PASFlowStepAIDASignIn.isPersonalSignIn.getter()
{
  uint64_t v0;
  int v1;
  _BYTE v3[40];

  sub_21F647710(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
  type metadata accessor for PASFamilyMember();
  v1 = swift_dynamicCast();
  if (v1)
    swift_release();
  return v1 ^ 1u;
}

uint64_t PASFlowStepAIDASignIn.performSignIn(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc();
  v3[5] = v4;
  *v4 = v3;
  v4[1] = sub_21F6FF374;
  v4[8] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6FF374(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6FF3D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;
  __int128 v5;

  if ((*(_BYTE *)(v0 + 72) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result;
    v2 = *(void **)v1;
    *(_QWORD *)v1 = 1;
    v3 = *(_BYTE *)(v1 + 8);
    *(_BYTE *)(v1 + 8) = 0;
    sub_21F674A0C(v2, v3);
    sub_21F7162A8();
    *(_QWORD *)(v0 + 64) = sub_21F71629C();
    sub_21F716248();
  }
  else
  {
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v4;
    *(_QWORD *)v4 = v0;
    *(_QWORD *)(v4 + 8) = sub_21F6FF4B0;
    v5 = *(_OWORD *)(v0 + 16);
    *(_QWORD *)(v4 + 56) = *(_QWORD *)(v0 + 32);
    *(_OWORD *)(v4 + 40) = v5;
  }
  return swift_task_switch();
}

uint64_t sub_21F6FF4B0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 73) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_21F6FF528()
{
  uint64_t v0;
  BOOL v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 56) != 0;
  v2 = *(_QWORD *)(v0 + 32) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = *(unsigned __int8 *)(v0 + 73);
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = v1;
  sub_21F674A0C(v3, v4);
  sub_21F7162A8();
  *(_QWORD *)(v0 + 64) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6FF5C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v1 = v0[7];
  v2 = v0[4] + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = v1;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = v1 != 0;
  sub_21F674A0C(v3, v4);
  sub_21F7162A8();
  v0[8] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6FF65C()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6FF694()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6FF6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 72) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = (uint64_t *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_authResults);
    swift_beginAccess();
    v5 = swift_bridgeObjectRetain();
    sub_21F6FFD4C(v5);
    swift_bridgeObjectRelease();
    ObjectType = swift_getObjectType();
    v7 = *v4;
    *(_QWORD *)(v0 + 80) = *v4;
    v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v8;
    *v8 = v0;
    v8[1] = sub_21F6FF888;
    return v14(v7, ObjectType, v3);
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v10 = sub_21F715F3C();
    __swift_project_value_buffer(v10, (uint64_t)static PASLogger.common);
    v11 = sub_21F715F24();
    v12 = sub_21F716368();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASFlowStepAIDASignIn delegate is nil in askForSignIn", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_21F6FF888(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6FF8EC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 96));
}

uint64_t sub_21F6FF920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6FF93C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  swift_unknownObjectRelease();
  if (!v2)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v3 = sub_21F715F3C();
    __swift_project_value_buffer(v3, (uint64_t)static PASLogger.common);
    v4 = sub_21F715F24();
    v5 = sub_21F716368();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepAIDASignIn delegate is nil in performSignIn", v6, 2u);
      MEMORY[0x2207CC514](v6, -1, -1);
    }

  }
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *(_QWORD *)v7 = v0;
  *(_QWORD *)(v7 + 8) = sub_21F6FFA98;
  v8 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v7 + 360) = *(_QWORD *)(v0 + 56);
  *(_OWORD *)(v7 + 344) = v8;
  return swift_task_switch();
}

uint64_t sub_21F6FFA98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v5;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 80) = v5;
  *v5 = v3;
  v5[1] = sub_21F6FFB3C;
  v5[18] = *(_QWORD *)(v3 + 56);
  return swift_task_switch();
}

uint64_t sub_21F6FFB3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6FFBA0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)(v0[7] + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_serviceOwnersManager);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v6 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[12] = v4;
  *v4 = v0;
  v4[1] = sub_21F6FFC2C;
  return v6(v0[9], v2, v3);
}

uint64_t sub_21F6FFC2C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 112) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_21F6FFCA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 112));
}

uint64_t sub_21F6FFCDC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6FFD14()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_21F6FFD4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD v19[2];
  uint64_t v20[3];
  uint64_t v21;

  v2 = v1;
  v3 = sub_21F66C890(a1);
  if (qword_2554DA6B0 != -1)
    swift_once();
  v4 = (void *)static PASConstants.appProvidedContextDependentSetup;
  type metadata accessor for AKAppleIDAuthenticationAppProvidedContext(0);
  v21 = v5;
  v20[0] = (uint64_t)v4;
  sub_21F644FEC(v20, v19);
  v6 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21F645084(v19, 0xD000000000000012, 0x800000021F727170, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v8 = sub_21F66BD5C(v3);
  swift_bridgeObjectRelease();
  v20[0] = sub_21F6409B8(MEMORY[0x24BEE4AF8]);
  v9 = swift_bridgeObjectRetain();
  sub_21F670EE8(v9, v20, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_21F66CC60, 0, v8);
  swift_bridgeObjectRelease_n();
  v10 = sub_21F66CC64(v20[0]);
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_authResults);
  swift_beginAccess();
  *v11 = v10;
  swift_bridgeObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v12 = sub_21F715F3C();
  __swift_project_value_buffer(v12, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v13 = sub_21F715F24();
  v14 = sub_21F716350();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    *(_DWORD *)v15 = 141558274;
    *(_QWORD *)&v19[0] = v16;
    sub_21F716428();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    v17 = sub_21F716128();
    sub_21F644208(v17, v18, (uint64_t *)v19);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v13, v14, "PASFlowStepAIDASignIn addAppProvidedContext to AuthResults:%{mask.hash}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v16, -1, -1);
    MEMORY[0x2207CC514](v15, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_21F700050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[44] = a2;
  v3[45] = v2;
  v3[43] = a1;
  return swift_task_switch();
}

uint64_t sub_21F70006C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 368) = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_authResults;
  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  sub_21F66C120(v1);
  swift_bridgeObjectRelease();
  v2 = objc_allocWithZone(MEMORY[0x24BE1A3F8]);
  v3 = (void *)sub_21F71602C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithAuthenticationResults_, v3);
  *(_QWORD *)(v0 + 376) = v4;

  if (v4)
  {
    swift_retain();
    sub_21F656B08(v0 + 96);
    swift_release();
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v5);
    v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v7;
    *v7 = v0;
    v7[1] = sub_21F700210;
    return v9(v0 + 56, v5, v6);
  }
  else
  {
    sub_21F702F8C();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F700210()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_21F70027C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t type;
  uint64_t v40;

  v1 = v0 + 56;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  sub_21F647710(*(_QWORD *)(v0 + 360) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account, v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
  type metadata accessor for PASFamilyMember();
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_release();
    if (qword_2554DA718 != -1)
      swift_once();
    v2 = sub_21F715F3C();
    __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
    v3 = sub_21F715F24();
    v4 = sub_21F716350();
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_18;
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASFlowStepAIDASignIn this is not personal sigin, so skip on setting sharing channel", v5, 2u);
    v6 = (uint64_t)v5;
LABEL_17:
    MEMORY[0x2207CC514](v6, -1, -1);
LABEL_18:

    goto LABEL_22;
  }
  sub_21F690534(v0 + 56, v0 + 216);
  if (!*(_QWORD *)(v0 + 240))
  {
    sub_21F702FD0(v0 + 216);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB340);
  sub_21F64779C(0, (unint64_t *)&qword_2554DB348);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    if (qword_2554DA718 != -1)
      swift_once();
    v21 = *(void **)(v0 + 376);
    v22 = sub_21F715F3C();
    __swift_project_value_buffer(v22, (uint64_t)static PASLogger.common);
    sub_21F690534(v0 + 56, v0 + 176);
    v23 = v21;
    v24 = sub_21F715F24();
    v25 = sub_21F71635C();
    v26 = os_log_type_enabled(v24, v25);
    v27 = *(void **)(v0 + 376);
    if (!v26)
    {
      sub_21F702FD0(v0 + 176);

      goto LABEL_22;
    }
    v28 = swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    type = swift_slowAlloc();
    v40 = type;
    *(_DWORD *)v28 = 136446722;
    sub_21F690534(v0 + 176, v0 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE730);
    v29 = sub_21F716128();
    *(_QWORD *)(v0 + 288) = sub_21F644208(v29, v30, &v40);
    v1 = v0 + 56;
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F702FD0(v0 + 176);
    *(_WORD *)(v28 + 12) = 2160;
    *(_QWORD *)(v0 + 296) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v28 + 22) = 2112;
    *(_QWORD *)(v0 + 304) = v27;
    v31 = v27;
    sub_21F716428();
    *v38 = v27;

    v3 = v24;
    _os_log_impl(&dword_21F63C000, v24, v25, "PASFlowStepAIDASignIn unable to cast/unwrap message session (%{public}s for cdp context (%{mask.hash}@)", (uint8_t *)v28, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v38, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](type, -1, -1);
    v6 = v28;
    goto LABEL_17;
  }
  v7 = *(void **)(v0 + 312);
  if (qword_2554DA718 != -1)
    swift_once();
  v8 = *(void **)(v0 + 376);
  v9 = sub_21F715F3C();
  __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
  v10 = v7;
  v11 = v8;
  v12 = v10;
  v13 = v11;
  v14 = sub_21F715F24();
  v15 = sub_21F716350();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(void **)(v0 + 376);
  if (v16)
  {
    v18 = swift_slowAlloc();
    v37 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v18 = 138543874;
    *(_QWORD *)(v0 + 320) = v12;
    v19 = v12;
    sub_21F716428();
    *v37 = v12;

    *(_WORD *)(v18 + 12) = 2160;
    *(_QWORD *)(v0 + 328) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v18 + 22) = 2112;
    *(_QWORD *)(v0 + 336) = v17;
    v20 = v17;
    v1 = v0 + 56;
    sub_21F716428();
    v37[1] = v17;

    _os_log_impl(&dword_21F63C000, v14, v15, "PASFlowStepAIDASignIn setting sharing channel (%{public}@ on cdp context (%{mask.hash}@)", (uint8_t *)v18, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v37, -1, -1);
    MEMORY[0x2207CC514](v18, -1, -1);
  }
  else
  {

    v14 = v12;
  }
  v32 = *(void **)(v0 + 376);

  objc_msgSend(v32, sel_setSharingChannel_, v12);
LABEL_22:
  v33 = *(void **)(v0 + 376);
  v34 = (void *)(*(uint64_t (**)(void *))(v0 + 344))(v33);
  objc_msgSend(v34, sel_setShouldForceOperation_, 0);
  objc_msgSend(v34, sel_setOperationUIPermissions_, 1);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  v35 = (void *)sub_21F71602C();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setAuthenticationResults_, v35);

  sub_21F702FD0(v1);
  return (*(uint64_t (**)(void *))(v0 + 8))(v34);
}

uint64_t sub_21F700944()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v32;
  _QWORD *v33;
  _QWORD *v34;
  os_log_type_t type;
  uint64_t typea;
  os_log_type_t v37[8];
  uint64_t v38;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  *(_OWORD *)(v0 + 56) = 0u;
  *(_QWORD *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  sub_21F647710(*(_QWORD *)(v0 + 360) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account, v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
  type metadata accessor for PASFamilyMember();
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_release();
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716350();
    if (!os_log_type_enabled(v2, v3))
      goto LABEL_19;
    v4 = swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepAIDASignIn this is not personal sigin, so skip on setting sharing channel", (uint8_t *)v4, 2u);
    goto LABEL_17;
  }
  sub_21F690534(v0 + 56, v0 + 216);
  if (!*(_QWORD *)(v0 + 240))
  {
    sub_21F702FD0(v0 + 216);
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB340);
  sub_21F64779C(0, (unint64_t *)&qword_2554DB348);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    if (qword_2554DA718 != -1)
      swift_once();
    v19 = *(void **)(v0 + 376);
    v20 = sub_21F715F3C();
    __swift_project_value_buffer(v20, (uint64_t)static PASLogger.common);
    sub_21F690534(v0 + 56, v0 + 176);
    v21 = v19;
    v2 = sub_21F715F24();
    v22 = sub_21F71635C();
    v23 = os_log_type_enabled(v2, v22);
    v24 = *(void **)(v0 + 376);
    if (!v23)
    {
      sub_21F702FD0(v0 + 176);

      goto LABEL_19;
    }
    v4 = swift_slowAlloc();
    v34 = (_QWORD *)swift_slowAlloc();
    typea = swift_slowAlloc();
    v38 = typea;
    *(_DWORD *)v4 = 136446722;
    sub_21F690534(v0 + 176, v0 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE730);
    v25 = sub_21F716128();
    *(_QWORD *)(v0 + 288) = sub_21F644208(v25, v26, &v38);
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F702FD0(v0 + 176);
    *(_WORD *)(v4 + 12) = 2160;
    *(_QWORD *)(v0 + 296) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v4 + 22) = 2112;
    *(_QWORD *)(v0 + 304) = v24;
    v27 = v24;
    sub_21F716428();
    *v34 = v24;

    _os_log_impl(&dword_21F63C000, v2, v22, "PASFlowStepAIDASignIn unable to cast/unwrap message session (%{public}s for cdp context (%{mask.hash}@)", (uint8_t *)v4, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v34, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](typea, -1, -1);
LABEL_17:
    MEMORY[0x2207CC514](v4, -1, -1);
LABEL_19:

    goto LABEL_20;
  }
  v5 = *(void **)(v0 + 312);
  if (qword_2554DA718 != -1)
    swift_once();
  v6 = *(void **)(v0 + 376);
  v7 = sub_21F715F3C();
  __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
  v8 = v5;
  v9 = v6;
  v10 = v8;
  v11 = v9;
  v12 = sub_21F715F24();
  v13 = sub_21F716350();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(void **)(v0 + 376);
  if (v14)
  {
    type = v13;
    v16 = swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v16 = 138543874;
    *(_QWORD *)(v0 + 320) = v10;
    *(_QWORD *)v37 = v10;
    v17 = v10;
    sub_21F716428();
    *v33 = *(_QWORD *)v37;

    *(_WORD *)(v16 + 12) = 2160;
    *(_QWORD *)(v0 + 328) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v16 + 22) = 2112;
    *(_QWORD *)(v0 + 336) = v15;
    v18 = v15;
    v10 = *(NSObject **)v37;
    sub_21F716428();
    v33[1] = v15;

    _os_log_impl(&dword_21F63C000, v12, type, "PASFlowStepAIDASignIn setting sharing channel (%{public}@ on cdp context (%{mask.hash}@)", (uint8_t *)v16, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v33, -1, -1);
    MEMORY[0x2207CC514](v16, -1, -1);
  }
  else
  {

    v12 = v10;
  }
  v32 = *(void **)(v0 + 376);

  objc_msgSend(v32, sel_setSharingChannel_, v10);
LABEL_20:
  v28 = *(void **)(v0 + 376);
  v29 = (void *)(*(uint64_t (**)(void *))(v0 + 344))(v28);
  objc_msgSend(v29, sel_setShouldForceOperation_, 0);
  objc_msgSend(v29, sel_setOperationUIPermissions_, 1);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  v30 = (void *)sub_21F71602C();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setAuthenticationResults_, v30);

  sub_21F702FD0(v0 + 56);
  return (*(uint64_t (**)(void *))(v0 + 8))(v29);
}

uint64_t sub_21F701018()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = v0;
  return swift_task_switch();
}

uint64_t sub_21F701030()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  sub_21F647710(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
  type metadata accessor for PASFamilyMember();
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_release();
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716350();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepAIDASignIn.startCDPServer this is not personal sigin. Don't start CDP server", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    swift_retain();
    sub_21F656B08(v0 + 96);
    swift_release();
    v6 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v6);
    v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v8;
    *v8 = v0;
    v8[1] = sub_21F701214;
    return v9(v0 + 56, v6, v7);
  }
}

uint64_t sub_21F701214()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F701278()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 12));
  v1 = v0[10];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v2 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[21] = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[22] = v3;
  *v3 = v0;
  v3[1] = sub_21F701330;
  return sub_21F64B604((uint64_t)(v0 + 24), 11, 0, 0, 1, v2, v1, MEMORY[0x24BEE1328]);
}

uint64_t sub_21F701330()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F70139C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 192);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F7013D8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F701410()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t PASFlowStepAIDASignIn.nextStep()()
{
  uint64_t v0;
  id *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v33;

  v1 = (id *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result);
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result + 8);
  if (v2 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000023;
    *(_QWORD *)(v13 + 8) = 0x800000021F72A590;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_BYTE *)(v13 + 32) = 1;
    swift_willThrow();
  }
  else
  {
    v3 = v0;
    if ((v2 & 1) != 0)
    {
      v14 = *v1;
      sub_21F674A30(*v1, 1);
      sub_21F674A30(v14, 1);
      if (qword_2554DA718 != -1)
        swift_once();
      v15 = sub_21F715F3C();
      __swift_project_value_buffer(v15, (uint64_t)static PASLogger.common);
      sub_21F674A30(v14, 1);
      sub_21F674A30(v14, 1);
      v16 = sub_21F715F24();
      v17 = sub_21F71635C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v30 = v19;
        *(_DWORD *)v18 = 136446210;
        v33 = v18 + 4;
        v32 = (uint64_t)v14;
        sub_21F674A30(v14, 1);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
        v20 = sub_21F716128();
        v32 = sub_21F644208(v20, v21, &v30);
        sub_21F716428();
        swift_bridgeObjectRelease();
        sub_21F674A0C(v14, v2);
        sub_21F674A0C(v14, v2);
        _os_log_impl(&dword_21F63C000, v16, v17, "PASFlowStepAIDASignIn failed with error:\n%{public}s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v19, -1, -1);
        MEMORY[0x2207CC514](v18, -1, -1);
      }
      else
      {
        sub_21F674A0C(v14, v2);
        sub_21F674A0C(v14, v2);
      }

      sub_21F6763A4(v14, v2);
      v0 = sub_21F7026E8(v14);
      sub_21F674A0C(v14, v2);
      if ((v0 & 1) != 0)
      {
        swift_willThrow();
      }
      else
      {
        v30 = 0;
        v31 = 0xE000000000000000;
        sub_21F7164E8();
        sub_21F716140();
        v32 = (uint64_t)v14;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
        sub_21F7165CC();
        v0 = v30;
        v22 = v31;
        sub_21F658AF4();
        swift_allocError();
        *(_QWORD *)v23 = v0;
        *(_QWORD *)(v23 + 8) = v22;
        *(_QWORD *)(v23 + 16) = &unk_2554E3640;
        *(_QWORD *)(v23 + 24) = v3;
        *(_BYTE *)(v23 + 32) = 3;
        swift_retain();
        swift_willThrow();
        sub_21F674A0C(v14, v2);
      }
      sub_21F674A0C(v14, v2);
    }
    else
    {
      v4 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
      swift_beginAccess();
      v5 = MEMORY[0x2207CC5BC](v4);
      v6 = *(_QWORD *)(v4 + 8);
      sub_21F647710(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account, (uint64_t)&v30);
      v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_authResults);
      swift_beginAccess();
      v8 = *v7;
      type metadata accessor for PASFlowStepSendSignInResults();
      v9 = swift_allocObject();
      v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults__messageSessionProvider;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = 0u;
      *(_OWORD *)(v11 + 32) = 0u;
      *(_QWORD *)(v11 + 48) = 0;
      *(_QWORD *)(v9 + v10) = v11;
      sub_21F647710((uint64_t)&v30, v9 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_account);
      *(_QWORD *)(v9 + OBJC_IVAR____TtC21ProximityAppleIDSetup28PASFlowStepSendSignInResults_authResults) = v8;
      v12 = v9 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
      *(_QWORD *)(v9 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
      swift_unknownObjectWeakInit();
      if (v5)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        v24 = qword_2554DA718;
        swift_bridgeObjectRetain();
        swift_retain();
        if (v24 != -1)
          swift_once();
        v25 = sub_21F715F3C();
        __swift_project_value_buffer(v25, (uint64_t)static PASLogger.common);
        v26 = sub_21F715F24();
        v27 = sub_21F716368();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v28 = 0;
          _os_log_impl(&dword_21F63C000, v26, v27, "PASTargetFlowStepBase delegate is nil in init", v28, 2u);
          MEMORY[0x2207CC514](v28, -1, -1);
        }

      }
      swift_beginAccess();
      *(_QWORD *)(v12 + 8) = v6;
      swift_unknownObjectWeakAssign();
      swift_release();
      v0 = PASFlowStepBase.init()();
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v30);
      sub_21F702D90((unint64_t *)&unk_2554E3650, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSendSignInResults);
    }
  }
  return v0;
}

uint64_t sub_21F701A14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[5] = a1;
  sub_21F7162A8();
  v1[6] = sub_21F71629C();
  v1[7] = sub_21F716248();
  v1[8] = v2;
  return swift_task_switch();
}

uint64_t sub_21F701A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 72) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType();
    v5 = sub_21F702D90((unint64_t *)&unk_2554DD990, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepAIDASignIn);
    v6 = *(_QWORD *)(v3 + 8);
    v9 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 24) + *(_QWORD *)(v6 + 24));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v7;
    *v7 = v0;
    v7[1] = sub_21F701B7C;
    return v9(*(_QWORD *)(v0 + 40), v5, ObjectType, v6);
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F701B7C()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

void PASFlowStepAIDASignIn.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepAIDASignIn.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21F701C28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_serviceOwnersManager);
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result + 8));
}

uint64_t PASFlowStepAIDASignIn.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_serviceOwnersManager);
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result + 8));
  return v0;
}

uint64_t PASFlowStepAIDASignIn.__deallocating_deinit()
{
  PASFlowStepAIDASignIn.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F701DA8()
{
  return PASFlowStepAIDASignIn.nextStep()();
}

Swift::Void __swiftcall PASFlowStepAIDASignIn.cdpEnrollmentStatus(_:)(ProximityAppleIDSetup::PASCDPEnrollmentStatus a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v7 = sub_21F715F3C();
  __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
  v8 = sub_21F715F24();
  v9 = sub_21F716374();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v10 = 136446210;
    LOBYTE(v16) = a1;
    v12 = sub_21F716128();
    v16 = sub_21F644208(v12, v13, &v17);
    sub_21F716428();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v8, v9, "PASFlowStepAIDASignIn cdpEnrollmentStatus %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v11, -1, -1);
    MEMORY[0x2207CC514](v10, -1, -1);
  }

  v14 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 32) = v2;
  *(_BYTE *)(v15 + 40) = a1;
  swift_retain();
  sub_21F6B4038((uint64_t)v6, (uint64_t)&unk_2554E3680, v15);
  swift_release();
}

uint64_t sub_21F701FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 233) = a5;
  *(_QWORD *)(v5 + 184) = a4;
  return swift_task_switch();
}

uint64_t sub_21F702000()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 11));
  swift_release();
  v1 = v0[14];
  v2 = v0[15];
  __swift_project_boxed_opaque_existential_1(v0 + 11, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[24] = v3;
  *v3 = v0;
  v3[1] = sub_21F7020B8;
  return v5(v0 + 16, v1, v2);
}

uint64_t sub_21F7020B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F70211C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  id v4;
  unint64_t v5;
  _QWORD *v6;

  v1 = *(unsigned __int8 *)(v0 + 233);
  v2 = *(_QWORD *)(v0 + 152);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 128), v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E24A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_BYTE *)(inited + 32) = 6;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v1);
  *(_QWORD *)(inited + 64) = sub_21F64779C(0, (unint64_t *)&qword_2554DADD0);
  *(_QWORD *)(inited + 40) = v4;
  v5 = sub_21F640C2C(inited);
  *(_QWORD *)(v0 + 208) = v5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v6;
  *v6 = v0;
  v6[1] = sub_21F702244;
  return sub_21F64B604(v0 + 232, 6, 0, 0, 1, v5, v2, MEMORY[0x24BEE1328]);
}

uint64_t sub_21F702244()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F7022B0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F7022EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 200);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 168) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 176) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepAIDASignIn failed to send cdpEnrollmentStatus\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F7024DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  v1 = *(void **)(v0 + 224);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 168) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 176) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepAIDASignIn failed to send cdpEnrollmentStatus\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F7026E8(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v15;
  uint64_t v16;

  if (!a1)
    return 0;
  v16 = (uint64_t)a1;
  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  sub_21F64779C(0, (unint64_t *)&qword_2554DDF40);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (!objc_msgSend(v15, sel_shouldDisplayToUser))
  {

    return 0;
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v15;
  v4 = sub_21F715F24();
  v5 = sub_21F716374();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v16 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = v3;
    v9 = objc_msgSend(v8, sel_description);
    v10 = sub_21F716104();
    v12 = v11;

    sub_21F644208(v10, v12, &v16);
    sub_21F716428();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepAIDASignIn received error: %{public}s", v6, 0xCu);
    v13 = 1;
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

    return 1;
  }
  return v13;
}

uint64_t sub_21F702938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v27[5];

  v27[3] = a7;
  v27[4] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a3, a7);
  v16 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(a6 + v16) = v17;
  v18 = a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result;
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = -1;
  sub_21F647710((uint64_t)v27, a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account);
  *(_QWORD *)(a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_authResults) = a4;
  sub_21F647710(a5, a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_serviceOwnersManager);
  v19 = a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v20 = qword_2554DA718;
    swift_retain();
    if (v20 != -1)
      swift_once();
    v21 = sub_21F715F3C();
    __swift_project_value_buffer(v21, (uint64_t)static PASLogger.common);
    v22 = sub_21F715F24();
    v23 = sub_21F716368();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_21F63C000, v22, v23, "PASTargetFlowStepBase delegate is nil in init", v24, 2u);
      MEMORY[0x2207CC514](v24, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v19 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v25 = PASFlowStepBase.init()();
  __swift_destroy_boxed_opaque_existential_0Tm(a5);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  return v25;
}

uint64_t sub_21F702B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, a7);
  return sub_21F702938(a1, a2, (uint64_t)v17, a4, a5, v18, a7, a8);
}

unint64_t _s21ProximityAppleIDSetup22PASCDPEnrollmentStatusO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_21F702C38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F701A14(v0);
}

uint64_t sub_21F702C80()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F702CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_21F656988;
  *(_BYTE *)(v4 + 233) = v3;
  *(_QWORD *)(v4 + 184) = v2;
  return swift_task_switch();
}

unint64_t sub_21F702D18()
{
  unint64_t result;

  result = qword_2554E3690;
  if (!qword_2554E3690)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASCDPEnrollmentStatus, &type metadata for PASCDPEnrollmentStatus);
    atomic_store(result, (unint64_t *)&qword_2554E3690);
  }
  return result;
}

uint64_t sub_21F702D5C(uint64_t a1)
{
  uint64_t result;

  result = sub_21F702D90((unint64_t *)&unk_2554DD990, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepAIDASignIn);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F702D90(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASTargetFlowStepBase, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PASFlowStepAIDASignIn()
{
  uint64_t result;

  result = qword_2554E36C8;
  if (!qword_2554E36C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for PASCDPEnrollmentStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21F702E58 + 4 * byte_21F723815[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21F702E8C + 4 * byte_21F723810[v4]))();
}

uint64_t sub_21F702E8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F702E94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F702E9CLL);
  return result;
}

uint64_t sub_21F702EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F702EB0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21F702EB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F702EBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASCDPEnrollmentStatus()
{
  return &type metadata for PASCDPEnrollmentStatus;
}

uint64_t sub_21F702ED8()
{
  return type metadata accessor for PASFlowStepAIDASignIn();
}

uint64_t sub_21F702EE0()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_21F702F48()
{
  unint64_t result;

  result = qword_2554E3860;
  if (!qword_2554E3860)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASCDPEnrollmentStatus, &type metadata for PASCDPEnrollmentStatus);
    atomic_store(result, (unint64_t *)&qword_2554E3860);
  }
  return result;
}

unint64_t sub_21F702F8C()
{
  unint64_t result;

  result = qword_2554E3880;
  if (!qword_2554E3880)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723BF8, &type metadata for PASFlowStepAIDASignInError);
    atomic_store(result, (unint64_t *)&qword_2554E3880);
  }
  return result;
}

uint64_t sub_21F702FD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for PASFlowStepAIDASignInError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F703050 + 4 * byte_21F72381A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F703070 + 4 * byte_21F72381F[v4]))();
}

_BYTE *sub_21F703050(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F703070(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F703078(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F703080(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F703088(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F703090(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepAIDASignInError()
{
  return &type metadata for PASFlowStepAIDASignInError;
}

unint64_t sub_21F7030B0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F7030E4();
  a1[2] = sub_21F703128();
  result = sub_21F70316C();
  a1[3] = result;
  return result;
}

unint64_t sub_21F7030E4()
{
  unint64_t result;

  result = qword_2554E3890;
  if (!qword_2554E3890)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723AFC, &type metadata for PASFlowStepAIDASignInError);
    atomic_store(result, (unint64_t *)&qword_2554E3890);
  }
  return result;
}

unint64_t sub_21F703128()
{
  unint64_t result;

  result = qword_2554E3898;
  if (!qword_2554E3898)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723AB4, &type metadata for PASFlowStepAIDASignInError);
    atomic_store(result, (unint64_t *)&qword_2554E3898);
  }
  return result;
}

unint64_t sub_21F70316C()
{
  unint64_t result;

  result = qword_2554E38A0;
  if (!qword_2554E38A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723A8C, &type metadata for PASFlowStepAIDASignInError);
    atomic_store(result, (unint64_t *)&qword_2554E38A0);
  }
  return result;
}

unint64_t sub_21F7031B4()
{
  unint64_t result;

  result = qword_2554E38A8;
  if (!qword_2554E38A8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723BD0, &type metadata for PASFlowStepAIDASignInError);
    atomic_store(result, (unint64_t *)&qword_2554E38A8);
  }
  return result;
}

uint64_t type metadata accessor for PASLock()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASLockProvider()
{
  return objc_opt_self();
}

uint64_t sub_21F703238(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_21F70515C((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21F7032D8()
{
  void **v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_21F66E794;
  v3 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v4 = v1 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_21F703238;
  v4[3] = &block_descriptor_9;
  v4[4] = v3;
  objc_msgSend(v2, sel_aa_primaryAppleAccountWithCompletion_, v4);
  return swift_continuation_await();
}

uint64_t sub_21F70336C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21F7033A4 + 4 * byte_21F723CF0[a1]))(0xD000000000000014, 0x800000021F725ED0);
}

uint64_t sub_21F7033A4()
{
  return 0x7465677261546F6ELL;
}

uint64_t sub_21F7033C8()
{
  return 0x5064657661536F6ELL;
}

uint64_t sub_21F7033EC()
{
  return 0x7465677261546F6ELL;
}

uint64_t sub_21F703424(uint64_t a1)
{
  return a1 + 5;
}

void sub_21F70343C(char *a1)
{
  sub_21F70BA7C(*a1);
}

void sub_21F703448()
{
  char *v0;

  sub_21F70CD80(*v0);
}

void sub_21F703450(uint64_t a1)
{
  char *v1;

  sub_21F70D028(a1, *v1);
}

void sub_21F703458(uint64_t a1)
{
  char *v1;

  sub_21F70DDB4(a1, *v1);
}

uint64_t sub_21F703460@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F7053BC();
  *a1 = result;
  return result;
}

uint64_t sub_21F70348C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F70336C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21F7034B4()
{
  unsigned __int8 *v0;

  return *v0 + 9000;
}

unint64_t sub_21F7034C4()
{
  char *v0;
  char v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v3;
  sub_21F70E4B0(v1);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  return sub_21F6409B8(inited);
}

void sub_21F703540()
{
  char *v0;

  sub_21F70E4B0(*v0);
}

uint64_t sub_21F703548()
{
  sub_21F7052A8();
  return sub_21F7168C0();
}

uint64_t sub_21F703570()
{
  sub_21F7052A8();
  return sub_21F7168B4();
}

uint64_t *sub_21F703598@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

uint64_t sub_21F7035B0()
{
  uint64_t result;

  result = sub_21F7160E0();
  qword_2554E5268 = result;
  return result;
}

uint64_t sub_21F7035E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  return swift_task_switch();
}

uint64_t sub_21F703600()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 120);
  v2 = v1[22];
  *(_QWORD *)(v0 + 128) = v2;
  if (!*(_QWORD *)(v2 + 16))
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  v3 = v1[10];
  v4 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v5;
  *v5 = v0;
  v5[1] = sub_21F7036AC;
  return v7(v3, v4);
}

uint64_t sub_21F7036AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

id sub_21F703720()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  id result;
  void *v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t (*v36)(_QWORD, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 144);
  if (!v1)
  {
    sub_21F6FCBE0();
    swift_allocError();
    *v11 = 3;
    swift_willThrow();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD **)(v0 + 120);
  v3 = (uint64_t)(v2 + 2);
  v4 = v2[5];
  v5 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v4);
  *(_QWORD *)(v0 + 152) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  *(_QWORD *)(v0 + 160) = v6;
  if (!v6)
  {
    sub_21F6FCBE0();
    swift_allocError();
    *v12 = 2;
    swift_willThrow();

    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_21F647710(v3, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
  type metadata accessor for PASFamilyMember();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 168) = v7;
    if (objc_msgSend(*(id *)(v7 + 16), sel_isChildAccount) && sub_21F7048BC(0, *(_QWORD *)(v0 + 128)))
    {
      v8 = (*(uint64_t (**)(void))(v0 + 104))();
      *(_QWORD *)(v0 + 176) = v8;
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 184) = v9;
      *v9 = v0;
      v9[1] = sub_21F703A84;
      v10 = *(_QWORD *)(v0 + 120);
      v9[3] = v1;
      v9[4] = v10;
      v9[2] = v8;
      return (id)swift_task_switch();
    }
    swift_release();
  }
  if (sub_21F7048BC(1, *(_QWORD *)(v0 + 128)))
  {
    v14 = *(void **)(v0 + 144);
    *(_QWORD *)(v0 + 208) = (*(uint64_t (**)(void))(v0 + 104))();
    result = objc_msgSend(v14, sel_aa_altDSID);
    if (result)
    {
      v15 = result;
      v16 = *(_QWORD *)(v0 + 160);
      v17 = *(_QWORD **)(v0 + 120);
      v18 = sub_21F716104();
      v20 = v19;
      *(_QWORD *)(v0 + 56) = v18;
      *(_QWORD *)(v0 + 64) = v19;

      *(_QWORD *)(v0 + 216) = v20;
      v21 = v17 + 17;
      v22 = v17[20];
      v23 = v17[21];
      __swift_project_boxed_opaque_existential_1(v21, v22);
      v36 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v23 + 8) + *(_QWORD *)(v23 + 8));
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v24;
      *v24 = v0;
      v24[1] = sub_21F703EF4;
      return (id)v36(*(_QWORD *)(v0 + 152), v16, v22, v23);
    }
    __break(1u);
  }
  else
  {
    if (!sub_21F7048BC(2, *(_QWORD *)(v0 + 128)))
    {
      v35 = *(void **)(v0 + 144);
      swift_bridgeObjectRelease();

      return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
    v25 = *(void **)(v0 + 144);
    v26 = (*(uint64_t (**)(void))(v0 + 104))();
    *(_QWORD *)(v0 + 272) = v26;
    result = objc_msgSend(v25, sel_aa_altDSID);
    if (result)
    {
      v27 = result;
      v28 = *(_QWORD *)(v0 + 160);
      v29 = sub_21F716104();
      v31 = v30;

      *(_QWORD *)(v0 + 280) = v31;
      v32 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v32;
      *v32 = v0;
      v32[1] = sub_21F7040A4;
      v33 = *(_QWORD *)(v0 + 152);
      v34 = *(_QWORD *)(v0 + 120);
      v32[8] = 0;
      v32[9] = v34;
      v32[6] = v28;
      v32[7] = 0;
      v32[4] = v31;
      v32[5] = v33;
      v32[2] = v26;
      v32[3] = v29;
      return (id)swift_task_switch();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F703A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 192) = v1;
  swift_task_dealloc();

  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 200) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F703B10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(void **)(v0 + 144);
  swift_release();

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

id sub_21F703B54()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id result;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t (*v36)(_QWORD, uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 192);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 192);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v12;
    sub_21F716428();
    *v10 = v12;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFamilyMemberSourceAuthController passwordless auth failed with %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
    swift_release();

  }
  else
  {
    swift_release();

  }
  if (sub_21F7048BC(1, *(_QWORD *)(v0 + 128)))
  {
    v13 = *(void **)(v0 + 144);
    *(_QWORD *)(v0 + 208) = (*(uint64_t (**)(void))(v0 + 104))();
    result = objc_msgSend(v13, sel_aa_altDSID);
    if (result)
    {
      v15 = result;
      v16 = *(_QWORD *)(v0 + 160);
      v17 = *(_QWORD **)(v0 + 120);
      v18 = sub_21F716104();
      v20 = v19;
      *(_QWORD *)(v0 + 56) = v18;
      *(_QWORD *)(v0 + 64) = v19;

      *(_QWORD *)(v0 + 216) = v20;
      v21 = v17 + 17;
      v22 = v17[20];
      v23 = v17[21];
      __swift_project_boxed_opaque_existential_1(v21, v22);
      v36 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v23 + 8) + *(_QWORD *)(v23 + 8));
      v24 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 224) = v24;
      *v24 = v0;
      v24[1] = sub_21F703EF4;
      return (id)v36(*(_QWORD *)(v0 + 152), v16, v22, v23);
    }
    __break(1u);
  }
  else
  {
    if (!sub_21F7048BC(2, *(_QWORD *)(v0 + 128)))
    {
      v35 = *(void **)(v0 + 144);
      swift_bridgeObjectRelease();

      return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(0);
    }
    v25 = *(void **)(v0 + 144);
    v26 = (*(uint64_t (**)(void))(v0 + 104))();
    *(_QWORD *)(v0 + 272) = v26;
    result = objc_msgSend(v25, sel_aa_altDSID);
    if (result)
    {
      v27 = result;
      v28 = *(_QWORD *)(v0 + 160);
      v29 = sub_21F716104();
      v31 = v30;

      *(_QWORD *)(v0 + 280) = v31;
      v32 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v32;
      *v32 = v0;
      v32[1] = sub_21F7040A4;
      v33 = *(_QWORD *)(v0 + 152);
      v34 = *(_QWORD *)(v0 + 120);
      v32[8] = 0;
      v32[9] = v34;
      v32[6] = v28;
      v32[7] = 0;
      v32[4] = v31;
      v32[5] = v33;
      v32[2] = v26;
      v32[3] = v29;
      return (id)swift_task_switch();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F703EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = (_QWORD *)*v3;
  v6[29] = a2;
  v6[30] = v2;
  swift_task_dealloc();
  if (!v2)
  {
    v7 = v6[7];
    v8 = v6[20];
    v9 = (_QWORD *)swift_task_alloc();
    v6[31] = v9;
    *v9 = v6;
    v9[1] = sub_21F703FB8;
    v11 = v6[26];
    v10 = v6[27];
    v12 = v6[19];
    v13 = v6[15];
    v9[8] = a2;
    v9[9] = v13;
    v9[6] = v8;
    v9[7] = a1;
    v9[4] = v10;
    v9[5] = v12;
    v9[2] = v11;
    v9[3] = v7;
  }
  return swift_task_switch();
}

uint64_t sub_21F703FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 256) = v1;
  swift_task_dealloc();
  v5 = *(void **)(v4 + 208);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 264) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F704068()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 264);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F7040A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 296) = v1;
  swift_task_dealloc();
  v5 = *(void **)(v4 + 272);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 304) = a1;
  return swift_task_switch();
}

uint64_t sub_21F704138()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 304);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F704174()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v14;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 296);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 296);
  if (v7)
  {
    v14 = *(void **)(v0 + 144);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v12;
    sub_21F716428();
    *v10 = v12;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFamilyMemberSourceAuthController default auth failed with %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

id sub_21F70435C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 240);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v10;
    sub_21F716428();
    *v8 = v10;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFamilyMemberSourceAuthController savePassword auth failed with %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  if (sub_21F7048BC(2, *(_QWORD *)(v0 + 128)))
  {
    v11 = *(void **)(v0 + 144);
    v12 = (*(uint64_t (**)(void))(v0 + 104))();
    *(_QWORD *)(v0 + 272) = v12;
    result = objc_msgSend(v11, sel_aa_altDSID);
    if (result)
    {
      v14 = result;
      v15 = *(_QWORD *)(v0 + 160);
      v16 = sub_21F716104();
      v18 = v17;

      *(_QWORD *)(v0 + 280) = v18;
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v19;
      *v19 = v0;
      v19[1] = sub_21F7040A4;
      v20 = *(_QWORD *)(v0 + 152);
      v21 = *(_QWORD *)(v0 + 120);
      v19[8] = 0;
      v19[9] = v21;
      v19[6] = v15;
      v19[7] = 0;
      v19[4] = v18;
      v19[5] = v20;
      v19[2] = v12;
      v19[3] = v16;
      return (id)swift_task_switch();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v22 = *(void **)(v0 + 144);
    swift_bridgeObjectRelease();

    return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  return result;
}

id sub_21F704614()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id result;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v1 = *(void **)(v0 + 256);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v10;
    sub_21F716428();
    *v8 = v10;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFamilyMemberSourceAuthController savePassword auth failed with %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  if (sub_21F7048BC(2, *(_QWORD *)(v0 + 128)))
  {
    v11 = *(void **)(v0 + 144);
    v12 = (*(uint64_t (**)(void))(v0 + 104))();
    *(_QWORD *)(v0 + 272) = v12;
    result = objc_msgSend(v11, sel_aa_altDSID);
    if (result)
    {
      v14 = result;
      v15 = *(_QWORD *)(v0 + 160);
      v16 = sub_21F716104();
      v18 = v17;

      *(_QWORD *)(v0 + 280) = v18;
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v19;
      *v19 = v0;
      v19[1] = sub_21F7040A4;
      v20 = *(_QWORD *)(v0 + 152);
      v21 = *(_QWORD *)(v0 + 120);
      v19[8] = 0;
      v19[9] = v21;
      v19[6] = v15;
      v19[7] = 0;
      v19[4] = v18;
      v19[5] = v20;
      v19[2] = v12;
      v19[3] = v16;
      return (id)swift_task_switch();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v22 = *(void **)(v0 + 144);
    swift_bridgeObjectRelease();

    return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  return result;
}

BOOL sub_21F7048BC(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F70491C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21F704938()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  NSString *v6;
  SEL v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v24)(void *, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = objc_msgSend(v2, sel_username);
  objc_msgSend(v1, sel_setUsername_, v3);

  v4 = objc_msgSend(v2, sel_aa_altDSID);
  if (v4)
  {
    sub_21F716104();

    v4 = (id)sub_21F7160E0();
    swift_bridgeObjectRelease();
  }
  v5 = *(void **)(v0 + 16);
  objc_msgSend(v5, sel_setAltDSID_, v4);

  objc_msgSend(v5, sel_setAuthenticationType_, 1);
  v6 = (NSString *)sub_21F7160E0();
  v7 = NSSelectorFromString(v6);

  if (objc_msgSend(v5, sel_respondsToSelector_, v7))
  {
    v8 = *(_QWORD **)(v0 + 32);
    v9 = v8[5];
    v10 = v8[6];
    __swift_project_boxed_opaque_existential_1(v8 + 2, v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
    if (v11)
    {
      v12 = sub_21F7160E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 0;
    }
    objc_msgSend(objc_retainAutorelease(*(id *)(v0 + 16)), sel_performSelector_withObject_, v7, v12);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v13 = sub_21F715F3C();
    __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
    v14 = sub_21F715F24();
    v15 = sub_21F71635C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_21F63C000, v14, v15, "PASFamilyMemberSourceAuthController, authContext does not respond to selector setProxiedAppleID:", v16, 2u);
      MEMORY[0x2207CC514](v16, -1, -1);
    }

  }
  if (qword_2554DA748 != -1)
    swift_once();
  v17 = *(_QWORD **)(v0 + 32);
  v18 = *(void **)(v0 + 16);
  objc_msgSend(v18, sel_setAppProvidedContext_, qword_2554E5268);
  v19 = v17 + 12;
  v20 = v17[15];
  v21 = v17[16];
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v24 = (uint64_t (*)(void *, uint64_t, uint64_t))(**(int **)(v21 + 8) + *(_QWORD *)(v21 + 8));
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v22;
  *v22 = v0;
  v22[1] = sub_21F704C18;
  return v24(v18, v20, v21);
}

uint64_t sub_21F704C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F704C8C()
{
  uint64_t v0;
  _BYTE *v2;

  if (!*(_QWORD *)(v0 + 48))
  {
    sub_21F6FCBE0();
    swift_allocError();
    *v2 = 5;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F704D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21F704D34()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);

  v1 = v0[8];
  v2 = (void *)v0[2];
  v3 = (void *)sub_21F7160E0();
  objc_msgSend(v2, sel_setUsername_, v3);

  v4 = (void *)sub_21F7160E0();
  objc_msgSend(v2, sel_setAltDSID_, v4);

  objc_msgSend(v2, sel_setAppProvidedContext_, *MEMORY[0x24BE0AB10]);
  objc_msgSend(v2, sel_setAuthenticationType_, 0);
  if (v1)
  {
    v5 = (void *)v0[2];
    v6 = (void *)sub_21F7160E0();
    objc_msgSend(v5, sel__setPassword_, v6);

  }
  v7 = (_QWORD *)v0[9];
  v8 = v0[2];
  v9 = v7[15];
  v10 = v7[16];
  __swift_project_boxed_opaque_existential_1(v7 + 12, v9);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v10 + 8) + *(_QWORD *)(v10 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  v0[10] = v11;
  *v11 = v0;
  v11[1] = sub_21F704E78;
  return v13(v8, v9, v10);
}

uint64_t sub_21F704E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 88) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F704EEC()
{
  uint64_t v0;
  _BYTE *v2;

  if (!*(_QWORD *)(v0 + 88))
  {
    sub_21F6FCBE0();
    swift_allocError();
    *v2 = 4;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F704F70()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FAFamilyMemberProxiedAuthController()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for FAFamilyMemberProxiedAuthModes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F705020 + 4 * byte_21F723CFB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F705054 + 4 * byte_21F723CF6[v4]))();
}

uint64_t sub_21F705054(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F70505C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F705064);
  return result;
}

uint64_t sub_21F705070(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F705078);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F70507C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F705084(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FAFamilyMemberProxiedAuthModes()
{
  return &type metadata for FAFamilyMemberProxiedAuthModes;
}

unint64_t sub_21F7050A4()
{
  unint64_t result;

  result = qword_2554E3B20;
  if (!qword_2554E3B20)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723E78, &type metadata for FAFamilyMemberProxiedAuthModes);
    atomic_store(result, (unint64_t *)&qword_2554E3B20);
  }
  return result;
}

uint64_t sub_21F7050E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21F6514BC;
  v7[14] = a2;
  v7[15] = v6;
  v7[13] = a1;
  return swift_task_switch();
}

uint64_t sub_21F70515C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E3128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for FAFamilyMemberProxiedAuthControllerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_21F7051F0 + 4 * byte_21F723D05[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_21F705224 + 4 * byte_21F723D00[v4]))();
}

uint64_t sub_21F705224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F70522C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F705234);
  return result;
}

uint64_t sub_21F705240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F705248);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_21F70524C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F705254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FAFamilyMemberProxiedAuthControllerError()
{
  return &type metadata for FAFamilyMemberProxiedAuthControllerError;
}

unint64_t sub_21F705274(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F7052A8();
  a1[2] = sub_21F7052EC();
  result = sub_21F705330();
  a1[3] = result;
  return result;
}

unint64_t sub_21F7052A8()
{
  unint64_t result;

  result = qword_2554E3B30;
  if (!qword_2554E3B30)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723F4C, &type metadata for FAFamilyMemberProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3B30);
  }
  return result;
}

unint64_t sub_21F7052EC()
{
  unint64_t result;

  result = qword_2554E3B38;
  if (!qword_2554E3B38)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723F04, &type metadata for FAFamilyMemberProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3B38);
  }
  return result;
}

unint64_t sub_21F705330()
{
  unint64_t result;

  result = qword_2554E3B40;
  if (!qword_2554E3B40)
  {
    result = MEMORY[0x2207CC46C](&unk_21F723EDC, &type metadata for FAFamilyMemberProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3B40);
  }
  return result;
}

unint64_t sub_21F705378()
{
  unint64_t result;

  result = qword_2554E3B48;
  if (!qword_2554E3B48)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724020, &type metadata for FAFamilyMemberProxiedAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3B48);
  }
  return result;
}

uint64_t sub_21F7053BC()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t PASManateeRepairController.repair(featureName:securityUpgradeContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21F705420()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 40) + 56))();
  *(_QWORD *)(v0 + 48) = v1;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE1A490]), sel_initWithContext_, v1);
  *(_QWORD *)(v0 + 56) = v2;
  if (v2)
  {
    v3 = swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *(_QWORD *)v3 = v0;
    *(_QWORD *)(v3 + 8) = sub_21F705518;
    v5 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    *(_OWORD *)(v3 + 80) = *(_OWORD *)(v0 + 32);
    *(_QWORD *)(v3 + 64) = v4;
    *(_QWORD *)(v3 + 72) = v1;
    *(_QWORD *)(v3 + 56) = v5;
    return swift_task_switch();
  }
  else
  {
    sub_21F705608();
    swift_allocError();
    swift_willThrow();

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F705518(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 80) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_21F705590()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 80));
}

uint64_t sub_21F7055CC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

unint64_t sub_21F705608()
{
  unint64_t result;

  result = qword_2554E3B58;
  if (!qword_2554E3B58)
  {
    result = MEMORY[0x2207CC46C](&unk_21F72436C, &type metadata for PASManateeRepairControllerError);
    atomic_store(result, &qword_2554E3B58);
  }
  return result;
}

uint64_t sub_21F70564C()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F7056A0()
{
  return sub_21F716134();
}

uint64_t sub_21F7056BC()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F70570C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21F70575C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x800000021F725F10;
}

uint64_t sub_21F705784()
{
  sub_21F705E68();
  return sub_21F7168C0();
}

uint64_t sub_21F7057AC()
{
  sub_21F705E68();
  return sub_21F7168B4();
}

id sub_21F7057D4()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_contextForPrimaryAccount);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_21F70580C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v3 + 72) = v8;
  if (qword_2554DA718 != -1)
    swift_once();
  v9 = sub_21F715F3C();
  __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
  v10 = sub_21F715F24();
  v11 = sub_21F716350();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_21F63C000, v10, v11, "PASManateeRepairController init", v12, 2u);
    MEMORY[0x2207CC514](v12, -1, -1);
  }

  sub_21F64756C(a1, v4 + 16);
  *(_QWORD *)(v4 + 56) = a2;
  *(_QWORD *)(v4 + 64) = a3;
  return v4;
}

uint64_t sub_21F705934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return swift_task_switch();
}

uint64_t sub_21F705954()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[12] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASManateeRepairController begin repair", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[10];
  v6 = (_QWORD *)v0[11];
  v8 = v0[8];
  v7 = v0[9];
  v9 = v0[7];

  v10 = v6 + 2;
  v11 = v6[5];
  v12 = v6[6];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v9, v8, v7, v5, v11, v12);
  v13 = sub_21F715F24();
  v14 = sub_21F716374();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_21F63C000, v13, v14, "PASManateeRepairController performing encryption state repair (if needed)", v15, 2u);
    MEMORY[0x2207CC514](v15, -1, -1);
  }

  v16 = v0[5];
  v17 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v16);
  v20 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v17 + 8) + *(_QWORD *)(v17 + 8));
  v18 = (_QWORD *)swift_task_alloc();
  v0[13] = v18;
  *v18 = v0;
  v18[1] = sub_21F705B50;
  return v20(v16, v17);
}

uint64_t sub_21F705B50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F705BB4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_21F63C000, v1, v2, "PASManateeRepairController repair completed successfully", v3, 2u);
    MEMORY[0x2207CC514](v3, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_21F705C64()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t PASManateeRepairController.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASManateeRepairController.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F705CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21F651694;
  v9[4] = a3;
  v9[5] = v8;
  v9[2] = a1;
  v9[3] = a2;
  return swift_task_switch();
}

uint64_t type metadata accessor for PASManateeRepairController()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PASManateeRepairControllerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F705DD4 + 4 * byte_21F724090[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F705DF4 + 4 * byte_21F724095[v4]))();
}

_BYTE *sub_21F705DD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F705DF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F705DFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F705E04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F705E0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F705E14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASManateeRepairControllerError()
{
  return &type metadata for PASManateeRepairControllerError;
}

unint64_t sub_21F705E34(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F705E68();
  a1[2] = sub_21F705EAC();
  result = sub_21F705EF0();
  a1[3] = result;
  return result;
}

unint64_t sub_21F705E68()
{
  unint64_t result;

  result = qword_2554E3C20;
  if (!qword_2554E3C20)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724270, &type metadata for PASManateeRepairControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3C20);
  }
  return result;
}

unint64_t sub_21F705EAC()
{
  unint64_t result;

  result = qword_2554E3C28;
  if (!qword_2554E3C28)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724228, &type metadata for PASManateeRepairControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3C28);
  }
  return result;
}

unint64_t sub_21F705EF0()
{
  unint64_t result;

  result = qword_2554E3C30;
  if (!qword_2554E3C30)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724200, &type metadata for PASManateeRepairControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E3C30);
  }
  return result;
}

unint64_t sub_21F705F38()
{
  unint64_t result;

  result = qword_2554E3C38[0];
  if (!qword_2554E3C38[0])
  {
    result = MEMORY[0x2207CC46C](&unk_21F724344, &type metadata for PASManateeRepairControllerError);
    atomic_store(result, qword_2554E3C38);
  }
  return result;
}

uint64_t static Message.Metrics.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for Message.Metrics.EpochStage(0, a3, a4, a4);
  MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v4);
  return sub_21F716080();
}

uint64_t type metadata accessor for Message.Metrics.EpochStage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Message.Metrics.EpochStage);
}

uint64_t Message.Metrics.epochsByStage.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Message.Metrics.epochsByStage.modify())()
{
  return nullsub_1;
}

uint64_t Message.Metrics.init(sourceSendEpoch:destinationReceiveEpoch:destinationSendEpoch:sourceReceiveEpoch:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v22;

  v12 = a2 & 1;
  v13 = a4 & 1;
  v14 = a6 & 1;
  v22 = a8 & 1;
  v15 = type metadata accessor for Message.Metrics.EpochStage(255, a9, a10, a4);
  swift_getTupleTypeMetadata2();
  sub_21F71620C();
  MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v15);
  v16 = sub_21F716050();
  v17 = Message.Metrics.updatingEpoch(for:to:)(0, a1, v12, v16, a9, a10);
  v18 = Message.Metrics.updatingEpoch(for:to:)(1, a3, v13, v17, a9, a10);
  v19 = Message.Metrics.updatingEpoch(for:to:)(2, a5, v14, v18, a9, a10);
  return Message.Metrics.updatingEpoch(for:to:)(3, a7, v22, v19, a9, a10);
}

uint64_t Message.Metrics.updatingEpoch(for:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = type metadata accessor for Message.Metrics.EpochStage(255, a5, a6, a4);
  MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v6);
  sub_21F716068();
  sub_21F716098();
  return a4;
}

uint64_t Message.Metrics.sourceSendEpoch.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F706218(a1, a2, a3, 0);
}

uint64_t Message.Metrics.destinationReceiveEpoch.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F706218(a1, a2, a3, 1);
}

uint64_t Message.Metrics.destinationSendEpoch.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F706218(a1, a2, a3, 2);
}

uint64_t Message.Metrics.sourceReceiveEpoch.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F706218(a1, a2, a3, 3);
}

uint64_t sub_21F706218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;

  v8 = a4;
  v5 = type metadata accessor for Message.Metrics.EpochStage(0, a2, a3, a4);
  v6 = MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v5);
  MEMORY[0x2207CB608](&v9, &v8, a1, v5, MEMORY[0x24BEE4568], v6);
  return v9;
}

unint64_t Message.Metrics.onewaySendDuration.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F7062AC(a1, a2, a3, (uint64_t (*)(void))Message.Metrics.sourceSendEpoch.getter, Message.Metrics.destinationReceiveEpoch.getter);
}

unint64_t Message.Metrics.onewayReceiveDuration.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F7062AC(a1, a2, a3, (uint64_t (*)(void))Message.Metrics.destinationSendEpoch.getter, Message.Metrics.sourceReceiveEpoch.getter);
}

unint64_t sub_21F7062AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t result;
  char v13;

  v9 = a4();
  if ((v10 & 1) != 0)
    return 0;
  v11 = v9;
  result = a5(a1, a2, a3);
  if ((v13 & 1) != 0)
    return 0;
  if (result >= v11)
    return 1000000000000000 * (result - v11);
  __break(1u);
  return result;
}

unint64_t Message.Metrics.destinationProcessingDuration.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F7062AC(a1, a2, a3, (uint64_t (*)(void))Message.Metrics.destinationReceiveEpoch.getter, Message.Metrics.destinationSendEpoch.getter);
}

uint64_t Message.Metrics.roundtripDuration.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;

  v6 = Message.Metrics.onewaySendDuration.getter(a1, a2, a3);
  if ((v8 & 1) != 0)
    return 0;
  v9 = v6;
  v10 = v7;
  v11 = Message.Metrics.onewayReceiveDuration.getter(a1, a2, a3);
  if ((v13 & 1) != 0)
    return 0;
  else
    return MEMORY[0x2207CBF50](v9, v10, v11, v12);
}

uint64_t Message.Metrics.updateEpoch(for:to:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t result;

  result = Message.Metrics.updatingEpoch(for:to:)(a1, a2, a3 & 1, *v4, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24));
  *v4 = result;
  return result;
}

uint64_t Message.Metrics.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for Message.Metrics.EpochStage(0, a3, a4, a4);
  swift_bridgeObjectRetain();
  MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v4);
  sub_21F716074();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F706478(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x79427368636F7065 && a2 == 0xED00006567617453)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_21F716800();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_21F706518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F706478(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21F706548@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F656BCC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_21F706574(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724AF8, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F7065A8(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724AF8, a1);
  return sub_21F7169EC();
}

uint64_t Message.Metrics.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  v16 = a2;
  v7 = _s7MetricsV10CodingKeysOMa(255, a3, a4, a4);
  MEMORY[0x2207CC46C](&unk_21F724AF8, v7);
  v8 = sub_21F71677C();
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169C8();
  v18[3] = v16;
  v12 = type metadata accessor for Message.Metrics.EpochStage(255, a3, a4, v11);
  MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v12);
  v13 = sub_21F716068();
  v18[0] = MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v12);
  v18[1] = MEMORY[0x24BEE4570];
  MEMORY[0x2207CC46C](MEMORY[0x24BEE04C0], v13, v18);
  sub_21F716758();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v8);
}

uint64_t Message.Metrics.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v7[72];

  sub_21F716920();
  Message.Metrics.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_21F716968();
}

_QWORD *Message.Metrics.init(from:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v18 = a3;
  v7 = _s7MetricsV10CodingKeysOMa(255, a2, a3, a4);
  MEMORY[0x2207CC46C](&unk_21F724AF8, v7);
  v19 = sub_21F7166F8();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v10 = (char *)&v18 - v9;
  v11 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169B0();
  if (!v4)
  {
    v13 = v8;
    v14 = type metadata accessor for Message.Metrics.EpochStage(255, a2, v18, v12);
    MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v14);
    v15 = sub_21F716068();
    v20[0] = MEMORY[0x2207CC46C](&protocol conformance descriptor for Message<A>.Metrics.EpochStage, v14);
    v20[1] = MEMORY[0x24BEE4598];
    MEMORY[0x2207CC46C](MEMORY[0x24BEE04E0], v15, v20);
    v16 = v19;
    sub_21F7166C8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v16);
    v11 = (_QWORD *)v20[3];
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v11;
}

_QWORD *sub_21F7069A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;

  result = Message.Metrics.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_21F7069D0(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return Message.Metrics.encode(to:)(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_21F7069F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static Message.Metrics.__derived_struct_equals(_:_:)(*a1, *a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_21F706A04(uint64_t a1)
{
  uint64_t *v1;

  return Message.Metrics.hashValue.getter(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_21F706A14(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Message.Metrics.hash(into:)(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_21F706A24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _BYTE v5[72];

  sub_21F716920();
  Message.Metrics.hash(into:)((uint64_t)v5, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_21F716968();
}

BOOL static Message.Metrics.EpochStage.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Message.Metrics.EpochStage.hash(into:)()
{
  return sub_21F71692C();
}

uint64_t sub_21F706A9C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6553656372756F73 && a2 == 0xEA0000000000646ELL;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000021F72A810 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEF646E65536E6F69 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6552656372756F73 && a2 == 0xED00006576696563)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_21F706C74(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21F706CAC + 4 * byte_21F7243B0[a1]))(0xD000000000000012, 0x800000021F72A810);
}

uint64_t sub_21F706CAC()
{
  return 0x6553656372756F73;
}

uint64_t sub_21F706CC8()
{
  return 0x74616E6974736564;
}

uint64_t sub_21F706CEC()
{
  return 0x6552656372756F73;
}

uint64_t sub_21F706D10()
{
  unsigned __int8 *v0;

  return sub_21F706C74(*v0);
}

uint64_t sub_21F706D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F706A9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F706D48(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724968, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F706D7C(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724968, a1);
  return sub_21F7169EC();
}

uint64_t sub_21F706DB0@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  return sub_21F706EF4(a1, (uint64_t (*)(_QWORD, _QWORD))sub_21F656BCC, a2);
}

uint64_t sub_21F706DBC(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724A08, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F706DF0(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724A08, a1);
  return sub_21F7169EC();
}

uint64_t sub_21F706E24(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724A58, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F706E58(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724A58, a1);
  return sub_21F7169EC();
}

uint64_t sub_21F706E8C(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724AA8, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F706EC0(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F724AA8, a1);
  return sub_21F7169EC();
}

uint64_t sub_21F706EF4@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(_QWORD, _QWORD)@<X4>, _BYTE *a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_21F706F38(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F7249B8, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F706F6C(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F7249B8, a1);
  return sub_21F7169EC();
}

void Message.Metrics.EpochStage.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[19];
  uint64_t v25;

  v25 = a2;
  v7 = _s7MetricsV10EpochStageO23SourceReceiveCodingKeysOMa(255, a3, a4, a4);
  v24[16] = MEMORY[0x2207CC46C](&unk_21F724AA8, v7);
  v24[17] = v7;
  v8 = sub_21F71677C();
  v24[14] = *(_QWORD *)(v8 - 8);
  v24[15] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v24[13] = (char *)v24 - v9;
  v11 = _s7MetricsV10EpochStageO25DestinationSendCodingKeysOMa(255, a3, a4, v10);
  v24[11] = MEMORY[0x2207CC46C](&unk_21F724A58, v11);
  v24[12] = v11;
  v12 = sub_21F71677C();
  v24[9] = *(_QWORD *)(v12 - 8);
  v24[10] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v24[8] = (char *)v24 - v13;
  v15 = _s7MetricsV10EpochStageO28DestinationReceiveCodingKeysOMa(255, a3, a4, v14);
  v24[7] = MEMORY[0x2207CC46C](&unk_21F724A08, v15);
  v16 = sub_21F71677C();
  v24[5] = *(_QWORD *)(v16 - 8);
  v24[6] = v16;
  MEMORY[0x24BDAC7A8](v16);
  v24[4] = (char *)v24 - v17;
  v19 = _s7MetricsV10EpochStageO20SourceSendCodingKeysOMa(255, a3, a4, v18);
  v24[3] = MEMORY[0x2207CC46C](&unk_21F7249B8, v19);
  v20 = sub_21F71677C();
  v24[1] = *(_QWORD *)(v20 - 8);
  v24[2] = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = _s7MetricsV10EpochStageO10CodingKeysOMa(255, a3, a4, v21);
  MEMORY[0x2207CC46C](&unk_21F724968, v22);
  v23 = sub_21F71677C();
  v24[18] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169C8();
  __asm { BR              X10 }
}

uint64_t sub_21F707228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 68) = 0;
  sub_21F716704();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 248) + 8))(v2, *(_QWORD *)(v3 - 240));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8))(v1, v0);
}

uint64_t Message.Metrics.EpochStage.hashValue.getter()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

uint64_t Message.Metrics.EpochStage.init(from:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v62 = _s7MetricsV10EpochStageO23SourceReceiveCodingKeysOMa(255, a2, a3, a4);
  v59 = MEMORY[0x2207CC46C](&unk_21F724AA8, v62);
  v7 = sub_21F7166F8();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v39 - v8;
  v10 = _s7MetricsV10EpochStageO25DestinationSendCodingKeysOMa(255, a2, a3, v9);
  v56 = MEMORY[0x2207CC46C](&unk_21F724A58, v10);
  v57 = v10;
  v49 = sub_21F7166F8();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v39 - v11;
  v13 = _s7MetricsV10EpochStageO28DestinationReceiveCodingKeysOMa(255, a2, a3, v12);
  v54 = MEMORY[0x2207CC46C](&unk_21F724A08, v13);
  v55 = v13;
  v47 = sub_21F7166F8();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v39 - v14;
  v16 = _s7MetricsV10EpochStageO20SourceSendCodingKeysOMa(255, a2, a3, v15);
  v53 = MEMORY[0x2207CC46C](&unk_21F7249B8, v16);
  v45 = sub_21F7166F8();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v39 - v17;
  v64 = a3;
  v19 = _s7MetricsV10EpochStageO10CodingKeysOMa(255, a2, a3, v18);
  MEMORY[0x2207CC46C](&unk_21F724968, v19);
  v63 = sub_21F7166F8();
  v20 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v22 = (char *)&v39 - v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v23 = v69;
  sub_21F7169B0();
  v24 = (uint64_t)a1;
  if (!v23)
  {
    v40 = v16;
    v42 = a2;
    v25 = v64;
    v69 = v20;
    v41 = 0;
    v43 = v24;
    v26 = v63;
    v27 = v22;
    *(_QWORD *)&v65 = sub_21F7166EC();
    v28 = sub_21F716230();
    MEMORY[0x2207CC46C](MEMORY[0x24BEE12C8], v28);
    *(_QWORD *)&v67 = sub_21F716470();
    *((_QWORD *)&v67 + 1) = v29;
    *(_QWORD *)&v68 = v30;
    *((_QWORD *)&v68 + 1) = v31;
    v32 = sub_21F716464();
    MEMORY[0x2207CC46C](MEMORY[0x24BEE2190], v32);
    sub_21F71632C();
    v33 = v65;
    if (v65 != 4)
    {
      v39 = v67;
      v65 = v67;
      v66 = v68;
      if ((sub_21F716338() & 1) != 0)
        __asm { BR              X9 }
    }
    v34 = sub_21F71653C();
    swift_allocError();
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
    *v36 = type metadata accessor for Message.Metrics.EpochStage(0, v42, v25, v37);
    sub_21F716674();
    sub_21F716530();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x24BEE26D0], v34);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v27, v26);
    v24 = v43;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v24);
  return 0;
}

void sub_21F70788C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = 1;
  sub_21F716668();
  if (v0)
  {
    swift_unknownObjectRelease();
    JUMPOUT(0x21F707848);
  }
  JUMPOUT(0x21F707978);
}

void sub_21F7078DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = 2;
  sub_21F716668();
  if (!v0)
    JUMPOUT(0x21F707924);
  swift_unknownObjectRelease();
  JUMPOUT(0x21F707848);
}

void sub_21F70792C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = 3;
  sub_21F716668();
  if (v0)
    JUMPOUT(0x21F707954);
  JUMPOUT(0x21F707978);
}

BOOL sub_21F7079A4(char *a1, char *a2)
{
  return static Message.Metrics.EpochStage.__derived_enum_equals(_:_:)(*a1, *a2);
}

uint64_t sub_21F7079B0()
{
  return Message.Metrics.EpochStage.hashValue.getter();
}

uint64_t sub_21F7079B8()
{
  return Message.Metrics.EpochStage.hash(into:)();
}

uint64_t sub_21F7079C0()
{
  sub_21F716920();
  Message.Metrics.EpochStage.hash(into:)();
  return sub_21F716968();
}

uint64_t sub_21F7079FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = Message.Metrics.EpochStage.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  if (!v4)
    *a4 = result;
  return result;
}

void sub_21F707A2C(_QWORD *a1, uint64_t a2)
{
  unsigned __int8 *v2;

  Message.Metrics.EpochStage.encode(to:)(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t static UInt64.epoch(for:)()
{
  uint64_t result;
  double v1;
  double v2;

  result = sub_21F715DB0();
  v2 = v1 * 1000.0;
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 1.84467441e19)
    return (unint64_t)v2;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t _s7MetricsV10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7MetricsV10CodingKeysOMn);
}

uint64_t _s7MetricsV10EpochStageO23SourceReceiveCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7MetricsV10EpochStageO23SourceReceiveCodingKeysOMn);
}

uint64_t _s7MetricsV10EpochStageO25DestinationSendCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7MetricsV10EpochStageO25DestinationSendCodingKeysOMn);
}

uint64_t _s7MetricsV10EpochStageO28DestinationReceiveCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7MetricsV10EpochStageO28DestinationReceiveCodingKeysOMn);
}

uint64_t _s7MetricsV10EpochStageO20SourceSendCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7MetricsV10EpochStageO20SourceSendCodingKeysOMn);
}

uint64_t _s7MetricsV10EpochStageO10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s7MetricsV10EpochStageO10CodingKeysOMn);
}

uint64_t sub_21F707AFC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F707B54(a1, a2, a3, (uint64_t)&protocol conformance descriptor for Message<A>.Metrics, (uint64_t)&protocol conformance descriptor for Message<A>.Metrics, (uint64_t)&protocol conformance descriptor for Message<A>.Metrics);
}

void sub_21F707B18()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707B28()
{
  JUMPOUT(0x2207CC46CLL);
}

uint64_t sub_21F707B38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F707B54(a1, a2, a3, (uint64_t)&protocol conformance descriptor for Message<A>.Metrics.EpochStage, (uint64_t)&protocol conformance descriptor for Message<A>.Metrics.EpochStage, (uint64_t)&protocol conformance descriptor for Message<A>.Metrics.EpochStage);
}

uint64_t sub_21F707B54(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  a1[1] = MEMORY[0x2207CC46C](a4);
  a1[2] = MEMORY[0x2207CC46C](a5, a2);
  result = MEMORY[0x2207CC46C](a6, a2);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for Message.Metrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Message.Metrics);
}

uint64_t sub_21F707BC0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21F707C0C + 4 * byte_21F7243C1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21F707C40 + 4 * byte_21F7243BC[v4]))();
}

uint64_t sub_21F707C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F707C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F707C50);
  return result;
}

uint64_t sub_21F707C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F707C64);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21F707C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F707C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F707C7C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F707CBC + 4 * byte_21F7243C6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F707CDC + 4 * byte_21F7243CB[v4]))();
}

_BYTE *sub_21F707CBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F707CDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F707CE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F707CEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F707CF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F707CFC(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_21F707D08()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D18()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D28()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D38()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D48()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D58()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D68()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D78()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D88()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707D98()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707DA8()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707DB8()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707DC8()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F707DD8()
{
  JUMPOUT(0x2207CC46CLL);
}

uint64_t sub_21F707DE8()
{
  return 0x79427368636F7065;
}

uint64_t storeEnumTagSinglePayload for PASTaskRetryError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F707E50 + 4 * byte_21F724B50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F707E70 + 4 * byte_21F724B55[v4]))();
}

_BYTE *sub_21F707E50(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F707E70(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F707E78(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F707E80(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F707E88(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F707E90(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASTaskRetryError()
{
  return &type metadata for PASTaskRetryError;
}

uint64_t sub_21F707EAC()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F707F00()
{
  return sub_21F716134();
}

uint64_t sub_21F707F1C()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F707F6C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21F707FBC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000021F725F30;
}

unint64_t sub_21F707FE8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F70801C();
  a1[2] = sub_21F708060();
  result = sub_21F7080A4();
  a1[3] = result;
  return result;
}

unint64_t sub_21F70801C()
{
  unint64_t result;

  result = qword_2554E4040;
  if (!qword_2554E4040)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724C04, &type metadata for PASTaskRetryError);
    atomic_store(result, (unint64_t *)&qword_2554E4040);
  }
  return result;
}

unint64_t sub_21F708060()
{
  unint64_t result;

  result = qword_2554E4048;
  if (!qword_2554E4048)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724BBC, &type metadata for PASTaskRetryError);
    atomic_store(result, (unint64_t *)&qword_2554E4048);
  }
  return result;
}

unint64_t sub_21F7080A4()
{
  unint64_t result;

  result = qword_2554E4050;
  if (!qword_2554E4050)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724B94, &type metadata for PASTaskRetryError);
    atomic_store(result, (unint64_t *)&qword_2554E4050);
  }
  return result;
}

unint64_t sub_21F7080EC()
{
  unint64_t result;

  result = qword_2554E4058;
  if (!qword_2554E4058)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724CD8, &type metadata for PASTaskRetryError);
    atomic_store(result, (unint64_t *)&qword_2554E4058);
  }
  return result;
}

uint64_t sub_21F708130()
{
  sub_21F70801C();
  return sub_21F7168C0();
}

uint64_t sub_21F708158()
{
  sub_21F70801C();
  return sub_21F7168B4();
}

uint64_t PASFlowStepSourceStart.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t PASFlowStepSourceStart.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = sub_21F7162A8();
  v1[4] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_21F708244;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F708244()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F7082CC()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepSourceStart.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  v3 = *(_QWORD *)(v1 + 8);
  type metadata accessor for PASFlowStepCheckInternet();
  swift_allocObject();
  v4 = sub_21F70B740(v2, v3);
  swift_unknownObjectRelease();
  sub_21F65EAB0(&qword_2554E4068, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepCheckInternet);
  return v4;
}

uint64_t PASFlowStepSourceStart.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t PASFlowStepSourceStart.__deallocating_deinit()
{
  PASSourceFlowStepBase.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F708414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  v3 = *(_QWORD *)(v1 + 8);
  type metadata accessor for PASFlowStepCheckInternet();
  swift_allocObject();
  v4 = sub_21F70B740(v2, v3);
  swift_unknownObjectRelease();
  sub_21F65EAB0(&qword_2554E4068, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepCheckInternet);
  return v4;
}

uint64_t sub_21F7084CC(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DF2F8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSourceStart);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepSourceStart()
{
  uint64_t result;

  result = qword_2554E4098;
  if (!qword_2554E4098)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F70853C()
{
  return type metadata accessor for PASFlowStepSourceStart();
}

uint64_t sub_21F708544()
{
  return swift_updateClassMetadata2();
}

_UNKNOWN **sub_21F708578()
{
  return &off_2554E42F0;
}

uint64_t sub_21F708584(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x4F64696C61766E69;
}

uint64_t sub_21F7085CC(char *a1, char *a2)
{
  return sub_21F70C33C(*a1, *a2);
}

uint64_t sub_21F7085D8()
{
  return sub_21F70CEA0();
}

uint64_t sub_21F7085E0()
{
  return sub_21F70D400();
}

uint64_t sub_21F7085E8()
{
  return sub_21F70D8EC();
}

uint64_t sub_21F7085F0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_21F70864C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F708584(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F708674()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70E0B0();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F7086F0()
{
  return sub_21F70E0B0();
}

uint64_t sub_21F7086F8()
{
  sub_21F708BFC();
  return sub_21F7168C0();
}

uint64_t sub_21F708720()
{
  sub_21F708BFC();
  return sub_21F7168B4();
}

uint64_t sub_21F708748(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v15[4];
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  *(_QWORD *)&v16[0] = sub_21F716104();
  *((_QWORD *)&v16[0] + 1) = v2;
  swift_bridgeObjectRetain();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v3 = sub_21F644994((uint64_t)v17), (v4 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v3, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  sub_21F647538((uint64_t)v17);
  v15[0] = sub_21F716104();
  v15[1] = v5;
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v6 = sub_21F644994((uint64_t)v17), (v7 & 1) != 0))
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v6, (uint64_t)v16);
  else
    memset(v16, 0, sizeof(v16));
  swift_bridgeObjectRelease();
  sub_21F647538((uint64_t)v17);
  v8 = *((_QWORD *)&v20 + 1);
  sub_21F649B14((uint64_t)v16, (uint64_t)v17);
  v9 = v8 | v18;
  sub_21F649B5C((uint64_t)v17);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v10 = 1;
LABEL_14:
    sub_21F708A94();
    swift_allocError();
    *v13 = v10;
    swift_willThrow();
    goto LABEL_15;
  }
  v11 = *((_QWORD *)&v20 + 1);
  sub_21F649B14((uint64_t)v16, (uint64_t)v15);
  v12 = v15[3];
  sub_21F649B5C((uint64_t)v15);
  if (v11 && v12)
  {
    swift_bridgeObjectRelease();
    v10 = 0;
    goto LABEL_14;
  }
LABEL_15:
  sub_21F649B5C((uint64_t)v16);
  sub_21F649B5C((uint64_t)&v19);
  return a1;
}

uint64_t sub_21F708900(char a1, uint64_t a2)
{
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;
  _BYTE v10[40];

  *(_QWORD *)&v8 = sub_21F716104();
  *((_QWORD *)&v8 + 1) = v4;
  sub_21F7164B8();
  v9 = MEMORY[0x24BEE1328];
  LOBYTE(v8) = a1;
  sub_21F644FEC(&v8, v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21F6451B4(v7, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_21F647538((uint64_t)v10);
  return a2;
}

uint64_t sub_21F7089AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v9[2];
  __int128 v10;
  uint64_t v11;
  _BYTE v12[40];

  sub_21F716104();
  v6 = MEMORY[0x24BEE0D00];
  sub_21F7164B8();
  v11 = v6;
  *(_QWORD *)&v10 = a1;
  *((_QWORD *)&v10 + 1) = a2;
  sub_21F644FEC(&v10, v9);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_21F6451B4(v9, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_21F647538((uint64_t)v12);
  return a3;
}

uint64_t sub_21F708A68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  result = sub_21F708748(*v1);
  if (!v2)
    *a1 = result;
  return result;
}

unint64_t sub_21F708A94()
{
  unint64_t result;

  result = qword_2554E4308;
  if (!qword_2554E4308)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724F98, &type metadata for PASIDSMessageOptionsError);
    atomic_store(result, (unint64_t *)&qword_2554E4308);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PASIDSMessageOptionsError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F708B24 + 4 * byte_21F724DA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F708B58 + 4 * asc_21F724DA0[v4]))();
}

uint64_t sub_21F708B58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F708B60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F708B68);
  return result;
}

uint64_t sub_21F708B74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F708B7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F708B80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F708B88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASIDSMessageOptionsError()
{
  return &type metadata for PASIDSMessageOptionsError;
}

ValueMetadata *type metadata accessor for IDSMessageOptions()
{
  return &type metadata for IDSMessageOptions;
}

ValueMetadata *type metadata accessor for IDSMessageOptions.Builder()
{
  return &type metadata for IDSMessageOptions.Builder;
}

unint64_t sub_21F708BC8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F708BFC();
  a1[2] = sub_21F708C40();
  result = sub_21F708C84();
  a1[3] = result;
  return result;
}

unint64_t sub_21F708BFC()
{
  unint64_t result;

  result = qword_2554E4310;
  if (!qword_2554E4310)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724E9C, &type metadata for PASIDSMessageOptionsError);
    atomic_store(result, (unint64_t *)&qword_2554E4310);
  }
  return result;
}

unint64_t sub_21F708C40()
{
  unint64_t result;

  result = qword_2554E4318;
  if (!qword_2554E4318)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724E54, &type metadata for PASIDSMessageOptionsError);
    atomic_store(result, (unint64_t *)&qword_2554E4318);
  }
  return result;
}

unint64_t sub_21F708C84()
{
  unint64_t result;

  result = qword_2554E4320;
  if (!qword_2554E4320)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724E2C, &type metadata for PASIDSMessageOptionsError);
    atomic_store(result, (unint64_t *)&qword_2554E4320);
  }
  return result;
}

unint64_t sub_21F708CCC()
{
  unint64_t result;

  result = qword_2554E4328;
  if (!qword_2554E4328)
  {
    result = MEMORY[0x2207CC46C](&unk_21F724F70, &type metadata for PASIDSMessageOptionsError);
    atomic_store(result, (unint64_t *)&qword_2554E4328);
  }
  return result;
}

uint64_t sub_21F708D10(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  sub_21F70942C();
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_21F7161D0();
  return swift_continuation_resume();
}

uint64_t type metadata accessor for PASExtensionKitFacade()
{
  return objc_opt_self();
}

uint64_t sub_21F708D74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v0;
  v2 = sub_21F715EE8();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v3 = sub_21F715F0C();
  v1[6] = v3;
  v1[7] = *(_QWORD *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v4 = sub_21F715EC4();
  v1[9] = v4;
  v1[10] = *(_QWORD *)(v4 - 8);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F708E34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[11];
  v2 = v0[12];
  v3 = v0[9];
  v4 = v0[10];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[7] + 16))(v0[8], v0[2], v0[6]);
  sub_21F715EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_21F708EE4;
  return sub_21F715ED0();
}

uint64_t sub_21F708EE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F708F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = sub_21F715EDC();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v9 = swift_task_dealloc();
  if (!v1)
    v9 = v8;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

uint64_t sub_21F70900C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F709078(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
  return swift_task_switch();
}

uint64_t sub_21F709090()
{
  _QWORD *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = objc_allocWithZone(MEMORY[0x24BDC79E8]);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_21F7160E0();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithExtensionPointIdentifier_, v2);
  v0[28] = v3;

  v4 = (void *)objc_opt_self();
  v0[7] = v0 + 25;
  v0[2] = v0;
  v0[3] = sub_21F709198;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_21F708D10;
  v6[3] = &block_descriptor_10;
  v6[4] = v5;
  objc_msgSend(v4, sel_executeQuery_completionHandler_, v3, v6);
  return swift_continuation_await();
}

uint64_t sub_21F709198()
{
  return swift_task_switch();
}

uint64_t sub_21F7091E4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 200);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_13:

    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
  }
  swift_bridgeObjectRetain();
  v2 = sub_21F716608();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v22 = MEMORY[0x24BEE4AF8];
  result = sub_21F6BFA2C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = (uint64_t *)(v0 + 120);
    v6 = v22;
    v18 = v1 & 0xC000000000000001;
    v19 = (uint64_t *)(v0 + 160);
    v20 = v2;
    v21 = v1;
    do
    {
      if (v18)
        MEMORY[0x2207CBA94](v4, v1);
      else
        v7 = *(id *)(v1 + 8 * v4 + 32);
      v8 = sub_21F715F0C();
      *(_QWORD *)(v0 + 144) = v8;
      *(_QWORD *)(v0 + 152) = &off_24E45BC80;
      __swift_allocate_boxed_opaque_existential_1(v5);
      sub_21F715F18();
      v10 = *(_QWORD *)(v22 + 16);
      v9 = *(_QWORD *)(v22 + 24);
      if (v10 >= v9 >> 1)
        sub_21F6BFA2C(v9 > 1, v10 + 1, 1);
      ++v4;
      v11 = *(_QWORD *)(v0 + 144);
      v12 = (uint64_t)v5;
      v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v11);
      v14 = *(_QWORD *)(v11 - 8);
      v15 = swift_task_alloc();
      v16 = v13;
      v5 = (uint64_t *)v12;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v16, v11);
      *(_QWORD *)(v0 + 184) = v8;
      *(_QWORD *)(v0 + 192) = &off_24E45BC80;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(boxed_opaque_existential_1, v15, v8);
      *(_QWORD *)(v22 + 16) = v10 + 1;
      sub_21F64756C((__int128 *)v19, v22 + 40 * v10 + 32);
      __swift_destroy_boxed_opaque_existential_0Tm(v12);
      swift_task_dealloc();
      v1 = v21;
    }
    while (v20 != v4);

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
  }
  __break(1u);
  return result;
}

unint64_t sub_21F70942C()
{
  unint64_t result;

  result = qword_2554E43E0;
  if (!qword_2554E43E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554E43E0);
  }
  return result;
}

uint64_t PASFlowStepSelectPicker.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = swift_allocObject();
  v5 = (_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension);
  *v5 = 0;
  v5[1] = 0;
  v6 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker__extensionCache;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA830);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v4 + v6) = v7;
  v8 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t PASFlowStepSelectPicker.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = sub_21F7162A8();
  v1[4] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_21F709564;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F709564()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F7095EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = swift_allocObject();
  swift_weakInit();
  sub_21F658AF4();
  swift_allocError();
  *(_QWORD *)v2 = 0xD00000000000002DLL;
  *(_QWORD *)(v2 + 8) = 0x800000021F72A8D0;
  *(_QWORD *)(v2 + 16) = &unk_2554E4408;
  *(_QWORD *)(v2 + 24) = v1;
  *(_BYTE *)(v2 + 32) = 0;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F7096A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v1[6] = swift_task_alloc();
  sub_21F7162A8();
  v1[7] = sub_21F71629C();
  v1[8] = sub_21F716248();
  v1[9] = v2;
  return swift_task_switch();
}

uint64_t sub_21F709730()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F7097B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v1;
  swift_retain();
  sub_21F6B4038(v2, (uint64_t)&unk_2554E4698, (uint64_t)v4);
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F709868()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F7098A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a4;
  return swift_task_switch();
}

uint64_t sub_21F7098B8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(*(_QWORD *)(v0[7] + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker__extensionCache)
                 + 16);
  swift_beginAccess();
  v2 = *v1;
  if (*v1)
  {
    swift_retain();
  }
  else
  {
    v3 = qword_2554DA6A0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v2 = sub_21F63FE04();
    *v1 = v2;
    swift_retain();
    swift_release();
  }
  v0[8] = v2;
  v0[9] = v2;
  swift_retain();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F7099A0()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 80) = sub_21F6AC1D8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFAD8);
  *v1 = v0;
  v1[1] = sub_21F709A20;
  return sub_21F7162E4();
}

uint64_t sub_21F709A20()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F709A78()
{
  uint64_t v0;

  swift_release();
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 40);
  return swift_task_switch();
}

uint64_t sub_21F709ABC()
{
  uint64_t v0;

  sub_21F7162A8();
  *(_QWORD *)(v0 + 112) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F709B24()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v1 = (void *)v0[13];
  v2 = (void *)v0[12];
  v3 = v0[7];
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension);
  v6 = *(void **)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension + 8);
  *v4 = v2;
  v4[1] = v1;
  sub_21F6ACC34(v2, v1);
  sub_21F6C1490(v5, v6);
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F709BA8()
{
  uint64_t v0;

  sub_21F6C1490(*(_QWORD *)(v0 + 96), *(void **)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepSelectPicker.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32[5];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension);
  if (v2)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension + 8);
    v4 = qword_2554DA718;
    swift_retain();
    v5 = v3;
    if (v4 != -1)
      swift_once();
    v6 = sub_21F715F3C();
    __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
    swift_retain_n();
    v7 = v5;
    v8 = sub_21F715F24();
    v9 = sub_21F716344();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v32[0] = swift_slowAlloc();
      v11 = v32[0];
      *(_DWORD *)v10 = 136446210;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
      v12 = sub_21F715F00();
      v32[4] = sub_21F644208(v12, v13, v32);
      sub_21F716428();

      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v8, v9, "PASFlowStepSelectPicker nextStep loading picker extension %{public}s instead of family picker", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v11, -1, -1);
      MEMORY[0x2207CC514](v10, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v23 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v24 = MEMORY[0x2207CC5BC](v23);
    v25 = *(_QWORD *)(v23 + 8);
    type metadata accessor for PASFlowStepExtensionProvidedPicker();
    v26 = swift_allocObject();
    v27 = v26 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result;
    *(_QWORD *)v27 = 0;
    *(_QWORD *)(v27 + 8) = 0;
    *(_BYTE *)(v27 + 16) = -1;
    v28 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker__accountProvider;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = 0u;
    *(_OWORD *)(v29 + 32) = 0u;
    *(_QWORD *)(v29 + 48) = 0;
    *(_QWORD *)(v26 + v28) = v29;
    v30 = (_QWORD *)(v26 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension);
    *v30 = v2;
    v30[1] = v7;
    v20 = sub_21F6BC954(v24, v25);
    swift_unknownObjectRelease();
    v21 = (unint64_t *)&unk_2554E4410;
    v22 = type metadata accessor for PASFlowStepExtensionProvidedPicker;
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v14 = sub_21F715F3C();
    __swift_project_value_buffer(v14, (uint64_t)static PASLogger.common);
    v15 = sub_21F715F24();
    v16 = sub_21F716344();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_21F63C000, v15, v16, "PASFlowStepSelectPicker nextStep no extension handle found; falling back to family picker",
        v17,
        2u);
      MEMORY[0x2207CC514](v17, -1, -1);
    }

    v18 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v19 = MEMORY[0x2207CC5BC](v18);
    v20 = sub_21F6D7224(v19, *(_QWORD *)(v18 + 8));
    swift_unknownObjectRelease();
    v21 = &qword_2554E11F0;
    v22 = type metadata accessor for PASFlowStepFamilyPicker;
  }
  sub_21F65EAB0(v21, (uint64_t (*)(uint64_t))v22);
  return v20;
}

uint64_t PASFlowStepSelectPicker.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension);
  *v5 = 0;
  v5[1] = 0;
  v6 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker__extensionCache;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA830);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v2 + v6) = v7;
  v8 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_21F70A04C()
{
  uint64_t v0;

  sub_21F6C1490(*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension), *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension + 8));
  return swift_release();
}

uint64_t PASFlowStepSelectPicker.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  sub_21F6C1490(*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension), *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension + 8));
  swift_release();
  return v0;
}

uint64_t PASFlowStepSelectPicker.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  sub_21F6C1490(*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension), *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSelectPicker_locatedExtension + 8));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F70A118()
{
  return PASFlowStepSelectPicker.nextStep()();
}

uint64_t sub_21F70A12C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F70A150()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F7096A0(v0);
}

uint64_t sub_21F70A198(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554E26B0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSelectPicker);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepSelectPicker()
{
  uint64_t result;

  result = qword_2554E4440;
  if (!qword_2554E4440)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F70A208()
{
  return type metadata accessor for PASFlowStepSelectPicker();
}

uint64_t sub_21F70A210()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F70A25C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F70A288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F656988;
  v3[7] = v2;
  return swift_task_switch();
}

uint64_t PASFlowStepCheckInternet.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_21F70B740(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

id sub_21F70A340()
{
  id *v0;

  return objc_msgSend(*v0, sel_isNetworkReachable);
}

uint64_t property wrapper backing initializer of PASFlowStepCheckInternet.isNetworkReachable()
{
  return sub_21F715F78();
}

uint64_t PASFlowStepCheckInternet.isNetworkReachable.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21F70A3FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21F70A478()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t PASFlowStepCheckInternet.$isNetworkReachable.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t sub_21F70A548()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t sub_21F70A5AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F90();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t PASFlowStepCheckInternet.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[7] = v0;
  v1[8] = sub_21F7162A8();
  v1[9] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[10] = v2;
  *v2 = v1;
  v2[1] = sub_21F70A728;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F70A728()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F70A7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_retain();
  sub_21F656B94(v0 + 16);
  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  sub_21F70A8FC(v1 & 1);
  if ((v1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 56);
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v4 = 0xD000000000000015;
    *(_QWORD *)(v4 + 8) = 0x800000021F72A960;
    *(_QWORD *)(v4 + 16) = &unk_2554E46C0;
    *(_QWORD *)(v4 + 24) = v3;
    *(_BYTE *)(v4 + 32) = 0;
    swift_retain();
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F70A8C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F70A8FC(char a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if ((a1 & 1) == 0)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F71635C();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepCheckInternet setNetworkReachable internet is NOT reachable", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t PASFlowStepCheckInternet.continueWithoutInternet(using:)()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 296) = v0;
  return swift_task_switch();
}

uint64_t sub_21F70AA40()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[38] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepCheckInternet continueWithoutInternet", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_retain();
  sub_21F6569C8((uint64_t)(v0 + 21));
  swift_release();
  v5 = v0[24];
  v6 = v0[25];
  __swift_project_boxed_opaque_existential_1(v0 + 21, v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  v0[39] = v7;
  *v7 = v0;
  v7[1] = sub_21F70AB98;
  return v9(v5, v6);
}

uint64_t sub_21F70AB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 320) = a1;
  *(_QWORD *)(v3 + 328) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F70AC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  v1 = v0 + 168;
  v2 = *(_QWORD *)(v0 + 320);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 296);
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    v4 = type metadata accessor for PASAccountWithImage();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v2;
    *(_OWORD *)(v5 + 24) = xmmword_21F717E50;
    *(_QWORD *)(v0 + 144) = v4;
    *(_QWORD *)(v0 + 152) = sub_21F647438(&qword_2554DE3E0, (uint64_t (*)(uint64_t))type metadata accessor for PASAccountWithImage, (uint64_t)&protocol conformance descriptor for PASAccountWithImage);
    *(_QWORD *)(v0 + 120) = v5;
    *(_BYTE *)(v0 + 160) = 0;
    v6 = v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet_noInternetResult;
    swift_beginAccess();
    sub_21F70B8E0(v0 + 120, v6);
    swift_endAccess();
    sub_21F7162A8();
    *(_QWORD *)(v0 + 352) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 296);
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    v9 = v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v10 = MEMORY[0x2207CC5BC](v9);
    *(_QWORD *)(v0 + 336) = v10;
    if (v10)
    {
      v11 = *(_QWORD *)(v9 + 8);
      ObjectType = swift_getObjectType();
      sub_21F671624();
      v13 = swift_allocError();
      *v14 = 0;
      *(_QWORD *)(v0 + 16) = v13;
      *(_BYTE *)(v0 + 64) = 1;
      v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 16) + *(_QWORD *)(v11 + 16));
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 344) = v15;
      *v15 = v0;
      v15[1] = sub_21F70AE24;
      return v16(v0 + 16, ObjectType, v11);
    }
    else
    {
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_21F70AE24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F6476AC(v1, (uint64_t *)&unk_2554DB8E0);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21F70AE88()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F70AEC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(void **)(v0 + 328);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 168);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 328);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v16 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 280) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 288) = sub_21F644208(v10, v11, &v16);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepCheckInternet continueWithoutInternet failed %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 328);

  }
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 328);
  v13 = *(_QWORD *)(v0 + 296);
  *(_BYTE *)(v0 + 112) = 1;
  v14 = v13 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet_noInternetResult;
  swift_beginAccess();
  sub_21F70B8E0(v0 + 72, v14);
  swift_endAccess();
  sub_21F7162A8();
  *(_QWORD *)(v0 + 352) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

NSObject *PASFlowStepCheckInternet.nextStep()()
{
  NSObject *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31[3];
  unsigned __int8 v32[40];
  unsigned __int8 v33;
  uint64_t v34;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  if (v32[0] != 1)
  {
    v9 = (uint64_t)v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet_noInternetResult;
    swift_beginAccess();
    sub_21F70B928(v9, (uint64_t)v32);
    if (v33 == 255)
    {
      sub_21F658AF4();
      swift_allocError();
      *(_QWORD *)v10 = 0xD000000000000026;
      *(_QWORD *)(v10 + 8) = 0x800000021F72A980;
      *(_QWORD *)(v10 + 16) = 0;
      *(_QWORD *)(v10 + 24) = 0;
      *(_BYTE *)(v10 + 32) = 1;
    }
    else
    {
      if ((v33 & 1) == 0)
      {
        sub_21F6476AC((uint64_t)v32, &qword_2554E46E8);
        v11 = (char *)v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
        swift_beginAccess();
        v12 = MEMORY[0x2207CC5BC](v11);
        v13 = *((_QWORD *)v11 + 1);
        type metadata accessor for PASFlowStepConnectPeer();
        v4 = type metadata accessor for PASFlowStepConnectPeer;
        v14 = swift_allocObject();
        v15 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__deviceProvider;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
        v16 = swift_allocObject();
        *(_QWORD *)(v16 + 16) = 0;
        *(_QWORD *)(v16 + 24) = 0;
        *(_QWORD *)(v14 + v15) = v16;
        v17 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__accountProvider;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = 0u;
        *(_OWORD *)(v18 + 32) = 0u;
        *(_QWORD *)(v18 + 48) = 0;
        *(_QWORD *)(v14 + v17) = v18;
        v19 = v14 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
        *(_QWORD *)v19 = 0;
        *(_BYTE *)(v19 + 8) = -1;
        v0 = sub_21F6BC954(v12, v13);
        swift_unknownObjectRelease();
        v8 = &qword_2554DD358;
        goto LABEL_7;
      }
      v20 = *(void **)v32;
      if (qword_2554DA718 != -1)
        swift_once();
      v21 = sub_21F715F3C();
      __swift_project_value_buffer(v21, (uint64_t)static PASLogger.common);
      v22 = v20;
      v23 = v20;
      v0 = sub_21F715F24();
      v24 = sub_21F71635C();
      if (os_log_type_enabled(v0, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v31[0] = v26;
        *(_DWORD *)v25 = 136446210;
        v34 = (uint64_t)v20;
        v27 = v20;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
        v28 = sub_21F716128();
        v34 = sub_21F644208(v28, v29, v31);
        sub_21F716428();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21F63C000, v0, v24, "PASFlowStepCheckInternet nextStep encountered error: %{public}s", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v26, -1, -1);
        MEMORY[0x2207CC514](v25, -1, -1);
      }
      else
      {

      }
    }
    swift_willThrow();
    return v0;
  }
  v1 = (char *)v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  v3 = *((_QWORD *)v1 + 1);
  type metadata accessor for PASFlowStepRepairLocalAccount();
  v4 = type metadata accessor for PASFlowStepRepairLocalAccount;
  v5 = swift_allocObject();
  v6 = OBJC_IVAR____TtC21ProximityAppleIDSetup29PASFlowStepRepairLocalAccount__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_QWORD *)(v7 + 48) = 0;
  *(_QWORD *)(v5 + v6) = v7;
  v0 = sub_21F6BC954(v2, v3);
  swift_unknownObjectRelease();
  v8 = &qword_2554DD360;
LABEL_7:
  sub_21F647438(v8, (uint64_t (*)(uint64_t))v4, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  return v0;
}

uint64_t PASFlowStepCheckInternet.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_21F70B740(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_21F70B598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet__isNetworkReachable;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet_noInternetResult, &qword_2554E46E0);
  swift_release();
  return swift_release();
}

uint64_t PASFlowStepCheckInternet.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = PASSourceFlowStepBase.deinit();
  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet__isNetworkReachable;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet_noInternetResult, &qword_2554E46E0);
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASFlowStepCheckInternet.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = PASSourceFlowStepBase.deinit();
  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet__isNetworkReachable;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet_noInternetResult, &qword_2554E46E0);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

NSObject *sub_21F70B72C()
{
  return PASFlowStepCheckInternet.nextStep()();
}

uint64_t sub_21F70B740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet__isNetworkReachable;
  v16[15] = 0;
  swift_retain();
  sub_21F715F78();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v9, v8, v5);
  v10 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet_noInternetResult;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_QWORD *)(v10 + 32) = 0;
  *(_BYTE *)(v10 + 40) = -1;
  v11 = OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet__reachabilityProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA838);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v2 + v11) = v12;
  v13 = OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepCheckInternet__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v2 + v13) = v14;
  swift_release();
  return sub_21F6BC954(a1, a2);
}

uint64_t sub_21F70B898()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F65C168(v0);
}

uint64_t sub_21F70B8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E46E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F70B928(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E46E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F70B970(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554E4068, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepCheckInternet, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepCheckInternet()
{
  uint64_t result;

  result = qword_2554E4718;
  if (!qword_2554E4718)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F70B9F0()
{
  return type metadata accessor for PASFlowStepCheckInternet();
}

void sub_21F70B9F8()
{
  unint64_t v0;

  sub_21F690CF8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_21F70BA7C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_21F70BAC8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_21F70BB7C + 4 * byte_21F725206[a2]))(0x7465677261546F6ELL);
}

uint64_t sub_21F70BB7C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7465677261546F6ELL && v1 == 0xEE00656369766544)
    v2 = 1;
  else
    v2 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_21F70BC90(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000017;
  v3 = 0x800000021F725DC0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6E756F6363416F6ELL;
    else
      v5 = 0x6341534D44496F6ELL;
    if (v4 == 1)
      v6 = 0xE900000000000074;
    else
      v6 = 0xED0000746E756F63;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000017;
  v6 = 0x800000021F725DC0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x6E756F6363416F6ELL;
    else
      v2 = 0x6341534D44496F6ELL;
    if (v7 == 1)
      v3 = 0xE900000000000074;
    else
      v3 = 0xED0000746E756F63;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21F70BDB8(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aNorequesnoimag_0[8 * a1] == *(_QWORD *)&aNorequesnoimag_0[8 * a2]
    && *(_QWORD *)&aNorequesnoimag_0[8 * a1 + 24] == *(_QWORD *)&aNorequesnoimag_0[8 * a2 + 24])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_21F716800();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_21F70BE3C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000010;
  v3 = 0x800000021F725C90;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000021;
    else
      v5 = 0xD00000000000001ALL;
    if (v4 == 1)
      v6 = 0x800000021F725CB0;
    else
      v6 = 0x800000021F725CE0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000010;
  v6 = 0x800000021F725C90;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000021;
    else
      v2 = 0xD00000000000001ALL;
    if (v7 == 1)
      v3 = 0x800000021F725CB0;
    else
      v3 = 0x800000021F725CE0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21F70BF38(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aSimdata_3[8 * a1] == *(_QWORD *)&aSimdata_3[8 * a2]
    && *(_QWORD *)&aDoprovisurlreq_1[8 * a1 + 16] == *(_QWORD *)&aDoprovisurlreq_1[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_21F716800();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_21F70BFBC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0xD000000000000017;
  if (v2)
    v4 = 0x800000021F725D20;
  else
    v4 = 0x800000021F725D40;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0xD000000000000017;
  if ((a2 & 1) != 0)
    v6 = 0x800000021F725D40;
  else
    v6 = 0x800000021F725D20;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_21F70C064(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_21F70C0B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_21F70C148 + 4 * byte_21F725211[a2]))(0x5264696C61766E69);
}

uint64_t sub_21F70C148(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x5264696C61766E69 && v1 == 0xEC0000006574756FLL)
    v2 = 1;
  else
    v2 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_21F70C224(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x800000021F725C40;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000010;
    else
      v4 = 0x6569786F72506F6ELL;
    if (v3 == 1)
      v5 = 0x800000021F725C60;
    else
      v5 = 0xEF65636976654464;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD000000000000010;
      else
        v7 = 0x6569786F72506F6ELL;
      if (v6 == 1)
        v2 = 0x800000021F725C60;
      else
        v2 = 0xEF65636976654464;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD000000000000013;
    v5 = 0x800000021F725C40;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  if (v4 != 0xD000000000000013)
  {
LABEL_21:
    v8 = sub_21F716800();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21F70C33C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000014;
  else
    v3 = 0x4F64696C61766E69;
  if (v2)
    v4 = 0xEE00736E6F697470;
  else
    v4 = 0x800000021F725F60;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000014;
  else
    v5 = 0x4F64696C61766E69;
  if ((a2 & 1) != 0)
    v6 = 0x800000021F725F60;
  else
    v6 = 0xEE00736E6F697470;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21F70C3EC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6563697665446F6ELL;
  else
    v3 = 0xD000000000000016;
  if (v2)
    v4 = 0x800000021F725C00;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6563697665446F6ELL;
  else
    v5 = 0xD000000000000016;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0x800000021F725C00;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21F70C494(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000020;
  v3 = 0x800000021F725E00;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001CLL;
    else
      v5 = 0xD00000000000001FLL;
    if (v4 == 1)
      v6 = 0x800000021F725E30;
    else
      v6 = 0x800000021F725E50;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000020;
  v6 = 0x800000021F725E00;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000001CLL;
    else
      v2 = 0xD00000000000001FLL;
    if (v7 == 1)
      v3 = 0x800000021F725E30;
    else
      v3 = 0x800000021F725E50;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21F70C588(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x5264696C61766E69;
  else
    v3 = 0xD000000000000013;
  if (v2)
    v4 = 0x800000021F725BC0;
  else
    v4 = 0xEE0073746C757365;
  if ((a2 & 1) != 0)
    v5 = 0x5264696C61766E69;
  else
    v5 = 0xD000000000000013;
  if ((a2 & 1) != 0)
    v6 = 0xEE0073746C757365;
  else
    v6 = 0x800000021F725BC0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21F70C63C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000016;
  else
    v3 = 0x6341534D44496F6ELL;
  if (v2)
    v4 = 0xED0000746E756F63;
  else
    v4 = 0x800000021F725C00;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000016;
  else
    v5 = 0x6341534D44496F6ELL;
  if ((a2 & 1) != 0)
    v6 = 0x800000021F725C00;
  else
    v6 = 0xED0000746E756F63;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_21F70C6EC(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aIphone_3[8 * a1] == *(_QWORD *)&aIphone_3[8 * a2] && qword_21F725560[a1] == qword_21F725560[a2])
    v3 = 1;
  else
    v3 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_21F70C770()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70C800()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70C890()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70C940()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70C9E8()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70CA50()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70CAD4()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70CB3C()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70CBA4()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70CC58()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70CCDC()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

void sub_21F70CD80(char a1)
{
  sub_21F716920();
  __asm { BR              X10 }
}

uint64_t sub_21F70CDD8()
{
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70CEA0()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

void sub_21F70CF30(char a1)
{
  sub_21F716920();
  __asm { BR              X10 }
}

uint64_t sub_21F70CF84()
{
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

void sub_21F70D028(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_21F70D06C()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D118()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D1A4()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D1E4()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D264()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

void sub_21F70D2A4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_21F70D2E8()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D378()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D400()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D468()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D4C4()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D540()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D5A8()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D610()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70D650()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70D6B4()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70D740()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70D7CC()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70D86C()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70D8EC()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70D978()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

void sub_21F70DA24(uint64_t a1, char a2)
{
  sub_21F716920();
  __asm { BR              X10 }
}

uint64_t sub_21F70DA74()
{
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70DB18()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70DB98()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70DBFC()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70DCA0()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70DD04()
{
  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

void sub_21F70DDB4(uint64_t a1, char a2)
{
  sub_21F716920();
  __asm { BR              X10 }
}

uint64_t sub_21F70DE08()
{
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F70DED0()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70DF74()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70E018()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70E0B0()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_21F70E154(char a1)
{
  sub_21F7169F8();
  sub_21F716140();
  __asm { BR              X10 }
}

uint64_t sub_21F70E1C4()
{
  uint64_t v1;

  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70E268()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70E300()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F70E324()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70E3E8()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_21F70E4B0(char a1)
{
  sub_21F7169F8();
  sub_21F716140();
  __asm { BR              X10 }
}

uint64_t sub_21F70E520()
{
  uint64_t v1;

  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70E5E4()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F70E608(uint64_t a1)
{
  return sub_21F70E690(a1, (uint64_t)&type metadata for PASFlowStepProxiedAuthError, (void (*)(uint64_t))PASFlowStepProxiedAuthError.rawValue.getter);
}

uint64_t sub_21F70E61C()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  _s21ProximityAppleIDSetup28PASFlowStepFamilyPickerErrorO8rawValueSSvg_0();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_21F70E67C(uint64_t a1)
{
  return sub_21F70E690(a1, (uint64_t)&type metadata for PASFamilyMemberPickerDataSourceError, (void (*)(uint64_t))PASFamilyMemberPickerDataSourceError.rawValue.getter);
}

uint64_t sub_21F70E690(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6;

  v6 = sub_21F7169F8();
  sub_21F716140();
  a3(a1);
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_21F70E700(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21F70E738 + 4 * byte_21F725242[a1]))(0xD000000000000013, 0x800000021F725FA0);
}

uint64_t sub_21F70E738()
{
  return 0x5264696C61766E69;
}

uint64_t sub_21F70E758()
{
  return 0x52676E697373696DLL;
}

uint64_t sub_21F70E77C()
{
  return 0x6164696C61766E69;
}

uint64_t sub_21F70E79C()
{
  return 0x74756F656D6974;
}

void sub_21F70E7B4(char *a1)
{
  sub_21F70C064(*a1);
}

void sub_21F70E7C0()
{
  char *v0;

  sub_21F70CF30(*v0);
}

void sub_21F70E7C8(uint64_t a1)
{
  char *v1;

  sub_21F70D2A4(a1, *v1);
}

void sub_21F70E7D0(uint64_t a1)
{
  char *v1;

  sub_21F70DA24(a1, *v1);
}

uint64_t sub_21F70E7D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F710DB0();
  *a1 = result;
  return result;
}

uint64_t sub_21F70E804@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F70E700(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F70E82C()
{
  char *v0;
  char v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v3;
  sub_21F70E154(v1);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  return sub_21F6409B8(inited);
}

void sub_21F70E8A8()
{
  char *v0;

  sub_21F70E154(*v0);
}

uint64_t sub_21F70E8B0()
{
  sub_21F71167C();
  return sub_21F7168C0();
}

uint64_t sub_21F70E8D8()
{
  sub_21F71167C();
  return sub_21F7168B4();
}

id IDSMessageTransport.service.getter()
{
  id *v0;

  return *v0;
}

uint64_t IDSMessageTransport.receiver.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_21F68747C(v1);
  return v1;
}

uint64_t IDSMessageTransport.receiver.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21F6866A4(*(_QWORD *)(v2 + 8));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*IDSMessageTransport.receiver.modify())()
{
  return nullsub_1;
}

uint64_t IDSMessageTransport.invalidationHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_21F68747C(v1);
  return v1;
}

uint64_t IDSMessageTransport.invalidationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21F6866A4(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*IDSMessageTransport.invalidationHandler.modify())()
{
  return nullsub_1;
}

id IDSMessageTransport.messageQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t IDSMessageTransport.pushToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

double IDSMessageTransport.init(service:pushToken:responseTimeout:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a6;
  v22 = a4;
  v23 = a5;
  v24 = a1;
  v25 = a2;
  v26 = a3;
  v8 = sub_21F7163A4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_21F71638C();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_21F716020();
  MEMORY[0x24BDAC7A8](v13);
  sub_21F6A0FC8();
  sub_21F716014();
  v27 = MEMORY[0x24BEE4AF8];
  sub_21F70EBFC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E4990);
  sub_21F70EC44();
  sub_21F71647C();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5750], v8);
  v14 = sub_21F7163C8();
  type metadata accessor for IDSResponseHandler(0, v21, v15, v16);
  v17 = sub_21F6D8AC8(v22, v23);
  *(_QWORD *)a7 = v24;
  result = 0.0;
  *(_OWORD *)(a7 + 8) = 0u;
  *(_OWORD *)(a7 + 24) = 0u;
  *(_QWORD *)(a7 + 40) = v17;
  *(_QWORD *)(a7 + 48) = v14;
  v19 = v26;
  *(_QWORD *)(a7 + 56) = v25;
  *(_QWORD *)(a7 + 64) = v19;
  return result;
}

unint64_t sub_21F70EBFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554E4988;
  if (!qword_2554E4988)
  {
    v1 = sub_21F71638C();
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_2554E4988);
  }
  return result;
}

unint64_t sub_21F70EC44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554E4998;
  if (!qword_2554E4998)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554E4990);
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2554E4998);
  }
  return result;
}

uint64_t IDSMessageTransport.onReceive(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = v3[7];
  v8 = v3[8];
  v10 = v3[3];
  v9 = v3[4];
  v11 = *v3;
  sub_21F6866A4(v3[1]);
  *(_QWORD *)a3 = v11;
  *(_QWORD *)(a3 + 8) = a1;
  *(_QWORD *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 32) = v9;
  *(_OWORD *)(a3 + 40) = *(_OWORD *)(v3 + 5);
  *(_QWORD *)(a3 + 56) = v7;
  *(_QWORD *)(a3 + 64) = v8;
  return swift_retain();
}

uint64_t IDSMessageTransport.onInvalidation(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v7 = *((_QWORD *)v3 + 7);
  v8 = *((_QWORD *)v3 + 8);
  v11 = *v3;
  v9 = *((_QWORD *)v3 + 2);
  sub_21F6866A4(*((_QWORD *)v3 + 3));
  *(_OWORD *)a3 = v11;
  *(_QWORD *)(a3 + 16) = v9;
  *(_QWORD *)(a3 + 24) = a1;
  *(_QWORD *)(a3 + 32) = a2;
  *(_OWORD *)(a3 + 40) = *(__int128 *)((char *)v3 + 40);
  *(_QWORD *)(a3 + 56) = v7;
  *(_QWORD *)(a3 + 64) = v8;
  return swift_retain();
}

uint64_t IDSMessageTransport.build()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  _BYTE *v7;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
  {
    sub_21F68747C(v3);
    sub_21F710CB8(v2);
    v5 = sub_21F710BA4(v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
    sub_21F710D34(v2);
    sub_21F6866A4(v3);
    return (uint64_t)v5;
  }
  else
  {
    sub_21F6D9A68();
    swift_allocError();
    *v7 = 1;
    return swift_willThrow();
  }
}

id IDSMessageTransport.activate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;

  v4 = sub_21F710BA4(v3, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  sub_21F710D34(v3);
  return v4;
}

uint64_t sub_21F70EE70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t result;
  _OWORD v9[4];
  uint64_t v10;

  v5 = *(_OWORD *)(v2 + 48);
  v9[2] = *(_OWORD *)(v2 + 32);
  v9[3] = v5;
  v10 = *(_QWORD *)(v2 + 64);
  v6 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v6;
  v7 = IDSMessageTransport.build()(a1);
  result = sub_21F710D34((uint64_t)v9);
  if (!v3)
    *a2 = v7;
  return result;
}

uint64_t sub_21F70EED8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_2554E4AD0);
}

uint64_t sub_21F70EEE8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_2554E4AD0) = result;
  return result;
}

Swift::Void __swiftcall ActivatedIDSMessageTransport.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void (*v3)(id);
  id v4;

  *(_BYTE *)(v0 + qword_2554E4AD0) = 1;
  v1 = v0 + qword_2554E49A8;
  v2 = objc_msgSend(*(id *)(v0 + qword_2554E49A8), sel_removeDelegate_, v0);
  v3 = *(void (**)(id))(v1 + 24);
  if (v3)
    v3(v2);

}

unint64_t ActivatedIDSMessageTransport.service(_:account:incomingMessage:fromID:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return sub_21F710DF8(a3, a4, a5, a6);
}

uint64_t sub_21F70EF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v12;

  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v12;
  *v12 = v7;
  v12[1] = sub_21F656988;
  v12[4] = a7;
  v12[5] = a4;
  v12[2] = a5;
  v12[3] = a6;
  return swift_task_switch();
}

uint64_t sub_21F70EFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v13;
  uint64_t v15;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = sub_21F651418;
  return sub_21F70F15C(a5, a6, a7, a8, v15);
}

uint64_t sub_21F70F074(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v8 = a6;
  if (!a5)
  {
    v12 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v13 = 0;
    goto LABEL_6;
  }
  v12 = sub_21F716044();
  if (!v8)
    goto LABEL_5;
LABEL_3:
  v13 = sub_21F716104();
  v8 = v14;
LABEL_6:
  v15 = a3;
  v16 = a4;
  v17 = a7;
  v18 = a1;
  sub_21F710DF8(v12, v13, v8, a7);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F70F15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v7 = *v5;
  v8 = *MEMORY[0x24BEE4EA0];
  v6[9] = *v5;
  v6[10] = v8;
  v9 = *(_QWORD *)((v8 & v7) + 0x50);
  v6[11] = v9;
  v6[12] = *(_QWORD *)(v9 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F70F1F4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  _BYTE *v11;
  _QWORD *v12;
  int *v14;
  uint64_t v15;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 32);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_21F644208(v6, v5, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v2, v3, "Received request from peer for identifier: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(_QWORD *)(v0 + 64) + qword_2554E49A8;
  v10 = *(int **)(v9 + 8);
  *(_QWORD *)(v0 + 128) = v10;
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_retain();
    sub_21F715E70();
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 16))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88));
    v14 = (int *)((char *)v10 + *v10);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v12;
    *v12 = v0;
    v12[1] = sub_21F70F4EC;
    return ((uint64_t (*)(_QWORD, _QWORD))v14)(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104));
  }
  else
  {
    sub_21F6D9A68();
    swift_allocError();
    *v11 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F70F4EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F70F550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 152);
  sub_21F70FEBC(*(void **)(v0 + 112), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), 0, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 88);
  }
  sub_21F6866A4(*(_QWORD *)(v0 + 128));
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v2, v4);
  v6(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F70F640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  sub_21F6866A4(*(_QWORD *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F70F6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21F70F6CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[4];
  v1 = v0[5];
  v0[6] = *(_QWORD *)(v1 + qword_2554E49A8 + 40);
  v3 = swift_task_alloc();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_21F70F730()
{
  uint64_t v0;

  sub_21F6D8BF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (void (*)(uint64_t))sub_21F7118F4, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_21F70F778(id a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  unsigned int v20;
  id v21;
  id v22;
  id v23;
  _BYTE *v24;
  id v25;
  uint64_t v27;
  id v28;
  _QWORD v29[8];

  v29[7] = *MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD620);
  inited = swift_initStackObject();
  v11 = inited;
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  v12 = 0x74736163696E75;
  if ((a5 & 0xFE) == 0)
    v12 = a3;
  v13 = 0xE700000000000000;
  if ((a5 & 0xFE) == 0)
    v13 = a4;
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v13;
  sub_21F68D26C(a3, a4, a5);
  v14 = sub_21F689070(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  v15 = sub_21F715E94();
  if (v27)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(void **)(v5 + qword_2554E49A8);
    sub_21F66BD5C(v15);
    swift_bridgeObjectRelease();
    v17 = (void *)sub_21F71602C();
    swift_bridgeObjectRelease();
    sub_21F70FA40(v14);
    swift_bridgeObjectRelease();
    v18 = (void *)sub_21F716308();
    swift_bridgeObjectRelease();
    v19 = (void *)sub_21F71602C();
    v28 = 0;
    v29[0] = 0;
    v20 = objc_msgSend(v16, sel_sendMessage_toDestinations_priority_options_identifier_error_, v17, v18, 300, v19, v29, &v28);

    v21 = v28;
    a1 = (id)v29[0];
    if (v20)
    {
      if (v29[0])
      {
        a1 = (id)sub_21F716104();
        v22 = v21;
      }
      else
      {
        sub_21F6D9A68();
        swift_allocError();
        *v24 = 2;
        v25 = v21;
        swift_willThrow();
      }
    }
    else
    {
      v23 = v28;
      a1 = a1;
      sub_21F715D50();

      swift_willThrow();
    }
  }
  return a1;
}

uint64_t sub_21F70FA40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E4C10);
    v2 = sub_21F7164DC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B08];
  }
  v3 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 56;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_28;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v14 = *(_QWORD *)(v3 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v14 = *(_QWORD *)(v3 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v10 = v15;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    result = sub_21F7164A0();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v8 + 8 * v19);
      }
      while (v23 == -1);
      v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v24;
    *(_OWORD *)(v12 + 16) = v25;
    *(_QWORD *)(v12 + 32) = v26;
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_21F671984();
    return v2;
  }
  v14 = *(_QWORD *)(v3 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_21F70FD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_BYTE *)(v6 + 80) = a5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F70FD54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_21F640AEC(MEMORY[0x24BEE4AF8]);
  v2 = sub_21F708900(1, v1);
  v3 = sub_21F708748(v2);
  *(_QWORD *)(v0 + 56) = v3;
  v4 = sub_21F70F778(*(id *)(v0 + 24), v3, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 80));
  v6 = v5;
  *(_QWORD *)(v0 + 64) = v5;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v7;
  *v7 = v0;
  v7[1] = sub_21F70FE58;
  v8 = *(_QWORD **)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 16);
  v7[4] = v6;
  v7[5] = v8;
  v7[2] = v9;
  v7[3] = v4;
  v10 = *MEMORY[0x24BEE4EA0];
  v7[6] = *v8;
  v7[7] = v10;
  return swift_task_switch();
}

uint64_t sub_21F70FE58()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_21F70FEBC(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;

  v13 = sub_21F640AEC(MEMORY[0x24BEE4AF8]);
  v14 = sub_21F7089AC(a5, a6, v13);
  v15 = sub_21F708748(v14);
  if (!v6)
  {
    v16 = sub_21F70F778(a1, v15, a2, a3, a4);
    v18 = v17;
    swift_bridgeObjectRelease();
    if (qword_2554DA718 != -1)
      swift_once();
    v19 = sub_21F715F3C();
    __swift_project_value_buffer(v19, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain();
    v20 = sub_21F715F24();
    v21 = sub_21F716374();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v24 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_bridgeObjectRetain();
      sub_21F644208((uint64_t)v16, v18, &v24);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v20, v21, "Sent response to peer for identifier: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v23, -1, -1);
      MEMORY[0x2207CC514](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_21F7100D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = *MEMORY[0x24BEE4EA0];
  v4[6] = *v3;
  v4[7] = v5;
  return swift_task_switch();
}

uint64_t sub_21F710108()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_21F7101C0;
  return sub_21F71686C();
}

uint64_t sub_21F7101C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F710234()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F710268(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;

  v21 = a3;
  v22 = a4;
  v6 = *MEMORY[0x24BEE4EA0] & *a2;
  v7 = *(_QWORD *)(v6 + 0x50);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v8 = sub_21F71626C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = 0;
  *((_QWORD *)v17 + 3) = 0;
  *((_QWORD *)v17 + 4) = v7;
  *((_QWORD *)v17 + 5) = *(_QWORD *)(v6 + 88);
  *((_QWORD *)v17 + 6) = a2;
  v18 = v22;
  *((_QWORD *)v17 + 7) = v21;
  *((_QWORD *)v17 + 8) = v18;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v16], v11, v8);
  v19 = a2;
  swift_bridgeObjectRetain();
  sub_21F6B4038((uint64_t)v14, (uint64_t)&unk_2554E4C00, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_21F710404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_21F710420()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + qword_2554E49A8 + 40);
  return swift_task_switch();
}

uint64_t sub_21F710448()
{
  uint64_t v0;

  sub_21F6D90CC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id ActivatedIDSMessageTransport.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ActivatedIDSMessageTransport.init()()
{
  sub_21F710FF8();
}

void sub_21F7104B8()
{
  sub_21F710FF8();
}

id ActivatedIDSMessageTransport.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ActivatedIDSMessageTransport(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_21F710520(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + qword_2554E49A8 + 8);
  v3 = *(_QWORD *)(a1 + qword_2554E49A8 + 24);
  v4 = *(void **)(a1 + qword_2554E49A8 + 48);

  sub_21F6866A4(v2);
  sub_21F6866A4(v3);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + qword_2554E4AC8;
  v6 = sub_21F715E10();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t ActivatedIDSMessageTransport.availableRoutes.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E49B0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  v2 = *(_QWORD *)(v0 + qword_2554E49A8 + 64);
  *(_QWORD *)(inited + 32) = *(_QWORD *)(v0 + qword_2554E49A8 + 56);
  *(_QWORD *)(inited + 40) = v2;
  *(_BYTE *)(inited + 48) = 0;
  swift_bridgeObjectRetain();
  v3 = sub_21F6880E8(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v3;
}

uint64_t ActivatedIDSMessageTransport.send(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_BYTE *)(v6 + 64) = a5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F7106A8()
{
  uint64_t v0;
  char v1;
  uint64_t v3;
  char v4;
  __int128 v5;
  __int128 v6;
  char *v8;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 48) + qword_2554E4AD0) & 1) != 0)
  {
    v1 = 3;
  }
  else
  {
    if (*(_BYTE *)(v0 + 64) != 2 || *(_OWORD *)(v0 + 32) != 0)
    {
      v3 = swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v3;
      *(_QWORD *)v3 = v0;
      *(_QWORD *)(v3 + 8) = sub_21F71079C;
      v4 = *(_BYTE *)(v0 + 64);
      v5 = *(_OWORD *)(v0 + 16);
      v6 = *(_OWORD *)(v0 + 32);
      *(_QWORD *)(v3 + 48) = *(_QWORD *)(v0 + 48);
      *(_BYTE *)(v3 + 80) = v4;
      *(_OWORD *)(v3 + 16) = v5;
      *(_OWORD *)(v3 + 32) = v6;
      return swift_task_switch();
    }
    v1 = 0;
  }
  sub_21F6D9A68();
  swift_allocError();
  *v8 = v1;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F71079C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F7107E4()
{
  return ActivatedIDSMessageTransport.availableRoutes.getter();
}

uint64_t sub_21F710804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;

  v12 = *v5;
  v13 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *(_QWORD *)v13 = v6;
  *(_QWORD *)(v13 + 8) = sub_21F656988;
  *(_QWORD *)(v13 + 40) = a4;
  *(_QWORD *)(v13 + 48) = v12;
  *(_BYTE *)(v13 + 64) = a5;
  *(_QWORD *)(v13 + 24) = a2;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F710894()
{
  return sub_21F710900();
}

uint64_t sub_21F7108B8()
{
  return sub_21F710900();
}

uint64_t sub_21F7108DC()
{
  return sub_21F710900();
}

uint64_t sub_21F710900()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F710948()
{
  return sub_21F716134();
}

uint64_t sub_21F71096C()
{
  return sub_21F716134();
}

uint64_t sub_21F710990()
{
  return sub_21F716134();
}

uint64_t sub_21F7109B4()
{
  return sub_21F710A20();
}

uint64_t sub_21F7109D8()
{
  return sub_21F710A20();
}

uint64_t sub_21F7109FC()
{
  return sub_21F710A20();
}

uint64_t sub_21F710A20()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

id sub_21F710A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  objc_class *v13;
  objc_super v15;

  v7 = *MEMORY[0x24BEE4EA0] & *v3;
  v8 = v3;
  _s21ProximityAppleIDSetup32ActivatedMessageSessionTransportV21destinationIdentifier33_C75EFC377189F044D610653B1F91726FLL10Foundation4UUIDVvpfi_0();
  *((_BYTE *)v8 + qword_2554E4AD0) = 0;
  v9 = (char *)v8 + qword_2554E49A8;
  v10 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v9 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v9 + 3) = v10;
  *((_QWORD *)v9 + 8) = *(_QWORD *)(a1 + 64);
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v9 = *(_OWORD *)a1;
  *((_OWORD *)v9 + 1) = v11;
  *(_QWORD *)((char *)v8 + qword_2554E4AB8) = a2;
  *(_QWORD *)((char *)v8 + qword_2554E4AC0) = a3;
  swift_retain();
  swift_retain();

  v13 = (objc_class *)type metadata accessor for ActivatedIDSMessageTransport(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v12);
  v15.receiver = v8;
  v15.super_class = v13;
  return objc_msgSendSuper2(&v15, sel_init);
}

id sub_21F710B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v8;

  v8 = objc_allocWithZone((Class)type metadata accessor for ActivatedIDSMessageTransport(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_21F710A6C(a1, a2, a3);
}

id sub_21F710BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  sub_21F715EAC();
  swift_allocObject();
  v6 = sub_21F715EA0();
  sub_21F715E88();
  swift_allocObject();
  v7 = sub_21F715E7C();
  type metadata accessor for ActivatedIDSMessageTransport(0, a2, a3, v8);
  sub_21F710CB8(a1);
  swift_retain();
  v10 = sub_21F710B54(a1, v6, v7, v9);
  swift_release();
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE4FE68]), sel_init);
  objc_msgSend(v11, sel_setWantsCrossAccountMessaging_, 1);
  objc_msgSend(*(id *)a1, sel_addDelegate_withDelegateProperties_queue_, v10, v11, *(_QWORD *)(a1 + 48));
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_21F710CB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 48);
  v5 = *(id *)a1;
  sub_21F68747C(v2);
  sub_21F68747C(v3);
  swift_retain();
  v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F710D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 48);

  sub_21F6866A4(v2);
  sub_21F6866A4(v3);
  swift_bridgeObjectRelease();

  swift_release();
  return a1;
}

uint64_t sub_21F710DB0()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_21F710DF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  result = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    result = sub_21F6AF82C(a1);
    if (result)
    {
      if (!a4)
      {
        __break(1u);
        return result;
      }
      v13 = result;
      v14 = objc_msgSend(a4, sel_incomingResponseIdentifier);
      if (v14)
      {
        v15 = v14;
        v16 = sub_21F716104();
        v18 = v17;

        v19 = sub_21F7162C0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
        v20 = (_QWORD *)swift_allocObject();
        v20[2] = 0;
        v20[3] = 0;
        v20[4] = v4;
        v20[5] = v16;
        v20[6] = v18;
        v20[7] = v13;
        v21 = v4;
        sub_21F6B4038((uint64_t)v12, (uint64_t)&unk_2554E4C30, (uint64_t)v20);
        return swift_release();
      }
      v22 = objc_msgSend(a4, sel_outgoingResponseIdentifier);
      if (v22)
      {
        v23 = v22;
        v24 = sub_21F716104();
        v26 = v25;

        if (a3)
        {
          v27 = sub_21F7162C0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 1, 1, v27);
          v28 = (_QWORD *)swift_allocObject();
          v28[2] = 0;
          v28[3] = 0;
          v28[4] = v4;
          v28[5] = v24;
          v28[6] = v26;
          v28[7] = a2;
          v28[8] = a3;
          v28[9] = v13;
          v29 = v4;
          swift_bridgeObjectRetain();
          sub_21F6B4318((uint64_t)v12, (uint64_t)&unk_2554E4C20, (uint64_t)v28);
          return swift_release();
        }
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_21F710FF8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for ActivatedIDSMessageTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivatedIDSMessageTransport);
}

void sub_21F711030()
{
  JUMPOUT(0x2207CC46CLL);
}

uint64_t sub_21F711040(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IDSMessageTransport<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F71106C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_21F711074(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 8))
    swift_release();
  if (*(_QWORD *)(a1 + 24))
    swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

_QWORD *sub_21F7110CC(_QWORD *a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v4 = *(void **)a2;
  *a1 = *(_QWORD *)a2;
  v5 = a1 + 1;
  v7 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 16);
    a1[1] = v6;
    a1[2] = v9;
    swift_retain();
  }
  else
  {
    *v5 = *v7;
  }
  v10 = *(_QWORD *)(a2 + 24);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 32);
    a1[3] = v10;
    a1[4] = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  }
  v12 = *(void **)(a2 + 48);
  a1[5] = *(_QWORD *)(a2 + 40);
  a1[6] = v12;
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  a1[7] = v13;
  a1[8] = v14;
  swift_retain();
  v15 = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F71117C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  v10 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = v12;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_15;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_14;
  }
  v11 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v11;
  swift_retain();
  swift_release();
LABEL_15:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  v13 = *(void **)(a2 + 48);
  v14 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  v15 = v13;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F7112B8(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    v7 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  v8 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v10;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_15;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  swift_release();
LABEL_15:
  swift_release();
  v11 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21F7113B4(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21F7113FC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for IDSMessageTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IDSMessageTransport);
}

uint64_t sub_21F711458()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21F715E10();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PASIDSMessageTransportError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PASIDSMessageTransportError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_21F7115C4 + 4 * byte_21F72524C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_21F7115F8 + 4 * byte_21F725247[v4]))();
}

uint64_t sub_21F7115F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F711600(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F711608);
  return result;
}

uint64_t sub_21F711614(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F71161CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_21F711620(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F711628(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASIDSMessageTransportError()
{
  return &type metadata for PASIDSMessageTransportError;
}

unint64_t sub_21F711648(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F71167C();
  a1[2] = sub_21F7116C0();
  result = sub_21F711704();
  a1[3] = result;
  return result;
}

unint64_t sub_21F71167C()
{
  unint64_t result;

  result = qword_2554E4BD0;
  if (!qword_2554E4BD0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7253FC, &type metadata for PASIDSMessageTransportError);
    atomic_store(result, (unint64_t *)&qword_2554E4BD0);
  }
  return result;
}

unint64_t sub_21F7116C0()
{
  unint64_t result;

  result = qword_2554E4BD8;
  if (!qword_2554E4BD8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7253B4, &type metadata for PASIDSMessageTransportError);
    atomic_store(result, (unint64_t *)&qword_2554E4BD8);
  }
  return result;
}

unint64_t sub_21F711704()
{
  unint64_t result;

  result = qword_2554E4BE0;
  if (!qword_2554E4BE0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F72538C, &type metadata for PASIDSMessageTransportError);
    atomic_store(result, (unint64_t *)&qword_2554E4BE0);
  }
  return result;
}

unint64_t sub_21F71174C()
{
  unint64_t result;

  result = qword_2554E4BE8;
  if (!qword_2554E4BE8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7254D0, &type metadata for PASIDSMessageTransportError);
    atomic_store(result, (unint64_t *)&qword_2554E4BE8);
  }
  return result;
}

uint64_t sub_21F711790(uint64_t a1)
{
  uint64_t v1;

  return sub_21F710268(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_21F71179C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v1 = sub_21F71626C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21F711840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_21F71626C() - 8) + 80);
  v7 = *(_OWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = v0 + ((v2 + 72) & ~v2);
  v5 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_21F651418;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 16) = v7;
  return swift_task_switch();
}

uint64_t sub_21F7118F4()
{
  return sub_21F715E70();
}

uint64_t sub_21F711940()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F711984()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v6 = v0[8];
  v5 = v0[9];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_21F651418;
  v8 = (_QWORD *)swift_task_alloc();
  v7[2] = v8;
  *v8 = v7;
  v8[1] = sub_21F651418;
  return sub_21F70F15C(v2, v3, v4, v6, v5);
}

uint64_t sub_21F711A24()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F711A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  v7 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_21F656988;
  v5 = swift_task_alloc();
  v4[2] = v5;
  *(_QWORD *)v5 = v4;
  *(_QWORD *)(v5 + 8) = sub_21F656988;
  *(_QWORD *)(v5 + 40) = v2;
  *(_OWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 16) = v3;
  return swift_task_switch();
}

uint64_t static AuthenticateCommand.Response.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v5[48];
  _BYTE v6[48];
  _BYTE v7[48];

  sub_21F658D18(a1, (uint64_t)v7, &qword_2554E0C18);
  sub_21F658D18((uint64_t)v7, (uint64_t)v5, &qword_2554E0C18);
  sub_21F658D18(a2, (uint64_t)v6, &qword_2554E0C18);
  sub_21F658D18((uint64_t)v6, (uint64_t)&v4, &qword_2554E0C18);
  sub_21F67166C();
  sub_21F6CDF5C();
  sub_21F6CDF14();
  return sub_21F716998() & 1;
}

uint64_t AuthenticateCommand.Request.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F678944(v1, a1);
}

uint64_t AuthenticateCommand.Request.account.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_21F678988(a1, v1);
}

uint64_t (*AuthenticateCommand.Request.account.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticateCommand.Request.deviceInfo.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_21F6C9564(v1, *(_QWORD *)(v0 + 184));
  return v1;
}

uint64_t AuthenticateCommand.Request.deviceInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_21F676840(v4[22], v4[23]);
  v4[22] = a1;
  v4[23] = a2;
  v4[24] = a3;
  v4[25] = a4;
  return result;
}

uint64_t (*AuthenticateCommand.Request.deviceInfo.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticateCommand.Request.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[13];
  _BYTE v17[208];
  _BYTE v18[208];
  _BYTE v19[106];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[32];
  _OWORD v30[2];
  uint64_t v31[4];
  _OWORD v32[9];
  _OWORD v33[2];

  sub_21F676AFC(a1, (uint64_t)v17);
  if (sub_21F677B88((uint64_t)v17)
    || (v4 = sub_21F677B94((uint64_t)v17),
        sub_21F676AA4(v4, (uint64_t)v18),
        sub_21F676AA4((uint64_t)v18, (uint64_t)v19),
        sub_21F677BE0((uint64_t)v19) != 2))
  {
    sub_21F676528(a1);
  }
  else
  {
    v5 = (__int128 *)sub_21F677BEC((uint64_t)v19);
    v20 = *v5;
    v6 = v5[4];
    v8 = v5[1];
    v7 = v5[2];
    v23 = v5[3];
    v24 = v6;
    v21 = v8;
    v22 = v7;
    v9 = v5[8];
    v11 = v5[5];
    v10 = v5[6];
    v27 = v5[7];
    v28 = v9;
    v25 = v11;
    v26 = v10;
    v12 = v5[12];
    v14 = v5[9];
    v13 = v5[10];
    v30[0] = v5[11];
    v30[1] = v12;
    *(_OWORD *)v29 = v14;
    *(_OWORD *)&v29[16] = v13;
    sub_21F658D18((uint64_t)v30, (uint64_t)v31, &qword_2554E4C48);
    v32[8] = v28;
    v33[0] = *(_OWORD *)v29;
    *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)&v29[9];
    v32[4] = v24;
    v32[5] = v25;
    v32[6] = v26;
    v32[7] = v27;
    v32[0] = v20;
    v32[1] = v21;
    v32[2] = v22;
    v32[3] = v23;
    sub_21F669EA8((uint64_t)v32);
    sub_21F7135C0(v31);
  }
  sub_21F71359C(v16);
  return sub_21F658D18((uint64_t)v16, a2, &qword_2554E4C40);
}

uint64_t AuthenticateCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[13];
  _BYTE v11[216];

  v3 = v1[11];
  v10[10] = v1[10];
  v10[11] = v3;
  v10[12] = v1[12];
  v4 = v1[7];
  v10[6] = v1[6];
  v10[7] = v4;
  v5 = v1[9];
  v10[8] = v1[8];
  v10[9] = v5;
  v6 = v1[3];
  v10[2] = v1[2];
  v10[3] = v6;
  v7 = v1[5];
  v10[4] = v1[4];
  v10[5] = v7;
  v8 = v1[1];
  v10[0] = *v1;
  v10[1] = v8;
  sub_21F6D08C0((uint64_t)v10);
  sub_21F676AA4((uint64_t)v10, (uint64_t)v11);
  sub_21F676AE0((uint64_t)v11);
  return sub_21F676AFC((uint64_t)v11, a1);
}

uint64_t AuthenticateCommand.Request.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[9];
  _OWORD v12[2];

  v3 = *(_OWORD *)(v1 + 144);
  v11[8] = *(_OWORD *)(v1 + 128);
  v12[0] = v3;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)(v1 + 153);
  v4 = *(_OWORD *)(v1 + 80);
  v11[4] = *(_OWORD *)(v1 + 64);
  v11[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v11[6] = *(_OWORD *)(v1 + 96);
  v11[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v11[0] = *(_OWORD *)v1;
  v11[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v11[2] = *(_OWORD *)(v1 + 32);
  v11[3] = v7;
  sub_21F669DBC((uint64_t)v11);
  IdMSAccount.hash(into:)(a1);
  sub_21F669EA8((uint64_t)v11);
  v8 = *(_QWORD *)(v1 + 184);
  if (!v8)
    return sub_21F716938();
  v9 = *(_QWORD *)(v1 + 176);
  sub_21F716938();
  sub_21F6C9564(v9, v8);
  sub_21F6C9564(v9, v8);
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return sub_21F676840(v9, v8);
}

uint64_t sub_21F711F6C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E49656369766564;
  else
    return 0x746E756F636361;
}

uint64_t sub_21F711FA8()
{
  char *v0;

  return sub_21F711F6C(*v0);
}

uint64_t sub_21F711FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F713634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F711FD4()
{
  sub_21F7135F0();
  return sub_21F7169E0();
}

uint64_t sub_21F711FFC()
{
  sub_21F7135F0();
  return sub_21F7169EC();
}

uint64_t AuthenticateCommand.Request.encode(to:)(_QWORD *a1)
{
  _OWORD *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v15;
  char v16;
  _OWORD v17[9];
  _OWORD v18[2];
  _BYTE v19[48];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E4C50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7135F0();
  sub_21F7169C8();
  v9 = v3[9];
  v17[8] = v3[8];
  v18[0] = v9;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v3 + 153);
  v10 = v3[5];
  v17[4] = v3[4];
  v17[5] = v10;
  v11 = v3[7];
  v17[6] = v3[6];
  v17[7] = v11;
  v12 = v3[1];
  v17[0] = *v3;
  v17[1] = v12;
  v13 = v3[2];
  v17[3] = v3[3];
  v17[2] = v13;
  v16 = 0;
  sub_21F666F98();
  sub_21F716758();
  if (!v2)
  {
    sub_21F658D18((uint64_t)(v3 + 11), (uint64_t)v19, &qword_2554E4C48);
    sub_21F658D18((uint64_t)v19, (uint64_t)v17, &qword_2554E4C48);
    v16 = 1;
    sub_21F667478();
    sub_21F71671C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AuthenticateCommand.Request.hashValue.getter()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];
  _OWORD v10[9];
  _OWORD v11[2];

  sub_21F716920();
  v1 = *(_OWORD *)(v0 + 144);
  v10[8] = *(_OWORD *)(v0 + 128);
  v11[0] = v1;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)(v0 + 153);
  v2 = *(_OWORD *)(v0 + 80);
  v10[4] = *(_OWORD *)(v0 + 64);
  v10[5] = v2;
  v3 = *(_OWORD *)(v0 + 112);
  v10[6] = *(_OWORD *)(v0 + 96);
  v10[7] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v10[0] = *(_OWORD *)v0;
  v10[1] = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v10[2] = *(_OWORD *)(v0 + 32);
  v10[3] = v5;
  sub_21F669DBC((uint64_t)v10);
  IdMSAccount.hash(into:)((uint64_t)v9);
  sub_21F669EA8((uint64_t)v10);
  v6 = *(_QWORD *)(v0 + 184);
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 176);
    sub_21F716938();
    sub_21F6C9564(v7, v6);
    sub_21F6C9564(v7, v6);
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_21F676840(v7, v6);
  }
  else
  {
    sub_21F716938();
  }
  return sub_21F716968();
}

__n128 AuthenticateCommand.Request.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[13];

  sub_21F713724(a1, v10);
  if (!v2)
  {
    v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_21F71238C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[13];
  _BYTE v17[208];
  _BYTE v18[208];
  _BYTE v19[106];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[32];
  _OWORD v30[2];
  uint64_t v31[4];
  _OWORD v32[9];
  _OWORD v33[2];

  sub_21F676AFC(a1, (uint64_t)v17);
  if (sub_21F677B88((uint64_t)v17)
    || (v4 = sub_21F677B94((uint64_t)v17),
        sub_21F676AA4(v4, (uint64_t)v18),
        sub_21F676AA4((uint64_t)v18, (uint64_t)v19),
        sub_21F677BE0((uint64_t)v19) != 2))
  {
    sub_21F676528(a1);
  }
  else
  {
    v5 = (__int128 *)sub_21F677BEC((uint64_t)v19);
    v20 = *v5;
    v6 = v5[4];
    v8 = v5[1];
    v7 = v5[2];
    v23 = v5[3];
    v24 = v6;
    v21 = v8;
    v22 = v7;
    v9 = v5[8];
    v11 = v5[5];
    v10 = v5[6];
    v27 = v5[7];
    v28 = v9;
    v25 = v11;
    v26 = v10;
    v12 = v5[12];
    v14 = v5[9];
    v13 = v5[10];
    v30[0] = v5[11];
    v30[1] = v12;
    *(_OWORD *)v29 = v14;
    *(_OWORD *)&v29[16] = v13;
    sub_21F658D18((uint64_t)v30, (uint64_t)v31, &qword_2554E4C48);
    v32[8] = v28;
    v33[0] = *(_OWORD *)v29;
    *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)&v29[9];
    v32[4] = v24;
    v32[5] = v25;
    v32[6] = v26;
    v32[7] = v27;
    v32[0] = v20;
    v32[1] = v21;
    v32[2] = v22;
    v32[3] = v23;
    sub_21F669EA8((uint64_t)v32);
    sub_21F7135C0(v31);
  }
  sub_21F71359C(v16);
  return sub_21F658D18((uint64_t)v16, a2, &qword_2554E4C40);
}

uint64_t sub_21F7124C0@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[13];
  _BYTE v11[216];

  v3 = v1[11];
  v10[10] = v1[10];
  v10[11] = v3;
  v10[12] = v1[12];
  v4 = v1[7];
  v10[6] = v1[6];
  v10[7] = v4;
  v5 = v1[9];
  v10[8] = v1[8];
  v10[9] = v5;
  v6 = v1[3];
  v10[2] = v1[2];
  v10[3] = v6;
  v7 = v1[5];
  v10[4] = v1[4];
  v10[5] = v7;
  v8 = v1[1];
  v10[0] = *v1;
  v10[1] = v8;
  sub_21F6D08C0((uint64_t)v10);
  sub_21F676AA4((uint64_t)v10, (uint64_t)v11);
  sub_21F676AE0((uint64_t)v11);
  return sub_21F676AFC((uint64_t)v11, a1);
}

__n128 sub_21F712544@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[13];

  sub_21F713724(a1, v10);
  if (!v2)
  {
    v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v10[12];
    v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_21F7125AC(_QWORD *a1)
{
  return AuthenticateCommand.Request.encode(to:)(a1);
}

BOOL sub_21F71260C(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v15[13];
  __int128 v16[13];

  v2 = a1[11];
  v15[10] = a1[10];
  v15[11] = v2;
  v15[12] = a1[12];
  v3 = a1[7];
  v15[6] = a1[6];
  v15[7] = v3;
  v4 = a1[9];
  v15[8] = a1[8];
  v15[9] = v4;
  v5 = a1[3];
  v15[2] = a1[2];
  v15[3] = v5;
  v6 = a1[5];
  v15[4] = a1[4];
  v15[5] = v6;
  v7 = a1[1];
  v15[0] = *a1;
  v15[1] = v7;
  v8 = a2[11];
  v16[10] = a2[10];
  v16[11] = v8;
  v16[12] = a2[12];
  v9 = a2[7];
  v16[6] = a2[6];
  v16[7] = v9;
  v10 = a2[9];
  v16[8] = a2[8];
  v16[9] = v10;
  v11 = a2[3];
  v16[2] = a2[2];
  v16[3] = v11;
  v12 = a2[5];
  v16[4] = a2[4];
  v16[5] = v12;
  v13 = a2[1];
  v16[0] = *a2;
  v16[1] = v13;
  return _s21ProximityAppleIDSetup19AuthenticateCommandV7RequestV23__derived_struct_equalsySbAE_AEtFZ_0(v15, v16);
}

uint64_t sub_21F7126B4()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[72];
  _OWORD v10[9];
  _OWORD v11[2];

  v1 = *(_OWORD *)(v0 + 144);
  v10[8] = *(_OWORD *)(v0 + 128);
  v11[0] = v1;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)(v0 + 153);
  v2 = *(_OWORD *)(v0 + 80);
  v10[4] = *(_OWORD *)(v0 + 64);
  v10[5] = v2;
  v3 = *(_OWORD *)(v0 + 112);
  v10[6] = *(_OWORD *)(v0 + 96);
  v10[7] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v10[0] = *(_OWORD *)v0;
  v10[1] = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v10[2] = *(_OWORD *)(v0 + 32);
  v10[3] = v5;
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  sub_21F716920();
  sub_21F669DBC((uint64_t)v10);
  IdMSAccount.hash(into:)((uint64_t)v9);
  sub_21F669EA8((uint64_t)v10);
  sub_21F716938();
  if (v7)
  {
    sub_21F6C9564(v6, v7);
    sub_21F6C9564(v6, v7);
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_21F676840(v6, v7);
  }
  return sub_21F716968();
}

uint64_t AuthenticateCommand.Response.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F713A98(v1, a1);
}

__n128 AuthenticateCommand.Response.result.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;
  char v10;
  char v11;

  sub_21F658D18(a1, (uint64_t)v8, &qword_2554E0C18);
  v6 = (__n128)v8[1];
  v7 = v8[0];
  v2 = v9;
  v3 = v10;
  v4 = v11;
  sub_21F6769D8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_BYTE *)(v1 + 41));
  result = v6;
  *(_OWORD *)v1 = v7;
  *(__n128 *)(v1 + 16) = v6;
  *(_QWORD *)(v1 + 32) = v2;
  *(_BYTE *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 41) = v4;
  return result;
}

uint64_t (*AuthenticateCommand.Response.result.modify())()
{
  return nullsub_1;
}

double AuthenticateCommand.Response.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v4;
  double result;
  _BYTE v6[208];
  __int128 v7[11];
  _BYTE v8[184];

  sub_21F676AFC(a1, (uint64_t)v6);
  if (sub_21F677B88((uint64_t)v6) == 1)
  {
    v4 = (__int128 *)sub_21F677B94((uint64_t)v6);
    sub_21F677BA4(v4, (uint64_t)v7);
    sub_21F677BA4(v7, (uint64_t)v8);
    if (sub_21F677BE0((uint64_t)v8) == 2)
      sub_21F677BEC((uint64_t)v8);
  }
  sub_21F676528(a1);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_WORD *)(a2 + 40) = -256;
  return result;
}

uint64_t AuthenticateCommand.Response.into()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v8[2];
  uint64_t v9;
  char v10;
  char v11;
  _BYTE v12[216];

  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_BYTE *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 41);
  v6 = *(_OWORD *)(v1 + 16);
  v8[0] = *(_OWORD *)v1;
  v8[1] = v6;
  v9 = v3;
  v10 = v4;
  v11 = v5 & 1;
  sub_21F6D08C0((uint64_t)v8);
  sub_21F677BA4(v8, (uint64_t)v12);
  sub_21F677BFC((uint64_t)v12);
  return sub_21F676AFC((uint64_t)v12, a1);
}

uint64_t AuthenticateCommand.Response.hash(into:)()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[48];

  sub_21F658D18(v0, (uint64_t)v3, &qword_2554E0C18);
  sub_21F658D18((uint64_t)v3, (uint64_t)&v2, &qword_2554E0C18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  sub_21F6CB5C8();
  sub_21F67C3D8();
  return sub_21F71698C();
}

uint64_t sub_21F712A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F713B24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21F712A44()
{
  sub_21F713AE0();
  return sub_21F7169E0();
}

uint64_t sub_21F712A6C()
{
  sub_21F713AE0();
  return sub_21F7169EC();
}

uint64_t AuthenticateCommand.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[48];
  _BYTE v10[48];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E4C60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F713AE0();
  sub_21F7169C8();
  sub_21F658D18(v2, (uint64_t)v10, &qword_2554E0C18);
  sub_21F658D18((uint64_t)v10, (uint64_t)v9, &qword_2554E0C18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  sub_21F714D34(&qword_2554E4C70, (uint64_t (*)(void))sub_21F67A86C, (uint64_t (*)(void))sub_21F67B0A0, (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
  sub_21F716758();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AuthenticateCommand.Response.hashValue.getter()
{
  uint64_t v0;
  _BYTE v2[48];
  _BYTE v3[48];

  sub_21F716920();
  sub_21F658D18(v0, (uint64_t)v3, &qword_2554E0C18);
  sub_21F658D18((uint64_t)v3, (uint64_t)v2, &qword_2554E0C18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  sub_21F6CB5C8();
  sub_21F67C3D8();
  sub_21F71698C();
  return sub_21F716968();
}

double AuthenticateCommand.Response.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_21F713BB4(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 26) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

double sub_21F712CAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v4;
  double result;
  _BYTE v6[208];
  __int128 v7[11];
  _BYTE v8[184];

  sub_21F676AFC(a1, (uint64_t)v6);
  if (sub_21F677B88((uint64_t)v6) == 1)
  {
    v4 = (__int128 *)sub_21F677B94((uint64_t)v6);
    sub_21F677BA4(v4, (uint64_t)v7);
    sub_21F677BA4(v7, (uint64_t)v8);
    if (sub_21F677BE0((uint64_t)v8) == 2)
      sub_21F677BEC((uint64_t)v8);
  }
  sub_21F676528(a1);
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 32) = 0;
  *(_WORD *)(a2 + 40) = -256;
  return result;
}

uint64_t sub_21F712D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v8[2];
  uint64_t v9;
  char v10;
  char v11;
  _BYTE v12[216];

  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_BYTE *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 41);
  v6 = *(_OWORD *)(v1 + 16);
  v8[0] = *(_OWORD *)v1;
  v8[1] = v6;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  sub_21F6D08C0((uint64_t)v8);
  sub_21F677BA4(v8, (uint64_t)v12);
  sub_21F677BFC((uint64_t)v12);
  return sub_21F676AFC((uint64_t)v12, a1);
}

double sub_21F712DB0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];

  sub_21F713BB4(a1, (uint64_t)&v6);
  if (!v2)
  {
    v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    result = *(double *)((char *)v7 + 10);
    *(_OWORD *)((char *)a2 + 26) = *(_OWORD *)((char *)v7 + 10);
  }
  return result;
}

uint64_t sub_21F712DF0(_QWORD *a1)
{
  return AuthenticateCommand.Response.encode(to:)(a1);
}

uint64_t sub_21F712E28()
{
  sub_21F67166C();
  sub_21F6CDF5C();
  sub_21F6CDF14();
  return sub_21F716998() & 1;
}

uint64_t sub_21F712EC8()
{
  sub_21F716920();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  sub_21F6CB5C8();
  sub_21F67C3D8();
  sub_21F71698C();
  return sub_21F716968();
}

uint64_t sub_21F712F6C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  sub_21F6CB5C8();
  sub_21F67C3D8();
  return sub_21F71698C();
}

uint64_t sub_21F712FEC()
{
  sub_21F716920();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  sub_21F6CB5C8();
  sub_21F67C3D8();
  sub_21F71698C();
  return sub_21F716968();
}

BOOL _s21ProximityAppleIDSetup19AuthenticateCommandV7RequestV23__derived_struct_equalsySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  _BOOL8 result;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int8x16_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  int8x16_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41[2];
  __int128 v42;
  _OWORD v43[3];
  _OWORD v44[2];
  __int128 v45;
  __int128 v46[2];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50[2];
  __int128 v51;
  _OWORD v52[3];
  _OWORD v53[2];
  _OWORD v54[5];
  __int128 v55[2];
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char v60;
  int8x16_t v61;
  int8x16_t v62;
  char v63;

  v4 = a1[9];
  v52[2] = a1[8];
  v53[0] = v4;
  *(_OWORD *)((char *)v53 + 9) = *(__int128 *)((char *)a1 + 153);
  v5 = a1[5];
  v50[1] = a1[4];
  v51 = v5;
  v6 = a1[7];
  v52[0] = a1[6];
  v52[1] = v6;
  v7 = a1[1];
  v47 = *a1;
  v48 = v7;
  v8 = a1[3];
  v49 = a1[2];
  v50[0] = v8;
  v9 = a2[9];
  v43[2] = a2[8];
  v44[0] = v9;
  *(_OWORD *)((char *)v44 + 9) = *(__int128 *)((char *)a2 + 153);
  v10 = a2[5];
  v41[1] = a2[4];
  v42 = v10;
  v11 = a2[7];
  v43[0] = a2[6];
  v43[1] = v11;
  v38 = *a2;
  v39 = a2[1];
  v40 = a2[2];
  v41[0] = a2[3];
  if (v47 == v38 || (v12 = sub_21F716800(), result = 0, (v12 & 1) != 0))
  {
    if (*((_QWORD *)&v48 + 1))
    {
      if (!*((_QWORD *)&v39 + 1))
        return 0;
      if (v48 != v39)
      {
        v14 = sub_21F716800();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (*((_QWORD *)&v39 + 1))
    {
      return 0;
    }
    if (*((_QWORD *)&v49 + 1))
    {
      if (!*((_QWORD *)&v40 + 1))
        return 0;
      if (v49 != v40)
      {
        v15 = sub_21F716800();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (*((_QWORD *)&v40 + 1))
    {
      return 0;
    }
    sub_21F65EF28(v50, (uint64_t)v55);
    sub_21F65EF28(v41, (uint64_t)v46);
    sub_21F65EF28(v55, (uint64_t)&v56);
    if (v60)
    {
      if (v60 == 1)
      {
        v16 = v56;
        v17 = v57;
        v18 = v58;
        v19 = v59;
        sub_21F65EF28(v46, (uint64_t)&v61);
        if (v63 != 1)
          return 0;
        v20 = v62;
        if (__PAIR128__(v17, v16) != *(_OWORD *)&v61)
        {
          v21 = sub_21F716800();
          result = 0;
          if ((v21 & 1) == 0)
            return result;
        }
        if (__PAIR128__(v19, v18) != *(_OWORD *)&v20)
          goto LABEL_24;
      }
      else
      {
        sub_21F65EF28(v46, (uint64_t)&v61);
        result = 0;
        if (v63 != 2)
          return result;
        v25 = vorrq_s8(v61, v62);
        if (vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)))
          return result;
      }
    }
    else
    {
      v22 = v56;
      v23 = v57;
      sub_21F65EF28(v46, (uint64_t)&v61);
      if (v63)
        return 0;
      if (__PAIR128__(v23, v22) != *(_OWORD *)&v61)
      {
LABEL_24:
        v24 = sub_21F716800();
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
    }
    if ((sub_21F6C4BDC(*((uint64_t *)&v51 + 1), *((uint64_t *)&v42 + 1)) & 1) == 0)
      return 0;
    sub_21F65EF00(v52, v54);
    sub_21F65EF00(v43, &v45);
    _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v54);
    if ((v26 & 1) == 0)
      return 0;
    v28 = *((_QWORD *)a1 + 22);
    v27 = *((_QWORD *)a1 + 23);
    v30 = *((_QWORD *)a1 + 24);
    v29 = *((_QWORD *)a1 + 25);
    v32 = *((_QWORD *)a2 + 22);
    v31 = *((_QWORD *)a2 + 23);
    v34 = *((_QWORD *)a2 + 24);
    v33 = *((_QWORD *)a2 + 25);
    if (v27)
    {
      if (v31)
      {
        if (v28 == v32 && v27 == v31 || (sub_21F716800() & 1) != 0)
        {
          if (v30 == v34 && v29 == v33)
          {
            sub_21F6C9564(v28, v27);
            sub_21F6C9564(v28, v27);
            sub_21F6C9564(v32, v31);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21F676840(v28, v27);
            return 1;
          }
          v37 = sub_21F716800();
          sub_21F6C9564(v28, v27);
          sub_21F6C9564(v28, v27);
          sub_21F6C9564(v32, v31);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_21F676840(v28, v27);
          return (v37 & 1) != 0;
        }
        sub_21F6C9564(v28, v27);
        sub_21F6C9564(v28, v27);
        sub_21F6C9564(v32, v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = v28;
        v36 = v27;
LABEL_40:
        sub_21F676840(v35, v36);
        return 0;
      }
    }
    else if (!v31)
    {
      return 1;
    }
    sub_21F6C9564(v28, v27);
    sub_21F6C9564(v32, v31);
    sub_21F676840(v28, v27);
    v35 = v32;
    v36 = v31;
    goto LABEL_40;
  }
  return result;
}

double sub_21F71359C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t *sub_21F7135C0(uint64_t *a1)
{
  sub_21F676840(*a1, a1[1]);
  return a1;
}

unint64_t sub_21F7135F0()
{
  unint64_t result;

  result = qword_2554E4C58;
  if (!qword_2554E4C58)
  {
    result = MEMORY[0x2207CC46C](&unk_21F725A70, &type metadata for AuthenticateCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4C58);
  }
  return result;
}

uint64_t sub_21F713634(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E49656369766564 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F713724@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];
  __int128 v31;
  __int128 v32;
  _OWORD v33[11];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[25];
  char v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _OWORD v63[2];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[3];
  uint64_t v74;

  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E4DF0);
  v5 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7135F0();
  sub_21F7169B0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return sub_21F676840(0, 0);
  }
  else
  {
    v8 = v5;
    v53 = 0;
    sub_21F666F54();
    v9 = v74;
    sub_21F7166C8();
    v51 = v62;
    *(_OWORD *)v52 = v63[0];
    *(_OWORD *)&v52[9] = *(_OWORD *)((char *)v63 + 9);
    v47 = v58;
    v48 = v59;
    v49 = v60;
    v50 = v61;
    v43 = v54;
    v44 = v55;
    v45 = v56;
    v46 = v57;
    v72 = v62;
    v73[0] = v63[0];
    *(_OWORD *)((char *)v73 + 9) = *(_OWORD *)((char *)v63 + 9);
    v68 = v58;
    v69 = v59;
    v70 = v60;
    v71 = v61;
    v64 = v54;
    v65 = v55;
    v66 = v56;
    v67 = v57;
    v38 = 1;
    sub_21F669DBC((uint64_t)&v43);
    sub_21F667434();
    sub_21F71668C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v10 = v39;
    v11 = v40;
    v12 = v41;
    v13 = v42;
    sub_21F6C9564(v39, v40);
    sub_21F676840(0, 0);
    v29 = v51;
    v30[0] = *(_OWORD *)v52;
    *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)&v52[9];
    v25 = v47;
    v26 = v48;
    v27 = v49;
    v28 = v50;
    v21 = v43;
    v22 = v44;
    v23 = v45;
    v24 = v46;
    *(_QWORD *)&v31 = v10;
    *((_QWORD *)&v31 + 1) = v11;
    *(_QWORD *)&v32 = v12;
    *((_QWORD *)&v32 + 1) = v13;
    sub_21F714DB0((uint64_t)&v21);
    sub_21F676840(v10, v11);
    sub_21F669EA8((uint64_t)&v43);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    v33[8] = v72;
    v33[9] = v73[0];
    v33[10] = v73[1];
    v33[4] = v68;
    v33[5] = v69;
    v33[6] = v70;
    v33[7] = v71;
    v33[0] = v64;
    v33[1] = v65;
    v33[2] = v66;
    v33[3] = v67;
    v34 = v10;
    v35 = v11;
    v36 = v12;
    v37 = v13;
    result = sub_21F714EC0((uint64_t)v33);
    v15 = v31;
    a2[10] = v30[1];
    a2[11] = v15;
    a2[12] = v32;
    v16 = v28;
    a2[6] = v27;
    a2[7] = v16;
    v17 = v30[0];
    a2[8] = v29;
    a2[9] = v17;
    v18 = v24;
    a2[2] = v23;
    a2[3] = v18;
    v19 = v26;
    a2[4] = v25;
    a2[5] = v19;
    v20 = v22;
    *a2 = v21;
    a2[1] = v20;
  }
  return result;
}

uint64_t sub_21F713A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F713AE0()
{
  unint64_t result;

  result = qword_2554E4C68;
  if (!qword_2554E4C68)
  {
    result = MEMORY[0x2207CC46C](&unk_21F725A20, &type metadata for AuthenticateCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4C68);
  }
  return result;
}

uint64_t sub_21F713B24(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_21F716800();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_21F713BA0()
{
  return 0x746C75736572;
}

uint64_t sub_21F713BB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E4DE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F713AE0();
  sub_21F7169B0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
  sub_21F714D34(&qword_2554E4DE8, (uint64_t (*)(void))sub_21F67C428, (uint64_t (*)(void))sub_21F67C348, (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
  sub_21F7166C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v17;
  v15 = v16;
  v9 = v18;
  v10 = v19;
  v11 = v20;
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v13 = v14;
  *(_OWORD *)a2 = v15;
  *(_OWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 40) = v10;
  *(_BYTE *)(a2 + 41) = v11;
  return result;
}

unint64_t sub_21F713D38()
{
  unint64_t result;

  result = qword_2554E4C78;
  if (!qword_2554E4C78)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand, &type metadata for AuthenticateCommand);
    atomic_store(result, (unint64_t *)&qword_2554E4C78);
  }
  return result;
}

unint64_t sub_21F713D7C(uint64_t a1)
{
  unint64_t result;

  result = sub_21F713DA0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F713DA0()
{
  unint64_t result;

  result = qword_2554E4CA8;
  if (!qword_2554E4CA8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Request, &type metadata for AuthenticateCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E4CA8);
  }
  return result;
}

unint64_t sub_21F713DE8()
{
  unint64_t result;

  result = qword_2554E4CB0;
  if (!qword_2554E4CB0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand, &type metadata for AuthenticateCommand);
    atomic_store(result, (unint64_t *)&qword_2554E4CB0);
  }
  return result;
}

unint64_t sub_21F713E2C(uint64_t a1)
{
  unint64_t result;

  result = sub_21F713E50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F713E50()
{
  unint64_t result;

  result = qword_2554E4CD8;
  if (!qword_2554E4CD8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Request, &type metadata for AuthenticateCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E4CD8);
  }
  return result;
}

uint64_t sub_21F713E94(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6D087C, (uint64_t (*)(void))sub_21F6C961C, (uint64_t (*)(void))sub_21F713EB0);
}

unint64_t sub_21F713EB0()
{
  unint64_t result;

  result = qword_2554E4CE0;
  if (!qword_2554E4CE0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Request, &type metadata for AuthenticateCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E4CE0);
  }
  return result;
}

unint64_t sub_21F713EF8()
{
  unint64_t result;

  result = qword_2554E4CE8;
  if (!qword_2554E4CE8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Request, &type metadata for AuthenticateCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E4CE8);
  }
  return result;
}

unint64_t sub_21F713F3C(uint64_t a1)
{
  unint64_t result;

  result = sub_21F713F60();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F713F60()
{
  unint64_t result;

  result = qword_2554E4D18;
  if (!qword_2554E4D18)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Response, &type metadata for AuthenticateCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E4D18);
  }
  return result;
}

unint64_t sub_21F713FA4(uint64_t a1)
{
  unint64_t result;

  result = sub_21F713FC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F713FC8()
{
  unint64_t result;

  result = qword_2554E4D40;
  if (!qword_2554E4D40)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Response, &type metadata for AuthenticateCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E4D40);
  }
  return result;
}

uint64_t sub_21F71400C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6D0838, (uint64_t (*)(void))sub_21F6CB6A0, (uint64_t (*)(void))sub_21F714028);
}

unint64_t sub_21F714028()
{
  unint64_t result;

  result = qword_2554E4D48;
  if (!qword_2554E4D48)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Response, &type metadata for AuthenticateCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E4D48);
  }
  return result;
}

unint64_t sub_21F714070()
{
  unint64_t result;

  result = qword_2554E4D50;
  if (!qword_2554E4D50)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Response, &type metadata for AuthenticateCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E4D50);
  }
  return result;
}

unint64_t sub_21F7140B8()
{
  unint64_t result;

  result = qword_2554E4D58;
  if (!qword_2554E4D58)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Request, &type metadata for AuthenticateCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E4D58);
  }
  return result;
}

unint64_t sub_21F714100()
{
  unint64_t result;

  result = qword_2554E4D60;
  if (!qword_2554E4D60)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for AuthenticateCommand.Response, &type metadata for AuthenticateCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E4D60);
  }
  return result;
}

unint64_t sub_21F714144(uint64_t a1)
{
  unint64_t result;

  result = sub_21F713DE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateCommand()
{
  return &type metadata for AuthenticateCommand;
}

uint64_t destroy for AuthenticateCommand.Request(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F6641CC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  swift_bridgeObjectRelease();
  sub_21F664218(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
  result = *(_QWORD *)(a1 + 184);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AuthenticateCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F667678(v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  v15 = *(_QWORD *)(a2 + 120);
  v16 = *(_QWORD *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 136);
  v18 = *(_QWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 152);
  v26 = v12;
  LOBYTE(v5) = *(_BYTE *)(a2 + 168);
  swift_bridgeObjectRetain();
  sub_21F66428C(v26, v13, v14, v15, v16, v17, v18, v25, v19, v5);
  *(_QWORD *)(a1 + 96) = v26;
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  *(_QWORD *)(a1 + 120) = v15;
  *(_QWORD *)(a1 + 128) = v16;
  *(_QWORD *)(a1 + 136) = v17;
  *(_QWORD *)(a1 + 144) = v18;
  *(_QWORD *)(a1 + 152) = v25;
  *(_QWORD *)(a1 + 160) = v19;
  *(_BYTE *)(a1 + 168) = v5;
  v20 = *(_QWORD *)(a2 + 184);
  if (v20)
  {
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v20;
    v21 = *(_QWORD *)(a2 + 192);
    v22 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = v21;
    *(_QWORD *)(a1 + 200) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v23 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v23;
  }
  return a1;
}

uint64_t assignWithCopy for AuthenticateCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  unsigned __int8 v39;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_BYTE *)(a2 + 80);
  sub_21F667678(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  v13 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v8;
  sub_21F6641CC(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a2 + 120);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 144);
  v21 = *(_QWORD *)(a2 + 152);
  v38 = *(_QWORD *)(a2 + 160);
  v39 = *(_BYTE *)(a2 + 168);
  sub_21F66428C(v14, v15, v16, v17, v18, v19, v20, v21, v38, v39);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_QWORD *)(a1 + 112);
  v25 = *(_QWORD *)(a1 + 120);
  v26 = *(_QWORD *)(a1 + 128);
  v27 = *(_QWORD *)(a1 + 136);
  v28 = *(_QWORD *)(a1 + 144);
  v29 = *(_QWORD *)(a1 + 152);
  v30 = *(_QWORD *)(a1 + 160);
  v31 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 144) = v20;
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = v38;
  *(_BYTE *)(a1 + 168) = v39;
  sub_21F664218(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  v32 = (_OWORD *)(a1 + 176);
  v33 = (_OWORD *)(a2 + 176);
  v34 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v34)
    {
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F7145B0(a1 + 176);
      v35 = *(_OWORD *)(a2 + 192);
      *v32 = *v33;
      *(_OWORD *)(a1 + 192) = v35;
    }
  }
  else if (v34)
  {
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v36 = *(_OWORD *)(a2 + 192);
    *v32 = *v33;
    *(_OWORD *)(a1 + 192) = v36;
  }
  return a1;
}

uint64_t sub_21F7145B0(uint64_t a1)
{
  destroy for IdMSAccount.AnisettePackage();
  return a1;
}

uint64_t assignWithTake for AuthenticateCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  v13 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v7;
  sub_21F6641CC(v8, v9, v10, v11, v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 160);
  v15 = *(_BYTE *)(a2 + 168);
  v16 = *(_QWORD *)(a1 + 96);
  v17 = *(_QWORD *)(a1 + 104);
  v18 = *(_QWORD *)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 120);
  v20 = *(_QWORD *)(a1 + 128);
  v21 = *(_QWORD *)(a1 + 136);
  v22 = *(_QWORD *)(a1 + 144);
  v23 = *(_QWORD *)(a1 + 152);
  v24 = *(_QWORD *)(a1 + 160);
  v25 = *(_BYTE *)(a1 + 168);
  v26 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v26;
  v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v27;
  *(_QWORD *)(a1 + 160) = v14;
  *(_BYTE *)(a1 + 168) = v15;
  sub_21F664218(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  if (!*(_QWORD *)(a1 + 184))
    goto LABEL_5;
  v28 = *(_QWORD *)(a2 + 184);
  if (!v28)
  {
    sub_21F7145B0(a1 + 176);
LABEL_5:
    v30 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v30;
    return a1;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v28;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateCommand.Request(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 208))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticateCommand.Request(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 208) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateCommand.Request()
{
  return &type metadata for AuthenticateCommand.Request;
}

uint64_t destroy for AuthenticateCommand.Response(uint64_t a1)
{
  return sub_21F6769D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40), *(_BYTE *)(a1 + 41));
}

uint64_t initializeWithCopy for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 41);
  v9 = *(_BYTE *)(a2 + 40);
  sub_21F6CB650(*(_QWORD *)a2, v4, v5, v6, v7, v9, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 41) = v8;
  return a1;
}

uint64_t assignWithCopy for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 41);
  v9 = *(_BYTE *)(a2 + 40);
  sub_21F6CB650(*(_QWORD *)a2, v4, v5, v6, v7, v9, v8);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 41);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v16 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 41) = v8;
  sub_21F6769D8(v10, v11, v12, v13, v14, v16, v15);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  char v13;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_BYTE *)(a2 + 41);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 41);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 32) = v3;
  v13 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 41) = v5;
  sub_21F6769D8(v6, v8, v7, v9, v10, v13, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateCommand.Response(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 41);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticateCommand.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateCommand.Response()
{
  return &type metadata for AuthenticateCommand.Response;
}

uint64_t storeEnumTagSinglePayload for AuthenticateCommand.Response.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F714A5C + 4 * byte_21F7255F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F714A7C + 4 * byte_21F7255F5[v4]))();
}

_BYTE *sub_21F714A5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F714A7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F714A84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F714A8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F714A94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F714A9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateCommand.Response.CodingKeys()
{
  return &type metadata for AuthenticateCommand.Response.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AuthenticateCommand.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F714B04 + 4 * byte_21F7255FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F714B38 + 4 * byte_21F7255FA[v4]))();
}

uint64_t sub_21F714B38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F714B40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F714B48);
  return result;
}

uint64_t sub_21F714B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F714B5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F714B60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F714B68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateCommand.Request.CodingKeys()
{
  return &type metadata for AuthenticateCommand.Request.CodingKeys;
}

unint64_t sub_21F714B88()
{
  unint64_t result;

  result = qword_2554E4DB0;
  if (!qword_2554E4DB0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F725940, &type metadata for AuthenticateCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4DB0);
  }
  return result;
}

unint64_t sub_21F714BD0()
{
  unint64_t result;

  result = qword_2554E4DB8;
  if (!qword_2554E4DB8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7259F8, &type metadata for AuthenticateCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4DB8);
  }
  return result;
}

unint64_t sub_21F714C18()
{
  unint64_t result;

  result = qword_2554E4DC0;
  if (!qword_2554E4DC0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F725968, &type metadata for AuthenticateCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4DC0);
  }
  return result;
}

unint64_t sub_21F714C60()
{
  unint64_t result;

  result = qword_2554E4DC8;
  if (!qword_2554E4DC8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F725990, &type metadata for AuthenticateCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4DC8);
  }
  return result;
}

unint64_t sub_21F714CA8()
{
  unint64_t result;

  result = qword_2554E4DD0;
  if (!qword_2554E4DD0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7258B0, &type metadata for AuthenticateCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4DD0);
  }
  return result;
}

unint64_t sub_21F714CF0()
{
  unint64_t result;

  result = qword_2554E4DD8;
  if (!qword_2554E4DD8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7258D8, &type metadata for AuthenticateCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554E4DD8);
  }
  return result;
}

uint64_t sub_21F714D34(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554E0C18);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x2207CC46C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F714DB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 168);
  v18 = *(_QWORD *)(a1 + 184);
  v19 = *(_QWORD *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F667678(v2, v3, v4, v5, v8);
  swift_bridgeObjectRetain();
  sub_21F66428C(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7);
  sub_21F6C9564(v19, v18);
  return a1;
}

uint64_t sub_21F714EC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 168);
  v18 = *(_QWORD *)(a1 + 184);
  v19 = *(_QWORD *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F6641CC(v2, v3, v4, v5, v8);
  swift_bridgeObjectRelease();
  sub_21F664218(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7);
  sub_21F676840(v19, v18);
  return a1;
}

uint64_t PASFlowStepExtensionProvidedPicker.__allocating_init(delegate:locatedExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v8 = swift_allocObject();
  v9 = v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result;
  *(_QWORD *)v9 = 0;
  *(_QWORD *)(v9 + 8) = 0;
  *(_BYTE *)(v9 + 16) = -1;
  v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_QWORD *)(v8 + v10) = v11;
  *(_QWORD *)(v11 + 48) = 0;
  v12 = (_QWORD *)(v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension);
  *v12 = a3;
  v12[1] = a4;
  v13 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v13;
}

uint64_t PASFlowStepExtensionProvidedPicker.locatedExtension.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension + 8);
  swift_retain();
  v3 = v2;
  return v1;
}

uint64_t PASFlowStepExtensionProvidedPicker.init(delegate:locatedExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v9 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result;
  *(_QWORD *)v9 = 0;
  *(_QWORD *)(v9 + 8) = 0;
  *(_BYTE *)(v9 + 16) = -1;
  v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_QWORD *)(v4 + v10) = v11;
  *(_QWORD *)(v11 + 48) = 0;
  v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension);
  *v12 = a3;
  v12[1] = a4;
  v13 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v13;
}

uint64_t PASFlowStepExtensionProvidedPicker.nextStep()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  _BYTE v17[56];
  _QWORD v18[6];
  char v19;
  uint64_t v20;

  v2 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result);
  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 8);
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 16);
  if (v3 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v15 = 0xD000000000000039;
    *(_QWORD *)(v15 + 8) = 0x800000021F72AB50;
    *(_QWORD *)(v15 + 16) = 0;
    *(_QWORD *)(v15 + 24) = 0;
    *(_BYTE *)(v15 + 32) = 1;
    goto LABEL_5;
  }
  if ((v3 & 1) != 0)
  {
LABEL_5:
    sub_21F715A94(v2, v1, v3);
    swift_willThrow();
    return v0;
  }
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension + 8);
  v18[0] = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result);
  v18[1] = v5;
  v18[2] = v4;
  v19 = 3;
  v6 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v7 = MEMORY[0x2207CC5BC](v6);
  v20 = *(_QWORD *)(v6 + 8);
  sub_21F674A3C((uint64_t)v18, (uint64_t)v17);
  type metadata accessor for PASFlowStepSendSelectedAccount();
  v8 = swift_allocObject();
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v8 + v9) = v10;
  v11 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v8 + v11) = v12;
  *(_BYTE *)(v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_isSignInForSelfSupported) = 0;
  sub_21F674A3C((uint64_t)v17, v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection);
  sub_21F715A94(v2, v1, v3);
  v13 = v2;
  swift_retain();
  v14 = v4;
  v0 = sub_21F6BC954(v7, v20);
  swift_unknownObjectRelease();
  sub_21F674A78((uint64_t)v17);

  sub_21F674A78((uint64_t)v18);
  sub_21F647438(&qword_2554DD090, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSendSelectedAccount, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  return v0;
}

void PASFlowStepExtensionProvidedPicker.setError(error:)(void *a1)
{
  sub_21F7153D8(a1, 0, 1);
  PASFlowStepBase.setFinished()();
}

id sub_21F7153D8(void *a1, void *a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  char **p_name;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  uint64_t v27;
  uint64_t v28;

  v6 = a3 & 1;
  v7 = v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result;
  p_name = &PASAnisetteRemoteRequestHandler.name;
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 16) != 255)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v9 = sub_21F715F3C();
    __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
    swift_retain_n();
    v10 = sub_21F715F24();
    v11 = sub_21F71635C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v28 = v27;
      *(_DWORD *)v12 = 136315138;
      sub_21F715A94(*(id *)v7, *(void **)(v7 + 8), *(_BYTE *)(v7 + 16));
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554E5098);
      v13 = sub_21F716128();
      sub_21F644208(v13, v14, &v28);
      sub_21F716428();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v10, v11, "PASFlowStepExtensionProvidedPicker setResult is clobbering existing result of %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v27, -1, -1);
      v15 = v12;
      p_name = (char **)(&PASAnisetteRemoteRequestHandler + 24);
      MEMORY[0x2207CC514](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  if (p_name[227] != (char *)-1)
    swift_once();
  v16 = sub_21F715F3C();
  __swift_project_value_buffer(v16, (uint64_t)static PASLogger.common);
  sub_21F715AAC(a1, a2, v6);
  sub_21F715AAC(a1, a2, v6);
  v17 = sub_21F715F24();
  v18 = sub_21F716344();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    *(_DWORD *)v19 = 136315138;
    v28 = v20;
    sub_21F715AAC(a1, a2, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E5090);
    v21 = sub_21F716128();
    sub_21F644208(v21, v22, &v28);
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F715AF0(a1, a2, v6);
    sub_21F715AF0(a1, a2, v6);
    _os_log_impl(&dword_21F63C000, v17, v18, "PASFlowStepExtensionProvidedPicker setResult to: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v20, -1, -1);
    MEMORY[0x2207CC514](v19, -1, -1);
  }
  else
  {
    sub_21F715AF0(a1, a2, v6);
    sub_21F715AF0(a1, a2, v6);
  }

  v23 = *(id *)v7;
  v24 = *(void **)(v7 + 8);
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  v25 = *(_BYTE *)(v7 + 16);
  *(_BYTE *)(v7 + 16) = v6;
  sub_21F715AD8(v23, v24, v25);
  return sub_21F715AAC(a1, a2, v6);
}

void PASFlowStepExtensionProvidedPicker.setPickedAccount(_:context:)(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  id v9;
  id v10;
  _QWORD v11[5];
  _QWORD v12[5];
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = a2;
  sub_21F7153D8(a1, a2, 0);
  swift_retain();
  sub_21F656B40((uint64_t)v13);
  swift_release();
  v6 = v14;
  v7 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v12[3] = type metadata accessor for PASExtensionPickedAccount();
  v12[4] = sub_21F647438(&qword_2554E07E8, (uint64_t (*)(uint64_t))type metadata accessor for PASExtensionPickedAccount, (uint64_t)&protocol conformance descriptor for PASExtensionPickedAccount);
  v12[0] = v4;
  v11[3] = type metadata accessor for PASAccountContextExtension();
  v11[4] = &protocol witness table for PASAccountContextExtension;
  v11[0] = v5;
  v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v7 + 40);
  v9 = v4;
  v10 = v5;
  v8(v12, v11, v6, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  sub_21F65DB08((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  PASFlowStepBase.setFinished()();

}

void PASFlowStepExtensionProvidedPicker.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepExtensionProvidedPicker.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F71594C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension
                     + 8));
  swift_release();
  sub_21F715AD8(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result), *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 16));
  return swift_release();
}

uint64_t PASFlowStepExtensionProvidedPicker.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension
                     + 8));
  swift_release();
  sub_21F715AD8(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result), *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 16));
  swift_release();
  return v0;
}

uint64_t PASFlowStepExtensionProvidedPicker.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_locatedExtension
                     + 8));
  swift_release();
  sub_21F715AD8(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result), *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepExtensionProvidedPicker_result + 16));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F715A80()
{
  return PASFlowStepExtensionProvidedPicker.nextStep()();
}

id sub_21F715A94(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_21F715AAC(result, a2, a3 & 1);
  return result;
}

id sub_21F715AAC(void *a1, void *a2, char a3)
{
  id v4;

  if ((a3 & 1) != 0)
    return a1;
  v4 = a1;
  return a2;
}

void sub_21F715AD8(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_21F715AF0(a1, a2, a3 & 1);
}

void sub_21F715AF0(void *a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
  {

  }
  else
  {

  }
}

uint64_t sub_21F715B1C(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554E4410, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepExtensionProvidedPicker, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepExtensionProvidedPicker()
{
  uint64_t result;

  result = qword_2554E4E30;
  if (!qword_2554E4E30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F715B94()
{
  return type metadata accessor for PASFlowStepExtensionProvidedPicker();
}

uint64_t sub_21F715B9C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F715BF4()
{
  return MEMORY[0x24BDCB030]();
}

uint64_t sub_21F715C00()
{
  return MEMORY[0x24BDCB068]();
}

uint64_t sub_21F715C0C()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_21F715C18()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_21F715C24()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_21F715C30()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_21F715C3C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_21F715C48()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_21F715C54()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_21F715C60()
{
  return MEMORY[0x24BDCB848]();
}

uint64_t sub_21F715C6C()
{
  return MEMORY[0x24BDCB878]();
}

uint64_t sub_21F715C78()
{
  return MEMORY[0x24BDCB9D0]();
}

uint64_t sub_21F715C84()
{
  return MEMORY[0x24BDCB9E0]();
}

uint64_t sub_21F715C90()
{
  return MEMORY[0x24BDCB9E8]();
}

uint64_t sub_21F715C9C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_21F715CA8()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_21F715CB4()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_21F715CC0()
{
  return MEMORY[0x24BDCBE48]();
}

uint64_t sub_21F715CCC()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_21F715CD8()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_21F715CE4()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_21F715CF0()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_21F715CFC()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_21F715D08()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_21F715D14()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_21F715D20()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_21F715D2C()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_21F715D38()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_21F715D44()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_21F715D50()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_21F715D5C()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_21F715D68()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_21F715D74()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_21F715D80()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_21F715D8C()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_21F715D98()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_21F715DA4()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_21F715DB0()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_21F715DBC()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_21F715DC8()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_21F715DD4()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_21F715DE0()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_21F715DEC()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_21F715DF8()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t _s21ProximityAppleIDSetup32ActivatedMessageSessionTransportV21destinationIdentifier33_C75EFC377189F044D610653B1F91726FLL10Foundation4UUIDVvpfi_0()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_21F715E10()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_21F715E1C()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_21F715E28()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_21F715E34()
{
  return MEMORY[0x24BDCEFD8]();
}

uint64_t sub_21F715E40()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_21F715E4C()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_21F715E58()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_21F715E64()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_21F715E70()
{
  return MEMORY[0x24BDFC500]();
}

uint64_t sub_21F715E7C()
{
  return MEMORY[0x24BDFC510]();
}

uint64_t sub_21F715E88()
{
  return MEMORY[0x24BDFC518]();
}

uint64_t sub_21F715E94()
{
  return MEMORY[0x24BDFC540]();
}

uint64_t sub_21F715EA0()
{
  return MEMORY[0x24BDFC550]();
}

uint64_t sub_21F715EAC()
{
  return MEMORY[0x24BDFC558]();
}

uint64_t sub_21F715EB8()
{
  return MEMORY[0x24BDC7858]();
}

uint64_t sub_21F715EC4()
{
  return MEMORY[0x24BDC7870]();
}

uint64_t sub_21F715ED0()
{
  return MEMORY[0x24BDC7880]();
}

uint64_t sub_21F715EDC()
{
  return MEMORY[0x24BDC7890]();
}

uint64_t sub_21F715EE8()
{
  return MEMORY[0x24BDC78A8]();
}

uint64_t sub_21F715EF4()
{
  return MEMORY[0x24BDC78C8]();
}

uint64_t sub_21F715F00()
{
  return MEMORY[0x24BDC78D0]();
}

uint64_t sub_21F715F0C()
{
  return MEMORY[0x24BDC7920]();
}

uint64_t sub_21F715F18()
{
  return MEMORY[0x24BDC7940]();
}

uint64_t sub_21F715F24()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_21F715F30()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_21F715F3C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_21F715F48()
{
  return MEMORY[0x24BDB9448]();
}

uint64_t sub_21F715F54()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t sub_21F715F60()
{
  return MEMORY[0x24BDB9B60]();
}

uint64_t sub_21F715F6C()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_21F715F78()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_21F715F84()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_21F715F90()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t sub_21F715F9C()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t sub_21F715FA8()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_21F715FB4()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_21F715FC0()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_21F715FCC()
{
  return MEMORY[0x24BDB9F30]();
}

uint64_t sub_21F715FD8()
{
  return MEMORY[0x24BDBA090]();
}

uint64_t sub_21F715FE4()
{
  return MEMORY[0x24BDBA0C0]();
}

uint64_t sub_21F715FF0()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_21F715FFC()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_21F716008()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_21F716014()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_21F716020()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_21F71602C()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_21F716038()
{
  return MEMORY[0x24BDCF828]();
}

uint64_t sub_21F716044()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_21F716050()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_21F71605C()
{
  return MEMORY[0x24BEE03E8]();
}

uint64_t sub_21F716068()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_21F716074()
{
  return MEMORY[0x24BEE0480]();
}

uint64_t sub_21F716080()
{
  return MEMORY[0x24BEE0490]();
}

uint64_t sub_21F71608C()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_21F716098()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_21F7160A4()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_21F7160B0()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_21F7160BC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_21F7160C8()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_21F7160D4()
{
  return MEMORY[0x24BDCF990]();
}

uint64_t sub_21F7160E0()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_21F7160EC()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_21F7160F8()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_21F716104()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_21F716110()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_21F71611C()
{
  return MEMORY[0x24BDCFB20]();
}

uint64_t sub_21F716128()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_21F716134()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_21F716140()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_21F71614C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_21F716158()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_21F716164()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_21F716170()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_21F71617C()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_21F716188()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_21F716194()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_21F7161A0()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_21F7161AC()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_21F7161B8()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_21F7161C4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_21F7161D0()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_21F7161DC()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_21F7161E8()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_21F7161F4()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_21F716200()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_21F71620C()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_21F716218()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_21F716224()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_21F716230()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_21F71623C()
{
  return MEMORY[0x24BEE1318]();
}

uint64_t sub_21F716248()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_21F716254()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_21F716260()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_21F71626C()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_21F716278()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_21F716284()
{
  return MEMORY[0x24BEE6860]();
}

uint64_t sub_21F716290()
{
  return MEMORY[0x24BEE6888]();
}

uint64_t sub_21F71629C()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_21F7162A8()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_21F7162B4()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_21F7162C0()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_21F7162CC()
{
  return MEMORY[0x24BEE6AC0]();
}

uint64_t sub_21F7162D8()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_21F7162E4()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_21F7162F0()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_21F7162FC()
{
  return MEMORY[0x24BEE6B28]();
}

uint64_t sub_21F716308()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_21F716314()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_21F716320()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_21F71632C()
{
  return MEMORY[0x24BEE1930]();
}

uint64_t sub_21F716338()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_21F716344()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_21F716350()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_21F71635C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_21F716368()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_21F716374()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_21F716380()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_21F71638C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_21F716398()
{
  return MEMORY[0x24BEE56F0]();
}

uint64_t sub_21F7163A4()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_21F7163B0()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_21F7163BC()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_21F7163C8()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_21F7163D4()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_21F7163E0()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_21F7163EC()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_21F7163F8()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_21F716404()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_21F716410()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_21F71641C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_21F716428()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_21F716434()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_21F716440()
{
  return MEMORY[0x24BDD0580]();
}

uint64_t sub_21F71644C()
{
  return MEMORY[0x24BDD0660]();
}

uint64_t sub_21F716458()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_21F716464()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t sub_21F716470()
{
  return MEMORY[0x24BEE2168]();
}

uint64_t sub_21F71647C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_21F716488()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_21F716494()
{
  return MEMORY[0x24BEE2398]();
}

uint64_t sub_21F7164A0()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_21F7164AC()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_21F7164B8()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_21F7164C4()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_21F7164D0()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_21F7164DC()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_21F7164E8()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_21F7164F4()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_21F716500()
{
  return MEMORY[0x24BEE2578]();
}

uint64_t sub_21F71650C()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_21F716518()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_21F716524()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_21F716530()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_21F71653C()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_21F716548()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_21F716554()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t sub_21F716560()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_21F71656C()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_21F716578()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_21F716584()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_21F716590()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_21F71659C()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_21F7165A8()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_21F7165B4()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_21F7165C0()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_21F7165CC()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_21F7165D8()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_21F7165E4()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_21F7165F0()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_21F7165FC()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_21F716608()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_21F716614()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_21F716620()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_21F71662C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_21F716638()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_21F716644()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_21F716650()
{
  return MEMORY[0x24BEE3278]();
}

uint64_t sub_21F71665C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_21F716668()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_21F716674()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_21F716680()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_21F71668C()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_21F716698()
{
  return MEMORY[0x24BEE3330]();
}

uint64_t sub_21F7166A4()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_21F7166B0()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_21F7166BC()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_21F7166C8()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_21F7166D4()
{
  return MEMORY[0x24BEE33A8]();
}

uint64_t sub_21F7166E0()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_21F7166EC()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_21F7166F8()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_21F716704()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_21F716710()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_21F71671C()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_21F716728()
{
  return MEMORY[0x24BEE3478]();
}

uint64_t sub_21F716734()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_21F716740()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_21F71674C()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_21F716758()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_21F716764()
{
  return MEMORY[0x24BEE34F8]();
}

uint64_t sub_21F716770()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_21F71677C()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_21F716788()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_21F716794()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_21F7167A0()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_21F7167AC()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_21F7167B8()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_21F7167C4()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_21F7167D0()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_21F7167DC()
{
  return MEMORY[0x24BEE39B0]();
}

uint64_t sub_21F7167E8()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_21F7167F4()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_21F716800()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_21F71680C()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_21F716818()
{
  return MEMORY[0x24BEE3A78]();
}

uint64_t sub_21F716824()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_21F716830()
{
  return MEMORY[0x24BEE3AA0]();
}

uint64_t sub_21F71683C()
{
  return MEMORY[0x24BEE3B10]();
}

uint64_t sub_21F716848()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_21F716854()
{
  return MEMORY[0x24BEE3B38]();
}

uint64_t sub_21F716860()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_21F71686C()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_21F716878()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_21F716884()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_21F716890()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_21F71689C()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_21F7168A8()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_21F7168B4()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_21F7168C0()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_21F7168CC()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_21F7168D8()
{
  return MEMORY[0x24BE29EC8]();
}

uint64_t sub_21F7168E4()
{
  return MEMORY[0x24BEE3EE8]();
}

uint64_t sub_21F7168F0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_21F7168FC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_21F716908()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_21F716914()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_21F716920()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_21F71692C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_21F716938()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_21F716944()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_21F716950()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_21F71695C()
{
  return MEMORY[0x24BEE4320]();
}

uint64_t sub_21F716968()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_21F716974()
{
  return MEMORY[0x24BEE4330]();
}

uint64_t sub_21F716980()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_21F71698C()
{
  return MEMORY[0x24BEE4418]();
}

uint64_t sub_21F716998()
{
  return MEMORY[0x24BEE4420]();
}

uint64_t sub_21F7169A4()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_21F7169B0()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_21F7169BC()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_21F7169C8()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_21F7169D4()
{
  return MEMORY[0x24BEE4870]();
}

uint64_t sub_21F7169E0()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_21F7169EC()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_21F7169F8()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x24BED8490]();
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x24BDD1218](aSelectorName);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x24BEE4C68]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x24BEE4C88]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

