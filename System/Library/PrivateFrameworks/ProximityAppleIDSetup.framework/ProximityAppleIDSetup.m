uint64_t variable initialization expression of PASService.service@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t PASService.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 56))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88), 1, 1);
  return v0;
}

uint64_t PASService.init()()
{
  uint64_t v0;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 56))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88), 1, 1);
  return v0;
}

uint64_t PASService.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  v5 = *(_QWORD *)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21F71641C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - v12;
  v14 = v3 + *(_QWORD *)(v5 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v13, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  type metadata accessor for PASServices();
  sub_21F63E87C(v6, (uint64_t)v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a2, v9, v6);
  sub_21F63E8E0(v3, (uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for PASServices()
{
  return objc_opt_self();
}

uint64_t sub_21F63E87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_2554DA6A0 != -1)
    swift_once();
  return sub_21F64038C(a1, a2);
}

uint64_t sub_21F63E8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v5 = sub_21F71641C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v15 - v10, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v4);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v11, v5);
  v13 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v13, v9, v5);
  return swift_endAccess();
}

uint64_t PASService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = sub_21F71641C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PASService.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = sub_21F71641C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_21F63EA94()
{
  uint64_t v0;
  unint64_t result;

  type metadata accessor for PASServices();
  v0 = swift_allocObject();
  result = sub_21F640EAC(MEMORY[0x24BEE4AF8], &qword_2554E3190);
  *(_QWORD *)(v0 + 16) = result;
  static PASServices.shared = v0;
  return result;
}

uint64_t *PASServices.shared.unsafeMutableAddressor()
{
  if (qword_2554DA6A0 != -1)
    swift_once();
  return &static PASServices.shared;
}

uint64_t static PASServices.shared.getter()
{
  if (qword_2554DA6A0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_21F63EB60@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAB48, &qword_2554DAB50, sub_21F64756C, &qword_2554DAB58, a1);
}

uint64_t sub_21F63EB84()
{
  return sub_21F63F200(&qword_2554DAB60, &qword_2554DAB68);
}

uint64_t sub_21F63EBA0@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAB70, &qword_2554DAB78, sub_21F64756C, &qword_2554DAB80, a1);
}

uint64_t sub_21F63EBC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(__int128 *, uint64_t)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34[4];

  v10 = __swift_instantiateConcreteTypeFromMangledName(a1);
  *((_QWORD *)&v32 + 1) = __swift_instantiateConcreteTypeFromMangledName(a2);
  *(_QWORD *)&v31 = v10;
  sub_21F6429E4((uint64_t)&v31, (uint64_t)v34);
  v11 = sub_21F716128();
  v13 = v12;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v31);
  swift_beginAccess();
  v14 = *(_QWORD *)(v5 + 16);
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v15 = sub_21F6448D8(v11, v13);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    if (qword_2554DA718 != -1)
      swift_once();
    v19 = sub_21F715F3C();
    __swift_project_value_buffer(v19, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    v20 = sub_21F715F24();
    v21 = sub_21F716368();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_QWORD *)&v31 = v23;
      *(_DWORD *)v22 = 136446210;
      swift_bridgeObjectRetain();
      v34[0] = sub_21F644208(v11, v13, (uint64_t *)&v31);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v20, v21, "PASServices getService for %{public}s - not registered", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v23, -1, -1);
      MEMORY[0x2207CC514](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(_QWORD *)&v31 = 0;
    *((_QWORD *)&v31 + 1) = 0xE000000000000000;
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v31 = 0xD00000000000001BLL;
    *((_QWORD *)&v31 + 1) = 0x800000021F726050;
    sub_21F716140();
    sub_21F716140();
    goto LABEL_18;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v34[0] = v17;
  swift_unknownObjectRetain_n();
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    return a3(&v31, a5);
  }
  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  sub_21F6476AC((uint64_t)&v31, a4);
  if (qword_2554DA718 != -1)
    swift_once();
  v24 = sub_21F715F3C();
  __swift_project_value_buffer(v24, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v25 = sub_21F715F24();
  v26 = sub_21F716368();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    *(_QWORD *)&v31 = v30;
    *(_DWORD *)v27 = 136446466;
    swift_bridgeObjectRetain();
    v34[0] = sub_21F644208(v11, v13, (uint64_t *)&v31);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2082;
    swift_getObjectType();
    v28 = sub_21F7169F8();
    v34[0] = sub_21F644208(v28, v29, (uint64_t *)&v31);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v25, v26, "PASServices getService for %{public}s - wrong type: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v30, -1, -1);
    MEMORY[0x2207CC514](v27, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  *(_QWORD *)&v31 = 0;
  *((_QWORD *)&v31 + 1) = 0xE000000000000000;
  sub_21F7164E8();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31 = 0xD00000000000001BLL;
  *((_QWORD *)&v31 + 1) = 0x800000021F726050;
  sub_21F716140();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
LABEL_18:
  result = sub_21F7165FC();
  __break(1u);
  return result;
}

uint64_t sub_21F63F178@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAB88, &qword_2554DAB90, sub_21F64756C, &qword_2554DAB98, a1);
}

uint64_t sub_21F63F19C@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAA38, &qword_2554DAA40, sub_21F64756C, &qword_2554DAA48, a1);
}

uint64_t sub_21F63F1C0@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAA88, &qword_2554DAA90, sub_21F64756C, &qword_2554DAA98, a1);
}

uint64_t sub_21F63F1E4()
{
  return sub_21F63F200(&qword_2554DA758, &qword_2554DA760);
}

uint64_t sub_21F63F200(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26[4];
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v29 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v4;
  sub_21F6429E4((uint64_t)&v27, (uint64_t)v26);
  v5 = sub_21F716128();
  v7 = v6;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v27);
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_9;
  swift_bridgeObjectRetain();
  v9 = sub_21F6448D8(v5, v7);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_endAccess();
    if (qword_2554DA718 != -1)
      swift_once();
    v14 = sub_21F715F3C();
    __swift_project_value_buffer(v14, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    v15 = sub_21F715F24();
    v16 = sub_21F716368();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v27 = v18;
      *(_DWORD *)v17 = 136446210;
      swift_bridgeObjectRetain();
      v26[0] = sub_21F644208(v5, v7, &v27);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v15, v16, "PASServices getService for %{public}s - not registered", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v18, -1, -1);
      MEMORY[0x2207CC514](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    v27 = 0xD00000000000001BLL;
    v28 = 0x800000021F726050;
    sub_21F716140();
    sub_21F716140();
    goto LABEL_21;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRelease();
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v12 = v11;
  else
    v12 = 0;
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v12;
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v19 = sub_21F715F3C();
  __swift_project_value_buffer(v19, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v20 = sub_21F715F24();
  v21 = sub_21F716368();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v22 = 136446466;
    swift_bridgeObjectRetain();
    v26[0] = sub_21F644208(v5, v7, &v27);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2082;
    swift_getObjectType();
    v23 = sub_21F7169F8();
    v26[0] = sub_21F644208(v23, v24, &v27);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v20, v21, "PASServices getService for %{public}s - wrong type: %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v25, -1, -1);
    MEMORY[0x2207CC514](v22, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_21F7164E8();
  swift_bridgeObjectRelease();
  v27 = 0xD00000000000001BLL;
  v28 = 0x800000021F726050;
  sub_21F716140();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
LABEL_21:
  result = sub_21F7165FC();
  __break(1u);
  return result;
}

uint64_t sub_21F63F780()
{
  return sub_21F63F200(&qword_2554DA7B8, &qword_2554DA7C0);
}

uint64_t sub_21F63F79C@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAAD8, &qword_2554DAAE0, sub_21F64756C, &qword_2554DAAE8, a1);
}

uint64_t sub_21F63F7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21[4];
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAC8);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAD0);
  v22 = v1;
  sub_21F6429E4((uint64_t)&v22, (uint64_t)v21);
  v2 = sub_21F716128();
  v4 = v3;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v22);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  sub_21F6448D8(v2, v4);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    if (qword_2554DA718 != -1)
      swift_once();
    v9 = sub_21F715F3C();
    __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    v10 = sub_21F715F24();
    v11 = sub_21F716368();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v22 = v13;
      *(_DWORD *)v12 = 136446210;
      swift_bridgeObjectRetain();
      v21[0] = sub_21F644208(v2, v4, &v22);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v10, v11, "PASServices getService for %{public}s - not registered", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v13, -1, -1);
      MEMORY[0x2207CC514](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    v22 = 0xD00000000000001BLL;
    v23 = 0x800000021F726050;
    sub_21F716140();
    sub_21F716140();
    goto LABEL_18;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  v6 = swift_dynamicCastObjCProtocolConditional();
  if (v6)
  {
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v7;
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v14 = sub_21F715F3C();
  __swift_project_value_buffer(v14, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v15 = sub_21F715F24();
  v16 = sub_21F716368();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v22 = v20;
    *(_DWORD *)v17 = 136446466;
    swift_bridgeObjectRetain();
    v21[0] = sub_21F644208(v2, v4, &v22);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2082;
    swift_getObjectType();
    v18 = sub_21F7169F8();
    v21[0] = sub_21F644208(v18, v19, &v22);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v15, v16, "PASServices getService for %{public}s - wrong type: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v20, -1, -1);
    MEMORY[0x2207CC514](v17, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_21F7164E8();
  swift_bridgeObjectRelease();
  v22 = 0xD00000000000001BLL;
  v23 = 0x800000021F726050;
  sub_21F716140();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
LABEL_18:
  result = sub_21F7165FC();
  __break(1u);
  return result;
}

uint64_t sub_21F63FD44()
{
  return sub_21F63F200(&qword_2554DA7A8, &qword_2554DA7B0);
}

uint64_t sub_21F63FD60@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAAB0, &qword_2554DAAB8, sub_21F64756C, &qword_2554DAAC0, a1);
}

uint64_t sub_21F63FD84()
{
  return sub_21F63FE18((uint64_t (*)(_QWORD))type metadata accessor for PASMessageSessionProvider, &qword_2554DAA50);
}

uint64_t sub_21F63FD98@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAA58, &qword_2554DAA60, sub_21F64756C, &qword_2554DAA68, a1);
}

uint64_t sub_21F63FDBC@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DA798, &qword_2554DA7A0, sub_21F64756C, &qword_2554DAA28, a1);
}

uint64_t sub_21F63FDE0@<X0>(uint64_t a1@<X8>)
{
  return sub_21F63EBC4(&qword_2554DAA70, &qword_2554DAA78, sub_21F64756C, &qword_2554DAA80, a1);
}

uint64_t sub_21F63FE04()
{
  return sub_21F63FE18((uint64_t (*)(_QWORD))type metadata accessor for PASExtensionCache, &qword_2554DAA10);
}

uint64_t sub_21F63FE18(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24[4];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v4 = a1(0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v25 = v4;
  sub_21F6429E4((uint64_t)&v25, (uint64_t)v24);
  v5 = sub_21F716128();
  v7 = v6;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v25);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  sub_21F6448D8(v5, v7);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    if (qword_2554DA718 != -1)
      swift_once();
    v12 = sub_21F715F3C();
    __swift_project_value_buffer(v12, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    v13 = sub_21F715F24();
    v14 = sub_21F716368();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v25 = v16;
      *(_DWORD *)v15 = 136446210;
      swift_bridgeObjectRetain();
      v24[0] = sub_21F644208(v5, v7, &v25);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v13, v14, "PASServices getService for %{public}s - not registered", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v16, -1, -1);
      MEMORY[0x2207CC514](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    v25 = 0xD00000000000001BLL;
    v26 = 0x800000021F726050;
    sub_21F716140();
    sub_21F716140();
    goto LABEL_18;
  }
  swift_endAccess();
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRelease();
  v9 = swift_dynamicCastClass();
  if (v9)
  {
    v10 = v9;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v10;
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v17 = sub_21F715F3C();
  __swift_project_value_buffer(v17, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v18 = sub_21F715F24();
  v19 = sub_21F716368();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v25 = v23;
    *(_DWORD *)v20 = 136446466;
    swift_bridgeObjectRetain();
    v24[0] = sub_21F644208(v5, v7, &v25);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2082;
    swift_getObjectType();
    v21 = sub_21F7169F8();
    v24[0] = sub_21F644208(v21, v22, &v25);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v18, v19, "PASServices getService for %{public}s - wrong type: %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v23, -1, -1);
    MEMORY[0x2207CC514](v20, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v25 = 0;
  v26 = 0xE000000000000000;
  sub_21F7164E8();
  swift_bridgeObjectRelease();
  v25 = 0xD00000000000001BLL;
  v26 = 0x800000021F726050;
  sub_21F716140();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
LABEL_18:
  result = sub_21F7165FC();
  __break(1u);
  return result;
}

uint64_t sub_21F64038C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[4];
  uint64_t v35;
  unint64_t v36;
  uint64_t MetatypeMetadata;

  v5 = sub_21F71641C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v32 - v7;
  MetatypeMetadata = swift_getMetatypeMetadata();
  v35 = a1;
  sub_21F6429E4((uint64_t)&v35, (uint64_t)v34);
  v9 = sub_21F716128();
  v11 = v10;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v35);
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 16);
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v13 = sub_21F6448D8(v9, v11);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    if (qword_2554DA718 != -1)
      swift_once();
    v20 = sub_21F715F3C();
    __swift_project_value_buffer(v20, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    v21 = sub_21F715F24();
    v22 = sub_21F716368();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v35 = v24;
      *(_DWORD *)v23 = 136446210;
      swift_bridgeObjectRetain();
      v34[0] = sub_21F644208(v9, v11, &v35);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v21, v22, "PASServices getService for %{public}s - not registered", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v24, -1, -1);
      MEMORY[0x2207CC514](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    v35 = 0xD00000000000001BLL;
    v36 = 0x800000021F726050;
    sub_21F716140();
    sub_21F716140();
    goto LABEL_18;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v35 = v15;
  swift_unknownObjectRetain_n();
  v16 = swift_dynamicCast();
  v17 = *(_QWORD *)(a1 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if ((v16 & 1) != 0)
  {
    v18(v8, 0, 1, a1);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v8, a1);
  }
  v18(v8, 1, 1, a1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (qword_2554DA718 != -1)
    swift_once();
  v25 = sub_21F715F3C();
  __swift_project_value_buffer(v25, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v26 = sub_21F715F24();
  v27 = sub_21F716368();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v35 = v33;
    *(_DWORD *)v28 = 136446466;
    swift_bridgeObjectRetain();
    v34[0] = sub_21F644208(v9, v11, &v35);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2082;
    swift_getObjectType();
    v29 = sub_21F7169F8();
    v34[0] = sub_21F644208(v29, v30, &v35);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v26, v27, "PASServices getService for %{public}s - wrong type: %{public}s", (uint8_t *)v28, 0x16u);
    v31 = v33;
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v31, -1, -1);
    MEMORY[0x2207CC514](v28, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v35 = 0;
  v36 = 0xE000000000000000;
  sub_21F7164E8();
  swift_bridgeObjectRelease();
  v35 = 0xD00000000000001BLL;
  v36 = 0x800000021F726050;
  sub_21F716140();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
LABEL_18:
  result = sub_21F7165FC();
  __break(1u);
  return result;
}

unint64_t variable initialization expression of PASServices.services()
{
  return sub_21F640EAC(MEMORY[0x24BEE4AF8], &qword_2554E3190);
}

unint64_t sub_21F6409B8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB28);
  v2 = sub_21F71662C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F647624(v6, (uint64_t)&v15, &qword_2554DAB30);
    v7 = v15;
    v8 = v16;
    result = sub_21F6448D8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_21F644FEC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F640AEC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC4C0);
  v2 = sub_21F71662C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F647624(v6, (uint64_t)v15, (uint64_t *)&unk_2554DAB10);
    result = sub_21F644994((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_21F644FEC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F640C2C(uint64_t a1)
{
  return sub_21F6410FC(a1, &qword_2554E30C0, &qword_2554DAB20, (uint64_t (*)(_QWORD))sub_21F6449C4);
}

unint64_t sub_21F640C48(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA30);
  v2 = (_QWORD *)sub_21F71662C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_21F6448D8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F640D60(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAA0);
  v2 = sub_21F71662C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F647624(v6, (uint64_t)&v15, &qword_2554DAAA8);
    v7 = v15;
    v8 = v16;
    result = sub_21F6448D8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_21F64756C(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F640EA0(uint64_t a1)
{
  return sub_21F640EAC(a1, &qword_2554DAAF8);
}

unint64_t sub_21F640EAC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_21F71662C();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_21F6448D8(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F640FC0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAF0);
  v2 = (_QWORD *)sub_21F71662C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_21F6448D8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_21F6410E0(uint64_t a1)
{
  return sub_21F6410FC(a1, &qword_2554DAA18, &qword_2554DAA20, (uint64_t (*)(_QWORD))sub_21F644A38);
}

unint64_t sub_21F6410FC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _BYTE v18[8];
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_21F71662C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21F647624(v11, (uint64_t)v18, a3);
    v12 = v18[0];
    result = a4(v18[0]);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v8[6] + result) = v12;
    result = (unint64_t)sub_21F644FEC(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_21F641224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id result;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _BYTE *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52[2];
  _QWORD v53[5];
  uint64_t v54[3];
  uint64_t v55;

  type metadata accessor for PASFeatureFlags();
  v0 = swift_allocObject();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA88);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA90);
  v54[0] = v1;
  PASServices.register(service:as:overwrite:)(v0, (uint64_t)v54, 0);
  swift_release();
  sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
  type metadata accessor for PASAnalyticsFactory();
  v2 = swift_allocObject();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA38);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA40);
  v54[0] = v3;
  PASServices.register(service:as:overwrite:)(v2, (uint64_t)v54, 0);
  swift_release();
  sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
  type metadata accessor for PASDeviceProvider();
  swift_allocObject();
  v4 = (void *)sub_21F692A44();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB60);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB68);
  v54[0] = v5;
  PASServices.register(service:as:overwrite:)((uint64_t)v4, (uint64_t)v54, 0);
  sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedNetworkObserver);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA58);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA60);
  v54[0] = v7;
  PASServices.register(service:as:overwrite:)((uint64_t)v6, (uint64_t)v54, 0);

  sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
  result = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (result)
  {
    v9 = result;
    v52[1] = v4;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DABA0);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DABA8);
    v54[0] = v10;
    v11 = v9;
    PASServices.register(service:as:overwrite:)((uint64_t)v11, (uint64_t)v54, 0);

    sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
    v12 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DABB0);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DABB8);
    v54[0] = v13;
    v14 = v12;
    PASServices.register(service:as:overwrite:)((uint64_t)v14, (uint64_t)v54, 0);

    sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
    type metadata accessor for PASAccountStore();
    v15 = (_QWORD *)swift_allocObject();
    v15[5] = sub_21F64779C(0, &qword_2554DABC0);
    v15[6] = &protocol witness table for ACAccountStore;
    v15[2] = v11;
    v15[10] = sub_21F64779C(0, &qword_2554DABC8);
    v15[11] = &protocol witness table for AKAccountManager;
    v15[7] = v14;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB70);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB78);
    v54[0] = v16;
    v52[0] = v11;
    v17 = v14;
    v18 = swift_retain();
    PASServices.register(service:as:overwrite:)(v18, (uint64_t)v54, 0);
    swift_release();
    sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
    v19 = objc_allocWithZone(MEMORY[0x24BE0ACC0]);
    swift_retain();
    result = objc_msgSend(v19, sel_init);
    if (result)
    {
      v20 = (uint64_t)result;
      type metadata accessor for PASAuthenticator();
      v21 = swift_allocObject();
      v22 = sub_21F647178(v20, (uint64_t)v15, v21);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAD8);
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAE0);
      v54[0] = v23;
      PASServices.register(service:as:overwrite:)(v22, (uint64_t)v54, 0);
      swift_release();
      sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
      sub_21F6422B4(v54);
      v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v54, v55);
      MEMORY[0x24BDAC7A8](v24);
      v26 = (uint64_t *)((char *)v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v27 + 16))(v26);
      v28 = *v26;
      v29 = type metadata accessor for PASHeartbeatController();
      v53[3] = v29;
      v53[4] = &off_24E454808;
      v53[0] = v28;
      type metadata accessor for PASMessageSessionProvider();
      v30 = swift_allocObject();
      v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v53, v29);
      MEMORY[0x24BDAC7A8](v31);
      v33 = (uint64_t *)((char *)v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v34 + 16))(v33);
      v35 = sub_21F646D40(*v33, v30);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v53);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v54);
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB88);
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB90);
      v54[0] = v36;
      v37 = swift_retain();
      PASServices.register(service:as:overwrite:)(v37, (uint64_t)v54, 0);
      swift_release();
      sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
      type metadata accessor for PASAnisetteDataRequester();
      v38 = (void *)swift_allocObject();
      v39 = swift_retain();
      v40 = sub_21F647034(v39, v38);
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAC8);
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAD0);
      v54[0] = v41;
      PASServices.register(service:as:overwrite:)((uint64_t)v40, (uint64_t)v54, 0);
      swift_release();
      sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0ACB0]), sel_init);
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DABD0);
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DABD8);
      v54[0] = v43;
      PASServices.register(service:as:overwrite:)((uint64_t)v42, (uint64_t)v54, 0);
      sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
      v44 = objc_allocWithZone((Class)type metadata accessor for PASAnisetteRemoteRequestHandler());
      swift_retain();
      v45 = v42;
      v46 = sub_21F646E94(v35, (uint64_t)v45, v44);
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAB0);
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAAB8);
      v54[0] = v47;
      PASServices.register(service:as:overwrite:)((uint64_t)v46, (uint64_t)v54, 0);

      sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
      type metadata accessor for PASLockProvider();
      v48 = swift_allocObject();
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA70);
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA78);
      v54[0] = v49;
      PASServices.register(service:as:overwrite:)(v48, (uint64_t)v54, 0);
      swift_release();
      sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
      type metadata accessor for PASAccountProvider();
      swift_allocObject();
      v50 = sub_21F65A764();
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB48);
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB50);
      v54[0] = v51;
      PASServices.register(service:as:overwrite:)(v50, (uint64_t)v54, 0);
      swift_release();

      swift_release();
      swift_release();

      swift_release();
      return (id)sub_21F6476AC((uint64_t)v54, &qword_2554DA750);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void PASServices.register(service:as:overwrite:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];
  uint64_t v43;
  uint64_t v44[3];
  uint64_t MetatypeMetadata;

  v4 = v3;
  ObjectType = swift_getObjectType();
  MetatypeMetadata = swift_getMetatypeMetadata();
  v44[0] = ObjectType;
  sub_21F6429E4((uint64_t)v44, (uint64_t)v42);
  v9 = sub_21F716128();
  v11 = v10;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
  if ((a3 & 1) == 0)
  {
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
    {
      swift_bridgeObjectRetain();
      sub_21F6448D8(v9, v11);
      if ((v12 & 1) != 0)
      {
        swift_endAccess();
        swift_bridgeObjectRelease();
        if (qword_2554DA718 != -1)
          swift_once();
        v13 = sub_21F715F3C();
        __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
        swift_bridgeObjectRetain();
        v14 = sub_21F715F24();
        v15 = sub_21F716350();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc();
          v17 = swift_slowAlloc();
          v44[0] = v17;
          *(_DWORD *)v16 = 136446210;
          swift_bridgeObjectRetain();
          v42[0] = sub_21F644208(v9, v11, v44);
          sub_21F716428();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_21F63C000, v14, v15, "PASServices register service won't overwrite existing registered service for %{public}s", v16, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2207CC514](v17, -1, -1);
          MEMORY[0x2207CC514](v16, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
  }
  sub_21F647624(a2, (uint64_t)v42, &qword_2554DA750);
  if (!v43)
  {
    sub_21F6476AC((uint64_t)v42, &qword_2554DA750);
    if (qword_2554DA718 != -1)
      swift_once();
    v27 = sub_21F715F3C();
    __swift_project_value_buffer(v27, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    v28 = sub_21F715F24();
    v29 = sub_21F716350();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v44[0] = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v42[0] = sub_21F644208(v9, v11, v44);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v28, v29, "PASServices register service %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v31, -1, -1);
      MEMORY[0x2207CC514](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_31;
  }
  sub_21F644FEC(v42, v44);
  sub_21F6429E4((uint64_t)v44, (uint64_t)v42);
  v18 = sub_21F716128();
  v20 = v19;
  if ((a3 & 1) != 0)
  {
LABEL_25:
    if (qword_2554DA718 != -1)
      swift_once();
    v32 = sub_21F715F3C();
    __swift_project_value_buffer(v32, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v33 = sub_21F715F24();
    v34 = sub_21F716350();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v40 = v9;
      v36 = swift_slowAlloc();
      v42[0] = v36;
      *(_DWORD *)v35 = 136446466;
      swift_bridgeObjectRetain();
      sub_21F644208(v40, v11, v42);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_21F644208(v18, v20, v42);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v33, v34, "PASServices register service %{public}s and proto %{public}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      v37 = v36;
      v9 = v40;
      MEMORY[0x2207CC514](v37, -1, -1);
      MEMORY[0x2207CC514](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_unknownObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v41 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0x8000000000000000;
    sub_21F64554C(a1, v18, v20, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_21F6F9404, (void (*)(void))sub_21F6F7A88, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6F9274);
    *(_QWORD *)(v4 + 16) = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
LABEL_31:
    swift_beginAccess();
    swift_unknownObjectRetain();
    v39 = swift_isUniquelyReferenced_nonNull_native();
    v42[0] = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0x8000000000000000;
    sub_21F64554C(a1, v9, v11, v39, (void (*)(void))sub_21F6F9404, (void (*)(void))sub_21F6F7A88, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6F9274);
    *(_QWORD *)(v4 + 16) = v42[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return;
  }
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
  {
LABEL_24:
    swift_endAccess();
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_21F6448D8(v18, v20);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_endAccess();
  swift_bridgeObjectRelease_n();
  if (qword_2554DA718 != -1)
    swift_once();
  v22 = sub_21F715F3C();
  __swift_project_value_buffer(v22, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain();
  v23 = sub_21F715F24();
  v24 = sub_21F716350();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v42[0] = v26;
    *(_DWORD *)v25 = 136446210;
    swift_bridgeObjectRetain();
    sub_21F644208(v9, v11, v42);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v23, v24, "PASServices register service won't overwrite existing registered proto for %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v26, -1, -1);
    MEMORY[0x2207CC514](v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
}

uint64_t sub_21F6422B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];
  ValueMetadata *v9;
  _UNKNOWN **v10;

  v9 = &type metadata for PASHeartbeatParameters;
  v10 = &off_24E4549D8;
  v2 = type metadata accessor for PASHeartbeatController();
  v3 = swift_allocObject();
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, (uint64_t)&type metadata for PASHeartbeatParameters);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)(v3 + 56) = &type metadata for PASHeartbeatParameters;
  *(_QWORD *)(v3 + 64) = &off_24E4549D8;
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + 72) = 0;
  *(_BYTE *)(v3 + 80) = 1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v3 + 88) = v6;
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
  a1[3] = v2;
  a1[4] = (uint64_t)&off_24E454808;
  *a1 = v3;
  return result;
}

Swift::Void __swiftcall PASServices.registerSourceServices()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  ValueMetadata *v32;
  _UNKNOWN **v33;

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716374();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASServices.registerSourceServices called again!", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

  }
  else
  {
    sub_21F641224();
    if (qword_2554DA6A0 != -1)
      swift_once();
    sub_21F63EBC4(&qword_2554DAB88, &qword_2554DAB90, sub_21F64756C, &qword_2554DAB98, (uint64_t)&v31);
    sub_21F63EBC4(&qword_2554DAB70, &qword_2554DAB78, sub_21F64756C, &qword_2554DAB80, (uint64_t)&v28);
    v5 = sub_21F63F200(&qword_2554DAB60, &qword_2554DAB68);
    v7 = v6;
    sub_21F63EBC4(&qword_2554DAB48, &qword_2554DAB50, sub_21F64756C, &qword_2554DAB58, (uint64_t)v27);
    type metadata accessor for PASSourceAppleIDExchanger();
    swift_allocObject();
    v8 = sub_21F64E9C4(&v31, &v28, v5, v7, v27);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA758);
    v32 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_2554DA760);
    *(_QWORD *)&v31 = v9;
    PASServices.register(service:as:overwrite:)(v8, (uint64_t)&v31, 0);
    sub_21F6476AC((uint64_t)&v31, &qword_2554DA750);
    sub_21F63F200(&qword_2554DAB60, &qword_2554DAB68);
    v11 = v10;
    ObjectType = swift_getObjectType();
    if (qword_2554DA6C0 != -1)
      swift_once();
    v32 = &type metadata for PASDevice;
    v33 = &protocol witness table for PASDevice;
    *(_QWORD *)&v31 = swift_allocObject();
    sub_21F645048((uint64_t)&static PASDevice.current, v31 + 16);
    if (qword_2554DA6F0 != -1)
      swift_once();
    swift_beginAccess();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_21F6472BC(v13);
    swift_bridgeObjectRelease();
    v15 = type metadata accessor for PASDeviceContext();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    v29 = v15;
    v30 = sub_21F647438(&qword_2554DA768, (uint64_t (*)(uint64_t))type metadata accessor for PASDeviceContext, (uint64_t)&protocol conformance descriptor for PASDeviceContext);
    *(_QWORD *)&v28 = v16;
    (*(void (**)(__int128 *, __int128 *, uint64_t, uint64_t))(v11 + 80))(&v31, &v28, ObjectType, v11);
    sub_21F6476AC((uint64_t)&v28, &qword_2554DA770);
    sub_21F6476AC((uint64_t)&v31, &qword_2554DA778);
    type metadata accessor for PASExtensionCache();
    v17 = (_QWORD *)swift_allocObject();
    swift_defaultActor_initialize();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA780);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = 0u;
    *(_OWORD *)(v18 + 32) = 0u;
    *(_QWORD *)(v18 + 48) = 0;
    v17[16] = v18;
    v17[17] = 0;
    v17[14] = &unk_2554DFAF8;
    v17[15] = 0;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA788);
    v32 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_2554DA790);
    *(_QWORD *)&v31 = v19;
    PASServices.register(service:as:overwrite:)((uint64_t)v17, (uint64_t)&v31, 0);
    swift_release();
    sub_21F6476AC((uint64_t)&v31, &qword_2554DA750);
    type metadata accessor for PASExtensionKitFacade();
    v20 = swift_allocObject();
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA798);
    v32 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7A0);
    *(_QWORD *)&v31 = v21;
    PASServices.register(service:as:overwrite:)(v20, (uint64_t)&v31, 0);
    swift_release();
    sub_21F6476AC((uint64_t)&v31, &qword_2554DA750);
    sub_21F63EBC4(&qword_2554DAB88, &qword_2554DAB90, sub_21F64756C, &qword_2554DAB98, (uint64_t)&v31);
    sub_21F63EBC4(&qword_2554DAB70, &qword_2554DAB78, sub_21F64756C, &qword_2554DAB80, (uint64_t)&v28);
    v22 = sub_21F63F200(&qword_2554DAB60, &qword_2554DAB68);
    v24 = v23;
    sub_21F63EBC4(&qword_2554DAB48, &qword_2554DAB50, sub_21F64756C, &qword_2554DAB58, (uint64_t)v27);
    type metadata accessor for PASDeviceInfoExchanger();
    swift_allocObject();
    sub_21F6F5284(&v31, &v28, v22, v24, v27, 0);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7A8);
    v32 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7B0);
    *(_QWORD *)&v31 = v25;
    v26 = swift_retain();
    PASServices.register(service:as:overwrite:)(v26, (uint64_t)&v31, 0);
    swift_unknownObjectRelease();
    swift_release_n();
    swift_release();
    sub_21F6476AC((uint64_t)&v31, &qword_2554DA750);
  }
}

uint64_t sub_21F6429E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

Swift::Void __swiftcall PASServices.registerTargetServices()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  ValueMetadata *v27;
  _UNKNOWN **v28;

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716374();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASServices.registerTargetServices called again!", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

  }
  else
  {
    sub_21F641224();
    if (qword_2554DA6A0 != -1)
      swift_once();
    sub_21F63EBC4(&qword_2554DAB88, &qword_2554DAB90, sub_21F64756C, &qword_2554DAB98, (uint64_t)&v26);
    v5 = sub_21F63F200(&qword_2554DAB60, &qword_2554DAB68);
    v7 = v6;
    sub_21F63EBC4(&qword_2554DAB70, &qword_2554DAB78, sub_21F64756C, &qword_2554DAB80, (uint64_t)&v23);
    type metadata accessor for PASTargetAppleIDExchanger();
    swift_allocObject();
    v8 = sub_21F651804(&v26, v5, v7, (uint64_t)sub_21F642F20, 0, &v23);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7B8);
    v27 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C0);
    *(_QWORD *)&v26 = v9;
    PASServices.register(service:as:overwrite:)((uint64_t)v8, (uint64_t)&v26, 0);
    sub_21F6476AC((uint64_t)&v26, &qword_2554DA750);
    sub_21F63EBC4(&qword_2554DAB88, &qword_2554DAB90, sub_21F64756C, &qword_2554DAB98, (uint64_t)&v26);
    sub_21F63EBC4(&qword_2554DAB70, &qword_2554DAB78, sub_21F64756C, &qword_2554DAB80, (uint64_t)&v23);
    v10 = sub_21F63F200(&qword_2554DAB60, &qword_2554DAB68);
    v12 = v11;
    sub_21F63EBC4(&qword_2554DAB48, &qword_2554DAB50, sub_21F64756C, &qword_2554DAB58, (uint64_t)v22);
    type metadata accessor for PASDeviceInfoExchanger();
    swift_allocObject();
    v13 = sub_21F6F5284(&v26, &v23, v10, v12, v22, 1);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7A8);
    v27 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7B0);
    *(_QWORD *)&v26 = v14;
    PASServices.register(service:as:overwrite:)(v13, (uint64_t)&v26, 0);
    sub_21F6476AC((uint64_t)&v26, &qword_2554DA750);
    sub_21F63F200(&qword_2554DAB60, &qword_2554DAB68);
    v16 = v15;
    ObjectType = swift_getObjectType();
    if (qword_2554DA6C0 != -1)
      swift_once();
    v27 = &type metadata for PASDevice;
    v28 = &protocol witness table for PASDevice;
    *(_QWORD *)&v26 = swift_allocObject();
    sub_21F645048((uint64_t)&static PASDevice.current, v26 + 16);
    if (qword_2554DA6F0 != -1)
      swift_once();
    swift_beginAccess();
    v18 = swift_bridgeObjectRetain();
    v19 = sub_21F6472BC(v18);
    swift_bridgeObjectRelease();
    v20 = type metadata accessor for PASDeviceContext();
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v19;
    v24 = v20;
    v25 = sub_21F647438(&qword_2554DA768, (uint64_t (*)(uint64_t))type metadata accessor for PASDeviceContext, (uint64_t)&protocol conformance descriptor for PASDeviceContext);
    *(_QWORD *)&v23 = v21;
    (*(void (**)(__int128 *, __int128 *, uint64_t, uint64_t))(v16 + 72))(&v26, &v23, ObjectType, v16);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    sub_21F6476AC((uint64_t)&v23, &qword_2554DA770);
    sub_21F6476AC((uint64_t)&v26, &qword_2554DA778);
  }
}

id sub_21F642F20()
{
  return objc_msgSend((id)objc_opt_self(), sel_currentDevice);
}

Swift::Void __swiftcall PASServices.unregisterAllServices()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  unint64_t v6;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716374();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASServices unregisterAllServices", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  v6 = sub_21F640EAC(MEMORY[0x24BEE4AF8], &qword_2554E3190);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v6;
  swift_bridgeObjectRelease();
}

uint64_t PASServices.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PASServices.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.dsid()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.altDSID()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.firstName()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.lastName()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.appleID()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.accountUsername()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.formattedUsername()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.isMe()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionPickedAccountBuilder.imageData()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceAppleIDExchanger.delegate()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceAppleIDExchanger.registered()
{
  return 0;
}

double variable initialization expression of PASTargetAppleIDExchanger._accountProvider()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of PASTargetAppleIDExchanger.delegate()
{
  return 0;
}

uint64_t variable initialization expression of PASTargetAppleIDExchanger.registered()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepSendPersonalAccount.nextFlowStep()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepRepairFamily.familyMember()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepRepairFamily.error()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepConfirmExistingPasscode.authResults()
{
  return 0;
}

uint64_t variable initialization expression of IdMSAccount.ID.username()
{
  return 0;
}

uint64_t variable initialization expression of IdMSAccount.ID.dsid()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextExtensionBuilder.requiresCDP()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextExtensionBuilder.requiresManateeRepair()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextExtensionBuilder.requiresFamilyRepair()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextExtensionBuilder.showPrivacyDisclosureOnSourceDevice()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextExtensionBuilder.showPasscodeBiometricsRequestOnTargetDevice()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextExtensionBuilder.flowStepAllSetContext()
{
  return 0;
}

uint64_t variable initialization expression of PASTimer.elapsed()
{
  return 0;
}

uint64_t variable initialization expression of PASTimer.stopTask()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepAllSetContextBuilder.title()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepAllSetContextBuilder.subtitle()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepAllSetContextBuilder.systemImage()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepAllSetContextBuilder.imageColor()
{
  return 0;
}

double variable initialization expression of PASFlowStepManateeRepair.manateeRepairController@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of PASFlowStepManateeRepair.result()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepSendAuthResults.result()
{
  return 0;
}

uint64_t variable initialization expression of HandshakeCommand.Response.selectedVersion()
{
  return 256;
}

uint64_t variable initialization expression of PASFlowStepSendSelectedAccount.isSignInForSelfSupported()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepPersonalSignIn.result()
{
  return 0;
}

uint64_t variable initialization expression of MessageSessionTransport.receiver()
{
  return 0;
}

uint64_t variable initialization expression of MessageSessionTransport.invalidationHandler()
{
  return 0;
}

uint64_t variable initialization expression of ActivatedMessageSessionTransport.invalidated()
{
  return 0;
}

double variable initialization expression of PASFlowStepLocalAuth._authenticator()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepLocalAuth.result()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepProxiedAuth.targetDeviceKey()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepProxiedAuth._anisetteDataProvider()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE700);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepProxiedAuth._sourceAppleIDExchanger()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7F0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepProxiedAuth.proxiedDevice()
{
  return 0;
}

double variable initialization expression of PASFlowStepProxiedAuth.localAccount@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of PASFlowStepProxiedAuth.authResults()
{
  return 0;
}

double variable initialization expression of PASMessageSessionProvider.messageSession@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of PASMessageSessionProvider.heartbeatController@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of PASMessageSessionProvider._messageSessionStatus()
{
  return 0;
}

double variable initialization expression of PASDeviceProvider._targetDevice@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of PASDeviceProvider._targetDeviceContext@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of PASDeviceProvider._sourceDevice@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of PASDeviceProvider._sourceDeviceContext@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void variable initialization expression of PASDevice.deviceClass(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for PASDeviceClass;
  *(_QWORD *)(a1 + 32) = &protocol witness table for PASDeviceClass;
  *(_BYTE *)a1 = 3;
}

uint64_t variable initialization expression of PASFlowStepTargetError._targetAppleIDExchanger()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA800);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

double variable initialization expression of PASFlowStepSourceAuthentication.account@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of PASFlowStepSourceAuthentication.authControllerResult@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 1;
  return result;
}

uint64_t variable initialization expression of PASSourceFlowController.presenter()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceFlowController.flowEnded()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceFlowController.currentStep()
{
  return 0;
}

double variable initialization expression of PASSourceFlowController._anisetteDataProvider()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF590);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of PASSourceFlowController._deviceInfoExchanger()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA810);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t variable initialization expression of PASSourceFlowController.$__lazy_storage_$_analytics()
{
  return 0;
}

uint64_t variable initialization expression of PASTargetFlowController.presenter()
{
  return 0;
}

uint64_t variable initialization expression of PASTargetFlowController.shouldSignInForSelf()
{
  return 0;
}

uint64_t variable initialization expression of PASTargetFlowController.flowEnded()
{
  return 0;
}

uint64_t variable initialization expression of PASTargetFlowController.currentStep()
{
  return 0;
}

uint64_t variable initialization expression of PASTargetFlowController._targetAppleIDExchanger()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA820);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t variable initialization expression of PASTargetFlowController.$__lazy_storage_$_analytics()
{
  return 0;
}

double variable initialization expression of PASTargetFlowController._featureFlagsProvider()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA780);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of PASAnalytics.eventNamePrefix()
{
  return 0x6C7070612E6D6F63;
}

unint64_t variable initialization expression of PASAnalytics.eventNameComponent()
{
  return 0xD000000000000015;
}

uint64_t variable initialization expression of PASFlowStepBase._finished()
{
  return 0;
}

unint64_t _s21ProximityAppleIDSetup23PASSourceFlowControllerC12cancellables33_BE2380E35A2D860D8027BD3840118B89LLShy7Combine14AnyCancellableCGvpfi_0()
{
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_21F716608())
    return sub_21F687E74(MEMORY[0x24BEE4AF8]);
  else
    return MEMORY[0x24BEE4B08];
}

uint64_t variable initialization expression of PASFlowStepBase.timer()
{
  return 0;
}

double variable initialization expression of PASFlowStepBase._baseStepAnalyticsProvider()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE710);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepBase.$__lazy_storage_$_baseStepAnalytics()
{
  return 0;
}

uint64_t variable initialization expression of PASTargetFlowStepBase.delegate()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceFlowStepBase.delegate()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceFlowStepBase._presentSheet()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceFlowStepBase._presentResetAlert()
{
  return 0;
}

uint64_t variable initialization expression of PASSourceFlowStepBase._presentCancelAlert()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionManifestBuilder.isAccountPickerAvailable()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionManifestBuilder.wantsFullScreenPresentation()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepPasscodeBiometricsRequest.result()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextFamilyMember.flowStepAllSetContext()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepFamilyPicker._selectedMember()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepFamilyPicker._canAddMembers()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepFamilyPicker._familyMembers()
{
  return MEMORY[0x24BEE4AF8];
}

void *variable initialization expression of PASFlowStepFamilyPicker.supportedAuthModes()
{
  return &unk_24E451370;
}

uint64_t variable initialization expression of PASFlowStepFamilyPicker.error()
{
  return 0;
}

double variable initialization expression of PASFlowStepFamilyPicker._lockProvider()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA828);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

double variable initialization expression of PASFlowStepFamilyPicker.$__lazy_storage_$_fetchLock@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of PASFlowStepFamilyPicker.$__lazy_storage_$_analytics()
{
  return 0;
}

uint64_t variable initialization expression of PASAccountContextCreateAccount.flowStepAllSetContext()
{
  return 0;
}

uint64_t variable initialization expression of PASAnisetteRemoteRequestHandler.registered()
{
  return 0;
}

double variable initialization expression of PASFlowStepAllSet._accountStore()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepAllSet._extensionCache()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA830);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepAllSet.notifyExtensionsAboutFlowCompletionTask()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepConnectPeer._deviceProvider()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepConnectPeer.result()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepSignInResult._messageSessionProvider()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_2554DA840);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepSignInResult._nextStep()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionProvidedViewDetailsBuilder.proxCardSubtitle()
{
  return 0;
}

uint64_t variable initialization expression of PASExtensionProvidedViewDetailsBuilder.biometricsNotEnrolledErrorSubtitle()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepProxiedTerms.$__lazy_storage_$_analytics()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepProxiedTerms.result()
{
  return 0;
}

double variable initialization expression of PASFlowStepProxiedTerms.termsHandler@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of PASFlowStepAIDASignIn._messageSessionProvider()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of PASFlowStepAIDASignIn.result()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepSelectPicker.locatedExtension()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepCheckInternet._isNetworkReachable()
{
  return 0;
}

double variable initialization expression of PASFlowStepCheckInternet.noInternetResult@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 40) = -1;
  return result;
}

double variable initialization expression of PASFlowStepCheckInternet._reachabilityProvider()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA838);
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  return result;
}

uint64_t variable initialization expression of IDSMessageTransport.receiver()
{
  return 0;
}

uint64_t variable initialization expression of IDSMessageTransport.invalidationHandler()
{
  return 0;
}

uint64_t variable initialization expression of ActivatedIDSMessageTransport.invalidated()
{
  return 0;
}

uint64_t variable initialization expression of AuthenticateCommand.Request.deviceInfo()
{
  return 0;
}

uint64_t variable initialization expression of PASFlowStepExtensionProvidedPicker.result()
{
  return 0;
}

uint64_t sub_21F6438DC(uint64_t a1, uint64_t a2)
{
  return sub_21F643FC0(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_21F6438F0(uint64_t a1, uint64_t a2)
{
  return sub_21F643FC0(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_21F64390C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21F716104();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21F643934(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_21F7160EC();
  *a2 = 0;
  return result;
}

uint64_t sub_21F6439A8(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_21F7160F8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_21F643A24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_21F716104();
  v2 = sub_21F7160E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_21F643A64(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_21F643A78(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21F643A8C()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

uint64_t sub_21F643AD0()
{
  return sub_21F71692C();
}

uint64_t sub_21F643AF8()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

id sub_21F643B38()
{
  id *v0;

  return *v0;
}

uint64_t sub_21F643B40@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_21F643B4C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_21F643B5C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_DWORD *sub_21F643B68@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_21F643B78(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_21F643B84()
{
  return sub_21F716104();
}

uint64_t sub_21F643B94()
{
  sub_21F647438(&qword_2554DAC80, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C);
  return sub_21F715D38();
}

uint64_t sub_21F643BD4()
{
  sub_21F647438(&qword_2554DAC80, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C);
  return sub_21F715D08();
}

uint64_t sub_21F643C14(void *a1)
{
  id v2;

  sub_21F647438(&qword_2554DAC80, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C);
  v2 = a1;
  return sub_21F715CFC();
}

uint64_t sub_21F643C78()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_21F716404();

  return v2;
}

uint64_t sub_21F643CAC()
{
  sub_21F647438(&qword_2554DAC80, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C);
  return sub_21F715D2C();
}

uint64_t sub_21F643CFC()
{
  sub_21F716920();
  sub_21F7160B0();
  return sub_21F716968();
}

uint64_t sub_21F643D58()
{
  sub_21F647438(&qword_2554DAA00, (uint64_t (*)(uint64_t))type metadata accessor for AIDAServiceType, (uint64_t)&unk_21F7177BC);
  sub_21F647438(&qword_2554DAA08, (uint64_t (*)(uint64_t))type metadata accessor for AIDAServiceType, (uint64_t)&unk_21F717764);
  return sub_21F716644();
}

uint64_t sub_21F643DDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F7160E0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21F643E20()
{
  sub_21F647438(&qword_2554DAC88, (uint64_t (*)(uint64_t))type metadata accessor for AKAppleIDAuthenticationAppProvidedContext, (uint64_t)&unk_21F717A88);
  sub_21F647438(&qword_2554DAC90, (uint64_t (*)(uint64_t))type metadata accessor for AKAppleIDAuthenticationAppProvidedContext, (uint64_t)&unk_21F717A30);
  return sub_21F716644();
}

uint64_t sub_21F643EA4()
{
  sub_21F647438(&qword_2554DAC48, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717BF8);
  return sub_21F7168C0();
}

uint64_t sub_21F643EE4()
{
  sub_21F647438(&qword_2554DAC48, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717BF8);
  return sub_21F7168B4();
}

uint64_t sub_21F643F28()
{
  sub_21F647438(&qword_2554DAC80, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C);
  return sub_21F715CF0();
}

uint64_t sub_21F643F68()
{
  sub_21F647438(&qword_2554DAC80, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C);
  return sub_21F715D14();
}

uint64_t sub_21F643FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_21F716104();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21F643FFC()
{
  sub_21F716104();
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F64403C()
{
  uint64_t v0;

  sub_21F716104();
  sub_21F716920();
  sub_21F716134();
  v0 = sub_21F716968();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21F6440AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_21F716104();
  v2 = v1;
  if (v0 == sub_21F716104() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_21F644134(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_21F644144(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_21F644178(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21F644198(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_21F644208(v6, v7, a3);
  v8 = *a1 + 8;
  sub_21F716428();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_21F644208(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_21F6442D8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_21F6429E4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_21F6429E4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_21F6442D8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21F716434();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_21F644490(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_21F716548();
  if (!v8)
  {
    sub_21F7165F0();
    __break(1u);
LABEL_17:
    result = sub_21F716638();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_21F644490(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_21F644524(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21F6446FC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21F6446FC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21F644524(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_21F644698(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_21F7164F4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_21F7165F0();
      __break(1u);
LABEL_10:
      v2 = sub_21F71614C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_21F716638();
    __break(1u);
LABEL_14:
    result = sub_21F7165F0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_21F644698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DAC00);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21F6446FC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DAC00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21F716638();
  __break(1u);
  return result;
}

_BYTE **sub_21F644848(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

unint64_t sub_21F644858(uint64_t a1)
{
  uint64_t v2;

  sub_21F716104();
  sub_21F716920();
  sub_21F716134();
  v2 = sub_21F716968();
  swift_bridgeObjectRelease();
  return sub_21F644AB4(a1, v2);
}

unint64_t sub_21F6448D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_21F716920();
  sub_21F716134();
  v4 = sub_21F716968();
  return sub_21F644C28(a1, a2, v4);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2207CC454]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_21F644994(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21F7164A0();
  return sub_21F644D08(a1, v2);
}

unint64_t sub_21F6449C4(char a1)
{
  uint64_t v2;

  sub_21F716920();
  sub_21F64B194(a1);
  sub_21F716134();
  swift_bridgeObjectRelease();
  v2 = sub_21F716968();
  return sub_21F644DCC(a1, v2);
}

unint64_t sub_21F644A38(char a1)
{
  uint64_t v2;

  sub_21F716920();
  sub_21F716134();
  swift_bridgeObjectRelease();
  v2 = sub_21F716968();
  return sub_21F644EDC(a1, v2);
}

unint64_t sub_21F644AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_21F716104();
    v8 = v7;
    if (v6 == sub_21F716104() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_21F716800();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_21F716104();
          v15 = v14;
          if (v13 == sub_21F716104() && v15 == v16)
            break;
          v18 = sub_21F716800();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_21F644C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_21F716800() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_21F716800() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_21F644D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_21F6474FC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2207CBA28](v9, a1);
      sub_21F647538((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_21F644DCC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = 8 * a1;
    v7 = *(_QWORD *)&aAccountdaccoun[v6];
    v8 = *(_QWORD *)&aRequestitimest[v6 + 24];
    while (*(_QWORD *)&aAccountdaccoun[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4)] != v7
         || *(_QWORD *)&aRequestitimest[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4) + 24] != v8)
    {
      v10 = sub_21F716800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_21F644EDC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = 8 * a1;
    v7 = *(_QWORD *)&aSimdata_1[v6];
    v8 = *(_QWORD *)&aDoprovisurlreq[v6 + 16];
    while (*(_QWORD *)&aSimdata_1[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4)] != v7
         || *(_QWORD *)&aDoprovisurlreq[8 * *(char *)(*(_QWORD *)(v2 + 48) + v4) + 16] != v8)
    {
      v10 = sub_21F716800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

_OWORD *sub_21F644FEC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_21F644FFC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_21F645048(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PASDevice(a2, a1);
  return a2;
}

_OWORD *sub_21F645084(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21F6448D8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
        return sub_21F644FEC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21F6F9410();
      goto LABEL_7;
    }
    sub_21F6F7A94(v15, a4 & 1);
    v21 = sub_21F6448D8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21F6F9278(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_21F716890();
  __break(1u);
  return result;
}

_OWORD *sub_21F6451B4(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21F644994(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
        return sub_21F644FEC(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_21F6F95F4();
      goto LABEL_7;
    }
    sub_21F6F7D90(v13, a3 & 1);
    v19 = sub_21F644994(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21F6474FC(a2, (uint64_t)v21);
      return sub_21F6F92E0(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_21F716890();
  __break(1u);
  return result;
}

_OWORD *sub_21F6452EC(_OWORD *a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21F6449C4(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
        return sub_21F644FEC(a1, v17);
      }
      return sub_21F6F9358(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_21F6F97D8();
      goto LABEL_7;
    }
    sub_21F6F80A4(v13, a3 & 1);
    v19 = sub_21F6449C4(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_21F6F9358(v10, a2, a1, v16);
    }
  }
  result = (_OWORD *)sub_21F716890();
  __break(1u);
  return result;
}

void sub_21F645404(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21F6448D8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_21F6F9994();
      goto LABEL_7;
    }
    sub_21F6F83B8(v15, a4 & 1);
    v20 = sub_21F6448D8(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21F6F93BC(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_21F716890();
  __break(1u);
}

uint64_t sub_21F645530(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_21F64554C(a1, a2, a3, a4, (void (*)(void))sub_21F6F9D2C, (void (*)(void))sub_21F6F89E8, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F6F9274);
}

uint64_t sub_21F64554C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v10 = v7;
  v15 = *v7;
  v17 = sub_21F6448D8(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        result = swift_unknownObjectRelease();
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v26 = sub_21F6448D8(a2, a3);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t sub_21F6456A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_21F716920();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  v8 = sub_21F716968();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_21F716800() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_21F716800() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_21F646080(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_21F64585C(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  sub_21F716104();
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  v7 = sub_21F716968();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_21F646228((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = sub_21F716104();
  v12 = v11;
  if (v10 == sub_21F716104() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_21F716800();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = sub_21F716104();
        v19 = v18;
        if (v17 == sub_21F716104() && v19 == v20)
          goto LABEL_16;
        v22 = sub_21F716800();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_21F645A84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB40);
  v3 = sub_21F7164D0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_21F716920();
      swift_bridgeObjectRetain();
      sub_21F716134();
      swift_bridgeObjectRelease();
      result = sub_21F716968();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21F645D70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DAB00);
  v3 = sub_21F7164D0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28)
          goto LABEL_33;
        v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v28)
            goto LABEL_33;
          v15 = v29[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v28)
              goto LABEL_33;
            v15 = v29[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v28)
                    goto LABEL_33;
                  v15 = v29[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      sub_21F716104();
      sub_21F716920();
      sub_21F716134();
      v18 = sub_21F716968();
      result = swift_bridgeObjectRelease();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_21F646080(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_21F645A84();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_21F646454();
      goto LABEL_22;
    }
    sub_21F6467AC();
  }
  v11 = *v4;
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  result = sub_21F716968();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_21F716800(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_21F716884();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_21F716800();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_21F646228(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_21F645D70();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_21F646604();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_21F646A64();
  }
  v9 = *v3;
  sub_21F716104();
  sub_21F716920();
  sub_21F716134();
  v10 = sub_21F716968();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_21F716104();
  v14 = v13;
  if (v12 == sub_21F716104() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_21F716800();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_21F716104();
      v21 = v20;
      if (v19 == sub_21F716104() && v21 == v22)
        goto LABEL_25;
      v24 = sub_21F716800();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for AIDAServiceType(0);
  result = sub_21F716884();
  __break(1u);
  return result;
}

void *sub_21F646454()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB40);
  v2 = *v0;
  v3 = sub_21F7164C4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_21F646604()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DAB00);
  v2 = *v0;
  v3 = sub_21F7164C4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_21F6467AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB40);
  v3 = sub_21F7164D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_21F716920();
    swift_bridgeObjectRetain_n();
    sub_21F716134();
    swift_bridgeObjectRelease();
    result = sub_21F716968();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F646A64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DAB00);
  v3 = sub_21F7164D0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_21F716104();
    sub_21F716920();
    v18 = v17;
    sub_21F716134();
    v19 = sub_21F716968();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_21F646D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v12;
  _BYTE v15[40];
  _QWORD v16[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v16[3] = type metadata accessor for PASHeartbeatController();
  v16[4] = &off_24E454808;
  v16[0] = a1;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  v8 = a2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASMessageSessionProvider__messageSessionStatus;
  v15[0] = 0;
  sub_21F715F78();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(v8, v7, v4);
  sub_21F647710((uint64_t)v16, (uint64_t)v15);
  swift_beginAccess();
  sub_21F647754((uint64_t)v15, a2 + 56);
  v9 = *(_QWORD *)(a2 + 80);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 88);
    __swift_mutable_project_boxed_opaque_existential_1(a2 + 56, *(_QWORD *)(a2 + 80));
    v11 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 16);
    v12 = swift_retain();
    v11(v12, &off_24E455718, v9, v10);
  }
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  return a2;
}

id sub_21F646E94(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  objc_class *ObjectType;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  objc_super v15;
  _QWORD v16[5];
  _QWORD v17[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v17[3] = type metadata accessor for PASMessageSessionProvider();
  v17[4] = &protocol witness table for PASMessageSessionProvider;
  v17[0] = a1;
  v16[3] = sub_21F64779C(0, (unint64_t *)&unk_2554DABE0);
  v16[4] = &protocol witness table for AKAnisetteProvisioningController;
  v16[0] = a2;
  a3[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_registered] = 0;
  v7 = qword_2554DA718;
  v8 = a3;
  if (v7 != -1)
    swift_once();
  v9 = sub_21F715F3C();
  __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
  v10 = sub_21F715F24();
  v11 = sub_21F716350();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_21F63C000, v10, v11, "PASAnisetteRemoteRequestHandler init", v12, 2u);
    MEMORY[0x2207CC514](v12, -1, -1);
  }

  sub_21F647710((uint64_t)v17, (uint64_t)&v8[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_messageSessionProvider]);
  sub_21F647710((uint64_t)v16, (uint64_t)&v8[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASAnisetteRemoteRequestHandler_anisetteController]);

  v15.receiver = v8;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_init);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  return v13;
}

id sub_21F647034(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  objc_super v11;
  _QWORD v12[5];

  v12[3] = type metadata accessor for PASMessageSessionProvider();
  v12[4] = &protocol witness table for PASMessageSessionProvider;
  v12[0] = a1;
  swift_defaultActor_initialize();
  v4 = qword_2554DA718;
  swift_retain();
  if (v4 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  v6 = sub_21F715F24();
  v7 = sub_21F716350();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_21F63C000, v6, v7, "PASAnisetteDataRequester init", v8, 2u);
    MEMORY[0x2207CC514](v8, -1, -1);
  }

  sub_21F647710((uint64_t)v12, (uint64_t)a2 + 112);
  swift_release();
  v11.receiver = a2;
  v11.super_class = (Class)type metadata accessor for PASAnisetteDataRequester();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v9;
}

uint64_t sub_21F647178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  __int128 v11;
  uint64_t v12;
  _UNKNOWN **v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;

  v15 = sub_21F64779C(0, &qword_2554DABF8);
  v16 = &protocol witness table for AKAppleIDAuthenticationController;
  *(_QWORD *)&v14 = a1;
  v12 = type metadata accessor for PASAccountStore();
  v13 = &protocol witness table for PASAccountStore;
  *(_QWORD *)&v11 = a2;
  swift_defaultActor_initialize();
  if (qword_2554DA718 != -1)
    swift_once();
  v6 = sub_21F715F3C();
  __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
  v7 = sub_21F715F24();
  v8 = sub_21F716350();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_21F63C000, v7, v8, "PASAuthenticator init", v9, 2u);
    MEMORY[0x2207CC514](v9, -1, -1);
  }

  sub_21F64756C(&v14, a3 + 112);
  sub_21F64756C(&v11, a3 + 152);
  return a3;
}

uint64_t sub_21F6472BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  sub_21F647668();
  result = sub_21F716320();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_21F6456A0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_21F647354()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21F71641C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for PASService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PASService);
}

void type metadata accessor for LABiometryType(uint64_t a1)
{
  sub_21F6479CC(a1, &qword_2554DA968);
}

void type metadata accessor for MGDeviceClass(uint64_t a1)
{
  sub_21F6479CC(a1, &qword_2554DA970);
}

void type metadata accessor for AIDAServiceType(uint64_t a1)
{
  sub_21F6479CC(a1, &qword_2554DA978);
}

uint64_t sub_21F64740C()
{
  return sub_21F647438(&qword_2554DA980, (uint64_t (*)(uint64_t))type metadata accessor for AIDAServiceType, (uint64_t)&unk_21F71772C);
}

uint64_t sub_21F647438(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2207CC46C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F647478()
{
  return sub_21F647438(&qword_2554DA988, (uint64_t (*)(uint64_t))type metadata accessor for AIDAServiceType, (uint64_t)&unk_21F717704);
}

uint64_t sub_21F6474A4()
{
  return sub_21F647438(&qword_2554DA990, (uint64_t (*)(uint64_t))type metadata accessor for AIDAServiceType, (uint64_t)&unk_21F717794);
}

uint64_t sub_21F6474D0()
{
  return sub_21F647438(&qword_2554DA998, (uint64_t (*)(uint64_t))type metadata accessor for LABiometryType, (uint64_t)&unk_21F717908);
}

uint64_t sub_21F6474FC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_21F647538(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_21F64756C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_21F647584(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for AIDAServiceType(0);
  sub_21F647438(&qword_2554DAA00, (uint64_t (*)(uint64_t))type metadata accessor for AIDAServiceType, (uint64_t)&unk_21F7177BC);
  result = sub_21F716320();
  v7 = result;
  if (v2)
  {
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_21F64585C(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_21F647624(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_21F647668()
{
  unint64_t result;

  result = qword_2554DAB38;
  if (!qword_2554DAB38)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDeviceCapability, &type metadata for PASDeviceCapability);
    atomic_store(result, (unint64_t *)&qword_2554DAB38);
  }
  return result;
}

uint64_t sub_21F6476AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_21F647710(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21F647754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DABF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F64779C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2207CC3F4](a1, v6, a5);
}

void type metadata accessor for LAError(uint64_t a1)
{
  sub_21F6479CC(a1, &qword_2554DAC10);
}

void type metadata accessor for AKAppleIDAuthenticationAppProvidedContext(uint64_t a1)
{
  sub_21F6479CC(a1, &qword_2554DAC18);
}

uint64_t sub_21F64782C()
{
  return sub_21F647438(&qword_2554DAC20, (uint64_t (*)(uint64_t))type metadata accessor for AKAppleIDAuthenticationAppProvidedContext, (uint64_t)&unk_21F7179F8);
}

uint64_t sub_21F647858()
{
  return sub_21F647438(&qword_2554DAC28, (uint64_t (*)(uint64_t))type metadata accessor for AKAppleIDAuthenticationAppProvidedContext, (uint64_t)&unk_21F7179D0);
}

uint64_t sub_21F647884()
{
  return sub_21F647438(&qword_2554DAC30, (uint64_t (*)(uint64_t))type metadata accessor for AKAppleIDAuthenticationAppProvidedContext, (uint64_t)&unk_21F717A60);
}

uint64_t sub_21F6478B0()
{
  return sub_21F647438(&qword_2554DAC38, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717B10);
}

uint64_t sub_21F6478DC()
{
  return sub_21F647438(&qword_2554DAC40, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717B3C);
}

uint64_t sub_21F647908()
{
  return sub_21F647438(&qword_2554DAC48, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717BF8);
}

uint64_t sub_21F647934()
{
  return sub_21F647438(&qword_2554DAC50, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717BC4);
}

uint64_t sub_21F647960()
{
  return sub_21F647438(&qword_2554DAC58, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717B80);
}

uint64_t sub_21F64798C()
{
  return sub_21F647438(&qword_2554DAC60, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_21F717CE4);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_21F6479CC(a1, &qword_2554DAC98);
}

void sub_21F6479CC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_21F647A10()
{
  return sub_21F647438(&qword_2554DAC68, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_21F717CA8);
}

unint64_t sub_21F647A40()
{
  unint64_t result;

  result = qword_2554DAC70;
  if (!qword_2554DAC70)
  {
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2554DAC70);
  }
  return result;
}

uint64_t sub_21F647A84()
{
  return sub_21F647438(&qword_2554DAC78, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_21F717D20);
}

uint64_t sub_21F647AB0()
{
  return sub_21F647438(&qword_2554DAC80, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C);
}

void *PASExtensionPickedAccount.dsid.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid);
  v2 = v1;
  return v1;
}

uint64_t PASExtensionPickedAccount.altDSID.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID);
}

uint64_t PASExtensionPickedAccount.firstName.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName);
}

uint64_t PASExtensionPickedAccount.lastName.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName);
}

uint64_t PASExtensionPickedAccount.appleID.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID);
}

uint64_t PASExtensionPickedAccount.accountUsername.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername);
}

uint64_t PASExtensionPickedAccount.formattedUsername.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername);
}

uint64_t sub_21F647C40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PASExtensionPickedAccount.isMe.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_isMe);
}

uint64_t PASExtensionPickedAccount.imageData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData);
  sub_21F647CC0(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData + 8));
  return v1;
}

uint64_t sub_21F647CC0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21F647CD4(a1, a2);
  return a1;
}

uint64_t sub_21F647CD4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t PASExtensionPickedAccount.description.getter()
{
  uint64_t v0;
  id v1;
  unint64_t v2;

  sub_21F7164E8();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F7165CC();
  sub_21F716140();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DADB0);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1AF0);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData + 8);
  if (v2 >> 60 != 15)
    __asm { BR              X14 }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DADC0);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return 0;
}

uint64_t PASExtensionPickedAccount.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  char *v31;
  _BYTE v32[24];
  uint64_t v33;

  v2 = v1;
  swift_getObjectType();
  sub_21F649B14(a1, (uint64_t)v32);
  if (!v33)
  {
    sub_21F649B5C((uint64_t)v32);
    goto LABEL_55;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid);
    v5 = *(void **)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid];
    if (v4)
    {
      if (!v5)
        goto LABEL_54;
      sub_21F64779C(0, (unint64_t *)&qword_2554DADD0);
      v6 = v5;
      v7 = v4;
      v8 = sub_21F7163EC();

      if ((v8 & 1) == 0)
        goto LABEL_54;
    }
    else if (v5)
    {
      goto LABEL_54;
    }
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID + 8);
    v10 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID + 8];
    if (v9)
    {
      if (!v10)
        goto LABEL_54;
      v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID) == *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID]
         && v9 == v10;
      if (!v11 && (sub_21F716800() & 1) == 0)
        goto LABEL_54;
    }
    else if (v10)
    {
      goto LABEL_54;
    }
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName + 8);
    v13 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName + 8];
    if (v12)
    {
      if (!v13
        || (*(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName) != *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName]
         || v12 != v13)
        && (sub_21F716800() & 1) == 0)
      {
        goto LABEL_54;
      }
    }
    else if (v13)
    {
      goto LABEL_54;
    }
    v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName + 8);
    v15 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName + 8];
    if (v14)
    {
      if (!v15
        || (*(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName) != *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName]
         || v14 != v15)
        && (sub_21F716800() & 1) == 0)
      {
        goto LABEL_54;
      }
    }
    else if (v15)
    {
      goto LABEL_54;
    }
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID + 8);
    v17 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID + 8];
    if (v16)
    {
      if (!v17
        || (*(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID) != *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID]
         || v16 != v17)
        && (sub_21F716800() & 1) == 0)
      {
        goto LABEL_54;
      }
    }
    else if (v17)
    {
      goto LABEL_54;
    }
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername + 8);
    v19 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername + 8];
    if (v18)
    {
      if (!v19
        || (*(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername) != *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername]
         || v18 != v19)
        && (sub_21F716800() & 1) == 0)
      {
        goto LABEL_54;
      }
    }
    else if (v19)
    {
      goto LABEL_54;
    }
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername + 8);
    v21 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername + 8];
    if (v20)
    {
      if (!v21
        || (*(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername) != *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername]
         || v20 != v21)
        && (sub_21F716800() & 1) == 0)
      {
        goto LABEL_54;
      }
      goto LABEL_53;
    }
    if (!v21)
    {
LABEL_53:
      if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_isMe) != v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_isMe])
        goto LABEL_54;
      v24 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData;
      v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData);
      v26 = *(_QWORD *)(v24 + 8);
      v27 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData];
      v28 = *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData + 8];
      if (v26 >> 60 == 15)
      {
        sub_21F647CC0(*(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData], *(_QWORD *)&v31[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData + 8]);

        if (v28 >> 60 == 15)
        {
          v22 = 1;
          return v22 & 1;
        }
      }
      else
      {
        v29 = *(_QWORD *)(v24 + 8);
        if (v28 >> 60 != 15)
        {
          sub_21F647CC0(v25, v29);
          sub_21F647CC0(v27, v28);
          sub_21F647CC0(v25, v26);
          sub_21F649FE4(v25, v26);
          v22 = v30;

          sub_21F649B9C(v27, v28);
          sub_21F649B9C(v25, v26);
          sub_21F649B9C(v25, v26);
          return v22 & 1;
        }
        sub_21F647CD4(v25, v29);

      }
      sub_21F649B9C(v25, v26);
      sub_21F649B9C(v27, v28);
      goto LABEL_55;
    }
LABEL_54:

  }
LABEL_55:
  v22 = 0;
  return v22 & 1;
}

uint64_t PASExtensionPickedAccount.hash.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  v1 = v0;
  sub_21F716974();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid);
  sub_21F716938();
  if (v2)
  {
    v3 = v2;
    sub_21F7163F8();

  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  sub_21F716938();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData + 8);
  if (v5 >> 60 == 15)
  {
    sub_21F716938();
  }
  else
  {
    v6 = *v4;
    sub_21F716938();
    sub_21F647CD4(v6, v5);
    sub_21F715D8C();
    sub_21F649B9C(v6, v5);
  }
  return sub_21F71695C();
}

char *PASExtensionPickedAccount.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static PASExtensionPickedAccount.supportsSecureCoding;
}

uint64_t static PASExtensionPickedAccount.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return static PASExtensionPickedAccount.supportsSecureCoding;
}

uint64_t static PASExtensionPickedAccount.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static PASExtensionPickedAccount.supportsSecureCoding = a1;
  return result;
}

uint64_t (*static PASExtensionPickedAccount.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall PASExtensionPickedAccount.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid);
  v4 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID + 8))
    v5 = sub_21F7160E0();
  else
    v5 = 0;
  v6 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName + 8))
    v7 = sub_21F7160E0();
  else
    v7 = 0;
  v8 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName + 8))
    v9 = sub_21F7160E0();
  else
    v9 = 0;
  v10 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID + 8))
    v11 = sub_21F7160E0();
  else
    v11 = 0;
  v12 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername + 8))
    v13 = sub_21F7160E0();
  else
    v13 = 0;
  v14 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v13, v14);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername + 8))
    v15 = sub_21F7160E0();
  else
    v15 = 0;
  v16 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v15, v16);
  swift_unknownObjectRelease();

  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_isMe);
  v18 = (void *)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v17, v18);

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData + 8) >> 60 == 15)
    v19 = 0;
  else
    v19 = sub_21F715D68();
  v20 = (id)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v19, v20);
  swift_unknownObjectRelease();

}

id PASExtensionPickedAccount.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21F64A3B0(a1);

  return v4;
}

id PASExtensionPickedAccount.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_21F64A3B0(a1);

  return v2;
}

id PASExtensionPickedAccount.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PASExtensionPickedAccount.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PASExtensionPickedAccount.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_21F6490C4()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid);
  v2 = v1;
  return v1;
}

uint64_t sub_21F6490F4(uint64_t a1, uint64_t a2)
{
  return sub_21F64913C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID);
}

uint64_t sub_21F649100(uint64_t a1, uint64_t a2)
{
  return sub_21F64913C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName);
}

uint64_t sub_21F64910C(uint64_t a1, uint64_t a2)
{
  return sub_21F64913C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName);
}

uint64_t sub_21F649118(uint64_t a1, uint64_t a2)
{
  return sub_21F64913C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID);
}

uint64_t sub_21F649124(uint64_t a1, uint64_t a2)
{
  return sub_21F64913C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername);
}

uint64_t sub_21F649130(uint64_t a1, uint64_t a2)
{
  return sub_21F64913C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername);
}

uint64_t sub_21F64913C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(*v3 + *a3);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_21F649174()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_isMe);
}

uint64_t sub_21F649188()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData;
  v2 = *(_QWORD *)v1;
  sub_21F647CC0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

void *PASExtensionPickedAccountBuilder.dsid.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_dsid);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void PASExtensionPickedAccountBuilder.dsid.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_dsid);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*PASExtensionPickedAccountBuilder.dsid.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.altDSID.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_altDSID);
}

uint64_t PASExtensionPickedAccountBuilder.altDSID.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_altDSID);
}

uint64_t (*PASExtensionPickedAccountBuilder.altDSID.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.firstName.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_firstName);
}

uint64_t PASExtensionPickedAccountBuilder.firstName.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_firstName);
}

uint64_t (*PASExtensionPickedAccountBuilder.firstName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.lastName.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_lastName);
}

uint64_t PASExtensionPickedAccountBuilder.lastName.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_lastName);
}

uint64_t (*PASExtensionPickedAccountBuilder.lastName.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.appleID.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_appleID);
}

uint64_t PASExtensionPickedAccountBuilder.appleID.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_appleID);
}

uint64_t (*PASExtensionPickedAccountBuilder.appleID.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.accountUsername.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_accountUsername);
}

uint64_t PASExtensionPickedAccountBuilder.accountUsername.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_accountUsername);
}

uint64_t (*PASExtensionPickedAccountBuilder.accountUsername.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.formattedUsername.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_formattedUsername);
}

uint64_t sub_21F649480(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t PASExtensionPickedAccountBuilder.formattedUsername.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_formattedUsername);
}

uint64_t sub_21F6494DC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*PASExtensionPickedAccountBuilder.formattedUsername.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.isMe.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_isMe);
  swift_beginAccess();
  return *v1;
}

uint64_t PASExtensionPickedAccountBuilder.isMe.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_isMe);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASExtensionPickedAccountBuilder.isMe.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionPickedAccountBuilder.imageData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_imageData;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  sub_21F647CC0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t PASExtensionPickedAccountBuilder.imageData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_imageData);
  swift_beginAccess();
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_21F649B9C(v6, v7);
}

uint64_t (*PASExtensionPickedAccountBuilder.imageData.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id PASExtensionPickedAccountBuilder.build()()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = (void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_dsid);
  swift_beginAccess();
  v2 = *v1;
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_altDSID);
  swift_beginAccess();
  v4 = v3[1];
  v27 = *v3;
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_firstName);
  swift_beginAccess();
  v6 = v5[1];
  v26 = *v5;
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_lastName);
  swift_beginAccess();
  v8 = v7[1];
  v25 = *v7;
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_appleID);
  swift_beginAccess();
  v10 = v9[1];
  v24 = *v9;
  v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_accountUsername);
  swift_beginAccess();
  v12 = v11[1];
  v23 = *v11;
  v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_formattedUsername);
  swift_beginAccess();
  v14 = *v13;
  v15 = v13[1];
  v22 = v14;
  v16 = (_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_isMe);
  swift_beginAccess();
  LOBYTE(v3) = *v16;
  v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_imageData);
  swift_beginAccess();
  v19 = *v17;
  v18 = v17[1];
  swift_bridgeObjectRetain();
  v20 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F647CC0(v19, v18);
  return sub_21F64A25C((uint64_t)v2, v27, v4, v26, v6, v25, v8, v24, v10, v23, v12, v22, v15, (char)v3, v19, v18);
}

id PASExtensionPickedAccountBuilder.init()()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  objc_super v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_dsid] = 0;
  v1 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_altDSID];
  *v1 = 0;
  v1[1] = 0;
  v2 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_firstName];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_lastName];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_appleID];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_accountUsername];
  *v5 = 0;
  v5[1] = 0;
  v6 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_formattedUsername];
  *v6 = 0;
  v6[1] = 0;
  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_isMe] = 0;
  *(_OWORD *)&v0[OBJC_IVAR____TtC21ProximityAppleIDSetup32PASExtensionPickedAccountBuilder_imageData] = xmmword_21F717E50;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for PASExtensionPickedAccountBuilder();
  return objc_msgSendSuper2(&v8, sel_init);
}

id PASExtensionPickedAccountBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASExtensionPickedAccountBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21F649B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F649B5C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F649B9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_21F649BB0(a1, a2);
  return a1;
}

uint64_t sub_21F649BB0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_21F649BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_21F649C54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x21F649E38);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_21F649E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_21F649BF4((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_21F649F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_21F715C9C();
  v11 = result;
  if (result)
  {
    result = sub_21F715CB4();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_21F715CA8();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_21F649BF4(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_21F649FE4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_21F64A030()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_21F64A064 + dword_21F64A23C[v0 >> 62]))();
}

uint64_t sub_21F64A074@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

id sub_21F64A25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  objc_class *v22;
  _BYTE *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  objc_super v34;

  v22 = (objc_class *)type metadata accessor for PASExtensionPickedAccount();
  v23 = objc_allocWithZone(v22);
  *(_QWORD *)&v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid] = a1;
  v24 = &v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID];
  *v24 = a2;
  v24[1] = a3;
  v25 = &v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName];
  *v25 = a4;
  v25[1] = a5;
  v26 = &v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName];
  *v26 = a6;
  v26[1] = a7;
  v27 = &v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID];
  *v27 = a8;
  v27[1] = a9;
  v28 = &v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername];
  *v28 = a10;
  v28[1] = a11;
  v29 = &v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername];
  *v29 = a12;
  v29[1] = a13;
  v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_isMe] = a14;
  v30 = &v23[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData];
  *v30 = a15;
  v30[1] = a16;
  v34.receiver = v23;
  v34.super_class = v22;
  return objc_msgSendSuper2(&v34, sel_init);
}

id sub_21F64A3B0(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  _BYTE *v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  void *v24;
  unsigned __int8 v25;
  uint64_t v26;
  void *v27;
  objc_super v29;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_21F64779C(0, (unint64_t *)&qword_2554DADD0);
  v5 = v2;
  *(_QWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_dsid] = sub_21F7163E0();
  sub_21F64779C(0, (unint64_t *)&qword_2554DAED8);
  v6 = sub_21F7163E0();
  v7 = 0uLL;
  if (v6)
  {
    v8 = (void *)v6;
    sub_21F7160F8();

    v7 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_altDSID] = v7;
  v9 = sub_21F7163E0();
  v10 = 0uLL;
  if (v9)
  {
    v11 = (void *)v9;
    sub_21F7160F8();

    v10 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_firstName] = v10;
  v12 = sub_21F7163E0();
  v13 = 0uLL;
  if (v12)
  {
    v14 = (void *)v12;
    sub_21F7160F8();

    v13 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_lastName] = v13;
  v15 = sub_21F7163E0();
  v16 = 0uLL;
  if (v15)
  {
    v17 = (void *)v15;
    sub_21F7160F8();

    v16 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_appleID] = v16;
  v18 = sub_21F7163E0();
  v19 = 0uLL;
  if (v18)
  {
    v20 = (void *)v18;
    sub_21F7160F8();

    v19 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_accountUsername] = v19;
  v21 = sub_21F7163E0();
  v22 = 0uLL;
  if (v21)
  {
    v23 = (void *)v21;
    sub_21F7160F8();

    v22 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_formattedUsername] = v22;
  v24 = (void *)sub_21F7160E0();
  v25 = objc_msgSend(a1, sel_decodeBoolForKey_, v24);

  v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_isMe] = v25;
  sub_21F64779C(0, (unint64_t *)&unk_2554DAEE0);
  v26 = sub_21F7163E0();
  if (v26)
  {
    v27 = (void *)v26;
    sub_21F715D74();

  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup25PASExtensionPickedAccount_imageData] = xmmword_21F717E50;

  v29.receiver = v5;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, sel_init);
}

uint64_t type metadata accessor for PASExtensionPickedAccountBuilder()
{
  return objc_opt_self();
}

unint64_t sub_21F64A718(uint64_t a1)
{
  unint64_t result;

  result = sub_21F64A73C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F64A73C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554DAE20;
  if (!qword_2554DAE20)
  {
    v1 = type metadata accessor for PASExtensionPickedAccount();
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE5BE0], v1);
    atomic_store(result, (unint64_t *)&qword_2554DAE20);
  }
  return result;
}

uint64_t type metadata accessor for PASExtensionPickedAccount()
{
  return objc_opt_self();
}

void sub_21F64A7A8()
{
  PASBoldAppleIDPlaceholder._countAndFlagsBits = 0x50415F444C4F423CLL;
  PASBoldAppleIDPlaceholder._object = (void *)0xEF3E44495F454C50;
}

Swift::String *PASBoldAppleIDPlaceholder.unsafeMutableAddressor()
{
  if (qword_2554DA6A8 != -1)
    swift_once();
  return &PASBoldAppleIDPlaceholder;
}

uint64_t sub_21F64A818()
{
  sub_21F7164E8();
  sub_21F716140();
  sub_21F716140();
  return 0;
}

unint64_t sub_21F64A91C()
{
  return 0xD000000000000022;
}

uint64_t sub_21F64A938()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16) + 1300;
}

unint64_t sub_21F64A944()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F64A818();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F64A9D4()
{
  return sub_21F64A818();
}

uint64_t sub_21F64A9EC()
{
  sub_21F6568AC();
  return sub_21F7168C0();
}

uint64_t sub_21F64AA14()
{
  sub_21F6568AC();
  return sub_21F7168B4();
}

uint64_t sub_21F64AA40(unint64_t a1)
{
  id v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      __asm { BR              X10 }
    v2 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    v7[0] = 0xD00000000000001ALL;
    v7[1] = 0x800000021F726880;
    swift_getErrorValue();
    Error.codeString.getter(v6);
    sub_21F716140();
    swift_bridgeObjectRelease();
    sub_21F716140();
    swift_getErrorValue();
  }
  else
  {
    v3 = (id)a1;
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    strcpy((char *)v7, "local error: ");
    HIWORD(v7[1]) = -4864;
    swift_getErrorValue();
    Error.codeString.getter(v5);
    sub_21F716140();
    swift_bridgeObjectRelease();
    sub_21F716140();
    swift_getErrorValue();
  }
  sub_21F7168CC();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F655E14(a1);
  return v7[0];
}

void sub_21F64AC0C()
{
  JUMPOUT(0x21F64ABCCLL);
}

void sub_21F64AC24()
{
  JUMPOUT(0x21F64ABCCLL);
}

void sub_21F64AC3C()
{
  JUMPOUT(0x21F64ABCCLL);
}

uint64_t sub_21F64AC54()
{
  unint64_t *v0;

  return sub_21F64AA40(*v0);
}

uint64_t sub_21F64AC5C(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v13 = sub_21F64AD08(a1);
  v15 = v14;
  v16 = sub_21F6A2054(a5, a6, a7);
  sub_21F64AE64(v13, v15, a2, (uint64_t)v16, v17, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_21F64AD08(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21F64AD44 + 4 * byte_21F717F34[a1]))(0xD000000000000020, 0x800000021F726950);
}

unint64_t sub_21F64AD44()
{
  return 0xD000000000000012;
}

uint64_t sub_21F64ADA0()
{
  return 0x6E49656369766564;
}

uint64_t sub_21F64ADC0()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_21F64ADD0()
{
  return 0x53746E756F636361;
}

uint64_t sub_21F64ADF4()
{
  return 0x65736552776F6C66;
}

uint64_t sub_21F64AE14()
{
  return 0x636E6143776F6C66;
}

uint64_t sub_21F64AE30()
{
  return 0x65646E45776F6C66;
}

void sub_21F64AE4C()
{
  JUMPOUT(0x21F64AE58);
}

uint64_t sub_21F64AE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a8;
  v17[3] = a9;
  v17[4] = a10;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = a1;
  v17[8] = a2;
  v17[9] = a6;
  v17[10] = a7;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(a10 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v18(a1, a2, a3, sub_21F655E64, v17, a8, a10);
  return swift_release();
}

uint64_t sub_21F64AF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[40];
  __int128 v45;
  __int128 v46;

  v37 = a5;
  v38 = a7;
  v40 = a1;
  v41 = a4;
  v39 = a3;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v45 = 0x4974736575716572;
  *((_QWORD *)&v45 + 1) = 0xE900000000000044;
  sub_21F7164B8();
  if (*(_QWORD *)(a2 + 16) && (v19 = sub_21F644994((uint64_t)v44), (v20 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a2 + 56) + 32 * v19, (uint64_t)&v45);
  }
  else
  {
    v45 = 0u;
    v46 = 0u;
  }
  v35 = a12;
  v36 = a13;
  v33 = a11;
  v34 = a9;
  sub_21F647538((uint64_t)v44);
  if (*((_QWORD *)&v46 + 1))
  {
    v21 = swift_dynamicCast();
    if (v21)
      v22 = v42;
    else
      v22 = 0;
    if (v21)
      v23 = v43;
    else
      v23 = 0;
  }
  else
  {
    sub_21F6476AC((uint64_t)&v45, &qword_2554DA750);
    v22 = 0;
    v23 = 0;
  }
  v25 = v37;
  v24 = v38;
  v37(v38, a8, v22, v23, 0x8000000000000008, a2);
  v26 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v18, 1, 1, v26);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v28 = v35;
  v27[4] = v33;
  v27[5] = v28;
  v29 = v34;
  v27[6] = v36;
  v27[7] = v29;
  v27[8] = a10;
  v30 = v39;
  v27[9] = v40;
  v27[10] = a2;
  v27[11] = v25;
  v27[12] = a6;
  v27[13] = v24;
  v27[14] = a8;
  v27[15] = v22;
  v27[16] = v23;
  v31 = v41;
  v27[17] = v30;
  v27[18] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_21F6B4038((uint64_t)v18, (uint64_t)&unk_2554DB2F8, (uint64_t)v27);
  return swift_release();
}

uint64_t sub_21F64B194(char a1)
{
  return *(_QWORD *)&aAccountdaccoun_0[8 * a1];
}

uint64_t sub_21F64B1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v8 + 120) = v16;
  *(_QWORD *)(v8 + 128) = v17;
  *(_QWORD *)(v8 + 104) = v14;
  *(_QWORD *)(v8 + 112) = v15;
  *(_OWORD *)(v8 + 88) = v13;
  *(_OWORD *)(v8 + 72) = v12;
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v9 = sub_21F716980();
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 152) = swift_task_alloc();
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F64B26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v4;
  v5 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 112);
  *(_QWORD *)(v4 + 32) = v1;
  *(_OWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 64) = v2;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v6;
  *v6 = v0;
  v6[1] = sub_21F64B304;
  return Result<>.init(catching:)(*(_QWORD *)(v0 + 160), dword_2554DB308);
}

uint64_t sub_21F64B304()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F64B360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t);
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD))(v0 + 48))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), 0x8000000000000010, *(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = *(id **)(v0 + 152);
  if (EnumCaseMultiPayload == 1)
  {
    v7 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t))(v0 + 48);
    v12 = *(_QWORD *)(v0 + 40);
    v13 = *v6;
    v14 = *v6;
    v11(v10, v9, v7, v8, v13, v12);

  }
  else
  {
    (*(void (**)(id *, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v6, *(_QWORD *)(v0 + 136));
  }
  v15 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 144);
  v18 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 96);
  v19 = sub_21F6894B8(v15, *(_QWORD *)(v0 + 120));
  v18(v19, 0, v20);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64B49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21F64B4BC()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, unint64_t, _QWORD);

  if (*(_QWORD *)(v0 + 40))
    v1 = *(_QWORD *)(v0 + 40);
  else
    v1 = sub_21F640AEC(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 56) = v1;
  v4 = (uint64_t (*)(_QWORD, unint64_t, _QWORD))(**(int **)(v0 + 24) + *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_21F64B55C;
  return v4(*(_QWORD *)(v0 + 16), v1, *(_QWORD *)(v0 + 48));
}

uint64_t sub_21F64B55C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F64B5D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64B604(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = v8;
  *(_QWORD *)(v9 + 48) = a7;
  *(_QWORD *)(v9 + 56) = a8;
  *(_BYTE *)(v9 + 113) = a5;
  *(_QWORD *)(v9 + 32) = a4;
  *(_QWORD *)(v9 + 40) = a6;
  *(_BYTE *)(v9 + 112) = a2;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_21F64B638()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 113);
  v3 = sub_21F64AD08(*(_BYTE *)(v0 + 112));
  v5 = v4;
  *(_QWORD *)(v0 + 80) = v4;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 88) = v6;
  v7 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v7;
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)v8 = v0;
  *(_QWORD *)(v8 + 8) = sub_21F64B728;
  v9 = *(_QWORD *)(v0 + 16);
  v10 = *(_OWORD *)(v0 + 24);
  v11 = *(_OWORD *)(v0 + 40);
  v12 = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v0 + 72);
  *(_OWORD *)(v8 + 88) = v12;
  *(_OWORD *)(v8 + 72) = v11;
  *(_QWORD *)(v8 + 56) = sub_21F64AF38;
  *(_QWORD *)(v8 + 64) = v6;
  *(_BYTE *)(v8 + 136) = v2 & 1;
  *(_OWORD *)(v8 + 40) = v10;
  *(_QWORD *)(v8 + 24) = v3;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 16) = v9;
  return swift_task_switch();
}

uint64_t sub_21F64B728()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F64B7A8()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t (*sub_21F64B7E4(uint64_t a1, uint64_t a2, uint64_t a3))(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a1;
  return sub_21F64AF38;
}

uint64_t sub_21F64B838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v9 + 96) = v13;
  *(_QWORD *)(v9 + 104) = v8;
  *(_QWORD *)(v9 + 88) = v12;
  *(_OWORD *)(v9 + 72) = v11;
  *(_QWORD *)(v9 + 56) = a7;
  *(_QWORD *)(v9 + 64) = a8;
  *(_BYTE *)(v9 + 136) = a6;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F64B878()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[9];
  __int128 v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_BYTE *)(v0 + 136);
  v15[0] = sub_21F6409B8(MEMORY[0x24BEE4AF8]);
  v3 = swift_bridgeObjectRetain();
  sub_21F6542B4(v3, v15, (void (*)(uint64_t *__return_ptr, char *))sub_21F64C238, 0, v1);
  swift_bridgeObjectRelease();
  v4 = sub_21F66BD5C(v15[0]);
  *(_QWORD *)(v0 + 112) = v4;
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v5;
  *v5 = v0;
  v5[1] = sub_21F64B958;
  v6 = *(_OWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 16);
  v17 = *(_QWORD *)(v0 + 96);
  v16 = v6;
  v15[8] = v4;
  return sub_21F64BA00(v13, v11, v12, v9, v10, v2 & 1, v7, v8);
}

uint64_t sub_21F64B958()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F64B9CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64BA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v9 + 120) = v17;
  *(_QWORD *)(v9 + 128) = v8;
  *(_QWORD *)(v9 + 104) = v15;
  *(_QWORD *)(v9 + 112) = v16;
  *(_QWORD *)(v9 + 88) = a8;
  *(_QWORD *)(v9 + 96) = v14;
  *(_BYTE *)(v9 + 272) = a6;
  *(_QWORD *)(v9 + 72) = a5;
  *(_QWORD *)(v9 + 80) = a7;
  *(_QWORD *)(v9 + 56) = a3;
  *(_QWORD *)(v9 + 64) = a4;
  *(_QWORD *)(v9 + 40) = a1;
  *(_QWORD *)(v9 + 48) = a2;
  v10 = sub_21F716278();
  *(_QWORD *)(v9 + 136) = v10;
  *(_QWORD *)(v9 + 144) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 152) = swift_task_alloc();
  *(_QWORD *)(v9 + 160) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v9 + 168) = swift_task_alloc();
  v11 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v9 + 176) = v11;
  *(_QWORD *)(v9 + 184) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v9 + 192) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  *(_QWORD *)(v9 + 200) = swift_task_alloc();
  v12 = sub_21F715E10();
  *(_QWORD *)(v9 + 208) = v12;
  *(_QWORD *)(v9 + 216) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v9 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F64BB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 192);
  v24 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 104);
  v30 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 88);
  v32 = *(_BYTE *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 64);
  v28 = *(_QWORD *)(v0 + 56);
  v29 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 48);
  v33 = *(_OWORD *)(v0 + 112);
  _s21ProximityAppleIDSetup32ActivatedMessageSessionTransportV21destinationIdentifier33_C75EFC377189F044D610653B1F91726FLL10Foundation4UUIDVvpfi_0();
  v10 = sub_21F715DEC();
  v25 = v11;
  v26 = v10;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  v22 = sub_21F7162C0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v3, 1, 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v7, v8);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = v8;
  *(_OWORD *)(v13 + 40) = v33;
  *(_QWORD *)(v13 + 56) = v29;
  *(_QWORD *)(v13 + 64) = v9;
  *(_QWORD *)(v13 + 72) = v27;
  *(_QWORD *)(v13 + 80) = v28;
  *(_QWORD *)(v13 + 88) = v26;
  *(_QWORD *)(v13 + 96) = v25;
  *(_QWORD *)(v13 + 104) = v30;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v13 + v12, v5, v8);
  *(_QWORD *)(v13 + ((v24 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v31;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_21F64CC38(v3, (uint64_t)&unk_2554DB2B8, v13);
  v15 = 0;
  *(_QWORD *)(v0 + 232) = v14;
  if ((v32 & 1) == 0)
  {
    v16 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 72);
    v34 = *(_OWORD *)(v0 + 104);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v16, 1, 1, v22);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    *(_OWORD *)(v19 + 32) = v34;
    *(_QWORD *)(v19 + 48) = v17;
    *(_QWORD *)(v19 + 56) = v18;
    *(_QWORD *)(v19 + 64) = v14;
    swift_retain();
    v15 = sub_21F6B4318(v16, (uint64_t)&unk_2554DB2D0, v19);
  }
  *(_QWORD *)(v0 + 240) = v15;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v20;
  *(_QWORD *)(v0 + 256) = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  *v20 = v0;
  v20[1] = sub_21F64BD90;
  return sub_21F7162CC();
}

uint64_t sub_21F64BD90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F64BDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + 240))
  {
    swift_retain();
    sub_21F7162D8();
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64BED8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  int v16;
  void *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 264);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 56);
  if (v7)
  {
    v20 = *(_QWORD *)(v0 + 48);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v10 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 24) = sub_21F644208(v20, v9, &v22);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2114;
    v12 = v8;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v13;
    sub_21F716428();
    *v11 = v13;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASMessageSession sendRequestID %{public}s failed with error: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v21, -1, -1);
    MEMORY[0x2207CC514](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v14 = *(void **)(v0 + 264);
  *(_QWORD *)(v0 + 16) = v14;
  v15 = v14;
  v16 = swift_dynamicCast();
  v17 = *(void **)(v0 + 264);
  if (v16)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v18 = 2;
    *(_QWORD *)(v18 + 8) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)(v18 + 24) = 0;
    *(_BYTE *)(v18 + 32) = 5;
    swift_willThrow();
    swift_release();

  }
  else
  {
    swift_willThrow();
    swift_release();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_21F64C238@<X0>(char *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = 8 * *result;
  v3 = *(_QWORD *)&aAccountdaccoun_0[v2];
  v4 = *(_QWORD *)&aRequestitimest_0[v2 + 24];
  *a2 = v3;
  a2[1] = v4;
  return result;
}

uint64_t sub_21F64C260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 112) = v13;
  *(_OWORD *)(v8 + 80) = v11;
  *(_OWORD *)(v8 + 96) = v12;
  *(_OWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = a8;
  *(_QWORD *)(v8 + 32) = a5;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_21F64C29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v7;
  v8 = *(_OWORD *)(v0 + 24);
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v7 + 32) = v1;
  *(_OWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 64) = v5;
  *(_QWORD *)(v7 + 72) = v4;
  *(_OWORD *)(v7 + 80) = v9;
  *(_QWORD *)(v7 + 96) = v3;
  *(_QWORD *)(v7 + 104) = v2;
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v10;
  *(_QWORD *)(v10 + 16) = v6;
  *(_QWORD *)(v10 + 24) = v5;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v11;
  *v11 = v0;
  v11[1] = sub_21F64C384;
  return sub_21F71680C();
}

uint64_t sub_21F64C384()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F64C404()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64C440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 112) = v12;
  *(_OWORD *)(v8 + 80) = v10;
  *(_OWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21F64C478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _QWORD *v8;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v10 = *(_OWORD *)(v0 + 40);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v5;
  v6 = *(_OWORD *)(v0 + 24);
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v5 + 32) = v1;
  *(_OWORD *)(v5 + 40) = v6;
  *(_OWORD *)(v5 + 56) = v10;
  *(_QWORD *)(v5 + 72) = v4;
  *(_OWORD *)(v5 + 80) = v7;
  *(_QWORD *)(v5 + 96) = v3;
  *(_QWORD *)(v5 + 104) = v2;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v8;
  *v8 = v0;
  v8[1] = sub_21F64C558;
  return sub_21F71686C();
}

uint64_t sub_21F64C558()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F64C5CC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64C600(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;

  v42 = a8;
  v54 = a7;
  v46 = a5;
  v47 = a4;
  v45 = a2;
  v48 = a1;
  v52 = a10;
  v53 = a9;
  v50 = a11;
  v51 = a13;
  v49 = a12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v55 = (_QWORD *)sub_21F71626C();
  v19 = *(v55 - 1);
  MEMORY[0x24BDAC7A8](v55);
  v21 = (char *)&v40 - v20;
  v41 = (char *)&v40 - v20;
  v43 = a6;
  v22 = v54;
  v23 = a8;
  v24 = a3;
  a2(a4, a5, a6, v54, 0x8000000000000000, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  v56 = 0x4974736575716572;
  v57 = 0xE900000000000044;
  v26 = MEMORY[0x24BEE0D00];
  sub_21F7164B8();
  *(_QWORD *)(inited + 96) = v26;
  *(_QWORD *)(inited + 72) = a6;
  *(_QWORD *)(inited + 80) = v22;
  swift_bridgeObjectRetain();
  v27 = sub_21F640AEC(inited);
  v28 = v42;
  v44 = sub_21F6AE58C(v27, v42);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, _QWORD *))(v19 + 16))(v21, v48, v55);
  v29 = (*(unsigned __int8 *)(v19 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v30 = (char *)swift_allocObject();
  v31 = v50;
  v32 = v51;
  v33 = v49;
  *((_QWORD *)v30 + 2) = v50;
  *((_QWORD *)v30 + 3) = v33;
  v34 = v45;
  *((_QWORD *)v30 + 4) = v32;
  *((_QWORD *)v30 + 5) = v34;
  v35 = v47;
  *((_QWORD *)v30 + 6) = v24;
  *((_QWORD *)v30 + 7) = v35;
  v36 = v46;
  v37 = v43;
  *((_QWORD *)v30 + 8) = v46;
  *((_QWORD *)v30 + 9) = v37;
  v38 = v55;
  *((_QWORD *)v30 + 10) = v54;
  *((_QWORD *)v30 + 11) = v28;
  (*(void (**)(char *, char *, _QWORD *))(v19 + 32))(&v30[v29], v41, v38);
  v55 = *(_QWORD **)(v32 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), char *, uint64_t, uint64_t))v55)(v35, v36, v52, v44, sub_21F655D64, v30, v31, v32);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F64C8D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v38 = a4;
  v39 = a3;
  v41 = a11;
  v37 = a10;
  v40 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v17 = sub_21F716980();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (void **)((char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v23 = (_QWORD *)((char *)v33 - v22);
  v34 = a6;
  v35 = a7;
  v24 = a7;
  v25 = v37;
  v36 = a8;
  v26 = a8;
  v33[0] = a9;
  v33[1] = a5;
  v27 = v38;
  v38(a6, v24, v26, a9, 0x8000000000000018, v37);
  sub_21F689958(v39, a13, v23);
  (*(void (**)(void **, uint64_t *, uint64_t))(v18 + 16))(v21, v23, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = *v21;
    v29 = (unint64_t)*v21 | 0x4000000000000000;
    v30 = v28;
    v27(v34, v35, v36, v33[0], v29, v25);

  }
  else
  {
    (*(void (**)(void **, uint64_t))(v18 + 8))(v21, v17);
  }
  v31 = sub_21F71626C();
  sub_21F6DB1F0((uint64_t)v23, v31);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v23, v17);
}

void sub_21F64CA9C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_2554DA718 != -1)
    swift_once();
  v4 = sub_21F715F3C();
  __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  v5 = sub_21F715F24();
  v6 = sub_21F716374();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain();
    sub_21F644208(a1, a2, &v9);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v5, v6, "PASMessageSession sendRequestID %{public}s cancelled", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_21F64CC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_21F7162C0();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_21F7162B4();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_21F6476AC(a1, &qword_2554E19B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21F716248();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_21F64CD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[3] = a5;
  v7[4] = a7;
  v7[2] = a4;
  return swift_task_switch();
}

void sub_21F64CD84()
{
  uint64_t v0;
  _QWORD *v1;

  if (is_mul_ok(*(_QWORD *)(v0 + 16), 0x3B9ACA00uLL))
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v1;
    *v1 = v0;
    v1[1] = sub_21F64CDF0;
    sub_21F7162FC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21F64CDF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F64CE5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_21F7162F0();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    sub_21F7162D8();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64CED0(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_21F64B194(*a1);
  v5 = v4;
  if (v3 == sub_21F64B194(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_21F64CF58()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_21F716920();
  sub_21F64B194(v1);
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F64CFB8()
{
  char *v0;

  sub_21F64B194(*v0);
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F64CFF8()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_21F716920();
  sub_21F64B194(v1);
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F64D054@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F6546C0();
  *a1 = result;
  return result;
}

uint64_t sub_21F64D080@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F64B194(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_21F64D0A8@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  __int128 v20;
  __int128 v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;
  _OWORD v25[2];

  LOBYTE(v19[0]) = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v8 = sub_21F644994((uint64_t)v22), (v9 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_21F647538((uint64_t)v22);
  if (!*((_QWORD *)&v21 + 1))
  {
    sub_21F64B194(a2);
    sub_21F7164B8();
    if (*(_QWORD *)(a1 + 16) && (v13 = sub_21F644994((uint64_t)v19), (v14 & 1) != 0))
    {
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v23);
    }
    else
    {
      v23 = 0u;
      v24 = 0u;
    }
    sub_21F647538((uint64_t)v19);
    sub_21F6476AC((uint64_t)&v20, &qword_2554DA750);
    if (*((_QWORD *)&v24 + 1))
      goto LABEL_7;
LABEL_15:
    result = sub_21F6476AC((uint64_t)&v23, &qword_2554DA750);
    *(_OWORD *)a4 = xmmword_21F717E50;
    return result;
  }
  sub_21F644FEC(&v20, &v23);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_15;
LABEL_7:
  sub_21F644FEC(&v23, v25);
  sub_21F6429E4((uint64_t)v25, (uint64_t)v22);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v10 = v19[0];
    v11 = v19[1];
    result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    *(_QWORD *)a4 = v10;
    *(_QWORD *)(a4 + 8) = v11;
  }
  else
  {
    v15 = sub_21F64B194(a3);
    v17 = v16;
    sub_21F655884();
    swift_allocError();
    *(_QWORD *)v18 = v15;
    *(_QWORD *)(v18 + 8) = v17;
    *(_BYTE *)(v18 + 16) = 2;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
  }
  return result;
}

uint64_t sub_21F64D2A8(uint64_t a1, char a2)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  __int128 v17;
  __int128 v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  LOBYTE(v16[0]) = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_21F644994((uint64_t)v19), (v5 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_21F647538((uint64_t)v19);
  if (!*((_QWORD *)&v18 + 1))
  {
    sub_21F64B194(a2);
    sub_21F7164B8();
    if (*(_QWORD *)(a1 + 16) && (v7 = sub_21F644994((uint64_t)v16), (v8 & 1) != 0))
    {
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v20);
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    sub_21F647538((uint64_t)v16);
    sub_21F6476AC((uint64_t)&v17, &qword_2554DA750);
    if (*((_QWORD *)&v21 + 1))
      goto LABEL_7;
LABEL_16:
    sub_21F6476AC((uint64_t)&v20, &qword_2554DA750);
    return 0;
  }
  sub_21F644FEC(&v17, &v20);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_16;
LABEL_7:
  sub_21F644FEC(&v20, v22);
  sub_21F6429E4((uint64_t)v22, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  if (swift_dynamicCast())
  {
    v6 = v16[0];
  }
  else
  {
    sub_21F6429E4((uint64_t)v22, (uint64_t)v19);
    v6 = sub_21F716128();
    v10 = v9;
    v11 = sub_21F64B194(a2);
    v13 = v12;
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v14 = v6;
    *(_QWORD *)(v14 + 8) = v10;
    *(_QWORD *)(v14 + 16) = v11;
    *(_QWORD *)(v14 + 24) = v13;
    *(_BYTE *)(v14 + 32) = 1;
    swift_willThrow();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  return v6;
}

uint64_t sub_21F64D4C0(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[40];
  __int128 v21;
  __int128 v22;
  _BYTE v23[40];
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];

  v20[0] = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_21F644994((uint64_t)v23), (v8 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  sub_21F647538((uint64_t)v23);
  if (*((_QWORD *)&v22 + 1))
  {
    sub_21F644FEC(&v21, &v24);
    if (*((_QWORD *)&v25 + 1))
      goto LABEL_7;
LABEL_15:
    sub_21F6476AC((uint64_t)&v24, &qword_2554DA750);
    return 0;
  }
  sub_21F64B194(a2);
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v11 = sub_21F644994((uint64_t)v20), (v12 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_21F647538((uint64_t)v20);
  sub_21F6476AC((uint64_t)&v21, &qword_2554DA750);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_15;
LABEL_7:
  sub_21F644FEC(&v24, v26);
  v9 = sub_21F64E130((uint64_t)v26, a3);
  if (v3)
  {
LABEL_18:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
    return a1;
  }
  if ((v10 & 1) != 0)
  {
    sub_21F6429E4((uint64_t)v26, (uint64_t)v23);
    a1 = sub_21F716128();
    v14 = v13;
    v15 = sub_21F64B194(a2);
    v17 = v16;
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v18 = a1;
    *(_QWORD *)(v18 + 8) = v14;
    *(_QWORD *)(v18 + 16) = v15;
    *(_QWORD *)(v18 + 24) = v17;
    *(_BYTE *)(v18 + 32) = 1;
    swift_willThrow();
    goto LABEL_18;
  }
  a1 = v9;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  return a1;
}

uint64_t sub_21F64D6C8@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];

  v29[0] = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_21F644994((uint64_t)&v23), (v10 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v30);
  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  sub_21F647538((uint64_t)&v23);
  if (!*((_QWORD *)&v31 + 1))
  {
    v27 = sub_21F64B194(a2);
    v28 = v12;
    sub_21F7164B8();
    if (*(_QWORD *)(a1 + 16) && (v13 = sub_21F644994((uint64_t)v29), (v14 & 1) != 0))
    {
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v32);
    }
    else
    {
      v32 = 0u;
      v33 = 0u;
    }
    sub_21F647538((uint64_t)v29);
    sub_21F6476AC((uint64_t)&v30, &qword_2554DA750);
    if (*((_QWORD *)&v33 + 1))
      goto LABEL_7;
LABEL_14:
    result = sub_21F6476AC((uint64_t)&v32, &qword_2554DA750);
    *(_QWORD *)(a4 + 48) = 0;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
    return result;
  }
  sub_21F644FEC(&v30, &v32);
  if (!*((_QWORD *)&v33 + 1))
    goto LABEL_14;
LABEL_7:
  sub_21F644FEC(&v32, v34);
  sub_21F64E3A4((uint64_t)v34, a3);
  if (v4)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
  if (!*((_QWORD *)&v24 + 1))
  {
    sub_21F6476AC((uint64_t)&v23, (uint64_t *)&unk_2554E3100);
    sub_21F6429E4((uint64_t)v34, (uint64_t)&v23);
    v16 = sub_21F716128();
    v18 = v17;
    v19 = sub_21F64B194(a2);
    v21 = v20;
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v22 = v16;
    *(_QWORD *)(v22 + 8) = v18;
    *(_QWORD *)(v22 + 16) = v19;
    *(_QWORD *)(v22 + 24) = v21;
    *(_BYTE *)(v22 + 32) = 1;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
  }
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
  v15 = v24;
  *(_OWORD *)a4 = v23;
  *(_OWORD *)(a4 + 16) = v15;
  *(_OWORD *)(a4 + 32) = v25;
  *(_QWORD *)(a4 + 48) = v26;
  return result;
}

uint64_t sub_21F64D900(uint64_t a1, char a2, char a3)
{
  uint64_t v3;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;
  _OWORD v25[2];

  v19[0] = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_21F644994((uint64_t)v22), (v8 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_21F647538((uint64_t)v22);
  if (!*((_QWORD *)&v21 + 1))
  {
    sub_21F64B194(a2);
    sub_21F7164B8();
    if (*(_QWORD *)(a1 + 16) && (v10 = sub_21F644994((uint64_t)v19), (v11 & 1) != 0))
    {
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)&v23);
    }
    else
    {
      v23 = 0u;
      v24 = 0u;
    }
    sub_21F647538((uint64_t)v19);
    sub_21F6476AC((uint64_t)&v20, &qword_2554DA750);
    if (*((_QWORD *)&v24 + 1))
      goto LABEL_7;
LABEL_14:
    sub_21F6476AC((uint64_t)&v23, &qword_2554DA750);
    return 0;
  }
  sub_21F644FEC(&v20, &v23);
  if (!*((_QWORD *)&v24 + 1))
    goto LABEL_14;
LABEL_7:
  sub_21F644FEC(&v23, v25);
  v9 = sub_21F64E264((uint64_t)v25, a3);
  if (!v3)
  {
    a1 = v9;
    if (!v9)
    {
      sub_21F6429E4((uint64_t)v25, (uint64_t)v22);
      a1 = sub_21F716128();
      v14 = v13;
      v15 = sub_21F64B194(a2);
      v17 = v16;
      sub_21F655840();
      swift_allocError();
      *(_QWORD *)v18 = a1;
      *(_QWORD *)(v18 + 8) = v14;
      *(_QWORD *)(v18 + 16) = v15;
      *(_QWORD *)(v18 + 24) = v17;
      *(_BYTE *)(v18 + 32) = 1;
      swift_willThrow();
    }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
  return a1;
}

uint64_t sub_21F64DB04(uint64_t a1, char a2)
{
  uint64_t v2;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[40];
  __int128 v19;
  __int128 v20;
  _BYTE v21[40];
  __int128 v22;
  __int128 v23;
  _OWORD v24[2];

  v18[0] = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v5 = sub_21F644994((uint64_t)v21), (v6 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  sub_21F647538((uint64_t)v21);
  if (*((_QWORD *)&v20 + 1))
  {
    sub_21F644FEC(&v19, &v22);
    if (*((_QWORD *)&v23 + 1))
      goto LABEL_7;
LABEL_15:
    sub_21F6476AC((uint64_t)&v22, &qword_2554DA750);
    return 0;
  }
  sub_21F64B194(a2);
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v9 = sub_21F644994((uint64_t)v18), (v10 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_21F647538((uint64_t)v18);
  sub_21F6476AC((uint64_t)&v19, &qword_2554DA750);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_15;
LABEL_7:
  sub_21F644FEC(&v22, v24);
  v7 = sub_21F64E4DC((uint64_t)v24);
  if (v2)
  {
LABEL_18:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
    return a1;
  }
  if ((v8 & 1) != 0)
  {
    sub_21F6429E4((uint64_t)v24, (uint64_t)v21);
    a1 = sub_21F716128();
    v12 = v11;
    v13 = sub_21F64B194(a2);
    v15 = v14;
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v16 = a1;
    *(_QWORD *)(v16 + 8) = v12;
    *(_QWORD *)(v16 + 16) = v13;
    *(_QWORD *)(v16 + 24) = v15;
    *(_BYTE *)(v16 + 32) = 1;
    swift_willThrow();
    goto LABEL_18;
  }
  a1 = v7;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  return a1;
}

uint64_t sub_21F64DD04(uint64_t a1, char a2)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[40];
  __int128 v18;
  __int128 v19;
  _BYTE v20[40];
  __int128 v21;
  __int128 v22;
  _OWORD v23[2];

  v17[0] = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_21F644994((uint64_t)v20), (v5 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  sub_21F647538((uint64_t)v20);
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_21F64B194(a2);
    sub_21F7164B8();
    if (*(_QWORD *)(a1 + 16) && (v8 = sub_21F644994((uint64_t)v17), (v9 & 1) != 0))
    {
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    sub_21F647538((uint64_t)v17);
    sub_21F6476AC((uint64_t)&v18, &qword_2554DA750);
    if (*((_QWORD *)&v22 + 1))
      goto LABEL_7;
LABEL_15:
    sub_21F6476AC((uint64_t)&v21, &qword_2554DA750);
    return 0;
  }
  sub_21F644FEC(&v18, &v21);
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_15;
LABEL_7:
  sub_21F644FEC(&v21, v23);
  sub_21F64779C(0, (unint64_t *)&qword_2554DB318);
  v6 = static FAFamilyMember.parseObject(_:)((uint64_t)v23);
  if (v6)
  {
    v7 = v6;
  }
  else
  {
    sub_21F6429E4((uint64_t)v23, (uint64_t)v20);
    v7 = sub_21F716128();
    v11 = v10;
    v12 = sub_21F64B194(a2);
    v14 = v13;
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v15 = v7;
    *(_QWORD *)(v15 + 8) = v11;
    *(_QWORD *)(v15 + 16) = v12;
    *(_QWORD *)(v15 + 24) = v14;
    *(_BYTE *)(v15 + 32) = 1;
    swift_willThrow();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  return v7;
}

uint64_t sub_21F64DF0C(uint64_t a1, char a2)
{
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  _QWORD v16[5];
  __int128 v17;
  __int128 v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];

  LOBYTE(v16[0]) = a2;
  sub_21F6557FC();
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_21F644994((uint64_t)v19), (v5 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v17);
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  sub_21F647538((uint64_t)v19);
  if (!*((_QWORD *)&v18 + 1))
  {
    sub_21F64B194(a2);
    sub_21F7164B8();
    if (*(_QWORD *)(a1 + 16) && (v13 = sub_21F644994((uint64_t)v16), (v14 & 1) != 0))
    {
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v20);
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    sub_21F647538((uint64_t)v16);
    sub_21F6476AC((uint64_t)&v17, &qword_2554DA750);
    if (*((_QWORD *)&v21 + 1))
      goto LABEL_7;
LABEL_16:
    sub_21F6476AC((uint64_t)&v20, &qword_2554DA750);
    return 0;
  }
  sub_21F644FEC(&v17, &v20);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_16;
LABEL_7:
  sub_21F644FEC(&v20, v22);
  sub_21F6429E4((uint64_t)v22, (uint64_t)v19);
  sub_21F64779C(0, (unint64_t *)&qword_2554DADD0);
  if ((swift_dynamicCast() & 1) != 0 && (v6 = v16[0]) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  }
  else
  {
    sub_21F6429E4((uint64_t)v22, (uint64_t)v19);
    v6 = sub_21F716128();
    v8 = v7;
    v9 = sub_21F64B194(a2);
    v11 = v10;
    sub_21F655840();
    swift_allocError();
    *(_QWORD *)v12 = v6;
    *(_QWORD *)(v12 + 8) = v8;
    *(_QWORD *)(v12 + 16) = v9;
    *(_QWORD *)(v12 + 24) = v11;
    *(_BYTE *)(v12 + 32) = 1;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  }
  return v6;
}

uint64_t sub_21F64E130(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  sub_21F6429E4(a1, (uint64_t)v11);
  if (swift_dynamicCast())
  {
    sub_21F715C30();
    swift_allocObject();
    sub_21F715C24();
    sub_21F715C18();
    if (v2)
    {
      swift_release();
      return sub_21F649BB0(v9, v10);
    }
    else
    {
      sub_21F649BB0(v9, v10);
      swift_release();
      return v12;
    }
  }
  else
  {
    v5 = sub_21F64B194(a2);
    v7 = v6;
    sub_21F655884();
    swift_allocError();
    *(_QWORD *)v8 = v5;
    *(_QWORD *)(v8 + 8) = v7;
    *(_BYTE *)(v8 + 16) = 2;
    return swift_willThrow();
  }
}

uint64_t sub_21F64E264(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  sub_21F6429E4(a1, (uint64_t)v11);
  if (swift_dynamicCast())
  {
    sub_21F715C30();
    swift_allocObject();
    sub_21F715C24();
    type metadata accessor for PASDeviceContext();
    sub_21F6558C8();
    sub_21F715C18();
    if (v2)
    {
      swift_release();
      return sub_21F649BB0(v9, v10);
    }
    else
    {
      sub_21F649BB0(v9, v10);
      swift_release();
      return v12;
    }
  }
  else
  {
    v5 = sub_21F64B194(a2);
    v7 = v6;
    sub_21F655884();
    swift_allocError();
    *(_QWORD *)v8 = v5;
    *(_QWORD *)(v8 + 8) = v7;
    *(_BYTE *)(v8 + 16) = 2;
    return swift_willThrow();
  }
}

uint64_t sub_21F64E3A4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE v11[32];

  sub_21F6429E4(a1, (uint64_t)v11);
  if (swift_dynamicCast())
  {
    sub_21F715C30();
    swift_allocObject();
    sub_21F715C24();
    sub_21F655910();
    sub_21F715C18();
    if (v2)
    {
      swift_release();
      return sub_21F649BB0(v9, v10);
    }
    else
    {
      sub_21F649BB0(v9, v10);
      return swift_release();
    }
  }
  else
  {
    v5 = sub_21F64B194(a2);
    v7 = v6;
    sub_21F655884();
    swift_allocError();
    *(_QWORD *)v8 = v5;
    *(_QWORD *)(v8 + 8) = v7;
    *(_BYTE *)(v8 + 16) = 2;
    return swift_willThrow();
  }
}

unint64_t sub_21F64E4DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_21F6429E4(a1, (uint64_t)&v2);
  if (!swift_dynamicCast())
    return 0;
  if (v3 <= 2)
    return v3;
  return 0;
}

uint64_t sub_21F64E550(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t inited;
  unint64_t v12;

  sub_21F715C54();
  swift_allocObject();
  sub_21F715C48();
  v8 = sub_21F715C3C();
  v10 = v9;
  swift_release();
  if (!v4)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E24A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    *(_BYTE *)(inited + 32) = a4;
    *(_QWORD *)(inited + 64) = MEMORY[0x24BDCDDE8];
    *(_QWORD *)(inited + 40) = v8;
    *(_QWORD *)(inited + 48) = v10;
    swift_bridgeObjectRetain();
    sub_21F647CD4(v8, v10);
    v12 = sub_21F640C2C(inited);
    a1 = sub_21F6F4C10(v12, a1, a3 & 1);
    sub_21F649BB0(v8, v10);
  }
  return a1;
}

uint64_t static FAFamilyMember.parseObject(_:)(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t result;
  _BYTE v5[32];

  sub_21F6429E4(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
  if (swift_dynamicCast())
  {
    v1 = objc_allocWithZone(MEMORY[0x24BE30A70]);
    v2 = (void *)sub_21F71602C();
    swift_bridgeObjectRelease();
    v3 = objc_msgSend(v1, sel_initWithDictionaryRepresentation_, v2);

    result = swift_dynamicCastUnknownClass();
    if (result)
      return result;

  }
  return 0;
}

double FAFamilyMember.toParsable()@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  double result;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_dictionary);
  if (v4)
  {
    v5 = v4;
    v6 = sub_21F716044();

    *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
    *(_QWORD *)a1 = v6;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_21F64E7F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = static FAFamilyMember.parseObject(_:)(a1);
  *a2 = result;
  return result;
}

double sub_21F64E81C@<D0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  double result;

  v3 = objc_msgSend(*v1, sel_dictionary);
  if (v3)
  {
    v4 = v3;
    v5 = sub_21F716044();

    *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
    *(_QWORD *)a1 = v5;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t PASSourceAppleIDExchanger.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v0 + 16);
}

uint64_t PASSourceAppleIDExchanger.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PASSourceAppleIDExchanger.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x2207CC5BC](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_21F64E9C0;
}

uint64_t sub_21F64E9C4(__int128 *a1, __int128 *a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  v6 = v5;
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v5 + 168) = 0;
  if (qword_2554DA718 != -1)
    swift_once();
  v12 = sub_21F715F3C();
  __swift_project_value_buffer(v12, (uint64_t)static PASLogger.common);
  v13 = sub_21F715F24();
  v14 = sub_21F716350();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_21F63C000, v13, v14, "PASSourceAppleIDExchanger init", v15, 2u);
    MEMORY[0x2207CC514](v15, -1, -1);
  }

  sub_21F64756C(a1, v6 + 32);
  sub_21F64756C(a2, v6 + 72);
  *(_QWORD *)(v6 + 112) = a3;
  *(_QWORD *)(v6 + 120) = a4;
  sub_21F64756C(a5, v6 + 128);
  return v6;
}

uint64_t PASSourceAppleIDExchanger.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASSourceAppleIDExchanger deinit", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  sub_21F653C88(v1 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 32);
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 72);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 128);
  return v1;
}

uint64_t PASSourceAppleIDExchanger.__deallocating_deinit()
{
  PASSourceAppleIDExchanger.deinit();
  return swift_deallocClassInstance();
}

uint64_t PASSourceAppleIDExchanger.registerForRequests()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = v0;
  return swift_task_switch();
}

uint64_t sub_21F64EC34()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = sub_21F7162A8();
  *(_QWORD *)(v0 + 208) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F64ECA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_release();
  *(_BYTE *)(v0 + 296) = *(_BYTE *)(v1 + 168);
  return swift_task_switch();
}

uint64_t sub_21F64ECE8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 296) == 1)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716374();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger re-registered", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

  }
  v5 = *(_QWORD **)(v0 + 192);
  v6 = v5[7];
  v7 = v5[8];
  __swift_project_boxed_opaque_existential_1(v5 + 4, v6);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v8;
  *v8 = v0;
  v8[1] = sub_21F64EE30;
  return v10(v0 + 16, v6, v7);
}

uint64_t sub_21F64EE30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F64EE94()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[24];
  v2 = v1 + 4;
  v3 = v0[5];
  v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF18);
  v0[29] = v6;
  sub_21F64AC5C(8u, 0, (uint64_t)&unk_2554DAF10, v5, v3, v6, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  v7 = v1[7];
  v8 = v1[8];
  __swift_project_boxed_opaque_existential_1(v2, v7);
  v11 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  v0[30] = v9;
  *v9 = v0;
  v9[1] = sub_21F64EFB8;
  return v11(v0 + 7, v7, v8);
}

uint64_t sub_21F64EFB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F64F01C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[29];
  v2 = (_QWORD *)v0[24];
  v3 = v2 + 4;
  v4 = v0[10];
  v5 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v4);
  v6 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(9u, 0, (uint64_t)&unk_2554DAF28, v6, v4, v1, v5);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  v7 = v2[7];
  v8 = v2[8];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  v11 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  v0[32] = v9;
  *v9 = v0;
  v9[1] = sub_21F64F138;
  return v11(v0 + 12, v7, v8);
}

uint64_t sub_21F64F138()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F64F19C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[29];
  v2 = (_QWORD *)v0[24];
  v3 = v2 + 4;
  v4 = v0[15];
  v5 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 12, v4);
  v6 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(0xAu, 0, (uint64_t)&unk_2554DAF38, v6, v4, v1, v5);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 12));
  v7 = v2[7];
  v8 = v2[8];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  v11 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  v0[34] = v9;
  *v9 = v0;
  v9[1] = sub_21F64F2B8;
  return v11(v0 + 17, v7, v8);
}

uint64_t sub_21F64F2B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F64F31C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[29];
  v2 = v0[20];
  v3 = v0[21];
  __swift_project_boxed_opaque_existential_1(v0 + 17, v2);
  v4 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(0xBu, 0, (uint64_t)&unk_2554DAF48, v4, v2, v1, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 17));
  v0[36] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F64F40C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  swift_release();
  *(_BYTE *)(v1 + 168) = 1;
  return swift_task_switch();
}

uint64_t sub_21F64F454()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger did registerForRequests", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64F530()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 224);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 176) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 184) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASSourceAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64F718()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 248);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 176) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 184) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASSourceAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64F900()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 264);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 176) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 184) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASSourceAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64FAE8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 280);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 176) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 184) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASSourceAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64FCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F64FCE8()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB360 + dword_2554DB360);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_21F64FD84;
    v3 = v5;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t sub_21F64FD84(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_BYTE *)(v4 + 80) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_21F64FE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F64FE1C()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB358 + dword_2554DB358);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_21F64FEB8;
    v3 = v5;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t sub_21F64FEB8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_BYTE *)(v4 + 80) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_21F64FF38()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_BYTE *)(v0 + 80);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64FF50()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F64FF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F64FF9C()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB350 + dword_2554DB350);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_21F64FD84;
    v3 = v5;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t sub_21F650038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F650050()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB338 + dword_2554DB338);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_21F64FD84;
    v3 = v5;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t PASSourceAppleIDExchanger.fetchProxiedAKDevice()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = v0;
  return swift_task_switch();
}

uint64_t sub_21F650104()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger fetchProxiedAKDevice", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 72);

  v6 = v5 + 4;
  v7 = v5[7];
  v8 = v5[8];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v9;
  *v9 = v0;
  v9[1] = sub_21F65023C;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F65023C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6502A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[6];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v4 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[12] = v4;
  v5 = swift_task_alloc();
  v0[13] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F650354;
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v3;
  v6 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(v5 + 48) = v1;
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_WORD *)(v5 + 112) = 258;
  *(_QWORD *)(v5 + 16) = v0 + 7;
  *(_QWORD *)(v5 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F650354()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_21F6503C0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  sub_21F647CD4(v2, v1);
  v3 = (void *)sub_21F715D68();
  sub_21F649BB0(v2, v1);
  v4 = objc_msgSend((id)objc_opt_self(), sel_deviceWithSerializedData_, v3);

  if (v4)
  {
    sub_21F649BB0(v2, v1);
    (*(void (**)(id))(v0 + 8))(v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21F65046C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F650478()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASSourceAppleIDExchanger.sendAuthResults(_:familyMember:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[30] = a2;
  v3[31] = v2;
  v3[29] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6504D4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger sendAuthResults", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 240);

  if (v5
    && (v6 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 240) + 16), sel_dictionary)) != 0)
  {
    v7 = v6;
    v8 = sub_21F716044();

  }
  else
  {
    v8 = sub_21F640AEC(MEMORY[0x24BEE4AF8]);
  }
  v9 = *(_QWORD *)(v0 + 232);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E24A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717F00;
  *(_BYTE *)(inited + 32) = 2;
  *(_QWORD *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  *(_QWORD *)(inited + 40) = v9;
  *(_BYTE *)(inited + 72) = 3;
  *(_QWORD *)(inited + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
  *(_QWORD *)(inited + 80) = v8;
  swift_bridgeObjectRetain();
  v11 = sub_21F640C2C(inited);
  if (v5)
  {
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v12 + 32);
    if (v13 >> 60 != 15)
    {
      v14 = *(_QWORD *)(v12 + 24);
      *(_QWORD *)(v0 + 192) = MEMORY[0x24BDCDDE8];
      *(_QWORD *)(v0 + 168) = v14;
      *(_QWORD *)(v0 + 176) = v13;
      sub_21F644FEC((_OWORD *)(v0 + 168), (_OWORD *)(v0 + 200));
      sub_21F647CD4(v14, v13);
      sub_21F647CD4(v14, v13);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_21F6452EC((_OWORD *)(v0 + 200), 4, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_21F649B9C(v14, v13);
    }
  }
  *(_QWORD *)(v0 + 256) = v11;
  v16 = *(_QWORD **)(v0 + 248);
  v17 = v16[7];
  v18 = v16[8];
  __swift_project_boxed_opaque_existential_1(v16 + 4, v17);
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v18 + 16) + *(_QWORD *)(v18 + 16));
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v19;
  *v19 = v0;
  v19[1] = sub_21F650780;
  return v21(v0 + 128, v17, v18);
}

uint64_t sub_21F650780()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6507EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[19];
  v2 = v0[20];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  v4 = swift_task_alloc();
  v0[35] = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_21F650888;
  v5 = v0[32];
  *(_QWORD *)(v4 + 64) = v2;
  *(_QWORD *)(v4 + 72) = v3;
  v6 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v4 + 48) = v1;
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = v5;
  *(_WORD *)(v4 + 112) = 257;
  *(_QWORD *)(v4 + 16) = v0 + 37;
  *(_QWORD *)(v4 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F650888()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6508F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 296);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F650930()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F650940()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t PASSourceAppleIDExchanger.sendReset()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_21F65099C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger sendReset", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 56);

  v6 = v5 + 4;
  v7 = v5[7];
  v8 = v5[8];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v9;
  *v9 = v0;
  v9[1] = sub_21F650AD4;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F650AD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F650B38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[5];
  v2 = v0[6];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v4 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[10] = v4;
  v5 = swift_task_alloc();
  v0[11] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F650BEC;
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v3;
  v6 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 48) = v1;
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_WORD *)(v5 + 112) = 264;
  *(_QWORD *)(v5 + 16) = v0 + 13;
  *(_QWORD *)(v5 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F650BEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t PASSourceAppleIDExchanger.sendCancelFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_21F650C70()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger sendCancelFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 56);

  v6 = v5 + 4;
  v7 = v5[7];
  v8 = v5[8];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v9;
  *v9 = v0;
  v9[1] = sub_21F650DA8;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F650DA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F650E0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[5];
  v2 = v0[6];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v4 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[10] = v4;
  v5 = swift_task_alloc();
  v0[11] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F650BEC;
  *(_QWORD *)(v5 + 72) = v3;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 48) = v1;
  *(_OWORD *)(v5 + 24) = xmmword_21F717F10;
  *(_WORD *)(v5 + 112) = 9;
  *(_QWORD *)(v5 + 16) = v0 + 13;
  return swift_task_switch();
}

uint64_t PASSourceAppleIDExchanger.sendEndFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_21F650EE4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger sendEndFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD **)(v0 + 56);

  v6 = v5 + 4;
  v7 = v5[7];
  v8 = v5[8];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v9;
  *v9 = v0;
  v9[1] = sub_21F65101C;
  return v11(v0 + 16, v7, v8);
}

uint64_t sub_21F65101C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F651080()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[5];
  v2 = v0[6];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v4 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[10] = v4;
  v5 = swift_task_alloc();
  v0[11] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F651140;
  *(_QWORD *)(v5 + 72) = v3;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 48) = v1;
  *(_OWORD *)(v5 + 24) = xmmword_21F717F10;
  *(_WORD *)(v5 + 112) = 10;
  *(_QWORD *)(v5 + 16) = v0 + 13;
  return swift_task_switch();
}

uint64_t sub_21F651140()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6511AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6511E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6511F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F65123C()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v0 + 16);
}

uint64_t sub_21F651280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_21F6512E0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x2207CC5BC](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_21F64E9C0;
}

void sub_21F65134C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_21F6513BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  v2[24] = v0;
  return swift_task_switch();
}

uint64_t sub_21F651418()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F651460()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F6514BC;
  v2[9] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6514BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_21F651510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_21F656994;
  v6[30] = a2;
  v6[31] = v2;
  v6[29] = a1;
  return swift_task_switch();
}

uint64_t sub_21F651580()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656994;
  v2[7] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6515DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656994;
  v2[7] = v0;
  return swift_task_switch();
}

uint64_t sub_21F651638()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651694;
  v2[7] = v0;
  return swift_task_switch();
}

uint64_t sub_21F651694(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t PASTargetAppleIDExchanger.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v0 + 136);
}

uint64_t PASTargetAppleIDExchanger.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 144) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PASTargetAppleIDExchanger.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x2207CC5BC](v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v3[3] = v4;
  v3[4] = v5;
  return sub_21F651800;
}

_QWORD *sub_21F651804(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  v7 = (_QWORD *)v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v6 + 128) = v14;
  *(_QWORD *)(v6 + 144) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v6 + 152) = 0;
  if (qword_2554DA718 != -1)
    swift_once();
  v15 = sub_21F715F3C();
  __swift_project_value_buffer(v15, (uint64_t)static PASLogger.common);
  v16 = sub_21F715F24();
  v17 = sub_21F716350();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_21F63C000, v16, v17, "PASTargetAppleIDExchanger init", v18, 2u);
    MEMORY[0x2207CC514](v18, -1, -1);
  }

  sub_21F64756C(a1, (uint64_t)(v7 + 2));
  v7[7] = a2;
  v7[8] = a3;
  v7[9] = a4;
  v7[10] = a5;
  sub_21F64756C(a6, (uint64_t)(v7 + 11));
  return v7;
}

uint64_t PASTargetAppleIDExchanger.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASTargetAppleIDExchanger deinit", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 16);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 88);
  swift_release();
  sub_21F653C88(v1 + 136);
  return v1;
}

uint64_t PASTargetAppleIDExchanger.__deallocating_deinit()
{
  PASTargetAppleIDExchanger.deinit();
  return swift_deallocClassInstance();
}

uint64_t PASTargetAppleIDExchanger.registerForRequests()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 352) = v0;
  return swift_task_switch();
}

uint64_t sub_21F651AA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 360) = sub_21F7162A8();
  *(_QWORD *)(v0 + 368) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F651B0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 352);
  swift_release();
  *(_BYTE *)(v0 + 456) = *(_BYTE *)(v1 + 152);
  return swift_task_switch();
}

uint64_t sub_21F651B54()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 456) == 1)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716374();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger re-registered", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

  }
  sub_21F647710(*(_QWORD *)(v0 + 352) + 16, v0 + 16);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v7;
  *v7 = v0;
  v7[1] = sub_21F651CA8;
  return v9(v0 + 56, v5, v6);
}

uint64_t sub_21F651CA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F651D0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[44] + 16;
  v2 = v0[10];
  v3 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v2);
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1890);
  sub_21F64AC5C(2u, 0, (uint64_t)&unk_2554DB000, v4, v2, v5, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  sub_21F647710(v1, (uint64_t)(v0 + 22));
  v6 = v0[25];
  v7 = v0[26];
  __swift_project_boxed_opaque_existential_1(v0 + 22, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[49] = v8;
  *v8 = v0;
  v8[1] = sub_21F651E4C;
  return v10(v0 + 27, v6, v7);
}

uint64_t sub_21F651E4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F651EB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[44] + 16;
  v2 = v0[30];
  v3 = v0[31];
  __swift_project_boxed_opaque_existential_1(v0 + 27, v2);
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF18);
  v0[51] = v5;
  sub_21F64AC5C(8u, 0, (uint64_t)&unk_2554DB018, v4, v2, v5, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 27));
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 22));
  sub_21F647710(v1, (uint64_t)(v0 + 32));
  v6 = v0[35];
  v7 = v0[36];
  __swift_project_boxed_opaque_existential_1(v0 + 32, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[52] = v8;
  *v8 = v0;
  v8[1] = sub_21F651FF4;
  return v10(v0 + 37, v6, v7);
}

uint64_t sub_21F651FF4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F652058()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[51];
  v2 = v0[44];
  v3 = v0[40];
  v4 = v0[41];
  __swift_project_boxed_opaque_existential_1(v0 + 37, v3);
  v5 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(9u, 0, (uint64_t)&unk_2554DB028, v5, v3, v1, v4);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 37));
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 32));
  sub_21F647710(v2 + 16, (uint64_t)(v0 + 17));
  v6 = v0[20];
  v7 = v0[21];
  __swift_project_boxed_opaque_existential_1(v0 + 17, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[54] = v8;
  *v8 = v0;
  v8[1] = sub_21F65218C;
  return v10(v0 + 12, v6, v7);
}

uint64_t sub_21F65218C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6521F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[51];
  v2 = v0[15];
  v3 = v0[16];
  __swift_project_boxed_opaque_existential_1(v0 + 12, v2);
  v4 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(0xAu, 0, (uint64_t)&unk_2554DB038, v4, v2, v1, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 12));
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 17));
  v0[56] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6522F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 352);
  swift_release();
  *(_BYTE *)(v1 + 152) = 1;
  return swift_task_switch();
}

uint64_t sub_21F65233C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger did registerForRequests", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F652418()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  v1 = *(void **)(v0 + 384);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 344) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 336) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASTargetAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F652608()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 176);
  v1 = *(void **)(v0 + 400);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 344) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 336) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASTargetAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6527F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 256);
  v1 = *(void **)(v0 + 424);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 344) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 336) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASTargetAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6529E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
  v1 = *(void **)(v0 + 440);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v13 = v8;
    *(_QWORD *)(v0 + 344) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 336) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASTargetAppleIDExchanger failed to registerForRequests. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F652BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F652BF0()
{
  _QWORD *v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v0[7] = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB048 + dword_2554DB048);
    v2 = (_QWORD *)swift_task_alloc();
    v0[8] = v2;
    *v2 = v0;
    v2[1] = sub_21F652C90;
    v3 = v5;
  }
  else
  {
    *(_OWORD *)v0[5] = xmmword_21F717E50;
    v3 = (uint64_t (*)(void))v0[1];
  }
  return v3();
}

uint64_t sub_21F652C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 72) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    swift_release();
    *(_QWORD *)(v6 + 80) = a2;
    *(_QWORD *)(v6 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F652D10()
{
  uint64_t v0;

  *(int8x16_t *)*(_QWORD *)(v0 + 40) = vextq_s8(*(int8x16_t *)(v0 + 80), *(int8x16_t *)(v0 + 80), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASTargetAppleIDExchanger.handleProxiedAKDevice@Sendable (options:request:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_2554DB048 + dword_2554DB048);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F652D84;
  return v3();
}

uint64_t sub_21F652D84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_21F652DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F652E00()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB330 + dword_2554DB330);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_21F64FD84;
    v3 = v5;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t sub_21F652E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F652EB4()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB328 + dword_2554DB328);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_21F64FD84;
    v3 = v5;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t sub_21F652F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F652F68()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t (*v3)(void);
  uint64_t (*v5)(void);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(void))((char *)&dword_2554DB320 + dword_2554DB320);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_21F64FD84;
    v3 = v5;
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 2;
    v3 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v3();
}

uint64_t PASTargetAppleIDExchanger.sendReset()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_21F65301C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger sendReset", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[12];

  sub_21F647710(v5 + 16, (uint64_t)(v0 + 2));
  v6 = v0[5];
  v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_21F653168;
  return v10(v0 + 7, v6, v7);
}

uint64_t sub_21F653168()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6531CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[10];
  v2 = v0[11];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v4 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[15] = v4;
  v5 = swift_task_alloc();
  v0[16] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F653280;
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 72) = v3;
  v6 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 48) = v1;
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = v4;
  *(_WORD *)(v5 + 112) = 264;
  *(_QWORD *)(v5 + 16) = v0 + 18;
  *(_QWORD *)(v5 + 24) = 0;
  return swift_task_switch();
}

uint64_t sub_21F653280()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t PASTargetAppleIDExchanger.sendCancelFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_21F653304()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger sendCancelFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[12];

  sub_21F647710(v5 + 16, (uint64_t)(v0 + 2));
  v6 = v0[5];
  v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_21F653450;
  return v10(v0 + 7, v6, v7);
}

uint64_t sub_21F653450()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6534B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[10];
  v2 = v0[11];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v4 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[15] = v4;
  v5 = swift_task_alloc();
  v0[16] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F653280;
  *(_QWORD *)(v5 + 72) = v3;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 48) = v1;
  *(_OWORD *)(v5 + 24) = xmmword_21F717F10;
  *(_WORD *)(v5 + 112) = 9;
  *(_QWORD *)(v5 + 16) = v0 + 18;
  return swift_task_switch();
}

uint64_t PASTargetAppleIDExchanger.sendEndFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_21F65358C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger sendEndFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[12];

  sub_21F647710(v5 + 16, (uint64_t)(v0 + 2));
  v6 = v0[5];
  v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  v10 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_21F6536D8;
  return v10(v0 + 7, v6, v7);
}

uint64_t sub_21F6536D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F65373C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;

  v1 = v0[10];
  v2 = v0[11];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v4 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[15] = v4;
  v5 = swift_task_alloc();
  v0[16] = v5;
  *(_QWORD *)v5 = v0;
  *(_QWORD *)(v5 + 8) = sub_21F6537FC;
  *(_QWORD *)(v5 + 72) = v3;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE1328];
  *(_QWORD *)(v5 + 64) = v2;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 48) = v1;
  *(_OWORD *)(v5 + 24) = xmmword_21F717F10;
  *(_WORD *)(v5 + 112) = 10;
  *(_QWORD *)(v5 + 16) = v0 + 18;
  return swift_task_switch();
}

uint64_t sub_21F6537FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F653868()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 144);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6538B0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6538E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F653940()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v0 + 136);
}

uint64_t sub_21F653984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 144) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_21F6539E4(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x2207CC5BC](v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v3[3] = v4;
  v3[4] = v5;
  return sub_21F651800;
}

void sub_21F653A50(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 144) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_21F653AC0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656988;
  v2[44] = v0;
  return swift_task_switch();
}

uint64_t sub_21F653B1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_2554DB048 + dword_2554DB048);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F65699C;
  return v3();
}

uint64_t sub_21F653B74()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656994;
  v2[12] = v0;
  return swift_task_switch();
}

uint64_t sub_21F653BD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656994;
  v2[12] = v0;
  return swift_task_switch();
}

uint64_t sub_21F653C2C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656994;
  v2[12] = v0;
  return swift_task_switch();
}

uint64_t sub_21F653C88(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_21F653CD0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F653CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F653D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F651418;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F653DB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F653E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F653E74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F653ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F653F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F653F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

void sub_21F653FF4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_2554DA718 != -1)
    swift_once();
  v10 = sub_21F715F3C();
  __swift_project_value_buffer(v10, (uint64_t)static PASLogger.common);
  sub_21F65604C(a5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F65604C(a5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_21F715F24();
  v12 = sub_21F716350();
  if (os_log_type_enabled(v11, v12))
  {
    v20 = a1;
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v21 = v14;
    *(_DWORD *)v13 = 136446722;
    sub_21F65604C(a5);
    v15 = sub_21F64AA40(a5);
    v17 = v16;
    sub_21F655E14(a5);
    sub_21F644208(v15, v17, &v21);
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F655E14(a5);
    sub_21F655E14(a5);
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_21F644208(v20, a2, &v21);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 22) = 2082;
    if (a4)
      v18 = a3;
    else
      v18 = 0;
    if (a4)
      v19 = a4;
    else
      v19 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_21F644208(v18, v19, &v21);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v11, v12, "PASMessageSession %{public}s - requestID %{public}s - %{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v14, -1, -1);
    MEMORY[0x2207CC514](v13, -1, -1);

  }
  else
  {
    sub_21F655E14(a5);
    sub_21F655E14(a5);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_21F6542B4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *__return_ptr, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  _OWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  _QWORD *v50;
  uint64_t v51;
  _OWORD v52[2];
  _OWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char v56;

  v46 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v47 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  v45 = a5;
  if (v9)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v13 = v10 + 1;
    if (!__OFADD__(v10, 1))
    {
      if (v13 < v47)
      {
        v14 = *(_QWORD *)(v46 + 8 * v13);
        ++v10;
        if (v14)
          goto LABEL_23;
        v10 = v13 + 1;
        if (v13 + 1 >= v47)
          return swift_release();
        v14 = *(_QWORD *)(v46 + 8 * v10);
        if (v14)
          goto LABEL_23;
        v10 = v13 + 2;
        if (v13 + 2 >= v47)
          return swift_release();
        v14 = *(_QWORD *)(v46 + 8 * v10);
        if (v14)
          goto LABEL_23;
        v10 = v13 + 3;
        if (v13 + 3 >= v47)
          return swift_release();
        v14 = *(_QWORD *)(v46 + 8 * v10);
        if (v14)
        {
LABEL_23:
          v9 = (v14 - 1) & v14;
          for (i = __clz(__rbit64(v14)) + (v10 << 6); ; i = v11 | (v10 << 6))
          {
            v16 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + i);
            v56 = v16;
            a3(&v54, &v56);
            if (*(_QWORD *)(a5 + 16))
            {
              v17 = sub_21F6449C4(v16);
              if ((v18 & 1) != 0)
                break;
            }
            v33 = v54;
            v32 = v55;
            swift_bridgeObjectRetain();
            v34 = sub_21F6448D8(v33, v32);
            v36 = v35;
            swift_bridgeObjectRelease();
            if ((v36 & 1) != 0)
            {
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v38 = *a2;
              v51 = *a2;
              *a2 = 0x8000000000000000;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_21F6F9410();
                v38 = v51;
              }
              swift_bridgeObjectRelease();
              sub_21F644FEC((_OWORD *)(*(_QWORD *)(v38 + 56) + 32 * v34), v52);
              sub_21F6F8D04(v34, v38);
              *a2 = v38;
              swift_bridgeObjectRelease();
            }
            else
            {
              memset(v52, 0, sizeof(v52));
            }
            swift_bridgeObjectRelease();
            sub_21F6476AC((uint64_t)v52, &qword_2554DA750);
            if (!v9)
              goto LABEL_8;
LABEL_7:
            v11 = __clz(__rbit64(v9));
            v9 &= v9 - 1;
          }
          sub_21F6429E4(*(_QWORD *)(a5 + 56) + 32 * v17, (uint64_t)v53);
          v19 = v54;
          v20 = v55;
          sub_21F644FEC(v53, v52);
          v21 = swift_isUniquelyReferenced_nonNull_native();
          v22 = *a2;
          v50 = (_QWORD *)*a2;
          *a2 = 0x8000000000000000;
          v24 = sub_21F6448D8(v19, v20);
          v25 = *(_QWORD *)(v22 + 16);
          v26 = (v23 & 1) == 0;
          v27 = v25 + v26;
          if (__OFADD__(v25, v26))
            goto LABEL_45;
          v28 = v23;
          if (*(_QWORD *)(v22 + 24) < v27)
          {
            sub_21F6F7A94(v27, v21);
            v29 = sub_21F6448D8(v19, v20);
            if ((v28 & 1) != (v30 & 1))
              goto LABEL_48;
            v24 = v29;
            v31 = v50;
            if ((v28 & 1) == 0)
              goto LABEL_39;
LABEL_37:
            v39 = (_OWORD *)(v31[7] + 32 * v24);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v39);
            sub_21F644FEC(v52, v39);
            goto LABEL_41;
          }
          if ((v21 & 1) != 0)
          {
            v31 = v50;
            if ((v23 & 1) != 0)
              goto LABEL_37;
          }
          else
          {
            sub_21F6F9410();
            v31 = v50;
            if ((v28 & 1) != 0)
              goto LABEL_37;
          }
LABEL_39:
          v31[(v24 >> 6) + 8] |= 1 << v24;
          v40 = (uint64_t *)(v31[6] + 16 * v24);
          *v40 = v19;
          v40[1] = v20;
          sub_21F644FEC(v52, (_OWORD *)(v31[7] + 32 * v24));
          v41 = v31[2];
          v42 = __OFADD__(v41, 1);
          v43 = v41 + 1;
          if (v42)
            goto LABEL_46;
          v31[2] = v43;
          swift_bridgeObjectRetain();
LABEL_41:
          *a2 = (uint64_t)v31;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a5 = v45;
          if (!v9)
            continue;
          goto LABEL_7;
        }
        v15 = v13 + 4;
        if (v15 < v47)
        {
          v14 = *(_QWORD *)(v46 + 8 * v15);
          if (v14)
          {
            v10 = v15;
            goto LABEL_23;
          }
          while (1)
          {
            v10 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_47;
            if (v10 >= v47)
              return swift_release();
            v14 = *(_QWORD *)(v46 + 8 * v10);
            ++v15;
            if (v14)
              goto LABEL_23;
          }
        }
      }
      return swift_release();
    }
    break;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t sub_21F6546C0()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_21F654708()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21F654720()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger handleReset", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 48) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v7 + 8) + *(_QWORD *)(v7 + 8));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21F654910;
    return v14(ObjectType, v7);
  }
  else
  {
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASSourceAppleIDExchanger handleReset delegate is nil", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F654910(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F65496C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 64));
}

uint64_t sub_21F6549A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6549BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger handleCancel", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 48) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21F654BAC;
    return v14(ObjectType, v7);
  }
  else
  {
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASSourceAppleIDExchanger handleCancel delegate is nil", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F654BAC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F654C08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21F654C20()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceAppleIDExchanger handleEndFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 48) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v7 + 24) + *(_QWORD *)(v7 + 24));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21F654BAC;
    return v14(ObjectType, v7);
  }
  else
  {
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASSourceAppleIDExchanger handleEndFlow delegate is nil", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F654E10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = v0;
  return swift_task_switch();
}

uint64_t sub_21F654E28()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = objc_msgSend((id)objc_opt_self(), sel_representationForPrimaryAccount);
  *(_QWORD *)(v0 + 176) = v1;
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 168);
    v3 = v2[7];
    v4 = v2[8];
    __swift_project_boxed_opaque_existential_1(v2 + 4, v3);
    v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v5;
    *v5 = v0;
    v5[1] = sub_21F654FB0;
    return v11(v0 + 80, v3, v4);
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v8 = sub_21F715F24();
    v9 = sub_21F71635C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, v9, "CDP account is nil", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F654FB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F655014()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint8_t *v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB340);
  sub_21F64779C(0, (unint64_t *)&qword_2554DB348);
  if (swift_dynamicCast())
  {
    v1 = *(void **)(v0 + 176);
    v2 = *(NSObject **)(v0 + 160);
    *(_QWORD *)(v0 + 200) = v2;
    v3 = objc_msgSend(v1, sel_generatedContext);
    *(_QWORD *)(v0 + 208) = v3;
    objc_msgSend(v3, sel_setSharingChannel_, v2);
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE1A490]), sel_initWithContext_, v3);
    *(_QWORD *)(v0 + 216) = v4;
    if (v4)
    {
      v5 = v4;
      *(_QWORD *)(v0 + 56) = v0 + 232;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_21F655304;
      v6 = swift_continuation_init();
      *(_QWORD *)(v0 + 120) = MEMORY[0x24BDAC760];
      v7 = (_QWORD *)(v0 + 120);
      v7[1] = 0x40000000;
      v7[2] = sub_21F6FED2C;
      v7[3] = &block_descriptor;
      v7[4] = v6;
      objc_msgSend(v5, sel_startCircleApplicationApprovalServer_, v7);
      return swift_continuation_await();
    }
    if (qword_2554DA718 != -1)
      swift_once();
    v13 = sub_21F715F3C();
    __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
    v14 = sub_21F715F24();
    v15 = sub_21F71635C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(void **)(v0 + 176);
    if (v16)
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21F63C000, v14, v15, "Unable to instantiate CDPStateController", v18, 2u);
      MEMORY[0x2207CC514](v18, -1, -1);

    }
    else
    {

      v3 = v17;
      v2 = v14;
    }
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v9 = sub_21F715F3C();
    __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v10 = sub_21F71635C();
    v11 = os_log_type_enabled(v2, v10);
    v3 = *(id *)(v0 + 176);
    if (v11)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_21F63C000, v2, v10, "Failed to cast generic message session as CUMessageSession", v12, 2u);
      MEMORY[0x2207CC514](v12, -1, -1);
    }
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F655304()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_21F655364()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 176);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 232));
}

uint64_t sub_21F6553B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6553F0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 216);
  v3 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 208);
  v4 = *(void **)(v0 + 176);
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F655450()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

id sub_21F655468()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger PASAppleIDExchangeMessage.proxiedAKDevice message", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  v6 = (void *)(*(uint64_t (**)(void))(v5 + 72))();
  if (v6)
  {
    v7 = v6;
    result = objc_msgSend(v6, sel_serializedData);
    if (result)
    {
      v9 = result;
      v10 = sub_21F715D80();
      v12 = v11;

      return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v12);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_21F655884();
    swift_allocError();
    *(_OWORD *)v13 = xmmword_21F717F20;
    *(_BYTE *)(v13 + 16) = 0;
    swift_willThrow();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t type metadata accessor for PASSourceAppleIDExchanger()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASTargetAppleIDExchanger()
{
  return objc_opt_self();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PASDataExchangeRequestKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PASDataExchangeRequestKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_21F655720 + 4 * byte_21F717F45[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_21F655754 + 4 * byte_21F717F40[v4]))();
}

uint64_t sub_21F655754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F65575C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F655764);
  return result;
}

uint64_t sub_21F655770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F655778);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_21F65577C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F655784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F655790(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_21F65579C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PASDataExchangeRequestKey()
{
  return &type metadata for PASDataExchangeRequestKey;
}

unint64_t sub_21F6557B8()
{
  unint64_t result;

  result = qword_2554DB258;
  if (!qword_2554DB258)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7181C4, &type metadata for PASDataExchangeRequestKey);
    atomic_store(result, (unint64_t *)&qword_2554DB258);
  }
  return result;
}

unint64_t sub_21F6557FC()
{
  unint64_t result;

  result = qword_2554DB260;
  if (!qword_2554DB260)
  {
    result = MEMORY[0x2207CC46C](&unk_21F718184, &type metadata for PASDataExchangeRequestKey);
    atomic_store(result, (unint64_t *)&qword_2554DB260);
  }
  return result;
}

unint64_t sub_21F655840()
{
  unint64_t result;

  result = qword_2554DB270;
  if (!qword_2554DB270)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C604, &type metadata for PASMessageSessionError);
    atomic_store(result, (unint64_t *)&qword_2554DB270);
  }
  return result;
}

unint64_t sub_21F655884()
{
  unint64_t result;

  result = qword_2554DB278;
  if (!qword_2554DB278)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7182F4, &type metadata for PASTargetAppleIDExchangerError);
    atomic_store(result, (unint64_t *)&qword_2554DB278);
  }
  return result;
}

unint64_t sub_21F6558C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554DB280;
  if (!qword_2554DB280)
  {
    v1 = type metadata accessor for PASDeviceContext();
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDeviceContext, v1);
    atomic_store(result, (unint64_t *)&qword_2554DB280);
  }
  return result;
}

unint64_t sub_21F655910()
{
  unint64_t result;

  result = qword_2554DB290;
  if (!qword_2554DB290)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDevice, &type metadata for PASDevice);
    atomic_store(result, &qword_2554DB290);
  }
  return result;
}

uint64_t sub_21F655954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F6559FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v14;

  v4 = *(_QWORD *)(v1 + 48);
  v14 = *(_OWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 56);
  v8 = *(_OWORD *)(v1 + 96);
  v9 = *(_OWORD *)(v1 + 32);
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 32) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v1 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8));
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_21F656988;
  *(_QWORD *)(v6 + 112) = v4;
  *(_OWORD *)(v6 + 96) = v9;
  *(_QWORD *)(v6 + 80) = v1 + v11;
  *(_QWORD *)(v6 + 88) = v12;
  *(_OWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 56) = v5;
  *(_OWORD *)(v6 + 40) = v14;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F655AD4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F655B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 56);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_21F656988;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch();
}

uint64_t sub_21F655B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;

  v4 = *(_QWORD *)(v1 + 32);
  v13 = *(_OWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v1 + 40);
  v10 = *(_OWORD *)(v1 + 80);
  v11 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_21F656988;
  *(_QWORD *)(v8 + 112) = v4;
  *(_OWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 80) = v6;
  *(_QWORD *)(v8 + 88) = v7;
  *(_OWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 56) = v5;
  *(_OWORD *)(v8 + 40) = v13;
  *(_OWORD *)(v8 + 24) = v9;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch();
}

void sub_21F655C30()
{
  uint64_t v0;

  sub_21F64CA9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_21F655C38(uint64_t a1)
{
  uint64_t v1;

  return sub_21F64C600(a1, *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD **)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2207CC460](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_21F655CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v1 = sub_21F71626C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21F655D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_21F71626C() - 8) + 80);
  return sub_21F64C8D0(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), v3 + ((v9 + 96) & ~v9), v8, v7);
}

void sub_21F655E14(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return;
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }

}

uint64_t sub_21F655E30()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F655E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_21F64AF3C(a1, a2, a3, a4, *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_21F655E9C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F655EF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v11 = v1[2];
  v10 = v1[3];
  v3 = v1[7];
  v4 = v1[8];
  v5 = v1[9];
  v6 = v1[10];
  v7 = v1[11];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_21F656988;
  return sub_21F64B1B4(a1, v11, v10, v3, v4, v5, v6, v7);
}

uint64_t sub_21F655FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_21F656988;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

unint64_t sub_21F65604C(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

uint64_t sub_21F656068()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21F656080()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger handleReset", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 136);
  *(_QWORD *)(v0 + 48) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 144);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v7 + 8) + *(_QWORD *)(v7 + 8));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21F654BAC;
    return v14(ObjectType, v7);
  }
  else
  {
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASTargetAppleIDExchanger handleReset delegate is nil", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F656270()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21F656288()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger handleCancel", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 136);
  *(_QWORD *)(v0 + 48) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 144);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21F654BAC;
    return v14(ObjectType, v7);
  }
  else
  {
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASTargetAppleIDExchanger handleCancel delegate is nil", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F656478()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_task_switch();
}

uint64_t sub_21F656490()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetAppleIDExchanger handleEndFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 136);
  *(_QWORD *)(v0 + 48) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 144);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v7 + 24) + *(_QWORD *)(v7 + 24));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v9;
    *v9 = v0;
    v9[1] = sub_21F654BAC;
    return v14(ObjectType, v7);
  }
  else
  {
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASTargetAppleIDExchanger handleEndFlow delegate is nil", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F656680()
{
  return swift_deallocObject();
}

uint64_t sub_21F656694(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for PASTargetAppleIDExchangerError(uint64_t a1)
{
  return sub_21F6566BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_21F6566BC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s21ProximityAppleIDSetup30PASTargetAppleIDExchangerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F656694(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PASTargetAppleIDExchangerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F656694(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_21F6566BC(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PASTargetAppleIDExchangerError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_21F6566BC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PASTargetAppleIDExchangerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PASTargetAppleIDExchangerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F656854(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_21F65685C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PASTargetAppleIDExchangerError()
{
  return &type metadata for PASTargetAppleIDExchangerError;
}

unint64_t sub_21F656878(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6568AC();
  a1[2] = sub_21F6568F0();
  result = sub_21F656934();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6568AC()
{
  unint64_t result;

  result = qword_2554DB370;
  if (!qword_2554DB370)
  {
    result = MEMORY[0x2207CC46C](&unk_21F718298, &type metadata for PASTargetAppleIDExchangerError);
    atomic_store(result, (unint64_t *)&qword_2554DB370);
  }
  return result;
}

unint64_t sub_21F6568F0()
{
  unint64_t result;

  result = qword_2554DB378;
  if (!qword_2554DB378)
  {
    result = MEMORY[0x2207CC46C](&unk_21F718250, &type metadata for PASTargetAppleIDExchangerError);
    atomic_store(result, (unint64_t *)&qword_2554DB378);
  }
  return result;
}

unint64_t sub_21F656934()
{
  unint64_t result;

  result = qword_2554DB380;
  if (!qword_2554DB380)
  {
    result = MEMORY[0x2207CC46C](&unk_21F718228, &type metadata for PASTargetAppleIDExchangerError);
    atomic_store(result, (unint64_t *)&qword_2554DB380);
  }
  return result;
}

uint64_t sub_21F6569AC@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAA48, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63F19C, a1);
}

uint64_t sub_21F6569C8@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAB80, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63EBA0, a1);
}

uint64_t sub_21F6569E4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD *, uint64_t)@<X1>, void (*a3)(_QWORD *__return_ptr)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _BYTE v10[40];
  _BYTE v11[40];
  _QWORD v12[5];

  swift_beginAccess();
  sub_21F647624(v4 + 16, (uint64_t)v12, a1);
  if (v12[3])
    return a2(v12, a4);
  sub_21F6476AC((uint64_t)v12, a1);
  if (qword_2554DA6A0 != -1)
    swift_once();
  a3(v12);
  sub_21F647710((uint64_t)v12, a4);
  sub_21F647710((uint64_t)v12, (uint64_t)v11);
  sub_21F658D18((uint64_t)v11, (uint64_t)v10, a1);
  swift_beginAccess();
  sub_21F658D5C((uint64_t)v10, v4 + 16, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
}

uint64_t sub_21F656B08@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAB98, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63F178, a1);
}

uint64_t sub_21F656B24@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAA98, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63F1C0, a1);
}

uint64_t sub_21F656B40@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAB58, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63EB60, a1);
}

uint64_t sub_21F656B5C@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAAE8, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63F79C, a1);
}

uint64_t sub_21F656B78@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAAC0, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63FD60, a1);
}

uint64_t sub_21F656B94@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAA68, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63FD98, a1);
}

uint64_t sub_21F656BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6569E4(&qword_2554DAA80, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63FDE0, a1);
}

uint64_t sub_21F656BCC()
{
  return 1;
}

uint64_t sub_21F656BD4()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F656C28()
{
  return sub_21F716134();
}

uint64_t sub_21F656C44()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F656C94@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21F656CE4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x800000021F725BA0;
}

uint64_t sub_21F656D04()
{
  return 3700;
}

uint64_t sub_21F656D14()
{
  sub_21F658FB8();
  return sub_21F7168C0();
}

uint64_t sub_21F656D3C()
{
  sub_21F658FB8();
  return sub_21F7168B4();
}

uint64_t sub_21F656D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount__deviceProvider);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 24);
    swift_retain();
  }
  else
  {
    v3 = qword_2554DA6A0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_21F63EB84();
    v2 = v5;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 16))(v10, ObjectType, v2);
  swift_unknownObjectRelease();
  v7 = v11;
  if (v11)
  {
    v8 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    if (qword_2554DA6D8 != -1)
      swift_once();
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 24))(static PASDeviceCapability.signInForSelf, unk_2554E5140, v7, v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  }
  else
  {
    sub_21F6476AC((uint64_t)v10, &qword_2554DA770);
  }
  return v7 & 1;
}

uint64_t PASFlowStepSendPersonalAccount.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[30] = v0;
  sub_21F7162A8();
  v1[31] = sub_21F71629C();
  v1[32] = sub_21F716248();
  v1[33] = v2;
  return swift_task_switch();
}

uint64_t sub_21F656F48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v1;
  *v1 = v0;
  v1[1] = sub_21F656FB4;
  v2 = *(_QWORD *)(v0 + 240);
  v1[23] = v2;
  v1[24] = v2;
  return swift_task_switch();
}

uint64_t sub_21F656FB4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 65) = a1;
  *(_QWORD *)(v3 + 280) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F657020()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepSendPersonalAccount setting target account", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(unsigned __int8 *)(v0 + 65);
  v6 = *(_QWORD *)(v0 + 240);

  swift_retain();
  sub_21F6569E4(&qword_2554DAB58, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63EB60, v0 + 72);
  swift_release();
  v8 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), v8);
  v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount_selectedAccount);
  v35 = type metadata accessor for PASAccountWithImage();
  *(_QWORD *)(v0 + 136) = v35;
  v10 = sub_21F647438(&qword_2554DE3E0, (uint64_t (*)(uint64_t))type metadata accessor for PASAccountWithImage, (uint64_t)&protocol conformance descriptor for PASAccountWithImage);
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 176) = &type metadata for PASAccountContextExistingAccount;
  *(_QWORD *)(v0 + 184) = &off_24E452508;
  v34 = v10;
  *(_QWORD *)(v0 + 144) = v10;
  *(_QWORD *)(v0 + 152) = 0;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40);
  swift_retain();
  v11(v0 + 112, v0 + 152, v8, v7);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 152);
  sub_21F6476AC(v0 + 112, &qword_2554DEF00);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
  if (v5 == 1)
  {
    swift_release();
    v12 = sub_21F715F24();
    v13 = sub_21F716344();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21F63C000, v12, v13, "shouldSignInForSelf after sending .selectedOwnAccount message", v14, 2u);
      MEMORY[0x2207CC514](v14, -1, -1);
    }
    v15 = *(_QWORD *)(v0 + 240);

    v16 = v15 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v17 = MEMORY[0x2207CC5BC](v16);
    v18 = *(_QWORD *)(v16 + 8);
    type metadata accessor for PASFlowStepSignInResult();
    v19 = swift_allocObject();
    v20 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__messageSessionProvider;
    __swift_instantiateConcreteTypeFromMangledName(qword_2554DA840);
    v21 = swift_allocObject();
    *(_QWORD *)(v19 + v20) = v21;
    *(_QWORD *)(v21 + 16) = 0;
    v22 = (_QWORD *)(v19 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep);
    *v22 = 0;
    v22[1] = 0;
    v23 = sub_21F6BC954(v17, v18);
    swift_unknownObjectRelease();
    *(_QWORD *)(v15 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount_nextFlowStep) = v23;
    swift_release();
    PASFlowStepBase.setFinished()();
  }
  else
  {
    v24 = sub_21F715F24();
    v25 = sub_21F716344();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_21F63C000, v24, v25, "After sending .selectedOwnAccount message, we were told to NOT sign in for self", v26, 2u);
      MEMORY[0x2207CC514](v26, -1, -1);
    }
    v27 = *(_QWORD *)(v0 + 240);

    v28 = v27 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v29 = MEMORY[0x2207CC5BC](v28);
    *(_QWORD *)(v0 + 288) = v29;
    if (v29)
    {
      v30 = *(_QWORD *)(v28 + 8);
      ObjectType = swift_getObjectType();
      *(_QWORD *)(v0 + 40) = v35;
      *(_QWORD *)(v0 + 48) = v34;
      *(_QWORD *)(v0 + 16) = v9;
      *(_QWORD *)(v0 + 56) = 0;
      *(_BYTE *)(v0 + 64) = 0;
      v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v30 + 16) + *(_QWORD *)(v30 + 16));
      swift_retain();
      v32 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v32;
      *v32 = v0;
      v32[1] = sub_21F6574A8;
      return v36(v0 + 16, ObjectType, v30);
    }
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6574A8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F6476AC(v1 + 16, (uint64_t *)&unk_2554DB8E0);
  return swift_task_switch();
}

uint64_t sub_21F657518()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F65754C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F657580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  return swift_task_switch();
}

uint64_t sub_21F65759C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[12] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "Target device is indicated as supporting .signInForSelf", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[10];

  swift_retain();
  sub_21F6569E4(&qword_2554DAB80, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63EBA0, (uint64_t)(v0 + 2));
  swift_release();
  v6 = v0[5];
  v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  v8 = *(_QWORD *)(v5 + 16);
  v0[13] = v8;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 56) + *(_QWORD *)(v7 + 56));
  v9 = (_QWORD *)swift_task_alloc();
  v0[14] = v9;
  *v9 = v0;
  v9[1] = sub_21F65771C;
  return v11(v8, v6, v7);
}

uint64_t sub_21F65771C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F657788()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;

  v1 = v0[15];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  if (v1)
  {
    v2 = (void *)v0[15];
    v3 = qword_2554DA6C0;
    v4 = v2;
    if (v3 != -1)
    {
      swift_once();
      v2 = (void *)v0[15];
    }
    v5 = (uint64_t *)v0[9];
    v5[3] = (uint64_t)&type metadata for PASDevice;
    v5[4] = (uint64_t)&protocol witness table for PASDevice;
    v5[5] = sub_21F655910();
    v5[6] = sub_21F658E18();
    v6 = swift_allocObject();
    *v5 = v6;
    sub_21F645048((uint64_t)&static PASDevice.current, v6 + 16);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_QWORD *)(v7 + 48) = 0;
    v5[7] = (uint64_t)v2;
    v5[8] = v7;
    v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_retain_n();
    v9 = sub_21F715F24();
    v10 = sub_21F71635C();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (void *)v0[13];
      v12 = swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 141558274;
      v0[7] = 1752392040;
      sub_21F716428();
      *(_WORD *)(v12 + 12) = 2112;
      v0[8] = v11;
      v14 = v11;
      sub_21F716428();
      *v13 = v11;
      swift_release_n();
      _os_log_impl(&dword_21F63C000, v9, v10, "Unable to find IdMS account associated with Apple Account: %{mask.hash}@", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v13, -1, -1);
      MEMORY[0x2207CC514](v12, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    sub_21F658DD4();
    swift_allocError();
    swift_willThrow();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_21F657A0C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F657A40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 184) = a1;
  *(_QWORD *)(v2 + 192) = a2;
  return swift_task_switch();
}

uint64_t sub_21F657A58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = sub_21F7162A8();
  *(_QWORD *)(v0 + 208) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F657AC4()
{
  uint64_t v0;

  swift_release();
  *(_BYTE *)(v0 + 325) = sub_21F656D64() & 1;
  return swift_task_switch();
}

uint64_t sub_21F657B10()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  if (*(_BYTE *)(v0 + 325) == 1)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v1 = sub_21F715F3C();
    __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
    v2 = sub_21F715F24();
    v3 = sub_21F716344();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_21F63C000, v2, v3, "Sending .selectedOwnAccount message with IdMS account containing credential (for magic auth)", v4, 2u);
      MEMORY[0x2207CC514](v4, -1, -1);
    }

    *(_QWORD *)(v0 + 216) = sub_21F71629C();
    *(_QWORD *)(v0 + 224) = sub_21F716248();
    *(_QWORD *)(v0 + 232) = v5;
    return swift_task_switch();
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v8 = sub_21F715F24();
    v9 = sub_21F716344();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, v9, "Sending .selectedOwnAccount message to legacy target device", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

    *(_QWORD *)(v0 + 280) = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
    swift_retain();
    sub_21F6569E4(&qword_2554DAB98, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63F178, v0 + 128);
    swift_release();
    v11 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 128), v11);
    v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v12 + 16) + *(_QWORD *)(v12 + 16));
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v13;
    *v13 = v0;
    v13[1] = sub_21F6580D8;
    return v14(v0 + 88, v11, v12);
  }
}

uint64_t sub_21F657DA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 192)
                 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount_selectedAccount);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v2;
  *v2 = v0;
  v2[1] = sub_21F657E18;
  v3 = *(_QWORD *)(v0 + 192);
  v2[10] = v1;
  v2[11] = v3;
  v2[9] = v0 + 16;
  return swift_task_switch();
}

uint64_t sub_21F657E18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F657E78()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v1;
  *v1 = v0;
  v1[1] = sub_21F657ECC;
  return sub_21F6F4D20(1);
}

uint64_t sub_21F657ECC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 264) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 272) = a1;
  sub_21F658DA0(v4 + 16);
  return swift_task_switch();
}

uint64_t sub_21F657F54()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F657F90()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F657FC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  v0[35] = v0[34];
  swift_retain();
  sub_21F6569E4(&qword_2554DAB98, (uint64_t (*)(_QWORD *, uint64_t))sub_21F64756C, (void (*)(_QWORD *__return_ptr))sub_21F63F178, (uint64_t)(v0 + 16));
  swift_release();
  v1 = v0[19];
  v2 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[36] = v3;
  *v3 = v0;
  v3[1] = sub_21F6580D8;
  return v5(v0 + 11, v1, v2);
}

uint64_t sub_21F6580A0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6580D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F658144()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 11, v1);
  v2 = (_QWORD *)swift_task_alloc();
  v0[38] = v2;
  *v2 = v0;
  v2[1] = sub_21F6581D8;
  return sub_21F64B604((uint64_t)v0 + 324, 4, 0, 0, 1, v0[35], v1, MEMORY[0x24BEE1328]);
}

uint64_t sub_21F6581D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F658248()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 296);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 168) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 176) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "Failed to send .selectedOwnAccount message: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F658454()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  int v6;

  v1 = *(unsigned __int8 *)(v0 + 324);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716344();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    *(_DWORD *)(v0 + 320) = v1;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v3, v4, "Sent .selectedOwnAccount message with response: %{BOOL,public}d", v5, 8u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  v6 = *(unsigned __int8 *)(v0 + 325);

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v6 & v1);
}

uint64_t sub_21F65859C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  v1 = *(void **)(v0 + 312);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 168) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 176) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "Failed to send .selectedOwnAccount message: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t PASFlowStepSendPersonalAccount.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount_nextFlowStep);
  if (v1)
  {
    sub_21F647438(&qword_2554DB3A8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSignInResult, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
    swift_retain();
  }
  else
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v2 = 0xD000000000000010;
    *(_QWORD *)(v2 + 8) = 0x800000021F726A90;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    *(_BYTE *)(v2 + 32) = 1;
    swift_willThrow();
  }
  return v1;
}

void PASFlowStepSendPersonalAccount.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepSendPersonalAccount.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6588C0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t PASFlowStepSendPersonalAccount.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASFlowStepSendPersonalAccount.__deallocating_deinit()
{
  PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F658A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount_nextFlowStep);
  if (v1)
  {
    sub_21F647438(&qword_2554DB3A8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSignInResult, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
    swift_retain();
  }
  else
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v2 = 0xD000000000000010;
    *(_QWORD *)(v2 + 8) = 0x800000021F726A90;
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    *(_BYTE *)(v2 + 32) = 1;
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_21F658AF4()
{
  unint64_t result;

  result = qword_2554DB8C0;
  if (!qword_2554DB8C0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepError, &type metadata for PASFlowStepError);
    atomic_store(result, &qword_2554DB8C0);
  }
  return result;
}

uint64_t sub_21F658B38(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DB3C8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSendPersonalAccount, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepSendPersonalAccount()
{
  uint64_t result;

  result = qword_2554DB3F8;
  if (!qword_2554DB3F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F658BB0()
{
  return type metadata accessor for PASFlowStepSendPersonalAccount();
}

uint64_t sub_21F658BB8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F658C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v3 + v7) = v8;
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v3 + v9) = v10;
  v11 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v3 + v11) = v12;
  v13 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 + 32) = 0u;
  *(_QWORD *)(v3 + v13) = v14;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount_nextFlowStep) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendPersonalAccount_selectedAccount) = a1;
  return sub_21F6BC954(a2, a3);
}

uint64_t sub_21F658D18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F658D5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_21F658DA0(uint64_t a1)
{
  destroy for PASDeviceAndAccount(a1);
  return a1;
}

unint64_t sub_21F658DD4()
{
  unint64_t result;

  result = qword_2554DB678;
  if (!qword_2554DB678)
  {
    result = MEMORY[0x2207CC46C](&unk_21F718630, &type metadata for PASFlowStepSendPersonalAccountError);
    atomic_store(result, (unint64_t *)&qword_2554DB678);
  }
  return result;
}

unint64_t sub_21F658E18()
{
  unint64_t result;

  result = qword_2554DB680;
  if (!qword_2554DB680)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDevice, &type metadata for PASDevice);
    atomic_store(result, (unint64_t *)&qword_2554DB680);
  }
  return result;
}

uint64_t sub_21F658E5C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t getEnumTagSinglePayload for PASFlowStepSendPersonalAccountError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for PASFlowStepSendPersonalAccountError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F658F1C + 4 * byte_21F718410[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F658F3C + 4 * byte_21F718415[v4]))();
}

_BYTE *sub_21F658F1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F658F3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F658F44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F658F4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F658F54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F658F5C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_21F658F68()
{
  return 0;
}

ValueMetadata *type metadata accessor for PASFlowStepSendPersonalAccountError()
{
  return &type metadata for PASFlowStepSendPersonalAccountError;
}

unint64_t sub_21F658F84(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F658FB8();
  a1[2] = sub_21F658FFC();
  result = sub_21F659040();
  a1[3] = result;
  return result;
}

unint64_t sub_21F658FB8()
{
  unint64_t result;

  result = qword_2554DB688;
  if (!qword_2554DB688)
  {
    result = MEMORY[0x2207CC46C](&unk_21F718534, &type metadata for PASFlowStepSendPersonalAccountError);
    atomic_store(result, (unint64_t *)&qword_2554DB688);
  }
  return result;
}

unint64_t sub_21F658FFC()
{
  unint64_t result;

  result = qword_2554DB690;
  if (!qword_2554DB690)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7184EC, &type metadata for PASFlowStepSendPersonalAccountError);
    atomic_store(result, (unint64_t *)&qword_2554DB690);
  }
  return result;
}

unint64_t sub_21F659040()
{
  unint64_t result;

  result = qword_2554DB698;
  if (!qword_2554DB698)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7184C4, &type metadata for PASFlowStepSendPersonalAccountError);
    atomic_store(result, (unint64_t *)&qword_2554DB698);
  }
  return result;
}

unint64_t sub_21F659088()
{
  unint64_t result;

  result = qword_2554DB6A0;
  if (!qword_2554DB6A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F718608, &type metadata for PASFlowStepSendPersonalAccountError);
    atomic_store(result, (unint64_t *)&qword_2554DB6A0);
  }
  return result;
}

uint64_t Error.codeString.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v23 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11((char *)&v23 - v12, v2, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB6A8);
  if (swift_dynamicCast())
  {
    sub_21F64756C(&v23, (uint64_t)v26);
    v13 = v27;
    v14 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
LABEL_5:
    *(_QWORD *)&v23 = v15;
    v16 = sub_21F7167A0();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
    return v16;
  }
  v25 = 0;
  v23 = 0u;
  v24 = 0u;
  sub_21F6476AC((uint64_t)&v23, &qword_2554DB6B0);
  v11(v10, v2, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB6B8);
  if (swift_dynamicCast())
  {
    sub_21F64756C(&v23, (uint64_t)v26);
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v15 = sub_21F715C78();
    goto LABEL_5;
  }
  v25 = 0;
  v23 = 0u;
  v24 = 0u;
  sub_21F6476AC((uint64_t)&v23, &qword_2554DB6C0);
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  v11(v7, v2, a1);
  v17 = sub_21F7167C4();
  if (v17)
  {
    v18 = (void *)v17;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  }
  else
  {
    v18 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v19, v7, a1);
  }
  v20 = (void *)sub_21F715D44();

  v21 = objc_msgSend(v20, sel_code);
  *(_QWORD *)&v23 = v21;
  sub_21F7167A0();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v26[0];
}

uint64_t String.localized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  v0 = sub_21F715E28();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_21F7160C8();
  MEMORY[0x24BDAC7A8](v1);
  swift_bridgeObjectRetain();
  sub_21F7160D4();
  type metadata accessor for PASSourceFlowController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_21F715E1C();
  return sub_21F71611C();
}

uint64_t String.localized(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;

  v0 = sub_21F715E28();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_21F7160C8();
  MEMORY[0x24BDAC7A8](v1);
  swift_bridgeObjectRetain();
  sub_21F7160D4();
  type metadata accessor for PASSourceFlowController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_21F715E1C();
  sub_21F71611C();
  swift_bridgeObjectRetain();
  v4 = sub_21F716110();
  swift_bridgeObjectRelease();
  return v4;
}

Swift::String __swiftcall String.localized(withName:)(Swift::String_optional withName)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String result;

  object = withName.value._object;
  countAndFlagsBits = withName.value._countAndFlagsBits;
  v3 = sub_21F715E28();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_21F7160C8();
  MEMORY[0x24BDAC7A8](v4);
  swift_bridgeObjectRetain();
  if (object)
  {
    swift_bridgeObjectRetain();
    sub_21F7160D4();
    type metadata accessor for PASSourceFlowController();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    sub_21F715E1C();
    sub_21F71611C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB6C8);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_21F717EF0;
    *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v7 + 64) = sub_21F659860();
    *(_QWORD *)(v7 + 32) = countAndFlagsBits;
    *(_QWORD *)(v7 + 40) = object;
  }
  else
  {
    sub_21F716140();
    swift_bridgeObjectRetain();
    sub_21F7160D4();
    type metadata accessor for PASSourceFlowController();
    v8 = swift_getObjCClassFromMetadata();
    v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v8);
    sub_21F715E1C();
    sub_21F71611C();
    swift_bridgeObjectRelease();
  }
  v10 = sub_21F716110();
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = v10;
  v14 = v12;
  result._object = v14;
  result._countAndFlagsBits = v13;
  return result;
}

unint64_t sub_21F659860()
{
  unint64_t result;

  result = qword_2554DB6D0;
  if (!qword_2554DB6D0)
  {
    result = MEMORY[0x2207CC46C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2554DB6D0);
  }
  return result;
}

BOOL PASAccountProviderError.init(rawValue:)()
{
  uint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

unint64_t PASAccountProviderError.rawValue.getter()
{
  return 0xD000000000000013;
}

unint64_t sub_21F659908()
{
  unint64_t result;

  result = qword_2554DB6D8;
  if (!qword_2554DB6D8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAccountProviderError, &type metadata for PASAccountProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DB6D8);
  }
  return result;
}

uint64_t sub_21F65994C()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F6599A0()
{
  return sub_21F716134();
}

uint64_t sub_21F6599BC()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F659A0C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21F659A5C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000021F725BC0;
}

unint64_t sub_21F659A7C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F659AB0();
  a1[2] = sub_21F659AF4();
  result = sub_21F659B38();
  a1[3] = result;
  return result;
}

unint64_t sub_21F659AB0()
{
  unint64_t result;

  result = qword_2554DB6E0;
  if (!qword_2554DB6E0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAccountProviderError, &type metadata for PASAccountProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DB6E0);
  }
  return result;
}

unint64_t sub_21F659AF4()
{
  unint64_t result;

  result = qword_2554DB6E8;
  if (!qword_2554DB6E8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAccountProviderError, &type metadata for PASAccountProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DB6E8);
  }
  return result;
}

unint64_t sub_21F659B38()
{
  unint64_t result;

  result = qword_2554DB6F0;
  if (!qword_2554DB6F0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAccountProviderError, &type metadata for PASAccountProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DB6F0);
  }
  return result;
}

unint64_t sub_21F659B80()
{
  unint64_t result;

  result = qword_2554DB6F8;
  if (!qword_2554DB6F8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAccountProviderError, &type metadata for PASAccountProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DB6F8);
  }
  return result;
}

uint64_t sub_21F659BC4()
{
  return 2800;
}

unint64_t sub_21F659BCC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70E5E4();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F659C44()
{
  sub_21F659AB0();
  return sub_21F7168C0();
}

uint64_t sub_21F659C6C()
{
  sub_21F659AB0();
  return sub_21F7168B4();
}

uint64_t storeEnumTagSinglePayload for PASAccountProviderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F659CD4 + 4 * byte_21F718680[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F659CF4 + 4 * byte_21F718685[v4]))();
}

_BYTE *sub_21F659CD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F659CF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F659CFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F659D04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F659D0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F659D14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASAccountProviderError()
{
  return &type metadata for PASAccountProviderError;
}

id sub_21F659D30()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void sub_21F659D54()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8[5];
  uint64_t v9;

  if (qword_2554DA718 != -1)
    swift_once();
  v0 = sub_21F715F3C();
  __swift_project_value_buffer(v0, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v1 = sub_21F715F24();
  v2 = sub_21F716350();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v9 = v4;
    *(_DWORD *)v3 = 141558274;
    v8[0] = 1752392040;
    sub_21F716428();
    *(_WORD *)(v3 + 12) = 2080;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21F715FA8();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DEF00);
    v5 = sub_21F716410();
    v7 = v6;
    sub_21F6476AC((uint64_t)v8, &qword_2554DEF00);
    v8[0] = sub_21F644208(v5, v7, &v9);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASAccountProvider targetAccount set %{mask.hash}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v4, -1, -1);
    MEMORY[0x2207CC514](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_21F659F88()
{
  return sub_21F65A1C0();
}

void sub_21F659F9C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8[5];
  uint64_t v9;

  if (qword_2554DA718 != -1)
    swift_once();
  v0 = sub_21F715F3C();
  __swift_project_value_buffer(v0, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v1 = sub_21F715F24();
  v2 = sub_21F716350();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v9 = v4;
    *(_DWORD *)v3 = 136446210;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21F715FA8();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DB8A0);
    v5 = sub_21F716410();
    v7 = v6;
    sub_21F6476AC((uint64_t)v8, (uint64_t *)&unk_2554DB8A0);
    v8[0] = sub_21F644208(v5, v7, &v9);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASAccountProvider targetAccountContext set %{public}s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v4, -1, -1);
    MEMORY[0x2207CC514](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_21F65A1AC()
{
  return sub_21F65A1C0();
}

uint64_t sub_21F65A1C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  return swift_release();
}

uint64_t sub_21F65A21C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  return swift_release();
}

uint64_t sub_21F65A280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t))
{
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[40];

  sub_21F647624(a1, (uint64_t)v13, a5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v13, (uint64_t)&v12, a5);
  swift_retain();
  v10 = sub_21F715FB4();
  a8(v10);
  return sub_21F6476AC((uint64_t)v13, a5);
}

uint64_t sub_21F65A32C(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_21F647624(a1, (uint64_t)v5, &qword_2554DEF00);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v5, (uint64_t)v4, &qword_2554DEF00);
  swift_retain();
  sub_21F715FB4();
  sub_21F659D54();
  sub_21F6476AC((uint64_t)v5, &qword_2554DEF00);
  sub_21F647710(a2, (uint64_t)v5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v5, (uint64_t)v4, (uint64_t *)&unk_2554DB8A0);
  swift_retain();
  sub_21F715FB4();
  sub_21F659F9C();
  return sub_21F6476AC((uint64_t)v5, (uint64_t *)&unk_2554DB8A0);
}

uint64_t sub_21F65A440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup18PASAccountProvider__targetAccount;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2554DB7E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup18PASAccountProvider__targetAccountContext;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB7D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_21F65A4C0()
{
  return type metadata accessor for PASAccountProvider();
}

uint64_t type metadata accessor for PASAccountProvider()
{
  uint64_t result;

  result = qword_2554DB738;
  if (!qword_2554DB738)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21F65A504()
{
  unint64_t v0;
  unint64_t v1;

  sub_21F65A5AC(319, &qword_2554DB748, &qword_2554DEF00);
  if (v0 <= 0x3F)
  {
    sub_21F65A5AC(319, qword_2554DB750, (uint64_t *)&unk_2554DB8A0);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_21F65A5AC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_21F715FC0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void **initializeBufferWithCopyOfBuffer for PASAccountContextExistingAccount(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for PASAccountContextExistingAccount(id *a1)
{

}

void **assignWithCopy for PASAccountContextExistingAccount(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for PASAccountContextExistingAccount(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for PASAccountContextExistingAccount(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PASAccountContextExistingAccount(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASAccountContextExistingAccount()
{
  return &type metadata for PASAccountContextExistingAccount;
}

uint64_t sub_21F65A758()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_21F65A764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[40];
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB7D8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2554DB7E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup18PASAccountProvider__targetAccount;
  v16 = 0;
  v14 = 0u;
  v15 = 0u;
  sub_21F647624((uint64_t)&v14, (uint64_t)v13, &qword_2554DEF00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DEF00);
  sub_21F715F78();
  sub_21F6476AC((uint64_t)&v14, &qword_2554DEF00);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v9, v8, v5);
  v10 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup18PASAccountProvider__targetAccountContext;
  v16 = 0;
  v14 = 0u;
  v15 = 0u;
  sub_21F647624((uint64_t)&v14, (uint64_t)v13, (uint64_t *)&unk_2554DB8A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DB8A0);
  sub_21F715F78();
  sub_21F6476AC((uint64_t)&v14, (uint64_t *)&unk_2554DB8A0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v10, v4, v1);
  return v0;
}

uint64_t sub_21F65A8F0()
{
  return sub_21F65A918();
}

uint64_t sub_21F65A904()
{
  return sub_21F65A918();
}

uint64_t sub_21F65A918()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  return swift_release();
}

uint64_t sub_21F65A97C(uint64_t a1, uint64_t a2)
{
  return sub_21F65A9A4(a1, a2, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup18PASAccountProvider__targetAccount, qword_2554DB7E0);
}

uint64_t sub_21F65A990(uint64_t a1, uint64_t a2)
{
  return sub_21F65A9A4(a1, a2, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup18PASAccountProvider__targetAccountContext, &qword_2554DB7D8);
}

uint64_t sub_21F65A9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t sub_21F65AA0C(uint64_t a1, uint64_t a2)
{
  return sub_21F65A32C(a1, a2);
}

uint64_t sub_21F65AA2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21F715F6C();
  *a1 = result;
  return result;
}

uint64_t sub_21F65AA54()
{
  return sub_21F65A21C();
}

uint64_t sub_21F65AA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F65A280(a1, a2, a3, a4, &qword_2554DEF00, (uint64_t)&unk_21F718960, (uint64_t)&unk_21F718988, (void (*)(uint64_t))sub_21F659D54);
}

uint64_t sub_21F65AAAC()
{
  return sub_21F65A21C();
}

uint64_t sub_21F65AAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F65A280(a1, a2, a3, a4, (uint64_t *)&unk_2554DB8A0, (uint64_t)&unk_21F7189A8, (uint64_t)&unk_21F7189D0, (void (*)(uint64_t))sub_21F659F9C);
}

uint64_t sub_21F65AB08(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_21F65AB20(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F65AC08(char a1)
{
  return a1 & 1;
}

uint64_t sub_21F65AC14(char a1)
{
  return a1 & 1;
}

uint64_t sub_21F65AC1C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_21F65AC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x2207CC46C](&unk_21F718B10, a3);
  return sub_21F716860();
}

uint64_t sub_21F65ACA0(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F718B10, a1);
  return sub_21F71617C();
}

uint64_t sub_21F65ACEC()
{
  MEMORY[0x2207CC46C](&unk_21F718B10);
  return sub_21F716194();
}

uint64_t sub_21F65AD3C()
{
  MEMORY[0x2207CC46C](&unk_21F718B10);
  return sub_21F716188();
}

uint64_t sub_21F65AD8C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_21F65AB08(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_21F65ADC0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;

  result = sub_21F65AC14(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_21F65ADF4()
{
  char *v0;

  return sub_21F65AC1C(*v0);
}

uint64_t sub_21F65AE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F65AB20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F65AE38()
{
  char *v0;

  return sub_21F65AC08(*v0);
}

uint64_t sub_21F65AE60@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_21F65AB08(a1);
  *a2 = result;
  return result;
}

uint64_t sub_21F65AE90(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F718BB0, a1);
  return sub_21F7169E0();
}

uint64_t sub_21F65AEC4(uint64_t a1)
{
  MEMORY[0x2207CC46C](&unk_21F718BB0, a1);
  return sub_21F7169EC();
}

uint64_t Result<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;

  v28 = a3;
  v29 = a4;
  v32 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(*(_QWORD *)(v8 + 16) - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v26 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 + 32);
  v30 = v15;
  v33 = v16;
  v17 = _s10CodingKeysOMa(255, v15, v16, v14);
  MEMORY[0x2207CC46C](&unk_21F718BB0, v17);
  v18 = sub_21F71677C();
  v35 = *(_QWORD *)(v18 - 8);
  v36 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v26 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169C8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v34, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = v31;
    v21 = v32;
    v23 = v33;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v13, v33);
    v38 = 1;
  }
  else
  {
    v22 = v26;
    v21 = v27;
    v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v13, v30);
    v37 = 0;
  }
  v24 = v36;
  sub_21F716758();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v20, v24);
}

uint64_t _s10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn);
}

uint64_t sub_21F65B164(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return Result<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16));
}

uint64_t Result<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  int v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  char v62;
  char v63;

  v48 = a5;
  v57 = a4;
  v50 = a7;
  v45 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v55 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_21F71641C();
  v54 = *(_QWORD *)(v46 - 8);
  v12 = MEMORY[0x24BDAC7A8](v46);
  v59 = (char *)&v42 - v13;
  v53 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v47 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s10CodingKeysOMa(255, a2, a3, a6);
  MEMORY[0x2207CC46C](&unk_21F718BB0, v15);
  v16 = sub_21F7166F8();
  v51 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v42 - v17;
  v58 = a2;
  v56 = a3;
  v49 = sub_21F716980();
  v19 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v21 = (char *)&v42 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v60 = v18;
  v22 = v61;
  sub_21F7169B0();
  if (v22)
  {
    v30 = (uint64_t)a1;
  }
  else
  {
    v23 = v53;
    v24 = v54;
    v43 = v21;
    v44 = v19;
    v26 = v55;
    v25 = v56;
    v61 = a1;
    v63 = 0;
    v27 = v58;
    v28 = v51;
    v29 = v52;
    sub_21F71668C();
    v32 = v29;
    v33 = v60;
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v59, 1, v27);
    if (v34 == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v59, v46);
      v62 = 1;
      sub_21F7166C8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v32);
      v37 = v43;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v43, v26, v25);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v32);
      v35 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v36 = v47;
      v35(v47, v59, v27);
      v37 = v43;
      v35(v43, v36, v27);
    }
    v38 = (uint64_t)v61;
    v40 = v49;
    v39 = v50;
    v41 = v44;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v39, v37, v40);
    v30 = v38;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v30);
}

uint64_t sub_21F65B4F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Result<>.init(from:)(a1, a2[2], a2[3], *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16), a2[4], a4);
}

uint64_t sub_21F65B51C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for PASAuthenticatorError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_21F65B5B4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F65B600 + 4 * byte_21F7189F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F65B634 + 4 * byte_21F7189F0[v4]))();
}

uint64_t sub_21F65B634(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F65B63C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F65B644);
  return result;
}

uint64_t sub_21F65B650(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F65B658);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F65B65C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F65B664(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_21F65B670(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void sub_21F65B67C()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F65B68C()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F65B69C()
{
  JUMPOUT(0x2207CC46CLL);
}

unint64_t PASFlowStepRepairFamilyError.description.getter(void *a1)
{
  unint64_t v1;
  id v3;
  id v4;

  v1 = 0xD00000000000002FLL;
  if (a1 != (void *)1)
  {
    v3 = a1;
    sub_21F7164E8();
    sub_21F716140();
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB870);
    sub_21F716128();
    sub_21F716140();
    swift_bridgeObjectRelease();
    sub_21F65B780(a1);
    return 0;
  }
  return v1;
}

void sub_21F65B780(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_21F65B790()
{
  _QWORD *v0;

  if (*v0 == 1)
    return 1700;
  else
    return 1701;
}

unint64_t sub_21F65B7A4()
{
  void **v0;

  return sub_21F6A1CF0(*v0);
}

unint64_t sub_21F65B7AC()
{
  void **v0;

  return sub_21F6A1F80(*v0);
}

unint64_t sub_21F65B7B4()
{
  void **v0;

  return PASFlowStepRepairFamilyError.description.getter(*v0);
}

uint64_t sub_21F65B7BC()
{
  sub_21F65D568();
  return sub_21F7168C0();
}

uint64_t sub_21F65B7E4()
{
  sub_21F65D568();
  return sub_21F7168B4();
}

id PASFlowStepRepairFamily.familyMemberDSID.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_familyMember);
  if (v1)
  {
    v2 = objc_msgSend(*(id *)(v1 + 16), sel_dsid);
    if (v2)
      return v2;
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_authResults);
  v5 = sub_21F716104();
  v3 = sub_21F65CBF8(v5, v6, v4);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v8 = sub_21F715F24();
    v9 = sub_21F71635C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, v9, "PASFlowStepRepairFamily familyMemberDSID is nil", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

    return 0;
  }
  return (id)v3;
}

uint64_t PASFlowStepRepairFamily.familyMemberAltDSID.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_familyMember);
  if (v1)
  {
    v2 = *(void **)(v1 + 16);
    swift_retain();
    v3 = objc_msgSend(v2, sel_altDSID);
    if (v3)
    {
      v4 = v3;
      v5 = sub_21F716104();
      swift_release();

      return v5;
    }
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_authResults);
  v7 = sub_21F716104();
  v5 = sub_21F65C760(v7, v8, v6);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (!v10)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v11 = sub_21F715F3C();
    __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
    v12 = sub_21F715F24();
    v13 = sub_21F71635C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21F63C000, v12, v13, "PASFlowStepRepairFamily familyMemberAltDSID is nil", v14, 2u);
      MEMORY[0x2207CC514](v14, -1, -1);
    }

    return 0;
  }
  return v5;
}

uint64_t PASFlowStepRepairFamily.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[39] = v0;
  v1[40] = sub_21F7162A8();
  v1[41] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[42] = v2;
  *v2 = v1;
  v2[1] = sub_21F65BB30;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F65BB30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 344) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F65BBB4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);

  swift_release();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepRepairFamily prepareForPresentation", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_retain();
  sub_21F656B40(v0 + 56);
  swift_release();
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  if (*(_QWORD *)(v0 + 40))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
    type metadata accessor for PASAccountWithImage();
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
      swift_release();
      v7 = sub_21F715F24();
      v8 = sub_21F716374();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_21F63C000, v7, v8, "PASFlowStepRepairFamily prepareForPresentation has no target account (setup for self) so we'll skip it", v9, 2u);
        MEMORY[0x2207CC514](v9, -1, -1);
      }
      v10 = *(_QWORD *)(v0 + 312);

      sub_21F658AF4();
      swift_allocError();
      *(_QWORD *)v11 = 0xD00000000000001DLL;
      *(_QWORD *)(v11 + 8) = 0x800000021F726C70;
      *(_QWORD *)(v11 + 16) = &unk_2554DB8D0;
      *(_QWORD *)(v11 + 24) = v10;
      *(_BYTE *)(v11 + 32) = 0;
      swift_retain();
      swift_willThrow();
LABEL_24:
      v25 = *(uint64_t (**)(void))(v0 + 8);
      return v25();
    }
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    sub_21F6476AC(v0 + 16, &qword_2554DEF00);
  }
  swift_retain();
  sub_21F656B40(v0 + 136);
  swift_release();
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  if (*(_QWORD *)(v0 + 200))
  {
    sub_21F64756C((__int128 *)(v0 + 176), v0 + 96);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v14);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15) & 1) == 0)
    {
      v20 = sub_21F715F24();
      v21 = sub_21F716374();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_21F63C000, v20, v21, "PASFlowStepRepairFamily prepareForPresentation skipping presentation per account context", v22, 2u);
        MEMORY[0x2207CC514](v22, -1, -1);
      }
      v23 = *(_QWORD *)(v0 + 312);

      sub_21F658AF4();
      swift_allocError();
      *(_QWORD *)v24 = 0xD00000000000002ELL;
      *(_QWORD *)(v24 + 8) = 0x800000021F726C40;
      *(_QWORD *)(v24 + 16) = &unk_2554DB8B8;
      *(_QWORD *)(v24 + 24) = v23;
      *(_BYTE *)(v24 + 32) = 0;
      swift_retain();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
      goto LABEL_24;
    }
    v16 = v0 + 96;
  }
  else
  {
    sub_21F6476AC(v0 + 176, (uint64_t *)&unk_2554DB8A0);
    v16 = v0 + 136;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v16);
  swift_retain();
  sub_21F656B40(v0 + 256);
  swift_release();
  v17 = *(_QWORD *)(v0 + 280);
  v18 = *(_QWORD *)(v0 + 288);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 256), v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  if (*(_QWORD *)(v0 + 240))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
    type metadata accessor for PASFamilyMember();
    if (swift_dynamicCast())
      v19 = *(_QWORD *)(v0 + 296);
    else
      v19 = 0;
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 256);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 256);
    sub_21F6476AC(v0 + 216, &qword_2554DEF00);
    v19 = 0;
  }
  *(_QWORD *)(*(_QWORD *)(v0 + 312) + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_familyMember) = v19;
  swift_release();
  v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_21F65C0C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F65C0FC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 24) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F65C168(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 24) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F65C1D4()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepRepairFamily.repairDidFinish()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_21F65C220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 136) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 144) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_familyMember);
  if (v5)
  {
    *(_QWORD *)(v0 + 96) = type metadata accessor for PASFamilyMember();
    *(_QWORD *)(v0 + 104) = sub_21F647438(&qword_2554E0800, (uint64_t (*)(uint64_t))type metadata accessor for PASFamilyMember, (uint64_t)&protocol conformance descriptor for PASFamilyMember);
    *(_QWORD *)(v0 + 72) = v5;
  }
  else
  {
    *(_QWORD *)(v0 + 104) = 0;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_OWORD *)(v0 + 88) = 0u;
  }
  ObjectType = swift_getObjectType();
  v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_authResults);
  sub_21F65D4EC(v0 + 72, v0 + 16);
  *(_QWORD *)(v0 + 56) = v8;
  *(_BYTE *)(v0 + 64) = 0;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v9;
  *v9 = v0;
  v9[1] = sub_21F65C394;
  return v10(v0 + 16, ObjectType, v3);
}

uint64_t sub_21F65C394()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F6476AC(v1, (uint64_t *)&unk_2554DB8E0);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t PASFlowStepRepairFamily.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_authResults);
  type metadata accessor for PASFlowStepAllSet();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v5 = sub_21F6E689C(v2, v3, v4);
  swift_unknownObjectRelease();
  sub_21F647438(&qword_2554DB8F0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepAllSet, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  return v5;
}

void PASFlowStepRepairFamily.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepRepairFamily.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21F65C530()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t PASFlowStepRepairFamily.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return v0;
}

uint64_t PASFlowStepRepairFamily.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_21F65C680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_authResults);
  type metadata accessor for PASFlowStepAllSet();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v5 = sub_21F6E689C(v2, v3, v4);
  swift_unknownObjectRelease();
  sub_21F647438(&qword_2554DB8F0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepAllSet, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  return v5;
}

uint64_t sub_21F65C760(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_21F715F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v10 = sub_21F6448D8(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    if (qword_2554DA718 != -1)
      swift_once();
    __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
    swift_bridgeObjectRetain_n();
    v14 = sub_21F715F24();
    v15 = sub_21F716350();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v26 = v17;
      *(_DWORD *)v16 = 136446210;
      swift_bridgeObjectRetain();
      v27 = sub_21F644208(a1, a2, &v26);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v14, v15, "PASAuthResults value at %{public}s is nil", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v17, -1, -1);
      MEMORY[0x2207CC514](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v10);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v27 = v12;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  if ((swift_dynamicCast() & 1) != 0)
  {
    swift_unknownObjectRelease();
    return v26;
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v19 = sub_21F715F24();
  v20 = sub_21F71635C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v21 = 136446722;
    swift_bridgeObjectRetain();
    v27 = sub_21F644208(a1, a2, &v26);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2082;
    swift_getObjectType();
    v22 = sub_21F7169F8();
    v27 = sub_21F644208(v22, v23, &v26);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    v27 = sub_21F644208(0x676E69727453, 0xE600000000000000, &v26);
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v19, v20, "PASAuthResults value at %{public}s is %{public}s. Expected %{public}s", (uint8_t *)v21, 0x20u);
    v24 = v25;
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v24, -1, -1);
    MEMORY[0x2207CC514](v21, -1, -1);
    swift_unknownObjectRelease();

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return 0;
}

uint64_t sub_21F65CBF8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;

  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    sub_21F6448D8(a1, a2);
    if ((v5 & 1) != 0)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      objc_opt_self();
      result = swift_dynamicCastObjCClass();
      if (result)
        return result;
      if (qword_2554DA718 != -1)
        swift_once();
      v7 = sub_21F715F3C();
      __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      v8 = sub_21F715F24();
      v9 = sub_21F71635C();
      if (!os_log_type_enabled(v8, v9))
      {

        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        return 0;
      }
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v20 = v11;
      *(_DWORD *)v10 = 136446722;
      swift_bridgeObjectRetain();
      sub_21F644208(a1, a2, &v20);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2082;
      swift_getObjectType();
      v12 = sub_21F7169F8();
      sub_21F644208(v12, v13, &v20);
      sub_21F716428();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 22) = 2082;
      sub_21F65D9F0();
      v14 = sub_21F7169F8();
      sub_21F644208(v14, v15, &v20);
      sub_21F716428();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v8, v9, "PASAuthResults value at %{public}s is %{public}s. Expected %{public}s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v11, -1, -1);
      MEMORY[0x2207CC514](v10, -1, -1);
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v16 = sub_21F715F3C();
  __swift_project_value_buffer(v16, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  v8 = sub_21F715F24();
  v17 = sub_21F716350();
  if (!os_log_type_enabled(v8, v17))
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  v18 = (uint8_t *)swift_slowAlloc();
  v19 = swift_slowAlloc();
  v20 = v19;
  *(_DWORD *)v18 = 136446210;
  swift_bridgeObjectRetain();
  sub_21F644208(a1, a2, &v20);
  sub_21F716428();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_21F63C000, v8, v17, "PASAuthResults value at %{public}s is nil", v18, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2207CC514](v19, -1, -1);
  MEMORY[0x2207CC514](v18, -1, -1);
LABEL_13:

  return 0;
}

uint64_t sub_21F65D010(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v6 = sub_21F6448D8(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v6);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      v22 = v8;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_unknownObjectRelease();
        return v21;
      }
      if (qword_2554DA718 != -1)
        swift_once();
      v15 = sub_21F715F3C();
      __swift_project_value_buffer(v15, (uint64_t)static PASLogger.common);
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      v11 = sub_21F715F24();
      v16 = sub_21F71635C();
      if (!os_log_type_enabled(v11, v16))
      {

        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        return 0;
      }
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v22 = v18;
      *(_DWORD *)v17 = 136446722;
      swift_bridgeObjectRetain();
      sub_21F644208(a1, a2, &v22);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2082;
      swift_getObjectType();
      v19 = sub_21F7169F8();
      sub_21F644208(v19, v20, &v22);
      sub_21F716428();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2082;
      sub_21F644208(0xD00000000000001CLL, 0x800000021F726D10, &v22);
      sub_21F716428();
      _os_log_impl(&dword_21F63C000, v11, v16, "PASAuthResults value at %{public}s is %{public}s. Expected %{public}s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v18, -1, -1);
      MEMORY[0x2207CC514](v17, -1, -1);
      swift_unknownObjectRelease();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v10 = sub_21F715F3C();
  __swift_project_value_buffer(v10, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  v11 = sub_21F715F24();
  v12 = sub_21F716350();
  if (!os_log_type_enabled(v11, v12))
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  v13 = (uint8_t *)swift_slowAlloc();
  v14 = swift_slowAlloc();
  v22 = v14;
  *(_DWORD *)v13 = 136446210;
  swift_bridgeObjectRetain();
  sub_21F644208(a1, a2, &v22);
  sub_21F716428();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_21F63C000, v11, v12, "PASAuthResults value at %{public}s is nil", v13, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2207CC514](v14, -1, -1);
  MEMORY[0x2207CC514](v13, -1, -1);
LABEL_10:

  return 0;
}

uint64_t sub_21F65D45C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F65C168(v0);
}

uint64_t sub_21F65D4A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656988;
  return sub_21F65C0FC(v0);
}

uint64_t sub_21F65D4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DEF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F65D534(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F65D568();
  a1[2] = sub_21F65D5AC();
  result = sub_21F65D5F0();
  a1[3] = result;
  return result;
}

unint64_t sub_21F65D568()
{
  unint64_t result;

  result = qword_2554DB908;
  if (!qword_2554DB908)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepRepairFamilyError, &type metadata for PASFlowStepRepairFamilyError);
    atomic_store(result, (unint64_t *)&qword_2554DB908);
  }
  return result;
}

unint64_t sub_21F65D5AC()
{
  unint64_t result;

  result = qword_2554DB910;
  if (!qword_2554DB910)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepRepairFamilyError, &type metadata for PASFlowStepRepairFamilyError);
    atomic_store(result, (unint64_t *)&qword_2554DB910);
  }
  return result;
}

unint64_t sub_21F65D5F0()
{
  unint64_t result;

  result = qword_2554DB918;
  if (!qword_2554DB918)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepRepairFamilyError, &type metadata for PASFlowStepRepairFamilyError);
    atomic_store(result, (unint64_t *)&qword_2554DB918);
  }
  return result;
}

unint64_t sub_21F65D638()
{
  unint64_t result;

  result = qword_2554DB920;
  if (!qword_2554DB920)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepRepairFamilyError, &type metadata for PASFlowStepRepairFamilyError);
    atomic_store(result, (unint64_t *)&qword_2554DB920);
  }
  return result;
}

uint64_t sub_21F65D67C(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DB928, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepRepairFamily, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepRepairFamily()
{
  uint64_t result;

  result = qword_2554DB958;
  if (!qword_2554DB958)
    return swift_getSingletonMetadata();
  return result;
}

void destroy for PASFlowStepRepairFamilyError(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

_QWORD *_s21ProximityAppleIDSetup28PASFlowStepRepairFamilyErrorOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for PASFlowStepRepairFamilyError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

void **assignWithTake for PASFlowStepRepairFamilyError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for PASFlowStepRepairFamilyError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PASFlowStepRepairFamilyError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_21F65D928(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_21F65D948(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepRepairFamilyError()
{
  return &type metadata for PASFlowStepRepairFamilyError;
}

uint64_t sub_21F65D988()
{
  return type metadata accessor for PASFlowStepRepairFamily();
}

uint64_t sub_21F65D990()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_21F65D9F0()
{
  unint64_t result;

  result = qword_2554DADD0;
  if (!qword_2554DADD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554DADD0);
  }
  return result;
}

uint64_t PASFlowStepConfirmExistingPasscode.familyMemberFirstName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  swift_retain();
  sub_21F656B40((uint64_t)v5);
  swift_release();
  v0 = v6;
  v1 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v1 + 8))(v8, v0, v1);
  v2 = v9;
  if (v9)
  {
    v3 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v5);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v5);
    sub_21F65DB08((uint64_t)v8);
  }
  return v2;
}

uint64_t sub_21F65DB08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DEF00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PASFlowStepConfirmExistingPasscode.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = sub_21F7162A8();
  v1[4] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_21F65DBB4;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F65DBB4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_21F716248();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v2[7] = v3;
    *v3 = v2;
    v3[1] = sub_21F65DC64;
    v3[14] = v2[2];
  }
  return swift_task_switch();
}

uint64_t sub_21F65DC64()
{
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F65DCD4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F65DD08()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F65DD3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  return swift_task_switch();
}

uint64_t sub_21F65DD54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 2));
  swift_release();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[15] = v3;
  *v3 = v0;
  v3[1] = sub_21F65DE0C;
  return v5(v0 + 7, v1, v2);
}

uint64_t sub_21F65DE0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F65DE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v1);
  v3 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(3u, 0, (uint64_t)&unk_2554DBE80, v3, v1, MEMORY[0x24BEE1328], v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F65DF38()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = (void *)v0[16];
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[16];
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    v0[12] = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v12 = sub_21F716128();
    v0[13] = sub_21F644208(v12, v13, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepConfirmExistingPasscode failed to registerForRequests\n%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
  }
  else
  {

  }
  sub_21F7162A8();
  v0[17] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F65E15C()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F65E1A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F65E1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = a4;
  v4[6] = a1;
  return swift_task_switch();
}

uint64_t sub_21F65E1EC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepConfirmExistingPasscode got dependentSignInResults", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v6 = Strong;
    v7 = sub_21F64D2A8(*(_QWORD *)(v0 + 56), 2);
    if (v7)
    {
      *(_QWORD *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode_authResults) = v7;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_21F655840();
      v21 = (void *)swift_allocError();
      *(_OWORD *)v22 = xmmword_21F718DA0;
      *(_QWORD *)(v22 + 16) = 0;
      *(_QWORD *)(v22 + 24) = 0;
      *(_BYTE *)(v22 + 32) = 0;
      swift_willThrow();
      v8 = v21;
      v9 = v21;
      v10 = sub_21F715F24();
      v11 = sub_21F71635C();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v23 = v13;
        *(_DWORD *)v12 = 136446210;
        *(_QWORD *)(v0 + 40) = v21;
        v14 = v21;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
        v15 = sub_21F716128();
        *(_QWORD *)(v0 + 40) = sub_21F644208(v15, v16, &v23);
        sub_21F716428();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_21F63C000, v10, v11, "PASFlowStepConfirmExistingPasscode registerForRequests dependentSignInResults failed:\n%{public}s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v13, -1, -1);
        MEMORY[0x2207CC514](v12, -1, -1);

      }
      else
      {

      }
    }
    sub_21F7162A8();
    *(_QWORD *)(v0 + 80) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    v17 = sub_21F715F24();
    v18 = sub_21F716368();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_21F63C000, v17, v18, "PASFlowStepConfirmExistingPasscode registerForRequests dependentSignInResults handler self is nil", v19, 2u);
      MEMORY[0x2207CC514](v19, -1, -1);
    }

    **(_BYTE **)(v0 + 48) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F65E5C4()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F65E604()
{
  uint64_t v0;

  swift_release();
  **(_BYTE **)(v0 + 48) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepConfirmExistingPasscode.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode_authResults);
  if (v1)
  {
    v2 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v3 = MEMORY[0x2207CC5BC](v2);
    v4 = *(_QWORD *)(v2 + 8);
    type metadata accessor for PASFlowStepRepairFamily();
    v5 = swift_allocObject();
    v6 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily__accountProvider;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_QWORD *)(v7 + 48) = 0;
    *(_QWORD *)(v5 + v6) = v7;
    v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily__accountStore;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = 0u;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_QWORD *)(v9 + 48) = 0;
    *(_QWORD *)(v5 + v8) = v9;
    *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_familyMember) = 0;
    *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_error) = 0;
    *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepRepairFamily_authResults) = v1;
    swift_bridgeObjectRetain();
    v0 = sub_21F6BC954(v3, v4);
    swift_unknownObjectRelease();
    sub_21F65EAB0(&qword_2554DB928, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepRepairFamily);
  }
  else
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v10 = 0xD000000000000035;
    *(_QWORD *)(v10 + 8) = 0x800000021F726D30;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 1;
    swift_willThrow();
  }
  return v0;
}

uint64_t PASFlowStepConfirmExistingPasscode.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = swift_allocObject();
  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v4 + v5) = v6;
  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v4 + v7) = v8;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode_authResults) = 0;
  v9 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t PASFlowStepConfirmExistingPasscode.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v2 + v5) = v6;
  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v2 + v7) = v8;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup34PASFlowStepConfirmExistingPasscode_authResults) = 0;
  v9 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_21F65E978()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t PASFlowStepConfirmExistingPasscode.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PASFlowStepConfirmExistingPasscode.__deallocating_deinit()
{
  PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_21F65EA68()
{
  return PASFlowStepConfirmExistingPasscode.nextStep()();
}

uint64_t sub_21F65EA7C(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DBBF0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepConfirmExistingPasscode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F65EAB0(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASSourceFlowStepBase, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PASFlowStepConfirmExistingPasscode()
{
  uint64_t result;

  result = qword_2554DBC20;
  if (!qword_2554DBC20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F65EB2C()
{
  return type metadata accessor for PASFlowStepConfirmExistingPasscode();
}

uint64_t sub_21F65EB34()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F65EB84()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F65EBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F651418;
  v7[7] = a3;
  v7[8] = v3;
  v7[6] = a1;
  return swift_task_switch();
}

uint64_t IdMSAccount.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 IdMSAccount.id.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __n128 result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

uint64_t (*IdMSAccount.id.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.name.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F65ECC4(v1 + 48, a1);
}

uint64_t sub_21F65ECC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  sub_21F667678(*(_QWORD *)a1, v4, v5, v6, v7);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 32) = v7;
  return a2;
}

uint64_t IdMSAccount.name.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_21F65ED2C(a1, v1 + 48);
}

uint64_t sub_21F65ED2C(uint64_t a1, uint64_t a2)
{
  assignWithTake for IdMSAccount.Name(a2, a1);
  return a2;
}

uint64_t (*IdMSAccount.name.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.services.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdMSAccount.services.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*IdMSAccount.services.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.credential.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F65EDBC(v1 + 96, a1);
}

uint64_t sub_21F65EDBC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IdMSAccount.Credential(a2, a1);
  return a2;
}

uint64_t IdMSAccount.credential.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_21F65EDF8(a1, v1 + 96);
}

uint64_t sub_21F65EDF8(uint64_t a1, uint64_t a2)
{
  assignWithTake for IdMSAccount.Credential(a2, a1);
  return a2;
}

uint64_t (*IdMSAccount.credential.modify())()
{
  return nullsub_1;
}

__n128 IdMSAccount.init(id:name:services:credential:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __n128 result;
  __n128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];
  char v22;
  _OWORD v23[4];
  uint64_t v24;
  char v25;

  sub_21F65EF00(a4, v23);
  v19 = v23[1];
  v20 = v23[0];
  v17 = (__n128)v23[3];
  v18 = v23[2];
  v9 = v24;
  v10 = v25;
  sub_21F65EF28(a2, (uint64_t)v21);
  v11 = v22;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = v21[0];
  v14 = v21[1];
  *(_QWORD *)a5 = *(_QWORD *)a1;
  *(_QWORD *)(a5 + 8) = v12;
  v15 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 32) = v15;
  *(_OWORD *)(a5 + 48) = v13;
  *(_OWORD *)(a5 + 64) = v14;
  *(_BYTE *)(a5 + 80) = v11;
  *(_QWORD *)(a5 + 88) = a3;
  *(_OWORD *)(a5 + 96) = v20;
  *(_OWORD *)(a5 + 112) = v19;
  result = v17;
  *(_OWORD *)(a5 + 128) = v18;
  *(__n128 *)(a5 + 144) = v17;
  *(_QWORD *)(a5 + 160) = v9;
  *(_BYTE *)(a5 + 168) = v10;
  return result;
}

_OWORD *sub_21F65EF00(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *(_OWORD *)((char *)a2 + 57) = *(_OWORD *)((char *)a1 + 57);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

uint64_t sub_21F65EF28(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void IdMSAccount.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_21F716938();
      swift_bridgeObjectRetain();
      sub_21F716134();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_21F716938();
    if (v5)
      goto LABEL_3;
  }
  sub_21F716938();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 48);
  v7 = *(_QWORD *)(v2 + 56);
  v8 = *(_QWORD *)(v2 + 64);
  v9 = *(_QWORD *)(v2 + 72);
  if (*(_BYTE *)(v2 + 80))
  {
    if (*(_BYTE *)(v2 + 80) == 1)
    {
      sub_21F71692C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_21F716134();
      sub_21F716134();
      sub_21F6641CC(v6, v7, v8, v9, 1);
    }
    else
    {
      sub_21F71692C();
    }
  }
  else
  {
    sub_21F71692C();
    swift_bridgeObjectRetain();
    sub_21F716134();
    sub_21F6641CC(v6, v7, v8, v9, 0);
  }
  v10 = *(_QWORD *)(v2 + 88);
  swift_bridgeObjectRetain();
  sub_21F6637DC(a1, v10);
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_21F65F14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = v0;
  sub_21F71692C();
  sub_21F66428C(v8, v7, v6, v5, v4, v3, v9, v1, v2, 0);
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21F664218(v8, v7, v6, v5, v4, v3, v9, v1, v2, 0);
}

uint64_t sub_21F65F2D0(char a1)
{
  return qword_21F71A3E0[a1];
}

BOOL sub_21F65F2F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21F65F308()
{
  return sub_21F71692C();
}

uint64_t sub_21F65F334()
{
  char *v0;

  return sub_21F65F2D0(*v0);
}

uint64_t sub_21F65F33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F664410(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F65F360()
{
  return 0;
}

void sub_21F65F36C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_21F65F378()
{
  sub_21F664300();
  return sub_21F7169E0();
}

uint64_t sub_21F65F3A0()
{
  sub_21F664300();
  return sub_21F7169EC();
}

uint64_t IdMSAccount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  _OWORD v11[5];
  _OWORD v12[5];
  __int128 v13[2];
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBE88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F664300();
  sub_21F7169C8();
  v9 = *(_OWORD *)(v3 + 16);
  v11[0] = *(_OWORD *)v3;
  v11[1] = v9;
  v11[2] = *(_OWORD *)(v3 + 32);
  v14 = 0;
  sub_21F664344();
  sub_21F716758();
  if (!v2)
  {
    sub_21F65EF28((__int128 *)(v3 + 48), (uint64_t)v13);
    sub_21F65EF28(v13, (uint64_t)v11);
    v14 = 1;
    sub_21F664388();
    sub_21F716758();
    *(_QWORD *)&v11[0] = *(_QWORD *)(v3 + 88);
    v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBEA8);
    sub_21F669D00(&qword_2554DBEB0, &qword_2554DCE70, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1700]);
    sub_21F716758();
    sub_21F65EF00((_OWORD *)(v3 + 96), v12);
    sub_21F65EF00(v12, v11);
    v14 = 3;
    sub_21F6643CC();
    sub_21F716758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IdMSAccount.hashValue.getter()
{
  _BYTE v1[72];

  sub_21F716920();
  IdMSAccount.hash(into:)((uint64_t)v1);
  return sub_21F716968();
}

__n128 IdMSAccount.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[9];
  _OWORD v10[2];

  sub_21F664590(a1, v9);
  if (!v2)
  {
    v5 = v10[0];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 153) = *(_OWORD *)((char *)v10 + 9);
    v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

__n128 sub_21F65F694@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[9];
  _OWORD v10[2];

  sub_21F664590(a1, v9);
  if (!v2)
  {
    v5 = v10[0];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 153) = *(_OWORD *)((char *)v10 + 9);
    v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_21F65F6F4(_QWORD *a1)
{
  return IdMSAccount.encode(to:)(a1);
}

uint64_t sub_21F65F74C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[9];
  _OWORD v14[2];
  _OWORD v15[9];
  _OWORD v16[2];

  v2 = a1[9];
  v13[8] = a1[8];
  v14[0] = v2;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)a1 + 153);
  v3 = a1[5];
  v13[4] = a1[4];
  v13[5] = v3;
  v4 = a1[7];
  v13[6] = a1[6];
  v13[7] = v4;
  v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  v6 = a1[3];
  v13[2] = a1[2];
  v13[3] = v6;
  v7 = a2[9];
  v15[8] = a2[8];
  v16[0] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)a2 + 153);
  v8 = a2[5];
  v15[4] = a2[4];
  v15[5] = v8;
  v9 = a2[7];
  v15[6] = a2[6];
  v15[7] = v9;
  v10 = a2[1];
  v15[0] = *a2;
  v15[1] = v10;
  v11 = a2[3];
  v15[2] = a2[2];
  v15[3] = v11;
  return _s21ProximityAppleIDSetup11IdMSAccountV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v15) & 1;
}

uint64_t sub_21F65F7E0()
{
  _BYTE v1[72];

  sub_21F716920();
  IdMSAccount.hash(into:)((uint64_t)v1);
  return sub_21F716968();
}

uint64_t sub_21F65F820()
{
  _BYTE v1[72];

  sub_21F716920();
  IdMSAccount.hash(into:)((uint64_t)v1);
  return sub_21F716968();
}

void IdMSAccount.Credential.hash(into:)()
{
  _OWORD *v0;
  _OWORD v1[4];

  sub_21F65EF00(v0, v1);
  __asm { BR              X10 }
}

uint64_t sub_21F65F8AC()
{
  sub_21F71692C();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F65F9B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21F65F9F0 + 4 * byte_21F718E38[a1]))(0xD000000000000011, 0x800000021F726DC0);
}

uint64_t sub_21F65F9F0()
{
  return 1701736302;
}

uint64_t sub_21F65FA00()
{
  return 0x7773736150776172;
}

uint64_t sub_21F65FA20()
{
  return 0x6F696E61706D6F63;
}

uint64_t sub_21F65FA44()
{
  unsigned __int8 *v0;

  return sub_21F65F9B8(*v0);
}

uint64_t sub_21F65FA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F664CE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F65FA70()
{
  sub_21F664B4C();
  return sub_21F7169E0();
}

uint64_t sub_21F65FA98()
{
  sub_21F664B4C();
  return sub_21F7169EC();
}

uint64_t sub_21F65FAC4()
{
  return sub_21F71692C();
}

uint64_t sub_21F65FAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F66585C(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_21F65FB18(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21F65FB24()
{
  sub_21F664C18();
  return sub_21F7169E0();
}

uint64_t sub_21F65FB4C()
{
  sub_21F664C18();
  return sub_21F7169EC();
}

uint64_t sub_21F65FB74()
{
  return 0;
}

uint64_t sub_21F65FB80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_21F65FBAC()
{
  sub_21F664CA0();
  return sub_21F7169E0();
}

uint64_t sub_21F65FBD4()
{
  sub_21F664CA0();
  return sub_21F7169EC();
}

uint64_t sub_21F65FBFC()
{
  sub_21F664BD4();
  return sub_21F7169E0();
}

uint64_t sub_21F65FC24()
{
  sub_21F664BD4();
  return sub_21F7169EC();
}

uint64_t sub_21F65FC4C()
{
  sub_21F664B90();
  return sub_21F7169E0();
}

uint64_t sub_21F65FC74()
{
  sub_21F664B90();
  return sub_21F7169EC();
}

void IdMSAccount.Credential.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[4];
  _OWORD *v14;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBEC0);
  v8 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v7 = (char *)v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBEC8);
  v4[0] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBED0);
  v4[1] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBED8);
  MEMORY[0x24BDAC7A8](v3);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBEE0);
  v10 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F664B4C();
  sub_21F7169C8();
  sub_21F65EF00(v14, v12);
  __asm { BR              X10 }
}

uint64_t sub_21F65FE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v3 = *(_OWORD *)(v2 - 192);
  *(_OWORD *)(v2 - 128) = *(_OWORD *)(v2 - 208);
  *(_OWORD *)(v2 - 112) = v3;
  *(_QWORD *)(v2 - 96) = *(_QWORD *)(v2 - 176);
  v4 = *(_OWORD *)(v2 - 224);
  *(_OWORD *)(v2 - 160) = *(_OWORD *)(v2 - 240);
  *(_OWORD *)(v2 - 144) = v4;
  *(_BYTE *)(v2 - 320) = 1;
  sub_21F664C18();
  v5 = *(_QWORD *)(v2 - 336);
  sub_21F716704();
  v6 = *(_OWORD *)(v2 - 112);
  *(_OWORD *)(v2 - 288) = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v2 - 272) = v6;
  *(_QWORD *)(v2 - 256) = *(_QWORD *)(v2 - 96);
  v7 = *(_OWORD *)(v2 - 160);
  *(_OWORD *)(v2 - 304) = *(_OWORD *)(v2 - 144);
  *(_OWORD *)(v2 - 320) = v7;
  sub_21F664C5C();
  v8 = *(_QWORD *)(v2 - 376);
  sub_21F716758();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 392) + 8))(v1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 344) + 8))(v0, v5);
}

uint64_t IdMSAccount.Credential.hashValue.getter()
{
  sub_21F716920();
  IdMSAccount.Credential.hash(into:)();
  return sub_21F716968();
}

_OWORD *IdMSAccount.Credential.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  _OWORD v5[5];

  result = (_OWORD *)sub_21F664EA8(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F65EF00(v5, a2);
  return result;
}

_OWORD *sub_21F6601C0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  _OWORD v5[5];

  result = (_OWORD *)sub_21F664EA8(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F65EF00(v5, a2);
  return result;
}

void sub_21F660204(_QWORD *a1)
{
  _OWORD *v1;
  _OWORD v3[5];

  sub_21F65EF00(v1, v3);
  IdMSAccount.Credential.encode(to:)(a1);
}

uint64_t sub_21F660250(_OWORD *a1, _OWORD *a2)
{
  char v3;
  _OWORD v5[5];
  _OWORD v6[5];

  sub_21F65EF00(a1, v5);
  sub_21F65EF00(a2, v6);
  _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v5);
  return v3 & 1;
}

uint64_t sub_21F660298()
{
  _OWORD *v0;
  _OWORD v2[5];

  sub_21F65EF00(v0, v2);
  sub_21F716920();
  IdMSAccount.Credential.hash(into:)();
  return sub_21F716968();
}

void sub_21F6602E4()
{
  _OWORD *v0;
  _OWORD v1[5];

  sub_21F65EF00(v0, v1);
  IdMSAccount.Credential.hash(into:)();
}

uint64_t sub_21F660320()
{
  _OWORD *v0;
  _OWORD v2[5];

  sub_21F65EF00(v0, v2);
  sub_21F716920();
  IdMSAccount.Credential.hash(into:)();
  return sub_21F716968();
}

uint64_t IdMSAccount.Name.hash(into:)()
{
  __int128 *v0;
  uint64_t v2;
  char v3;

  sub_21F65EF28(v0, (uint64_t)&v2);
  if (!v3)
  {
    sub_21F71692C();
    return sub_21F716134();
  }
  if (v3 == 1)
  {
    sub_21F71692C();
    sub_21F716134();
    return sub_21F716134();
  }
  return sub_21F71692C();
}

uint64_t sub_21F66041C(char a1)
{
  return *(_QWORD *)&aNone_1[8 * a1];
}

uint64_t sub_21F66043C(char a1)
{
  if ((a1 & 1) != 0)
    return 1953718636;
  else
    return 0x7473726966;
}

uint64_t sub_21F660468()
{
  char *v0;

  return sub_21F66041C(*v0);
}

uint64_t sub_21F660470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F665670(a1, a2);
  *a3 = result;
  return result;
}

void sub_21F660494(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_21F6604A0()
{
  sub_21F665560();
  return sub_21F7169E0();
}

uint64_t sub_21F6604C8()
{
  sub_21F665560();
  return sub_21F7169EC();
}

uint64_t sub_21F6604F0()
{
  char *v0;

  return sub_21F66043C(*v0);
}

uint64_t sub_21F6604F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F66578C(a1, a2);
  *a3 = result;
  return result;
}

void sub_21F66051C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_21F660528()
{
  sub_21F6655A4();
  return sub_21F7169E0();
}

uint64_t sub_21F660550()
{
  sub_21F6655A4();
  return sub_21F7169EC();
}

uint64_t sub_21F660578()
{
  sub_21F66562C();
  return sub_21F7169E0();
}

uint64_t sub_21F6605A0()
{
  sub_21F66562C();
  return sub_21F7169EC();
}

uint64_t sub_21F6605C8()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

uint64_t sub_21F660608()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

uint64_t sub_21F660644()
{
  sub_21F6655E8();
  return sub_21F7169E0();
}

uint64_t sub_21F66066C()
{
  sub_21F6655E8();
  return sub_21F7169EC();
}

uint64_t IdMSAccount.Name.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF18);
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF20);
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF28);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF30);
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F665560();
  sub_21F7169C8();
  sub_21F65EF28(v26, (uint64_t)&v30);
  if (v31)
  {
    if (v31 == 1)
    {
      v32 = 2;
      sub_21F6655A4();
      v14 = v23;
      v15 = v28;
      sub_21F716704();
      v32 = 0;
      v16 = v25;
      v17 = v29;
      sub_21F716734();
      if (!v17)
      {
        v32 = 1;
        sub_21F716734();
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v16);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v15);
    }
    else
    {
      v32 = 0;
      sub_21F66562C();
      v20 = v28;
      sub_21F716704();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v20);
    }
  }
  else
  {
    v32 = 1;
    sub_21F6655E8();
    v19 = v28;
    sub_21F716704();
    sub_21F716734();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v19);
  }
}

uint64_t IdMSAccount.Name.hashValue.getter()
{
  __int128 *v0;
  uint64_t v2;
  char v3;

  sub_21F716920();
  sub_21F65EF28(v0, (uint64_t)&v2);
  if (v3)
  {
    if (v3 != 1)
    {
      sub_21F71692C();
      return sub_21F716968();
    }
    sub_21F71692C();
    sub_21F716134();
  }
  else
  {
    sub_21F71692C();
  }
  sub_21F716134();
  return sub_21F716968();
}

uint64_t IdMSAccount.Name.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[2];

  result = sub_21F6658C8(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F65EF28(v5, a2);
  return result;
}

uint64_t sub_21F660ACC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[2];

  result = sub_21F6658C8(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F65EF28(v5, a2);
  return result;
}

uint64_t sub_21F660B10(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[40];

  sub_21F65EF28(v1, (uint64_t)v4);
  return IdMSAccount.Name.encode(to:)(a1);
}

uint64_t sub_21F660B5C(__int128 *a1, __int128 *a2)
{
  __int128 v4[2];
  __int128 v5[2];

  sub_21F65EF28(a1, (uint64_t)v4);
  sub_21F65EF28(a2, (uint64_t)v5);
  return _s21ProximityAppleIDSetup11IdMSAccountV4NameO21__derived_enum_equalsySbAE_AEtFZ_0(v4, v5) & 1;
}

uint64_t sub_21F660BA4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_21F716920();
  if (v1)
  {
    sub_21F71692C();
    if (v1 == 1)
    {
      sub_21F716134();
      sub_21F716134();
    }
  }
  else
  {
    sub_21F71692C();
    sub_21F716134();
  }
  return sub_21F716968();
}

uint64_t sub_21F660C5C()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 32))
  {
    sub_21F71692C();
    return sub_21F716134();
  }
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    sub_21F71692C();
    sub_21F716134();
    return sub_21F716134();
  }
  return sub_21F71692C();
}

uint64_t sub_21F660D04()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  sub_21F716920();
  if (v1)
  {
    sub_21F71692C();
    if (v1 == 1)
    {
      sub_21F716134();
      sub_21F716134();
    }
  }
  else
  {
    sub_21F71692C();
    sub_21F716134();
  }
  return sub_21F716968();
}

uint64_t IdMSAccount.ID.altDsid.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.altDsid.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.altDsid.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.ID.username.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.username.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.username.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.ID.dsid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.dsid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.dsid.modify())()
{
  return nullsub_1;
}

void __swiftcall IdMSAccount.ID.init(altDsid:username:dsid:)(ProximityAppleIDSetup::IdMSAccount::ID *__return_ptr retstr, Swift::String altDsid, Swift::String_optional username, Swift::String_optional dsid)
{
  retstr->altDsid = altDsid;
  retstr->username = username;
  retstr->dsid = dsid;
}

uint64_t IdMSAccount.ID.hash(into:)()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 24))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 40))
    {
LABEL_3:
      sub_21F716938();
      swift_bridgeObjectRetain();
      sub_21F716134();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_21F716938();
    if (*(_QWORD *)(v0 + 40))
      goto LABEL_3;
  }
  return sub_21F716938();
}

uint64_t sub_21F660FF0(char a1)
{
  return *(_QWORD *)&aAltdsid_3[8 * a1];
}

uint64_t sub_21F661010()
{
  char *v0;

  return sub_21F660FF0(*v0);
}

uint64_t sub_21F661018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F665E44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F66103C()
{
  sub_21F665E00();
  return sub_21F7169E0();
}

uint64_t sub_21F661064()
{
  sub_21F665E00();
  return sub_21F7169EC();
}

uint64_t IdMSAccount.ID.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F665E00();
  sub_21F7169C8();
  v8[15] = 0;
  sub_21F716734();
  if (!v1)
  {
    v8[14] = 1;
    sub_21F716710();
    v8[13] = 2;
    sub_21F716710();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdMSAccount.ID.hashValue.getter()
{
  sub_21F716920();
  IdMSAccount.ID.hash(into:)();
  return sub_21F716968();
}

double IdMSAccount.ID.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_21F665F78(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

double sub_21F661244@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_21F665F78(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_21F661284(_QWORD *a1)
{
  return IdMSAccount.ID.encode(to:)(a1);
}

uint64_t sub_21F661298(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s21ProximityAppleIDSetup11IdMSAccountV2IDV23__derived_struct_equalsySbAE_AEtFZ_0(v7, v8) & 1;
}

uint64_t sub_21F6612DC()
{
  sub_21F716920();
  IdMSAccount.ID.hash(into:)();
  return sub_21F716968();
}

uint64_t sub_21F66131C()
{
  sub_21F716920();
  IdMSAccount.ID.hash(into:)();
  return sub_21F716968();
}

uint64_t IdMSAccount.AnisettePackage.machineID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.AnisettePackage.oneTimePassword.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.AnisettePackage.routingInfo.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t IdMSAccount.AnisettePackage.init(machineID:oneTimePassword:routingInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t IdMSAccount.AnisettePackage.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716950();
}

uint64_t sub_21F661440(char a1)
{
  return *(_QWORD *)&aMachineionetim[8 * a1];
}

uint64_t sub_21F661460()
{
  char *v0;

  return sub_21F661440(*v0);
}

uint64_t sub_21F661468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6661E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F66148C()
{
  sub_21F66619C();
  return sub_21F7169E0();
}

uint64_t sub_21F6614B4()
{
  sub_21F66619C();
  return sub_21F7169EC();
}

uint64_t IdMSAccount.AnisettePackage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F66619C();
  sub_21F7169C8();
  v8[15] = 0;
  sub_21F716734();
  if (!v1)
  {
    v8[14] = 1;
    sub_21F716734();
    v8[13] = 2;
    sub_21F716770();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdMSAccount.AnisettePackage.hashValue.getter()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  return sub_21F716968();
}

double IdMSAccount.AnisettePackage.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_21F666354(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

double sub_21F6616EC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_21F666354(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_21F661730(_QWORD *a1)
{
  return IdMSAccount.AnisettePackage.encode(to:)(a1);
}

BOOL sub_21F661744(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return _s21ProximityAppleIDSetup11IdMSAccountV15AnisettePackageV23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7);
}

uint64_t sub_21F66178C()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  return sub_21F716968();
}

uint64_t sub_21F661828()
{
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716950();
}

uint64_t sub_21F6618AC()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  return sub_21F716968();
}

uint64_t IdMSAccount.DeviceInfo.deviceIdentifier.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t IdMSAccount.DeviceInfo.deviceIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IdMSAccount.DeviceInfo.deviceIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.DeviceInfo.serverFriendlyDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t IdMSAccount.DeviceInfo.serverFriendlyDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IdMSAccount.DeviceInfo.serverFriendlyDescription.modify())()
{
  return nullsub_1;
}

uint64_t static IdMSAccount.DeviceInfo.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a1 == a5 && a2 == a6 || (v12 = sub_21F716800(), result = 0, (v12 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return sub_21F716800();
  }
  return result;
}

uint64_t IdMSAccount.DeviceInfo.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

BOOL sub_21F661B3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_21F661B54()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

uint64_t sub_21F661B98()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

unint64_t sub_21F661BD8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0xD000000000000010;
}

uint64_t sub_21F661C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6665B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F661C40()
{
  sub_21F666574();
  return sub_21F7169E0();
}

uint64_t sub_21F661C68()
{
  sub_21F666574();
  return sub_21F7169EC();
}

uint64_t IdMSAccount.DeviceInfo.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF78);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F666574();
  sub_21F7169C8();
  v14 = 0;
  sub_21F716734();
  if (!v5)
  {
    v13 = 1;
    sub_21F716734();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t IdMSAccount.DeviceInfo.hashValue.getter()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t IdMSAccount.DeviceInfo.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_21F6666A0(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_21F661E6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_21F6666A0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_21F661E98(_QWORD *a1)
{
  uint64_t *v1;

  return IdMSAccount.DeviceInfo.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_21F661EB4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_21F716800(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_21F716800();
  }
  return result;
}

uint64_t sub_21F661F44()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F661FC8()
{
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F662038()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.continuationKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.passwordResetKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.anisettePackage.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 IdMSAccount.Credential.CompanionKeyEnvelope.init(continuationKey:passwordResetKey:anisettePackage:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __n128 result;
  __int128 v7;
  uint64_t v8;

  result = *(__n128 *)a5;
  v7 = *(_OWORD *)(a5 + 16);
  v8 = *(_QWORD *)(a5 + 32);
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(__n128 *)(a6 + 32) = result;
  *(_OWORD *)(a6 + 48) = v7;
  *(_QWORD *)(a6 + 64) = v8;
  return result;
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F66223C(char a1)
{
  if (!a1)
    return 0x61756E69746E6F63;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x6574746573696E61;
}

uint64_t sub_21F6622B0()
{
  char *v0;

  return sub_21F66223C(*v0);
}

uint64_t sub_21F6622B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6668D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6622DC()
{
  sub_21F66684C();
  return sub_21F7169E0();
}

uint64_t sub_21F662304()
{
  sub_21F66684C();
  return sub_21F7169EC();
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  _BYTE v11[16];
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBF88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F66684C();
  sub_21F7169C8();
  LOBYTE(v12) = 0;
  sub_21F716734();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_21F716734();
    v9 = *(_OWORD *)(v3 + 48);
    v12 = *(_OWORD *)(v3 + 32);
    v13 = v9;
    v14 = *(_QWORD *)(v3 + 64);
    v11[15] = 2;
    sub_21F666890();
    sub_21F716758();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.hashValue.getter()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

__n128 IdMSAccount.Credential.CompanionKeyEnvelope.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_21F666A48(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

__n128 sub_21F6625CC@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_21F666A48(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_21F66261C(_QWORD *a1)
{
  return IdMSAccount.Credential.CompanionKeyEnvelope.encode(to:)(a1);
}

uint64_t sub_21F662630(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  uint64_t v8;
  _OWORD v9[4];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_QWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_QWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO20CompanionKeyEnvelopeV23__derived_struct_equalsySbAG_AGtFZ_0(v7, v9) & 1;
}

uint64_t sub_21F66268C()
{
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F662774()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  sub_21F716950();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F662874()
{
  sub_21F669D7C(&qword_2554DA980, (uint64_t)&unk_21F71772C);
  return sub_21F7161A0();
}

uint64_t sub_21F6628E0()
{
  sub_21F669D7C(&qword_2554DA980, (uint64_t)&unk_21F71772C);
  return sub_21F716164();
}

id IdMSAccount.AnisettePackage.into()()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0ACA8]), sel_init);
  v2 = (void *)sub_21F7160E0();
  objc_msgSend(v1, sel_setMachineID_, v2);

  v3 = (void *)sub_21F7160E0();
  objc_msgSend(v1, sel_setOneTimePassword_, v3);

  objc_msgSend(v1, sel_setRoutingInfo_, *(_QWORD *)(v0 + 32));
  return v1;
}

id IdMSAccount.into(with:)(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD *v7;

  v4 = *v1;
  v3 = v1[1];
  v5 = (void *)sub_21F7160E0();
  v6 = objc_msgSend(a1, sel_authKitAccountWithAltDSID_, v5);

  if (!v6)
  {
    sub_21F666CC4();
    swift_allocError();
    *v7 = v4;
    v7[1] = v3;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return v6;
}

void ACAccount.into(with:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45[7];
  uint64_t v46;

  ACAccount.id(with:)(a1, v45);
  if (v3)
    return;
  v7 = v45[0];
  v6 = v45[1];
  v8 = v45[4];
  v36 = v45[3];
  v37 = v45[2];
  v39 = v45[5];
  v9 = objc_msgSend(a1, sel_givenNameForAccount_, v2);
  if (!v9)
    goto LABEL_6;
  v10 = v9;
  v46 = sub_21F716104();
  v12 = v11;

  v13 = objc_msgSend(a1, sel_familyNameForAccount_, v2);
  if (!v13)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    v46 = 0;
    v12 = 0;
    v34 = 0;
    v35 = 0;
    v17 = 2;
    goto LABEL_7;
  }
  v14 = v13;
  v15 = sub_21F716104();
  v34 = v16;
  v35 = v15;

  v17 = 1;
LABEL_7:
  v33 = v17;
  v18 = objc_msgSend(a1, sel_servicesUsingAccount_, v2);
  v40 = v8;
  v38 = v12;
  if (v18)
  {
    v19 = v18;
    v32 = v6;
    v20 = sub_21F716314();

    v21 = sub_21F663114(v20);
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v31 = v7;
      swift_bridgeObjectRetain();
      v23 = 0;
      v24 = (void *)*MEMORY[0x24BE06080];
      v44 = (void *)*MEMORY[0x24BE06088];
      v43 = (void *)*MEMORY[0x24BE06098];
      v42 = (void *)*MEMORY[0x24BE06090];
      v41 = (void *)*MEMORY[0x24BE060A0];
      v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
      do
      {
        v26 = v24;
        switch(*(_QWORD *)(v21 + 8 * v23 + 32))
        {
          case 1:
          case 7:
            goto LABEL_17;
          case 2:
            v26 = v41;
            goto LABEL_17;
          case 4:
            v26 = v43;
            goto LABEL_17;
          case 5:
            v26 = v44;
            goto LABEL_17;
          case 6:
            v26 = v42;
LABEL_17:
            v27 = v26;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v25 = sub_21F6635BC(0, v25[2] + 1, 1, v25, &qword_2554DC1A8, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_21F666DF0);
            v29 = v25[2];
            v28 = v25[3];
            if (v29 >= v28 >> 1)
              v25 = sub_21F6635BC((_QWORD *)(v28 > 1), v29 + 1, 1, v25, &qword_2554DC1A8, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_21F666DF0);
            v25[2] = v29 + 1;
            v25[v29 + 4] = v27;
            break;
          default:
            break;
        }
        ++v23;
      }
      while (v22 != v23);
      swift_bridgeObjectRelease();
      v7 = v31;
    }
    else
    {
      v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    swift_bridgeObjectRelease();
    v6 = v32;
  }
  else
  {
    v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v30 = sub_21F647584((uint64_t)v25);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v37;
  *(_QWORD *)(a2 + 24) = v36;
  *(_QWORD *)(a2 + 32) = v40;
  *(_QWORD *)(a2 + 40) = v39;
  *(_QWORD *)(a2 + 48) = v46;
  *(_QWORD *)(a2 + 56) = v38;
  *(_QWORD *)(a2 + 64) = v35;
  *(_QWORD *)(a2 + 72) = v34;
  *(_BYTE *)(a2 + 80) = v33;
  *(_QWORD *)(a2 + 88) = v30;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_QWORD *)(a2 + 160) = 0;
  *(_BYTE *)(a2 + 168) = 3;
}

void ACAccount.id(with:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  id v17;
  _QWORD *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_accountType);
  if (!v6)
  {
    __break(1u);
    goto LABEL_26;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, sel_identifier);

  if (!v8)
  {
    sub_21F716104();
    goto LABEL_11;
  }
  v9 = sub_21F716104();
  v11 = v10;

  v12 = sub_21F716104();
  if (!v11)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    v16 = objc_msgSend(v3, sel_accountType);
    if (v16)
    {
      v17 = v16;
LABEL_14:
      sub_21F666EF4();
      swift_allocError();
      *v18 = v17;
      swift_willThrow();
      return;
    }
LABEL_26:
    __break(1u);
    return;
  }
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  v15 = sub_21F716800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v19 = objc_msgSend(a1, sel_altDSIDForAccount_, v3);
  if (!v19)
  {
    v17 = 0;
    goto LABEL_14;
  }
  v20 = v19;
  v21 = sub_21F716104();
  v23 = v22;

  v24 = objc_msgSend(a1, sel_DSIDForAccount_, v3);
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, sel_stringValue);
    v27 = sub_21F716104();
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0;
  }
  v30 = objc_msgSend(v3, sel_username);
  if (v30)
  {
    v31 = v30;
    v32 = sub_21F716104();
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  *a2 = v21;
  a2[1] = v23;
  a2[2] = v32;
  a2[3] = v34;
  a2[4] = v27;
  a2[5] = v29;
}

void ACAccount.name(with:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = v2;
  v6 = objc_msgSend(a1, sel_givenNameForAccount_, v2);
  if (!v6)
    goto LABEL_5;
  v7 = v6;
  v8 = sub_21F716104();
  v10 = v9;

  v11 = objc_msgSend(a1, sel_familyNameForAccount_, v3);
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v8 = 0;
    v10 = 0;
    v13 = 0;
    v15 = 0;
    v16 = 2;
    goto LABEL_6;
  }
  v12 = v11;
  v13 = sub_21F716104();
  v15 = v14;

  v16 = 1;
LABEL_6:
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v15;
  *(_BYTE *)(a2 + 32) = v16;
}

uint64_t sub_21F663114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE v19[40];
  uint64_t v20;
  char v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_22;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v6)
      goto LABEL_30;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_30;
      v13 = *(_QWORD *)(v2 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_30;
        v13 = *(_QWORD *)(v2 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_30;
          v13 = *(_QWORD *)(v2 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_21:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_22:
    sub_21F6474FC(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v24);
    v22[0] = v24[0];
    v22[1] = v24[1];
    v23 = v25;
    sub_21F6474FC((uint64_t)v22, (uint64_t)v19);
    v15 = swift_dynamicCast();
    if ((v15 & 1) == 0)
      v20 = 0;
    v21 = v15 ^ 1;
    result = sub_21F647538((uint64_t)v22);
    if ((v21 & 1) == 0)
    {
      v16 = v20;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_21F6635BC(0, v9[2] + 1, 1, v9, &qword_2554DC1B0, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_21F666D08);
        v9 = (_QWORD *)result;
      }
      v18 = v9[2];
      v17 = v9[3];
      if (v18 >= v17 >> 1)
      {
        result = (uint64_t)sub_21F6635BC((_QWORD *)(v17 > 1), v18 + 1, 1, v9, &qword_2554DC1B0, (void (*)(_QWORD, int64_t, _QWORD *, _QWORD *))sub_21F666D08);
        v9 = (_QWORD *)result;
      }
      v9[2] = v18 + 1;
      v9[v18 + 4] = v16;
    }
  }
  v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v9;
  }
  v13 = *(_QWORD *)(v2 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v6)
      goto LABEL_30;
    v13 = *(_QWORD *)(v2 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

id AKAnisetteData.into()@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = objc_msgSend(v1, sel_machineID);
  if (result)
  {
    v4 = result;
    v5 = sub_21F716104();
    v7 = v6;

    result = objc_msgSend(v1, sel_oneTimePassword);
    if (result)
    {
      v8 = result;
      v9 = sub_21F716104();
      v11 = v10;

      result = objc_msgSend(v1, sel_routingInfo);
      *a1 = v5;
      a1[1] = v7;
      a1[2] = v9;
      a1[3] = v11;
      a1[4] = (uint64_t)result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

ProximityAppleIDSetup::IdMSAccount::DeviceInfo_optional __swiftcall AKDevice.into()()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  ProximityAppleIDSetup::IdMSAccount::DeviceInfo_optional result;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_uniqueDeviceIdentifier);
  if (v2)
  {
    v3 = sub_21F716104();
    v5 = v4;

    v6 = objc_msgSend(v1, sel_serverFriendlyDescription);
    if (v6)
    {
      v7 = v6;
      v8 = sub_21F716104();
      v2 = v9;

    }
    else
    {
      swift_bridgeObjectRelease();
      v3 = 0;
      v5 = 0;
      v8 = 0;
      v2 = 0;
    }
  }
  else
  {
    v3 = 0;
    v5 = 0;
    v8 = 0;
  }
  v10 = v3;
  v11 = v5;
  v12 = v8;
  v13 = v2;
  result.value.serverFriendlyDescription._object = v13;
  result.value.serverFriendlyDescription._countAndFlagsBits = v12;
  result.value.deviceIdentifier._object = v11;
  result.value.deviceIdentifier._countAndFlagsBits = v10;
  return result;
}

id IdMSAccount.DeviceInfo.into(with:)()
{
  id v0;
  void *v1;
  void *v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0AD68]), sel_init);
  objc_msgSend(v0, sel_setLinkType_, 3);
  v1 = (void *)sub_21F7160E0();
  objc_msgSend(v0, sel_setUniqueDeviceIdentifier_, v1);

  v2 = (void *)sub_21F7160E0();
  objc_msgSend(v0, sel_setServerFriendlyDescription_, v2);

  return v0;
}

_QWORD *sub_21F6635BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD, int64_t, _QWORD *, _QWORD *))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_21F6636D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_21F669C10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_21F6637DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v17;
  int64_t v18;

  sub_21F716968();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_21F71692C();
    }
    v17 = *(_QWORD *)(v3 + 8 * v10);
    if (!v17)
      break;
LABEL_16:
    v6 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    v13 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v12);
    sub_21F716104();
    sub_21F716920();
    v14 = v13;
    sub_21F716134();
    v15 = sub_21F716968();

    result = swift_bridgeObjectRelease();
    v9 ^= v15;
  }
  v18 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v17 = *(_QWORD *)(v3 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO20CompanionKeyEnvelopeV23__derived_struct_equalsySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_21F716800(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_21F716800(), result = 0, (v8 & 1) != 0))
    {
      v9 = a1[4];
      v10 = a1[5];
      v11 = a1[6];
      v12 = a1[7];
      v13 = a1[8];
      v14 = a2[4];
      v15 = a2[5];
      v16 = a2[6];
      v17 = a2[7];
      v18 = a2[8];
      if ((v9 != v14 || v10 != v15) && (sub_21F716800() & 1) == 0)
        return 0;
      if (v11 == v16 && v12 == v17)
      {
        if (v13 != v18)
          return 0;
      }
      else if ((sub_21F716800() & 1) == 0 || v13 != v18)
      {
        return 0;
      }
      return 1;
    }
  }
  return result;
}

void _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(_OWORD *a1)
{
  _OWORD v1[4];

  sub_21F65EF00(a1, v1);
  __asm { BR              X10 }
}

uint64_t sub_21F663ACC()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v33;
  v1 = v34;
  v3 = v35;
  v4 = v36;
  v5 = v37;
  v6 = v38;
  v7 = v39;
  v8 = v40;
  v9 = v41;
  sub_21F65EF00(v0, &v24);
  if (v32)
    goto LABEL_15;
  v20 = v9;
  v11 = v25;
  v10 = v26;
  v12 = v27;
  v22 = v29;
  v23 = v28;
  v21 = v30;
  v19 = v31;
  if (v2 != (_QWORD)v24 || v1 != *((_QWORD *)&v24 + 1))
  {
    v13 = v27;
    v14 = sub_21F716800();
    v12 = v13;
    if ((v14 & 1) == 0)
      goto LABEL_15;
  }
  if ((v3 == v11 && v4 == v10 || (v15 = v12, v16 = sub_21F716800(), v12 = v15, (v16 & 1) != 0))
    && (v5 == v12 && v6 == v23 || (sub_21F716800() & 1) != 0)
    && (v7 == v22 && v8 == v21 || (sub_21F716800() & 1) != 0)
    && v20 == v19)
  {
    v17 = 1;
  }
  else
  {
LABEL_15:
    v17 = 0;
  }
  return v17 & 1;
}

BOOL _s21ProximityAppleIDSetup11IdMSAccountV15AnisettePackageV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  char v8;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_21F716800(), result = 0, (v5 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3])
      return a1[4] == a2[4];
    v8 = sub_21F716800();
    result = 0;
    if ((v8 & 1) != 0)
      return a1[4] == a2[4];
  }
  return result;
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV2IDV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v5 = sub_21F716800();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  v7 = a1[3];
  v8 = a2[3];
  if (!v7)
  {
    if (v8)
      return 0;
    goto LABEL_15;
  }
  if (!v8)
    return 0;
  v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (v10 = sub_21F716800(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    v11 = a1[5];
    v12 = a2[5];
    if (v11)
    {
      if (v12 && (a1[4] == a2[4] && v11 == v12 || (sub_21F716800() & 1) != 0))
        return 1;
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV4NameO21__derived_enum_equalsySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int8x16_t v7;
  char v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  int8x16_t v13;
  int8x8_t v14;
  int8x16_t v17;
  int8x16_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;

  sub_21F65EF28(a1, (uint64_t)&v20);
  if (!v24)
  {
    v10 = v20;
    v11 = v21;
    sub_21F65EF28(a2, (uint64_t)&v17);
    if (!v19)
    {
      if (v10 != v17.i64[0] || v11 != v17.i64[1])
        goto LABEL_13;
      goto LABEL_19;
    }
LABEL_18:
    v9 = 0;
    return v9 & 1;
  }
  if (v24 != 1)
  {
    sub_21F65EF28(a2, (uint64_t)&v17);
    v13 = vorrq_s8(v17, v18);
    v14 = vorr_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL));
    if (v19 == 2 && *(_QWORD *)&v14 == 0)
      goto LABEL_19;
    goto LABEL_18;
  }
  v3 = v20;
  v4 = v21;
  v5 = v22;
  v6 = v23;
  sub_21F65EF28(a2, (uint64_t)&v17);
  if (v19 != 1)
    goto LABEL_18;
  v7 = v18;
  if (__PAIR128__(v4, v3) == *(_OWORD *)&v17 || (v8 = sub_21F716800(), v9 = 0, (v8 & 1) != 0))
  {
    if (__PAIR128__(v6, v5) != *(_OWORD *)&v7)
    {
LABEL_13:
      v9 = sub_21F716800();
      return v9 & 1;
    }
LABEL_19:
    v9 = 1;
  }
  return v9 & 1;
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int8x16_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  int8x16_t v25;
  _OWORD v27[5];
  _OWORD v28[5];
  __int128 v29[2];
  __int128 v30[2];
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  int8x16_t v36;
  int8x16_t v37;
  char v38;

  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_21F716800(), v13 = 0, (v12 & 1) != 0))
  {
    if (v6)
    {
      if (!v8)
        goto LABEL_33;
      if (v4 != v9 || v6 != v8)
      {
        v14 = sub_21F716800();
        v13 = 0;
        if ((v14 & 1) == 0)
          return v13 & 1;
      }
    }
    else if (v8)
    {
      goto LABEL_33;
    }
    if (v7)
    {
      if (!v10)
        goto LABEL_33;
      if (v5 != v11 || v7 != v10)
      {
        v15 = sub_21F716800();
        v13 = 0;
        if ((v15 & 1) == 0)
          return v13 & 1;
      }
    }
    else if (v10)
    {
      goto LABEL_33;
    }
    sub_21F65EF28((__int128 *)(a1 + 48), (uint64_t)v30);
    sub_21F65EF28((__int128 *)(a2 + 48), (uint64_t)v29);
    sub_21F65EF28(v30, (uint64_t)&v31);
    if (v35)
    {
      if (v35 != 1)
      {
        sub_21F65EF28(v29, (uint64_t)&v36);
        v13 = 0;
        if (v38 != 2)
          return v13 & 1;
        v25 = vorrq_s8(v36, v37);
        if (vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)))
          return v13 & 1;
        goto LABEL_31;
      }
      v16 = v31;
      v17 = v32;
      v18 = v33;
      v19 = v34;
      sub_21F65EF28(v29, (uint64_t)&v36);
      if (v38 != 1)
        goto LABEL_33;
      v20 = v37;
      if (__PAIR128__(v17, v16) != *(_OWORD *)&v36)
      {
        v21 = sub_21F716800();
        v13 = 0;
        if ((v21 & 1) == 0)
          return v13 & 1;
      }
      if (__PAIR128__(v19, v18) == *(_OWORD *)&v20)
        goto LABEL_31;
    }
    else
    {
      v22 = v31;
      v23 = v32;
      sub_21F65EF28(v29, (uint64_t)&v36);
      if (v38)
        goto LABEL_33;
      if (__PAIR128__(v23, v22) == *(_OWORD *)&v36)
        goto LABEL_31;
    }
    v24 = sub_21F716800();
    v13 = 0;
    if ((v24 & 1) == 0)
      return v13 & 1;
LABEL_31:
    if ((sub_21F6C4BDC(*(_QWORD *)(a1 + 88), *(_QWORD *)(a2 + 88)) & 1) != 0)
    {
      sub_21F65EF00((_OWORD *)(a1 + 96), v28);
      sub_21F65EF00((_OWORD *)(a2 + 96), v27);
      _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v28);
      return v13 & 1;
    }
LABEL_33:
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_21F6641CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F664218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t result;

  if (a10 - 1 >= 2)
  {
    if (a10)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F66428C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t result;

  if (a10 - 1 >= 2)
  {
    if (a10)
      return result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_21F664300()
{
  unint64_t result;

  result = qword_2554DBE90;
  if (!qword_2554DBE90)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A388, &type metadata for IdMSAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBE90);
  }
  return result;
}

unint64_t sub_21F664344()
{
  unint64_t result;

  result = qword_2554DBE98;
  if (!qword_2554DBE98)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.ID, &type metadata for IdMSAccount.ID);
    atomic_store(result, (unint64_t *)&qword_2554DBE98);
  }
  return result;
}

unint64_t sub_21F664388()
{
  unint64_t result;

  result = qword_2554DBEA0;
  if (!qword_2554DBEA0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Name, &type metadata for IdMSAccount.Name);
    atomic_store(result, (unint64_t *)&qword_2554DBEA0);
  }
  return result;
}

unint64_t sub_21F6643CC()
{
  unint64_t result;

  result = qword_2554DBEB8;
  if (!qword_2554DBEB8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential, &type metadata for IdMSAccount.Credential);
    atomic_store(result, (unint64_t *)&qword_2554DBEB8);
  }
  return result;
}

uint64_t sub_21F664410(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_21F664590@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  unsigned __int8 v94;
  int v95;
  char v96;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC228);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_21F664300();
  sub_21F7169B0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
  v54 = a2;
  v55 = v6;
  LOBYTE(v57) = 0;
  sub_21F66725C();
  sub_21F7166C8();
  v10 = v68;
  v11 = v70;
  v51 = v67;
  v52 = v69;
  v12 = v71;
  v13 = v72;
  LOBYTE(v57) = 1;
  sub_21F667170();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F7166C8();
  v42 = v12;
  v44 = v13;
  v46 = v11;
  v47 = v10;
  v15 = v67;
  v14 = v68;
  v16 = v69;
  v53 = v70;
  LODWORD(v11) = v71;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DBEA8);
  LOBYTE(v57) = 2;
  v45 = v15;
  v50 = v14;
  sub_21F667678(v15, v14, v16, v53, v11);
  sub_21F669D00(&qword_2554DC230, &qword_2554DD030, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1720]);
  v43 = 0;
  sub_21F7166C8();
  v49 = v16;
  v95 = v11;
  v17 = v45;
  v18 = v67;
  v96 = 3;
  sub_21F667084();
  v48 = v18;
  swift_bridgeObjectRetain();
  sub_21F7166C8();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v5);
  v43 = *((_QWORD *)&v89 + 1);
  v55 = v89;
  v40 = *((_QWORD *)&v90 + 1);
  v41 = v90;
  v38 = *((_QWORD *)&v91 + 1);
  v39 = v91;
  v36 = *((_QWORD *)&v92 + 1);
  v37 = v92;
  v35 = v93;
  HIDWORD(v34) = v94;
  v19 = v50;
  *(_QWORD *)&v57 = v51;
  *((_QWORD *)&v57 + 1) = v47;
  v20 = v53;
  *(_QWORD *)&v58 = v52;
  *((_QWORD *)&v58 + 1) = v46;
  v21 = v44;
  *(_QWORD *)&v59 = v42;
  *((_QWORD *)&v59 + 1) = v44;
  *(_QWORD *)&v60 = v17;
  *((_QWORD *)&v60 + 1) = v50;
  v22 = v49;
  *(_QWORD *)&v61 = v49;
  *((_QWORD *)&v61 + 1) = v53;
  LOBYTE(v18) = v95;
  LOBYTE(v62) = v95;
  *((_QWORD *)&v62 + 1) = v48;
  v63 = v89;
  v64 = v90;
  v65 = v91;
  v66[0] = v92;
  *(_QWORD *)&v66[1] = v93;
  BYTE8(v66[1]) = v94;
  sub_21F669DBC((uint64_t)&v57);
  swift_bridgeObjectRelease();
  v23 = v22;
  sub_21F6641CC(v17, v19, v22, v20, v18);
  v24 = v21;
  swift_bridgeObjectRelease();
  v25 = v46;
  swift_bridgeObjectRelease();
  v26 = v47;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
  v67 = v51;
  v68 = v26;
  v69 = v52;
  v70 = v25;
  v71 = v42;
  v72 = v24;
  v73 = v45;
  v74 = v19;
  v75 = v23;
  v76 = v20;
  v77 = v18;
  v78 = v48;
  v79 = v55;
  v80 = v43;
  v81 = v41;
  v82 = v40;
  v83 = v39;
  v84 = v38;
  v85 = v37;
  v86 = v36;
  v87 = v35;
  v88 = BYTE4(v34);
  result = sub_21F669EA8((uint64_t)&v67);
  v28 = v66[0];
  v29 = v54;
  v54[8] = v65;
  v29[9] = v28;
  *(_OWORD *)((char *)v29 + 153) = *(_OWORD *)((char *)v66 + 9);
  v30 = v62;
  v29[4] = v61;
  v29[5] = v30;
  v31 = v64;
  v29[6] = v63;
  v29[7] = v31;
  v32 = v58;
  *v29 = v57;
  v29[1] = v32;
  v33 = v60;
  v29[2] = v59;
  v29[3] = v33;
  return result;
}

unint64_t sub_21F664B4C()
{
  unint64_t result;

  result = qword_2554DBEE8;
  if (!qword_2554DBEE8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A338, &type metadata for IdMSAccount.Credential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBEE8);
  }
  return result;
}

unint64_t sub_21F664B90()
{
  unint64_t result;

  result = qword_2554DBEF0;
  if (!qword_2554DBEF0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A2E8, &type metadata for IdMSAccount.Credential.RawPasswordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBEF0);
  }
  return result;
}

unint64_t sub_21F664BD4()
{
  unint64_t result;

  result = qword_2554DBEF8;
  if (!qword_2554DBEF8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A298, &type metadata for IdMSAccount.Credential.PasswordlessTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBEF8);
  }
  return result;
}

unint64_t sub_21F664C18()
{
  unint64_t result;

  result = qword_2554DBF00;
  if (!qword_2554DBF00)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A248, &type metadata for IdMSAccount.Credential.CompanionKeysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF00);
  }
  return result;
}

unint64_t sub_21F664C5C()
{
  unint64_t result;

  result = qword_2554DBF08;
  if (!qword_2554DBF08)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential.CompanionKeyEnvelope, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope);
    atomic_store(result, (unint64_t *)&qword_2554DBF08);
  }
  return result;
}

unint64_t sub_21F664CA0()
{
  unint64_t result;

  result = qword_2554DBF10;
  if (!qword_2554DBF10)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A1F8, &type metadata for IdMSAccount.Credential.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF10);
  }
  return result;
}

uint64_t sub_21F664CE4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F696E61706D6F63 && a2 == 0xED00007379654B6ELL || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000021F726DC0 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7773736150776172 && a2 == 0xEB0000000064726FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_21F664E9C()
{
  return 12383;
}

uint64_t sub_21F664EA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v28 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC200);
  v26 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC208);
  v27 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v30 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC210);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v29 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC218);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC220);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_21F664B4C();
  v16 = v34;
  sub_21F7169B0();
  if (!v16)
  {
    v22[2] = v10;
    v22[0] = v8;
    v22[1] = v7;
    v34 = v12;
    v17 = sub_21F7166EC();
    if (*(_QWORD *)(v17 + 16) == 1)
      __asm { BR              X10 }
    v18 = sub_21F71653C();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
    *v20 = &type metadata for IdMSAccount.Credential;
    sub_21F716674();
    sub_21F716530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v11);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
}

unint64_t sub_21F665560()
{
  unint64_t result;

  result = qword_2554DBF38;
  if (!qword_2554DBF38)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A1A8, &type metadata for IdMSAccount.Name.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF38);
  }
  return result;
}

unint64_t sub_21F6655A4()
{
  unint64_t result;

  result = qword_2554DBF40;
  if (!qword_2554DBF40)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A158, &type metadata for IdMSAccount.Name.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF40);
  }
  return result;
}

unint64_t sub_21F6655E8()
{
  unint64_t result;

  result = qword_2554DBF48;
  if (!qword_2554DBF48)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A108, &type metadata for IdMSAccount.Name.ShortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF48);
  }
  return result;
}

unint64_t sub_21F66562C()
{
  unint64_t result;

  result = qword_2554DBF50;
  if (!qword_2554DBF50)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A0B8, &type metadata for IdMSAccount.Name.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF50);
  }
  return result;
}

uint64_t sub_21F665670(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74726F6873 && a2 == 0xE500000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1819047270 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F66578C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7473726966 && a2 == 0xE500000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953718636 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F66585C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_21F716800();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_21F6658C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;

  v49 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1D8);
  v4 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  v47 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1E0);
  v48 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1E8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_21F665560();
  v16 = v53;
  sub_21F7169B0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v52);
  v44 = v7;
  v17 = v50;
  v18 = v51;
  v53 = v12;
  v19 = sub_21F7166EC();
  v20 = v11;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v24 = sub_21F71653C();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
    *v26 = &type metadata for IdMSAccount.Name;
    sub_21F716674();
    sub_21F716530();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v11);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v52);
  }
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      v55 = 1;
      sub_21F6655E8();
      v21 = v17;
      sub_21F716668();
      v22 = v45;
      v23 = sub_21F7166A4();
      v32 = v31;
      v33 = *(void (**)(char *, uint64_t))(v48 + 8);
      v48 = v23;
      v33(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v20);
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v37 = (uint64_t)v52;
      v38 = v49;
    }
    else
    {
      v58 = 2;
      sub_21F6655A4();
      v27 = v11;
      sub_21F716668();
      v57 = 0;
      v28 = v46;
      v48 = sub_21F7166A4();
      v50 = v39;
      v56 = 1;
      v40 = sub_21F7166A4();
      v41 = v18;
      v42 = v53;
      v34 = v40;
      v35 = v43;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v27);
      v36 = 1;
      v37 = (uint64_t)v52;
      v38 = v49;
      v32 = v50;
    }
    v30 = v48;
  }
  else
  {
    v54 = 0;
    sub_21F66562C();
    sub_21F716668();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v44);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v11);
    v30 = 0;
    v32 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 2;
    v37 = (uint64_t)v52;
    v38 = v49;
  }
  result = __swift_destroy_boxed_opaque_existential_0Tm(v37);
  *(_QWORD *)v38 = v30;
  *(_QWORD *)(v38 + 8) = v32;
  *(_QWORD *)(v38 + 16) = v34;
  *(_QWORD *)(v38 + 24) = v35;
  *(_BYTE *)(v38 + 32) = v36;
  return result;
}

unint64_t sub_21F665E00()
{
  unint64_t result;

  result = qword_2554DBF60;
  if (!qword_2554DBF60)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A068, &type metadata for IdMSAccount.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF60);
  }
  return result;
}

uint64_t sub_21F665E44(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x64697344746C61 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E72657375 && a2 == 0xE800000000000000 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684632420 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F665F78@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F665E00();
  sub_21F7169B0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v25 = 0;
  v9 = sub_21F7166A4();
  v11 = v10;
  v22 = v9;
  v24 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_21F716680();
  v14 = v13;
  v21 = v12;
  v23 = 2;
  swift_bridgeObjectRetain();
  v15 = sub_21F716680();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v22;
  a2[1] = v11;
  a2[2] = v21;
  a2[3] = v14;
  a2[4] = v19;
  a2[5] = v17;
  return result;
}

unint64_t sub_21F66619C()
{
  unint64_t result;

  result = qword_2554DBF70;
  if (!qword_2554DBF70)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A018, &type metadata for IdMSAccount.AnisettePackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF70);
  }
  return result;
}

uint64_t sub_21F6661E0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x49656E696863616DLL && a2 == 0xE900000000000044;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50656D6954656E6FLL && a2 == 0xEF64726F77737361 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49676E6974756F72 && a2 == 0xEB000000006F666ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F666354@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F66619C();
  sub_21F7169B0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v24 = 0;
  v9 = sub_21F7166A4();
  v11 = v10;
  v21 = v9;
  v23 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_21F7166A4();
  v14 = v13;
  v19 = v12;
  v22 = 2;
  swift_bridgeObjectRetain();
  v20 = v14;
  v15 = sub_21F7166E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v16 = v20;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v21;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v16;
  a2[4] = v15;
  return result;
}

unint64_t sub_21F666574()
{
  unint64_t result;

  result = qword_2554DBF80;
  if (!qword_2554DBF80)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719FC8, &type metadata for IdMSAccount.DeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF80);
  }
  return result;
}

uint64_t sub_21F6665B8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000021F726DE0 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000021F726E00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F6666A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F666574();
  sub_21F7169B0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_21F7166A4();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_21F7166A4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_21F66684C()
{
  unint64_t result;

  result = qword_2554DBF90;
  if (!qword_2554DBF90)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719F78, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DBF90);
  }
  return result;
}

unint64_t sub_21F666890()
{
  unint64_t result;

  result = qword_2554DBF98;
  if (!qword_2554DBF98)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.AnisettePackage, &type metadata for IdMSAccount.AnisettePackage);
    atomic_store(result, (unint64_t *)&qword_2554DBF98);
  }
  return result;
}

uint64_t sub_21F6668D4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x61756E69746E6F63 && a2 == 0xEF79654B6E6F6974;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021F726E20 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574746573696E61 && a2 == 0xEF6567616B636150)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F666A48@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F66684C();
  sub_21F7169B0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  LOBYTE(v25) = 0;
  v9 = sub_21F7166A4();
  v11 = v10;
  v24 = v9;
  LOBYTE(v25) = 1;
  swift_bridgeObjectRetain();
  v12 = sub_21F7166A4();
  v14 = v13;
  v22 = v12;
  v30 = 2;
  sub_21F667348();
  swift_bridgeObjectRetain();
  v23 = v14;
  sub_21F7166C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v25;
  v15 = v26;
  v18 = v27;
  v17 = v28;
  v19 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v16;
  a2[5] = v15;
  a2[6] = v18;
  a2[7] = v17;
  a2[8] = v19;
  return result;
}

unint64_t sub_21F666CC4()
{
  unint64_t result;

  result = qword_2554DBFA0;
  if (!qword_2554DBFA0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.ConversionFailure, &type metadata for IdMSAccount.ConversionFailure);
    atomic_store(result, (unint64_t *)&qword_2554DBFA0);
  }
  return result;
}

char *sub_21F666D08(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_21F716638();
  __break(1u);
  return result;
}

uint64_t sub_21F666DF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for AIDAServiceType(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21F716638();
  __break(1u);
  return result;
}

unint64_t sub_21F666EF4()
{
  unint64_t result;

  result = qword_2554DBFA8;
  if (!qword_2554DBFA8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for ACAccount.ConversionFailure, &type metadata for ACAccount.ConversionFailure);
    atomic_store(result, (unint64_t *)&qword_2554DBFA8);
  }
  return result;
}

uint64_t sub_21F666F38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F666F54, (uint64_t (*)(void))sub_21F666F98, (uint64_t (*)(void))sub_21F666FDC);
}

unint64_t sub_21F666F54()
{
  unint64_t result;

  result = qword_2554DD020;
  if (!qword_2554DD020)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount, &type metadata for IdMSAccount);
    atomic_store(result, (unint64_t *)&qword_2554DD020);
  }
  return result;
}

unint64_t sub_21F666F98()
{
  unint64_t result;

  result = qword_2554DBFB0;
  if (!qword_2554DBFB0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount, &type metadata for IdMSAccount);
    atomic_store(result, (unint64_t *)&qword_2554DBFB0);
  }
  return result;
}

unint64_t sub_21F666FDC()
{
  unint64_t result;

  result = qword_2554DBFB8;
  if (!qword_2554DBFB8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount, &type metadata for IdMSAccount);
    atomic_store(result, (unint64_t *)&qword_2554DBFB8);
  }
  return result;
}

unint64_t sub_21F667024()
{
  unint64_t result;

  result = qword_2554DBFC0;
  if (!qword_2554DBFC0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount, &type metadata for IdMSAccount);
    atomic_store(result, (unint64_t *)&qword_2554DBFC0);
  }
  return result;
}

uint64_t sub_21F667068(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F667084, (uint64_t (*)(void))sub_21F6643CC, (uint64_t (*)(void))sub_21F6670C8);
}

unint64_t sub_21F667084()
{
  unint64_t result;

  result = qword_2554DBFC8;
  if (!qword_2554DBFC8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential, &type metadata for IdMSAccount.Credential);
    atomic_store(result, (unint64_t *)&qword_2554DBFC8);
  }
  return result;
}

unint64_t sub_21F6670C8()
{
  unint64_t result;

  result = qword_2554DBFD0;
  if (!qword_2554DBFD0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential, &type metadata for IdMSAccount.Credential);
    atomic_store(result, (unint64_t *)&qword_2554DBFD0);
  }
  return result;
}

unint64_t sub_21F667110()
{
  unint64_t result;

  result = qword_2554DBFD8;
  if (!qword_2554DBFD8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential, &type metadata for IdMSAccount.Credential);
    atomic_store(result, (unint64_t *)&qword_2554DBFD8);
  }
  return result;
}

uint64_t sub_21F667154(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F667170, (uint64_t (*)(void))sub_21F664388, (uint64_t (*)(void))sub_21F6671B4);
}

unint64_t sub_21F667170()
{
  unint64_t result;

  result = qword_2554DBFE0;
  if (!qword_2554DBFE0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Name, &type metadata for IdMSAccount.Name);
    atomic_store(result, (unint64_t *)&qword_2554DBFE0);
  }
  return result;
}

unint64_t sub_21F6671B4()
{
  unint64_t result;

  result = qword_2554DBFE8;
  if (!qword_2554DBFE8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Name, &type metadata for IdMSAccount.Name);
    atomic_store(result, (unint64_t *)&qword_2554DBFE8);
  }
  return result;
}

unint64_t sub_21F6671FC()
{
  unint64_t result;

  result = qword_2554DBFF0;
  if (!qword_2554DBFF0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Name, &type metadata for IdMSAccount.Name);
    atomic_store(result, (unint64_t *)&qword_2554DBFF0);
  }
  return result;
}

uint64_t sub_21F667240(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F66725C, (uint64_t (*)(void))sub_21F664344, (uint64_t (*)(void))sub_21F6672A0);
}

unint64_t sub_21F66725C()
{
  unint64_t result;

  result = qword_2554DBFF8;
  if (!qword_2554DBFF8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.ID, &type metadata for IdMSAccount.ID);
    atomic_store(result, (unint64_t *)&qword_2554DBFF8);
  }
  return result;
}

unint64_t sub_21F6672A0()
{
  unint64_t result;

  result = qword_2554DC000;
  if (!qword_2554DC000)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.ID, &type metadata for IdMSAccount.ID);
    atomic_store(result, (unint64_t *)&qword_2554DC000);
  }
  return result;
}

unint64_t sub_21F6672E8()
{
  unint64_t result;

  result = qword_2554DC008;
  if (!qword_2554DC008)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.ID, &type metadata for IdMSAccount.ID);
    atomic_store(result, (unint64_t *)&qword_2554DC008);
  }
  return result;
}

uint64_t sub_21F66732C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F667348, (uint64_t (*)(void))sub_21F666890, (uint64_t (*)(void))sub_21F66738C);
}

unint64_t sub_21F667348()
{
  unint64_t result;

  result = qword_2554DC010;
  if (!qword_2554DC010)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.AnisettePackage, &type metadata for IdMSAccount.AnisettePackage);
    atomic_store(result, (unint64_t *)&qword_2554DC010);
  }
  return result;
}

unint64_t sub_21F66738C()
{
  unint64_t result;

  result = qword_2554DC018;
  if (!qword_2554DC018)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.AnisettePackage, &type metadata for IdMSAccount.AnisettePackage);
    atomic_store(result, (unint64_t *)&qword_2554DC018);
  }
  return result;
}

unint64_t sub_21F6673D4()
{
  unint64_t result;

  result = qword_2554DC020;
  if (!qword_2554DC020)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.AnisettePackage, &type metadata for IdMSAccount.AnisettePackage);
    atomic_store(result, (unint64_t *)&qword_2554DC020);
  }
  return result;
}

uint64_t sub_21F667418(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F667434, (uint64_t (*)(void))sub_21F667478, (uint64_t (*)(void))sub_21F6674BC);
}

unint64_t sub_21F667434()
{
  unint64_t result;

  result = qword_2554DC028;
  if (!qword_2554DC028)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.DeviceInfo, &type metadata for IdMSAccount.DeviceInfo);
    atomic_store(result, (unint64_t *)&qword_2554DC028);
  }
  return result;
}

unint64_t sub_21F667478()
{
  unint64_t result;

  result = qword_2554DC030;
  if (!qword_2554DC030)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.DeviceInfo, &type metadata for IdMSAccount.DeviceInfo);
    atomic_store(result, (unint64_t *)&qword_2554DC030);
  }
  return result;
}

unint64_t sub_21F6674BC()
{
  unint64_t result;

  result = qword_2554DC038;
  if (!qword_2554DC038)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.DeviceInfo, &type metadata for IdMSAccount.DeviceInfo);
    atomic_store(result, (unint64_t *)&qword_2554DC038);
  }
  return result;
}

unint64_t sub_21F667504()
{
  unint64_t result;

  result = qword_2554DC040;
  if (!qword_2554DC040)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.DeviceInfo, &type metadata for IdMSAccount.DeviceInfo);
    atomic_store(result, (unint64_t *)&qword_2554DC040);
  }
  return result;
}

uint64_t sub_21F667548(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6675A8, (uint64_t (*)(void))sub_21F664C5C, (uint64_t (*)(void))sub_21F6675EC);
}

uint64_t sub_21F667564(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t result;

  a1[1] = a4();
  a1[2] = a5();
  result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6675A8()
{
  unint64_t result;

  result = qword_2554DC048;
  if (!qword_2554DC048)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential.CompanionKeyEnvelope, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope);
    atomic_store(result, (unint64_t *)&qword_2554DC048);
  }
  return result;
}

unint64_t sub_21F6675EC()
{
  unint64_t result;

  result = qword_2554DC050;
  if (!qword_2554DC050)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential.CompanionKeyEnvelope, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope);
    atomic_store(result, (unint64_t *)&qword_2554DC050);
  }
  return result;
}

unint64_t sub_21F667634()
{
  unint64_t result;

  result = qword_2554DC058;
  if (!qword_2554DC058)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for IdMSAccount.Credential.CompanionKeyEnvelope, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope);
    atomic_store(result, (unint64_t *)&qword_2554DC058);
  }
  return result;
}

uint64_t sub_21F667678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for IdMSAccount(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F6641CC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  swift_bridgeObjectRelease();
  return sub_21F664218(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
}

uint64_t initializeWithCopy for IdMSAccount(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unsigned __int8 v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F667678(v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  v21 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 104);
  v13 = *(_QWORD *)(a2 + 112);
  v14 = *(_QWORD *)(a2 + 120);
  v15 = *(_QWORD *)(a2 + 128);
  v16 = *(_QWORD *)(a2 + 136);
  v17 = *(_QWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a2 + 152);
  v18 = *(_QWORD *)(a2 + 160);
  v22 = *(_BYTE *)(a2 + 168);
  swift_bridgeObjectRetain();
  sub_21F66428C(v21, v12, v13, v14, v15, v16, v17, v19, v18, v22);
  *(_QWORD *)(a1 + 96) = v21;
  *(_QWORD *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v14;
  *(_QWORD *)(a1 + 128) = v15;
  *(_QWORD *)(a1 + 136) = v16;
  *(_QWORD *)(a1 + 144) = v17;
  *(_QWORD *)(a1 + 152) = v19;
  *(_QWORD *)(a1 + 160) = v18;
  *(_BYTE *)(a1 + 168) = v22;
  return a1;
}

uint64_t assignWithCopy for IdMSAccount(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v33;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = v2[4];
  *(_QWORD *)(a1 + 40) = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[6];
  v5 = v2[7];
  v6 = v2[8];
  v7 = v2[9];
  v8 = *((_BYTE *)v2 + 80);
  sub_21F667678(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  v13 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v8;
  sub_21F6641CC(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 88) = v2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v2[12];
  v15 = v2[13];
  v16 = v2[14];
  v17 = v2[15];
  v18 = v2[16];
  v19 = v2[17];
  v20 = v2[18];
  v21 = v2[19];
  v33 = v2[20];
  LOBYTE(v2) = *((_BYTE *)v2 + 168);
  sub_21F66428C(v14, v15, v16, v17, v18, v19, v20, v21, v33, v2);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_QWORD *)(a1 + 112);
  v25 = *(_QWORD *)(a1 + 120);
  v26 = *(_QWORD *)(a1 + 128);
  v27 = *(_QWORD *)(a1 + 136);
  v28 = *(_QWORD *)(a1 + 144);
  v29 = *(_QWORD *)(a1 + 152);
  v30 = *(_QWORD *)(a1 + 160);
  v31 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 144) = v20;
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = v33;
  *(_BYTE *)(a1 + 168) = (_BYTE)v2;
  sub_21F664218(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  return a1;
}

__n128 __swift_memcpy169_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(__int128 *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for IdMSAccount(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  __int128 v27;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  v13 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v7;
  sub_21F6641CC(v8, v9, v10, v11, v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 160);
  v15 = *(_BYTE *)(a2 + 168);
  v16 = *(_QWORD *)(a1 + 96);
  v17 = *(_QWORD *)(a1 + 104);
  v18 = *(_QWORD *)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 120);
  v20 = *(_QWORD *)(a1 + 128);
  v21 = *(_QWORD *)(a1 + 136);
  v22 = *(_QWORD *)(a1 + 144);
  v23 = *(_QWORD *)(a1 + 152);
  v24 = *(_QWORD *)(a1 + 160);
  v25 = *(_BYTE *)(a1 + 168);
  v26 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v26;
  v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v27;
  *(_QWORD *)(a1 + 160) = v14;
  *(_BYTE *)(a1 + 168) = v15;
  sub_21F664218(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 169))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 169) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount()
{
  return &type metadata for IdMSAccount;
}

uint64_t destroy for IdMSAccount.Credential(uint64_t a1)
{
  return sub_21F664218(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
}

uint64_t initializeWithCopy for IdMSAccount.Credential(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  sub_21F66428C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_BYTE *)(a2 + 72));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithCopy for IdMSAccount.Credential(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  char v23;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  sub_21F66428C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_BYTE *)(a2 + 72));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v23;
  sub_21F664218(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for IdMSAccount.Credential(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_BYTE *)(a1 + 72);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 72) = v4;
  sub_21F664218(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.Credential(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.Credential(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 72) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F667EA4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 72) <= 2u)
    return *(unsigned __int8 *)(a1 + 72);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_21F667EBC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 72) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential()
{
  return &type metadata for IdMSAccount.Credential;
}

uint64_t destroy for IdMSAccount.Name(uint64_t a1)
{
  return sub_21F6641CC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for IdMSAccount.Name(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21F667678(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for IdMSAccount.Name(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21F667678(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_21F6641CC(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IdMSAccount.Name(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_21F6641CC(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.Name(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.Name(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F6680C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_21F6680E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Name()
{
  return &type metadata for IdMSAccount.Name;
}

uint64_t destroy for IdMSAccount.ID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IdMSAccount.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IdMSAccount.ID(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for IdMSAccount.ID(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.ID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.ID()
{
  return &type metadata for IdMSAccount.ID;
}

_QWORD *initializeWithCopy for IdMSAccount.AnisettePackage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IdMSAccount.AnisettePackage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for IdMSAccount.AnisettePackage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.AnisettePackage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.AnisettePackage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.AnisettePackage()
{
  return &type metadata for IdMSAccount.AnisettePackage;
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV15AnisettePackageVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IdMSAccount.DeviceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IdMSAccount.DeviceInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for IdMSAccount.DeviceInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.DeviceInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.DeviceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.DeviceInfo()
{
  return &type metadata for IdMSAccount.DeviceInfo;
}

uint64_t initializeBufferWithCopyOfBuffer for IdMSAccount.Credential.CompanionKeyEnvelope(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for IdMSAccount.Credential.CompanionKeyEnvelope()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IdMSAccount.Credential.CompanionKeyEnvelope(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IdMSAccount.Credential.CompanionKeyEnvelope(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

_QWORD *assignWithTake for IdMSAccount.Credential.CompanionKeyEnvelope(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.Credential.CompanionKeyEnvelope(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.Credential.CompanionKeyEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CompanionKeyEnvelope()
{
  return &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope;
}

_QWORD *initializeBufferWithCopyOfBuffer for IdMSAccount.ConversionFailure(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for IdMSAccount.ConversionFailure()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for IdMSAccount.ConversionFailure(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for IdMSAccount.ConversionFailure(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.ConversionFailure(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.ConversionFailure(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.ConversionFailure()
{
  return &type metadata for IdMSAccount.ConversionFailure;
}

void **_s17ConversionFailureOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **_s17ConversionFailureOwta(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t _s17ConversionFailureOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s17ConversionFailureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_21F668BA8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_21F668BC0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ACAccount.ConversionFailure()
{
  return &type metadata for ACAccount.ConversionFailure;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys()
{
  return &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.DeviceInfo.CodingKeys()
{
  return &type metadata for IdMSAccount.DeviceInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.AnisettePackage.CodingKeys()
{
  return &type metadata for IdMSAccount.AnisettePackage.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.ID.CodingKeys()
{
  return &type metadata for IdMSAccount.ID.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Route.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO20CompanionKeyEnvelopeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F668D1C + 4 * byte_21F718E4D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F668D50 + 4 * byte_21F718E48[v4]))();
}

uint64_t sub_21F668D50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F668D58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F668D60);
  return result;
}

uint64_t sub_21F668D6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F668D74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F668D78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F668D80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Name.CodingKeys()
{
  return &type metadata for IdMSAccount.Name.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Name.NoneCodingKeys()
{
  return &type metadata for IdMSAccount.Name.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Name.ShortCodingKeys()
{
  return &type metadata for IdMSAccount.Name.ShortCodingKeys;
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV10DeviceInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F668E10 + 4 * byte_21F718E57[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F668E44 + 4 * byte_21F718E52[v4]))();
}

uint64_t sub_21F668E44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F668E4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F668E54);
  return result;
}

uint64_t sub_21F668E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F668E68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F668E6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F668E74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Name.FullCodingKeys()
{
  return &type metadata for IdMSAccount.Name.FullCodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CodingKeys()
{
  return &type metadata for IdMSAccount.Credential.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.NoneCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CompanionKeysCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.CompanionKeysCodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.PasswordlessTokenCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.PasswordlessTokenCodingKeys;
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV4NameO15ShortCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F668F18 + 4 * byte_21F718E5C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F668F38 + 4 * byte_21F718E61[v4]))();
}

_BYTE *sub_21F668F18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F668F38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F668F40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F668F48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F668F50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F668F58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.RawPasswordCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.RawPasswordCodingKeys;
}

uint64_t getEnumTagSinglePayload for PASDeviceClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21F669050 + 4 * byte_21F718E6B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21F669084 + 4 * byte_21F718E66[v4]))();
}

uint64_t sub_21F669084(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F66908C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F669094);
  return result;
}

uint64_t sub_21F6690A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6690A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21F6690AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6690B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.CodingKeys()
{
  return &type metadata for IdMSAccount.CodingKeys;
}

unint64_t sub_21F6690D4()
{
  unint64_t result;

  result = qword_2554DC060;
  if (!qword_2554DC060)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7196C8, &type metadata for IdMSAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC060);
  }
  return result;
}

unint64_t sub_21F66911C()
{
  unint64_t result;

  result = qword_2554DC068;
  if (!qword_2554DC068)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719780, &type metadata for IdMSAccount.Credential.RawPasswordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC068);
  }
  return result;
}

unint64_t sub_21F669164()
{
  unint64_t result;

  result = qword_2554DC070;
  if (!qword_2554DC070)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719838, &type metadata for IdMSAccount.Credential.PasswordlessTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC070);
  }
  return result;
}

unint64_t sub_21F6691AC()
{
  unint64_t result;

  result = qword_2554DC078;
  if (!qword_2554DC078)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7198F0, &type metadata for IdMSAccount.Credential.CompanionKeysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC078);
  }
  return result;
}

unint64_t sub_21F6691F4()
{
  unint64_t result;

  result = qword_2554DC080;
  if (!qword_2554DC080)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7199F8, &type metadata for IdMSAccount.Credential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC080);
  }
  return result;
}

unint64_t sub_21F66923C()
{
  unint64_t result;

  result = qword_2554DC088;
  if (!qword_2554DC088)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719AB0, &type metadata for IdMSAccount.Name.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC088);
  }
  return result;
}

unint64_t sub_21F669284()
{
  unint64_t result;

  result = qword_2554DC090;
  if (!qword_2554DC090)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719B68, &type metadata for IdMSAccount.Name.ShortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC090);
  }
  return result;
}

unint64_t sub_21F6692CC()
{
  unint64_t result;

  result = qword_2554DC098;
  if (!qword_2554DC098)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719C70, &type metadata for IdMSAccount.Name.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC098);
  }
  return result;
}

unint64_t sub_21F669314()
{
  unint64_t result;

  result = qword_2554DC0A0;
  if (!qword_2554DC0A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719D28, &type metadata for IdMSAccount.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0A0);
  }
  return result;
}

unint64_t sub_21F66935C()
{
  unint64_t result;

  result = qword_2554DC0A8;
  if (!qword_2554DC0A8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719DE0, &type metadata for IdMSAccount.AnisettePackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0A8);
  }
  return result;
}

unint64_t sub_21F6693A4()
{
  unint64_t result;

  result = qword_2554DC0B0;
  if (!qword_2554DC0B0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719E98, &type metadata for IdMSAccount.DeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0B0);
  }
  return result;
}

unint64_t sub_21F6693EC()
{
  unint64_t result;

  result = qword_2554DC0B8;
  if (!qword_2554DC0B8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719F50, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0B8);
  }
  return result;
}

unint64_t sub_21F669434()
{
  unint64_t result;

  result = qword_2554DC0C0;
  if (!qword_2554DC0C0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719EC0, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0C0);
  }
  return result;
}

unint64_t sub_21F66947C()
{
  unint64_t result;

  result = qword_2554DC0C8;
  if (!qword_2554DC0C8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719EE8, &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0C8);
  }
  return result;
}

unint64_t sub_21F6694C4()
{
  unint64_t result;

  result = qword_2554DC0D0;
  if (!qword_2554DC0D0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719E08, &type metadata for IdMSAccount.DeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0D0);
  }
  return result;
}

unint64_t sub_21F66950C()
{
  unint64_t result;

  result = qword_2554DC0D8;
  if (!qword_2554DC0D8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719E30, &type metadata for IdMSAccount.DeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0D8);
  }
  return result;
}

unint64_t sub_21F669554()
{
  unint64_t result;

  result = qword_2554DC0E0;
  if (!qword_2554DC0E0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719D50, &type metadata for IdMSAccount.AnisettePackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0E0);
  }
  return result;
}

unint64_t sub_21F66959C()
{
  unint64_t result;

  result = qword_2554DC0E8;
  if (!qword_2554DC0E8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719D78, &type metadata for IdMSAccount.AnisettePackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0E8);
  }
  return result;
}

unint64_t sub_21F6695E4()
{
  unint64_t result;

  result = qword_2554DC0F0;
  if (!qword_2554DC0F0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719C98, &type metadata for IdMSAccount.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0F0);
  }
  return result;
}

unint64_t sub_21F66962C()
{
  unint64_t result;

  result = qword_2554DC0F8;
  if (!qword_2554DC0F8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719CC0, &type metadata for IdMSAccount.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC0F8);
  }
  return result;
}

unint64_t sub_21F669674()
{
  unint64_t result;

  result = qword_2554DC100;
  if (!qword_2554DC100)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719B90, &type metadata for IdMSAccount.Name.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC100);
  }
  return result;
}

unint64_t sub_21F6696BC()
{
  unint64_t result;

  result = qword_2554DC108;
  if (!qword_2554DC108)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719BB8, &type metadata for IdMSAccount.Name.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC108);
  }
  return result;
}

unint64_t sub_21F669704()
{
  unint64_t result;

  result = qword_2554DC110;
  if (!qword_2554DC110)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719AD8, &type metadata for IdMSAccount.Name.ShortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC110);
  }
  return result;
}

unint64_t sub_21F66974C()
{
  unint64_t result;

  result = qword_2554DC118;
  if (!qword_2554DC118)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719B00, &type metadata for IdMSAccount.Name.ShortCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC118);
  }
  return result;
}

unint64_t sub_21F669794()
{
  unint64_t result;

  result = qword_2554DC120;
  if (!qword_2554DC120)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719A20, &type metadata for IdMSAccount.Name.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC120);
  }
  return result;
}

unint64_t sub_21F6697DC()
{
  unint64_t result;

  result = qword_2554DC128;
  if (!qword_2554DC128)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719A48, &type metadata for IdMSAccount.Name.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC128);
  }
  return result;
}

unint64_t sub_21F669824()
{
  unint64_t result;

  result = qword_2554DC130;
  if (!qword_2554DC130)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719BE0, &type metadata for IdMSAccount.Name.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC130);
  }
  return result;
}

unint64_t sub_21F66986C()
{
  unint64_t result;

  result = qword_2554DC138;
  if (!qword_2554DC138)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719C08, &type metadata for IdMSAccount.Name.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC138);
  }
  return result;
}

unint64_t sub_21F6698B4()
{
  unint64_t result;

  result = qword_2554DC140;
  if (!qword_2554DC140)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719918, &type metadata for IdMSAccount.Credential.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC140);
  }
  return result;
}

unint64_t sub_21F6698FC()
{
  unint64_t result;

  result = qword_2554DC148;
  if (!qword_2554DC148)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719940, &type metadata for IdMSAccount.Credential.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC148);
  }
  return result;
}

unint64_t sub_21F669944()
{
  unint64_t result;

  result = qword_2554DC150;
  if (!qword_2554DC150)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719860, &type metadata for IdMSAccount.Credential.CompanionKeysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC150);
  }
  return result;
}

unint64_t sub_21F66998C()
{
  unint64_t result;

  result = qword_2554DC158;
  if (!qword_2554DC158)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719888, &type metadata for IdMSAccount.Credential.CompanionKeysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC158);
  }
  return result;
}

unint64_t sub_21F6699D4()
{
  unint64_t result;

  result = qword_2554DC160;
  if (!qword_2554DC160)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7197A8, &type metadata for IdMSAccount.Credential.PasswordlessTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC160);
  }
  return result;
}

unint64_t sub_21F669A1C()
{
  unint64_t result;

  result = qword_2554DC168;
  if (!qword_2554DC168)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7197D0, &type metadata for IdMSAccount.Credential.PasswordlessTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC168);
  }
  return result;
}

unint64_t sub_21F669A64()
{
  unint64_t result;

  result = qword_2554DC170;
  if (!qword_2554DC170)
  {
    result = MEMORY[0x2207CC46C](&unk_21F7196F0, &type metadata for IdMSAccount.Credential.RawPasswordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC170);
  }
  return result;
}

unint64_t sub_21F669AAC()
{
  unint64_t result;

  result = qword_2554DC178;
  if (!qword_2554DC178)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719718, &type metadata for IdMSAccount.Credential.RawPasswordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC178);
  }
  return result;
}

unint64_t sub_21F669AF4()
{
  unint64_t result;

  result = qword_2554DC180;
  if (!qword_2554DC180)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719968, &type metadata for IdMSAccount.Credential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC180);
  }
  return result;
}

unint64_t sub_21F669B3C()
{
  unint64_t result;

  result = qword_2554DC188;
  if (!qword_2554DC188)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719990, &type metadata for IdMSAccount.Credential.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC188);
  }
  return result;
}

unint64_t sub_21F669B84()
{
  unint64_t result;

  result = qword_2554DC190;
  if (!qword_2554DC190)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719638, &type metadata for IdMSAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC190);
  }
  return result;
}

unint64_t sub_21F669BCC()
{
  unint64_t result;

  result = qword_2554DC198;
  if (!qword_2554DC198)
  {
    result = MEMORY[0x2207CC46C](&unk_21F719660, &type metadata for IdMSAccount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DC198);
  }
  return result;
}

uint64_t sub_21F669C10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_21F716638();
  __break(1u);
  return result;
}

uint64_t sub_21F669D00(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DBEA8);
    v10 = sub_21F669D7C(a2, a3);
    result = MEMORY[0x2207CC46C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F669D7C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for AIDAServiceType(255);
    result = MEMORY[0x2207CC46C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F669DBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 168);
  v8 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F667678(v2, v3, v4, v5, v8);
  swift_bridgeObjectRetain();
  sub_21F66428C(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7);
  return a1;
}

uint64_t sub_21F669EA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 168);
  v8 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F6641CC(v2, v3, v4, v5, v8);
  swift_bridgeObjectRelease();
  sub_21F664218(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7);
  return a1;
}

unint64_t static PASError.errorDomain.getter()
{
  return 0xD000000000000022;
}

uint64_t PASError.errorCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unint64_t PASError.errorUserInfo.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[80];

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v7;
  v8 = sub_21F715CC0();
  v10 = v9;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  if (!v10)
  {
    v8 = sub_21F7167A0();
    v10 = v11;
  }
  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = v10;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, a1);
  return sub_21F6409B8(inited);
}

uint64_t PASError.errorDescription.getter()
{
  return sub_21F7167A0();
}

uint64_t PASError<>.description.getter()
{
  uint64_t v1;

  swift_getDynamicType();
  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716158();
  sub_21F716140();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PASAccountProviderError.code.getter()
{
  return 2800;
}

uint64_t PASFlowStepRepairFamilyError.code.getter(uint64_t a1)
{
  if (a1 == 1)
    return 1700;
  else
    return 1701;
}

unint64_t static String.errorDomain.getter()
{
  return 0xD000000000000022;
}

uint64_t String.errorDescription.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F66A1F8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_21F66A224()
{
  sub_21F66A6A4();
  return sub_21F7168C0();
}

uint64_t sub_21F66A24C()
{
  sub_21F66A6A4();
  return sub_21F7168B4();
}

uint64_t PASFamilyMemberPickerDataSourceError.code.getter(unsigned __int8 a1)
{
  return a1 + 1900;
}

uint64_t PASFlowStepError.code.getter()
{
  uint64_t v0;
  _BYTE v2[40];

  sub_21F66A5E4(v0, (uint64_t)v2);
  return qword_21F71A640[v2[32]];
}

uint64_t PASFlowStepFamilyPickerError.code.getter()
{
  return 2100;
}

uint64_t PASFlowStepProxiedTermsError.code.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return qword_21F71A668[a1];
  else
    return 2201;
}

uint64_t PASFlowStepProxiedAuthError.code.getter(unsigned __int8 a1)
{
  return a1 + 2300;
}

uint64_t PASUserPasswordDataSourceError.code.getter()
{
  return 2400;
}

uint64_t PASExtensionInfoProviderError.code.getter()
{
  return 3200;
}

uint64_t V1CommandError.code.getter()
{
  uint64_t v0;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  sub_21F66A620(v0, (uint64_t)&v4);
  if (!v9)
    return 10001;
  if (v9 == 1)
    return 10002;
  if (!(v7 | v8 | v4 | v6 | v5))
    return 10000;
  v2 = v7 | v8 | v6 | v5;
  if (v4 == 1 && !v2)
    return 10003;
  if (v2)
    v3 = 0;
  else
    v3 = v4 == 2;
  if (v3)
    return 10004;
  else
    return 10005;
}

uint64_t sub_21F66A38C()
{
  _BYTE *v0;

  if (*v0)
    return 1201;
  else
    return 1200;
}

uint64_t sub_21F66A3A0()
{
  _BYTE *v0;

  if (*v0)
    return 2501;
  else
    return 2500;
}

uint64_t sub_21F66A3B4()
{
  return 2900;
}

uint64_t sub_21F66A3BC()
{
  _QWORD *v0;

  if (*v0)
    return 2601;
  else
    return 2600;
}

uint64_t sub_21F66A3D0()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t))((char *)sub_21F66A3F4
                                          + 4 * asc_21F71A530[*(unsigned __int8 *)(v0 + 32)]))(1000);
}

uint64_t sub_21F66A3F4()
{
  return 1001;
}

uint64_t sub_21F66A3FC()
{
  return 1002;
}

uint64_t sub_21F66A404()
{
  return 1003;
}

uint64_t sub_21F66A40C()
{
  return 1004;
}

uint64_t sub_21F66A414@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = v1[1];
  v3 = v1[2] | v1[3];
  if (!(v3 | a1 | v2))
    return 1005;
  if (v3 | v2)
    v4 = 0;
  else
    v4 = a1 == 1;
  if (v4)
    return 1006;
  else
    return 1007;
}

uint64_t sub_21F66A44C()
{
  unsigned __int8 *v0;

  return *v0 + 2300;
}

uint64_t sub_21F66A458()
{
  unsigned __int8 *v0;

  return *v0 + 1600;
}

uint64_t sub_21F66A464()
{
  unsigned __int8 *v0;

  return *v0 + 3300;
}

uint64_t sub_21F66A470()
{
  _BYTE *v0;

  if (*v0)
    return 1501;
  else
    return 1500;
}

uint64_t sub_21F66A484()
{
  return 3600;
}

uint64_t sub_21F66A48C()
{
  uint64_t v0;

  return qword_21F71A640[*(char *)(v0 + 32)];
}

uint64_t sub_21F66A4A0()
{
  return 3200;
}

uint64_t sub_21F66A4A8()
{
  return 3400;
}

uint64_t sub_21F66A4B0()
{
  uint64_t *v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  if (!*((_BYTE *)v0 + 40))
    return 10001;
  if (*((_BYTE *)v0 + 40) == 1)
    return 10002;
  v2 = *v0;
  v3 = v0[1];
  v4 = v0[2];
  v5 = v0[3] | v0[4];
  if (!(v5 | *v0 | v4 | v3))
    return 10000;
  v6 = v5 | v4 | v3;
  if (v2 == 1 && !v6)
    return 10003;
  if (v6)
    v7 = 0;
  else
    v7 = v2 == 2;
  if (v7)
    return 10004;
  else
    return 10005;
}

uint64_t sub_21F66A528()
{
  return 2100;
}

uint64_t sub_21F66A530()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16))
    return 1101;
  else
    return 1100;
}

uint64_t sub_21F66A544()
{
  return 2400;
}

uint64_t sub_21F66A54C()
{
  unsigned __int8 *v0;

  return *v0 + 1900;
}

uint64_t sub_21F66A558()
{
  return 3500;
}

uint64_t sub_21F66A560()
{
  unsigned __int8 *v0;

  return *v0 + 3000;
}

uint64_t sub_21F66A56C()
{
  _BYTE *v0;

  if (*v0)
    return 2701;
  else
    return 2700;
}

uint64_t sub_21F66A580()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return qword_21F71A668[*(_QWORD *)v0];
  else
    return 2201;
}

uint64_t sub_21F66A5A8()
{
  return 3100;
}

uint64_t sub_21F66A5B0()
{
  return 1401;
}

uint64_t sub_21F66A5B8()
{
  return 3800;
}

uint64_t sub_21F66A5C0()
{
  _BYTE *v0;

  if (*v0)
    return 11001;
  else
    return 11002;
}

uint64_t sub_21F66A5D4()
{
  unsigned __int8 *v0;

  return *v0 + 12001;
}

uint64_t sub_21F66A5E4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_21F66A620(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

unint64_t sub_21F66A660()
{
  unint64_t result;

  result = qword_2554DC238;
  if (!qword_2554DC238)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for String, MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2554DC238);
  }
  return result;
}

unint64_t sub_21F66A6A4()
{
  unint64_t result;

  result = qword_2554DC240;
  if (!qword_2554DC240)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for String, MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2554DC240);
  }
  return result;
}

uint64_t PASAccountContextExtension.requiresCDP.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresCDP);
}

uint64_t PASAccountContextExtension.requiresManateeRepair.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresManateeRepair);
}

uint64_t PASAccountContextExtension.requiresFamilyRepair.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresFamilyRepair);
}

uint64_t PASAccountContextExtension.showPrivacyDisclosureOnSourceDevice.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPrivacyDisclosureOnSourceDevice);
}

uint64_t PASAccountContextExtension.showPasscodeBiometricsRequestOnTargetDevice.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPasscodeBiometricsRequestOnTargetDevice);
}

void *PASAccountContextExtension.flowStepAllSetContext.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext);
  v2 = v1;
  return v1;
}

uint64_t PASAccountContextExtension.description.getter()
{
  uint64_t v0;
  id v1;

  sub_21F7164E8();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F7165CC();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DC288);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return 0;
}

uint64_t PASAccountContextExtension.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  _BYTE v12[24];
  uint64_t v13;

  swift_getObjectType();
  sub_21F649B14(a1, (uint64_t)v12);
  if (v13)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresCDP) == v11[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresCDP]
        && *(unsigned __int8 *)(v1
                              + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresManateeRepair) == v11[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresManateeRepair]
        && *(unsigned __int8 *)(v1
                              + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresFamilyRepair) == v11[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresFamilyRepair]
        && *(unsigned __int8 *)(v1
                              + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPrivacyDisclosureOnSourceDevice) == v11[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPrivacyDisclosureOnSourceDevice]
        && *(unsigned __int8 *)(v1
                              + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPasscodeBiometricsRequestOnTargetDevice) == v11[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPasscodeBiometricsRequestOnTargetDevice])
      {
        v5 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext);
        v6 = *(void **)&v11[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext];
        if (!v5)
        {
          v10 = v6;

          if (!v6)
          {
            v3 = 1;
            return v3 & 1;
          }

          goto LABEL_10;
        }
        if (v6)
        {
          type metadata accessor for PASFlowStepAllSetContext();
          v7 = v5;
          v8 = v6;
          v9 = v7;
          v3 = sub_21F7163EC();

          return v3 & 1;
        }
      }

    }
  }
  else
  {
    sub_21F649B5C((uint64_t)v12);
  }
LABEL_10:
  v3 = 0;
  return v3 & 1;
}

uint64_t PASAccountContextExtension.hash.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_21F716974();
  sub_21F716938();
  sub_21F716938();
  sub_21F716938();
  sub_21F716938();
  sub_21F716938();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext);
  sub_21F716938();
  if (v1)
  {
    v2 = v1;
    sub_21F7163F8();

  }
  return sub_21F71695C();
}

char *PASAccountContextExtension.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static PASAccountContextExtension.supportsSecureCoding;
}

uint64_t static PASAccountContextExtension.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return static PASAccountContextExtension.supportsSecureCoding;
}

uint64_t static PASAccountContextExtension.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static PASAccountContextExtension.supportsSecureCoding = a1;
  return result;
}

uint64_t (*static PASAccountContextExtension.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall PASAccountContextExtension.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresCDP);
  v4 = (void *)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v3, v4);

  v5 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresManateeRepair);
  v6 = (void *)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v5, v6);

  v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresFamilyRepair);
  v8 = (void *)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v7, v8);

  v9 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPrivacyDisclosureOnSourceDevice);
  v10 = (void *)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v9, v10);

  v11 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPasscodeBiometricsRequestOnTargetDevice);
  v12 = (void *)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v11, v12);

  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext);
  v14 = (id)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v13, v14);

}

id PASAccountContextExtension.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21F66BAB8(a1);

  return v4;
}

id PASAccountContextExtension.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_21F66BAB8(a1);

  return v2;
}

id PASAccountContextExtension.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PASAccountContextExtension.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PASAccountContextExtension.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21F66B278()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresCDP);
}

uint64_t sub_21F66B28C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresManateeRepair);
}

uint64_t sub_21F66B2A0()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresFamilyRepair);
}

uint64_t sub_21F66B2B4()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPrivacyDisclosureOnSourceDevice);
}

uint64_t sub_21F66B2C8()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPasscodeBiometricsRequestOnTargetDevice);
}

void *sub_21F66B2DC()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext);
  v2 = v1;
  return v1;
}

uint64_t PASAccountContextExtensionBuilder.requiresCDP.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresCDP);
  swift_beginAccess();
  return *v1;
}

uint64_t PASAccountContextExtensionBuilder.requiresCDP.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresCDP);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASAccountContextExtensionBuilder.requiresCDP.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASAccountContextExtensionBuilder.requiresManateeRepair.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresManateeRepair);
  swift_beginAccess();
  return *v1;
}

uint64_t PASAccountContextExtensionBuilder.requiresManateeRepair.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresManateeRepair);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASAccountContextExtensionBuilder.requiresManateeRepair.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASAccountContextExtensionBuilder.requiresFamilyRepair.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresFamilyRepair);
  swift_beginAccess();
  return *v1;
}

uint64_t PASAccountContextExtensionBuilder.requiresFamilyRepair.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresFamilyRepair);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASAccountContextExtensionBuilder.requiresFamilyRepair.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASAccountContextExtensionBuilder.showPrivacyDisclosureOnSourceDevice.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPrivacyDisclosureOnSourceDevice);
  swift_beginAccess();
  return *v1;
}

uint64_t PASAccountContextExtensionBuilder.showPrivacyDisclosureOnSourceDevice.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPrivacyDisclosureOnSourceDevice);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASAccountContextExtensionBuilder.showPrivacyDisclosureOnSourceDevice.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASAccountContextExtensionBuilder.showPasscodeBiometricsRequestOnTargetDevice.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPasscodeBiometricsRequestOnTargetDevice);
  swift_beginAccess();
  return *v1;
}

uint64_t PASAccountContextExtensionBuilder.showPasscodeBiometricsRequestOnTargetDevice.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1
               + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPasscodeBiometricsRequestOnTargetDevice);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASAccountContextExtensionBuilder.showPasscodeBiometricsRequestOnTargetDevice.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *PASAccountContextExtensionBuilder.flowStepAllSetContext.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_flowStepAllSetContext);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void PASAccountContextExtensionBuilder.flowStepAllSetContext.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_flowStepAllSetContext);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*PASAccountContextExtensionBuilder.flowStepAllSetContext.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id PASAccountContextExtensionBuilder.build()()
{
  uint64_t v0;
  char *v1;
  char v2;
  char *v3;
  char v4;
  char *v5;
  char v6;
  char *v7;
  char v8;
  char *v9;
  char v10;
  void **v11;
  void *v12;
  objc_class *v13;
  _BYTE *v14;
  id v15;
  objc_super v17;

  v1 = (char *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresCDP);
  swift_beginAccess();
  v2 = *v1;
  v3 = (char *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresManateeRepair);
  swift_beginAccess();
  v4 = *v3;
  v5 = (char *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresFamilyRepair);
  swift_beginAccess();
  v6 = *v5;
  v7 = (char *)(v0
              + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPrivacyDisclosureOnSourceDevice);
  swift_beginAccess();
  v8 = *v7;
  v9 = (char *)(v0
              + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPasscodeBiometricsRequestOnTargetDevice);
  swift_beginAccess();
  v10 = *v9;
  v11 = (void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_flowStepAllSetContext);
  swift_beginAccess();
  v12 = *v11;
  v13 = (objc_class *)type metadata accessor for PASAccountContextExtension();
  v14 = objc_allocWithZone(v13);
  v14[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresCDP] = v2;
  v14[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresManateeRepair] = v4;
  v14[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresFamilyRepair] = v6;
  v14[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPrivacyDisclosureOnSourceDevice] = v8;
  v14[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPasscodeBiometricsRequestOnTargetDevice] = v10;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext] = v12;
  v17.receiver = v14;
  v17.super_class = v13;
  v15 = v12;
  return objc_msgSendSuper2(&v17, sel_init);
}

id PASAccountContextExtensionBuilder.init()()
{
  _BYTE *v0;
  objc_super v2;

  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresCDP] = 0;
  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresManateeRepair] = 0;
  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_requiresFamilyRepair] = 0;
  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPrivacyDisclosureOnSourceDevice] = 0;
  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_showPasscodeBiometricsRequestOnTargetDevice] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityAppleIDSetup33PASAccountContextExtensionBuilder_flowStepAllSetContext] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASAccountContextExtensionBuilder();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PASAccountContextExtensionBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASAccountContextExtensionBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_21F66BAB8(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  _BYTE *v5;
  void *v6;
  unsigned __int8 v7;
  void *v8;
  unsigned __int8 v9;
  void *v10;
  unsigned __int8 v11;
  void *v12;
  unsigned __int8 v13;
  void *v14;
  unsigned __int8 v15;
  objc_super v17;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = v2;
  v6 = (void *)sub_21F7160E0();
  v7 = objc_msgSend(a1, sel_decodeBoolForKey_, v6);

  v5[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresCDP] = v7;
  v8 = (void *)sub_21F7160E0();
  v9 = objc_msgSend(a1, sel_decodeBoolForKey_, v8);

  v5[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresManateeRepair] = v9;
  v10 = (void *)sub_21F7160E0();
  v11 = objc_msgSend(a1, sel_decodeBoolForKey_, v10);

  v5[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_requiresFamilyRepair] = v11;
  v12 = (void *)sub_21F7160E0();
  v13 = objc_msgSend(a1, sel_decodeBoolForKey_, v12);

  v5[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPrivacyDisclosureOnSourceDevice] = v13;
  v14 = (void *)sub_21F7160E0();
  v15 = objc_msgSend(a1, sel_decodeBoolForKey_, v14);

  v5[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_showPasscodeBiometricsRequestOnTargetDevice] = v15;
  type metadata accessor for PASFlowStepAllSetContext();
  *(_QWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup26PASAccountContextExtension_flowStepAllSetContext] = sub_21F7163E0();

  v17.receiver = v5;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t type metadata accessor for PASAccountContextExtension()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASAccountContextExtensionBuilder()
{
  return objc_opt_self();
}

uint64_t PASAuthenticator.__allocating_init(withAuthController:accountStore:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  v8 = sub_21F670E38(a1, v7, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0Tm(a2);
  return v8;
}

uint64_t sub_21F66BD5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC4C0);
    v2 = sub_21F71662C();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_21F644FEC(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_21F644FEC(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_21F644FEC(v36, v37);
    sub_21F644FEC(v37, &v33);
    result = sub_21F7164A0();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_21F644FEC(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_21F671984();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_21F66C120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC4C0);
    v2 = sub_21F71662C();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_21F644FEC(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_21F644FEC(v35, v36);
    sub_21F644FEC(v36, &v32);
    result = sub_21F7164A0();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_21F644FEC(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_21F671984();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_21F66C4D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC4C0);
    v2 = sub_21F71662C();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_21F644FEC(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_21F644FEC(v35, v36);
    sub_21F644FEC(v36, &v32);
    result = sub_21F7164A0();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_21F644FEC(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_21F671984();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_21F66C890(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB28);
    v2 = (_QWORD *)sub_21F71662C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = &qword_2554DC320;
  v11 = MEMORY[0x24BEE4AD8] + 8;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_21F671984();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v10);
    swift_dynamicCast();
    sub_21F644FEC(v6, v7);
    sub_21F644FEC(v7, v40);
    sub_21F644FEC(v40, &v38);
    result = sub_21F6448D8(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
      result = (unint64_t)sub_21F644FEC(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_21F644FEC(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t PASAuthResults.dsid.getter(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = sub_21F716104();
  v4 = sub_21F65CBF8(v2, v3, a1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t PASAuthResults.altDSID.getter(uint64_t a1)
{
  return sub_21F66E270(a1);
}

NSObject *PASCodableAuthResults.init(from:)(_QWORD *a1)
{
  return sub_21F67131C(a1);
}

uint64_t sub_21F66CC64(uint64_t a1)
{
  return sub_21F66CC78(a1);
}

uint64_t sub_21F66CC78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  char v30[72];
  __int128 v31;
  _OWORD v32[2];
  __int128 v33;
  _OWORD v34[2];
  __int128 v35;
  _OWORD v36[2];
  uint64_t v37;
  int64_t i;

  v2 = MEMORY[0x24BEE4B00];
  v37 = MEMORY[0x24BEE4B00];
  v3 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v6)
    goto LABEL_8;
LABEL_9:
  while (2)
  {
    v11 = i + 1;
    if (!__OFADD__(i, 1))
    {
      if (v11 < v7)
      {
        v12 = *(_QWORD *)(v3 + 8 * v11);
        v13 = i + 1;
        if (v12)
          goto LABEL_24;
        v13 = i + 2;
        if (i + 2 >= v7)
          goto LABEL_41;
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (v12)
          goto LABEL_24;
        v13 = i + 3;
        if (i + 3 >= v7)
          goto LABEL_41;
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (v12)
          goto LABEL_24;
        v13 = i + 4;
        if (i + 4 >= v7)
          goto LABEL_41;
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (v12)
        {
LABEL_24:
          v6 = (v12 - 1) & v12;
          v10 = __clz(__rbit64(v12)) + (v13 << 6);
          for (i = v13; ; v10 = v9 | (i << 6))
          {
            v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
            v16 = *v15;
            v17 = v15[1];
            sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v36);
            *(_QWORD *)&v35 = v16;
            *((_QWORD *)&v35 + 1) = v17;
            v33 = v35;
            v34[0] = v36[0];
            v34[1] = v36[1];
            sub_21F6429E4((uint64_t)v34, (uint64_t)v30);
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
            if ((swift_dynamicCast() & 1) == 0)
              break;
            v18 = v31;
            if (!(_QWORD)v31)
              goto LABEL_7;
            v19 = v33;
            v31 = v33;
            sub_21F644FEC(v34, v32);
            v20 = *(_QWORD *)(v2 + 16);
            if (*(_QWORD *)(v2 + 24) <= v20)
            {
              sub_21F6F89E8(v20 + 1, 1);
              v2 = v37;
            }
            sub_21F716920();
            sub_21F716134();
            result = sub_21F716968();
            v21 = v2 + 64;
            v22 = -1 << *(_BYTE *)(v2 + 32);
            v23 = result & ~v22;
            v24 = v23 >> 6;
            if (((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6))) != 0)
            {
              v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              v26 = 0;
              v27 = (unint64_t)(63 - v22) >> 6;
              do
              {
                if (++v24 == v27 && (v26 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_42;
                }
                v28 = v24 == v27;
                if (v24 == v27)
                  v24 = 0;
                v26 |= v28;
                v29 = *(_QWORD *)(v21 + 8 * v24);
              }
              while (v29 == -1);
              v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            }
            *(_QWORD *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
            *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v25) = v19;
            *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v25) = v18;
            ++*(_QWORD *)(v2 + 16);
            result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v32);
            if (!v6)
              goto LABEL_9;
LABEL_8:
            v9 = __clz(__rbit64(v6));
            v6 &= v6 - 1;
          }
          *(_QWORD *)&v31 = 0;
LABEL_7:
          sub_21F6476AC((uint64_t)&v33, (uint64_t *)&unk_2554DC4D0);
          result = swift_unknownObjectRelease();
          if (!v6)
            continue;
          goto LABEL_8;
        }
        v14 = i + 5;
        if (i + 5 < v7)
        {
          v12 = *(_QWORD *)(v3 + 8 * v14);
          if (v12)
          {
            v13 = i + 5;
            goto LABEL_24;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
              goto LABEL_43;
            if (v13 >= v7)
              break;
            v12 = *(_QWORD *)(v3 + 8 * v13);
            ++v14;
            if (v12)
              goto LABEL_24;
          }
        }
      }
LABEL_41:
      sub_21F671984();
      return v2;
    }
    break;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t PASCodableAuthResults.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v10[2];
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169BC();
  v1 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  v2 = (void *)sub_21F71602C();
  v10[0] = 0;
  v3 = objc_msgSend(v1, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v10);

  v4 = v10[0];
  if (v3)
  {
    v5 = (void *)sub_21F715D80();
    v7 = v6;

    v10[0] = v5;
    v10[1] = v7;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_21F6715E0();
    sub_21F716848();
    sub_21F649BB0((uint64_t)v5, (unint64_t)v7);
  }
  else
  {
    v8 = v4;
    sub_21F715D50();

    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
}

uint64_t static PASCodableAuthResults.__derived_struct_equals(_:_:)()
{
  void *v0;
  void *v1;
  char v2;

  sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  v0 = (void *)sub_21F71602C();
  v1 = (void *)sub_21F71602C();
  v2 = sub_21F7163EC();

  return v2 & 1;
}

uint64_t static PASAuthResults.== infix(_:_:)()
{
  void *v0;
  void *v1;
  char v2;

  sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  v0 = (void *)sub_21F71602C();
  v1 = (void *)sub_21F71602C();
  v2 = sub_21F7163EC();

  return v2 & 1;
}

uint64_t PASCodableAuthResults.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  v2 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_23;
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v6)
          goto LABEL_23;
        v10 = *(_QWORD *)(v2 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v6)
            goto LABEL_23;
          v10 = *(_QWORD *)(v2 + 8 * v8);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_21F716134();
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    sub_21F7163F8();
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease_n();
  }
  v11 = v9 + 4;
  if (v11 >= v6)
  {
LABEL_23:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t PASCodableAuthResults.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  sub_21F716920();
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_23;
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v6)
          goto LABEL_23;
        v10 = *(_QWORD *)(v2 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v6)
            goto LABEL_23;
          v10 = *(_QWORD *)(v2 + 8 * v8);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_21F716134();
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    sub_21F7163F8();
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease_n();
  }
  v11 = v9 + 4;
  if (v11 >= v6)
  {
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    return sub_21F716968();
  }
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

NSObject *sub_21F66D6F4@<X0>(_QWORD *a1@<X0>, NSObject **a2@<X8>)
{
  uint64_t v2;
  NSObject *result;

  result = sub_21F67131C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_21F66D71C(_QWORD *a1)
{
  return PASCodableAuthResults.encode(to:)(a1);
}

uint64_t sub_21F66D738()
{
  uint64_t v0;

  sub_21F716920();
  v0 = swift_bridgeObjectRetain();
  sub_21F670CA0(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F671A60);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F66D7A4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_21F670CA0(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F671A60);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F66D7F8()
{
  uint64_t v0;

  sub_21F716920();
  v0 = swift_bridgeObjectRetain();
  sub_21F670CA0(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F671A60);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

BOOL PASAuthResults.isEmpty.getter(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t PASAuthResults.init(dictionary:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;

  v5 = sub_21F6409B8(MEMORY[0x24BEE4AF8]);
  v2 = swift_bridgeObjectRetain();
  sub_21F670EE8(v2, (uint64_t *)&v5, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_21F66CC60, 0, a1);
  swift_bridgeObjectRelease_n();
  v3 = sub_21F66CC78(v5);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_21F66D8FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[5];
  char v11[40];

  sub_21F6474FC(a1, (uint64_t)v11);
  v4 = swift_dynamicCast();
  v5 = v10[0];
  v6 = v10[1];
  sub_21F6474FC(a1, (uint64_t)v10);
  if (v4)
    v7 = v6 == 0;
  else
    v7 = 1;
  if (v7)
  {
    v5 = sub_21F716494();
    v6 = v8;
  }
  result = sub_21F647538((uint64_t)v10);
  *a2 = v5;
  a2[1] = v6;
  return result;
}

uint64_t PASAuthResults.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  v2 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_23;
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v6)
          goto LABEL_23;
        v10 = *(_QWORD *)(v2 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v6)
            goto LABEL_23;
          v10 = *(_QWORD *)(v2 + 8 * v8);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_21F716134();
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    sub_21F7163F8();
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease_n();
  }
  v11 = v9 + 4;
  if (v11 >= v6)
  {
LABEL_23:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21F66DB6C()
{
  sub_21F716134();
  objc_opt_self();
  swift_dynamicCastObjCClassUnconditional();
  swift_unknownObjectRetain();
  sub_21F7163F8();
  return swift_unknownObjectRelease();
}

NSDictionary __swiftcall PASAuthResults.asAKAuthResults()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  sub_21F66C120(v0);
  v1 = objc_allocWithZone(MEMORY[0x24BDBCE70]);
  v2 = (void *)sub_21F71602C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithDictionary_, v2);

  return (NSDictionary)v3;
}

uint64_t PASAuthResults.acceptingTerms(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  if (qword_2554DA718 != -1)
    swift_once();
  v4 = sub_21F715F3C();
  __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  v5 = sub_21F715F24();
  v6 = sub_21F716374();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 141558274;
    v17 = v8;
    sub_21F716428();
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DC340);
    v9 = sub_21F716128();
    sub_21F644208(v9, v10, &v17);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v5, v6, "PASAuthResults acceptingTerms %{mask.hash}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v17 = a2;
  v11 = sub_21F716104();
  v13 = v12;
  if (!a1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    sub_21F670AA4(v11, v13);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = 0x8000000000000000;
  sub_21F645530(v16, v11, v13, isUniquelyReferenced_nonNull_native);
  v17 = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t PASAuthResults.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  sub_21F716920();
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_23;
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v6)
          goto LABEL_23;
        v10 = *(_QWORD *)(v2 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v6)
            goto LABEL_23;
          v10 = *(_QWORD *)(v2 + 8 * v8);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_21F716134();
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    sub_21F7163F8();
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease_n();
  }
  v11 = v9 + 4;
  if (v11 >= v6)
  {
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    return sub_21F716968();
  }
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v6)
      goto LABEL_23;
    v10 = *(_QWORD *)(v2 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21F66E124()
{
  void *v0;
  void *v1;
  char v2;

  sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
  v0 = (void *)sub_21F71602C();
  v1 = (void *)sub_21F71602C();
  v2 = sub_21F7163EC();

  return v2 & 1;
}

uint64_t sub_21F66E1E0()
{
  uint64_t v0;

  sub_21F716920();
  v0 = swift_bridgeObjectRetain();
  sub_21F670CA0(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F6719D4);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t PASAuthResults.username.getter(uint64_t a1)
{
  return sub_21F66E270(a1);
}

uint64_t PASAuthResults.firstName.getter(uint64_t a1)
{
  return sub_21F66E270(a1);
}

uint64_t PASAuthResults.lastName.getter(uint64_t a1)
{
  return sub_21F66E270(a1);
}

uint64_t sub_21F66E270(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = sub_21F716104();
  v4 = sub_21F65C760(v2, v3, a1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t _s21ProximityAppleIDSetup14PASAuthResultsV7appleIDSSSgvg_0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = sub_21F716104();
  v4 = sub_21F65C760(v2, v3, a1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t PASAuthResults.isMe.getter()
{
  return 0;
}

uint64_t PASAuthResults.imageData.getter()
{
  return 0;
}

uint64_t sub_21F66E338()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = sub_21F716104();
  v4 = sub_21F65CBF8(v2, v3, v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F66E380()
{
  return sub_21F66E3A4();
}

uint64_t sub_21F66E38C()
{
  return sub_21F66E3A4();
}

uint64_t sub_21F66E398()
{
  return sub_21F66E3A4();
}

uint64_t sub_21F66E3A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = sub_21F716104();
  v4 = sub_21F65C760(v2, v3, v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F66E3F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = sub_21F716104();
  v4 = sub_21F65C760(v2, v3, v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_21F66E450()
{
  return 0;
}

uint64_t PASAuthResults.toParsable()@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  *a2 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t static PASAuthResults.parseObject(_:)(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[32];

  sub_21F6429E4(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  if (swift_dynamicCast())
    return v2;
  else
    return 0;
}

uint64_t sub_21F66E504@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[32];

  sub_21F6429E4(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  result = swift_dynamicCast();
  if ((_DWORD)result)
    v4 = v5;
  else
    v4 = 0;
  *a2 = v4;
  return result;
}

uint64_t sub_21F66E578@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t AKAppleIDAuthenticationControllerProtocol.authenticationResult(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21F66E63C;
  return v9(a1, a2, a3);
}

uint64_t sub_21F66E63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 24) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F66E6B0()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (!v1)
    v1 = sub_21F640EA0(MEMORY[0x24BEE4AF8]);
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F66E6F0(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *v1;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_21F66E794;
  v5 = swift_continuation_init();
  v2[10] = MEMORY[0x24BDAC760];
  v6 = v2 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_21F66E84C;
  v6[3] = &block_descriptor_0;
  v6[4] = v5;
  objc_msgSend(v4, sel_authenticateWithContext_completion_, a1, v6);
  return swift_continuation_await();
}

uint64_t sub_21F66E794()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 120));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_21F66E804(char a1)
{
  if ((a1 & 1) != 0)
    return 0x5264696C61766E69;
  else
    return 0xD000000000000013;
}

uint64_t sub_21F66E84C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
      v8 = sub_21F716044();
    }
    else
    {
      v8 = 0;
    }
    v9 = v8;
    sub_21F67198C((uint64_t)&v9, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21F66E91C(char *a1, char *a2)
{
  return sub_21F70C588(*a1, *a2);
}

uint64_t sub_21F66E928()
{
  return sub_21F70C770();
}

uint64_t sub_21F66E930()
{
  return sub_21F70D540();
}

uint64_t sub_21F66E938()
{
  return sub_21F70D740();
}

uint64_t sub_21F66E940@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_21F66E99C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F66E804(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F66E9C4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70DF74();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F66EA40()
{
  return sub_21F70DF74();
}

uint64_t sub_21F66EA48()
{
  sub_21F671870();
  return sub_21F7168C0();
}

uint64_t sub_21F66EA70()
{
  sub_21F671870();
  return sub_21F7168B4();
}

id sub_21F66EA98()
{
  static PASConstants.appProvidedContextDependentSetup = *MEMORY[0x24BE0AB10];
  return (id)static PASConstants.appProvidedContextDependentSetup;
}

uint64_t *PASConstants.appProvidedContextDependentSetup.unsafeMutableAddressor()
{
  if (qword_2554DA6B0 != -1)
    swift_once();
  return &static PASConstants.appProvidedContextDependentSetup;
}

id static PASConstants.appProvidedContextDependentSetup.getter()
{
  if (qword_2554DA6B0 != -1)
    swift_once();
  return (id)static PASConstants.appProvidedContextDependentSetup;
}

void *PASConstants.appProvidedContextKey.unsafeMutableAddressor()
{
  return &static PASConstants.appProvidedContextKey;
}

unint64_t static PASConstants.appProvidedContextKey.getter()
{
  return 0xD000000000000012;
}

uint64_t PASAuthenticator.init(withAuthController:accountStore:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a2, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_21F670B70(a1, (uint64_t)v9, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_0Tm(a2);
  return v11;
}

uint64_t PASAuthenticator.authenticateDependentLocally(with:authContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return swift_task_switch();
}

uint64_t sub_21F66EC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  void *v48;
  uint64_t v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  v2 = sub_21F716104();
  sub_21F65C760(v2, v3, v1);
  v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    v6 = (void *)sub_21F7160E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 64), sel_setUsername_, v6);

  v8 = sub_21F716104();
  sub_21F65C760(v8, v9, v7);
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    v12 = (void *)sub_21F7160E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  v13 = *(_QWORD *)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 64), sel_setAltDSID_, v12);

  v14 = sub_21F716104();
  sub_21F65C760(v14, v15, v13);
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = (void *)sub_21F7160E0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  v20 = *(_QWORD *)(v0 + 56);
  v19 = *(void **)(v0 + 64);
  objc_msgSend(v19, sel__setPassword_, v18);

  objc_msgSend(v19, sel_setAuthenticationType_, 0);
  objc_msgSend(v19, sel_setIsUsernameEditable_, 0);
  objc_msgSend(v19, sel_setServiceType_, 1);
  v21 = sub_21F716104();
  sub_21F65C760(v21, v22, v20);
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v25 = sub_21F715F3C();
    __swift_project_value_buffer(v25, (uint64_t)static PASLogger.common);
    v26 = sub_21F715F24();
    v27 = sub_21F716374();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_21F63C000, v26, v27, "Setting passwordlessToken on auth context.", v28, 2u);
      MEMORY[0x2207CC514](v28, -1, -1);
    }
    v29 = *(void **)(v0 + 64);

    v30 = (void *)sub_21F7160E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_setPasswordlessToken_, v30);

  }
  v31 = *(_QWORD *)(v0 + 56);
  v32 = sub_21F716104();
  sub_21F65C760(v32, v33, v31);
  v35 = v34;
  swift_bridgeObjectRelease();
  if (v35)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v36 = sub_21F715F3C();
    __swift_project_value_buffer(v36, (uint64_t)static PASLogger.common);
    v37 = sub_21F715F24();
    v38 = sub_21F716374();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_21F63C000, v37, v38, "Setting idmsDataToken on auth context.", v39, 2u);
      MEMORY[0x2207CC514](v39, -1, -1);
    }
    v40 = *(void **)(v0 + 64);

    v41 = (void *)sub_21F7160E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setIdmsDataToken_, v41);

  }
  if (qword_2554DA718 != -1)
    swift_once();
  v42 = *(void **)(v0 + 64);
  v43 = sub_21F715F3C();
  *(_QWORD *)(v0 + 80) = __swift_project_value_buffer(v43, (uint64_t)static PASLogger.common);
  v44 = v42;
  v45 = sub_21F715F24();
  v46 = sub_21F716374();
  v47 = os_log_type_enabled(v45, v46);
  v48 = *(void **)(v0 + 64);
  if (v47)
  {
    v49 = swift_slowAlloc();
    v58 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v49 = 141558274;
    *(_QWORD *)(v0 + 40) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v49 + 12) = 2112;
    *(_QWORD *)(v0 + 48) = v48;
    v50 = v48;
    sub_21F716428();
    *v58 = v48;

    _os_log_impl(&dword_21F63C000, v45, v46, "PASAuthenticator authenticateDependentLocally with: %{mask.hash}@", (uint8_t *)v49, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v58, -1, -1);
    MEMORY[0x2207CC514](v49, -1, -1);
  }
  else
  {

  }
  v51 = *(_QWORD **)(v0 + 72);
  v52 = v51[17];
  v53 = v51[18];
  __swift_project_boxed_opaque_existential_1(v51 + 14, v52);
  v54 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v54;
  *v54 = v0;
  v54[1] = sub_21F66F1F4;
  v55 = *(_QWORD *)(v0 + 64);
  v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v53 + 8) + *(_QWORD *)(v53 + 8));
  v56 = (_QWORD *)swift_task_alloc();
  v54[2] = v56;
  *v56 = v54;
  v56[1] = sub_21F66E63C;
  return v59(v55, v52, v53);
}

uint64_t sub_21F66F1F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F66F268()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  swift_bridgeObjectRetain_n();
  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 96);
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 141558274;
    *(_QWORD *)(v0 + 16) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v4 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v3;
    swift_bridgeObjectRetain();
    v6 = sub_21F716128();
    *(_QWORD *)(v0 + 32) = sub_21F644208(v6, v7, &v9);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASAuthenticator authenticateDependentLocally completed with: %{mask.hash}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v5, -1, -1);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t PASAuthenticator.personalAuth(withUsername:context:companionDevice:requireAppleMAID:anisetteDataProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 88) = a6;
  *(_QWORD *)(v7 + 96) = v6;
  *(_BYTE *)(v7 + 128) = a5;
  *(_QWORD *)(v7 + 72) = a3;
  *(_QWORD *)(v7 + 80) = a4;
  *(_QWORD *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 64) = a2;
  return swift_task_switch();
}

uint64_t sub_21F66F430()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;

  v1 = *(unsigned __int8 *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(void **)(v0 + 72);
  v5 = (void *)sub_21F7160E0();
  objc_msgSend(v4, sel_setUsername_, v5);

  objc_msgSend(v4, sel_setCompanionDevice_, v3);
  objc_msgSend(v4, sel_setAnisetteDataProvider_, v2);
  objc_msgSend(v4, sel_setIsUsernameEditable_, 0);
  objc_msgSend(v4, sel_setShouldAllowAppleIDCreation_, 0);
  objc_msgSend(v4, sel_setAuthenticationType_, 0);
  objc_msgSend(v4, sel_setShouldUpdatePersistentServiceTokens_, 1);
  objc_msgSend(v4, sel_setShouldOfferSecurityUpgrade_, 1);
  objc_msgSend(v4, sel__setProxyingForApp_, 1);
  objc_msgSend(v4, sel_setAnticipateEscrowAttempt_, 1);
  objc_msgSend(v4, sel_setServiceType_, 1);
  if (v1 == 1)
    objc_msgSend(*(id *)(v0 + 72), sel_setAppProvidedContext_, *MEMORY[0x24BE60DC8]);
  if (qword_2554DA718 != -1)
    swift_once();
  v6 = *(void **)(v0 + 72);
  v7 = sub_21F715F3C();
  *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
  v8 = v6;
  v9 = sub_21F715F24();
  v10 = sub_21F716374();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(void **)(v0 + 72);
  if (v11)
  {
    v13 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v13 = 141558274;
    *(_QWORD *)(v0 + 40) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v13 + 12) = 2080;
    v14 = objc_msgSend(v12, sel_description);
    v15 = sub_21F716104();
    v17 = v16;

    *(_QWORD *)(v0 + 48) = sub_21F644208(v15, v17, &v27);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v9, v10, "PASAuthenticator authenticatePersonalAccountLocally with: %{mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v25, -1, -1);
    MEMORY[0x2207CC514](v13, -1, -1);
  }
  else
  {

  }
  v18 = *(_QWORD **)(v0 + 96);
  v19 = v18[17];
  v20 = v18[18];
  __swift_project_boxed_opaque_existential_1(v18 + 14, v19);
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v21;
  *v21 = v0;
  v21[1] = sub_21F66F7B8;
  v22 = *(_QWORD *)(v0 + 72);
  v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v20 + 8) + *(_QWORD *)(v20 + 8));
  v23 = (_QWORD *)swift_task_alloc();
  v21[2] = v23;
  *v23 = v21;
  v23[1] = sub_21F66E63C;
  return v26(v22, v19, v20);
}

uint64_t sub_21F66F7B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F66F82C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  swift_bridgeObjectRetain_n();
  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 141558274;
    *(_QWORD *)(v0 + 16) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v4 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v3;
    swift_bridgeObjectRetain();
    v6 = sub_21F716128();
    *(_QWORD *)(v0 + 32) = sub_21F644208(v6, v7, &v9);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASAuthenticator authenticatePersonalAccountLocally completed with: %{mask.hash}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v5, -1, -1);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t PASAuthenticator.createNewDependentAccount(authContext:proxiedDevice:anisetteDataProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch();
}

uint64_t sub_21F66F9EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 80);
  v2 = v1[22];
  v3 = v1[23];
  __swift_project_boxed_opaque_existential_1(v1 + 19, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_21F66FA68;
  return v6(v2, v3);
}

uint64_t sub_21F66FA68(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F66FADC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;

  v1 = *(void **)(v0 + 96);
  if (v1)
  {
    objc_msgSend(*(id *)(v0 + 64), sel_setLinkType_, 3);
    if (qword_2554DA6B0 != -1)
      swift_once();
    v2 = *(void **)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 72);
    objc_msgSend(v2, sel_setAppProvidedContext_, static PASConstants.appProvidedContextDependentSetup);
    objc_msgSend(v2, sel_setProxiedDevice_, v4);
    v5 = objc_msgSend(v1, sel_aa_altDSID);
    objc_msgSend(v2, sel_setAltDSID_, v5);

    objc_msgSend(v2, sel_setAnisetteDataProvider_, v3);
    objc_msgSend(v2, sel_setNeedsNewChildAccount_, 1);
    objc_msgSend(v2, sel__setProxyingForApp_, 1);
    objc_msgSend(v2, sel_setServiceType_, 1);
    objc_msgSend(v2, sel_setIsUsernameEditable_, 0);
    if (qword_2554DA718 != -1)
      swift_once();
    v6 = *(void **)(v0 + 56);
    v7 = sub_21F715F3C();
    *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v8 = v6;
    v9 = sub_21F715F24();
    v10 = sub_21F716374();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(void **)(v0 + 56);
    if (v11)
    {
      v13 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v13 = 141558274;
      *(_QWORD *)(v0 + 40) = 1752392040;
      sub_21F716428();
      *(_WORD *)(v13 + 12) = 2080;
      v14 = objc_msgSend(v12, sel_description);
      v15 = sub_21F716104();
      v17 = v16;

      *(_QWORD *)(v0 + 48) = sub_21F644208(v15, v17, &v28);
      sub_21F716428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21F63C000, v9, v10, "PASAuthenticator createNewDependentAccount with: %{mask.hash}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v26, -1, -1);
      MEMORY[0x2207CC514](v13, -1, -1);
    }
    else
    {

    }
    v20 = *(_QWORD **)(v0 + 80);
    v21 = v20[17];
    v22 = v20[18];
    __swift_project_boxed_opaque_existential_1(v20 + 14, v21);
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v23;
    *v23 = v0;
    v23[1] = sub_21F66FEA8;
    v24 = *(_QWORD *)(v0 + 56);
    v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v22 + 8) + *(_QWORD *)(v22 + 8));
    v25 = (_QWORD *)swift_task_alloc();
    v23[2] = v25;
    *v25 = v23;
    v25[1] = sub_21F66E63C;
    return v27(v24, v21, v22);
  }
  else
  {
    sub_21F671624();
    swift_allocError();
    *v18 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F66FEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F66FF14()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v11;

  swift_bridgeObjectRetain_n();
  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(void **)(v0 + 96);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 141558274;
    *(_QWORD *)(v0 + 16) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v5 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v3;
    swift_bridgeObjectRetain();
    v7 = sub_21F716128();
    *(_QWORD *)(v0 + 32) = sub_21F644208(v7, v8, &v11);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASAuthenticator createNewDependentAccount completed with: %{mask.hash}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v6, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);

  }
  else
  {
    v9 = *(void **)(v0 + 96);
    swift_bridgeObjectRelease_n();

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_21F6700D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASAuthenticator.repairLocalAccount()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_21F670120()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[11] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASAuthenticator repairLocalAccount", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = (_QWORD *)v0[10];

  v6 = v5 + 19;
  v7 = v5[22];
  v8 = v5[23];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v11 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v8 + 8) + *(_QWORD *)(v8 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  v0[12] = v9;
  *v9 = v0;
  v9[1] = sub_21F67024C;
  return v11(v7, v8);
}

uint64_t sub_21F67024C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
  else
    return swift_task_switch();
}

uint64_t sub_21F6702C4()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  id v4;
  void *v5;
  _BYTE *v6;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 104);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC388);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    *(_QWORD *)(inited + 32) = sub_21F716104();
    *(_QWORD *)(inited + 40) = v3;
    sub_21F7164E8();
    sub_21F716140();
    v4 = objc_msgSend(v1, sel_username);
    if (v4)
    {
      v5 = v4;
      sub_21F716104();

    }
    v8 = *(_QWORD **)(v0 + 80);
    sub_21F716140();
    swift_bridgeObjectRelease();
    sub_21F716140();
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0xE000000000000000;
    v9 = sub_21F640FC0(inited);
    v10 = v8[22];
    v11 = v8[23];
    __swift_project_boxed_opaque_existential_1(v8 + 19, v10);
    v12 = sub_21F66C4D4(v9);
    *(_QWORD *)(v0 + 112) = v12;
    swift_bridgeObjectRelease();
    v14 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 16) + *(_QWORD *)(v11 + 16));
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v13;
    *v13 = v0;
    v13[1] = sub_21F6704DC;
    return v14(v1, v12, v10, v11);
  }
  else
  {
    sub_21F671624();
    swift_allocError();
    *v6 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F6704DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F670550()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;

  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_21F63C000, v1, v2, "PASAuthenticator repaired account", v3, 2u);
    MEMORY[0x2207CC514](v3, -1, -1);
  }
  v4 = *(void **)(v0 + 104);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_21F670600()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 104);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t PASAuthenticator.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 112);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 152);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PASAuthenticator.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 112);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 152);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PASAuthenticator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21F6706A0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21F6706AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21F671A5C;
  v7[8] = a2;
  v7[9] = v6;
  v7[7] = a1;
  return swift_task_switch();
}

uint64_t sub_21F670720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;

  v14 = *v6;
  v15 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *(_QWORD *)v15 = v7;
  *(_QWORD *)(v15 + 8) = sub_21F6514BC;
  *(_QWORD *)(v15 + 88) = a6;
  *(_QWORD *)(v15 + 96) = v14;
  *(_BYTE *)(v15 + 128) = a5;
  *(_QWORD *)(v15 + 72) = a3;
  *(_QWORD *)(v15 + 80) = a4;
  *(_QWORD *)(v15 + 56) = a1;
  *(_QWORD *)(v15 + 64) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6707BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_21F671A5C;
  v9[9] = a3;
  v9[10] = v8;
  v9[7] = a1;
  v9[8] = a2;
  return swift_task_switch();
}

uint64_t sub_21F670834()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F651694;
  v3[10] = v2;
  return swift_task_switch();
}

void *sub_21F670894(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_21F716638();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

void sub_21F670928(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_21F716428();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_21F6709D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21F6448D8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21F6F9994();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_21F6F90A0(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21F670AA4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21F6448D8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_21F6F9D2C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_21F6F90A0(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21F670B70(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a4;
  v17 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  swift_defaultActor_initialize();
  if (qword_2554DA718 != -1)
    swift_once();
  v10 = sub_21F715F3C();
  __swift_project_value_buffer(v10, (uint64_t)static PASLogger.common);
  v11 = sub_21F715F24();
  v12 = sub_21F716350();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_21F63C000, v11, v12, "PASAuthenticator init", v13, 2u);
    MEMORY[0x2207CC514](v13, -1, -1);
  }

  sub_21F64756C(a1, a3 + 112);
  sub_21F64756C(&v15, a3 + 152);
  return a3;
}

uint64_t sub_21F670CA0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    a2(v14, v15, v16);
    swift_unknownObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21F670E38(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PASAuthenticator();
  v12 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return sub_21F670B70(a1, (uint64_t)v11, v12, a4, a5);
}

uint64_t sub_21F670EE8(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *__return_ptr, _OWORD *), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  int64_t v51;
  _OWORD v52[2];
  _OWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;
  _QWORD *v60;

  v7 = a1;
  v48 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 64);
  v49 = (unint64_t)(v8 + 63) >> 6;
  v11 = 0;
  v47 = swift_bridgeObjectRetain();
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v51 = v11;
    v13 = v12 | (v11 << 6);
LABEL_25:
    sub_21F6474FC(*(_QWORD *)(v7 + 48) + 40 * v13, (uint64_t)v58);
    v56[0] = v58[0];
    v56[1] = v58[1];
    v57 = v59;
    a3(&v54, v56);
    if (*(_QWORD *)(a5 + 16))
    {
      v18 = sub_21F644994((uint64_t)v56);
      if ((v19 & 1) != 0)
      {
        v20 = a5;
        sub_21F6429E4(*(_QWORD *)(a5 + 56) + 32 * v18, (uint64_t)v53);
        v21 = v54;
        v22 = v55;
        sub_21F644FEC(v53, v52);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v60 = (_QWORD *)*a2;
        v24 = v60;
        *a2 = 0x8000000000000000;
        v26 = sub_21F6448D8(v21, v22);
        v27 = v24[2];
        v28 = (v25 & 1) == 0;
        v29 = v27 + v28;
        if (__OFADD__(v27, v28))
          goto LABEL_45;
        v30 = v25;
        if (v24[3] < v29)
        {
          sub_21F6F7A94(v29, isUniquelyReferenced_nonNull_native);
          v31 = sub_21F6448D8(v21, v22);
          if ((v30 & 1) != (v32 & 1))
            goto LABEL_48;
          v26 = v31;
          v33 = v60;
          if ((v30 & 1) == 0)
            goto LABEL_40;
LABEL_38:
          v41 = (_OWORD *)(v33[7] + 32 * v26);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
          sub_21F644FEC(v52, v41);
LABEL_42:
          *a2 = (uint64_t)v33;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a5 = v20;
          v7 = v47;
          goto LABEL_6;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v33 = v60;
          if ((v25 & 1) != 0)
            goto LABEL_38;
        }
        else
        {
          sub_21F6F9410();
          v33 = v60;
          if ((v30 & 1) != 0)
            goto LABEL_38;
        }
LABEL_40:
        v33[(v26 >> 6) + 8] |= 1 << v26;
        v42 = (uint64_t *)(v33[6] + 16 * v26);
        *v42 = v21;
        v42[1] = v22;
        sub_21F644FEC(v52, (_OWORD *)(v33[7] + 32 * v26));
        v43 = v33[2];
        v44 = __OFADD__(v43, 1);
        v45 = v43 + 1;
        if (v44)
          goto LABEL_46;
        v33[2] = v45;
        swift_bridgeObjectRetain();
        goto LABEL_42;
      }
    }
    v35 = v54;
    v34 = v55;
    swift_bridgeObjectRetain();
    v36 = sub_21F6448D8(v35, v34);
    v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
    {
      v39 = swift_isUniquelyReferenced_nonNull_native();
      v40 = *a2;
      *(_QWORD *)&v52[0] = *a2;
      *a2 = 0x8000000000000000;
      if ((v39 & 1) == 0)
      {
        sub_21F6F9410();
        v40 = *(_QWORD *)&v52[0];
      }
      swift_bridgeObjectRelease();
      sub_21F644FEC((_OWORD *)(*(_QWORD *)(v40 + 56) + 32 * v36), v53);
      sub_21F6F8D04(v36, v40);
      *a2 = v40;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v53, 0, sizeof(v53));
    }
    swift_bridgeObjectRelease();
    sub_21F6476AC((uint64_t)v53, &qword_2554DA750);
LABEL_6:
    v11 = v51;
    sub_21F647538((uint64_t)v56);
  }
  v14 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v14 >= v49)
    return swift_release();
  v15 = *(_QWORD *)(v48 + 8 * v14);
  v16 = v11 + 1;
  if (v15)
    goto LABEL_24;
  v16 = v11 + 2;
  if (v11 + 2 >= v49)
    return swift_release();
  v15 = *(_QWORD *)(v48 + 8 * v16);
  if (v15)
    goto LABEL_24;
  v16 = v11 + 3;
  if (v11 + 3 >= v49)
    return swift_release();
  v15 = *(_QWORD *)(v48 + 8 * v16);
  if (v15)
    goto LABEL_24;
  v16 = v11 + 4;
  if (v11 + 4 >= v49)
    return swift_release();
  v15 = *(_QWORD *)(v48 + 8 * v16);
  if (v15)
  {
LABEL_24:
    v10 = (v15 - 1) & v15;
    v51 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    goto LABEL_25;
  }
  v17 = v11 + 5;
  if (v11 + 5 >= v49)
    return swift_release();
  v15 = *(_QWORD *)(v48 + 8 * v17);
  if (v15)
  {
    v16 = v11 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v49)
      return swift_release();
    v15 = *(_QWORD *)(v48 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_24;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_21F716890();
  __break(1u);
  return result;
}

NSObject *sub_21F67131C(_QWORD *a1)
{
  uint64_t v1;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  _BYTE *v10;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14[4];

  v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169A4();
  if (v1)
  {
LABEL_10:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return v3;
  }
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_21F671A18();
  sub_21F716824();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  sub_21F64779C(0, &qword_2554E3110);
  sub_21F64779C(0, (unint64_t *)&unk_2554DC4F0);
  v4 = (void *)sub_21F716380();
  if (!v4 || (v14[0] = 0, sub_21F716038(), v4, (v5 = v14[0]) == 0))
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v3 = sub_21F715F24();
    v8 = sub_21F71635C();
    if (os_log_type_enabled(v3, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_21F63C000, v3, v8, "PASAuthResults failed to init from decoder", v9, 2u);
      MEMORY[0x2207CC514](v9, -1, -1);
    }

    sub_21F671624();
    swift_allocError();
    *v10 = 1;
    swift_willThrow();
    sub_21F649BB0(v12, v13);
    goto LABEL_10;
  }
  v14[0] = sub_21F6409B8(MEMORY[0x24BEE4AF8]);
  v6 = swift_bridgeObjectRetain();
  sub_21F670EE8(v6, v14, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_21F66CC60, 0, v5);
  swift_bridgeObjectRelease_n();
  v3 = sub_21F66CC78(v14[0]);
  sub_21F649BB0(v12, v13);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v3;
}

unint64_t sub_21F6715E0()
{
  unint64_t result;

  result = qword_2554DC328;
  if (!qword_2554DC328)
  {
    result = MEMORY[0x2207CC46C](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2554DC328);
  }
  return result;
}

unint64_t sub_21F671624()
{
  unint64_t result;

  result = qword_2554DC378;
  if (!qword_2554DC378)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71AB64, &type metadata for PASAuthenticatorError);
    atomic_store(result, (unint64_t *)&qword_2554DC378);
  }
  return result;
}

unint64_t sub_21F67166C()
{
  unint64_t result;

  result = qword_2554DC390;
  if (!qword_2554DC390)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASCodableAuthResults, &type metadata for PASCodableAuthResults);
    atomic_store(result, (unint64_t *)&qword_2554DC390);
  }
  return result;
}

unint64_t sub_21F6716B4()
{
  unint64_t result;

  result = qword_2554DC398;
  if (!qword_2554DC398)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAuthResults, &type metadata for PASAuthResults);
    atomic_store(result, (unint64_t *)&qword_2554DC398);
  }
  return result;
}

unint64_t sub_21F6716F8(uint64_t a1)
{
  unint64_t result;

  result = sub_21F6716B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for PASCodableAuthResults()
{
  return &type metadata for PASCodableAuthResults;
}

ValueMetadata *type metadata accessor for PASAuthResults()
{
  return &type metadata for PASAuthResults;
}

ValueMetadata *type metadata accessor for PASConstants()
{
  return &type metadata for PASConstants;
}

uint64_t type metadata accessor for PASAuthenticator()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PASAuthenticatorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F6717B8 + 4 * byte_21F71A715[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F6717EC + 4 * asc_21F71A710[v4]))();
}

uint64_t sub_21F6717EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6717F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6717FCLL);
  return result;
}

uint64_t sub_21F671808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F671810);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F671814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F67181C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASAuthenticatorError()
{
  return &type metadata for PASAuthenticatorError;
}

unint64_t sub_21F67183C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F671870();
  a1[2] = sub_21F6718B4();
  result = sub_21F6718F8();
  a1[3] = result;
  return result;
}

unint64_t sub_21F671870()
{
  unint64_t result;

  result = qword_2554DC498;
  if (!qword_2554DC498)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71AA68, &type metadata for PASAuthenticatorError);
    atomic_store(result, (unint64_t *)&qword_2554DC498);
  }
  return result;
}

unint64_t sub_21F6718B4()
{
  unint64_t result;

  result = qword_2554DC4A0;
  if (!qword_2554DC4A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71AA20, &type metadata for PASAuthenticatorError);
    atomic_store(result, (unint64_t *)&qword_2554DC4A0);
  }
  return result;
}

unint64_t sub_21F6718F8()
{
  unint64_t result;

  result = qword_2554DC4A8;
  if (!qword_2554DC4A8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71A9F8, &type metadata for PASAuthenticatorError);
    atomic_store(result, (unint64_t *)&qword_2554DC4A8);
  }
  return result;
}

unint64_t sub_21F671940()
{
  unint64_t result;

  result = qword_2554DC4B0;
  if (!qword_2554DC4B0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71AB3C, &type metadata for PASAuthenticatorError);
    atomic_store(result, (unint64_t *)&qword_2554DC4B0);
  }
  return result;
}

uint64_t sub_21F671984()
{
  return swift_release();
}

uint64_t sub_21F67198C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC4C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6719D4()
{
  return sub_21F66DB6C();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_21F671A18()
{
  unint64_t result;

  result = qword_2554DC4E0;
  if (!qword_2554DC4E0)
  {
    result = MEMORY[0x2207CC46C](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2554DC4E0);
  }
  return result;
}

uint64_t PASTimer.__allocating_init(named:startingAt:execute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  PASTimer.init(named:startingAt:execute:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t PASTimer.init(named:startingAt:execute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = v5;
  swift_defaultActor_initialize();
  *(_QWORD *)(v6 + 136) = 0;
  *(_BYTE *)(v6 + 144) = 1;
  *(_QWORD *)(v6 + 168) = 0;
  sub_21F715D98();
  v13 = v12;
  v14 = sub_21F715DE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a3, v14);
  *(_QWORD *)(v6 + 112) = v13;
  *(_QWORD *)(v6 + 120) = a1;
  *(_QWORD *)(v6 + 128) = a2;
  *(_QWORD *)(v6 + 152) = a4;
  *(_QWORD *)(v6 + 160) = a5;
  return v6;
}

uint64_t PASTimer.stop(withContext:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a1;
  v4 = *v2;
  v5 = sub_21F715DE0();
  v6 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(v4 + 80);
  v9 = sub_21F71641C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v23 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v24, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v18 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = (v11 + *(unsigned __int8 *)(v6 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  v21 = v26;
  *((_QWORD *)v20 + 4) = v25;
  *((_QWORD *)v20 + 5) = v21;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v20[v18], v13, v9);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v20[v19], v8, v23);
  swift_retain();
  sub_21F6B4038((uint64_t)v16, (uint64_t)&unk_2554DC508, (uint64_t)v20);
  return swift_release();
}

{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_21F671D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_21F656988;
  v10[4] = a6;
  v10[5] = a4;
  v10[3] = a5;
  return swift_task_switch();
}

uint64_t sub_21F671DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(sub_21F71641C() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 64);
  v4 = sub_21F715DE0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  swift_release();
  v7 = *(_QWORD *)(v1 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v1))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v9 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_21F671EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(sub_21F71641C() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_21F715DE0() - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 40);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_21F651418;
  v11 = (_QWORD *)swift_task_alloc();
  v10[2] = v11;
  *v11 = v10;
  v11[1] = sub_21F656988;
  v11[4] = v9;
  v11[5] = v7;
  v11[3] = v8;
  return swift_task_switch();
}

uint64_t sub_21F671F98()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  _QWORD *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD, double);
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 40);
  sub_21F715D98();
  if ((*(_BYTE *)(v1 + 144) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 40);
    v4 = v2 - *(double *)(v3 + 112);
    *(double *)(v3 + 136) = v4;
    *(_BYTE *)(v1 + 144) = 0;
    v16 = (uint64_t (*)(_QWORD, double))(**(int **)(v3 + 152) + *(_QWORD *)(v3 + 152));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v5;
    *v5 = v0;
    v5[1] = sub_21F6721D4;
    return v16(*(_QWORD *)(v0 + 24), v4);
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    swift_retain();
    v8 = sub_21F715F24();
    v9 = sub_21F71635C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 40);
    if (v10)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17 = v13;
      *(_DWORD *)v12 = 136446210;
      v15 = *(_QWORD *)(v11 + 120);
      v14 = *(_QWORD *)(v11 + 128);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_21F644208(v15, v14, &v17);
      sub_21F716428();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_21F63C000, v8, v9, "PASTimer %{public}s already stopped", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v13, -1, -1);
      MEMORY[0x2207CC514](v12, -1, -1);
    }
    else
    {
      swift_release();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6721D4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t PASTimer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PASTimer.__deallocating_deinit()
{
  PASTimer.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t PASTimer.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_21F672274()
{
  return PASTimer.unownedExecutor.getter();
}

uint64_t sub_21F67228C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PASTimer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PASTimer);
}

BOOL PASFlowStepAllSetContextImageColor.init(rawValue:)(uint64_t a1)
{
  return a1 == 1;
}

_QWORD *sub_21F672324@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t PASFlowStepAllSetContext.title.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title);
}

uint64_t PASFlowStepAllSetContext.subtitle.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle);
}

uint64_t PASFlowStepAllSetContext.systemImage.getter()
{
  return sub_21F647C40(&OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage);
}

uint64_t PASFlowStepAllSetContext.imageColor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor);
}

uint64_t PASFlowStepAllSetContext.description.getter()
{
  sub_21F7164E8();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F7165CC();
  sub_21F716140();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1AF0);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DC5D0);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return 0;
}

uint64_t PASFlowStepAllSetContext.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  _BYTE v18[24];
  uint64_t v19;

  swift_getObjectType();
  sub_21F649B14(a1, (uint64_t)v18);
  if (!v19)
  {
    sub_21F649B5C((uint64_t)v18);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title + 8);
  v4 = *(_QWORD *)&v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title + 8];
  if (v3)
  {
    if (!v4)
      goto LABEL_30;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title) == *(_QWORD *)&v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title]
      && v3 == v4;
    if (!v5 && (sub_21F716800() & 1) == 0)
      goto LABEL_30;
  }
  else if (v4)
  {
    goto LABEL_30;
  }
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle + 8);
  v7 = *(_QWORD *)&v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle + 8];
  if (v6)
  {
    if (!v7)
      goto LABEL_30;
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle) == *(_QWORD *)&v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle]
      && v6 == v7;
    if (!v8 && (sub_21F716800() & 1) == 0)
      goto LABEL_30;
  }
  else if (v7)
  {
    goto LABEL_30;
  }
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage + 8);
  v10 = *(_QWORD *)&v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage + 8];
  if (v9)
  {
    if (v10
      && (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage) == *(_QWORD *)&v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage]
       && v9 == v10
       || (sub_21F716800() & 1) != 0))
    {
      goto LABEL_27;
    }
LABEL_30:

    return 0;
  }
  if (v10)
    goto LABEL_30;
LABEL_27:
  v11 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor);
  v13 = *(_BYTE *)(v11 + 8);
  v14 = *(_QWORD *)&v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor];
  v15 = v17[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor + 8];

  if ((v13 & 1) == 0)
    return (v12 == v14) & ~(_DWORD)v15;
  return v15;
}

uint64_t PASFlowStepAllSetContext.hash.getter()
{
  uint64_t v0;

  sub_21F716974();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage + 8))
  {
    sub_21F716938();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_21F716938();
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor + 8) == 1)
  {
    sub_21F716938();
  }
  else
  {
    sub_21F716938();
    sub_21F71692C();
  }
  return sub_21F71695C();
}

char *PASFlowStepAllSetContext.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static PASFlowStepAllSetContext.supportsSecureCoding;
}

uint64_t static PASFlowStepAllSetContext.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return static PASFlowStepAllSetContext.supportsSecureCoding;
}

uint64_t static PASFlowStepAllSetContext.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static PASFlowStepAllSetContext.supportsSecureCoding = a1;
  return result;
}

uint64_t (*static PASFlowStepAllSetContext.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall PASFlowStepAllSetContext.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title + 8))
    v3 = sub_21F7160E0();
  else
    v3 = 0;
  v4 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle + 8))
    v5 = sub_21F7160E0();
  else
    v5 = 0;
  v6 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage + 8))
    v7 = sub_21F7160E0();
  else
    v7 = 0;
  v8 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v7, v8);
  swift_unknownObjectRelease();

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor + 8) & 1) != 0)
    v9 = 0;
  else
    v9 = sub_21F7167E8();
  v10 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);
  swift_unknownObjectRelease();

}

id PASFlowStepAllSetContext.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21F6733F0(a1);

  return v4;
}

id PASFlowStepAllSetContext.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_21F6733F0(a1);

  return v2;
}

id PASFlowStepAllSetContext.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PASFlowStepAllSetContext.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PASFlowStepAllSetContext.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t PASFlowStepAllSetContextBuilder.title.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_title);
}

uint64_t PASFlowStepAllSetContextBuilder.title.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_title);
}

uint64_t (*PASFlowStepAllSetContextBuilder.title.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASFlowStepAllSetContextBuilder.subtitle.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_subtitle);
}

uint64_t PASFlowStepAllSetContextBuilder.subtitle.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_subtitle);
}

uint64_t (*PASFlowStepAllSetContextBuilder.subtitle.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASFlowStepAllSetContextBuilder.systemImage.getter()
{
  return sub_21F649480(&OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_systemImage);
}

uint64_t PASFlowStepAllSetContextBuilder.systemImage.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6494DC(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_systemImage);
}

uint64_t (*PASFlowStepAllSetContextBuilder.systemImage.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASFlowStepAllSetContextBuilder.imageColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_imageColor;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t PASFlowStepAllSetContextBuilder.imageColor.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_imageColor;
  result = swift_beginAccess();
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*PASFlowStepAllSetContextBuilder.imageColor.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id PASFlowStepAllSetContextBuilder.build()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  objc_class *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  objc_super v20;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_title);
  swift_beginAccess();
  v3 = *v1;
  v2 = v1[1];
  v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_subtitle);
  swift_beginAccess();
  v6 = *v4;
  v5 = v4[1];
  v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_systemImage);
  swift_beginAccess();
  v9 = *v7;
  v8 = v7[1];
  v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_imageColor);
  swift_beginAccess();
  v11 = *v10;
  v12 = *((_BYTE *)v10 + 8);
  v13 = (objc_class *)type metadata accessor for PASFlowStepAllSetContext();
  v14 = (char *)objc_allocWithZone(v13);
  v15 = &v14[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title];
  *(_QWORD *)v15 = v3;
  *((_QWORD *)v15 + 1) = v2;
  v16 = &v14[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle];
  *(_QWORD *)v16 = v6;
  *((_QWORD *)v16 + 1) = v5;
  v17 = &v14[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage];
  *(_QWORD *)v17 = v9;
  *((_QWORD *)v17 + 1) = v8;
  v18 = &v14[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor];
  *(_QWORD *)v18 = v11;
  v18[8] = v12;
  v20.receiver = v14;
  v20.super_class = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v20, sel_init);
}

id PASFlowStepAllSetContextBuilder.init()()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  objc_super v6;

  v1 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_title];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_subtitle];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_systemImage];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v4 = &v0[OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepAllSetContextBuilder_imageColor];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for PASFlowStepAllSetContextBuilder();
  return objc_msgSendSuper2(&v6, sel_init);
}

id PASFlowStepAllSetContextBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASFlowStepAllSetContextBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_21F673398()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_21F6733F0(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  char *v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  char *v16;
  objc_super v18;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_21F673640();
  v5 = v2;
  v6 = sub_21F7163E0();
  v7 = 0uLL;
  if (v6)
  {
    v8 = (void *)v6;
    sub_21F7160F8();

    v7 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_title] = v7;
  v9 = sub_21F7163E0();
  v10 = 0uLL;
  if (v9)
  {
    v11 = (void *)v9;
    sub_21F7160F8();

    v10 = 0uLL;
  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_subtitle] = v10;
  v12 = sub_21F7163E0();
  if (v12)
  {
    v13 = (void *)v12;
    sub_21F7160F8();

  }
  *(_OWORD *)&v5[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_systemImage] = 0uLL;
  v14 = (void *)sub_21F7160E0();
  v15 = objc_msgSend(a1, sel_decodeIntegerForKey_, v14);

  v16 = &v5[OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepAllSetContext_imageColor];
  *(_QWORD *)v16 = v15 == (id)1;
  v16[8] = v15 != (id)1;

  v18.receiver = v5;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t type metadata accessor for PASFlowStepAllSetContext()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASFlowStepAllSetContextBuilder()
{
  return objc_opt_self();
}

unint64_t sub_21F6735EC()
{
  unint64_t result;

  result = qword_2554DC600;
  if (!qword_2554DC600)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepAllSetContextImageColor, &type metadata for PASFlowStepAllSetContextImageColor);
    atomic_store(result, (unint64_t *)&qword_2554DC600);
  }
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepAllSetContextImageColor()
{
  return &type metadata for PASFlowStepAllSetContextImageColor;
}

unint64_t sub_21F673640()
{
  unint64_t result;

  result = qword_2554DAED8;
  if (!qword_2554DAED8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554DAED8);
  }
  return result;
}

uint64_t PASFlowStepManateeRepair.shouldSignInForSelf.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_shouldSignInForSelf);
}

uint64_t PASFlowStepManateeRepair.__allocating_init(delegate:familyMemberSelection:shouldSignInForSelf:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;

  swift_allocObject();
  v8 = sub_21F6746B4(a1, a2, a3, a4);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t PASFlowStepManateeRepair.init(delegate:familyMemberSelection:shouldSignInForSelf:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  v4 = sub_21F6746B4(a1, a2, a3, a4);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t PASFlowStepManateeRepair.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[17] = v0;
  v1[18] = sub_21F7162A8();
  v1[19] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[20] = v2;
  *v2 = v1;
  v2[1] = sub_21F67379C;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F67379C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F673820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  swift_release();
  swift_retain();
  sub_21F656B40(v0 + 56);
  swift_release();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  if (*(_QWORD *)(v0 + 120))
  {
    sub_21F64756C((__int128 *)(v0 + 96), v0 + 16);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v3);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4) & 1) == 0)
    {
      v7 = swift_allocObject();
      swift_weakInit();
      sub_21F658AF4();
      swift_allocError();
      *(_QWORD *)v8 = 0xD000000000000042;
      *(_QWORD *)(v8 + 8) = 0x800000021F7273D0;
      *(_QWORD *)(v8 + 16) = &unk_2554DC670;
      *(_QWORD *)(v8 + 24) = v7;
      *(_BYTE *)(v8 + 32) = 0;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
      v6 = *(uint64_t (**)(void))(v0 + 8);
      return v6();
    }
    v5 = v0 + 16;
  }
  else
  {
    sub_21F6476AC(v0 + 96, (uint64_t *)&unk_2554DB8A0);
    v5 = v0 + 56;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v5);
  v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_21F6739B0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6739E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 48) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F673A50()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result;
    v3 = *(void **)(Strong + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result);
    *(_QWORD *)v2 = 1;
    v4 = *(_BYTE *)(v2 + 8);
    *(_BYTE *)(v2 + 8) = 0;
    sub_21F674A0C(v3, v4);
    PASFlowStepBase.setFinished()();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepManateeRepair.repairManatee(withSecurityUpgradeContext:manateeHelperProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_21F673AF8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepManateeRepair repairManatee", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);

  sub_21F647710(v5, v0 + 16);
  v7 = type metadata accessor for PASManateeRepairController();
  swift_allocObject();
  v8 = sub_21F70580C((__int128 *)(v0 + 16), (uint64_t)sub_21F7057D4, 0);
  *(_QWORD *)(v0 + 168) = v8;
  *(_QWORD *)(v0 + 80) = v7;
  *(_QWORD *)(v0 + 88) = &protocol witness table for PASManateeRepairController;
  *(_QWORD *)(v0 + 56) = v8;
  v9 = v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_manateeRepairController;
  swift_beginAccess();
  swift_retain();
  sub_21F6749C4(v0 + 56, v9);
  swift_endAccess();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v10;
  *v10 = v0;
  v10[1] = sub_21F673CBC;
  return PASManateeRepairController.repair(featureName:securityUpgradeContext:)(0xD000000000000025, 0x800000021F727420, *(_QWORD *)(v0 + 136));
}

uint64_t sub_21F673CBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F673D20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  v1 = *(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result;
  v2 = *(void **)v1;
  *(_QWORD *)v1 = 1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(v1 + 8) = 0;
  sub_21F674A0C(v2, v3);
  sub_21F7162A8();
  *(_QWORD *)(v0 + 192) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F673DB0()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F673DF4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F673E24()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v17;

  v1 = (void *)v0[23];
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[23];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v17 = v8;
    v0[15] = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    v0[16] = sub_21F644208(v10, v11, &v17);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepManateeRepair failed with error %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);
  }
  else
  {
    v12 = (void *)v0[23];

  }
  v13 = v0[19] + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result;
  v14 = *(void **)v13;
  *(_QWORD *)v13 = v0[23];
  v15 = *(_BYTE *)(v13 + 8);
  *(_BYTE *)(v13 + 8) = 1;
  sub_21F674A0C(v14, v15);
  sub_21F7162A8();
  v0[24] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t PASFlowStepManateeRepair.nextStep()()
{
  uint64_t v0;
  id *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE v27[48];
  uint64_t v28;

  v1 = (id *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result);
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result + 8);
  if (v2 == 255)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v10 = sub_21F715F3C();
    __swift_project_value_buffer(v10, (uint64_t)static PASLogger.common);
    v11 = sub_21F715F24();
    v12 = sub_21F716368();
    v8 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, (os_log_type_t)v8, "PASFlowStepManateeRepair result is nil", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v14 = 0xD000000000000026;
    *(_QWORD *)(v14 + 8) = 0x800000021F727450;
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 0;
    *(_BYTE *)(v14 + 32) = 1;
    swift_willThrow();
  }
  else
  {
    if ((v2 & 1) == 0)
    {
      if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_shouldSignInForSelf) & 1) != 0)
      {
        sub_21F674A3C(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_familyMemberSelection, (uint64_t)&v26);
        if (v27[40] == 2)
        {
          v3 = v26;
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
          v4 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
          swift_beginAccess();
          v5 = MEMORY[0x2207CC5BC](v4);
          v6 = *(_QWORD *)(v4 + 8);
          type metadata accessor for PASFlowStepSendPersonalAccount();
          v7 = type metadata accessor for PASFlowStepSendPersonalAccount;
          swift_allocObject();
          v8 = sub_21F658C0C(v3, v5, v6);
          swift_unknownObjectRelease();
          v9 = &qword_2554DB3C8;
LABEL_19:
          sub_21F65EAB0(v9, (uint64_t (*)(uint64_t))v7);
          return v8;
        }
        sub_21F674A78((uint64_t)&v26);
      }
      v22 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
      swift_beginAccess();
      v23 = MEMORY[0x2207CC5BC](v22);
      v24 = *(_QWORD *)(v22 + 8);
      sub_21F674A3C(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_familyMemberSelection, (uint64_t)&v26);
      type metadata accessor for PASFlowStepPasscodeBiometricsRequest();
      v7 = type metadata accessor for PASFlowStepPasscodeBiometricsRequest;
      swift_allocObject();
      v8 = sub_21F6C3BC4(v23, v24, (uint64_t)&v26);
      swift_unknownObjectRelease();
      v9 = (unint64_t *)&unk_2554DC6A0;
      goto LABEL_19;
    }
    v15 = *v1;
    sub_21F674A30(*v1, 1);
    sub_21F674A30(v15, 1);
    if (qword_2554DA718 != -1)
      swift_once();
    v16 = sub_21F715F3C();
    __swift_project_value_buffer(v16, (uint64_t)static PASLogger.common);
    sub_21F674A30(v15, 1);
    sub_21F674A30(v15, 1);
    v8 = sub_21F715F24();
    v17 = sub_21F71635C();
    if (os_log_type_enabled((os_log_t)v8, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v26 = v19;
      *(_DWORD *)v18 = 136446210;
      v28 = (uint64_t)v15;
      sub_21F674A30(v15, 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
      v20 = sub_21F716128();
      v28 = sub_21F644208(v20, v21, &v26);
      sub_21F716428();
      swift_bridgeObjectRelease();
      sub_21F674A0C(v15, v2);
      sub_21F674A0C(v15, v2);
      _os_log_impl(&dword_21F63C000, (os_log_t)v8, v17, "PASFlowStepManateeRepair failed with error:\n%{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v19, -1, -1);
      MEMORY[0x2207CC514](v18, -1, -1);
    }
    else
    {
      sub_21F674A0C(v15, v2);
      sub_21F674A0C(v15, v2);
    }

    swift_willThrow();
    sub_21F674A0C(v15, v2);
  }
  return v8;
}

void PASFlowStepManateeRepair.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepManateeRepair.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F674520()
{
  uint64_t v0;

  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_familyMemberSelection);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_manateeRepairController, &qword_2554DC688);
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result + 8));
  swift_release();
  return swift_release();
}

uint64_t PASFlowStepManateeRepair.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_familyMemberSelection);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_manateeRepairController, &qword_2554DC688);
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result + 8));
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASFlowStepManateeRepair.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_familyMemberSelection);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_manateeRepairController, &qword_2554DC688);
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result + 8));
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6746A0()
{
  return PASFlowStepManateeRepair.nextStep()();
}

uint64_t sub_21F6746B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;

  v5 = v4;
  v10 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_manateeRepairController;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_QWORD *)(v10 + 32) = 0;
  v11 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_result;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = -1;
  v12 = OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v5 + v12) = v13;
  v14 = OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_QWORD *)(v15 + 48) = 0;
  *(_QWORD *)(v5 + v14) = v15;
  v16 = qword_2554DA718;
  swift_retain();
  if (v16 != -1)
    swift_once();
  v17 = sub_21F715F3C();
  __swift_project_value_buffer(v17, (uint64_t)static PASLogger.common);
  v18 = sub_21F715F24();
  v19 = sub_21F716350();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_21F63C000, v18, v19, "PASFlowStepManateeRepair init", v20, 2u);
    MEMORY[0x2207CC514](v20, -1, -1);
  }

  sub_21F674A3C(a3, v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_familyMemberSelection);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup24PASFlowStepManateeRepair_shouldSignInForSelf) = a4 & 1;
  swift_retain();
  v21 = sub_21F715F24();
  v22 = sub_21F716374();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v23 = 67240192;
    swift_release();
    sub_21F716428();
    swift_release();
    _os_log_impl(&dword_21F63C000, v21, v22, "PASFlowStepManateeRepair shouldSignInForSelf: %{BOOL,public}d", v23, 8u);
    MEMORY[0x2207CC514](v23, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v24 = sub_21F6BC954(a1, a2);
  sub_21F674A78(a3);
  return v24;
}

uint64_t sub_21F674958()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F67497C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F6739E4(v0);
}

uint64_t sub_21F6749C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_21F674A0C(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_21F674A24(a1, a2 & 1);
}

void sub_21F674A24(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

id sub_21F674A30(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_21F674A3C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PASFamilyMemberSelection(a2, a1);
  return a2;
}

uint64_t sub_21F674A78(uint64_t a1)
{
  destroy for PASFamilyMemberSelection(a1);
  return a1;
}

uint64_t sub_21F674AAC(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DC6B0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepManateeRepair);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepManateeRepair()
{
  uint64_t result;

  result = qword_2554DC6E0;
  if (!qword_2554DC6E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F674B1C()
{
  return type metadata accessor for PASFlowStepManateeRepair();
}

uint64_t sub_21F674B24()
{
  return swift_updateClassMetadata2();
}

unint64_t PASExtensionDevicePair.targetDeviceType.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType) | ((unint64_t)*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType + 4) << 32);
}

uint64_t PASExtensionDevicePair.sourceDeviceBiometryType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType);
}

id PASExtensionDevicePair.__allocating_init(targetDeviceType:sourceDeviceBiometryType:)(uint64_t a1, uint64_t a2, char a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  char *v9;
  objc_super v11;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType];
  *(_DWORD *)v8 = a1;
  v8[4] = BYTE4(a1) & 1;
  v9 = &v7[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType];
  *(_QWORD *)v9 = a2;
  v9[8] = a3 & 1;
  v11.receiver = v7;
  v11.super_class = v3;
  return objc_msgSendSuper2(&v11, sel_init);
}

id PASExtensionDevicePair.init(targetDeviceType:sourceDeviceBiometryType:)(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  char *v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType];
  *(_DWORD *)v8 = a1;
  v8[4] = BYTE4(a1) & 1;
  v9 = &v3[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType];
  *(_QWORD *)v9 = a2;
  v9[8] = a3 & 1;
  v11.receiver = v3;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t PASExtensionDevicePair.description.getter()
{
  sub_21F7164E8();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F7165CC();
  sub_21F716140();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC978);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DC980);
  sub_21F716128();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return 0;
}

uint64_t PASExtensionDevicePair.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  _BYTE v10[24];
  uint64_t v11;

  swift_getObjectType();
  sub_21F649B14(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_21F649B5C((uint64_t)v10);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType + 4) & 1) != 0)
  {
    if ((v9[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType + 4] & 1) == 0)
    {
LABEL_11:

      return 0;
    }
  }
  else if ((v9[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType + 4] & 1) != 0
         || *(_DWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType) != *(_DWORD *)&v9[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType])
  {
    goto LABEL_11;
  }
  v3 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType);
  v5 = *(_BYTE *)(v3 + 8);
  v6 = *(_QWORD *)&v9[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType];
  v7 = v9[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType + 8];

  if ((v5 & 1) == 0)
    return (v4 == v6) & ~(_DWORD)v7;
  return v7;
}

uint64_t PASExtensionDevicePair.hash.getter()
{
  uint64_t v0;

  sub_21F716974();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType + 4) == 1)
  {
    sub_21F716938();
  }
  else
  {
    sub_21F716938();
    sub_21F716944();
  }
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType + 8) == 1)
  {
    sub_21F716938();
  }
  else
  {
    sub_21F716938();
    sub_21F71692C();
  }
  return sub_21F71695C();
}

char *PASExtensionDevicePair.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static PASExtensionDevicePair.supportsSecureCoding;
}

uint64_t static PASExtensionDevicePair.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return static PASExtensionDevicePair.supportsSecureCoding;
}

uint64_t static PASExtensionDevicePair.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static PASExtensionDevicePair.supportsSecureCoding = a1;
  return result;
}

uint64_t (*static PASExtensionDevicePair.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall PASExtensionDevicePair.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType + 4) & 1) != 0)
    v3 = 0;
  else
    v3 = sub_21F7167E8();
  v4 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType + 8) & 1) != 0)
    v5 = 0;
  else
    v5 = sub_21F7167E8();
  v6 = (void *)sub_21F7160E0();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

}

id PASExtensionDevicePair.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21F675558(a1);

  return v4;
}

id PASExtensionDevicePair.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_21F675558(a1);

  return v2;
}

id PASExtensionDevicePair.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PASExtensionDevicePair.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PASExtensionDevicePair.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_21F675558(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  char *v4;
  void *v5;
  unsigned int v6;
  char *v7;
  void *v8;
  id v9;
  char *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = v1;
  v5 = (void *)sub_21F7160E0();
  v6 = objc_msgSend(a1, sel_decodeInt32ForKey_, v5);

  v7 = &v4[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_targetDeviceType];
  *(_DWORD *)v7 = v6;
  v7[4] = 0;
  v8 = (void *)sub_21F7160E0();
  v9 = objc_msgSend(a1, sel_decodeIntegerForKey_, v8);

  v10 = &v4[OBJC_IVAR____TtC21ProximityAppleIDSetup22PASExtensionDevicePair_sourceDeviceBiometryType];
  *(_QWORD *)v10 = v9;
  v10[8] = 0;

  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t type metadata accessor for PASExtensionDevicePair()
{
  return objc_opt_self();
}

uint64_t PASFlowStepSendAuthResults.sendAuthResults()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 56) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_21F6756E0;
  v2[11] = v1 + 16;
  v2[12] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6756E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F675744()
{
  uint64_t v0;
  BOOL v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 72) != 0;
  v2 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = v1;
  sub_21F674A0C(v3, v4);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136446210;
    v15 = v9;
    v10 = *(void **)v2;
    v11 = *(_BYTE *)(v2 + 8);
    *(_QWORD *)(v0 + 32) = *(_QWORD *)v2;
    *(_BYTE *)(v0 + 40) = v11;
    sub_21F6763A4(v10, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC9D0);
    v12 = sub_21F716128();
    *(_QWORD *)(v0 + 48) = sub_21F644208(v12, v13, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_21F63C000, v6, v7, "PASFlowStepSendAuthResults sendAuthResults result: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v9, -1, -1);
    MEMORY[0x2207CC514](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  sub_21F7162A8();
  *(_QWORD *)(v0 + 80) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F675998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = v1;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = v1 != 0;
  sub_21F674A0C(v3, v4);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_DWORD *)v8 = 136446210;
    v15 = v9;
    v10 = *(void **)v2;
    v11 = *(_BYTE *)(v2 + 8);
    *(_QWORD *)(v0 + 32) = *(_QWORD *)v2;
    *(_BYTE *)(v0 + 40) = v11;
    sub_21F6763A4(v10, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC9D0);
    v12 = sub_21F716128();
    *(_QWORD *)(v0 + 48) = sub_21F644208(v12, v13, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_21F63C000, v6, v7, "PASFlowStepSendAuthResults sendAuthResults result: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v9, -1, -1);
    MEMORY[0x2207CC514](v8, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  sub_21F7162A8();
  *(_QWORD *)(v0 + 80) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F675BE8()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F675C20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_21F675C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 96)
                 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults__sourceAppleIDExchanger);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 24);
    swift_retain();
    v4 = v2;
  }
  else
  {
    v5 = qword_2554DA6A0;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v4 = sub_21F63F1E4();
    v3 = v6;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + 104) = v4;
  v7 = *(_QWORD *)(v0 + 96);
  swift_unknownObjectRetain();
  swift_release();
  v8 = *(_QWORD *)(v7 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_proxiedAuthResults);
  sub_21F647710(v7 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_account, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
  type metadata accessor for PASFamilyMember();
  v9 = swift_dynamicCast();
  *(_BYTE *)(v0 + 136) = v9;
  v10 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 112) = v10;
  if (v9)
    v11 = v10;
  else
    v11 = 0;
  ObjectType = swift_getObjectType();
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v13;
  *v13 = v0;
  v13[1] = sub_21F675DE4;
  return v15(v8, v11, ObjectType, v3);
}

uint64_t sub_21F675DE4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (!v1)
    *(_BYTE *)(v4 + 137) = a1 & 1;
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F675E90()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 88) = *(_BYTE *)(v0 + 137);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F675EA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

NSObject *PASFlowStepSendAuthResults.nextStep()()
{
  NSObject *v0;
  id *v1;
  int v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19[3];
  uint64_t v20;

  v1 = (id *)((char *)&v0->isa + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result);
  v2 = *((unsigned __int8 *)&v0[1].isa + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result);
  if (v2 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v10 = 0xD000000000000028;
    *(_QWORD *)(v10 + 8) = 0x800000021F727660;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 1;
    swift_willThrow();
  }
  else if ((v2 & 1) != 0)
  {
    v11 = *v1;
    sub_21F674A30(*v1, 1);
    sub_21F674A30(v11, 1);
    if (qword_2554DA718 != -1)
      swift_once();
    v12 = sub_21F715F3C();
    __swift_project_value_buffer(v12, (uint64_t)static PASLogger.common);
    sub_21F674A30(v11, 1);
    sub_21F674A30(v11, 1);
    v0 = sub_21F715F24();
    v13 = sub_21F71635C();
    if (os_log_type_enabled(v0, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v19[0] = v15;
      *(_DWORD *)v14 = 136446210;
      v20 = (uint64_t)v11;
      sub_21F674A30(v11, 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
      v16 = sub_21F716128();
      v20 = sub_21F644208(v16, v17, v19);
      sub_21F716428();
      swift_bridgeObjectRelease();
      sub_21F674A0C(v11, v2);
      sub_21F674A0C(v11, v2);
      _os_log_impl(&dword_21F63C000, v0, v13, "PASFlowStepSendAuthResults failed with error:\n%{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v15, -1, -1);
      MEMORY[0x2207CC514](v14, -1, -1);
    }
    else
    {
      sub_21F674A0C(v11, v2);
      sub_21F674A0C(v11, v2);
    }

    swift_willThrow();
    sub_21F674A0C(v11, v2);
  }
  else
  {
    v3 = (char *)v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v4 = MEMORY[0x2207CC5BC](v3);
    v5 = *((_QWORD *)v3 + 1);
    type metadata accessor for PASFlowStepSignInResult();
    v6 = swift_allocObject();
    v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__messageSessionProvider;
    __swift_instantiateConcreteTypeFromMangledName(qword_2554DA840);
    v8 = swift_allocObject();
    *(_QWORD *)(v6 + v7) = v8;
    *(_QWORD *)(v8 + 16) = 0;
    v9 = (_QWORD *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep);
    *v9 = 0;
    v9[1] = 0;
    v0 = sub_21F6BC954(v4, v5);
    swift_unknownObjectRelease();
    sub_21F65EAB0(&qword_2554DB3A8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSignInResult);
  }
  return v0;
}

void PASFlowStepSendAuthResults.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepSendAuthResults.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21F676258()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_account);
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result + 8));
}

uint64_t PASFlowStepSendAuthResults.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_account);
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result + 8));
  return v0;
}

uint64_t PASFlowStepSendAuthResults.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_account);
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result + 8));
  return swift_deallocClassInstance();
}

NSObject *sub_21F676390()
{
  return PASFlowStepSendAuthResults.nextStep()();
}

id sub_21F6763A4(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_21F674A30(result, a2 & 1);
  return result;
}

uint64_t sub_21F6763BC(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DEF50, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSendAuthResults);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepSendAuthResults()
{
  uint64_t result;

  result = qword_2554DCA18;
  if (!qword_2554DCA18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F67642C()
{
  return type metadata accessor for PASFlowStepSendAuthResults();
}

uint64_t sub_21F676434()
{
  return swift_updateClassMetadata2();
}

uint64_t HandshakeCommand.Request.isKeepAlive.getter(char a1)
{
  return a1 & 1;
}

uint64_t HandshakeCommand.Request.isKeepAlive.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.isKeepAlive.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.minSupportedVersion.getter(unsigned int a1)
{
  return a1 >> 8;
}

uint64_t HandshakeCommand.Request.minSupportedVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.minSupportedVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.maxSupportedVersion.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HandshakeCommand.Request.maxSupportedVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.maxSupportedVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.init(isKeepAlive:minSupportedVersion:maxSupportedVersion:)(char a1, unsigned __int8 a2, unsigned __int8 a3)
{
  return (unsigned __int16)(a2 << 8) | (a3 << 16) | a1 & 1u;
}

uint64_t HandshakeCommand.Request.init(from:)(uint64_t a1)
{
  sub_21F676528(a1);
  return 2;
}

uint64_t sub_21F676528(uint64_t a1)
{
  sub_21F676590(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_OWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184));
  return a1;
}

uint64_t sub_21F676590(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;

  v24 = (a22 >> 60) & 3;
  switch((_DWORD)v24)
  {
    case 2:
      return sub_21F6769E4(result, a2, a3, a4, a5, a6);
    case 1:
      return sub_21F676870(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
               a20,
               a21,
               a22 & 0xCFFFFFFFFFFFFFFFLL);
    case 0:
      return sub_21F67667C(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
               a20,
               a21,
               a22,
               a23,
               a24);
  }
  return result;
}

uint64_t sub_21F67667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t result;

  if (a22 >> 62 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F6641CC(a7, a8, a9, a10, a11);
    swift_bridgeObjectRelease();
    sub_21F664218(a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return sub_21F676840(a23, a24);
  }
  else if (a22 >> 62 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F6641CC(a7, a8, a9, a10, a11);
    swift_bridgeObjectRelease();
    sub_21F664218(a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F676840(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F676870(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22)
{
  if (a22 >> 62 == 2)
    return sub_21F6769D8(result, a2, a3, a4, a5, a6, HIBYTE(a6) & 1);
  if (a22 >> 62 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21F6641CC(a7, a8, a9, a10, a11);
    swift_bridgeObjectRelease();
    sub_21F664218(a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21F6769D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  if ((a7 & 1) != 0)
    return sub_21F6769E4(a1, a2, a3, a4, a5, a6);
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_21F6769E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 1)
    return swift_release();
  if (!a6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t HandshakeCommand.Request.into()@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  __int16 v4;
  char v5;
  _BYTE v6[208];

  v4 = a1 & 0xFF01;
  v5 = BYTE2(a1);
  sub_21F676A88((uint64_t)&v4);
  sub_21F676AA4((uint64_t)&v4, (uint64_t)v6);
  sub_21F676AE0((uint64_t)v6);
  return sub_21F676AFC((uint64_t)v6, a2);
}

uint64_t sub_21F676A88(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 168) & 3;
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v1;
  return result;
}

uint64_t sub_21F676AA4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy208_8(a2, a1);
  return a2;
}

uint64_t sub_21F676AE0(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 168) & 0xC000000000000003;
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v1;
  return result;
}

uint64_t sub_21F676AFC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy208_8(a2, a1);
  return a2;
}

BOOL static HandshakeCommand.Request.__derived_struct_equals(_:_:)(int a1, int a2)
{
  _BOOL4 v2;

  v2 = BYTE1(a1) == BYTE1(a2) && BYTE2(a1) == BYTE2(a2);
  return ((a1 ^ a2) & 1) == 0 && v2;
}

uint64_t HandshakeCommand.Request.hash(into:)()
{
  sub_21F716938();
  sub_21F716938();
  return sub_21F716938();
}

uint64_t sub_21F676BB0(char a1)
{
  if (a1)
    return 0xD000000000000013;
  else
    return 0x6C417065654B7369;
}

uint64_t sub_21F676C0C()
{
  char *v0;

  return sub_21F676BB0(*v0);
}

uint64_t sub_21F676C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6778BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F676C38()
{
  sub_21F676DCC();
  return sub_21F7169E0();
}

uint64_t sub_21F676C60()
{
  sub_21F676DCC();
  return sub_21F7169EC();
}

uint64_t HandshakeCommand.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCC80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F676DCC();
  sub_21F7169C8();
  v11 = 0;
  sub_21F716740();
  if (!v1)
  {
    v10 = 1;
    sub_21F716764();
    v9 = 2;
    sub_21F716764();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_21F676DCC()
{
  unint64_t result;

  result = qword_2554DCC88;
  if (!qword_2554DCC88)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B3E0, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCC88);
  }
  return result;
}

uint64_t HandshakeCommand.Request.hashValue.getter()
{
  sub_21F716920();
  sub_21F716938();
  sub_21F716938();
  sub_21F716938();
  return sub_21F716968();
}

uint64_t HandshakeCommand.Request.init(from:)(_QWORD *a1)
{
  return sub_21F677A0C(a1) & 0xFFFF01;
}

uint64_t sub_21F676E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_21F676528(a1);
  *(_BYTE *)(a2 + 2) = 0;
  *(_WORD *)a2 = 2;
  return result;
}

uint64_t sub_21F676EC4@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  __int16 v3;
  char v5;
  __int16 v6;
  _BYTE v7[216];

  v3 = *(_WORD *)(v1 + 1);
  v5 = *v1;
  v6 = v3;
  sub_21F676A88((uint64_t)&v5);
  sub_21F676AA4((uint64_t)&v5, (uint64_t)v7);
  sub_21F676AE0((uint64_t)v7);
  return sub_21F676AFC((uint64_t)v7, a1);
}

uint64_t sub_21F676F20@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21F677A0C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result);
    a2[2] = BYTE2(result);
  }
  return result;
}

uint64_t sub_21F676F5C(_QWORD *a1)
{
  return HandshakeCommand.Request.encode(to:)(a1);
}

BOOL sub_21F676F84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_21F676FBC()
{
  sub_21F716920();
  sub_21F716938();
  sub_21F716938();
  sub_21F716938();
  return sub_21F716968();
}

uint64_t sub_21F677028()
{
  sub_21F716938();
  sub_21F716938();
  return sub_21F716938();
}

uint64_t sub_21F677070()
{
  sub_21F716920();
  sub_21F716938();
  sub_21F716938();
  sub_21F716938();
  return sub_21F716968();
}

uint64_t HandshakeCommand.Response.isKeepAlive.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HandshakeCommand.Response.isKeepAlive.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.isAccepted.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t HandshakeCommand.Response.isAccepted.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*HandshakeCommand.Response.isAccepted.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.selectedVersion.getter(unsigned int a1)
{
  return BYTE2(a1) | ((HIBYTE(a1) & 1) << 8);
}

uint64_t HandshakeCommand.Response.selectedVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  *(_BYTE *)(v1 + 3) = BYTE1(result) & 1;
  return result;
}

uint64_t (*HandshakeCommand.Response.selectedVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.init(isKeepAlive:isAccepted:rejectionReason:selectedVersion:)(char a1, char a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned __int8 v5;
  unsigned int v8;
  int v9;

  v5 = a5;
  v8 = a5 >> 8;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
    v9 = 256;
  else
    v9 = 0;
  return (v5 << 16) & 0xFEFFFFFE | ((v8 & 1) << 24) | v9 & 0xFFFFFFFE | a1 & 1;
}

uint64_t HandshakeCommand.Response.init(from:)(uint64_t a1)
{
  __int128 *v2;
  _BYTE v4[208];
  __int128 v5[11];
  _BYTE v6[184];

  sub_21F676AFC(a1, (uint64_t)v4);
  if (sub_21F677B88((uint64_t)v4) == 1
    && (v2 = (__int128 *)sub_21F677B94((uint64_t)v4),
        sub_21F677BA4(v2, (uint64_t)v5),
        sub_21F677BA4(v5, (uint64_t)v6),
        !sub_21F677BE0((uint64_t)v6)))
  {
    sub_21F677BEC((uint64_t)v6);
  }
  else
  {
    sub_21F676528(a1);
  }
  return 2;
}

uint64_t HandshakeCommand.Response.into()@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  __int128 v4[11];
  _BYTE v5[208];

  LOWORD(v4[0]) = a1 & 0x101;
  BYTE2(v4[0]) = BYTE2(a1);
  BYTE3(v4[0]) = HIBYTE(a1) & 1;
  sub_21F676A88((uint64_t)v4);
  sub_21F677BA4(v4, (uint64_t)v5);
  sub_21F677BFC((uint64_t)v5);
  return sub_21F676AFC((uint64_t)v5, a2);
}

uint64_t static HandshakeCommand.Response.__derived_struct_equals(_:_:)(int a1, unsigned int a2)
{
  uint64_t result;

  result = 0;
  if (((a1 ^ a2) & 1) == 0 && (((a1 ^ a2) >> 8) & 1) == 0)
  {
    if ((a1 & 0x1000000) != 0)
    {
      if ((a2 & 0x1000000) != 0)
        return 1;
    }
    else if ((a2 & 0x1000000) == 0 && BYTE2(a1) == BYTE2(a2))
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t HandshakeCommand.Response.hash(into:)(uint64_t a1, int a2)
{
  sub_21F716938();
  sub_21F716938();
  if ((a2 & 0x1000000) == 0)
    sub_21F716938();
  return sub_21F716938();
}

uint64_t sub_21F677330(char a1)
{
  return *(_QWORD *)&aIskeepalisacce[8 * a1];
}

uint64_t sub_21F677350()
{
  char *v0;

  return sub_21F677330(*v0);
}

uint64_t sub_21F677358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F677C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F67737C()
{
  sub_21F677C1C();
  return sub_21F7169E0();
}

uint64_t sub_21F6773A4()
{
  sub_21F677C1C();
  return sub_21F7169EC();
}

uint64_t HandshakeCommand.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCC90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F677C1C();
  sub_21F7169C8();
  v11 = 0;
  sub_21F716740();
  if (!v1)
  {
    v10 = 1;
    sub_21F716740();
    v9 = 2;
    sub_21F716728();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HandshakeCommand.Response.hashValue.getter(int a1)
{
  sub_21F716920();
  sub_21F716938();
  sub_21F716938();
  if ((a1 & 0x1000000) == 0)
    sub_21F716938();
  sub_21F716938();
  return sub_21F716968();
}

uint64_t HandshakeCommand.Response.init(from:)(_QWORD *a1)
{
  return sub_21F677DD4(a1) & 0x1FF0101;
}

uint64_t sub_21F6775C0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  __int128 *v4;
  uint64_t result;
  _BYTE v6[208];
  __int128 v7[11];
  _BYTE v8[184];

  sub_21F676AFC(a1, (uint64_t)v6);
  if (sub_21F677B88((uint64_t)v6) == 1
    && (v4 = (__int128 *)sub_21F677B94((uint64_t)v6),
        sub_21F677BA4(v4, (uint64_t)v7),
        sub_21F677BA4(v7, (uint64_t)v8),
        !sub_21F677BE0((uint64_t)v8)))
  {
    result = sub_21F677BEC((uint64_t)v8);
  }
  else
  {
    result = sub_21F676528(a1);
  }
  *a2 = 2;
  return result;
}

uint64_t sub_21F67764C@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  char v3;
  char v4;
  char v5;
  __int128 v7[11];
  _BYTE v8[216];

  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  LOBYTE(v7[0]) = *v1;
  BYTE1(v7[0]) = v3;
  BYTE2(v7[0]) = v4;
  BYTE3(v7[0]) = v5;
  sub_21F676A88((uint64_t)v7);
  sub_21F677BA4(v7, (uint64_t)v8);
  sub_21F677BFC((uint64_t)v8);
  return sub_21F676AFC((uint64_t)v8, a1);
}

uint64_t sub_21F6776B8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_21F677DD4(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
    a2[2] = BYTE2(result);
    a2[3] = BYTE3(result) & 1;
  }
  return result;
}

uint64_t sub_21F6776FC(_QWORD *a1)
{
  return HandshakeCommand.Response.encode(to:)(a1);
}

uint64_t sub_21F677740(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;
  char v4;

  result = 0;
  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0)
  {
    if ((a1[3] & 1) != 0)
    {
      if (a2[3])
        return 1;
    }
    else
    {
      if (a1[2] == a2[2])
        v4 = a2[3];
      else
        v4 = 1;
      if ((v4 & 1) == 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_21F67779C()
{
  unsigned __int8 *v0;
  int v1;

  if (v0[1])
    v1 = 256;
  else
    v1 = 0;
  return HandshakeCommand.Response.hashValue.getter(v1 | *v0 | (v0[2] << 16) | (v0[3] << 24));
}

uint64_t sub_21F6777D0()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 3);
  sub_21F716938();
  sub_21F716938();
  if ((v1 & 1) == 0)
    sub_21F716938();
  return sub_21F716938();
}

uint64_t sub_21F677830()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 3);
  sub_21F716920();
  sub_21F716938();
  sub_21F716938();
  if ((v1 & 1) == 0)
    sub_21F716938();
  sub_21F716938();
  return sub_21F716968();
}

uint64_t sub_21F6778BC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C417065654B7369 && a2 == 0xEB00000000657669;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000021F727730 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000021F727750)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F677A0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  _BYTE v11[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCE18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F676DCC();
  sub_21F7169B0();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v11[15] = 0;
  v7 = sub_21F7166B0();
  v11[14] = 1;
  v8 = sub_21F7166D4();
  v11[13] = 2;
  v9 = sub_21F7166D4();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return (unsigned __int16)(v8 << 8) | (v9 << 16) | v7 & 1u;
}

uint64_t sub_21F677B88(uint64_t a1)
{
  return (*(_QWORD *)(a1 + 168) >> 60) & 3;
}

uint64_t sub_21F677B94(uint64_t result)
{
  *(_QWORD *)(result + 168) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_21F677BA4(__int128 *a1, uint64_t a2)
{
  __swift_memcpy184_8(a2, a1);
  return a2;
}

uint64_t sub_21F677BE0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 168) >> 62;
}

uint64_t sub_21F677BEC(uint64_t result)
{
  *(_QWORD *)(result + 168) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_21F677BFC(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 168) & 0xC000000000000003 | 0x1000000000000000;
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v1;
  return result;
}

unint64_t sub_21F677C1C()
{
  unint64_t result;

  result = qword_2554DCC98;
  if (!qword_2554DCC98)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B390, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCC98);
  }
  return result;
}

uint64_t sub_21F677C60(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C417065654B7369 && a2 == 0xEB00000000657669;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470656363417369 && a2 == 0xEA00000000006465 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F677DD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  unsigned int v9;
  unsigned __int8 v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCE10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F677C1C();
  sub_21F7169B0();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v17 = 0;
  v7 = sub_21F7166B0();
  v16 = 1;
  v8 = sub_21F7166B0();
  v15 = 2;
  v9 = sub_21F716698();
  v11 = v9;
  v12 = v9 >> 8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  if ((v8 & 1) != 0)
    v13 = 256;
  else
    v13 = 0;
  return (v11 << 16) & 0xFEFFFFFE | ((v12 & 1) << 24) | v13 & 0xFFFFFFFE | v7 & 1;
}

unint64_t sub_21F677F6C()
{
  unint64_t result;

  result = qword_2554DCCA0;
  if (!qword_2554DCCA0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand, &type metadata for HandshakeCommand);
    atomic_store(result, (unint64_t *)&qword_2554DCCA0);
  }
  return result;
}

unint64_t sub_21F677FB0(uint64_t a1)
{
  unint64_t result;

  result = sub_21F677FD4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F677FD4()
{
  unint64_t result;

  result = qword_2554DCCD0;
  if (!qword_2554DCCD0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCCD0);
  }
  return result;
}

unint64_t sub_21F67801C()
{
  unint64_t result;

  result = qword_2554DCCD8;
  if (!qword_2554DCCD8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand, &type metadata for HandshakeCommand);
    atomic_store(result, (unint64_t *)&qword_2554DCCD8);
  }
  return result;
}

unint64_t sub_21F678060(uint64_t a1)
{
  unint64_t result;

  result = sub_21F678084();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F678084()
{
  unint64_t result;

  result = qword_2554DCD00;
  if (!qword_2554DCD00)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCD00);
  }
  return result;
}

uint64_t sub_21F6780C8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6780E4, (uint64_t (*)(void))sub_21F678128, (uint64_t (*)(void))sub_21F67816C);
}

unint64_t sub_21F6780E4()
{
  unint64_t result;

  result = qword_2554E10D0;
  if (!qword_2554E10D0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E10D0);
  }
  return result;
}

unint64_t sub_21F678128()
{
  unint64_t result;

  result = qword_2554E0C10;
  if (!qword_2554E0C10)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554E0C10);
  }
  return result;
}

unint64_t sub_21F67816C()
{
  unint64_t result;

  result = qword_2554DCD08;
  if (!qword_2554DCD08)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCD08);
  }
  return result;
}

unint64_t sub_21F6781B4()
{
  unint64_t result;

  result = qword_2554DCD10;
  if (!qword_2554DCD10)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCD10);
  }
  return result;
}

unint64_t sub_21F6781F8(uint64_t a1)
{
  unint64_t result;

  result = sub_21F67821C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F67821C()
{
  unint64_t result;

  result = qword_2554DCD40;
  if (!qword_2554DCD40)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCD40);
  }
  return result;
}

unint64_t sub_21F678260(uint64_t a1)
{
  unint64_t result;

  result = sub_21F678284();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F678284()
{
  unint64_t result;

  result = qword_2554DCD68;
  if (!qword_2554DCD68)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCD68);
  }
  return result;
}

uint64_t sub_21F6782C8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F6782E4, (uint64_t (*)(void))sub_21F678328, (uint64_t (*)(void))sub_21F67836C);
}

unint64_t sub_21F6782E4()
{
  unint64_t result;

  result = qword_2554DCD70;
  if (!qword_2554DCD70)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCD70);
  }
  return result;
}

unint64_t sub_21F678328()
{
  unint64_t result;

  result = qword_2554E0C80;
  if (!qword_2554E0C80)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0C80);
  }
  return result;
}

unint64_t sub_21F67836C()
{
  unint64_t result;

  result = qword_2554DCD78;
  if (!qword_2554DCD78)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCD78);
  }
  return result;
}

unint64_t sub_21F6783B4()
{
  unint64_t result;

  result = qword_2554DCD80;
  if (!qword_2554DCD80)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCD80);
  }
  return result;
}

unint64_t sub_21F6783FC()
{
  unint64_t result;

  result = qword_2554DCD88;
  if (!qword_2554DCD88)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCD88);
  }
  return result;
}

unint64_t sub_21F678444()
{
  unint64_t result;

  result = qword_2554DCD90;
  if (!qword_2554DCD90)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCD90);
  }
  return result;
}

unint64_t sub_21F678488(uint64_t a1)
{
  unint64_t result;

  result = sub_21F67801C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand()
{
  return &type metadata for HandshakeCommand;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HandshakeCommand.Request(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Request()
{
  return &type metadata for HandshakeCommand.Request;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HandshakeCommand.Response(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[4])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Response()
{
  return &type metadata for HandshakeCommand.Response;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Response.CodingKeys()
{
  return &type metadata for HandshakeCommand.Response.CodingKeys;
}

uint64_t _s21ProximityAppleIDSetup16HandshakeCommandO8ResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F678704 + 4 * byte_21F71AF75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F678738 + 4 * byte_21F71AF70[v4]))();
}

uint64_t sub_21F678738(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F678740(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F678748);
  return result;
}

uint64_t sub_21F678754(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F67875CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F678760(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F678768(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Request.CodingKeys()
{
  return &type metadata for HandshakeCommand.Request.CodingKeys;
}

unint64_t sub_21F678788()
{
  unint64_t result;

  result = qword_2554DCDE0;
  if (!qword_2554DCDE0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B2B0, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCDE0);
  }
  return result;
}

unint64_t sub_21F6787D0()
{
  unint64_t result;

  result = qword_2554DCDE8;
  if (!qword_2554DCDE8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B368, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCDE8);
  }
  return result;
}

unint64_t sub_21F678818()
{
  unint64_t result;

  result = qword_2554DCDF0;
  if (!qword_2554DCDF0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B2D8, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCDF0);
  }
  return result;
}

unint64_t sub_21F678860()
{
  unint64_t result;

  result = qword_2554DCDF8;
  if (!qword_2554DCDF8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B300, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCDF8);
  }
  return result;
}

unint64_t sub_21F6788A8()
{
  unint64_t result;

  result = qword_2554DCE00;
  if (!qword_2554DCE00)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B220, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCE00);
  }
  return result;
}

unint64_t sub_21F6788F0()
{
  unint64_t result;

  result = qword_2554DCE08;
  if (!qword_2554DCE08)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B248, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCE08);
  }
  return result;
}

uint64_t SignInCommand.Request.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F678944(v1, a1);
}

uint64_t sub_21F678944(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for IdMSAccount(a2, a1);
  return a2;
}

uint64_t SignInCommand.Request.account.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_21F678988(a1, v1);
}

uint64_t sub_21F678988(uint64_t a1, uint64_t a2)
{
  assignWithTake for IdMSAccount(a2, a1);
  return a2;
}

uint64_t (*SignInCommand.Request.account.modify())()
{
  return nullsub_1;
}

uint64_t SignInCommand.Request.authResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SignInCommand.Request.authResults.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 176) = a1;
  return result;
}

uint64_t (*SignInCommand.Request.authResults.modify())()
{
  return nullsub_1;
}

__n128 SignInCommand.Request.init(account:authResults:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;

  v3 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a3 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a3 + 144) = v3;
  *(_OWORD *)(a3 + 153) = *(_OWORD *)(a1 + 153);
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a3 + 80) = v4;
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a3 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a3 + 112) = v5;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(a3 + 48) = result;
  *(_QWORD *)(a3 + 176) = a2;
  return result;
}

uint64_t SignInCommand.Request.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[184];
  _BYTE v9[208];
  _BYTE v10[208];
  _BYTE v11[208];
  _BYTE __dst[176];
  uint64_t v13;

  sub_21F676AFC(a1, (uint64_t)v9);
  if (sub_21F677B88((uint64_t)v9)
    || (v4 = sub_21F677B94((uint64_t)v9),
        sub_21F676AA4(v4, (uint64_t)v10),
        sub_21F676AA4((uint64_t)v10, (uint64_t)v11),
        sub_21F677BE0((uint64_t)v11) != 1))
  {
    sub_21F676528(a1);
  }
  else
  {
    v5 = (_QWORD *)sub_21F677BEC((uint64_t)v11);
    v6 = v5[22];
    memmove(__dst, v5, 0xA9uLL);
    sub_21F669EA8((uint64_t)__dst);
    v13 = v6;
    sub_21F678B38((uint64_t)&v13);
  }
  sub_21F678B14((uint64_t)v8);
  return sub_21F658D18((uint64_t)v8, a2, &qword_2554DCE20);
}

double sub_21F678B14(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 176) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_21F678B38(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t SignInCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[11];
  uint64_t v10;
  _BYTE v11[216];

  v3 = *(_OWORD *)(v1 + 144);
  v9[8] = *(_OWORD *)(v1 + 128);
  v9[9] = v3;
  v9[10] = *(_OWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 176);
  v4 = *(_OWORD *)(v1 + 80);
  v9[4] = *(_OWORD *)(v1 + 64);
  v9[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v9[6] = *(_OWORD *)(v1 + 96);
  v9[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v9[0] = *(_OWORD *)v1;
  v9[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v9[2] = *(_OWORD *)(v1 + 32);
  v9[3] = v7;
  sub_21F678BE4((uint64_t)v9);
  sub_21F676AA4((uint64_t)v9, (uint64_t)v11);
  sub_21F676AE0((uint64_t)v11);
  return sub_21F676AFC((uint64_t)v11, a1);
}

uint64_t sub_21F678BE4(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 168) & 3 | 0x4000000000000000;
  *(_QWORD *)(result + 80) &= 3uLL;
  *(_QWORD *)(result + 168) = v1;
  return result;
}

uint64_t SignInCommand.Request.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD v19[9];
  _OWORD v20[3];

  v3 = *(_OWORD *)(v1 + 144);
  v19[8] = *(_OWORD *)(v1 + 128);
  v20[0] = v3;
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)(v1 + 153);
  v4 = *(_OWORD *)(v1 + 80);
  v19[4] = *(_OWORD *)(v1 + 64);
  v19[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v19[6] = *(_OWORD *)(v1 + 96);
  v19[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v19[0] = *(_OWORD *)v1;
  v19[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v19[2] = *(_OWORD *)(v1 + 32);
  v19[3] = v7;
  sub_21F669DBC((uint64_t)v19);
  IdMSAccount.hash(into:)(a1);
  sub_21F669EA8((uint64_t)v19);
  v18 = *(_QWORD *)(v1 + 176);
  v8 = v18 + 64;
  v9 = 1 << *(_BYTE *)(v18 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v18 + 64);
  sub_21F67A800((uint64_t)&v18);
  result = sub_21F67A800((uint64_t)&v18);
  v13 = 0;
  v14 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v11 &= v11 - 1;
      goto LABEL_5;
    }
    v15 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v14)
      goto LABEL_23;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v13;
    if (!v16)
    {
      v13 = v15 + 1;
      if (v15 + 1 >= v14)
        goto LABEL_23;
      v16 = *(_QWORD *)(v8 + 8 * v13);
      if (!v16)
      {
        v13 = v15 + 2;
        if (v15 + 2 >= v14)
          goto LABEL_23;
        v16 = *(_QWORD *)(v8 + 8 * v13);
        if (!v16)
        {
          v13 = v15 + 3;
          if (v15 + 3 >= v14)
            goto LABEL_23;
          v16 = *(_QWORD *)(v8 + 8 * v13);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v11 = (v16 - 1) & v16;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_21F716134();
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    sub_21F7163F8();
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease_n();
  }
  v17 = v15 + 4;
  if (v17 >= v14)
  {
LABEL_23:
    swift_release();
    return sub_21F678B38((uint64_t)&v18);
  }
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v13 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v13 >= v14)
      goto LABEL_23;
    v16 = *(_QWORD *)(v8 + 8 * v13);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21F678E44(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7573655268747561;
  else
    return 0x746E756F636361;
}

uint64_t sub_21F678E84()
{
  char *v0;

  return sub_21F678E44(*v0);
}

uint64_t sub_21F678E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F67ABB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F678EB0()
{
  sub_21F67A828();
  return sub_21F7169E0();
}

uint64_t sub_21F678ED8()
{
  sub_21F67A828();
  return sub_21F7169EC();
}

uint64_t SignInCommand.Request.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[3];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCE28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F67A828();
  sub_21F7169C8();
  v9 = v3[9];
  v25 = v3[8];
  v26[0] = v9;
  *(_OWORD *)((char *)v26 + 9) = *(__int128 *)((char *)v3 + 153);
  v10 = v3[5];
  v21 = v3[4];
  v22 = v10;
  v11 = v3[7];
  v23 = v3[6];
  v24 = v11;
  v12 = v3[1];
  v17 = *v3;
  v13 = v3[2];
  v20 = v3[3];
  v18 = v12;
  v19 = v13;
  v16 = 0;
  sub_21F666F98();
  sub_21F716758();
  if (!v2)
  {
    *(_QWORD *)&v17 = *((_QWORD *)v3 + 22);
    v16 = 1;
    sub_21F67A86C();
    sub_21F716758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SignInCommand.Request.hashValue.getter()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[9];
  _OWORD v19[2];

  sub_21F716920();
  v1 = *(_OWORD *)(v0 + 144);
  v18[8] = *(_OWORD *)(v0 + 128);
  v19[0] = v1;
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)(v0 + 153);
  v2 = *(_OWORD *)(v0 + 80);
  v18[4] = *(_OWORD *)(v0 + 64);
  v18[5] = v2;
  v3 = *(_OWORD *)(v0 + 112);
  v18[6] = *(_OWORD *)(v0 + 96);
  v18[7] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v18[0] = *(_OWORD *)v0;
  v18[1] = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v18[2] = *(_OWORD *)(v0 + 32);
  v18[3] = v5;
  sub_21F669DBC((uint64_t)v18);
  IdMSAccount.hash(into:)((uint64_t)&v16);
  sub_21F669EA8((uint64_t)v18);
  v17 = *(_QWORD *)(v0 + 176);
  v6 = v17 + 64;
  v7 = 1 << *(_BYTE *)(v17 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v17 + 64);
  sub_21F67A800((uint64_t)&v17);
  result = sub_21F67A800((uint64_t)&v17);
  v11 = 0;
  v12 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    v13 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v12)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v11;
    if (!v14)
    {
      v11 = v13 + 1;
      if (v13 + 1 >= v12)
        goto LABEL_23;
      v14 = *(_QWORD *)(v6 + 8 * v11);
      if (!v14)
      {
        v11 = v13 + 2;
        if (v13 + 2 >= v12)
          goto LABEL_23;
        v14 = *(_QWORD *)(v6 + 8 * v11);
        if (!v14)
        {
          v11 = v13 + 3;
          if (v13 + 3 >= v12)
            goto LABEL_23;
          v14 = *(_QWORD *)(v6 + 8 * v11);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v14 - 1) & v14;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_21F716134();
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    sub_21F7163F8();
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease_n();
  }
  v15 = v13 + 4;
  if (v15 >= v12)
  {
LABEL_23:
    swift_release();
    sub_21F678B38((uint64_t)&v17);
    return sub_21F716968();
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v11 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v11 >= v12)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v11);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

double SignInCommand.Request.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_21F67ACA8(a1, (uint64_t)v10);
  if (!v2)
  {
    v5 = v18;
    *(_OWORD *)(a2 + 128) = v17;
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 160) = v19;
    *(_QWORD *)(a2 + 176) = v20;
    v6 = v14;
    *(_OWORD *)(a2 + 64) = v13;
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 96) = v15;
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v10[1];
    *(_OWORD *)a2 = v10[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = *(double *)&v11;
    v9 = v12;
    *(_OWORD *)(a2 + 32) = v11;
    *(_OWORD *)(a2 + 48) = v9;
  }
  return result;
}

uint64_t sub_21F679350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[184];
  _BYTE v9[208];
  _BYTE v10[208];
  _BYTE v11[208];
  _BYTE __dst[176];
  uint64_t v13;

  sub_21F676AFC(a1, (uint64_t)v9);
  if (sub_21F677B88((uint64_t)v9)
    || (v4 = sub_21F677B94((uint64_t)v9),
        sub_21F676AA4(v4, (uint64_t)v10),
        sub_21F676AA4((uint64_t)v10, (uint64_t)v11),
        sub_21F677BE0((uint64_t)v11) != 1))
  {
    sub_21F676528(a1);
  }
  else
  {
    v5 = (_QWORD *)sub_21F677BEC((uint64_t)v11);
    v6 = v5[22];
    memmove(__dst, v5, 0xA9uLL);
    sub_21F669EA8((uint64_t)__dst);
    v13 = v6;
    sub_21F678B38((uint64_t)&v13);
  }
  sub_21F678B14((uint64_t)v8);
  return sub_21F658D18((uint64_t)v8, a2, &qword_2554DCE20);
}

uint64_t sub_21F679418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[11];
  uint64_t v10;
  _BYTE v11[216];

  v3 = *(_OWORD *)(v1 + 144);
  v9[8] = *(_OWORD *)(v1 + 128);
  v9[9] = v3;
  v9[10] = *(_OWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 176);
  v4 = *(_OWORD *)(v1 + 80);
  v9[4] = *(_OWORD *)(v1 + 64);
  v9[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v9[6] = *(_OWORD *)(v1 + 96);
  v9[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v9[0] = *(_OWORD *)v1;
  v9[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v9[2] = *(_OWORD *)(v1 + 32);
  v9[3] = v7;
  sub_21F678BE4((uint64_t)v9);
  sub_21F676AA4((uint64_t)v9, (uint64_t)v11);
  sub_21F676AE0((uint64_t)v11);
  return sub_21F676AFC((uint64_t)v11, a1);
}

double sub_21F67949C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_21F67ACA8(a1, (uint64_t)v10);
  if (!v2)
  {
    v5 = v18;
    *(_OWORD *)(a2 + 128) = v17;
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 160) = v19;
    *(_QWORD *)(a2 + 176) = v20;
    v6 = v14;
    *(_OWORD *)(a2 + 64) = v13;
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 96) = v15;
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v10[1];
    *(_OWORD *)a2 = v10[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = *(double *)&v11;
    v9 = v12;
    *(_OWORD *)(a2 + 32) = v11;
    *(_OWORD *)(a2 + 48) = v9;
  }
  return result;
}

uint64_t sub_21F679518(_QWORD *a1)
{
  return SignInCommand.Request.encode(to:)(a1);
}

uint64_t sub_21F67952C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v13[11];
  uint64_t v14;
  __int128 v15[11];
  uint64_t v16;

  v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  v13[10] = *(_OWORD *)(a1 + 160);
  v14 = *(_QWORD *)(a1 + 176);
  v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  v7 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  v15[10] = *(_OWORD *)(a2 + 160);
  v16 = *(_QWORD *)(a2 + 176);
  v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  v9 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  v11 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return _s21ProximityAppleIDSetup13SignInCommandV7RequestV23__derived_struct_equalsySbAE_AEtFZ_0(v13, v15) & 1;
}

uint64_t sub_21F6795CC()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v8[72];
  _OWORD v9[9];
  _OWORD v10[2];

  v1 = v0[9];
  v9[8] = v0[8];
  v10[0] = v1;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v0 + 153);
  v2 = v0[5];
  v9[4] = v0[4];
  v9[5] = v2;
  v3 = v0[7];
  v9[6] = v0[6];
  v9[7] = v3;
  v4 = v0[1];
  v9[0] = *v0;
  v9[1] = v4;
  v5 = v0[3];
  v9[2] = v0[2];
  v9[3] = v5;
  sub_21F716920();
  sub_21F669DBC((uint64_t)v9);
  IdMSAccount.hash(into:)((uint64_t)v8);
  sub_21F669EA8((uint64_t)v9);
  v6 = swift_bridgeObjectRetain();
  sub_21F670CA0(v6, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F6719D4);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F679688(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD v10[9];
  _OWORD v11[2];

  v3 = v1[9];
  v10[8] = v1[8];
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v1 + 153);
  v4 = v1[5];
  v10[4] = v1[4];
  v10[5] = v4;
  v5 = v1[7];
  v10[6] = v1[6];
  v10[7] = v5;
  v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  v7 = v1[3];
  v10[2] = v1[2];
  v10[3] = v7;
  sub_21F669DBC((uint64_t)v10);
  IdMSAccount.hash(into:)(a1);
  sub_21F669EA8((uint64_t)v10);
  v8 = swift_bridgeObjectRetain();
  sub_21F670CA0(v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F671A60);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F679734()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v8[72];
  _OWORD v9[9];
  _OWORD v10[2];

  v1 = v0[9];
  v9[8] = v0[8];
  v10[0] = v1;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)v0 + 153);
  v2 = v0[5];
  v9[4] = v0[4];
  v9[5] = v2;
  v3 = v0[7];
  v9[6] = v0[6];
  v9[7] = v3;
  v4 = v0[1];
  v9[0] = *v0;
  v9[1] = v4;
  v5 = v0[3];
  v9[2] = v0[2];
  v9[3] = v5;
  sub_21F716920();
  sub_21F669DBC((uint64_t)v9);
  IdMSAccount.hash(into:)((uint64_t)v8);
  sub_21F669EA8((uint64_t)v9);
  v6 = swift_bridgeObjectRetain();
  sub_21F670CA0(v6, (void (*)(uint64_t, uint64_t, uint64_t))sub_21F671A60);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t SignInCommand.Response.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F678944(v1, a1);
}

uint64_t SignInCommand.Response.account.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_21F678988(a1, v1);
}

uint64_t (*SignInCommand.Response.account.modify())()
{
  return nullsub_1;
}

uint64_t (*SignInCommand.Response.resultsByService.modify())()
{
  return nullsub_1;
}

__n128 SignInCommand.Response.init(account:resultsByService:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;

  v3 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a3 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a3 + 144) = v3;
  *(_OWORD *)(a3 + 153) = *(_OWORD *)(a1 + 153);
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a3 + 80) = v4;
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a3 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a3 + 112) = v5;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(a3 + 48) = result;
  *(_QWORD *)(a3 + 176) = a2;
  return result;
}

uint64_t SignInCommand.Response.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[184];
  _BYTE v9[208];
  __int128 v10[11];
  _BYTE v11[184];
  _BYTE __dst[176];
  uint64_t v13;

  sub_21F676AFC(a1, (uint64_t)v9);
  if (sub_21F677B88((uint64_t)v9) == 1
    && (v4 = (__int128 *)sub_21F677B94((uint64_t)v9),
        sub_21F677BA4(v4, (uint64_t)v10),
        sub_21F677BA4(v10, (uint64_t)v11),
        sub_21F677BE0((uint64_t)v11) == 1))
  {
    v5 = (_QWORD *)sub_21F677BEC((uint64_t)v11);
    v6 = v5[22];
    memmove(__dst, v5, 0xA9uLL);
    sub_21F669EA8((uint64_t)__dst);
    v13 = v6;
    sub_21F678B38((uint64_t)&v13);
  }
  else
  {
    sub_21F676528(a1);
  }
  sub_21F678B14((uint64_t)v8);
  return sub_21F658D18((uint64_t)v8, a2, &qword_2554DCE48);
}

uint64_t SignInCommand.Response.into()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v9[11];
  uint64_t v10;
  _BYTE v11[216];

  v3 = *(_OWORD *)(v1 + 144);
  v9[8] = *(_OWORD *)(v1 + 128);
  v9[9] = v3;
  v9[10] = *(_OWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 176);
  v4 = *(_OWORD *)(v1 + 80);
  v9[4] = *(_OWORD *)(v1 + 64);
  v9[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v9[6] = *(_OWORD *)(v1 + 96);
  v9[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v9[0] = *(_OWORD *)v1;
  v9[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v9[2] = *(_OWORD *)(v1 + 32);
  v9[3] = v7;
  sub_21F678BE4((uint64_t)v9);
  sub_21F677BA4(v9, (uint64_t)v11);
  sub_21F677BFC((uint64_t)v11);
  return sub_21F676AFC((uint64_t)v11, a1);
}

uint64_t SignInCommand.Response.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD v10[9];
  _OWORD v11[2];

  v3 = *(_OWORD *)(v1 + 144);
  v10[8] = *(_OWORD *)(v1 + 128);
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)(v1 + 153);
  v4 = *(_OWORD *)(v1 + 80);
  v10[4] = *(_OWORD *)(v1 + 64);
  v10[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v10[6] = *(_OWORD *)(v1 + 96);
  v10[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v7;
  sub_21F669DBC((uint64_t)v10);
  IdMSAccount.hash(into:)(a1);
  sub_21F669EA8((uint64_t)v10);
  v8 = *(_QWORD *)(v1 + 176);
  swift_bridgeObjectRetain();
  sub_21F67A230(a1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F679A48(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x746E756F636361;
}

uint64_t sub_21F679A84()
{
  char *v0;

  return sub_21F679A48(*v0);
}

uint64_t sub_21F679A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F67B0E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F679AB0()
{
  sub_21F67AFC0();
  return sub_21F7169E0();
}

uint64_t sub_21F679AD8()
{
  sub_21F67AFC0();
  return sub_21F7169EC();
}

uint64_t SignInCommand.Response.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[3];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCE50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F67AFC0();
  sub_21F7169C8();
  v9 = v3[9];
  v25 = v3[8];
  v26[0] = v9;
  *(_OWORD *)((char *)v26 + 9) = *(__int128 *)((char *)v3 + 153);
  v10 = v3[5];
  v21 = v3[4];
  v22 = v10;
  v11 = v3[7];
  v23 = v3[6];
  v24 = v11;
  v12 = v3[1];
  v17 = *v3;
  v13 = v3[2];
  v20 = v3[3];
  v18 = v12;
  v19 = v13;
  v16 = 0;
  sub_21F666F98();
  sub_21F716758();
  if (!v2)
  {
    *(_QWORD *)&v17 = *((_QWORD *)v3 + 22);
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCE60);
    sub_21F67B004();
    sub_21F716758();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SignInCommand.Response.hashValue.getter()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v8[72];
  _OWORD v9[9];
  _OWORD v10[2];

  sub_21F716920();
  v1 = *(_OWORD *)(v0 + 144);
  v9[8] = *(_OWORD *)(v0 + 128);
  v10[0] = v1;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)(v0 + 153);
  v2 = *(_OWORD *)(v0 + 80);
  v9[4] = *(_OWORD *)(v0 + 64);
  v9[5] = v2;
  v3 = *(_OWORD *)(v0 + 112);
  v9[6] = *(_OWORD *)(v0 + 96);
  v9[7] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v9[0] = *(_OWORD *)v0;
  v9[1] = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v9[2] = *(_OWORD *)(v0 + 32);
  v9[3] = v5;
  sub_21F669DBC((uint64_t)v9);
  IdMSAccount.hash(into:)((uint64_t)v8);
  sub_21F669EA8((uint64_t)v9);
  v6 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  sub_21F67A230((uint64_t)v8, v6);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

double SignInCommand.Response.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_21F67B1C8(a1, (uint64_t)v10);
  if (!v2)
  {
    v5 = v18;
    *(_OWORD *)(a2 + 128) = v17;
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 160) = v19;
    *(_QWORD *)(a2 + 176) = v20;
    v6 = v14;
    *(_OWORD *)(a2 + 64) = v13;
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 96) = v15;
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v10[1];
    *(_OWORD *)a2 = v10[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = *(double *)&v11;
    v9 = v12;
    *(_OWORD *)(a2 + 32) = v11;
    *(_OWORD *)(a2 + 48) = v9;
  }
  return result;
}

uint64_t sub_21F679DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v4;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[184];
  _BYTE v9[208];
  __int128 v10[11];
  _BYTE v11[184];
  _BYTE __dst[176];
  uint64_t v13;

  sub_21F676AFC(a1, (uint64_t)v9);
  if (sub_21F677B88((uint64_t)v9) == 1
    && (v4 = (__int128 *)sub_21F677B94((uint64_t)v9),
        sub_21F677BA4(v4, (uint64_t)v10),
        sub_21F677BA4(v10, (uint64_t)v11),
        sub_21F677BE0((uint64_t)v11) == 1))
  {
    v5 = (_QWORD *)sub_21F677BEC((uint64_t)v11);
    v6 = v5[22];
    memmove(__dst, v5, 0xA9uLL);
    sub_21F669EA8((uint64_t)__dst);
    v13 = v6;
    sub_21F678B38((uint64_t)&v13);
  }
  else
  {
    sub_21F676528(a1);
  }
  sub_21F678B14((uint64_t)v8);
  return sub_21F658D18((uint64_t)v8, a2, &qword_2554DCE48);
}

uint64_t sub_21F679E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v9[11];
  uint64_t v10;
  _BYTE v11[216];

  v3 = *(_OWORD *)(v1 + 144);
  v9[8] = *(_OWORD *)(v1 + 128);
  v9[9] = v3;
  v9[10] = *(_OWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 176);
  v4 = *(_OWORD *)(v1 + 80);
  v9[4] = *(_OWORD *)(v1 + 64);
  v9[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v9[6] = *(_OWORD *)(v1 + 96);
  v9[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v9[0] = *(_OWORD *)v1;
  v9[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v9[2] = *(_OWORD *)(v1 + 32);
  v9[3] = v7;
  sub_21F678BE4((uint64_t)v9);
  sub_21F677BA4(v9, (uint64_t)v11);
  sub_21F677BFC((uint64_t)v11);
  return sub_21F676AFC((uint64_t)v11, a1);
}

double sub_21F679F14@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_21F67B1C8(a1, (uint64_t)v10);
  if (!v2)
  {
    v5 = v18;
    *(_OWORD *)(a2 + 128) = v17;
    *(_OWORD *)(a2 + 144) = v5;
    *(_OWORD *)(a2 + 160) = v19;
    *(_QWORD *)(a2 + 176) = v20;
    v6 = v14;
    *(_OWORD *)(a2 + 64) = v13;
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 96) = v15;
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v10[1];
    *(_OWORD *)a2 = v10[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = *(double *)&v11;
    v9 = v12;
    *(_OWORD *)(a2 + 32) = v11;
    *(_OWORD *)(a2 + 48) = v9;
  }
  return result;
}

uint64_t sub_21F679F90(_QWORD *a1)
{
  return SignInCommand.Response.encode(to:)(a1);
}

uint64_t sub_21F679FA4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v13[11];
  uint64_t v14;
  __int128 v15[11];
  uint64_t v16;

  v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  v13[10] = *(_OWORD *)(a1 + 160);
  v14 = *(_QWORD *)(a1 + 176);
  v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  v7 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  v15[10] = *(_OWORD *)(a2 + 160);
  v16 = *(_QWORD *)(a2 + 176);
  v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  v9 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  v11 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return _s21ProximityAppleIDSetup13SignInCommandV8ResponseV23__derived_struct_equalsySbAE_AEtFZ_0(v13, v15) & 1;
}

uint64_t sub_21F67A044()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v8[72];
  _OWORD v9[9];
  _OWORD v10[2];

  v1 = *(_OWORD *)(v0 + 144);
  v9[8] = *(_OWORD *)(v0 + 128);
  v10[0] = v1;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)(v0 + 153);
  v2 = *(_OWORD *)(v0 + 80);
  v9[4] = *(_OWORD *)(v0 + 64);
  v9[5] = v2;
  v3 = *(_OWORD *)(v0 + 112);
  v9[6] = *(_OWORD *)(v0 + 96);
  v9[7] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v9[0] = *(_OWORD *)v0;
  v9[1] = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v9[2] = *(_OWORD *)(v0 + 32);
  v9[3] = v5;
  v6 = *(_QWORD *)(v0 + 176);
  sub_21F716920();
  sub_21F669DBC((uint64_t)v9);
  IdMSAccount.hash(into:)((uint64_t)v8);
  sub_21F669EA8((uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_21F67A230((uint64_t)v8, v6);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F67A0F0(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _OWORD v10[9];
  _OWORD v11[2];

  v3 = *(_OWORD *)(v1 + 144);
  v10[8] = *(_OWORD *)(v1 + 128);
  v11[0] = v3;
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)(v1 + 153);
  v4 = *(_OWORD *)(v1 + 80);
  v10[4] = *(_OWORD *)(v1 + 64);
  v10[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v10[6] = *(_OWORD *)(v1 + 96);
  v10[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v10[0] = *(_OWORD *)v1;
  v10[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v10[2] = *(_OWORD *)(v1 + 32);
  v10[3] = v7;
  v8 = *(_QWORD *)(v1 + 176);
  sub_21F669DBC((uint64_t)v10);
  IdMSAccount.hash(into:)(a1);
  sub_21F669EA8((uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_21F67A230(a1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F67A188()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v8[72];
  _OWORD v9[9];
  _OWORD v10[2];

  v1 = *(_OWORD *)(v0 + 144);
  v9[8] = *(_OWORD *)(v0 + 128);
  v10[0] = v1;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)(v0 + 153);
  v2 = *(_OWORD *)(v0 + 80);
  v9[4] = *(_OWORD *)(v0 + 64);
  v9[5] = v2;
  v3 = *(_OWORD *)(v0 + 112);
  v9[6] = *(_OWORD *)(v0 + 96);
  v9[7] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v9[0] = *(_OWORD *)v0;
  v9[1] = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v9[2] = *(_OWORD *)(v0 + 32);
  v9[3] = v5;
  v6 = *(_QWORD *)(v0 + 176);
  sub_21F716920();
  sub_21F669DBC((uint64_t)v9);
  IdMSAccount.hash(into:)((uint64_t)v8);
  sub_21F669EA8((uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_21F67A230((uint64_t)v8, v6);
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F67A230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v26;
  int64_t v27;

  v23 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v24 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v26 = (v4 - 1) & v4;
      v27 = v7;
      v8 = __clz(__rbit64(v4)) | (v7 << 6);
      goto LABEL_5;
    }
    v19 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v19 >= v24)
      goto LABEL_19;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    v21 = v7 + 1;
    if (!v20)
    {
      v21 = v7 + 2;
      if (v7 + 2 >= v24)
        goto LABEL_19;
      v20 = *(_QWORD *)(v23 + 8 * v21);
      if (!v20)
        break;
    }
LABEL_18:
    v26 = (v20 - 1) & v20;
    v27 = v21;
    v8 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_5:
    v9 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v8);
    v10 = *(_QWORD *)(a2 + 56) + 48 * v8;
    v11 = *(_QWORD *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    v14 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v10 + 24);
    v15 = *(_QWORD *)(v10 + 32);
    v16 = *(_BYTE *)(v10 + 41);
    v17 = *(_BYTE *)(v10 + 40);
    sub_21F716104();
    v18 = v9;
    sub_21F67C38C(v11, v12, v14, v13, v15, v17, v16);
    sub_21F716134();

    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCE80);
    sub_21F67C3D8();
    sub_21F71698C();
    sub_21F67C41C(v11, v12, v14, v13, v15, v17, v16);
    result = sub_21F716968();
    v7 = v27;
    v6 ^= result;
    v4 = v26;
  }
  v22 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_19:
    swift_release();
    return sub_21F71692C();
  }
  v20 = *(_QWORD *)(v23 + 8 * v22);
  if (v20)
  {
    v21 = v7 + 3;
    goto LABEL_18;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v24)
      goto LABEL_19;
    v20 = *(_QWORD *)(v23 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV7RequestV23__derived_struct_equalsySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int8x16_t v15;
  unint64_t v16;
  unint64_t v17;
  int8x16_t v18;
  char v19;
  void *v20;
  void *v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26[2];
  __int128 v27;
  _OWORD v28[3];
  _OWORD v29[2];
  __int128 v30;
  __int128 v31[2];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35[2];
  __int128 v36;
  _OWORD v37[3];
  _OWORD v38[2];
  _OWORD v39[5];
  __int128 v40[2];
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  int8x16_t v46;
  int8x16_t v47;
  char v48;

  v2 = a1[9];
  v37[2] = a1[8];
  v38[0] = v2;
  *(_OWORD *)((char *)v38 + 9) = *(__int128 *)((char *)a1 + 153);
  v3 = a1[5];
  v35[1] = a1[4];
  v36 = v3;
  v4 = a1[7];
  v37[0] = a1[6];
  v37[1] = v4;
  v5 = a1[1];
  v32 = *a1;
  v33 = v5;
  v6 = a1[3];
  v34 = a1[2];
  v35[0] = v6;
  v7 = a2[9];
  v28[2] = a2[8];
  v29[0] = v7;
  *(_OWORD *)((char *)v29 + 9) = *(__int128 *)((char *)a2 + 153);
  v8 = a2[5];
  v26[1] = a2[4];
  v27 = v8;
  v9 = a2[7];
  v28[0] = a2[6];
  v28[1] = v9;
  v23 = *a2;
  v24 = a2[1];
  v25 = a2[2];
  v26[0] = a2[3];
  if (v32 == v23 || (v10 = 0, (sub_21F716800() & 1) != 0))
  {
    if (*((_QWORD *)&v33 + 1))
    {
      if (!*((_QWORD *)&v24 + 1))
        goto LABEL_31;
      if (v33 != v24)
      {
        v10 = 0;
        if ((sub_21F716800() & 1) == 0)
          return v10 & 1;
      }
    }
    else if (*((_QWORD *)&v24 + 1))
    {
      goto LABEL_31;
    }
    if (*((_QWORD *)&v34 + 1))
    {
      if (!*((_QWORD *)&v25 + 1))
        goto LABEL_31;
      if (v34 != v25)
      {
        v10 = 0;
        if ((sub_21F716800() & 1) == 0)
          return v10 & 1;
      }
    }
    else if (*((_QWORD *)&v25 + 1))
    {
      goto LABEL_31;
    }
    sub_21F65EF28(v35, (uint64_t)v40);
    sub_21F65EF28(v26, (uint64_t)v31);
    sub_21F65EF28(v40, (uint64_t)&v41);
    if (v45)
    {
      if (v45 != 1)
      {
        sub_21F65EF28(v31, (uint64_t)&v46);
        v10 = 0;
        if (v48 != 2)
          return v10 & 1;
        v18 = vorrq_s8(v46, v47);
        if (vorr_s8(*(int8x8_t *)v18.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL)))
          return v10 & 1;
        goto LABEL_28;
      }
      v11 = v41;
      v12 = v42;
      v13 = v43;
      v14 = v44;
      sub_21F65EF28(v31, (uint64_t)&v46);
      if (v48 != 1)
        goto LABEL_31;
      v15 = v47;
      if (__PAIR128__(v12, v11) != *(_OWORD *)&v46)
      {
        v10 = 0;
        if ((sub_21F716800() & 1) == 0)
          return v10 & 1;
      }
      if (__PAIR128__(v14, v13) == *(_OWORD *)&v15)
        goto LABEL_28;
    }
    else
    {
      v16 = v41;
      v17 = v42;
      sub_21F65EF28(v31, (uint64_t)&v46);
      if (v48)
        goto LABEL_31;
      if (__PAIR128__(v17, v16) == *(_OWORD *)&v46)
        goto LABEL_28;
    }
    v10 = 0;
    if ((sub_21F716800() & 1) == 0)
      return v10 & 1;
LABEL_28:
    if ((sub_21F6C4BDC(*((uint64_t *)&v36 + 1), *((uint64_t *)&v27 + 1)) & 1) != 0)
    {
      sub_21F65EF00(v37, v39);
      sub_21F65EF00(v28, &v30);
      _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v39);
      if ((v19 & 1) != 0)
      {
        sub_21F67C664();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
        v20 = (void *)sub_21F71602C();
        v21 = (void *)sub_21F71602C();
        v10 = sub_21F7163EC();

        return v10 & 1;
      }
    }
LABEL_31:
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_21F67A800(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_21F67A828()
{
  unint64_t result;

  result = qword_2554DCE30;
  if (!qword_2554DCE30)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B8D0, &type metadata for SignInCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCE30);
  }
  return result;
}

unint64_t sub_21F67A86C()
{
  unint64_t result;

  result = qword_2554DCE40;
  if (!qword_2554DCE40)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASCodableAuthResults, &type metadata for PASCodableAuthResults);
    atomic_store(result, (unint64_t *)&qword_2554DCE40);
  }
  return result;
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV8ResponseV23__derived_struct_equalsySbAE_AEtFZ_0(__int128 *a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;
  char v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int8x16_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  int8x16_t v25;
  char v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31[2];
  __int128 v32;
  _OWORD v33[3];
  _OWORD v34[2];
  __int128 v35;
  __int128 v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40[2];
  __int128 v41;
  _OWORD v42[3];
  _OWORD v43[2];
  _OWORD v44[5];
  __int128 v45[2];
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  int8x16_t v51;
  int8x16_t v52;
  char v53;

  v4 = a1[9];
  v42[2] = a1[8];
  v43[0] = v4;
  *(_OWORD *)((char *)v43 + 9) = *(__int128 *)((char *)a1 + 153);
  v5 = a1[5];
  v40[1] = a1[4];
  v41 = v5;
  v6 = a1[7];
  v42[0] = a1[6];
  v42[1] = v6;
  v7 = a1[1];
  v37 = *a1;
  v38 = v7;
  v8 = a1[3];
  v39 = a1[2];
  v40[0] = v8;
  v9 = a2[9];
  v33[2] = a2[8];
  v34[0] = v9;
  *(_OWORD *)((char *)v34 + 9) = *(__int128 *)((char *)a2 + 153);
  v10 = a2[5];
  v31[1] = a2[4];
  v32 = v10;
  v11 = a2[7];
  v33[0] = a2[6];
  v33[1] = v11;
  v28 = *a2;
  v29 = a2[1];
  v30 = a2[2];
  v31[0] = a2[3];
  if (v37 == v28 || (v12 = sub_21F716800(), v13 = 0, (v12 & 1) != 0))
  {
    if (*((_QWORD *)&v38 + 1))
    {
      if (!*((_QWORD *)&v29 + 1))
        goto LABEL_31;
      if (v38 != v29)
      {
        v14 = sub_21F716800();
        v13 = 0;
        if ((v14 & 1) == 0)
          return v13 & 1;
      }
    }
    else if (*((_QWORD *)&v29 + 1))
    {
      goto LABEL_31;
    }
    if (*((_QWORD *)&v39 + 1))
    {
      if (!*((_QWORD *)&v30 + 1))
        goto LABEL_31;
      if (v39 != v30)
      {
        v15 = sub_21F716800();
        v13 = 0;
        if ((v15 & 1) == 0)
          return v13 & 1;
      }
    }
    else if (*((_QWORD *)&v30 + 1))
    {
      goto LABEL_31;
    }
    sub_21F65EF28(v40, (uint64_t)v45);
    sub_21F65EF28(v31, (uint64_t)v36);
    sub_21F65EF28(v45, (uint64_t)&v46);
    if (v50)
    {
      if (v50 != 1)
      {
        sub_21F65EF28(v36, (uint64_t)&v51);
        v13 = 0;
        if (v53 != 2)
          return v13 & 1;
        v25 = vorrq_s8(v51, v52);
        if (vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL)))
          return v13 & 1;
        goto LABEL_28;
      }
      v16 = v46;
      v17 = v47;
      v18 = v48;
      v19 = v49;
      sub_21F65EF28(v36, (uint64_t)&v51);
      if (v53 != 1)
        goto LABEL_31;
      v20 = v52;
      if (__PAIR128__(v17, v16) != *(_OWORD *)&v51)
      {
        v21 = sub_21F716800();
        v13 = 0;
        if ((v21 & 1) == 0)
          return v13 & 1;
      }
      if (__PAIR128__(v19, v18) == *(_OWORD *)&v20)
        goto LABEL_28;
    }
    else
    {
      v22 = v46;
      v23 = v47;
      sub_21F65EF28(v36, (uint64_t)&v51);
      if (v53)
        goto LABEL_31;
      if (__PAIR128__(v23, v22) == *(_OWORD *)&v51)
        goto LABEL_28;
    }
    v24 = sub_21F716800();
    v13 = 0;
    if ((v24 & 1) == 0)
      return v13 & 1;
LABEL_28:
    if ((sub_21F6C4BDC(*((uint64_t *)&v41 + 1), *((uint64_t *)&v32 + 1)) & 1) != 0)
    {
      sub_21F65EF00(v42, v44);
      sub_21F65EF00(v33, &v35);
      _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v44);
      if ((v26 & 1) != 0)
      {
        v13 = sub_21F6C4EEC(*((_QWORD *)a1 + 22), *((_QWORD *)a2 + 22));
        return v13 & 1;
      }
    }
LABEL_31:
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_21F67ABB0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7573655268747561 && a2 == 0xEB0000000073746CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F67ACA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;
  _OWORD v28[11];
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[25];
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[3];
  uint64_t v63;

  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD050);
  v5 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F67A828();
  sub_21F7169B0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v8 = v5;
  v42 = 0;
  sub_21F666F54();
  v9 = v63;
  sub_21F7166C8();
  v40 = v51;
  *(_OWORD *)v41 = v52[0];
  *(_OWORD *)&v41[9] = *(_OWORD *)((char *)v52 + 9);
  v36 = v47;
  v37 = v48;
  v38 = v49;
  v39 = v50;
  v32 = v43;
  v33 = v44;
  v34 = v45;
  v35 = v46;
  v61 = v51;
  v62[0] = v52[0];
  *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v52 + 9);
  v57 = v47;
  v58 = v48;
  v59 = v49;
  v60 = v50;
  v53 = v43;
  v54 = v44;
  v55 = v45;
  v56 = v46;
  v30 = 1;
  sub_21F669DBC((uint64_t)&v32);
  sub_21F67C428();
  sub_21F7166C8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  v10 = v31;
  v25 = v40;
  v26[0] = *(_OWORD *)v41;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)&v41[9];
  v21 = v36;
  v22 = v37;
  v23 = v38;
  v24 = v39;
  v17 = v32;
  v18 = v33;
  v19 = v34;
  v20 = v35;
  v27 = v31;
  sub_21F67C46C((uint64_t)&v17);
  sub_21F669EA8((uint64_t)&v32);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v28[8] = v61;
  v28[9] = v62[0];
  v28[10] = v62[1];
  v28[4] = v57;
  v28[5] = v58;
  v28[6] = v59;
  v28[7] = v60;
  v28[0] = v53;
  v28[1] = v54;
  v28[2] = v55;
  v28[3] = v56;
  v29 = v10;
  result = sub_21F67C568((uint64_t)v28);
  v12 = v26[0];
  *(_OWORD *)(a2 + 128) = v25;
  *(_OWORD *)(a2 + 144) = v12;
  *(_OWORD *)(a2 + 160) = v26[1];
  *(_QWORD *)(a2 + 176) = v27;
  v13 = v22;
  *(_OWORD *)(a2 + 64) = v21;
  *(_OWORD *)(a2 + 80) = v13;
  v14 = v24;
  *(_OWORD *)(a2 + 96) = v23;
  *(_OWORD *)(a2 + 112) = v14;
  v15 = v18;
  *(_OWORD *)a2 = v17;
  *(_OWORD *)(a2 + 16) = v15;
  v16 = v20;
  *(_OWORD *)(a2 + 32) = v19;
  *(_OWORD *)(a2 + 48) = v16;
  return result;
}

unint64_t sub_21F67AFC0()
{
  unint64_t result;

  result = qword_2554DCE58;
  if (!qword_2554DCE58)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B880, &type metadata for SignInCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCE58);
  }
  return result;
}

unint64_t sub_21F67B004()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2554DCE68;
  if (!qword_2554DCE68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DCE60);
    v2[0] = sub_21F669D7C(&qword_2554DCE70, (uint64_t)&protocol conformance descriptor for AIDAServiceType);
    v2[1] = sub_21F67C2D4(&qword_2554DCE78, (uint64_t (*)(void))sub_21F67B0A0, MEMORY[0x24BEE1330], (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2554DCE68);
  }
  return result;
}

unint64_t sub_21F67B0A0()
{
  unint64_t result;

  result = qword_2554DCE88;
  if (!qword_2554DCE88)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554DCE88);
  }
  return result;
}

uint64_t sub_21F67B0E4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000021F727770)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_21F67B1C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;
  _OWORD v28[11];
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[25];
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD v52[2];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[3];
  uint64_t v63;

  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD018);
  v5 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F67AFC0();
  sub_21F7169B0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v8 = v5;
  v42 = 0;
  sub_21F666F54();
  v9 = v63;
  sub_21F7166C8();
  v40 = v51;
  *(_OWORD *)v41 = v52[0];
  *(_OWORD *)&v41[9] = *(_OWORD *)((char *)v52 + 9);
  v36 = v47;
  v37 = v48;
  v38 = v49;
  v39 = v50;
  v32 = v43;
  v33 = v44;
  v34 = v45;
  v35 = v46;
  v61 = v51;
  v62[0] = v52[0];
  *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v52 + 9);
  v57 = v47;
  v58 = v48;
  v59 = v49;
  v60 = v50;
  v53 = v43;
  v54 = v44;
  v55 = v45;
  v56 = v46;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DCE60);
  v30 = 1;
  sub_21F669DBC((uint64_t)&v32);
  sub_21F67C238();
  sub_21F7166C8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  v10 = v31;
  v25 = v40;
  v26[0] = *(_OWORD *)v41;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)&v41[9];
  v21 = v36;
  v22 = v37;
  v23 = v38;
  v24 = v39;
  v17 = v32;
  v18 = v33;
  v19 = v34;
  v20 = v35;
  v27 = v31;
  sub_21F67C46C((uint64_t)&v17);
  sub_21F669EA8((uint64_t)&v32);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  v28[8] = v61;
  v28[9] = v62[0];
  v28[10] = v62[1];
  v28[4] = v57;
  v28[5] = v58;
  v28[6] = v59;
  v28[7] = v60;
  v28[0] = v53;
  v28[1] = v54;
  v28[2] = v55;
  v28[3] = v56;
  v29 = v10;
  result = sub_21F67C568((uint64_t)v28);
  v12 = v26[0];
  *(_OWORD *)(a2 + 128) = v25;
  *(_OWORD *)(a2 + 144) = v12;
  *(_OWORD *)(a2 + 160) = v26[1];
  *(_QWORD *)(a2 + 176) = v27;
  v13 = v22;
  *(_OWORD *)(a2 + 64) = v21;
  *(_OWORD *)(a2 + 80) = v13;
  v14 = v24;
  *(_OWORD *)(a2 + 96) = v23;
  *(_OWORD *)(a2 + 112) = v14;
  v15 = v18;
  *(_OWORD *)a2 = v17;
  *(_OWORD *)(a2 + 16) = v15;
  v16 = v20;
  *(_OWORD *)(a2 + 32) = v19;
  *(_OWORD *)(a2 + 48) = v16;
  return result;
}

unint64_t sub_21F67B4F0()
{
  unint64_t result;

  result = qword_2554DCE90;
  if (!qword_2554DCE90)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand, &type metadata for SignInCommand);
    atomic_store(result, (unint64_t *)&qword_2554DCE90);
  }
  return result;
}

unint64_t sub_21F67B534(uint64_t a1)
{
  unint64_t result;

  result = sub_21F67B558();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F67B558()
{
  unint64_t result;

  result = qword_2554DCEC0;
  if (!qword_2554DCEC0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Request, &type metadata for SignInCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCEC0);
  }
  return result;
}

unint64_t sub_21F67B5A0()
{
  unint64_t result;

  result = qword_2554DCEC8;
  if (!qword_2554DCEC8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand, &type metadata for SignInCommand);
    atomic_store(result, (unint64_t *)&qword_2554DCEC8);
  }
  return result;
}

unint64_t sub_21F67B5E4(uint64_t a1)
{
  unint64_t result;

  result = sub_21F67B608();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F67B608()
{
  unint64_t result;

  result = qword_2554DCEF0;
  if (!qword_2554DCEF0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Request, &type metadata for SignInCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCEF0);
  }
  return result;
}

uint64_t sub_21F67B64C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F67B668, (uint64_t (*)(void))sub_21F67B6AC, (uint64_t (*)(void))sub_21F67B6F0);
}

unint64_t sub_21F67B668()
{
  unint64_t result;

  result = qword_2554DCEF8;
  if (!qword_2554DCEF8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Request, &type metadata for SignInCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCEF8);
  }
  return result;
}

unint64_t sub_21F67B6AC()
{
  unint64_t result;

  result = qword_2554DCF00;
  if (!qword_2554DCF00)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Request, &type metadata for SignInCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCF00);
  }
  return result;
}

unint64_t sub_21F67B6F0()
{
  unint64_t result;

  result = qword_2554DCF08;
  if (!qword_2554DCF08)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Request, &type metadata for SignInCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCF08);
  }
  return result;
}

unint64_t sub_21F67B738()
{
  unint64_t result;

  result = qword_2554DCF10;
  if (!qword_2554DCF10)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Request, &type metadata for SignInCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCF10);
  }
  return result;
}

unint64_t sub_21F67B77C(uint64_t a1)
{
  unint64_t result;

  result = sub_21F67B7A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F67B7A0()
{
  unint64_t result;

  result = qword_2554DCF40;
  if (!qword_2554DCF40)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Response, &type metadata for SignInCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCF40);
  }
  return result;
}

unint64_t sub_21F67B7E4(uint64_t a1)
{
  unint64_t result;

  result = sub_21F67B808();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21F67B808()
{
  unint64_t result;

  result = qword_2554DCF68;
  if (!qword_2554DCF68)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Response, &type metadata for SignInCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCF68);
  }
  return result;
}

uint64_t sub_21F67B84C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_21F667564(a1, a2, a3, (uint64_t (*)(void))sub_21F67B868, (uint64_t (*)(void))sub_21F67B8AC, (uint64_t (*)(void))sub_21F67B8F0);
}

unint64_t sub_21F67B868()
{
  unint64_t result;

  result = qword_2554DCF70;
  if (!qword_2554DCF70)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Response, &type metadata for SignInCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCF70);
  }
  return result;
}

unint64_t sub_21F67B8AC()
{
  unint64_t result;

  result = qword_2554E0C70;
  if (!qword_2554E0C70)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Response, &type metadata for SignInCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554E0C70);
  }
  return result;
}

unint64_t sub_21F67B8F0()
{
  unint64_t result;

  result = qword_2554DCF80;
  if (!qword_2554DCF80)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Response, &type metadata for SignInCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCF80);
  }
  return result;
}

unint64_t sub_21F67B938()
{
  unint64_t result;

  result = qword_2554DCF88;
  if (!qword_2554DCF88)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Response, &type metadata for SignInCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCF88);
  }
  return result;
}

unint64_t sub_21F67B980()
{
  unint64_t result;

  result = qword_2554DCF90;
  if (!qword_2554DCF90)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Request, &type metadata for SignInCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2554DCF90);
  }
  return result;
}

unint64_t sub_21F67B9C8()
{
  unint64_t result;

  result = qword_2554DCF98;
  if (!qword_2554DCF98)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for SignInCommand.Response, &type metadata for SignInCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2554DCF98);
  }
  return result;
}

unint64_t sub_21F67BA0C(uint64_t a1)
{
  unint64_t result;

  result = sub_21F67B5A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for SignInCommand()
{
  return &type metadata for SignInCommand;
}

__n128 __swift_memcpy184_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

ValueMetadata *type metadata accessor for SignInCommand.Request()
{
  return &type metadata for SignInCommand.Request;
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV7RequestVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F6641CC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  swift_bridgeObjectRelease();
  sub_21F664218(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_BYTE *)(a1 + 168));
  return swift_bridgeObjectRelease();
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV7RequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F667678(v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v11;
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  v15 = *(_QWORD *)(a2 + 120);
  v16 = *(_QWORD *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 136);
  v18 = *(_QWORD *)(a2 + 144);
  v19 = *(_QWORD *)(a2 + 160);
  v21 = *(_QWORD *)(a2 + 152);
  v22 = v12;
  LOBYTE(v5) = *(_BYTE *)(a2 + 168);
  swift_bridgeObjectRetain();
  sub_21F66428C(v22, v13, v14, v15, v16, v17, v18, v21, v19, v5);
  *(_QWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  *(_QWORD *)(a1 + 120) = v15;
  *(_QWORD *)(a1 + 128) = v16;
  *(_QWORD *)(a1 + 136) = v17;
  *(_QWORD *)(a1 + 144) = v18;
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = v19;
  *(_BYTE *)(a1 + 168) = v5;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV7RequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v33;
  unsigned __int8 v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_BYTE *)(a2 + 80);
  sub_21F667678(v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  v13 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v8;
  sub_21F6641CC(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a2 + 104);
  v16 = *(_QWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a2 + 120);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 144);
  v21 = *(_QWORD *)(a2 + 152);
  v33 = *(_QWORD *)(a2 + 160);
  v34 = *(_BYTE *)(a2 + 168);
  sub_21F66428C(v14, v15, v16, v17, v18, v19, v20, v21, v33, v34);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v24 = *(_QWORD *)(a1 + 112);
  v25 = *(_QWORD *)(a1 + 120);
  v26 = *(_QWORD *)(a1 + 128);
  v27 = *(_QWORD *)(a1 + 136);
  v28 = *(_QWORD *)(a1 + 144);
  v29 = *(_QWORD *)(a1 + 152);
  v30 = *(_QWORD *)(a1 + 160);
  v31 = *(_BYTE *)(a1 + 168);
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v16;
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 144) = v20;
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = v33;
  *(_BYTE *)(a1 + 168) = v34;
  sub_21F664218(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV7RequestVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  __int128 v27;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  v13 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v7;
  sub_21F6641CC(v8, v9, v10, v11, v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 160);
  v15 = *(_BYTE *)(a2 + 168);
  v16 = *(_QWORD *)(a1 + 96);
  v17 = *(_QWORD *)(a1 + 104);
  v18 = *(_QWORD *)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 120);
  v20 = *(_QWORD *)(a1 + 128);
  v21 = *(_QWORD *)(a1 + 136);
  v22 = *(_QWORD *)(a1 + 144);
  v23 = *(_QWORD *)(a1 + 152);
  v24 = *(_QWORD *)(a1 + 160);
  v25 = *(_BYTE *)(a1 + 168);
  v26 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v26;
  v27 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v27;
  *(_QWORD *)(a1 + 160) = v14;
  *(_BYTE *)(a1 + 168) = v15;
  sub_21F664218(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV7RequestVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21F67BF2C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInCommand.Response()
{
  return &type metadata for SignInCommand.Response;
}

ValueMetadata *type metadata accessor for SignInCommand.Response.CodingKeys()
{
  return &type metadata for SignInCommand.Response.CodingKeys;
}

uint64_t _s21ProximityAppleIDSetup13SignInCommandV8ResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F67C008 + 4 * byte_21F71B475[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F67C03C + 4 * byte_21F71B470[v4]))();
}

uint64_t sub_21F67C03C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F67C044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F67C04CLL);
  return result;
}

uint64_t sub_21F67C058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F67C060);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F67C064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F67C06C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignInCommand.Request.CodingKeys()
{
  return &type metadata for SignInCommand.Request.CodingKeys;
}

unint64_t sub_21F67C08C()
{
  unint64_t result;

  result = qword_2554DCFE8;
  if (!qword_2554DCFE8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B7A0, &type metadata for SignInCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCFE8);
  }
  return result;
}

unint64_t sub_21F67C0D4()
{
  unint64_t result;

  result = qword_2554DCFF0;
  if (!qword_2554DCFF0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B858, &type metadata for SignInCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCFF0);
  }
  return result;
}

unint64_t sub_21F67C11C()
{
  unint64_t result;

  result = qword_2554DCFF8;
  if (!qword_2554DCFF8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B7C8, &type metadata for SignInCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DCFF8);
  }
  return result;
}

unint64_t sub_21F67C164()
{
  unint64_t result;

  result = qword_2554DD000;
  if (!qword_2554DD000)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B7F0, &type metadata for SignInCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DD000);
  }
  return result;
}

unint64_t sub_21F67C1AC()
{
  unint64_t result;

  result = qword_2554DD008;
  if (!qword_2554DD008)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B710, &type metadata for SignInCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DD008);
  }
  return result;
}

unint64_t sub_21F67C1F4()
{
  unint64_t result;

  result = qword_2554DD010;
  if (!qword_2554DD010)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71B738, &type metadata for SignInCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DD010);
  }
  return result;
}

unint64_t sub_21F67C238()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2554DD028;
  if (!qword_2554DD028)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DCE60);
    v2[0] = sub_21F669D7C(&qword_2554DD030, (uint64_t)&protocol conformance descriptor for AIDAServiceType);
    v2[1] = sub_21F67C2D4(&qword_2554DD038, (uint64_t (*)(void))sub_21F67C348, MEMORY[0x24BEE1348], (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2554DD028);
  }
  return result;
}

uint64_t sub_21F67C2D4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DCE80);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x2207CC46C](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21F67C348()
{
  unint64_t result;

  result = qword_2554DD040;
  if (!qword_2554DD040)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554DD040);
  }
  return result;
}

uint64_t sub_21F67C38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  if ((a7 & 1) != 0)
    return sub_21F67C398(a1, a2, a3, a4, a5, a6);
  return a1;
}

uint64_t sub_21F67C398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 == 1)
    return swift_retain();
  if (!a6)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_21F67C3D8()
{
  unint64_t result;

  result = qword_2554DD048;
  if (!qword_2554DD048)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2554DD048);
  }
  return result;
}

uint64_t sub_21F67C41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  if ((a7 & 1) != 0)
    return sub_21F6769E4(a1, a2, a3, a4, a5, a6);
  return a1;
}

unint64_t sub_21F67C428()
{
  unint64_t result;

  result = qword_2554DD058;
  if (!qword_2554DD058)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASCodableAuthResults, &type metadata for PASCodableAuthResults);
    atomic_store(result, (unint64_t *)&qword_2554DD058);
  }
  return result;
}

uint64_t sub_21F67C46C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 168);
  v8 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F667678(v2, v3, v4, v5, v8);
  swift_bridgeObjectRetain();
  sub_21F66428C(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21F67C568(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v14 = *(_QWORD *)(a1 + 120);
  v15 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v11 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 152);
  v7 = *(_BYTE *)(a1 + 168);
  v8 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21F6641CC(v2, v3, v4, v5, v8);
  swift_bridgeObjectRelease();
  sub_21F664218(v17, v16, v15, v14, v13, v12, v11, v10, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_21F67C664()
{
  unint64_t result;

  result = qword_2554DC330;
  if (!qword_2554DC330)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554DC330);
  }
  return result;
}

uint64_t sub_21F67C6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__deviceProvider);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 24);
    swift_retain();
  }
  else
  {
    v3 = qword_2554DA6A0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_21F63EB84();
    v2 = v5;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 16))(v10, ObjectType, v2);
  swift_unknownObjectRelease();
  v7 = v11;
  if (v11)
  {
    v8 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    if (qword_2554DA6D8 != -1)
      swift_once();
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 24))(static PASDeviceCapability.signInForSelf, unk_2554E5140, v7, v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  }
  else
  {
    sub_21F67DB90((uint64_t)v10);
  }
  return v7 & 1;
}

uint64_t PASFlowStepSendSelectedAccount.__allocating_init(delegate:familyMemberSelection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = swift_allocObject();
  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v6 + v7) = v8;
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v6 + v9) = v10;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_isSignInForSelfSupported) = 0;
  sub_21F674A3C(a3, v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection);
  v11 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  sub_21F674A78(a3);
  return v11;
}

uint64_t PASFlowStepSendSelectedAccount.init(delegate:familyMemberSelection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v3 + v7) = v8;
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v3 + v9) = v10;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_isSignInForSelfSupported) = 0;
  sub_21F674A3C(a3, v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection);
  v11 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  sub_21F674A78(a3);
  return v11;
}

uint64_t PASFlowStepSendSelectedAccount.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = sub_21F7162A8();
  v1[4] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_21F67CA40;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F67CA40()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_21F716248();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v2[7] = v3;
    *v3 = v2;
    v3[1] = sub_21F65DC64;
    v3[39] = v2[2];
  }
  return swift_task_switch();
}

uint64_t sub_21F67CAF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 312) = v0;
  return swift_task_switch();
}

void sub_21F67CB08()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  *(_QWORD *)(v0 + 320) = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepSendSelectedAccount sendSelectedAccount", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 312);

  sub_21F674A3C(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection, v0 + 88);
  __asm { BR              X10 }
}

uint64_t sub_21F67CF2C()
{
  uint64_t v0;

  swift_release();
  *(_BYTE *)(v0 + 138) = sub_21F67C6A8() & 1;
  return swift_task_switch();
}

uint64_t sub_21F67CF78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 18));
  swift_release();
  v1 = v0[21];
  v2 = v0[22];
  __swift_project_boxed_opaque_existential_1(v0 + 18, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[44] = v3;
  *v3 = v0;
  v3[1] = sub_21F67D030;
  return v5(v0 + 23, v1, v2);
}

uint64_t sub_21F67D030()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F67D09C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[26];
  __swift_project_boxed_opaque_existential_1(v0 + 23, v1);
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[46] = v2;
  *v2 = v0;
  v2[1] = sub_21F67D148;
  return sub_21F64B604((uint64_t)v0 + 137, 7, 0, 0, 1, v0[41], v1, MEMORY[0x24BEE1328]);
}

uint64_t sub_21F67D148()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F67D1C8()
{
  uint64_t v0;
  int v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  char v5;
  uint64_t v6;

  v1 = *(unsigned __int8 *)(v0 + 137);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 184);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 144);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67240192;
    *(_DWORD *)(v0 + 140) = v1;
    sub_21F716428();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepSendSelectedAccount sent .accountSelected message with response: %{BOOL,public}d", v4, 8u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v5 = *(_BYTE *)(v0 + 138);
  v6 = *(_QWORD *)(v0 + 312);

  *(_BYTE *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_isSignInForSelfSupported) = v5 & v1;
  *(_QWORD *)(v0 + 384) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F67D31C()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F67D354()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v1 = (void *)v0[45];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 18));
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[37] = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    v0[36] = sub_21F644208(v9, v10, &v12);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepSendSelectedAccount failed to sendSelectedAccount.\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

  }
  v0[48] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F67D544()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 23));
  v1 = (void *)v0[47];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 18));
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[37] = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    v0[36] = sub_21F644208(v9, v10, &v12);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepSendSelectedAccount failed to sendSelectedAccount.\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

  }
  v0[48] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t PASFlowStepSendSelectedAccount.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE v17[48];

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection;
  sub_21F674A3C(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection, (uint64_t)&v16);
  if (v17[40] == 2)
  {
    v2 = v16;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
    v3 = *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_isSignInForSelfSupported);
    v4 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    if (v3 != 1)
    {
      swift_beginAccess();
      v13 = MEMORY[0x2207CC5BC](v4);
      v14 = *(_QWORD *)(v4 + 8);
      type metadata accessor for PASFlowStepSendPersonalAccount();
      swift_allocObject();
      v7 = sub_21F658C0C(v2, v13, v14);
      swift_unknownObjectRelease();
      v11 = &qword_2554DB3C8;
      v12 = type metadata accessor for PASFlowStepSendPersonalAccount;
      goto LABEL_7;
    }
    swift_beginAccess();
    v5 = MEMORY[0x2207CC5BC](v4);
    v6 = *(_QWORD *)(v4 + 8);
    sub_21F674A3C(v1, (uint64_t)&v16);
    type metadata accessor for PASFlowStepManateeRepair();
    swift_allocObject();
    v7 = sub_21F6746B4(v5, v6, (uint64_t)&v16, 1);
    swift_release();
  }
  else
  {
    sub_21F674A78((uint64_t)&v16);
    v8 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v9 = MEMORY[0x2207CC5BC](v8);
    v10 = *(_QWORD *)(v8 + 8);
    sub_21F674A3C(v1, (uint64_t)&v16);
    type metadata accessor for PASFlowStepManateeRepair();
    swift_allocObject();
    v7 = sub_21F6746B4(v9, v10, (uint64_t)&v16, 0);
  }
  swift_unknownObjectRelease();
  v11 = &qword_2554DC6B0;
  v12 = type metadata accessor for PASFlowStepManateeRepair;
LABEL_7:
  sub_21F65EAB0(v11, (uint64_t (*)(uint64_t))v12);
  return v7;
}

void PASFlowStepSendSelectedAccount.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepSendSelectedAccount.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F67D9BC()
{
  uint64_t v0;

  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection);
  swift_release();
  return swift_release();
}

uint64_t PASFlowStepSendSelectedAccount.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection);
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASFlowStepSendSelectedAccount.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup30PASFlowStepSendSelectedAccount_familyMemberSelection);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F67DAAC()
{
  return PASFlowStepSendSelectedAccount.nextStep()();
}

uint64_t sub_21F67DAC0(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DD090, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSendSelectedAccount);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepSendSelectedAccount()
{
  uint64_t result;

  result = qword_2554DD0C0;
  if (!qword_2554DD0C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F67DB30()
{
  return type metadata accessor for PASFlowStepSendSelectedAccount();
}

uint64_t sub_21F67DB38()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F67DB90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA770);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PASFlowStepRepairLocalAccount.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = sub_21F7162A8();
  v1[4] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_21F67DC3C;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F67DC3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F67DCC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = swift_allocObject();
  swift_weakInit();
  sub_21F658AF4();
  swift_allocError();
  *(_QWORD *)v2 = 0xD000000000000033;
  *(_QWORD *)(v2 + 8) = 0x800000021F727850;
  *(_QWORD *)(v2 + 16) = &unk_2554DD338;
  *(_QWORD *)(v2 + 24) = v1;
  *(_BYTE *)(v2 + 32) = 0;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F67DD78()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F67DDAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F67DDD0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[5] = a1;
  sub_21F7162A8();
  v1[6] = sub_21F71629C();
  v1[7] = sub_21F716248();
  v1[8] = v2;
  return swift_task_switch();
}

uint64_t sub_21F67DE3C()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  _QWORD *v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    v2 = Strong;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_21F67DEE4;
    v3[10] = v2;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F67DEE4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F67DF38()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F67DF68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F67DDD0(v0);
}

uint64_t PASFlowStepRepairLocalAccount.repairLocalAccount()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_21F67DFC8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[11] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepRepairLocalAccount repairLocalAccount", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_retain();
  sub_21F656B5C((uint64_t)(v0 + 2));
  swift_release();
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v6 + 32) + *(_QWORD *)(v6 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  v0[12] = v7;
  *v7 = v0;
  v7[1] = sub_21F67E120;
  return v9(v5, v6);
}

uint64_t sub_21F67E120()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F67E184()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  sub_21F7162A8();
  *(_QWORD *)(v0 + 112) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F67E1F4()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F67E22C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = *(void **)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  *(_QWORD *)(v0 + 56) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if ((swift_dynamicCast() & 1) != 0 && (*(_BYTE *)(v0 + 128) & 1) == 0)
  {

    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v15;
    *v15 = v0;
    v15[1] = sub_21F67E4BC;
    v15[12] = *(_QWORD *)(v0 + 80);
  }
  else
  {
    v3 = *(void **)(v0 + 104);

    v4 = v3;
    v5 = v3;
    v6 = sub_21F715F24();
    v7 = sub_21F71635C();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(void **)(v0 + 104);
    if (v8)
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v17 = v11;
      *(_DWORD *)v10 = 136446210;
      *(_QWORD *)(v0 + 64) = v9;
      v12 = v9;
      v13 = sub_21F716128();
      *(_QWORD *)(v0 + 72) = sub_21F644208(v13, v14, &v17);
      sub_21F716428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21F63C000, v6, v7, "PASFlowStepRepairLocalAccount encountered error but we'll proceed anyway\n%{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v11, -1, -1);
      MEMORY[0x2207CC514](v10, -1, -1);

    }
    else
    {

    }
    sub_21F7162A8();
    *(_QWORD *)(v0 + 112) = sub_21F71629C();
    sub_21F716248();
  }
  return swift_task_switch();
}

uint64_t sub_21F67E4BC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F67E510()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F67E540()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_21F67E558()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F71635C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepRepairLocalAccount failed to fetch local account", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 96);

  v6 = v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v7 = MEMORY[0x2207CC5BC](v6);
  *(_QWORD *)(v0 + 104) = v7;
  if (!v7)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v8 = *(_QWORD *)(v6 + 8);
  ObjectType = swift_getObjectType();
  sub_21F671624();
  v10 = swift_allocError();
  *v11 = 0;
  *(_QWORD *)(v0 + 16) = v10;
  *(_BYTE *)(v0 + 64) = 1;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v12;
  *v12 = v0;
  v12[1] = sub_21F67E708;
  return v14(v0 + 16, ObjectType, v8);
}

uint64_t sub_21F67E708()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F67EAE4(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t PASFlowStepRepairLocalAccount.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  v3 = *(_QWORD *)(v1 + 8);
  type metadata accessor for PASFlowStepConnectPeer();
  v4 = swift_allocObject();
  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v4 + v5) = v6;
  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v4 + v7) = v8;
  v9 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepConnectPeer_result;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = -1;
  v10 = sub_21F6BC954(v2, v3);
  swift_unknownObjectRelease();
  sub_21F65EAB0(&qword_2554DD358, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepConnectPeer);
  return v10;
}

uint64_t PASFlowStepRepairLocalAccount.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = swift_allocObject();
  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup29PASFlowStepRepairLocalAccount__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v4 + v5) = v6;
  v7 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v7;
}

uint64_t PASFlowStepRepairLocalAccount.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = OBJC_IVAR____TtC21ProximityAppleIDSetup29PASFlowStepRepairLocalAccount__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v2 + v5) = v6;
  v7 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_21F67E990()
{
  return swift_release();
}

uint64_t PASFlowStepRepairLocalAccount.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  return v0;
}

uint64_t PASFlowStepRepairLocalAccount.__deallocating_deinit()
{
  PASSourceFlowStepBase.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F67EA14()
{
  return PASFlowStepRepairLocalAccount.nextStep()();
}

uint64_t sub_21F67EA28(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DD360, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepRepairLocalAccount);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepRepairLocalAccount()
{
  uint64_t result;

  result = qword_2554DD390;
  if (!qword_2554DD390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F67EA98()
{
  return type metadata accessor for PASFlowStepRepairLocalAccount();
}

uint64_t sub_21F67EAA0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F67EAE4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DB8E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *PASAccountStore.__allocating_init(accountStore:accountManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = __swift_mutable_project_boxed_opaque_existential_1(a2, v8);
  v11 = sub_21F680ED4(v7, v10, v2, v5, v8, v6, v9);
  __swift_destroy_boxed_opaque_existential_0Tm(a2);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v11;
}

uint64_t sub_21F67EBB4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000016;
  else
    return 0x6341534D44496F6ELL;
}

uint64_t sub_21F67EBFC(char *a1, char *a2)
{
  return sub_21F70C63C(*a1, *a2);
}

uint64_t sub_21F67EC08()
{
  return sub_21F70C800();
}

uint64_t sub_21F67EC10()
{
  return sub_21F70D5A8();
}

uint64_t sub_21F67EC18()
{
  return sub_21F70D6B4();
}

uint64_t sub_21F67EC20@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_21F67EC7C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_21F67EBB4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F67ECA4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70DED0();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F67ED20()
{
  return sub_21F70DED0();
}

uint64_t sub_21F67ED28()
{
  sub_21F68127C();
  return sub_21F7168C0();
}

uint64_t sub_21F67ED50()
{
  sub_21F68127C();
  return sub_21F7168B4();
}

uint64_t sub_21F67ED78()
{
  void **v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_21F66E794;
  v3 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v4 = v1 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_21F703238;
  v4[3] = &block_descriptor_45;
  v4[4] = v3;
  objc_msgSend(v2, sel_aa_primaryAppleAccountWithCompletion_, v4);
  return swift_continuation_await();
}

uint64_t sub_21F67EE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2554DD780 + dword_2554DD780);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F671A5C;
  return v7(a1, a2);
}

uint64_t sub_21F67EE80(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v2;
  if (a2)
    v6 = sub_21F71602C();
  else
    v6 = 0;
  v3[16] = v6;
  v3[7] = v3 + 15;
  v3[2] = v3;
  v3[3] = sub_21F67EF64;
  v7 = swift_continuation_init();
  v3[10] = MEMORY[0x24BDAC760];
  v8 = v3 + 10;
  v8[1] = 0x40000000;
  v8[2] = sub_21F67EFE8;
  v8[3] = &block_descriptor_43;
  v8[4] = v7;
  objc_msgSend(v4, sel_renewCredentialsForAccount_options_completion_, a1, v6, v8);
  return swift_continuation_await();
}

uint64_t sub_21F67EF64()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(void **)(v1 + 128);
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();

    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 120);

    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v4);
  }
}

uint64_t sub_21F67EFE8(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_21F67F068(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *v1;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_21F67F10C;
  v5 = swift_continuation_init();
  v2[10] = MEMORY[0x24BDAC760];
  v6 = v2 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_21F6FED2C;
  v6[3] = &block_descriptor_39;
  v6[4] = v5;
  objc_msgSend(v4, sel_saveAccount_withCompletionHandler_, a1, v6);
  return swift_continuation_await();
}

uint64_t sub_21F67F10C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();
    v2 = *(uint64_t (**)(uint64_t))(v1 + 8);
    v3 = 0;
  }
  else
  {
    v3 = *(unsigned __int8 *)(v1 + 120);
    v2 = *(uint64_t (**)(uint64_t))(v1 + 8);
  }
  return v2(v3);
}

uint64_t sub_21F67F170(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *v1;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_21F681604;
  v5 = swift_continuation_init();
  v2[10] = MEMORY[0x24BDAC760];
  v6 = v2 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_21F6FED2C;
  v6[3] = &block_descriptor_37;
  v6[4] = v5;
  objc_msgSend(v4, sel_removeAccount_withCompletionHandler_, a1, v6);
  return swift_continuation_await();
}

id sub_21F67F214(uint64_t a1)
{
  return sub_21F67F234(a1);
}

id sub_21F67F234(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6[0] = 0;
  v2 = objc_msgSend(v1, sel_credentialForAccount_error_, a1, v6);
  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_21F715D50();

    swift_willThrow();
  }
  return v2;
}

id sub_21F67F2EC(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *v2;
  if (a2)
    v4 = (void *)sub_21F7160E0();
  else
    v4 = 0;
  v5 = objc_msgSend(v3, sel_accountTypeWithAccountTypeIdentifier_, v4);

  return v5;
}

uint64_t sub_21F67F344(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2554DD768 + dword_2554DD768);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F671A5C;
  return v5(a1);
}

uint64_t sub_21F67F3AC(uint64_t a1)
{
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (a1)
    v3 = sub_21F7161C4();
  else
    v3 = 0;
  v2[16] = v3;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_21F6815F4;
  v4 = swift_continuation_init();
  v2[10] = MEMORY[0x24BDAC760];
  v5 = v2 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_21F67F468;
  v5[3] = &block_descriptor_1;
  v5[4] = v4;
  objc_msgSend(v1, sel_accountsWithAccountTypeIdentifiers_completion_, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_21F67F468(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      sub_21F64779C(0, &qword_2554DD778);
      v8 = sub_21F7161D0();
    }
    else
    {
      v8 = 0;
    }
    v9 = v8;
    sub_21F681390((uint64_t)&v9, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

id sub_21F67F534(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_transportableAuthKitAccount_, a1);
}

uint64_t *PASAccountStore.init(accountStore:accountManager:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v20;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v6);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = __swift_mutable_project_boxed_opaque_existential_1(a2, v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v18 = sub_21F680E50((uint64_t)v10, (uint64_t)v16, v3, v6, v12, v7, v13);
  __swift_destroy_boxed_opaque_existential_0Tm(a2);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v18;
}

uint64_t PASAccountStore.primaryAppleAccount()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F67F690()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v4;
  *v4 = v0;
  v4[1] = sub_21F67F70C;
  return v6(v2, v3);
}

uint64_t sub_21F67F70C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t PASAccountStore.renewCredentials(for:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21F67F77C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[3];
  v1 = (_QWORD *)v0[4];
  v3 = v0[2];
  v4 = v1[5];
  v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v5 + 16) + *(_QWORD *)(v5 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_21F67F810;
  return v8(v3, v2, v4, v5);
}

uint64_t sub_21F67F810(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t PASAccountStore.saveAccount(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_21F67F87C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v2 = v0[2];
  v1 = (_QWORD *)v0[3];
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  v0[4] = v5;
  *v5 = v0;
  v5[1] = sub_21F67F904;
  return v7(v2, v3, v4);
}

uint64_t sub_21F67F904(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t PASAccountStore.removeAccount(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_21F67F978()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v2 = v0[2];
  v1 = (_QWORD *)v0[3];
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 32) + *(_QWORD *)(v4 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  v0[4] = v5;
  *v5 = v0;
  v5[1] = sub_21F6815F0;
  return v7(v2, v3, v4);
}

uint64_t PASAccountStore.credential(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_21F67FA18()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_21F64779C(0, &qword_2554DD600);
  *v2 = v0;
  v2[1] = sub_21F67FAD8;
  return sub_21F71686C();
}

uint64_t sub_21F67FAD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F67FB44()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21F67FB50()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F67FB84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v26 = a2;
  v27 = a3;
  v25 = a1;
  v28 = sub_21F715FFC();
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21F716020();
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD7A8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = sub_21F716008();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F64779C(0, (unint64_t *)&qword_2554E4980);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE5490], v11);
  v24 = sub_21F7163D4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  v17 = v27;
  *(_QWORD *)(v16 + 16) = v26;
  *(_QWORD *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_21F6815BC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F67FF04;
  aBlock[3] = &block_descriptor_53;
  v18 = _Block_copy(aBlock);
  swift_retain();
  v19 = v17;
  sub_21F716014();
  v32 = MEMORY[0x24BEE4AF8];
  sub_21F6814A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD798);
  sub_21F6814F0();
  v20 = v28;
  sub_21F71647C();
  v21 = (void *)v24;
  MEMORY[0x2207CB938](0, v7, v4, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v20);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v30);
  return swift_release();
}

uint64_t sub_21F67FE50(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[5];
  v4 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(a2, v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD7A8);
  return sub_21F716260();
}

uint64_t sub_21F67FF04(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t PASAccountStore.accountType(withAccountTypeIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_21F67FF4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD610);
  *v5 = v0;
  v5[1] = sub_21F68000C;
  return sub_21F7167B8();
}

uint64_t sub_21F68000C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F680068()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21F680070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v26 = a3;
  v27 = a4;
  v25 = a2;
  v23 = a1;
  v28 = sub_21F715FFC();
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21F716020();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD788);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = sub_21F716008();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F64779C(0, (unint64_t *)&qword_2554E4980);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5490], v12);
  v24 = sub_21F7163D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v9);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = (char *)swift_allocObject();
  v18 = v26;
  *((_QWORD *)v17 + 2) = v25;
  *((_QWORD *)v17 + 3) = v18;
  *((_QWORD *)v17 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v16], (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_21F681458;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F67FF04;
  aBlock[3] = &block_descriptor_47;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21F716014();
  v32 = MEMORY[0x24BEE4AF8];
  sub_21F6814A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD798);
  sub_21F6814F0();
  v20 = v28;
  sub_21F71647C();
  v21 = (void *)v24;
  MEMORY[0x2207CB938](0, v8, v5, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v20);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  return swift_release();
}

uint64_t sub_21F68034C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1[5];
  v6 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48))(a2, a3, v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD788);
  return sub_21F716260();
}

uint64_t PASAccountStore.idmsAccount(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_21F6803F4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD620);
  v4 = swift_allocObject();
  v0[4] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_21F717EF0;
  *(_QWORD *)(v4 + 32) = sub_21F716104();
  *(_QWORD *)(v4 + 40) = v5;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 56) + *(_QWORD *)(v3 + 56));
  v6 = (_QWORD *)swift_task_alloc();
  v0[5] = v6;
  *v6 = v0;
  v6[1] = sub_21F6804B8;
  return v8(v4, v2, v3);
}

uint64_t sub_21F6804B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F68052C()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  void *v3;
  _BYTE *v5;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
    v3 = sub_21F681038(v1, v2);

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void *))(v0 + 8))(v3);
  }
  else
  {
    sub_21F680FF4();
    swift_allocError();
    *v5 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6805DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F680610(id *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;

  v3 = *a1;
  v4 = objc_msgSend(*a1, sel_aa_altDSID);
  if (v4)
  {
    v5 = v4;
    v6 = sub_21F716104();
    v8 = v7;

    v9 = objc_msgSend(a2, sel_aa_altDSID);
    if (v9)
    {
      v10 = v9;
      v11 = sub_21F716104();
      v13 = v12;

      if (v6 == v11 && v8 == v13)
        goto LABEL_19;
      v15 = sub_21F716800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v16 = (void *)ACAccount.dsid.getter();
  if (v16)
  {
    v17 = v16;
    v18 = ACAccount.dsid.getter();
    if (v18)
    {
      v19 = (void *)v18;
      sub_21F64779C(0, (unint64_t *)&qword_2554DADD0);
      v20 = v17;
      v21 = sub_21F7163EC();

      if ((v21 & 1) != 0)
        return 1;
    }
    else
    {

    }
  }
  v22 = objc_msgSend(v3, sel_username);
  if (v22)
  {
    v23 = v22;
    v24 = sub_21F716104();
    v26 = v25;

    v27 = objc_msgSend(a2, sel_username);
    if (v27)
    {
      v28 = v27;
      v29 = sub_21F716104();
      v31 = v30;

      if (v24 == v29 && v26 == v31)
      {
LABEL_19:
        swift_bridgeObjectRelease_n();
        return 1;
      }
      v33 = sub_21F716800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
        return 1;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t PASAccountStore.transportableAuthKitAccount(_:includeCredential:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  return swift_task_switch();
}

id sub_21F68084C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  void *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE *v11;

  v1 = *(void **)(v0 + 64);
  sub_21F647710(*(_QWORD *)(v0 + 72) + 56, v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  result = objc_msgSend(v1, sel_portableCopy);
  if (result)
  {
    v5 = result;
    v6 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v3 + 8))(result, v2, v3);
    *(_QWORD *)(v0 + 80) = v6;

    if (v6)
    {
      v7 = *(unsigned __int8 *)(v0 + 112);
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
      if (v7 == 1)
      {
        v8 = *(_QWORD *)(v0 + 72);
        v9 = swift_task_alloc();
        *(_QWORD *)(v0 + 88) = v9;
        *(_QWORD *)(v9 + 16) = v8;
        *(_QWORD *)(v9 + 24) = v6;
        v10 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 96) = v10;
        sub_21F64779C(0, &qword_2554DD600);
        *v10 = v0;
        v10[1] = sub_21F680A08;
        return (id)sub_21F71686C();
      }
      else
      {
        return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
      sub_21F680FF4();
      swift_allocError();
      *v11 = 1;
      swift_willThrow();
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21F680A08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F680A74()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 80), sel_setCredential_, v1);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

uint64_t sub_21F680AC0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASAccountStore.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  return v0;
}

uint64_t PASAccountStore.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t sub_21F680B48()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *v0;
  return swift_task_switch();
}

uint64_t sub_21F680B64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_21F680B84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21F680BA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21F680BBC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return swift_task_switch();
}

uint64_t sub_21F680BD8()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_21F64779C(0, &qword_2554DD600);
  *v2 = v0;
  v2[1] = sub_21F67FAD8;
  return sub_21F71686C();
}

uint64_t sub_21F680C98(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[3] = a1;
  v3[4] = a2;
  v3[5] = *v2;
  return swift_task_switch();
}

uint64_t sub_21F680CB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD610);
  *v5 = v0;
  v5[1] = sub_21F68000C;
  return sub_21F7167B8();
}

uint64_t sub_21F680D78(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F6514BC;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_21F680DDC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v2;
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_21F671A5C;
  *(_BYTE *)(v7 + 112) = a2;
  *(_QWORD *)(v7 + 64) = a1;
  *(_QWORD *)(v7 + 72) = v6;
  return swift_task_switch();
}

uint64_t *sub_21F680E50(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v14;

  a3[5] = a4;
  a3[6] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  a3[10] = a5;
  a3[11] = a7;
  v14 = __swift_allocate_boxed_opaque_existential_1(a3 + 7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v14, a2, a5);
  return a3;
}

uint64_t *sub_21F680ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a7;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, a5);
  return sub_21F680E50((uint64_t)v19, (uint64_t)v15, v20, a4, a5, a6, v23);
}

uint64_t sub_21F680FE0(uint64_t a1)
{
  uint64_t v1;

  return sub_21F67FB84(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_21F680FE8(uint64_t a1)
{
  uint64_t *v1;

  return sub_21F680070(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_21F680FF4()
{
  unint64_t result;

  result = qword_2554DD628;
  if (!qword_2554DD628)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BCC4, &type metadata for PASAccountStoreError);
    atomic_store(result, (unint64_t *)&qword_2554DD628);
  }
  return result;
}

void *sub_21F681038(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v12;

  if (a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_21F716608())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2207CBA94](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v12 = v7;
      v10 = sub_21F680610(&v12, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return v8;
      }
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v8;
      }

      ++v6;
      if (v9 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t type metadata accessor for PASAccountStore()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PASAccountStoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F6811C4 + 4 * byte_21F71BA35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F6811F8 + 4 * byte_21F71BA30[v4]))();
}

uint64_t sub_21F6811F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F681200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F681208);
  return result;
}

uint64_t sub_21F681214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F68121CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F681220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F681228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASAccountStoreError()
{
  return &type metadata for PASAccountStoreError;
}

unint64_t sub_21F681248(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F68127C();
  a1[2] = sub_21F6812C0();
  result = sub_21F681304();
  a1[3] = result;
  return result;
}

unint64_t sub_21F68127C()
{
  unint64_t result;

  result = qword_2554DD748;
  if (!qword_2554DD748)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BBC8, &type metadata for PASAccountStoreError);
    atomic_store(result, (unint64_t *)&qword_2554DD748);
  }
  return result;
}

unint64_t sub_21F6812C0()
{
  unint64_t result;

  result = qword_2554DD750;
  if (!qword_2554DD750)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BB80, &type metadata for PASAccountStoreError);
    atomic_store(result, (unint64_t *)&qword_2554DD750);
  }
  return result;
}

unint64_t sub_21F681304()
{
  unint64_t result;

  result = qword_2554DD758;
  if (!qword_2554DD758)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BB58, &type metadata for PASAccountStoreError);
    atomic_store(result, (unint64_t *)&qword_2554DD758);
  }
  return result;
}

unint64_t sub_21F68134C()
{
  unint64_t result;

  result = qword_2554DD760;
  if (!qword_2554DD760)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BC9C, &type metadata for PASAccountStoreError);
    atomic_store(result, (unint64_t *)&qword_2554DD760);
  }
  return result;
}

uint64_t sub_21F681390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6813D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD788);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21F681458()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD788);
  return sub_21F68034C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_21F6814A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554DD790;
  if (!qword_2554DD790)
  {
    v1 = sub_21F715FFC();
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2554DD790);
  }
  return result;
}

unint64_t sub_21F6814F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554DD7A0;
  if (!qword_2554DD7A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DD798);
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2554DD7A0);
  }
  return result;
}

uint64_t sub_21F68153C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD7A8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21F6815BC()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD7A8);
  return sub_21F67FE50(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_21F68160C()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F681660()
{
  return sub_21F716134();
}

uint64_t sub_21F68167C()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F6816CC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21F68171C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000021F725C20;
}

uint64_t sub_21F681744()
{
  sub_21F683B3C();
  return sub_21F7168C0();
}

uint64_t sub_21F68176C()
{
  sub_21F683B3C();
  return sub_21F7168B4();
}

void sub_21F681794()
{
  qword_2554DD7B0 = 0x6165627472616568;
  *(_QWORD *)algn_2554DD7B8 = 0xE900000000000074;
}

uint64_t sub_21F6817BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASHeartbeatController deinit", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_21F63C000, v6, v7, "PASHeartbeatController stop", v8, 2u);
    MEMORY[0x2207CC514](v8, -1, -1);
  }

  *(_BYTE *)(v1 + 80) = 0;
  if (*(_QWORD *)(v1 + 72))
  {
    swift_retain();
    sub_21F7162D8();
    swift_release();
  }
  sub_21F653C88(v1 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 32);
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21F681960()
{
  sub_21F6817BC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PASHeartbeatController()
{
  return objc_opt_self();
}

void sub_21F6819A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_21F63C000, v6, v7, "PASHeartbeatController start", v8, 2u);
    MEMORY[0x2207CC514](v8, -1, -1);
  }

  *(_BYTE *)(v1 + 80) = 1;
  if (!*(_QWORD *)(v1 + 72))
  {
    sub_21F6821FC(10);
    v9 = sub_21F7162C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    v10 = swift_allocObject();
    swift_weakInit();
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v10;
    sub_21F6B4184((uint64_t)v4, (uint64_t)&unk_2554DD950, (uint64_t)v11);
    swift_release();
  }
}

uint64_t sub_21F681B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F681B64()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  _QWORD *v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)Strong;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v3;
    *v3 = v0;
    v3[1] = sub_21F681C18;
    v3[13] = v2;
    v3[14] = *v2;
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F681C18()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F681C74()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F681C90()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = v0;
  *(_QWORD *)(v1 + 112) = *v0;
  return swift_task_switch();
}

uint64_t sub_21F681CB0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[15] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASHeartbeatController registerForRequests", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 7));
  swift_release();
  v5 = v0[10];
  v6 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v5);
  v9 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v0[16] = v7;
  *v7 = v0;
  v7[1] = sub_21F681E10;
  return v9(v0 + 2, v5, v6);
}

uint64_t sub_21F681E10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F681E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  if (qword_2554DA6B8 != -1)
    swift_once();
  v3 = *(_QWORD *)(v0 + 112);
  v4 = qword_2554DD7B0;
  v5 = *(_QWORD *)algn_2554DD7B8;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF18);
  sub_21F64AE64(v4, v5, 0, (uint64_t)sub_21F683C50, v6, (uint64_t)&unk_2554DD940, v7, v1, v8, v2);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F681FAC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 136);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v10;
    sub_21F716428();
    *v8 = v10;

    _os_log_impl(&dword_21F63C000, v4, v5, "PASHeartbeatController registerForRequests failed.\n%{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 136);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F682138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F682150()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  char v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    if (*(_QWORD *)(Strong + 72))
    {
      swift_retain();
      sub_21F7162D8();
      swift_release();
    }
    v3 = *(_BYTE *)(v2 + 80);
    swift_release();
  }
  else
  {
    v3 = 2;
  }
  **(_BYTE **)(v0 + 40) = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21F6821FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 80) == 1)
  {
    v6 = sub_21F7162C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    v7 = swift_allocObject();
    swift_weakInit();
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = a1;
    v8[5] = v7;
    *(_QWORD *)(v1 + 72) = sub_21F6B4038((uint64_t)v5, (uint64_t)&unk_2554DD930, (uint64_t)v8);
    swift_release();
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v9 = sub_21F715F3C();
    __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
    v13 = sub_21F715F24();
    v10 = sub_21F716374();
    if (os_log_type_enabled(v13, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21F63C000, v13, v10, "PASHeartbeatController queueHearbeat stopped", v11, 2u);
      MEMORY[0x2207CC514](v11, -1, -1);
    }

  }
}

uint64_t sub_21F6823B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[13] = a4;
  v5[14] = a5;
  v6 = sub_21F716278();
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

void sub_21F682414()
{
  uint64_t v0;
  _QWORD *v1;

  if (is_mul_ok(*(_QWORD *)(v0 + 104), 0x3B9ACA00uLL))
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v1;
    *v1 = v0;
    v1[1] = sub_21F682480;
    sub_21F7162FC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21F682480()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6824E4()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 160) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v2;
    *v2 = v0;
    v2[1] = sub_21F682574;
    return sub_21F682BA4();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F682574()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6825D8()
{
  uint64_t v0;

  sub_21F6821FC(10);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68261C()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = (id *)(v0 + 88);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if ((swift_dynamicCast() & 1) != 0)
  {

    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    v6 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 120);
    if (Strong)
    {
      sub_21F6821FC(15);
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v8 = *v2;
    goto LABEL_13;
  }

  if (qword_2554DA718 != -1)
    swift_once();
  v9 = sub_21F715F3C();
  __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
  v10 = v1;
  v11 = v1;
  v12 = sub_21F715F24();
  v13 = sub_21F71635C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138543362;
    v16 = v1;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v17;
    sub_21F716428();
    *v15 = v17;

    _os_log_impl(&dword_21F63C000, v12, v13, "PASHeartbeatController failed to sendHeartbeat.\n%{public}@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v15, -1, -1);
    MEMORY[0x2207CC514](v14, -1, -1);
  }
  else
  {

  }
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    v8 = v1;
LABEL_13:

    goto LABEL_14;
  }
  sub_21F68322C();

  swift_release();
LABEL_14:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6828DC()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;

  swift_release();
  v1 = *(void **)(v0 + 176);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = (id *)(v0 + 88);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if ((swift_dynamicCast() & 1) != 0)
  {

    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    v6 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 120);
    if (Strong)
    {
      sub_21F6821FC(15);
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v8 = *v2;
    goto LABEL_13;
  }

  if (qword_2554DA718 != -1)
    swift_once();
  v9 = sub_21F715F3C();
  __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
  v10 = v1;
  v11 = v1;
  v12 = sub_21F715F24();
  v13 = sub_21F71635C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138543362;
    v16 = v1;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v17;
    sub_21F716428();
    *v15 = v17;

    _os_log_impl(&dword_21F63C000, v12, v13, "PASHeartbeatController failed to sendHeartbeat.\n%{public}@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v15, -1, -1);
    MEMORY[0x2207CC514](v14, -1, -1);
  }
  else
  {

  }
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    v8 = v1;
LABEL_13:

    goto LABEL_14;
  }
  sub_21F68322C();

  swift_release();
LABEL_14:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F682BA4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1[22] = v0;
  v1[23] = *v0;
  v2 = sub_21F715F3C();
  v1[24] = v2;
  v1[25] = *(_QWORD *)(v2 - 8);
  v1[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F682C0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 16));
  swift_release();
  v1 = v0[19];
  v2 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[27] = v3;
  *v3 = v0;
  v3[1] = sub_21F682CBC;
  return v5(v0 + 11, v1, v2);
}

uint64_t sub_21F682CBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F682D20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  _QWORD *v7;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 16));
  __swift_project_boxed_opaque_existential_1(v0 + 11, v0[14]);
  if (qword_2554DA6B8 != -1)
    swift_once();
  v1 = v0[23];
  v2 = qword_2554DD7B0;
  v3 = *(_QWORD *)algn_2554DD7B8;
  v4 = swift_allocObject();
  v0[29] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554E24A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_BYTE *)(inited + 32) = 9;
  v6 = sub_21F68370C();
  *(_QWORD *)(inited + 64) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 40) = v6;
  v0[30] = sub_21F640C2C(inited);
  v7 = (_QWORD *)swift_task_alloc();
  v0[31] = v7;
  *v7 = v0;
  v7[1] = sub_21F682E94;
  return sub_21F64B838((uint64_t)(v0 + 33), v2, v3, 0, 2, 0, (uint64_t)sub_21F6833A4, v4);
}

uint64_t sub_21F682E94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_21F682F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0 + 88;
  if ((*(_BYTE *)(v0 + 264) & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
    swift_task_dealloc();
    v2 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 192);
    v6 = __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v6, v5);
    swift_retain_n();
    v7 = sub_21F715F24();
    v8 = sub_21F71635C();
    v9 = os_log_type_enabled(v7, v8);
    v11 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 192);
    v13 = *(_QWORD *)(v0 + 176);
    if (v9)
    {
      v20 = *(_QWORD *)(v0 + 208);
      v19 = *(_QWORD *)(v0 + 200);
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v21 = v15;
      *(_DWORD *)v14 = 136446210;
      if (*(_BYTE *)(v13 + 80))
        v16 = 0x216576696C61;
      else
        v16 = 0x6F6F742064616564;
      if (*(_BYTE *)(v13 + 80))
        v17 = 0xE600000000000000;
      else
        v17 = 0xE800000000000000;
      *(_QWORD *)(v0 + 168) = sub_21F644208(v16, v17, &v21);
      v1 = v0 + 88;
      sub_21F716428();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_21F63C000, v7, v8, "PASHeartbeatController other device has died and we are %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v15, -1, -1);
      MEMORY[0x2207CC514](v14, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v12);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    sub_21F683808();
    swift_allocError();
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    swift_task_dealloc();
    v2 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v2();
}

uint64_t sub_21F6831A0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6831DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 88);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68322C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t result;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716374();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASHeartbeatController heartbeatDidFail", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  *(_BYTE *)(v1 + 80) = 0;
  if (*(_QWORD *)(v1 + 72))
  {
    swift_retain();
    sub_21F7162D8();
    swift_release();
  }
  result = MEMORY[0x2207CC5BC](v1 + 16);
  if (result)
  {
    sub_21F690188();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_21F683360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t sub_21F683394()
{
  return swift_deallocObject();
}

void sub_21F6833A8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  char v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];

  sub_21F64D4C0(a6, 9, 9);
  v12 = v11 & 1;
  if (qword_2554DA718 != -1)
    swift_once();
  v13 = sub_21F715F3C();
  __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
  sub_21F65604C(a5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21F65604C(a5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_21F715F24();
  v15 = sub_21F716350();
  if (os_log_type_enabled(v14, v15))
  {
    v27 = a1;
    v28 = a3;
    v16 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v29[0] = v26;
    *(_DWORD *)v16 = 136446978;
    sub_21F65604C(a5);
    v17 = sub_21F64AA40(a5);
    v18 = v12;
    v20 = v19;
    sub_21F655E14(a5);
    sub_21F644208(v17, v20, v29);
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F655E14(a5);
    sub_21F655E14(a5);
    *(_WORD *)(v16 + 12) = 2082;
    if ((v18 & 1) != 0)
    {
      v21 = 0;
      v22 = 0xE000000000000000;
    }
    else
    {
      sub_21F68384C();
      v21 = sub_21F71644C();
      v22 = v23;
    }
    sub_21F644208(v21, v22, v29);
    sub_21F716428();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_21F644208(v27, a2, v29);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 32) = 2082;
    if (a4)
      v24 = v28;
    else
      v24 = 0;
    if (a4)
      v25 = a4;
    else
      v25 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_21F644208(v24, v25, v29);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v14, v15, "PASHeartbeatController %{public}s heartbeat at %{public}s - %{public}s - %{public}s", (uint8_t *)v16, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v26, -1, -1);
    MEMORY[0x2207CC514](v16, -1, -1);

  }
  else
  {
    sub_21F655E14(a5);
    sub_21F655E14(a5);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_21F68370C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  void (*v9)(char *, uint64_t);
  uint64_t result;
  uint64_t v11;

  v0 = sub_21F715DE0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - v5;
  sub_21F715DD4();
  sub_21F6C4930((uint64_t)v4);
  sub_21F715DA4();
  v8 = round(v7);
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  result = ((uint64_t (*)(char *, uint64_t))v9)(v6, v0);
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
    return (uint64_t)v8;
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_21F683808()
{
  unint64_t result;

  result = qword_2554DD918;
  if (!qword_2554DD918)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C000, &type metadata for PASHeartbeatError);
    atomic_store(result, (unint64_t *)&qword_2554DD918);
  }
  return result;
}

unint64_t sub_21F68384C()
{
  unint64_t result;

  result = qword_2554DD920;
  if (!qword_2554DD920)
  {
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, &qword_2554DD920);
  }
  return result;
}

uint64_t sub_21F683890()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F6838B4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6838E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_21F651418;
  return sub_21F6823B4(a1, v4, v5, v7, v6);
}

uint64_t sub_21F683958()
{
  return swift_deallocObject();
}

uint64_t sub_21F683968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F651418;
  v4[5] = a1;
  v4[6] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6839C8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6839F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  v5[5] = a1;
  v5[6] = v4;
  return swift_task_switch();
}

ValueMetadata *type metadata accessor for PASHeartbeatParameters()
{
  return &type metadata for PASHeartbeatParameters;
}

uint64_t storeEnumTagSinglePayload for PASHeartbeatError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F683AA8 + 4 * byte_21F71BD60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F683AC8 + 4 * byte_21F71BD65[v4]))();
}

_BYTE *sub_21F683AA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F683AC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F683AD0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F683AD8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F683AE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F683AE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASHeartbeatError()
{
  return &type metadata for PASHeartbeatError;
}

unint64_t sub_21F683B08(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F683B3C();
  a1[2] = sub_21F683B80();
  result = sub_21F683BC4();
  a1[3] = result;
  return result;
}

unint64_t sub_21F683B3C()
{
  unint64_t result;

  result = qword_2554DD958;
  if (!qword_2554DD958)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BEF4, &type metadata for PASHeartbeatError);
    atomic_store(result, (unint64_t *)&qword_2554DD958);
  }
  return result;
}

unint64_t sub_21F683B80()
{
  unint64_t result;

  result = qword_2554DD960;
  if (!qword_2554DD960)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BEAC, &type metadata for PASHeartbeatError);
    atomic_store(result, (unint64_t *)&qword_2554DD960);
  }
  return result;
}

unint64_t sub_21F683BC4()
{
  unint64_t result;

  result = qword_2554DD968;
  if (!qword_2554DD968)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BE84, &type metadata for PASHeartbeatError);
    atomic_store(result, (unint64_t *)&qword_2554DD968);
  }
  return result;
}

unint64_t sub_21F683C0C()
{
  unint64_t result;

  result = qword_2554DD970;
  if (!qword_2554DD970)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71BFC8, &type metadata for PASHeartbeatError);
    atomic_store(result, (unint64_t *)&qword_2554DD970);
  }
  return result;
}

unint64_t sub_21F683C54()
{
  uint64_t *v0;

  return sub_21F6A1AAC(*v0);
}

unint64_t sub_21F683C5C()
{
  _QWORD *v0;

  if (*v0)
    return 0xD00000000000002BLL;
  else
    return 0xD000000000000029;
}

uint64_t sub_21F683C9C()
{
  sub_21F6863F4();
  return sub_21F7168C0();
}

uint64_t sub_21F683CC4()
{
  sub_21F6863F4();
  return sub_21F7168B4();
}

uint64_t PASFlowStepPersonalSignIn.firstName.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_account) + 16), sel_aa_firstName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_21F716104();

  return v3;
}

uint64_t PASFlowStepPersonalSignIn.__allocating_init(delegate:account:compainionDevice:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F683D74(a1, a2, a3, a4, sub_21F6861DC);
}

uint64_t PASFlowStepPersonalSignIn.init(delegate:account:compainionDevice:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F683D74(a1, a2, a3, a4, sub_21F68609C);
}

uint64_t sub_21F683D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  v12 = a5(a1, a3, a4, v5, ObjectType, a2);
  swift_unknownObjectRelease();
  return v12;
}

void *PASFlowStepPersonalSignIn.nextStep()()
{
  void *v0;
  uint64_t v1;
  id *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  uint64_t v19;

  v2 = (id *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result);
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result + 8);
  if (v3 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v12 = 0xD000000000000030;
    *(_QWORD *)(v12 + 8) = 0x800000021F727A40;
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    *(_BYTE *)(v12 + 32) = 1;
LABEL_11:
    swift_willThrow();
    return v0;
  }
  v0 = *v2;
  if ((v3 & 1) != 0)
  {
    sub_21F686240(*v2, 1);
    if (qword_2554DA718 != -1)
      swift_once();
    v13 = sub_21F715F3C();
    __swift_project_value_buffer(v13, (uint64_t)static PASLogger.common);
    sub_21F686240(v0, 1);
    sub_21F686240(v0, 1);
    v14 = sub_21F715F24();
    v15 = sub_21F71635C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138543362;
      sub_21F686240(v0, 1);
      v19 = _swift_stdlib_bridgeErrorToNSError();
      sub_21F716428();
      *v17 = v19;
      sub_21F68624C(v0, v3);
      sub_21F68624C(v0, v3);
      _os_log_impl(&dword_21F63C000, v14, v15, "PASFlowStepPersonalSignIn nextStep finished with error %{public}@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v17, -1, -1);
      MEMORY[0x2207CC514](v16, -1, -1);
    }
    else
    {
      sub_21F68624C(v0, v3);
      sub_21F68624C(v0, v3);
    }

    goto LABEL_11;
  }
  v4 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v5 = MEMORY[0x2207CC5BC](v4);
  v6 = *(_QWORD *)(v4 + 8);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_account);
  v8 = objc_allocWithZone(MEMORY[0x24BDB4398]);
  sub_21F686270(v0, v3);
  swift_retain();
  v9 = objc_msgSend(v8, sel_init);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE060E0]), sel_initWithAccountStore_, v9);

  type metadata accessor for PASFlowStepAIDASignIn();
  v11 = swift_allocObject();
  v0 = (void *)sub_21F685E50(v5, v6, v7, (uint64_t)v0, (uint64_t)v10, v11);
  swift_unknownObjectRelease();
  sub_21F647438((unint64_t *)&unk_2554DD990, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepAIDASignIn, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  return v0;
}

uint64_t PASFlowStepPersonalSignIn.performSignIn(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_21F684148()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepPersonalSignIn performSignIn", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  v6 = objc_msgSend(*(id *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_account) + 16), sel_username);
  if (v6)
  {
    v7 = v6;
    v8 = sub_21F716104();
    v10 = v9;

    *(_QWORD *)(v0 + 48) = v10;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v11;
    *v11 = v0;
    v11[1] = sub_21F684310;
    v13 = *(_QWORD *)(v0 + 32);
    v12 = *(_QWORD *)(v0 + 40);
    v11[15] = v10;
    v11[16] = v13;
    v11[13] = v12;
    v11[14] = v8;
    v11[12] = v0 + 16;
    return swift_task_switch();
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 40);
    sub_21F686288();
    v16 = swift_allocError();
    *v17 = 0;
    v18 = v15 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result;
    v19 = *(void **)(v15 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result);
    *(_QWORD *)v18 = v16;
    LOBYTE(v17) = *(_BYTE *)(v18 + 8);
    *(_BYTE *)(v18 + 8) = 1;
    sub_21F68624C(v19, v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F684310()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F684374()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  *(_BYTE *)(v0 + 24) = 0;
  swift_bridgeObjectRelease();
  v1 = *(_BYTE *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = v1;
  sub_21F68624C(v3, v4);
  sub_21F7162A8();
  *(_QWORD *)(v0 + 72) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F684414()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v1 = v0[8];
  swift_bridgeObjectRelease();
  v2 = v0[5] + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = v1;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = 1;
  sub_21F68624C(v3, v4);
  sub_21F7162A8();
  v0[9] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6844B0()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6844E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  return swift_task_switch();
}

uint64_t sub_21F684508()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(void **)(*(_QWORD *)(v0[13] + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_account) + 16);
  v0[17] = v1;
  v2 = v1;
  objc_msgSend(v2, sel_markAllPropertiesDirty);
  v3 = (_QWORD *)swift_task_alloc();
  v0[18] = v3;
  *v3 = v0;
  v3[1] = sub_21F684594;
  v4 = v0[13];
  v3[25] = v2;
  v3[26] = v4;
  return swift_task_switch();
}

uint64_t sub_21F684594()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = (_QWORD *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = (void *)v2[17];
    v2[20] = v3;
    v4 = v3;
    v5 = (_QWORD *)swift_task_alloc();
    v2[21] = v5;
    *v5 = v2;
    v5[1] = sub_21F684640;
    v6 = v2[13];
    v5[21] = v4;
    v5[22] = v6;
  }
  return swift_task_switch();
}

uint64_t sub_21F684640()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6846A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);

  v1 = v0[13];
  swift_retain();
  sub_21F656B5C((uint64_t)(v0 + 2));
  swift_release();
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_companionDevice);
  v5 = (uint64_t *)(*(_QWORD *)(v1
                             + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__anisetteDataProvider)
                 + 16);
  swift_beginAccess();
  v6 = *v5;
  if (*v5)
  {
    swift_retain();
    v7 = v6;
  }
  else
  {
    v8 = qword_2554DA6A0;
    swift_retain();
    if (v8 != -1)
      swift_once();
    v7 = sub_21F63F7C0();
    *v5 = v7;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[23] = v7;
  swift_unknownObjectRetain();
  swift_release();
  v11 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  v0[24] = v9;
  *v9 = v0;
  v9[1] = sub_21F684834;
  return v11(v0[14], v0[15], v0[16], v4, 0, v7, v2, v3);
}

uint64_t sub_21F684834(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 208) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6848B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(void **)(v0 + 136);
  v3 = *(_QWORD **)(v0 + 96);

  *v3 = v1;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68490C()
{
  uint64_t v0;
  void *v1;
  void **v2;
  id v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 80) = v1;
  v2 = (void **)(v0 + 88);
  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if (swift_dynamicCast() && (v4 = *v2) != 0)
  {

    if (qword_2554DA718 != -1)
      swift_once();
    v5 = sub_21F715F3C();
    __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
    v6 = sub_21F715F24();
    v7 = sub_21F716374();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_21F63C000, v6, v7, "PASFlowStepPersonalSignIn performSignIn could not remove existing account. Trying to takeValues fromModifiedAccount instead", v8, 2u);
      MEMORY[0x2207CC514](v8, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 136);

    objc_msgSend(v4, sel_takeValuesFromModifiedAccount_, v9);
    *(_QWORD *)(v0 + 160) = v4;
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_21F684640;
    v11 = *(_QWORD *)(v0 + 104);
    v10[21] = v4;
    v10[22] = v11;
    return swift_task_switch();
  }
  else
  {

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F684AC0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F684AFC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F684B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 208) = v1;
  return swift_task_switch();
}

uint64_t sub_21F684BA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;

  v0[27] = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__accountStore;
  swift_retain();
  sub_21F6569C8((uint64_t)(v0 + 2));
  swift_release();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(int **)(v2 + 56);
  v4 = *v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[28] = v5;
  *v5 = v0;
  v5[1] = sub_21F684C84;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))((char *)v3 + v4))(v0[25], v1, v2);
}

uint64_t sub_21F684C84(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F684D34()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(void **)(v0 + 232);
  v2 = v1;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (!v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  if (qword_2554DA718 != -1)
    swift_once();
  v3 = sub_21F715F3C();
  *(_QWORD *)(v0 + 248) = __swift_project_value_buffer(v3, (uint64_t)static PASLogger.common);
  v4 = v2;
  v5 = sub_21F715F24();
  v6 = sub_21F716374();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 141558274;
    *(_QWORD *)(v0 + 176) = 1752392040;
    sub_21F716428();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = objc_msgSend(v4, sel_identifier);
    v10 = v9;
    if (v9)
      *(_QWORD *)(v0 + 192) = v9;
    else
      *(_QWORD *)(v0 + 184) = 0;
    sub_21F716428();
    *v8 = v10;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepPersonalSignIn removeAccountIfExists found existing account: %{mask.hash}@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);
  }
  else
  {

  }
  swift_retain();
  sub_21F6569C8(v0 + 56);
  swift_release();
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v12);
  v14 = *(int **)(v13 + 32);
  v15 = *v14;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v16;
  *v16 = v0;
  v16[1] = sub_21F685000;
  return ((uint64_t (*)(id, uint64_t, uint64_t))((char *)v14 + v15))(v4, v12, v13);
}

uint64_t sub_21F685000(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 264) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 272) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_21F6850BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  NSObject *v5;
  uint8_t *v6;
  os_log_type_t v7;
  const char *v8;

  v1 = *(unsigned __int8 *)(v0 + 272);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(NSObject **)(v0 + 232);
  if ((_DWORD)v1 != 1)
  {
    if (v4)
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      v7 = v3;
      v8 = "PASFlowStepPersonalSignIn removeAccountIfExists failed";
      goto LABEL_6;
    }
LABEL_7:

    v2 = v5;
    goto LABEL_8;
  }
  if (!v4)
    goto LABEL_7;
  v6 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v6 = 0;
  v7 = v3;
  v8 = "PASFlowStepPersonalSignIn removeAccountIfExists success";
LABEL_6:
  _os_log_impl(&dword_21F63C000, v2, v7, v8, v6, 2u);
  MEMORY[0x2207CC514](v6, -1, -1);

LABEL_8:
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6851F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14[2];

  v14[1] = *MEMORY[0x24BDAC8D0];
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 240);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 240);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getErrorValue();
    v11 = sub_21F7168CC();
    *(_QWORD *)(v0 + 144) = sub_21F644208(v11, v12, v14);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepPersonalSignIn removeAccountIfExists error finding existing account: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F685420()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 264);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 264);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v16[0] = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_21F7168CC();
    *(_QWORD *)(v0 + 168) = sub_21F644208(v9, v10, v16);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepPersonalSignIn removeAccountIfExists failed: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 264);

  }
  v12 = *(void **)(v0 + 264);
  v13 = *(void **)(v0 + 232);
  sub_21F686288();
  swift_allocError();
  *v14 = v13;
  swift_willThrow();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F685634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 168) = a1;
  *(_QWORD *)(v2 + 176) = v1;
  return swift_task_switch();
}

void sub_21F68564C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[23] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepPersonalSignIn saveAccount", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = (void *)v0[21];

  v0[24] = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__accountStore;
  swift_retain();
  sub_21F6569C8((uint64_t)(v0 + 2));
  swift_release();
  v6 = v0[5];
  v7 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
  v8 = objc_msgSend(v5, sel_accountType);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_identifier);

    if (v10)
    {
      v11 = sub_21F716104();
      v13 = v12;

      v0[25] = v13;
      v15 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 48) + *(_QWORD *)(v7 + 48));
      v14 = (_QWORD *)swift_task_alloc();
      v0[26] = v14;
      *v14 = v0;
      v14[1] = sub_21F685818;
      v15(v11, v13, v6, v7);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_21F685818(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F68587C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 216);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (v1)
  {
    v2 = *(void **)(v0 + 216);
    objc_msgSend(*(id *)(v0 + 168), sel_setAccountType_, v2);

  }
  swift_retain();
  sub_21F6569C8(v0 + 56);
  swift_release();
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v3);
  v7 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v5;
  *v5 = v0;
  v5[1] = sub_21F685954;
  return v7(*(_QWORD *)(v0 + 168), v3, v4);
}

uint64_t sub_21F685954(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 232) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 240) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_21F6859CC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 240));
}

uint64_t sub_21F685A04()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v1 = *(void **)(v0 + 232);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  swift_getErrorValue();
  v2 = v1;
  v3 = sub_21F7168E4();

  v4 = *(void **)(v0 + 232);
  if (v3 == 5)
  {
    v5 = v4;
    v6 = v4;
    v7 = sub_21F715F24();
    v8 = sub_21F71635C();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(void **)(v0 + 232);
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v12;
      *(_DWORD *)v11 = 136446210;
      swift_getErrorValue();
      v13 = sub_21F7168CC();
      *(_QWORD *)(v0 + 160) = sub_21F644208(v13, v14, &v16);
      sub_21F716428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_21F63C000, v7, v8, "PASFlowStepPersonalSignIn saveAccount failed with error: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v12, -1, -1);
      MEMORY[0x2207CC514](v11, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    swift_willThrow();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

void PASFlowStepPersonalSignIn.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepPersonalSignIn.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21F685C7C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  sub_21F68624C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result + 8));
}

uint64_t PASFlowStepPersonalSignIn.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  sub_21F68624C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result + 8));
  return v0;
}

uint64_t PASFlowStepPersonalSignIn.__deallocating_deinit()
{
  PASFlowStepPersonalSignIn.deinit();
  return swift_deallocClassInstance();
}

void *sub_21F685E1C()
{
  return PASFlowStepPersonalSignIn.nextStep()();
}

uint64_t sub_21F685E30(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_21F685E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD v23[5];
  _QWORD v24[5];

  v24[3] = sub_21F6864C0();
  v24[4] = &protocol witness table for AIDAServiceOwnersManager;
  v24[0] = a5;
  v23[3] = type metadata accessor for PASAccountWithImage();
  v23[4] = sub_21F647438(&qword_2554DE3E0, (uint64_t (*)(uint64_t))type metadata accessor for PASAccountWithImage, (uint64_t)&protocol conformance descriptor for PASAccountWithImage);
  v23[0] = a3;
  v12 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(a6 + v12) = v13;
  v14 = a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result;
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = -1;
  sub_21F647710((uint64_t)v23, a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account);
  *(_QWORD *)(a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_authResults) = a4;
  sub_21F647710((uint64_t)v24, a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_serviceOwnersManager);
  v15 = a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v16 = qword_2554DA718;
    swift_retain();
    if (v16 != -1)
      swift_once();
    v17 = sub_21F715F3C();
    __swift_project_value_buffer(v17, (uint64_t)static PASLogger.common);
    v18 = sub_21F715F24();
    v19 = sub_21F716368();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_21F63C000, v18, v19, "PASTargetFlowStepBase delegate is nil in init", v20, 2u);
      MEMORY[0x2207CC514](v20, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v15 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v21 = PASFlowStepBase.init()();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  return v21;
}

uint64_t sub_21F68609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__anisetteDataProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE700);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(a4 + v10) = v11;
  v12 = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(a4 + v12) = v13;
  v14 = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v15 = swift_allocObject();
  *(_QWORD *)(a4 + v14) = v15;
  v16 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result;
  *(_BYTE *)(v16 + 8) = -1;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_account) = a2;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_companionDevice) = a3;
  *(_QWORD *)(v15 + 48) = 0;
  v17 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(_QWORD *)(v17 + 8) = a6;
  swift_unknownObjectWeakAssign();
  return PASFlowStepBase.init()();
}

uint64_t sub_21F6861DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;

  v11 = swift_allocObject();
  return sub_21F68609C(a1, a2, a3, v11, a5, a6);
}

id sub_21F686240(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_21F68624C(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_21F686264(a1, a2 & 1);
}

void sub_21F686264(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

id sub_21F686270(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_21F686240(result, a2 & 1);
  return result;
}

unint64_t sub_21F686288()
{
  unint64_t result;

  result = qword_2554DD9A8;
  if (!qword_2554DD9A8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C1AC, &type metadata for PASFlowStepPersonalSignInError);
    atomic_store(result, &qword_2554DD9A8);
  }
  return result;
}

uint64_t sub_21F6862CC(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DD9E0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepPersonalSignIn, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepPersonalSignIn()
{
  uint64_t result;

  result = qword_2554DDA10;
  if (!qword_2554DDA10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F686344()
{
  return type metadata accessor for PASFlowStepPersonalSignIn();
}

uint64_t sub_21F68634C()
{
  return swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for PASFlowStepPersonalSignInError()
{
  return &type metadata for PASFlowStepPersonalSignInError;
}

unint64_t sub_21F6863C0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6863F4();
  a1[2] = sub_21F686438();
  result = sub_21F68647C();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6863F4()
{
  unint64_t result;

  result = qword_2554DDC10;
  if (!qword_2554DDC10)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C150, &type metadata for PASFlowStepPersonalSignInError);
    atomic_store(result, (unint64_t *)&qword_2554DDC10);
  }
  return result;
}

unint64_t sub_21F686438()
{
  unint64_t result;

  result = qword_2554DDC18;
  if (!qword_2554DDC18)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C108, &type metadata for PASFlowStepPersonalSignInError);
    atomic_store(result, (unint64_t *)&qword_2554DDC18);
  }
  return result;
}

unint64_t sub_21F68647C()
{
  unint64_t result;

  result = qword_2554DDC20;
  if (!qword_2554DDC20)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C0E0, &type metadata for PASFlowStepPersonalSignInError);
    atomic_store(result, &qword_2554DDC20);
  }
  return result;
}

unint64_t sub_21F6864C0()
{
  unint64_t result;

  result = qword_2554DDC40;
  if (!qword_2554DDC40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554DDC40);
  }
  return result;
}

BOOL sub_21F6864FC(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_21F68650C()
{
  return sub_21F71692C();
}

uint64_t sub_21F686530()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

BOOL sub_21F686574(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F6864FC(*a1, *a2);
}

uint64_t sub_21F686580()
{
  return sub_21F686530();
}

uint64_t sub_21F686588()
{
  return sub_21F68650C();
}

uint64_t sub_21F686590()
{
  sub_21F716920();
  sub_21F68650C();
  return sub_21F716968();
}

uint64_t MessageSessionTransport.onReceive(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v7;
  __int128 v9;

  v9 = *v3;
  v7 = *((_QWORD *)v3 + 2);
  sub_21F6866A4(*((_QWORD *)v3 + 3));
  *(_OWORD *)a3 = v9;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = a1;
  *(_QWORD *)(a3 + 32) = a2;
  *(_OWORD *)(a3 + 40) = *(__int128 *)((char *)v3 + 40);
  return swift_retain();
}

uint64_t MessageSessionTransport.onInvalidation(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 *v3;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v9 = v3[1];
  v10 = *v3;
  v7 = *((_QWORD *)v3 + 4);
  sub_21F6866A4(*((_QWORD *)v3 + 5));
  *(_OWORD *)a3 = v10;
  *(_OWORD *)(a3 + 16) = v9;
  *(_QWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = a1;
  *(_QWORD *)(a3 + 48) = a2;
  return swift_retain();
}

uint64_t sub_21F6866A4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t MessageSessionTransport.build()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  __int128 v11;

  v4 = *(_QWORD *)(v2 + 24);
  if (v4)
  {
    v6 = *(_QWORD *)(v2 + 32);
    swift_retain();
    MessageSessionTransport.activate(with:)(v4, v6, a1, a2);
    return sub_21F6866A4(v4);
  }
  else
  {

    v11 = *(_OWORD *)(v2 + 8);
    sub_21F686788((uint64_t)&v11);
    sub_21F6866A4(*(_QWORD *)(v2 + 40));
    v9 = type metadata accessor for MessageSessionTransport.Failure(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v8);
    MEMORY[0x2207CC46C](&unk_21F71C460, v9);
    swift_allocError();
    *v10 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_21F686788(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for MessageSessionTransport.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageSessionTransport.Failure);
}

__n128 MessageSessionTransport.activate(with:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __n128 result;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t aBlock;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD *v35;

  v5 = v4;
  sub_21F715EAC();
  swift_allocObject();
  v10 = sub_21F715EA0();
  sub_21F715E88();
  swift_allocObject();
  v11 = sub_21F715E7C();
  v25 = *(id *)v4;
  v12 = (void *)sub_21F7160E0();
  v13 = (_QWORD *)swift_allocObject();
  v26 = *(_QWORD *)(a3 + 16);
  v27 = *(_QWORD *)(a3 + 24);
  v13[2] = v26;
  v13[3] = v27;
  v13[4] = v11;
  v13[5] = a1;
  v28 = v10;
  v29 = v11;
  v13[6] = a2;
  v13[7] = v10;
  v34 = sub_21F686C0C;
  v35 = v13;
  aBlock = MEMORY[0x24BDAC760];
  v31 = 1107296256;
  v32 = sub_21F687240;
  v33 = &block_descriptor_2;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v25, sel_registerRequestID_options_handler_, v12, 0, v14);
  _Block_release(v14);

  v15 = *(_QWORD *)(v4 + 24);
  v16 = *(_QWORD *)(v5 + 40);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v26;
  *(_QWORD *)(v17 + 24) = v27;
  v18 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)v5;
  *(_OWORD *)(v17 + 48) = v18;
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v5 + 32);
  *(_QWORD *)(v17 + 80) = *(_QWORD *)(v5 + 48);
  v34 = sub_21F687454;
  v35 = (_QWORD *)v17;
  aBlock = MEMORY[0x24BDAC760];
  v31 = 1107296256;
  v32 = sub_21F67FF04;
  v33 = &block_descriptor_6;
  v19 = _Block_copy(&aBlock);
  v20 = v25;
  swift_bridgeObjectRetain();
  sub_21F68747C(v15);
  sub_21F68747C(v16);
  swift_release();
  objc_msgSend(v20, sel_setInvalidationHandler_, v19);
  _Block_release(v19);
  objc_msgSend(v20, sel_activate);
  v22 = type metadata accessor for ActivatedMessageSessionTransport(0, v26, v27, v21);
  _s21ProximityAppleIDSetup32ActivatedMessageSessionTransportV21destinationIdentifier33_C75EFC377189F044D610653B1F91726FLL10Foundation4UUIDVvpfi_0();
  *(_BYTE *)(a4 + *(int *)(v22 + 48)) = 0;
  v23 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v5;
  *(_OWORD *)(a4 + 16) = v23;
  result = *(__n128 *)(v5 + 32);
  *(__n128 *)(a4 + 32) = result;
  *(_QWORD *)(a4 + 48) = *(_QWORD *)(v5 + 48);
  *(_QWORD *)(a4 + 56) = v28;
  *(_QWORD *)(a4 + 64) = v29;
  return result;
}

id MessageSessionTransport.session.getter()
{
  id *v0;

  return *v0;
}

uint64_t MessageSessionTransport.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

double MessageSessionTransport.init(session:identifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double result;

  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  result = 0.0;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  return result;
}

uint64_t sub_21F686AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a6;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a9;
  v20[5] = a10;
  v20[6] = a2;
  v20[7] = a5;
  v20[8] = v23;
  v20[9] = a7;
  v20[10] = a8;
  v20[11] = a3;
  v20[12] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21F6B4038((uint64_t)v18, (uint64_t)&unk_2554DDF18, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_21F686BD8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F686C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_21F686AA8(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[2], v4[3]);
}

uint64_t sub_21F686C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[28] = v12;
  v8[29] = v13;
  v8[26] = v10;
  v8[27] = v11;
  v8[24] = a7;
  v8[25] = a8;
  v8[22] = a5;
  v8[23] = a6;
  v8[21] = a4;
  v8[30] = *(_QWORD *)(v12 - 8);
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  v8[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F686CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _BYTE *v4;
  void (*v5)(uint64_t, _QWORD, unint64_t);
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  int *v18;

  if (sub_21F6AF82C(*(_QWORD *)(v0 + 168)))
  {
    sub_21F715E70();
    v11 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 240);
    v12 = *(_QWORD *)(v0 + 248);
    v14 = *(_QWORD *)(v0 + 224);
    v15 = *(int **)(v0 + 184);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v11, v14);
    v18 = (int *)((char *)v15 + *v15);
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v16;
    *v16 = v0;
    v16[1] = sub_21F686EEC;
    return ((uint64_t (*)(_QWORD, _QWORD))v18)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 248));
  }
  else
  {
    v2 = type metadata accessor for MessageSessionTransport.Failure(0, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), v1);
    MEMORY[0x2207CC46C](&unk_21F71C460, v2);
    v3 = (void *)swift_allocError();
    *v4 = 1;
    swift_willThrow();
    v5 = *(void (**)(uint64_t, _QWORD, unint64_t))(v0 + 208);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2E8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    *(_QWORD *)(v0 + 144) = 7500389;
    *(_QWORD *)(v0 + 152) = 0xE300000000000000;
    v7 = MEMORY[0x24BEE0D00];
    sub_21F7164B8();
    swift_getErrorValue();
    v8 = sub_21F7168D8();
    *(_QWORD *)(inited + 96) = v7;
    *(_QWORD *)(inited + 72) = v8;
    *(_QWORD *)(inited + 80) = v9;
    v10 = sub_21F640AEC(inited);
    v5(4294960550, 0, v10);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F686EEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F686F50()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  void (*v6)(uint64_t, _QWORD, unint64_t);
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 280);
  v2 = sub_21F715E94();
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 264);
    v4 = *(_QWORD *)(v0 + 224);
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 8);
    v5(*(_QWORD *)(v0 + 256), v4);
    v5(v3, v4);
    v6 = *(void (**)(uint64_t, _QWORD, unint64_t))(v0 + 208);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2E8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    *(_QWORD *)(v0 + 144) = 7500389;
    *(_QWORD *)(v0 + 152) = 0xE300000000000000;
    v8 = MEMORY[0x24BEE0D00];
    sub_21F7164B8();
    swift_getErrorValue();
    v9 = sub_21F7168D8();
    *(_QWORD *)(inited + 96) = v8;
    *(_QWORD *)(inited + 72) = v9;
    *(_QWORD *)(inited + 80) = v10;
    v11 = sub_21F640AEC(inited);
    v6(4294960550, 0, v11);
    swift_bridgeObjectRelease();

  }
  else
  {
    v13 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 224);
    v16 = *(void (**)(_QWORD, _QWORD, uint64_t))(v0 + 208);
    v17 = sub_21F66BD5C(v2);
    swift_bridgeObjectRelease();
    v16(0, 0, v17);
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v18(v13, v15);
    v18(v12, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F687110()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, _QWORD, unint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 224));
  v1 = *(void **)(v0 + 280);
  v2 = *(void (**)(uint64_t, _QWORD, unint64_t))(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2E8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(v0 + 144) = 7500389;
  *(_QWORD *)(v0 + 152) = 0xE300000000000000;
  v4 = MEMORY[0x24BEE0D00];
  sub_21F7164B8();
  swift_getErrorValue();
  v5 = sub_21F7168D8();
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = v6;
  v7 = sub_21F640AEC(inited);
  v2(4294960550, 0, v7);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F687240(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  void (*v5)(uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v5 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  if (a2)
    v6 = sub_21F716044();
  else
    v6 = 0;
  v7 = sub_21F716044();
  v8 = _Block_copy(a4);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain();
  v5(v6, v7, sub_21F6893A4, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_21F687348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;

  if (!a2)
  {
    v7 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)sub_21F71602C();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v8 = sub_21F71602C();
LABEL_6:
  v9 = (id)v8;
  (*(void (**)(uint64_t, uint64_t, void *))(a4 + 16))(a4, a1, v7);

}

uint64_t sub_21F687408()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F687454()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 72);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_21F68747C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_21F687494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return MessageSessionTransport.build()(a1, a2);
}

Swift::Void __swiftcall ActivatedMessageSessionTransport.invalidate()()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;

  v2 = v0;
  *((_BYTE *)v1 + *(int *)(v0 + 48)) = 1;
  objc_msgSend(*v1, sel_invalidate);
  (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_21F6874F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21F68750C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[4];
  v0[6] = *(_QWORD *)(v1 + 16);
  v0[7] = *(_QWORD *)(v1 + 24);
  v2 = sub_21F715E94();
  v3 = sub_21F66BD5C(v2);
  v0[8] = v3;
  swift_bridgeObjectRelease();
  v4 = swift_task_alloc();
  v0[9] = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_21F6875D8;
  *(_OWORD *)(v4 + 32) = *((_OWORD *)v0 + 2);
  *(_QWORD *)(v4 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_21F6875D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F687654()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = sub_21F6AF82C(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_21F715E70();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = type metadata accessor for ActivatedMessageSessionTransport.Failure(0, *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v2);
    MEMORY[0x2207CC46C](&unk_21F71C420, v3);
    swift_allocError();
    *v4 = 1;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68771C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F687750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_21F68776C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = *(_QWORD *)(v2 + 16);
  v4[3] = *(_QWORD *)(v2 + 24);
  v4[4] = v1;
  v4[5] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAEF0);
  *v5 = v0;
  v5[1] = sub_21F687840;
  return sub_21F71686C();
}

uint64_t sub_21F687840()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6878AC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21F6878E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDF00);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = *v3;
  v10 = (void *)sub_21F7160E0();
  v11 = (void *)sub_21F71602C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_21F6892FC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F68A0A8;
  aBlock[3] = &block_descriptor_20;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_sendRequestID_options_request_responseHandler_, v10, 0, v11, v14);
  _Block_release(v14);

}

uint64_t sub_21F687A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  _BYTE *v8;

  if (a3)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDF00);
    return sub_21F716260();
  }
  else
  {
    v7 = type metadata accessor for ActivatedMessageSessionTransport.Failure(0, a5, a6, a4);
    MEMORY[0x2207CC46C](&unk_21F71C420, v7);
    swift_allocError();
    *v8 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDF00);
    return sub_21F716254();
  }
}

uint64_t ActivatedMessageSessionTransport.availableRoutes.getter()
{
  uint64_t v0;

  v0 = sub_21F6880E8((uint64_t)&unk_24E4510F0);
  swift_arrayDestroy();
  return v0;
}

uint64_t ActivatedMessageSessionTransport.send(_:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_BYTE *)(v7 + 72) = a5;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21F687B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  __int128 v12;

  v5 = *(_QWORD *)(v4 + 48);
  if ((*(_BYTE *)(*(_QWORD *)(v4 + 56) + *(int *)(v5 + 48)) & 1) != 0)
  {
    v6 = 2;
LABEL_8:
    v8 = type metadata accessor for ActivatedMessageSessionTransport.Failure(0, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a4);
    MEMORY[0x2207CC46C](&unk_21F71C420, v8);
    swift_allocError();
    *v9 = v6;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  if (*(_BYTE *)(v4 + 72) != 2 || *(_OWORD *)(v4 + 32) != 0)
  {
    v6 = 0;
    goto LABEL_8;
  }
  v11 = swift_task_alloc();
  *(_QWORD *)(v4 + 64) = v11;
  *(_QWORD *)v11 = v4;
  *(_QWORD *)(v11 + 8) = sub_21F687C80;
  v12 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v11 + 32) = v12;
  return swift_task_switch();
}

uint64_t sub_21F687C80()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

BOOL sub_21F687CC8(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_21F687CD8()
{
  return sub_21F71692C();
}

uint64_t sub_21F687CFC()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

uint64_t sub_21F687D40()
{
  uint64_t v0;

  v0 = sub_21F6880E8((uint64_t)&unk_24E4510F0);
  swift_arrayDestroy();
  return v0;
}

uint64_t sub_21F687D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;

  v14 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v14;
  *(_QWORD *)v14 = v7;
  *(_QWORD *)(v14 + 8) = sub_21F651418;
  *(_QWORD *)(v14 + 48) = a6;
  *(_QWORD *)(v14 + 56) = v6;
  *(_BYTE *)(v14 + 72) = a5;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  return swift_task_switch();
}

BOOL sub_21F687E1C(char *a1, char *a2)
{
  return sub_21F687CC8(*a1, *a2);
}

uint64_t sub_21F687E28()
{
  return sub_21F687CFC();
}

uint64_t sub_21F687E30()
{
  return sub_21F687CD8();
}

uint64_t sub_21F687E38()
{
  sub_21F716920();
  sub_21F687CD8();
  return sub_21F716968();
}

unint64_t sub_21F687E74(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v1 = result;
  v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_21F716608();
    result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDEE0);
      result = sub_21F7164DC();
      v3 = result;
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_21F716608();
      result = swift_bridgeObjectRelease();
      if (!v4)
        return v3;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return v3;
LABEL_9:
  v6 = 0;
  v7 = v3 + 56;
  v21 = v1 & 0xC000000000000001;
  v18 = v1 + 32;
  v19 = v1 & 0xFFFFFFFFFFFFFF8;
  v20 = v1;
  while (v21)
  {
    result = MEMORY[0x2207CBA94](v6, v1);
    v8 = result;
    v9 = __OFADD__(v6++, 1);
    if (v9)
      goto LABEL_26;
LABEL_18:
    sub_21F715F60();
    sub_21F689210(&qword_2554DDEE8, MEMORY[0x24BDB9B70]);
    result = sub_21F7160A4();
    v10 = -1 << *(_BYTE *)(v3 + 32);
    v11 = result & ~v10;
    v12 = v11 >> 6;
    v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
    v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      v15 = ~v10;
      sub_21F689210(&qword_2554DDEF0, MEMORY[0x24BDB9B78]);
      do
      {
        result = sub_21F7160BC();
        if ((result & 1) != 0)
        {
          result = swift_release();
          v1 = v20;
          goto LABEL_11;
        }
        v11 = (v11 + 1) & v15;
        v12 = v11 >> 6;
        v13 = *(_QWORD *)(v7 + 8 * (v11 >> 6));
        v14 = 1 << v11;
      }
      while ((v13 & (1 << v11)) != 0);
      v1 = v20;
    }
    *(_QWORD *)(v7 + 8 * v12) = v14 | v13;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v8;
    v16 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v16, 1);
    v17 = v16 + 1;
    if (v9)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_11:
    if (v6 == v4)
      return v3;
  }
  if (v6 >= *(_QWORD *)(v19 + 16))
    goto LABEL_28;
  v8 = *(_QWORD *)(v18 + 8 * v6);
  result = swift_retain();
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_18;
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21F6880E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDF08);
    v3 = sub_21F7164DC();
    v4 = 0;
    v5 = v3 + 56;
    v32 = v1;
    v33 = a1 + 32;
    v34 = v3;
    while (1)
    {
      v9 = v33 + 24 * v4;
      v11 = *(_QWORD *)v9;
      v10 = *(_QWORD *)(v9 + 8);
      v12 = *(unsigned __int8 *)(v9 + 16);
      sub_21F716920();
      sub_21F71692C();
      if (v12 <= 1)
      {
        swift_bridgeObjectRetain();
        sub_21F716134();
      }
      result = sub_21F716968();
      v14 = -1 << *(_BYTE *)(v3 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)(v5 + 8 * (v15 >> 6));
      v18 = 1 << v15;
      v19 = *(_QWORD *)(v3 + 48);
      if (((1 << v15) & v17) != 0)
      {
        v20 = ~v14;
        v22 = v12 == 2 && (v10 | v11) == 0;
        do
        {
          v23 = v19 + 24 * v15;
          result = *(_QWORD *)v23;
          v24 = *(_QWORD *)(v23 + 8);
          v25 = *(unsigned __int8 *)(v23 + 16);
          if (v25)
          {
            if (v25 == 1)
            {
              if (v12 == 1)
              {
                v26 = result == v11 && v24 == v10;
                if (v26 || (result = sub_21F716800(), (result & 1) != 0))
                {
                  v6 = v11;
                  v7 = v10;
                  v8 = 1;
LABEL_4:
                  sub_21F689368(v6, v7, v8);
                  goto LABEL_5;
                }
              }
            }
            else if (v22)
            {
              goto LABEL_5;
            }
          }
          else if (!v12)
          {
            v27 = result == v11 && v24 == v10;
            if (v27 || (result = sub_21F716800(), (result & 1) != 0))
            {
              v6 = v11;
              v7 = v10;
              v8 = 0;
              goto LABEL_4;
            }
          }
          v15 = (v15 + 1) & v20;
          v16 = v15 >> 6;
          v17 = *(_QWORD *)(v5 + 8 * (v15 >> 6));
          v18 = 1 << v15;
        }
        while ((v17 & (1 << v15)) != 0);
        v3 = v34;
        v19 = *(_QWORD *)(v34 + 48);
      }
      *(_QWORD *)(v5 + 8 * v16) = v18 | v17;
      v28 = v19 + 24 * v15;
      *(_QWORD *)v28 = v11;
      *(_QWORD *)(v28 + 8) = v10;
      *(_BYTE *)(v28 + 16) = v12;
      v29 = *(_QWORD *)(v3 + 16);
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        break;
      *(_QWORD *)(v3 + 16) = v31;
LABEL_5:
      ++v4;
      v3 = v34;
      if (v4 == v32)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t type metadata accessor for ActivatedMessageSessionTransport.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivatedMessageSessionTransport.Failure);
}

void sub_21F688328()
{
  JUMPOUT(0x2207CC46CLL);
}

uint64_t sub_21F688338(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2207CC46C](&protocol conformance descriptor for MessageSessionTransport<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F688364(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_21F68836C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21F688374(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    result = swift_release();
  if (*(_QWORD *)(a1 + 40))
    return swift_release();
  return result;
}

_QWORD *sub_21F6883C8(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  a1[2] = *(_QWORD *)(a2 + 16);
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  swift_bridgeObjectRetain();
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    a1[3] = v6;
    a1[4] = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v7;
  }
  v10 = *(_QWORD *)(a2 + 40);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 48);
    a1[5] = v10;
    a1[6] = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t sub_21F688468(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  v10 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v10)
    {
      v12 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v10;
      *(_QWORD *)(a1 + 48) = v12;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_14;
  }
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_21F688594(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[3];
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      v7 = a2[4];
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
LABEL_8:
  v9 = a2[5];
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v9)
    {
      v11 = a2[6];
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v11;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    return a1;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_14;
  }
  v10 = a2[6];
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  swift_release();
  return a1;
}

uint64_t sub_21F688678(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21F6886C0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for MessageSessionTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageSessionTransport);
}

uint64_t sub_21F688718()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21F688720()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21F715E10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_21F6887AC(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  _OWORD *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2 + 3;
    v9 = a2[3];
    v10 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v10;
    v11 = v5;
    swift_bridgeObjectRetain();
    if (v9)
    {
      v12 = a2[4];
      *((_QWORD *)a1 + 3) = v9;
      *((_QWORD *)a1 + 4) = v12;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *v8;
    }
    v13 = a2[5];
    if (v13)
    {
      v14 = a2[6];
      *((_QWORD *)a1 + 5) = v13;
      *((_QWORD *)a1 + 6) = v14;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    }
    v15 = a2[8];
    *((_QWORD *)a1 + 7) = a2[7];
    *((_QWORD *)a1 + 8) = v15;
    v16 = *(int *)(a3 + 44);
    v17 = &a1[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = sub_21F715E10();
    v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_retain();
    swift_retain();
    v20(v17, v18, v19);
    a1[*(int *)(a3 + 48)] = *((_BYTE *)a2 + *(int *)(a3 + 48));
  }
  return a1;
}

uint64_t sub_21F6888D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    swift_release();
  if (*(_QWORD *)(a1 + 40))
    swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_21F715E10();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_21F688958(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  a1[2] = *(_QWORD *)(a2 + 16);
  v9 = (_OWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = v6;
  swift_bridgeObjectRetain();
  if (v8)
  {
    v11 = *(_QWORD *)(a2 + 32);
    a1[3] = v8;
    a1[4] = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v9;
  }
  v12 = *(_QWORD *)(a2 + 40);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 48);
    a1[5] = v12;
    a1[6] = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  }
  v14 = *(_QWORD *)(a2 + 64);
  a1[7] = *(_QWORD *)(a2 + 56);
  a1[8] = v14;
  v15 = *(int *)(a3 + 44);
  v16 = (char *)a1 + v15;
  v17 = a2 + v15;
  v18 = sub_21F715E10();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_retain();
  swift_retain();
  v19(v16, v17, v18);
  *((_BYTE *)a1 + *(int *)(a3 + 48)) = *(_BYTE *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_21F688A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v10;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v11;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  v12 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v12)
    {
      v14 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v12;
      *(_QWORD *)(a1 + 48) = v14;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_15;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_14;
  }
  v13 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = v13;
  swift_retain();
  swift_release();
LABEL_15:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  v15 = *(int *)(a3 + 44);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_21F715E10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *(_BYTE *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_21F688BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(int *)(a3 + 44);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21F715E10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *(_BYTE *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_21F688C74(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[3];
  if (*(_QWORD *)(a1 + 24))
  {
    if (v8)
    {
      v9 = a2[4];
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v9;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    v10 = a2[4];
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
LABEL_8:
  v11 = a2[5];
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v11)
    {
      v13 = a2[6];
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v13;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    goto LABEL_15;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_14;
  }
  v12 = a2[6];
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  swift_release();
LABEL_15:
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_release();
  *(_QWORD *)(a1 + 64) = a2[8];
  swift_release();
  v14 = *(int *)(a3 + 44);
  v15 = a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_21F715E10();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *(_BYTE *)(a1 + *(int *)(a3 + 48)) = *((_BYTE *)a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_21F688DBC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21F688DC8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21F715E10();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v8);
  }
}

uint64_t sub_21F688E44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21F688E50(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21F715E10();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ActivatedMessageSessionTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivatedMessageSessionTransport);
}

uint64_t sub_21F688ED0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21F688ED8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F688F24 + 4 * byte_21F71C1F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F688F58 + 4 * byte_21F71C1F0[v4]))();
}

uint64_t sub_21F688F58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F688F60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F688F68);
  return result;
}

uint64_t sub_21F688F74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F688F7CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F688F80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F688F88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F688F94(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F688FE0 + 4 * byte_21F71C1FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F689014 + 4 * byte_21F71C1FA[v4]))();
}

uint64_t sub_21F689014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F68901C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F689024);
  return result;
}

uint64_t sub_21F689030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F689038);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F68903C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F689044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_21F689050()
{
  JUMPOUT(0x2207CC46CLL);
}

void sub_21F689060()
{
  JUMPOUT(0x2207CC46CLL);
}

uint64_t sub_21F689070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDED8);
    v3 = sub_21F7164DC();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_21F716920();
      swift_bridgeObjectRetain();
      sub_21F716134();
      result = sub_21F716968();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_21F716800(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_21F716800();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_21F689210(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_21F715F60();
    result = MEMORY[0x2207CC46C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_21F689250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = v4[2];
  v7 = v4[3];
  v8 = v4[5];
  v9 = type metadata accessor for ActivatedMessageSessionTransport(0, v6, v7, a4);
  sub_21F6878E0(v8, a1, v9);
}

uint64_t sub_21F689298()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDF00);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_21F6892FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2554DDF00) - 8) + 80);
  return sub_21F687A70(a1, a2, a3, v3 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_21F689368(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21F689380()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_21F6893A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_21F687348(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_21F6893AC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6893F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v3 = v1[3];
  v11 = v1[2];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = v1[10];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21F651418;
  return sub_21F686C38(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_21F6894B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t result;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD v34[3];
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  v7 = sub_21F716980();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (id *)((char *)v34 - v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v34 - v8, a1, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v35 = *v9;
    sub_21F64779C(0, (unint64_t *)&qword_2554DDF40);
    if (swift_dynamicCast())
    {
      v11 = (void *)v34[2];
      v12 = (void *)objc_opt_self();
      v36 = 0;
      v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &v36);
      v14 = (id)v36;
      if (v13)
      {
        v15 = sub_21F715D80();
        v17 = v16;

        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2E8);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
        v36 = 0x726F727265;
        v37 = 0xE500000000000000;
        sub_21F7164B8();
        *(_QWORD *)(inited + 96) = MEMORY[0x24BDCDDE8];
        *(_QWORD *)(inited + 72) = v15;
        *(_QWORD *)(inited + 80) = v17;
        sub_21F640AEC(inited);
      }
      else
      {
        v22 = v14;
        v23 = (void *)sub_21F715D50();

        swift_willThrow();
        if (qword_2554DA718 != -1)
          swift_once();
        v24 = sub_21F715F3C();
        __swift_project_value_buffer(v24, (uint64_t)static PASLogger.common);
        v25 = v23;
        v26 = v23;
        v27 = sub_21F715F24();
        v28 = sub_21F716368();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc();
          v30 = swift_slowAlloc();
          v36 = v30;
          *(_DWORD *)v29 = 136446210;
          v34[0] = v23;
          v31 = v23;
          v32 = sub_21F716128();
          v34[0] = sub_21F644208(v32, v33, &v36);
          sub_21F716428();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_21F63C000, v27, v28, "PASMessageSessionKey failed to createResponse from: %{public}s", v29, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2207CC514](v30, -1, -1);
          MEMORY[0x2207CC514](v29, -1, -1);
        }
        else
        {

        }
        sub_21F640AEC(MEMORY[0x24BEE4AF8]);

      }
      return 4294960560;
    }
    else
    {
      result = sub_21F7167F4();
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v4 + 32))(v6, v9, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2E8);
    v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_21F717EF0;
    v36 = 0x746C75736572;
    v37 = 0xE600000000000000;
    sub_21F7164B8();
    *(_QWORD *)(v19 + 96) = a2;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v19 + 72));
    (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(boxed_opaque_existential_1, v6, a2);
    sub_21F640AEC(v19);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
    return 0;
  }
  return result;
}

void sub_21F689958(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint8_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  int v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];
  uint8_t *v50;
  uint64_t v51;
  int v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t DynamicType;
  unint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;

  v6 = sub_21F71641C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v49 - v9;
  v11 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v62 = 0u;
    v63 = 0u;
    sub_21F649B5C((uint64_t)&v62);
    v60 = 0u;
    v61 = 0u;
    goto LABEL_24;
  }
  *(_QWORD *)&v60 = 0x726F727265;
  *((_QWORD *)&v60 + 1) = 0xE500000000000000;
  sub_21F7164B8();
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_21F644994((uint64_t)&DynamicType), (v15 & 1) != 0))
  {
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v62);
  }
  else
  {
    v62 = 0u;
    v63 = 0u;
  }
  sub_21F647538((uint64_t)&DynamicType);
  if (!*((_QWORD *)&v63 + 1))
  {
    sub_21F649B5C((uint64_t)&v62);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v56 = 0x746C75736572;
    v57 = 0xE600000000000000;
    sub_21F7164B8();
    if (*(_QWORD *)(a1 + 16) && (v29 = sub_21F644994((uint64_t)&DynamicType), (v30 & 1) != 0))
    {
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v29, (uint64_t)&v60);
    }
    else
    {
      v60 = 0u;
      v61 = 0u;
    }
    sub_21F647538((uint64_t)&DynamicType);
    if (*((_QWORD *)&v61 + 1))
    {
      sub_21F644FEC(&v60, &v62);
      sub_21F6429E4((uint64_t)&v62, (uint64_t)&DynamicType);
      v31 = swift_dynamicCast();
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      if (v31)
      {
        v32(v10, 0, 1, a2);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v62);
        v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        v33(v13, v10, a2);
        v33((char *)a3, v13, a2);
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
        sub_21F716980();
        swift_storeEnumTagMultiPayload();
        return;
      }
      v32(v10, 1, 1, a2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      __swift_project_boxed_opaque_existential_1(&v62, *((uint64_t *)&v63 + 1));
      DynamicType = swift_getDynamicType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDF38);
      v39 = sub_21F716128();
      v41 = v40;
      DynamicType = a2;
      swift_getMetatypeMetadata();
      v42 = sub_21F716128();
      v44 = v43;
      sub_21F655840();
      v45 = swift_allocError();
      *(_QWORD *)v46 = v39;
      *(_QWORD *)(v46 + 8) = v41;
      *(_QWORD *)(v46 + 16) = v42;
      *(_QWORD *)(v46 + 24) = v44;
      *(_BYTE *)(v46 + 32) = 2;
      v47 = sub_21F715D44();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v62);
      *a3 = v47;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
      sub_21F716980();
      swift_storeEnumTagMultiPayload();
      v38 = (void *)v45;
      goto LABEL_26;
    }
LABEL_24:
    sub_21F649B5C((uint64_t)&v60);
    DynamicType = 0;
    v59 = 0xE000000000000000;
    sub_21F7164E8();
    swift_bridgeObjectRelease();
    DynamicType = 0xD00000000000001FLL;
    v59 = 0x800000021F727D90;
    *(_QWORD *)&v62 = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DC340);
    sub_21F716128();
    sub_21F716140();
    swift_bridgeObjectRelease();
    v34 = DynamicType;
    v35 = v59;
    sub_21F655840();
    v36 = swift_allocError();
    *(_QWORD *)v37 = v34;
    *(_QWORD *)(v37 + 8) = v35;
    *(_QWORD *)(v37 + 16) = 0;
    *(_QWORD *)(v37 + 24) = 0;
    *(_BYTE *)(v37 + 32) = 4;
    *a3 = sub_21F715D44();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
    sub_21F716980();
    swift_storeEnumTagMultiPayload();
    v38 = (void *)v36;
LABEL_26:

    return;
  }
  v54 = v7;
  v55 = a3;
  v17 = DynamicType;
  v16 = v59;
  sub_21F64779C(0, &qword_2554E3110);
  sub_21F64779C(0, (unint64_t *)&qword_2554DDF40);
  v18 = sub_21F716380();
  v48 = v18;
  if (!v18)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v19 = sub_21F715F3C();
    __swift_project_value_buffer(v19, (uint64_t)static PASLogger.common);
    sub_21F647CD4(v17, v16);
    sub_21F647CD4(v17, v16);
    v20 = sub_21F715F24();
    v21 = sub_21F716368();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v53 = v20;
      v23 = swift_slowAlloc();
      v52 = v22;
      v24 = (uint8_t *)v23;
      v51 = swift_slowAlloc();
      DynamicType = v51;
      v50 = v24;
      *(_DWORD *)v24 = 136446210;
      v49[1] = (uint64_t)(v24 + 4);
      sub_21F647CD4(v17, v16);
      v49[0] = sub_21F715D5C();
      v26 = v25;
      sub_21F649BB0(v17, v16);
      *(_QWORD *)&v62 = sub_21F644208(v49[0], v26, &DynamicType);
      sub_21F716428();
      swift_bridgeObjectRelease();
      sub_21F649BB0(v17, v16);
      sub_21F649BB0(v17, v16);
      v27 = v50;
      _os_log_impl(&dword_21F63C000, v53, (os_log_type_t)v52, "PASMessageSessionKey failed to parse error response from: %{public}s", v50, 0xCu);
      v28 = v51;
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v28, -1, -1);
      MEMORY[0x2207CC514](v27, -1, -1);

      sub_21F649BB0(v17, v16);
    }
    else
    {
      sub_21F649BB0(v17, v16);
      sub_21F649BB0(v17, v16);
      sub_21F649BB0(v17, v16);

    }
    v7 = v54;
    a3 = v55;
    goto LABEL_17;
  }
  sub_21F649BB0(v17, v16);
  *v55 = v48;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DAF00);
  sub_21F716980();
  swift_storeEnumTagMultiPayload();
}

uint64_t sub_21F68A0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v4 = a4;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (!a3)
  {
    v7 = 0;
    if (!a4)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = sub_21F716044();
  if (v4)
LABEL_3:
    v4 = sub_21F716044();
LABEL_4:
  swift_retain();
  v6(a2, v7, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_21F68A168()
{
  __int128 *v0;
  _QWORD v1[4];

  sub_21F65EF28(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

unint64_t sub_21F68A1AC()
{
  sub_21F7164E8();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return 0xD000000000000022;
}

void sub_21F68A380()
{
  JUMPOUT(0x21F68A368);
}

uint64_t sub_21F68A404()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t))((char *)sub_21F68A428 + 4 * byte_21F71C4A6[*(unsigned __int8 *)(v0 + 32)]))(1000);
}

uint64_t sub_21F68A428()
{
  return 1001;
}

uint64_t sub_21F68A430()
{
  return 1002;
}

uint64_t sub_21F68A438()
{
  return 1003;
}

uint64_t sub_21F68A440()
{
  return 1004;
}

uint64_t sub_21F68A448@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = v1[1];
  v3 = v1[2] | v1[3];
  if (!(v3 | a1 | v2))
    return 1005;
  if (v3 | v2)
    v4 = 0;
  else
    v4 = a1 == 1;
  if (v4)
    return 1006;
  else
    return 1007;
}

unint64_t sub_21F68A480()
{
  __int128 *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];

  sub_21F65EF28(v0, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v2;
  sub_21F68A168();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  return sub_21F6409B8(inited);
}

void sub_21F68A504()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_21F65EF28(v0, (uint64_t)v1);
  sub_21F68A168();
}

uint64_t sub_21F68A538()
{
  sub_21F68AA04();
  return sub_21F7168C0();
}

uint64_t sub_21F68A560()
{
  sub_21F68AA04();
  return sub_21F7168B4();
}

uint64_t sub_21F68A588(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727265;
  else
    return 0x746C75736572;
}

id sub_21F68A5B8()
{
  id *v0;

  return objc_msgSend(*v0, sel_dispatchQueue);
}

id sub_21F68A5DC()
{
  id *v0;

  return objc_msgSend(*v0, sel_activate);
}

id sub_21F68A5EC()
{
  id *v0;

  return objc_msgSend(*v0, sel_invalidate);
}

uint64_t sub_21F68A5FC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_21F68A61C(a1, a2, a3, a4, a5);
}

uint64_t sub_21F68A61C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v9;
  void *v10;
  _QWORD v12[6];

  v9 = (void *)sub_21F7160E0();
  if (a3)
    a3 = (void *)sub_21F71602C();
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_21F687240;
  v12[3] = &block_descriptor_3;
  v10 = _Block_copy(v12);
  swift_retain();
  objc_msgSend(v5, sel_registerRequestID_options_handler_, v9, a3, v10);
  _Block_release(v10);

  return swift_release();
}

uint64_t sub_21F68A704(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_21F68AAD0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_21F68A724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 <= 4u)
  {
    if (((1 << a5) & 0x19) == 0)
      swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for PASMessageSessionError(uint64_t a1)
{
  return sub_21F68A78C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_21F68A78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 <= 4u)
  {
    if (((1 << a5) & 0x19) == 0)
      swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PASMessageSessionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21F68A724(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PASMessageSessionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21F68A724(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_21F68A78C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PASMessageSessionError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_21F68A78C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PASMessageSessionError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PASMessageSessionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F68A988(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 4u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_21F68A9A0(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PASMessageSessionError()
{
  return &type metadata for PASMessageSessionError;
}

unint64_t sub_21F68A9D0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F68AA04();
  a1[2] = sub_21F68AA48();
  result = sub_21F68AA8C();
  a1[3] = result;
  return result;
}

unint64_t sub_21F68AA04()
{
  unint64_t result;

  result = qword_2554DDF20;
  if (!qword_2554DDF20)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C5A8, &type metadata for PASMessageSessionError);
    atomic_store(result, (unint64_t *)&qword_2554DDF20);
  }
  return result;
}

unint64_t sub_21F68AA48()
{
  unint64_t result;

  result = qword_2554DDF28;
  if (!qword_2554DDF28)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C560, &type metadata for PASMessageSessionError);
    atomic_store(result, (unint64_t *)&qword_2554DDF28);
  }
  return result;
}

unint64_t sub_21F68AA8C()
{
  unint64_t result;

  result = qword_2554DDF30;
  if (!qword_2554DDF30)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C538, &type metadata for PASMessageSessionError);
    atomic_store(result, (unint64_t *)&qword_2554DDF30);
  }
  return result;
}

uint64_t sub_21F68AAD0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v14[6];

  v10 = (void *)sub_21F7160E0();
  if (a3)
    a3 = (void *)sub_21F71602C();
  v11 = (void *)sub_21F71602C();
  v14[4] = a5;
  v14[5] = a6;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_21F68A0A8;
  v14[3] = &block_descriptor_3;
  v12 = _Block_copy(v14);
  swift_retain();
  objc_msgSend(v6, sel_sendRequestID_options_request_responseHandler_, v10, a3, v11, v12);
  _Block_release(v12);

  return swift_release();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t PASFlowStepTargetStart.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v4 = swift_allocObject() + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v4 + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v5 = qword_2554DA718;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v6 = sub_21F715F3C();
    __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
    v7 = sub_21F715F24();
    v8 = sub_21F716368();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_21F63C000, v7, v8, "PASTargetFlowStepBase delegate is nil in init", v9, 2u);
      MEMORY[0x2207CC514](v9, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v10 = PASFlowStepBase.init()();
  swift_unknownObjectRelease();
  return v10;
}

uint64_t PASFlowStepTargetStart.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;

  v5 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v6 = qword_2554DA718;
    swift_retain();
    if (v6 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v8 = sub_21F715F24();
    v9 = sub_21F716368();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, v9, "PASTargetFlowStepBase delegate is nil in init", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v11 = PASFlowStepBase.init()();
  swift_unknownObjectRelease();
  return v11;
}

uint64_t PASFlowStepTargetStart.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  return v0;
}

uint64_t PASFlowStepTargetStart.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_21F68B040()
{
  return type metadata accessor for PASFlowStepTargetStart();
}

uint64_t type metadata accessor for PASFlowStepTargetStart()
{
  uint64_t result;

  result = qword_2554DDF70;
  if (!qword_2554DDF70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F68B084()
{
  return swift_updateClassMetadata2();
}

uint64_t PASFlowStepLocalAuth.familyMember.getter()
{
  return swift_retain();
}

uint64_t PASFlowStepLocalAuth.__allocating_init(delegate:familyMember:proxiedAuthResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;

  v8 = swift_allocObject();
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v10 = swift_allocObject();
  *(_QWORD *)(v8 + v9) = v10;
  v11 = v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result;
  *(_BYTE *)(v11 + 8) = -1;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_familyMember) = a3;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_proxiedAuthResults) = a4;
  *(_QWORD *)(v10 + 48) = 0;
  v12 = v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v13 = qword_2554DA718;
    swift_retain();
    if (v13 != -1)
      swift_once();
    v14 = sub_21F715F3C();
    __swift_project_value_buffer(v14, (uint64_t)static PASLogger.common);
    v15 = sub_21F715F24();
    v16 = sub_21F716368();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_21F63C000, v15, v16, "PASTargetFlowStepBase delegate is nil in init", v17, 2u);
      MEMORY[0x2207CC514](v17, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v12 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v18 = PASFlowStepBase.init()();
  swift_unknownObjectRelease();
  return v18;
}

uint64_t PASFlowStepLocalAuth.init(delegate:familyMember:proxiedAuthResults:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;

  v5 = v4;
  v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v11 = swift_allocObject();
  *(_QWORD *)(v5 + v10) = v11;
  v12 = v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result;
  *(_BYTE *)(v12 + 8) = -1;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_QWORD *)v12 = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_familyMember) = a3;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_proxiedAuthResults) = a4;
  *(_QWORD *)(v11 + 48) = 0;
  v13 = v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v14 = qword_2554DA718;
    swift_retain();
    if (v14 != -1)
      swift_once();
    v15 = sub_21F715F3C();
    __swift_project_value_buffer(v15, (uint64_t)static PASLogger.common);
    v16 = sub_21F715F24();
    v17 = sub_21F716368();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21F63C000, v16, v17, "PASTargetFlowStepBase delegate is nil in init", v18, 2u);
      MEMORY[0x2207CC514](v18, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v13 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v19 = PASFlowStepBase.init()();
  swift_unknownObjectRelease();
  return v19;
}

uint64_t PASFlowStepLocalAuth.performLocalAuth(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 32) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v4;
  *v4 = v2;
  v4[1] = sub_21F68B4F4;
  v4[11] = v1;
  v4[12] = a1;
  v4[10] = v2 + 16;
  return swift_task_switch();
}

uint64_t sub_21F68B4F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F68B558()
{
  _QWORD *v0;
  BOOL v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v1 = v0[6] != 0;
  v2 = v0[4] + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = v0[2];
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = v1;
  sub_21F68624C(v3, v4);
  sub_21F7162A8();
  v0[7] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F68B5F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v1 = v0[6];
  v2 = v0[4] + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = v1;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = v1 != 0;
  sub_21F68624C(v3, v4);
  sub_21F7162A8();
  v0[7] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F68B68C()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68B6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch();
}

uint64_t sub_21F68B6E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, _QWORD, uint64_t, uint64_t);

  v1 = v0[11];
  swift_retain();
  sub_21F656B5C((uint64_t)(v0 + 2));
  swift_release();
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_proxiedAuthResults);
  v0[13] = v4;
  v7 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[14] = v5;
  *v5 = v0;
  v5[1] = sub_21F68B7A4;
  return v7(v4, v0[12], v2, v3);
}

uint64_t sub_21F68B7A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[7] = v2;
  v3[8] = a1;
  v3[9] = v1;
  v3[15] = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F68B810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  v2 = sub_21F716104();
  v4 = sub_21F65D010(v2, v3, v1);
  swift_bridgeObjectRelease();
  if (!v4)
    v4 = sub_21F640AEC(MEMORY[0x24BEE4AF8]);
  v5 = *(uint64_t **)(v0 + 80);
  v6 = PASAuthResults.acceptingTerms(with:)(v4, *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v5 = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68B8B8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepLocalAuth.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  int v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22[3];
  uint64_t v23;

  v2 = (id *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result);
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result + 8);
  if (v3 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000022;
    *(_QWORD *)(v13 + 8) = 0x800000021F727DF0;
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_BYTE *)(v13 + 32) = 1;
    swift_willThrow();
  }
  else
  {
    v4 = *v2;
    if ((v3 & 1) != 0)
    {
      sub_21F686240(*v2, 1);
      sub_21F686240(v4, 1);
      if (qword_2554DA718 != -1)
        swift_once();
      v14 = sub_21F715F3C();
      __swift_project_value_buffer(v14, (uint64_t)static PASLogger.common);
      sub_21F686240(v4, 1);
      sub_21F686240(v4, 1);
      v15 = sub_21F715F24();
      v16 = sub_21F71635C();
      v1 = v16;
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v22[0] = v18;
        *(_DWORD *)v17 = 136446210;
        v23 = (uint64_t)v4;
        sub_21F686240(v4, 1);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
        v19 = sub_21F716128();
        v23 = sub_21F644208(v19, v20, v22);
        sub_21F716428();
        swift_bridgeObjectRelease();
        sub_21F68624C(v4, v3);
        sub_21F68624C(v4, v3);
        _os_log_impl(&dword_21F63C000, v15, (os_log_type_t)v1, "PASFlowStepLocalAuth failed with error:\n%{public}s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v18, -1, -1);
        MEMORY[0x2207CC514](v17, -1, -1);
      }
      else
      {
        sub_21F68624C(v4, v3);
        sub_21F68624C(v4, v3);
      }

      swift_willThrow();
      sub_21F68624C(v4, v3);
    }
    else
    {
      v5 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
      swift_beginAccess();
      v6 = MEMORY[0x2207CC5BC](v5);
      v7 = *(_QWORD *)(v5 + 8);
      v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_familyMember);
      v9 = objc_allocWithZone(MEMORY[0x24BDB4398]);
      sub_21F686270(v4, v3);
      sub_21F686270(v4, v3);
      swift_retain();
      v10 = objc_msgSend(v9, sel_init);
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE060E0]), sel_initWithAccountStore_, v10);

      type metadata accessor for PASFlowStepAIDASignIn();
      v12 = swift_allocObject();
      v1 = sub_21F68BE60(v6, v7, v8, (uint64_t)v4, (uint64_t)v11, v12);
      swift_unknownObjectRelease();
      sub_21F68624C(v4, v3);
      sub_21F647438((unint64_t *)&unk_2554DD990, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepAIDASignIn, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
    }
  }
  return v1;
}

void PASFlowStepLocalAuth.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepLocalAuth.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_21F68BCEC()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F68624C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result + 8));
}

uint64_t PASFlowStepLocalAuth.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_21F68624C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result + 8));
  return v0;
}

uint64_t PASFlowStepLocalAuth.__deallocating_deinit()
{
  PASFlowStepLocalAuth.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F68BE4C()
{
  return PASFlowStepLocalAuth.nextStep()();
}

uint64_t sub_21F68BE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD v23[5];
  _QWORD v24[5];

  v24[3] = sub_21F6864C0();
  v24[4] = &protocol witness table for AIDAServiceOwnersManager;
  v24[0] = a5;
  v23[3] = type metadata accessor for PASFamilyMember();
  v23[4] = sub_21F647438(&qword_2554E0800, (uint64_t (*)(uint64_t))type metadata accessor for PASFamilyMember, (uint64_t)&protocol conformance descriptor for PASFamilyMember);
  v23[0] = a3;
  v12 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(a6 + v12) = v13;
  v14 = a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_result;
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = -1;
  sub_21F647710((uint64_t)v23, a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_account);
  *(_QWORD *)(a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_authResults) = a4;
  sub_21F647710((uint64_t)v24, a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASFlowStepAIDASignIn_serviceOwnersManager);
  v15 = a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(a6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v16 = qword_2554DA718;
    swift_retain();
    if (v16 != -1)
      swift_once();
    v17 = sub_21F715F3C();
    __swift_project_value_buffer(v17, (uint64_t)static PASLogger.common);
    v18 = sub_21F715F24();
    v19 = sub_21F716368();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_21F63C000, v18, v19, "PASTargetFlowStepBase delegate is nil in init", v20, 2u);
      MEMORY[0x2207CC514](v20, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v15 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v21 = PASFlowStepBase.init()();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
  return v21;
}

uint64_t sub_21F68C0AC(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438((unint64_t *)&unk_2554DF9E0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepLocalAuth, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepLocalAuth()
{
  uint64_t result;

  result = qword_2554DE128;
  if (!qword_2554DE128)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F68C124()
{
  return type metadata accessor for PASFlowStepLocalAuth();
}

uint64_t sub_21F68C12C()
{
  return swift_updateClassMetadata2();
}

uint64_t Route.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 > 1u)
    return sub_21F71692C();
  sub_21F71692C();
  return sub_21F716134();
}

uint64_t sub_21F68C1FC(char a1)
{
  return *(_QWORD *)&aUnicast_0[8 * a1];
}

uint64_t sub_21F68C21C()
{
  char *v0;

  return sub_21F68C1FC(*v0);
}

uint64_t sub_21F68C224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F68CB20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F68C248()
{
  sub_21F68CA10();
  return sub_21F7169E0();
}

uint64_t sub_21F68C270()
{
  sub_21F68CA10();
  return sub_21F7169EC();
}

uint64_t sub_21F68C29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F68CC64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21F68C2C4()
{
  sub_21F68CA54();
  return sub_21F7169E0();
}

uint64_t sub_21F68C2EC()
{
  sub_21F68CA54();
  return sub_21F7169EC();
}

uint64_t sub_21F68C318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F68CCF4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21F68C340()
{
  sub_21F68CA98();
  return sub_21F7169E0();
}

uint64_t sub_21F68C368()
{
  sub_21F68CA98();
  return sub_21F7169EC();
}

uint64_t sub_21F68C390()
{
  sub_21F68CADC();
  return sub_21F7169E0();
}

uint64_t sub_21F68C3B8()
{
  sub_21F68CADC();
  return sub_21F7169EC();
}

uint64_t Route.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  char v32;
  char v33;

  v30 = a4;
  v27 = a2;
  v28 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE2B8);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v24 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE2C0);
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE2C8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE2D0);
  v29 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F68CA10();
  sub_21F7169C8();
  if (!(_BYTE)v30)
  {
    v32 = 1;
    sub_21F68CA98();
    sub_21F716704();
    v19 = v23;
    sub_21F716734();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v14);
  }
  if (v30 == 1)
  {
    v33 = 2;
    sub_21F68CA54();
    v17 = v24;
    sub_21F716704();
    v18 = v26;
    sub_21F716734();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v14);
  }
  v31 = 0;
  sub_21F68CADC();
  sub_21F716704();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v14);
}

uint64_t Route.hashValue.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_21F716920();
  sub_21F71692C();
  if (a3 <= 1u)
    sub_21F716134();
  return sub_21F716968();
}

uint64_t Route.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_21F68CD84(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_21F68C754@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_21F68CD84(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_21F68C780(_QWORD *a1)
{
  uint64_t v1;

  return Route.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_21F68C79C(uint64_t a1, uint64_t a2)
{
  return _s21ProximityAppleIDSetup5RouteO21__derived_enum_equalsySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_21F68C7B8()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_21F716920();
  sub_21F71692C();
  if (v1 <= 1)
    sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F68C840()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) && *(_BYTE *)(v0 + 16) != 1)
    return sub_21F71692C();
  sub_21F71692C();
  return sub_21F716134();
}

uint64_t sub_21F68C8B4()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_21F716920();
  sub_21F71692C();
  if (v1 <= 1)
    sub_21F716134();
  return sub_21F716968();
}

uint64_t Route.description.getter(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;

  if ((a3 & 0xFE) != 0)
    v3 = 0x74736163696E75;
  else
    v3 = a1;
  sub_21F68D26C(a1, a2, a3);
  return v3;
}

uint64_t sub_21F68C97C()
{
  uint64_t v0;

  return Route.description.getter(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t _s21ProximityAppleIDSetup5RouteO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5)
        return 1;
      return sub_21F716800();
    }
    return 0;
  }
  if (a3 != 1)
    return a6 == 2 && !(a5 | a4);
  if (a6 != 1)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_21F716800();
}

unint64_t sub_21F68CA10()
{
  unint64_t result;

  result = qword_2554DE2D8;
  if (!qword_2554DE2D8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CBFC, &type metadata for Route.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE2D8);
  }
  return result;
}

unint64_t sub_21F68CA54()
{
  unint64_t result;

  result = qword_2554DE2E0;
  if (!qword_2554DE2E0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CBAC, &type metadata for Route.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE2E0);
  }
  return result;
}

unint64_t sub_21F68CA98()
{
  unint64_t result;

  result = qword_2554DE2E8;
  if (!qword_2554DE2E8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CB5C, &type metadata for Route.PushTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE2E8);
  }
  return result;
}

unint64_t sub_21F68CADC()
{
  unint64_t result;

  result = qword_2554DE2F0;
  if (!qword_2554DE2F0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CB0C, &type metadata for Route.UnicastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE2F0);
  }
  return result;
}

uint64_t sub_21F68CB20(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x74736163696E75 && a2 == 0xE700000000000000;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656B6F5468737570 && a2 == 0xE90000000000006ELL || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C69616D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F68CC64(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6C69616D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_21F716800();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_21F68CCE0()
{
  return 0x6C69616D65;
}

uint64_t sub_21F68CCF4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_21F716800();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_21F68CD70()
{
  return 0x6E656B6F74;
}

uint64_t sub_21F68CD84(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE370);
  v3 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  v35 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE378);
  v36 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE380);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE388);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v39 = a1;
  v15 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v14);
  sub_21F68CA10();
  v16 = v40;
  sub_21F7169B0();
  if (!v16)
  {
    v32 = v6;
    v17 = v37;
    v18 = v38;
    v40 = v11;
    v19 = sub_21F7166EC();
    v20 = (char *)v19;
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      if (*(_BYTE *)(v19 + 32))
      {
        if (*(_BYTE *)(v19 + 32) == 1)
        {
          v42 = 1;
          sub_21F68CA98();
          sub_21F716668();
          v21 = v10;
          v22 = v33;
          v15 = sub_21F7166A4();
          v23 = v40;
          (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v22);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v21);
        }
        else
        {
          v43 = 2;
          sub_21F68CA54();
          sub_21F716668();
          v36 = v10;
          v37 = v20;
          v27 = v34;
          v28 = sub_21F7166A4();
          v29 = v40;
          v15 = v28;
          (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v27);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v36);
        }
      }
      else
      {
        v41 = 0;
        sub_21F68CADC();
        sub_21F716668();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v10);
        v15 = 0;
      }
    }
    else
    {
      v24 = sub_21F71653C();
      swift_allocError();
      v26 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1F8);
      v15 = (uint64_t)v13;
      *v26 = &type metadata for Route;
      sub_21F716674();
      sub_21F716530();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v10);
    }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v39);
  return v15;
}

uint64_t sub_21F68D26C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_21F68D284(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F68D2B8();
  a1[2] = sub_21F68D2FC();
  result = sub_21F68D340();
  a1[3] = result;
  return result;
}

unint64_t sub_21F68D2B8()
{
  unint64_t result;

  result = qword_2554DE2F8;
  if (!qword_2554DE2F8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for Route, &type metadata for Route);
    atomic_store(result, (unint64_t *)&qword_2554DE2F8);
  }
  return result;
}

unint64_t sub_21F68D2FC()
{
  unint64_t result;

  result = qword_2554DE300;
  if (!qword_2554DE300)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for Route, &type metadata for Route);
    atomic_store(result, (unint64_t *)&qword_2554DE300);
  }
  return result;
}

unint64_t sub_21F68D340()
{
  unint64_t result;

  result = qword_2554DE308;
  if (!qword_2554DE308)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for Route, &type metadata for Route);
    atomic_store(result, (unint64_t *)&qword_2554DE308);
  }
  return result;
}

unint64_t sub_21F68D388()
{
  unint64_t result;

  result = qword_2554DE310;
  if (!qword_2554DE310)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for Route, &type metadata for Route);
    atomic_store(result, (unint64_t *)&qword_2554DE310);
  }
  return result;
}

uint64_t destroy for Route(uint64_t a1)
{
  return sub_21F689368(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s21ProximityAppleIDSetup5RouteOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F68D26C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Route(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F68D26C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_21F689368(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Route(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_21F689368(v4, v5, v6);
  return a1;
}

uint64_t sub_21F68D4C0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_21F68D4D8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Route()
{
  return &type metadata for Route;
}

uint64_t storeEnumTagSinglePayload for Route.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F68D54C + 4 * byte_21F71C705[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F68D580 + 4 * byte_21F71C700[v4]))();
}

uint64_t sub_21F68D580(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F68D588(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F68D590);
  return result;
}

uint64_t sub_21F68D59C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F68D5A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F68D5A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F68D5B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Route.CodingKeys()
{
  return &type metadata for Route.CodingKeys;
}

ValueMetadata *type metadata accessor for Route.UnicastCodingKeys()
{
  return &type metadata for Route.UnicastCodingKeys;
}

ValueMetadata *type metadata accessor for Route.PushTokenCodingKeys()
{
  return &type metadata for Route.PushTokenCodingKeys;
}

uint64_t _s21ProximityAppleIDSetup5RouteO19PushTokenCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F68D630 + 4 * byte_21F71C70A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F68D650 + 4 * byte_21F71C70F[v4]))();
}

_BYTE *sub_21F68D630(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F68D650(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F68D658(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F68D660(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F68D668(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F68D670(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Route.EmailCodingKeys()
{
  return &type metadata for Route.EmailCodingKeys;
}

unint64_t sub_21F68D690()
{
  unint64_t result;

  result = qword_2554DE318;
  if (!qword_2554DE318)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C924, &type metadata for Route.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE318);
  }
  return result;
}

unint64_t sub_21F68D6D8()
{
  unint64_t result;

  result = qword_2554DE320;
  if (!qword_2554DE320)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C9DC, &type metadata for Route.PushTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE320);
  }
  return result;
}

unint64_t sub_21F68D720()
{
  unint64_t result;

  result = qword_2554DE328;
  if (!qword_2554DE328)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CAE4, &type metadata for Route.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE328);
  }
  return result;
}

unint64_t sub_21F68D768()
{
  unint64_t result;

  result = qword_2554DE330;
  if (!qword_2554DE330)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CA04, &type metadata for Route.UnicastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE330);
  }
  return result;
}

unint64_t sub_21F68D7B0()
{
  unint64_t result;

  result = qword_2554DE338;
  if (!qword_2554DE338)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CA2C, &type metadata for Route.UnicastCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE338);
  }
  return result;
}

unint64_t sub_21F68D7F8()
{
  unint64_t result;

  result = qword_2554DE340;
  if (!qword_2554DE340)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C94C, &type metadata for Route.PushTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE340);
  }
  return result;
}

unint64_t sub_21F68D840()
{
  unint64_t result;

  result = qword_2554DE348;
  if (!qword_2554DE348)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C974, &type metadata for Route.PushTokenCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE348);
  }
  return result;
}

unint64_t sub_21F68D888()
{
  unint64_t result;

  result = qword_2554DE350;
  if (!qword_2554DE350)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C894, &type metadata for Route.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE350);
  }
  return result;
}

unint64_t sub_21F68D8D0()
{
  unint64_t result;

  result = qword_2554DE358;
  if (!qword_2554DE358)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71C8BC, &type metadata for Route.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE358);
  }
  return result;
}

unint64_t sub_21F68D918()
{
  unint64_t result;

  result = qword_2554DE360;
  if (!qword_2554DE360)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CA54, &type metadata for Route.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE360);
  }
  return result;
}

unint64_t sub_21F68D960()
{
  unint64_t result;

  result = qword_2554DE368;
  if (!qword_2554DE368)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CA7C, &type metadata for Route.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE368);
  }
  return result;
}

uint64_t PASFlowStepProxiedAuthError.rawValue.getter(char a1)
{
  if (!a1)
    return 0xD000000000000013;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x6569786F72506F6ELL;
}

uint64_t sub_21F68DA10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F70C224(*a1, *a2);
}

uint64_t sub_21F68DA1C()
{
  return sub_21F70C890();
}

uint64_t sub_21F68DA24()
{
  return sub_21F70D378();
}

uint64_t sub_21F68DA2C()
{
  return sub_21F70D978();
}

uint64_t sub_21F68DA34@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s21ProximityAppleIDSetup27PASFlowStepProxiedAuthErrorO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21F68DA60@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = PASFlowStepProxiedAuthError.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F68DA88()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v3;
  v4 = sub_21F70E608(v1);
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F68DB04()
{
  unsigned __int8 *v0;

  return sub_21F70E608(*v0);
}

uint64_t sub_21F68DB0C()
{
  sub_21F68F4AC();
  return sub_21F7168C0();
}

uint64_t sub_21F68DB34()
{
  sub_21F68F4AC();
  return sub_21F7168B4();
}

uint64_t PASFlowStepProxiedAuth.targetDeviceKey.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetDeviceKey);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id PASFlowStepProxiedAuth.isChildAccount.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetAccount) + 16), sel_isChildAccount);
}

uint64_t PASFlowStepProxiedAuth.accountFirstName.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetAccount) + 16), sel_firstName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_21F716104();

  return v3;
}

uint64_t PASFlowStepProxiedAuth.accountUsername.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetAccount);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(*(id *)(v1 + 16), sel_appleID);
  v4 = objc_msgSend(v2, sel_formattedUsernameFromUsername_, v3);

  if (!v4)
    return 0;
  v5 = sub_21F716104();

  return v5;
}

uint64_t PASFlowStepProxiedAuth.__allocating_init(delegate:targetAccount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_allocObject();
  v6 = sub_21F68F0D8(a1, a2, a3);
  swift_release();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t PASFlowStepProxiedAuth.init(delegate:targetAccount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_21F68F0D8(a1, a2, a3);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t PASFlowStepProxiedAuth.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[36] = v0;
  v1[37] = sub_21F7162A8();
  v1[38] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[39] = v2;
  *v2 = v1;
  v2[1] = sub_21F68DE0C;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F68DE0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 328) = sub_21F716248();
  *(_QWORD *)(v2 + 336) = v3;
  return swift_task_switch();
}

uint64_t sub_21F68DE98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v24)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[36] + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__deviceProvider);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 24);
    swift_retain();
  }
  else
  {
    v3 = qword_2554DA6A0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_21F63EB84();
    v2 = v5;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_unknownObjectRelease();
  v7 = v0[5];
  if (v7)
  {
    v8 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    v9 = v0[20];
    v10 = v0[21];
    __swift_project_boxed_opaque_existential_1(v0 + 17, v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    v7 = v12;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 17));
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  }
  else
  {
    sub_21F6476AC((uint64_t)(v0 + 2), &qword_2554DA778);
    v11 = 0;
  }
  v13 = v0[36];
  v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetDeviceKey);
  swift_beginAccess();
  *v14 = v11;
  v14[1] = v7;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__sourceAppleIDExchanger);
  swift_beginAccess();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v17 = *(_QWORD *)(v15 + 24);
    swift_retain();
    v18 = v16;
  }
  else
  {
    v19 = qword_2554DA6A0;
    swift_retain();
    if (v19 != -1)
      swift_once();
    v18 = sub_21F63F1E4();
    v17 = v20;
    *(_QWORD *)(v15 + 16) = v18;
    *(_QWORD *)(v15 + 24) = v20;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[43] = v18;
  swift_unknownObjectRetain();
  swift_release();
  v21 = swift_getObjectType();
  v24 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v17 + 40) + *(_QWORD *)(v17 + 40));
  v22 = (_QWORD *)swift_task_alloc();
  v0[44] = v22;
  *v22 = v0;
  v22[1] = sub_21F68E15C;
  return v24(v21, v17);
}

uint64_t sub_21F68E15C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_unknownObjectRelease();
    *(_QWORD *)(v4 + 368) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_21F68E1D8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[36];
  v2 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_proxiedDevice);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_proxiedDevice) = v0[46];

  swift_retain();
  sub_21F6569C8((uint64_t)(v0 + 7));
  swift_release();
  v3 = v0[10];
  v4 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[47] = v5;
  *v5 = v0;
  v5[1] = sub_21F68E298;
  return v7(v3, v4);
}

uint64_t sub_21F68E298(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 384) = a1;
  *(_QWORD *)(v3 + 392) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F68E300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 384);
  swift_release();
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 384);
    v3 = type metadata accessor for PASAccountWithImage();
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = xmmword_21F717E50;
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    *(_QWORD *)(v0 + 120) = v3;
    *(_QWORD *)(v0 + 128) = sub_21F647438(&qword_2554DE3E0, (uint64_t (*)(uint64_t))type metadata accessor for PASAccountWithImage, (uint64_t)&protocol conformance descriptor for PASAccountWithImage);
    *(_QWORD *)(v0 + 96) = v4;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  v5 = *(_QWORD *)(v0 + 288) + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_localAccount;
  swift_beginAccess();
  sub_21F68F35C(v0 + 96, v5);
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68E40C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68E440()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  swift_release();
  swift_unknownObjectRelease();
  v1 = *(void **)(v0 + 360);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 272) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 280) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepProxiedAuth prepareForPresentation failed:\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F68E640()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  v1 = *(void **)(v0 + 392);
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 272) = v1;
    v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 280) = sub_21F644208(v10, v11, &v13);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepProxiedAuth prepareForPresentation failed:\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepProxiedAuth.configureContext(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetAccount) + 16), sel_appleID);
  if (!v4)
  {
    sub_21F68F3A4();
    swift_allocError();
    *v14 = 0;
    return swift_willThrow();
  }
  v5 = v4;
  sub_21F716104();

  v6 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_localAccount;
  swift_beginAccess();
  sub_21F68F3E8(v6, (uint64_t)&v22);
  if (!v23)
  {
    swift_bridgeObjectRelease();
    sub_21F6476AC((uint64_t)&v22, &qword_2554DEF00);
    sub_21F68F3A4();
    swift_allocError();
    *v15 = 1;
    return swift_willThrow();
  }
  sub_21F64756C(&v22, (uint64_t)v24);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_proxiedDevice);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v8, sel_setLinkType_, 3);
    objc_msgSend(a1, sel_setAuthenticationType_, 1);
    v9 = (void *)sub_21F7160E0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setUsername_, v9);

    v10 = v25;
    v11 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
    if (v12)
    {
      v13 = (void *)sub_21F7160E0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(a1, sel_setAltDSID_, v13);

    if (qword_2554DA6B0 != -1)
      swift_once();
    objc_msgSend(a1, sel_setAppProvidedContext_, static PASConstants.appProvidedContextDependentSetup);
    objc_msgSend(a1, sel_setProxiedDevice_, v8);
    v18 = (uint64_t *)(*(_QWORD *)(v2
                                + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__anisetteDataProvider)
                    + 16);
    swift_beginAccess();
    v19 = *v18;
    if (*v18)
    {
      swift_retain();
      v20 = v19;
    }
    else
    {
      v21 = qword_2554DA6A0;
      swift_retain();
      if (v21 != -1)
        swift_once();
      v20 = sub_21F63F7C0();
      *v18 = v20;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(a1, sel_setAnisetteDataProvider_, v20);
    swift_unknownObjectRelease();
    objc_msgSend(a1, sel_setIsUsernameEditable_, 0);
    objc_msgSend(a1, sel_setServiceType_, 1);

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_21F68F3A4();
    swift_allocError();
    *v17 = 2;
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
}

void PASFlowStepProxiedAuth.handleAuthResults(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_authResults) = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  PASFlowStepBase.setFinished()();
}

uint64_t PASFlowStepProxiedAuth.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_authResults);
  if (v1)
  {
    v2 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v3 = MEMORY[0x2207CC5BC](v2);
    v4 = *(_QWORD *)(v2 + 8);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetAccount);
    type metadata accessor for PASFlowStepProxiedTerms();
    v6 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    v0 = sub_21F68EF68(v3, v4, v5, v1, v6);
    swift_unknownObjectRelease();
    sub_21F647438(&qword_2554E3350, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepProxiedTerms, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  }
  else
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v7 = 0xD000000000000029;
    *(_QWORD *)(v7 + 8) = 0x800000021F727E90;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_BYTE *)(v7 + 32) = 1;
    swift_willThrow();
  }
  return v0;
}

void PASFlowStepProxiedAuth.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepProxiedAuth.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F68EDAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_localAccount, &qword_2554DEF00);
  return swift_bridgeObjectRelease();
}

uint64_t PASFlowStepProxiedAuth.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_localAccount, &qword_2554DEF00);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PASFlowStepProxiedAuth.__deallocating_deinit()
{
  PASFlowStepProxiedAuth.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F68EF54()
{
  return PASFlowStepProxiedAuth.nextStep()();
}

uint64_t sub_21F68EF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];

  v20[3] = type metadata accessor for PASFamilyMember();
  v20[4] = sub_21F647438(&qword_2554E0800, (uint64_t (*)(uint64_t))type metadata accessor for PASFamilyMember, (uint64_t)&protocol conformance descriptor for PASFamilyMember);
  v20[0] = a3;
  v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms__anisetteProvisioningController;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE700);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(a5 + v10) = v11;
  v12 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms__sourceAppleIDExchanger;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7F0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(a5 + v12) = v13;
  v14 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms__analyticsProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE710);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_QWORD *)(v15 + 48) = 0;
  *(_QWORD *)(a5 + v14) = v15;
  *(_QWORD *)(a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms____lazy_storage___analytics) = 0;
  v16 = a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_result;
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = -1;
  v17 = a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_termsHandler;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_QWORD *)(v17 + 32) = 0;
  sub_21F647710((uint64_t)v20, a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_account);
  *(_QWORD *)(a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepProxiedTerms_proxiedAuthResults) = a4;
  v18 = sub_21F6BC954(a1, a2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
  return v18;
}

uint64_t sub_21F68F0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;

  v4 = v3;
  v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetDeviceKey);
  *v8 = 0;
  v8[1] = 0;
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v4 + v9) = v10;
  v11 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v4 + v11) = v12;
  v13 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__anisetteDataProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE700);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v4 + v13) = v14;
  v15 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__sourceAppleIDExchanger;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7F0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v4 + v15) = v16;
  v17 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_QWORD *)(v18 + 48) = 0;
  *(_QWORD *)(v4 + v17) = v18;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_proxiedDevice) = 0;
  v19 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_localAccount;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_QWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_authResults) = 0;
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v20 = qword_2554DA718;
    swift_retain();
    if (v20 != -1)
      swift_once();
    v21 = sub_21F715F3C();
    __swift_project_value_buffer(v21, (uint64_t)static PASLogger.common);
    v22 = sub_21F715F24();
    v23 = sub_21F716368();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_21F63C000, v22, v23, "PASFlowStepProxiedAuth delegate is nil in init", v24, 2u);
      MEMORY[0x2207CC514](v24, -1, -1);
    }

  }
  *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepProxiedAuth_targetAccount) = a3;
  swift_retain();
  swift_release();
  return sub_21F6BC954(a1, a2);
}

uint64_t _s21ProximityAppleIDSetup27PASFlowStepProxiedAuthErrorO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21F68F35C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DEF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F68F3A4()
{
  unint64_t result;

  result = qword_2554DE3E8;
  if (!qword_2554DE3E8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedAuthError, &type metadata for PASFlowStepProxiedAuthError);
    atomic_store(result, (unint64_t *)&qword_2554DE3E8);
  }
  return result;
}

uint64_t sub_21F68F3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DEF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F68F434()
{
  unint64_t result;

  result = qword_2554DE408;
  if (!qword_2554DE408)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedAuthError, &type metadata for PASFlowStepProxiedAuthError);
    atomic_store(result, (unint64_t *)&qword_2554DE408);
  }
  return result;
}

unint64_t sub_21F68F478(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F68F4AC();
  a1[2] = sub_21F68F4F0();
  result = sub_21F68F534();
  a1[3] = result;
  return result;
}

unint64_t sub_21F68F4AC()
{
  unint64_t result;

  result = qword_2554DE410;
  if (!qword_2554DE410)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedAuthError, &type metadata for PASFlowStepProxiedAuthError);
    atomic_store(result, (unint64_t *)&qword_2554DE410);
  }
  return result;
}

unint64_t sub_21F68F4F0()
{
  unint64_t result;

  result = qword_2554DE418;
  if (!qword_2554DE418)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedAuthError, &type metadata for PASFlowStepProxiedAuthError);
    atomic_store(result, (unint64_t *)&qword_2554DE418);
  }
  return result;
}

unint64_t sub_21F68F534()
{
  unint64_t result;

  result = qword_2554DE420;
  if (!qword_2554DE420)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepProxiedAuthError, &type metadata for PASFlowStepProxiedAuthError);
    atomic_store(result, (unint64_t *)&qword_2554DE420);
  }
  return result;
}

uint64_t sub_21F68F57C(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DE428, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepProxiedAuth, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepProxiedAuth()
{
  uint64_t result;

  result = qword_2554DE458;
  if (!qword_2554DE458)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for PASFlowStepProxiedAuthError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F68F640 + 4 * byte_21F71CC85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F68F674 + 4 * byte_21F71CC80[v4]))();
}

uint64_t sub_21F68F674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F68F67C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F68F684);
  return result;
}

uint64_t sub_21F68F690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F68F698);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F68F69C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F68F6A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepProxiedAuthError()
{
  return &type metadata for PASFlowStepProxiedAuthError;
}

uint64_t sub_21F68F6C0()
{
  return type metadata accessor for PASFlowStepProxiedAuth();
}

uint64_t sub_21F68F6C8()
{
  return swift_updateClassMetadata2();
}

unint64_t sub_21F68F734(char a1)
{
  unint64_t result;

  result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000021;
    else
      return 0xD00000000000001ALL;
  }
  return result;
}

uint64_t sub_21F68F794(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_21F70BE3C(*a1, *a2);
}

uint64_t sub_21F68F7A0()
{
  return sub_21F70C940();
}

uint64_t sub_21F68F7A8()
{
  return sub_21F70D1E4();
}

uint64_t sub_21F68F7B0()
{
  return sub_21F70DBFC();
}

uint64_t sub_21F68F7B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21F690F64();
  *a1 = result;
  return result;
}

unint64_t sub_21F68F7E4@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_21F68F734(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_21F68F80C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70E324();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F68F888()
{
  return sub_21F70E324();
}

uint64_t sub_21F68F890()
{
  sub_21F690E50();
  return sub_21F7168C0();
}

uint64_t sub_21F68F8B8()
{
  sub_21F690E50();
  return sub_21F7168B4();
}

uint64_t property wrapper backing initializer of PASMessageSessionProvider.messageSessionStatus()
{
  return sub_21F715F78();
}

uint64_t sub_21F68F90C()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PASMessageSessionProvider.messageSessionStatusPublisher.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t PASMessageSessionProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716374();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASMessageSessionProvider deinit", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  PASMessageSessionProvider.endMessageSession()();
  sub_21F6476AC(v1 + 16, &qword_2554DE730);
  sub_21F6476AC(v1 + 56, &qword_2554DABF0);
  v6 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASMessageSessionProvider__messageSessionStatus;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return v1;
}

Swift::Void __swiftcall PASMessageSessionProvider.endMessageSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASMessageSessionProvider endMessageSession", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  swift_beginAccess();
  v6 = *(_QWORD *)(v0 + 80);
  if (v6)
  {
    v7 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v6);
    v8 = sub_21F715F24();
    v9 = sub_21F716374();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, v9, "PASHeartbeatController stop", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

    *(_BYTE *)(v7 + 80) = 0;
    if (*(_QWORD *)(v7 + 72))
    {
      swift_retain();
      sub_21F7162D8();
      swift_release();
    }
  }
  v11 = v1 + 16;
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 40))
  {
    sub_21F647710(v1 + 16, (uint64_t)&v14);
    v12 = *((_QWORD *)&v15 + 1);
    v13 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v14);
  }
  v16 = 0;
  v14 = 0u;
  v15 = 0u;
  swift_beginAccess();
  sub_21F6904EC((uint64_t)&v14, v11);
  swift_endAccess();
}

uint64_t PASMessageSessionProvider.__deallocating_deinit()
{
  PASMessageSessionProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t PASMessageSessionProvider.getMessageSession()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;

  swift_beginAccess();
  sub_21F690534(v1 + 16, (uint64_t)&v9);
  if (v10)
    return sub_21F64756C(&v9, a1);
  sub_21F6476AC((uint64_t)&v9, &qword_2554DE730);
  if (qword_2554DA718 != -1)
    swift_once();
  v4 = sub_21F715F3C();
  __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_21F63C000, v5, v6, "PASMessageSessionProvider has no message session", v7, 2u);
    MEMORY[0x2207CC514](v7, -1, -1);
  }

  sub_21F69057C();
  swift_allocError();
  *v8 = 0;
  return swift_willThrow();
}

void PASMessageSessionProvider.setMessageSession(fromTemplate:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE v7[40];
  void *v8;

  sub_21F647710(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB340);
  sub_21F6905C0();
  if (swift_dynamicCast())
  {
    v2 = v8;
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE297D0]), sel_initWithTemplate_, v8);
    if (v3)
    {
      v4 = v3;
      sub_21F6905FC(v4, v1);

    }
    else
    {
      sub_21F69057C();
      swift_allocError();
      *v6 = 2;
      swift_willThrow();
    }

  }
  else
  {
    sub_21F69057C();
    swift_allocError();
    *v5 = 1;
    swift_willThrow();
  }
}

uint64_t PASMessageSessionProvider.setMessageSession(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_21F690914((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_21F69000C()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t sub_21F690070(uint64_t a1)
{
  uint64_t v1;

  PASMessageSessionProvider.getMessageSession()(a1);
  return sub_21F691054(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_21F6900C4(uint64_t a1)
{
  uint64_t v1;

  PASMessageSessionProvider.setMessageSession(fromTemplate:)(a1);
  return sub_21F691054(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_21F690114(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v3 = *v1;
  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_21F690914((uint64_t)v6, v3, v4, v5);
  return sub_21F69104C(*(uint64_t (**)(void))(v2 + 8));
}

void sub_21F690168()
{
  PASMessageSessionProvider.endMessageSession()();
}

uint64_t sub_21F690188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_21F63C000, v6, v7, "PASMessageSessionProvider heartbeatDidFail", v8, 2u);
    MEMORY[0x2207CC514](v8, -1, -1);
  }

  v9 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  sub_21F7162A8();
  swift_retain();
  v10 = sub_21F71629C();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x24BEE6930];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v1;
  sub_21F6B4038((uint64_t)v4, (uint64_t)&unk_2554DE848, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_21F690318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  sub_21F7162A8();
  *(_QWORD *)(v4 + 24) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F690384()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_BYTE *)(v0 + 32) = 0;
  swift_retain();
  sub_21F715FB4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F690400@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21F69047C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t sub_21F6904EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F690534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_21F69057C()
{
  unint64_t result;

  result = qword_2554DE738;
  if (!qword_2554DE738)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D15C, &type metadata for PASMessageSessionProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DE738);
  }
  return result;
}

unint64_t sub_21F6905C0()
{
  unint64_t result;

  result = qword_2554DB348;
  if (!qword_2554DB348)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554DB348);
  }
  return result;
}

uint64_t sub_21F6905FC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  id v27[5];

  v27[3] = (id)sub_21F6905C0();
  v27[4] = &protocol witness table for CUMessageSession;
  v27[0] = a1;
  swift_beginAccess();
  sub_21F690534(a2 + 16, (uint64_t)&v22);
  if (v23)
  {
    sub_21F64756C(&v22, (uint64_t)v24);
    swift_beginAccess();
    v4 = *(_QWORD *)(a2 + 80);
    if (v4)
    {
      v5 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), v4);
      v6 = qword_2554DA718;
      v7 = a1;
      if (v6 != -1)
        swift_once();
      v8 = sub_21F715F3C();
      __swift_project_value_buffer(v8, (uint64_t)static PASLogger.common);
      v9 = sub_21F715F24();
      v10 = sub_21F716374();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_21F63C000, v9, v10, "PASHeartbeatController stop", v11, 2u);
        MEMORY[0x2207CC514](v11, -1, -1);
      }

      *(_BYTE *)(v5 + 80) = 0;
      if (*(_QWORD *)(v5 + 72))
      {
        swift_retain();
        sub_21F7162D8();
        swift_release();
      }
    }
    else
    {
      v13 = a1;
    }
    v14 = v25;
    v15 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
  }
  else
  {
    v12 = a1;
    sub_21F6476AC((uint64_t)&v22, &qword_2554DE730);
  }
  sub_21F647710((uint64_t)v27, (uint64_t)v24);
  swift_beginAccess();
  sub_21F6904EC((uint64_t)v24, a2 + 16);
  swift_endAccess();
  objc_msgSend(v27[0], sel_activate);
  swift_beginAccess();
  v16 = *(_QWORD *)(a2 + 80);
  if (v16)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), v16);
    sub_21F6819A0();
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v17 = sub_21F715F3C();
  __swift_project_value_buffer(v17, (uint64_t)static PASLogger.common);
  v18 = sub_21F715F24();
  v19 = sub_21F716374();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_21F63C000, v18, v19, "PASMessageSessionProvider did setMessageSession", v20, 2u);
    MEMORY[0x2207CC514](v20, -1, -1);
  }

  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
}

uint64_t sub_21F690914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[6];

  v28[3] = a3;
  v28[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  swift_beginAccess();
  sub_21F690534(a2 + 16, (uint64_t)&v23);
  if (v24)
  {
    sub_21F64756C(&v23, (uint64_t)v25);
    swift_beginAccess();
    v9 = *(_QWORD *)(a2 + 80);
    if (v9)
    {
      v10 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), v9);
      if (qword_2554DA718 != -1)
        swift_once();
      v11 = sub_21F715F3C();
      __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
      v12 = sub_21F715F24();
      v13 = sub_21F716374();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_21F63C000, v12, v13, "PASHeartbeatController stop", v14, 2u);
        MEMORY[0x2207CC514](v14, -1, -1);
      }

      *(_BYTE *)(v10 + 80) = 0;
      if (*(_QWORD *)(v10 + 72))
      {
        swift_retain();
        sub_21F7162D8();
        swift_release();
      }
    }
    v15 = v26;
    v16 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
  }
  else
  {
    sub_21F6476AC((uint64_t)&v23, &qword_2554DE730);
  }
  sub_21F647710((uint64_t)v28, (uint64_t)v25);
  swift_beginAccess();
  sub_21F6904EC((uint64_t)v25, a2 + 16);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  swift_beginAccess();
  v17 = *(_QWORD *)(a2 + 80);
  if (v17)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), v17);
    sub_21F6819A0();
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v18 = sub_21F715F3C();
  __swift_project_value_buffer(v18, (uint64_t)static PASLogger.common);
  v19 = sub_21F715F24();
  v20 = sub_21F716374();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_21F63C000, v19, v20, "PASMessageSessionProvider did setMessageSession", v21, 2u);
    MEMORY[0x2207CC514](v21, -1, -1);
  }

  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
}

uint64_t sub_21F690C3C()
{
  return type metadata accessor for PASMessageSessionProvider();
}

uint64_t type metadata accessor for PASMessageSessionProvider()
{
  uint64_t result;

  result = qword_2554DE780;
  if (!qword_2554DE780)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21F690C80()
{
  unint64_t v0;

  sub_21F690CF8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_21F690CF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2554DE790)
  {
    v0 = sub_21F715FC0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2554DE790);
  }
}

uint64_t storeEnumTagSinglePayload for PASMessageSessionProviderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F690D98 + 4 * byte_21F71CF05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F690DCC + 4 * byte_21F71CF00[v4]))();
}

uint64_t sub_21F690DCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F690DD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F690DDCLL);
  return result;
}

uint64_t sub_21F690DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F690DF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F690DF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F690DFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASMessageSessionProviderError()
{
  return &type metadata for PASMessageSessionProviderError;
}

unint64_t sub_21F690E1C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F690E50();
  a1[2] = sub_21F690E94();
  result = sub_21F690ED8();
  a1[3] = result;
  return result;
}

unint64_t sub_21F690E50()
{
  unint64_t result;

  result = qword_2554DE820;
  if (!qword_2554DE820)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D060, &type metadata for PASMessageSessionProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DE820);
  }
  return result;
}

unint64_t sub_21F690E94()
{
  unint64_t result;

  result = qword_2554DE828;
  if (!qword_2554DE828)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D018, &type metadata for PASMessageSessionProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DE828);
  }
  return result;
}

unint64_t sub_21F690ED8()
{
  unint64_t result;

  result = qword_2554DE830;
  if (!qword_2554DE830)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71CFF0, &type metadata for PASMessageSessionProviderError);
    atomic_store(result, (unint64_t *)&qword_2554DE830);
  }
  return result;
}

unint64_t sub_21F690F20()
{
  unint64_t result;

  result = qword_2554DE838;
  if (!qword_2554DE838)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D134, &type metadata for PASMessageSessionProviderError);
    atomic_store(result, &qword_2554DE838);
  }
  return result;
}

uint64_t sub_21F690F64()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_21F690FAC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F690FD8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F651418;
  return sub_21F690318(a1, v4, v5, v6);
}

uint64_t sub_21F69104C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_21F691054(uint64_t (*a1)(void))
{
  return a1();
}

void *PASDevice.current.unsafeMutableAddressor()
{
  if (qword_2554DA6C0 != -1)
    swift_once();
  return &static PASDevice.current;
}

uint64_t *PASDeviceCapability.signInForSelf.unsafeMutableAddressor()
{
  if (qword_2554DA6D8 != -1)
    swift_once();
  return &static PASDeviceCapability.signInForSelf;
}

uint64_t sub_21F6910E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  unsigned int v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[4];

  v1 = v0;
  v42[3] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)(v0 + 24) = 0;
  v2 = (uint64_t *)(v0 + 24);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDA938]), sel_init);
  *(v2 - 1) = (uint64_t)v3;
  swift_beginAccess();
  v41 = *v2;
  v4 = objc_msgSend(v3, sel_canEvaluatePolicy_error_, 1, &v41);
  v5 = (void *)v41;
  v6 = (void *)*v2;
  *v2 = v41;
  swift_endAccess();
  v7 = v5;

  v8 = (void *)*v2;
  if (*v2)
  {
    v42[0] = *v2;
    sub_21F695AF4();
    type metadata accessor for LAError(0);
    v9 = v8;
    if ((swift_dynamicCast() & 1) != 0
      && (v10 = (void *)v41,
          sub_21F695B30(&qword_2554DAC80, 255, (uint64_t (*)(uint64_t))type metadata accessor for LAError, (uint64_t)&unk_21F717C3C), sub_21F715D20(), v10, (unint64_t)(v41 + 7) <= 1))
    {
      if (qword_2554DA718 != -1)
        swift_once();
      v11 = sub_21F715F3C();
      __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
      v12 = v9;
      v13 = sub_21F715F24();
      v14 = sub_21F716374();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v39 = v1;
        v16 = swift_slowAlloc();
        v42[0] = v16;
        *(_DWORD *)v15 = 136446210;
        v17 = objc_msgSend(v12, sel_localizedDescription);
        v18 = sub_21F716104();
        v20 = v19;

        v41 = sub_21F644208(v18, v20, v42);
        sub_21F716428();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21F63C000, v13, v14, "PASBiometryEvaluator can't evaulate  - result: %{public}s", v15, 0xCu);
        swift_arrayDestroy();
        v21 = v16;
        v1 = v39;
        MEMORY[0x2207CC514](v21, -1, -1);
        MEMORY[0x2207CC514](v15, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      if (qword_2554DA718 != -1)
        swift_once();
      v22 = sub_21F715F3C();
      __swift_project_value_buffer(v22, (uint64_t)static PASLogger.common);
      v23 = v9;
      v24 = sub_21F715F24();
      v25 = sub_21F71635C();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v40 = v1;
        v27 = swift_slowAlloc();
        v42[0] = v27;
        *(_DWORD *)v26 = 136446210;
        v28 = v23;
        v29 = objc_msgSend(v28, sel_description);
        v30 = sub_21F716104();
        v32 = v31;

        v41 = sub_21F644208(v30, v32, v42);
        sub_21F716428();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21F63C000, v24, v25, "PASBiometryEvaluator failed canEvaluatePolicy\n%{public}s", v26, 0xCu);
        swift_arrayDestroy();
        v33 = v27;
        v1 = v40;
        MEMORY[0x2207CC514](v33, -1, -1);
        MEMORY[0x2207CC514](v26, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v34 = sub_21F715F3C();
    __swift_project_value_buffer(v34, (uint64_t)static PASLogger.common);
    v35 = sub_21F715F24();
    v36 = sub_21F716374();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v37 = 67240192;
      LODWORD(v42[0]) = v4;
      sub_21F716428();
      _os_log_impl(&dword_21F63C000, v35, v36, "PASBiometryEvaluator result: %{BOOL,public}d", v37, 8u);
      MEMORY[0x2207CC514](v37, -1, -1);
    }

  }
  return v1;
}

uint64_t sub_21F69166C()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_21F691698()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_biometryType);
}

uint64_t property wrapper backing initializer of PASDeviceProvider.targetDevice(uint64_t a1)
{
  return sub_21F6918A4(a1, &qword_2554DA778);
}

uint64_t PASDeviceProvider.targetDevice.getter()
{
  return sub_21F65A1C0();
}

uint64_t PASDeviceProvider.targetDevice.setter(uint64_t a1)
{
  return sub_21F691FE4(a1, (uint64_t)&unk_21F71D220, (uint64_t)&unk_21F71D248, &qword_2554DA778, "PASDeviceProvider targetDevice set %{public}s");
}

void (*PASDeviceProvider.targetDevice.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x80uLL);
  *a1 = v3;
  v3[15] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return sub_21F691778;
}

void sub_21F691778(uint64_t *a1, char a2)
{
  sub_21F692140(a1, a2, (uint64_t)&unk_21F71D220, (uint64_t)&unk_21F71D248, &qword_2554DA778, "PASDeviceProvider targetDevice set %{public}s");
}

uint64_t PASDeviceProvider.$targetDevice.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice, &qword_2554DE858);
}

uint64_t PASDeviceProvider.$targetDevice.setter(uint64_t a1)
{
  return sub_21F692318(a1, &qword_2554DE860, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice, &qword_2554DE858);
}

uint64_t (*PASDeviceProvider.$targetDevice.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE860);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE858);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

uint64_t property wrapper backing initializer of PASDeviceProvider.targetDeviceContext(uint64_t a1)
{
  return sub_21F6918A4(a1, &qword_2554DA770);
}

uint64_t sub_21F6918A4(uint64_t a1, uint64_t *a2)
{
  _BYTE v5[40];

  sub_21F647624(a1, (uint64_t)v5, a2);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_21F715F78();
  return sub_21F6476AC(a1, a2);
}

void sub_21F691908(uint64_t a1, uint64_t a2, uint64_t *a3, char *a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *format;
  uint64_t v15[5];
  uint64_t v16;

  if (qword_2554DA718 != -1)
    swift_once();
  v6 = sub_21F715F3C();
  __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v7 = sub_21F715F24();
  v8 = sub_21F716350();
  if (os_log_type_enabled(v7, v8))
  {
    format = a4;
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21F715FA8();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v11 = sub_21F716410();
    v13 = v12;
    sub_21F6476AC((uint64_t)v15, a3);
    v15[0] = sub_21F644208(v11, v13, &v16);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v7, v8, format, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t PASDeviceProvider.targetDeviceContext.getter()
{
  return sub_21F65A1C0();
}

uint64_t PASDeviceProvider.targetDeviceContext.setter(uint64_t a1)
{
  return sub_21F691FE4(a1, (uint64_t)&unk_21F71D268, (uint64_t)&unk_21F71D290, &qword_2554DA770, "PASDeviceProvider targetDeviceContext set %{public}s");
}

void (*PASDeviceProvider.targetDeviceContext.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x80uLL);
  *a1 = v3;
  v3[15] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return sub_21F691BDC;
}

void sub_21F691BDC(uint64_t *a1, char a2)
{
  sub_21F692140(a1, a2, (uint64_t)&unk_21F71D268, (uint64_t)&unk_21F71D290, &qword_2554DA770, "PASDeviceProvider targetDeviceContext set %{public}s");
}

uint64_t PASDeviceProvider.$targetDeviceContext.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext, &qword_2554DE870);
}

uint64_t PASDeviceProvider.$targetDeviceContext.setter(uint64_t a1)
{
  return sub_21F692318(a1, &qword_2554DE878, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext, &qword_2554DE870);
}

uint64_t (*PASDeviceProvider.$targetDeviceContext.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE878);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE870);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

uint64_t property wrapper backing initializer of PASDeviceProvider.sourceDevice(uint64_t a1)
{
  return sub_21F6918A4(a1, &qword_2554DA778);
}

uint64_t PASDeviceProvider.sourceDevice.getter()
{
  return sub_21F65A1C0();
}

uint64_t PASDeviceProvider.sourceDevice.setter(uint64_t a1)
{
  return sub_21F691FE4(a1, (uint64_t)&unk_21F71D2B0, (uint64_t)&unk_21F71D2D8, &qword_2554DA778, "PASDeviceProvider sourceDevice set %{public}s");
}

void (*PASDeviceProvider.sourceDevice.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x80uLL);
  *a1 = v3;
  v3[15] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return sub_21F691DC4;
}

void sub_21F691DC4(uint64_t *a1, char a2)
{
  sub_21F692140(a1, a2, (uint64_t)&unk_21F71D2B0, (uint64_t)&unk_21F71D2D8, &qword_2554DA778, "PASDeviceProvider sourceDevice set %{public}s");
}

uint64_t PASDeviceProvider.$sourceDevice.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice, &qword_2554DE858);
}

uint64_t PASDeviceProvider.$sourceDevice.setter(uint64_t a1)
{
  return sub_21F692318(a1, &qword_2554DE860, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice, &qword_2554DE858);
}

uint64_t (*PASDeviceProvider.$sourceDevice.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE860);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE858);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

uint64_t property wrapper backing initializer of PASDeviceProvider.sourceDeviceContext(uint64_t a1)
{
  return sub_21F6918A4(a1, &qword_2554DA770);
}

uint64_t PASDeviceProvider.sourceDeviceContext.getter()
{
  return sub_21F65A1C0();
}

uint64_t sub_21F691F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t v13;
  _BYTE v14[40];

  sub_21F647624(a1, (uint64_t)v14, a5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v14, (uint64_t)&v13, a5);
  swift_retain();
  sub_21F715FB4();
  sub_21F691908(a6, a7, a5, a8);
  return sub_21F6476AC((uint64_t)v14, a5);
}

uint64_t PASDeviceProvider.sourceDeviceContext.setter(uint64_t a1)
{
  return sub_21F691FE4(a1, (uint64_t)&unk_21F71D2F8, (uint64_t)&unk_21F71D320, &qword_2554DA770, "PASDeviceProvider sourceDeviceContext set %{public}s");
}

uint64_t sub_21F691FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char *a5)
{
  _BYTE v11[40];

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624(a1, (uint64_t)v11, a4);
  swift_retain();
  sub_21F715FB4();
  sub_21F691908(a2, a3, a4, a5);
  return sub_21F6476AC(a1, a4);
}

void (*PASDeviceProvider.sourceDeviceContext.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x80uLL);
  *a1 = v3;
  v3[15] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return sub_21F69211C;
}

void sub_21F69211C(uint64_t *a1, char a2)
{
  sub_21F692140(a1, a2, (uint64_t)&unk_21F71D2F8, (uint64_t)&unk_21F71D320, &qword_2554DA770, "PASDeviceProvider sourceDeviceContext set %{public}s");
}

void sub_21F692140(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5, char *a6)
{
  void *v10;
  uint64_t v11;

  v10 = (void *)*a1;
  v11 = *a1 + 40;
  if ((a2 & 1) != 0)
  {
    sub_21F647624(*a1, v11, a5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21F647624(v11, (uint64_t)v10 + 80, a5);
    swift_retain();
    sub_21F715FB4();
    sub_21F691908(a3, a4, a5, a6);
    sub_21F6476AC(v11, a5);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_21F647624((uint64_t)v10, v11, a5);
    swift_retain();
    sub_21F715FB4();
    sub_21F691908(a3, a4, a5, a6);
  }
  sub_21F6476AC((uint64_t)v10, a5);
  free(v10);
}

uint64_t PASDeviceProvider.$sourceDeviceContext.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext, &qword_2554DE870);
}

uint64_t sub_21F692298(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t PASDeviceProvider.$sourceDeviceContext.setter(uint64_t a1)
{
  return sub_21F692318(a1, &qword_2554DE878, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext, &qword_2554DE870);
}

uint64_t sub_21F692318(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_21F715F90();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*PASDeviceProvider.$sourceDeviceContext.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE878);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE870);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

void sub_21F6924B8(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_21F715F90();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_21F715F90();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t PASDeviceProvider.targetDevicePublisher.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice, &qword_2554DE858);
}

uint64_t PASDeviceProvider.targetDeviceContextPublisher.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext, &qword_2554DE870);
}

uint64_t PASDeviceProvider.sourceDevicePublisher.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice, &qword_2554DE858);
}

uint64_t PASDeviceProvider.sourceDeviceContextPublisher.getter()
{
  return sub_21F692298((uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext, &qword_2554DE870);
}

uint64_t PASDeviceProvider.setTargetDevice(_:with:)(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_21F647624(a1, (uint64_t)v5, &qword_2554DA778);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v5, (uint64_t)v4, &qword_2554DA778);
  swift_retain();
  sub_21F715FB4();
  sub_21F691908((uint64_t)&unk_21F71D220, (uint64_t)&unk_21F71D248, &qword_2554DA778, "PASDeviceProvider targetDevice set %{public}s");
  sub_21F6476AC((uint64_t)v5, &qword_2554DA778);
  sub_21F647624(a2, (uint64_t)v5, &qword_2554DA770);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v5, (uint64_t)v4, &qword_2554DA770);
  swift_retain();
  sub_21F715FB4();
  sub_21F691908((uint64_t)&unk_21F71D268, (uint64_t)&unk_21F71D290, &qword_2554DA770, "PASDeviceProvider targetDeviceContext set %{public}s");
  return sub_21F6476AC((uint64_t)v5, &qword_2554DA770);
}

uint64_t PASDeviceProvider.setSourceDevice(_:with:)(uint64_t a1, uint64_t a2)
{
  _BYTE v4[40];
  _BYTE v5[40];

  sub_21F647624(a1, (uint64_t)v5, &qword_2554DA778);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v5, (uint64_t)v4, &qword_2554DA778);
  swift_retain();
  sub_21F715FB4();
  sub_21F691908((uint64_t)&unk_21F71D2B0, (uint64_t)&unk_21F71D2D8, &qword_2554DA778, "PASDeviceProvider sourceDevice set %{public}s");
  sub_21F6476AC((uint64_t)v5, &qword_2554DA778);
  sub_21F647624(a2, (uint64_t)v5, &qword_2554DA770);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F647624((uint64_t)v5, (uint64_t)v4, &qword_2554DA770);
  swift_retain();
  sub_21F715FB4();
  sub_21F691908((uint64_t)&unk_21F71D2F8, (uint64_t)&unk_21F71D320, &qword_2554DA770, "PASDeviceProvider sourceDeviceContext set %{public}s");
  return sub_21F6476AC((uint64_t)v5, &qword_2554DA770);
}

uint64_t PASDeviceProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE858);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE870);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v3(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice, v2);
  v6(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext, v5);
  return v0;
}

uint64_t PASDeviceProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE858);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE870);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v3(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice, v2);
  v6(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_21F692A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t, char *, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE870);
  v1 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE858);
  v5 = *(_QWORD *)(v4 - 8);
  v17 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_21F647624((uint64_t)&v20, (uint64_t)v19, &qword_2554DA778);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA778);
  sub_21F715F78();
  sub_21F6476AC((uint64_t)&v20, &qword_2554DA778);
  v9 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v9(v8, v7, v4);
  v10 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_21F647624((uint64_t)&v20, (uint64_t)v19, &qword_2554DA770);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA770);
  sub_21F715F78();
  sub_21F6476AC((uint64_t)&v20, &qword_2554DA770);
  v11 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 32);
  v12 = v18;
  v11(v10, v3, v18);
  v13 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_21F647624((uint64_t)&v20, (uint64_t)v19, &qword_2554DA778);
  sub_21F715F78();
  sub_21F6476AC((uint64_t)&v20, &qword_2554DA778);
  v9(v13, v7, v17);
  v14 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext;
  v22 = 0;
  v20 = 0u;
  v21 = 0u;
  sub_21F647624((uint64_t)&v20, (uint64_t)v19, &qword_2554DA770);
  sub_21F715F78();
  sub_21F6476AC((uint64_t)&v20, &qword_2554DA770);
  v11(v14, v3, v12);
  return v0;
}

uint64_t sub_21F692C90()
{
  return sub_21F692CE0();
}

uint64_t sub_21F692CA4()
{
  return sub_21F692CE0();
}

uint64_t sub_21F692CB8()
{
  return sub_21F692CE0();
}

uint64_t sub_21F692CCC()
{
  return sub_21F692CE0();
}

uint64_t sub_21F692CE0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  return swift_release();
}

uint64_t sub_21F692D40(uint64_t a1, uint64_t a2)
{
  return sub_21F692D90(a1, a2, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDevice, &qword_2554DE858);
}

uint64_t sub_21F692D54(uint64_t a1, uint64_t a2)
{
  return sub_21F692D90(a1, a2, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__targetDeviceContext, &qword_2554DE870);
}

uint64_t sub_21F692D68(uint64_t a1, uint64_t a2)
{
  return sub_21F692D90(a1, a2, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDevice, &qword_2554DE858);
}

uint64_t sub_21F692D7C(uint64_t a1, uint64_t a2)
{
  return sub_21F692D90(a1, a2, (uint64_t)&OBJC_IVAR____TtC21ProximityAppleIDSetup17PASDeviceProvider__sourceDeviceContext, &qword_2554DE870);
}

uint64_t sub_21F692D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t PASDeviceClass.rawValue.getter(char a1)
{
  return *(_QWORD *)&aIphone_1[8 * a1];
}

uint64_t sub_21F692E20(char *a1, char *a2)
{
  return sub_21F70C6EC(*a1, *a2);
}

uint64_t sub_21F692E2C()
{
  return sub_21F70C9E8();
}

uint64_t sub_21F692E34()
{
  return sub_21F70D610();
}

uint64_t sub_21F692E3C()
{
  return sub_21F70D650();
}

uint64_t sub_21F692E44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s21ProximityAppleIDSetup14PASDeviceClassO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_21F692E70@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = PASDeviceClass.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t PASDeviceClass.displayNameKey.getter(char a1)
{
  return *(_QWORD *)&aIphone_1[8 * a1];
}

uint64_t PASDeviceClass.iconName.getter(char a1)
{
  return *(_QWORD *)&aIphone_2[8 * a1];
}

uint64_t sub_21F692ED8()
{
  char *v0;

  return PASDeviceClass.displayNameKey.getter(*v0);
}

uint64_t sub_21F692EE0()
{
  char *v0;

  return PASDeviceClass.iconName.getter(*v0);
}

id sub_21F692EE8()
{
  return PASDevice.init()((uint64_t)&static PASDevice.current);
}

id PASDevice.init()@<X0>(uint64_t a1@<X8>)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t inited;
  id v5;
  id result;
  __int128 v7;
  ValueMetadata *v8;
  _UNKNOWN **v9;

  *(_QWORD *)(a1 + 24) = &type metadata for PASDeviceClass;
  *(_QWORD *)(a1 + 32) = &protocol witness table for PASDeviceClass;
  *(_BYTE *)a1 = 3;
  if (qword_2554DA6C8 != -1)
    swift_once();
  v2 = MGGetSInt32Answer();
  v3 = 0x2010003u >> (8 * v2);
  if (v2 >= 4)
    LOBYTE(v3) = 3;
  v8 = &type metadata for PASDeviceClass;
  v9 = &protocol witness table for PASDeviceClass;
  LOBYTE(v7) = v3;
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  sub_21F64756C(&v7, a1);
  type metadata accessor for PASBiometryEvaluator();
  inited = swift_initStackObject();
  sub_21F6910E0();
  v5 = objc_msgSend(*(id *)(inited + 16), sel_biometryType);
  swift_release();
  *(_QWORD *)(a1 + 40) = v5;
  result = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  *(_QWORD *)(a1 + 48) = result;
  return result;
}

uint64_t static PASDevice.current.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2554DA6C0 != -1)
    swift_once();
  return sub_21F645048((uint64_t)&static PASDevice.current, a1);
}

uint64_t sub_21F693050()
{
  uint64_t result;

  result = sub_21F7160E0();
  qword_2554E5120 = result;
  return result;
}

uint64_t sub_21F693084(char a1)
{
  return *(_QWORD *)&aDeviceclbiomet[8 * a1];
}

uint64_t sub_21F6930A4()
{
  char *v0;

  return sub_21F693084(*v0);
}

uint64_t sub_21F6930AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F695880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6930D0()
{
  sub_21F694D94();
  return sub_21F7169E0();
}

uint64_t sub_21F6930F8()
{
  sub_21F694D94();
  return sub_21F7169EC();
}

uint64_t PASDevice.deviceClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647710(v1, a1);
}

uint64_t PASDevice.deviceBiometryType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void *PASDevice.ak_device.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

uint64_t PASDevice.init(deviceClass:biometryProvider:ak_device:)@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  ValueMetadata *v8;
  uint64_t v9;
  ValueMetadata *v10;
  _UNKNOWN **v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  ValueMetadata *v17;
  _UNKNOWN **v18;

  *(_QWORD *)(a4 + 24) = &type metadata for PASDeviceClass;
  *(_QWORD *)(a4 + 32) = &protocol witness table for PASDeviceClass;
  *(_BYTE *)a4 = 3;
  if (a1 >= 4)
    v7 = 3;
  else
    v7 = 0x2010003u >> (8 * a1);
  v17 = &type metadata for PASDeviceClass;
  v18 = &protocol witness table for PASDeviceClass;
  LOBYTE(v16) = v7;
  __swift_destroy_boxed_opaque_existential_0Tm(a4);
  sub_21F64756C(&v16, a4);
  sub_21F647624(a2, (uint64_t)&v14, &qword_2554DE890);
  if (v15)
  {
    sub_21F64756C(&v14, (uint64_t)&v16);
  }
  else
  {
    v8 = (ValueMetadata *)type metadata accessor for PASBiometryEvaluator();
    v9 = swift_allocObject();
    sub_21F6910E0();
    v17 = v8;
    v18 = &off_24E455C88;
    *(_QWORD *)&v16 = v9;
    sub_21F6476AC((uint64_t)&v14, &qword_2554DE890);
  }
  v10 = v17;
  v11 = v18;
  __swift_project_boxed_opaque_existential_1(&v16, (uint64_t)v17);
  v12 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v11[1])(v10, v11);
  sub_21F6476AC(a2, &qword_2554DE890);
  *(_QWORD *)(a4 + 40) = v12;
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v16);
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

uint64_t PASDevice.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  id v14;
  uint64_t v16;
  char *v17;
  __int128 v18;
  ValueMetadata *v19;
  _UNKNOWN **v20;
  _BYTE v21[24];
  ValueMetadata *v22;
  _UNKNOWN **v23;
  uint64_t v24;
  id v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE898);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &type metadata for PASDeviceClass;
  v23 = &protocol witness table for PASDeviceClass;
  v21[0] = 3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F694D94();
  sub_21F7169B0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
  }
  else
  {
    LOBYTE(v18) = 0;
    sub_21F7166A4();
    v9 = _s21ProximityAppleIDSetup14PASDeviceClassO8rawValueACSgSS_tcfC_0();
    v19 = &type metadata for PASDeviceClass;
    v20 = &protocol witness table for PASDeviceClass;
    if (v9 == 4)
      v10 = 3;
    else
      v10 = v9;
    LOBYTE(v18) = v10;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
    sub_21F64756C(&v18, (uint64_t)v21);
    type metadata accessor for LABiometryType(0);
    v26 = 1;
    sub_21F695B30(&qword_2554DE8A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for LABiometryType, (uint64_t)&protocol conformance descriptor for LABiometryType);
    sub_21F7166C8();
    v24 = v18;
    v26 = 2;
    sub_21F671A18();
    v17 = v8;
    sub_21F7166C8();
    v11 = v5;
    v12 = v18;
    sub_21F647CD4(v18, *((unint64_t *)&v18 + 1));
    v13 = (void *)sub_21F715D68();
    sub_21F649BB0(v12, *((unint64_t *)&v12 + 1));
    v14 = objc_msgSend((id)objc_opt_self(), sel_deviceWithSerializedData_, v13);

    sub_21F649BB0(v12, *((unint64_t *)&v12 + 1));
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v11);
    v25 = v14;
    sub_21F645048((uint64_t)v21, a2);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return sub_21F694DD8((uint64_t)v21);
  }
}

uint64_t PASDevice.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v19[2];
  char v20;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE8B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F694D94();
  sub_21F7169C8();
  v9 = v3[3];
  v10 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  LOBYTE(v19[0]) = 0;
  sub_21F716734();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v19[0] = v3[5];
    v20 = 1;
    type metadata accessor for LABiometryType(0);
    sub_21F695B30(&qword_2554DE8B8, 255, (uint64_t (*)(uint64_t))type metadata accessor for LABiometryType, (uint64_t)&protocol conformance descriptor for LABiometryType);
    sub_21F716758();
    v12 = (void *)v3[6];
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v13, sel_serializedData);
      if (v14)
      {
        v15 = v14;
        v16 = sub_21F715D80();
        v18 = v17;

      }
      else
      {
        v16 = 0;
        v18 = 0xF000000000000000;
      }
      v19[0] = v16;
      v19[1] = v18;
      v20 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554E1890);
      sub_21F694E8C(&qword_2554DE8C0, &qword_2554E1890, (uint64_t (*)(void))sub_21F6715E0, MEMORY[0x24BEE4AA8]);
      sub_21F716758();

      sub_21F649B9C(v16, v18);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t PASDevice.deviceClassCodeName.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t PASDevice.deviceBiometricKey.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1 > 2)
    return 0x454D4F49425F4F4ELL;
  else
    return *(_QWORD *)&aNoBiometouchid[8 * v1];
}

uint64_t PASDevice.deviceBiometricIconName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = 0x64696863756F74;
  if (v1 != 1)
    v2 = 0;
  if (v1 == 2)
    return 0x646965636166;
  else
    return v2;
}

uint64_t sub_21F6938A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647710(v1, a1);
}

void *sub_21F6938BC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

uint64_t sub_21F6938E0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_21F6938E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PASDevice.init(from:)(a1, a2);
}

uint64_t sub_21F6938FC(_QWORD *a1)
{
  return PASDevice.encode(to:)(a1);
}

uint64_t PASDeviceCapability.rawValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_21F693944()
{
  static PASDeviceCapability.heartbeat = 0x6165627472616568;
  unk_2554E5130 = 0xE900000000000074;
}

uint64_t *PASDeviceCapability.heartbeat.unsafeMutableAddressor()
{
  if (qword_2554DA6D0 != -1)
    swift_once();
  return &static PASDeviceCapability.heartbeat;
}

uint64_t static PASDeviceCapability.heartbeat.getter()
{
  return sub_21F693CBC(&qword_2554DA6D0, &static PASDeviceCapability.heartbeat);
}

void *PASDeviceCapability.passwordlessU13SignIn.unsafeMutableAddressor()
{
  return &static PASDeviceCapability.passwordlessU13SignIn;
}

unint64_t static PASDeviceCapability.passwordlessU13SignIn.getter()
{
  return 0xD000000000000015;
}

void sub_21F6939F4()
{
  strcpy((char *)&static PASDeviceCapability.signInForSelf, "signInForSelf");
  unk_2554E5146 = -4864;
}

uint64_t sub_21F693A24()
{
  return sub_21F65A21C();
}

uint64_t sub_21F693A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F691F00(a1, a2, a3, a4, &qword_2554DA778, (uint64_t)&unk_21F71D220, (uint64_t)&unk_21F71D248, "PASDeviceProvider targetDevice set %{public}s");
}

uint64_t sub_21F693A7C()
{
  return sub_21F65A21C();
}

uint64_t sub_21F693AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F691F00(a1, a2, a3, a4, &qword_2554DA770, (uint64_t)&unk_21F71D268, (uint64_t)&unk_21F71D290, "PASDeviceProvider targetDeviceContext set %{public}s");
}

uint64_t sub_21F693AD4()
{
  return sub_21F65A21C();
}

uint64_t sub_21F693AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F691F00(a1, a2, a3, a4, &qword_2554DA778, (uint64_t)&unk_21F71D2B0, (uint64_t)&unk_21F71D2D8, "PASDeviceProvider sourceDevice set %{public}s");
}

uint64_t sub_21F693B2C()
{
  return sub_21F65A21C();
}

uint64_t sub_21F693B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F691F00(a1, a2, a3, a4, &qword_2554DA770, (uint64_t)&unk_21F71D2F8, (uint64_t)&unk_21F71D320, "PASDeviceProvider sourceDeviceContext set %{public}s");
}

uint64_t static PASDeviceCapability.signInForSelf.getter()
{
  return sub_21F693CBC(&qword_2554DA6D8, &static PASDeviceCapability.signInForSelf);
}

void sub_21F693BA4()
{
  static PASDeviceCapability.extensions = 0x6F69736E65747865;
  unk_2554E5150 = 0xEA0000000000736ELL;
}

uint64_t *PASDeviceCapability.extensions.unsafeMutableAddressor()
{
  if (qword_2554DA6E0 != -1)
    swift_once();
  return &static PASDeviceCapability.extensions;
}

uint64_t static PASDeviceCapability.extensions.getter()
{
  return sub_21F693CBC(&qword_2554DA6E0, &static PASDeviceCapability.extensions);
}

void sub_21F693C2C()
{
  strcpy((char *)&static PASDeviceCapability.endFlowMessage, "endFlowMessage");
  unk_2554E5167 = -18;
}

uint64_t *PASDeviceCapability.endFlowMessage.unsafeMutableAddressor()
{
  if (qword_2554DA6E8 != -1)
    swift_once();
  return &static PASDeviceCapability.endFlowMessage;
}

uint64_t static PASDeviceCapability.endFlowMessage.getter()
{
  return sub_21F693CBC(&qword_2554DA6E8, &static PASDeviceCapability.endFlowMessage);
}

uint64_t sub_21F693CBC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_21F693D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DEBB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_21F71D1F0;
  if (qword_2554DA6D0 != -1)
    swift_once();
  v1 = unk_2554E5130;
  *(_QWORD *)(v0 + 32) = static PASDeviceCapability.heartbeat;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = 0xD000000000000015;
  *(_QWORD *)(v0 + 56) = 0x800000021F728010;
  v2 = qword_2554DA6D8;
  swift_bridgeObjectRetain();
  if (v2 != -1)
    swift_once();
  v3 = unk_2554E5140;
  *(_QWORD *)(v0 + 64) = static PASDeviceCapability.signInForSelf;
  *(_QWORD *)(v0 + 72) = v3;
  v4 = qword_2554DA6E0;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once();
  v5 = unk_2554E5150;
  *(_QWORD *)(v0 + 80) = static PASDeviceCapability.extensions;
  *(_QWORD *)(v0 + 88) = v5;
  v6 = qword_2554DA6E8;
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  v7 = unk_2554E5160;
  *(_QWORD *)(v0 + 96) = static PASDeviceCapability.endFlowMessage;
  *(_QWORD *)(v0 + 104) = v7;
  static PASDeviceCapability.allCases = v0;
  return swift_bridgeObjectRetain();
}

uint64_t *PASDeviceCapability.allCases.unsafeMutableAddressor()
{
  if (qword_2554DA6F0 != -1)
    swift_once();
  return &static PASDeviceCapability.allCases;
}

uint64_t static PASDeviceCapability.allCases.getter()
{
  if (qword_2554DA6F0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PASDeviceCapability.allCases.setter(uint64_t a1)
{
  if (qword_2554DA6F0 != -1)
    swift_once();
  swift_beginAccess();
  static PASDeviceCapability.allCases = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PASDeviceCapability.allCases.modify())()
{
  if (qword_2554DA6F0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *sub_21F693FE8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_21F693FF4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F694000@<X0>(_QWORD *a1@<X8>)
{
  if (qword_2554DA6F0 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = static PASDeviceCapability.allCases;
  return swift_bridgeObjectRetain();
}

uint64_t sub_21F694074()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F6940CC()
{
  swift_bridgeObjectRetain();
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F694110()
{
  sub_21F716920();
  swift_bridgeObjectRetain();
  sub_21F716134();
  swift_bridgeObjectRelease();
  return sub_21F716968();
}

uint64_t sub_21F694164()
{
  sub_21F695AB0();
  return sub_21F7161A0();
}

uint64_t sub_21F6941C0()
{
  sub_21F695AB0();
  return sub_21F716164();
}

uint64_t sub_21F69420C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_21F716800();
}

Swift::Bool __swiftcall PASDeviceContext.isCapable(of:)(ProximityAppleIDSetup::PASDeviceCapability of)
{
  uint64_t v1;

  return sub_21F694244(of.rawValue._countAndFlagsBits, (uint64_t)of.rawValue._object, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21F694244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_21F716920();
    swift_bridgeObjectRetain();
    sub_21F716134();
    swift_bridgeObjectRelease();
    v6 = sub_21F716968();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_21F716800() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_21F716800() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_21F69438C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6959FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_21F6943B4()
{
  sub_21F694E04();
  return sub_21F7169E0();
}

uint64_t sub_21F6943DC()
{
  sub_21F694E04();
  return sub_21F7169EC();
}

uint64_t PASDeviceContext.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PASDeviceContext.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PASDeviceContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE8C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F694E04();
  sub_21F7169C8();
  v9[1] = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE8D8);
  sub_21F694E8C(&qword_2554DE8E0, &qword_2554DE8D8, (uint64_t (*)(void))sub_21F694E48, MEMORY[0x24BEE1700]);
  sub_21F716758();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PASDeviceContext.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PASDeviceContext.init(from:)(a1);
  return v2;
}

uint64_t PASDeviceContext.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE8F0);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F694E04();
  sub_21F7169B0();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE8D8);
    sub_21F694E8C(&qword_2554DE8F8, &qword_2554DE8D8, (uint64_t (*)(void))sub_21F694EF0, MEMORY[0x24BEE1720]);
    sub_21F7166C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
    *(_QWORD *)(v1 + 16) = v10;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v1;
}

uint64_t sub_21F69472C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21F694244(a1, a2, *(_QWORD *)(*(_QWORD *)v2 + 16));
}

uint64_t sub_21F694738@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = PASDeviceContext.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_21F69478C(_QWORD *a1)
{
  return PASDeviceContext.encode(to:)(a1);
}

uint64_t MGDeviceClass.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169A4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_21F716830();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v3;
}

uint64_t MGDeviceClass.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169BC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_21F716854();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

uint64_t sub_21F694908@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  int v6;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169A4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v6 = sub_21F716830();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  *a2 = v6;
  return result;
}

uint64_t sub_21F6949DC(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169BC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_21F716854();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

uint64_t LABiometryType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169A4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    v3 = sub_21F716818();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v3;
}

uint64_t LABiometryType.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169BC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_21F71683C();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

uint64_t sub_21F694BC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169A4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v6 = sub_21F716818();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  *a2 = v6;
  return result;
}

uint64_t sub_21F694C9C(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F7169BC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_21F71683C();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
}

uint64_t _s21ProximityAppleIDSetup14PASDeviceClassO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_21F71665C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t type metadata accessor for PASBiometryEvaluator()
{
  return objc_opt_self();
}

unint64_t sub_21F694D94()
{
  unint64_t result;

  result = qword_2554DE8A0;
  if (!qword_2554DE8A0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71DA10, &type metadata for PASDevice.Key);
    atomic_store(result, (unint64_t *)&qword_2554DE8A0);
  }
  return result;
}

uint64_t sub_21F694DD8(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);

  return a1;
}

unint64_t sub_21F694E04()
{
  unint64_t result;

  result = qword_2554DE8D0;
  if (!qword_2554DE8D0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D9C0, &type metadata for PASDeviceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DE8D0);
  }
  return result;
}

unint64_t sub_21F694E48()
{
  unint64_t result;

  result = qword_2554DE8E8;
  if (!qword_2554DE8E8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDeviceCapability, &type metadata for PASDeviceCapability);
    atomic_store(result, (unint64_t *)&qword_2554DE8E8);
  }
  return result;
}

uint64_t sub_21F694E8C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x2207CC46C](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_21F694EF0()
{
  unint64_t result;

  result = qword_2554DE900;
  if (!qword_2554DE900)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDeviceCapability, &type metadata for PASDeviceCapability);
    atomic_store(result, (unint64_t *)&qword_2554DE900);
  }
  return result;
}

unint64_t sub_21F694F38()
{
  unint64_t result;

  result = qword_2554DE908;
  if (!qword_2554DE908)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDeviceClass, &type metadata for PASDeviceClass);
    atomic_store(result, (unint64_t *)&qword_2554DE908);
  }
  return result;
}

unint64_t sub_21F694F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554DE910;
  if (!qword_2554DE910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2554DE918);
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2554DE910);
  }
  return result;
}

unint64_t sub_21F694FD0()
{
  unint64_t result;

  result = qword_2554DE920;
  if (!qword_2554DE920)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDeviceCapability, &type metadata for PASDeviceCapability);
    atomic_store(result, (unint64_t *)&qword_2554DE920);
  }
  return result;
}

uint64_t sub_21F695014(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_21F695B30((unint64_t *)&qword_2554DB280, a2, (uint64_t (*)(uint64_t))type metadata accessor for PASDeviceContext, (uint64_t)&protocol conformance descriptor for PASDeviceContext);
  result = sub_21F695B30(&qword_2554DE928, v3, (uint64_t (*)(uint64_t))type metadata accessor for PASDeviceContext, (uint64_t)&protocol conformance descriptor for PASDeviceContext);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for PASDeviceContext()
{
  return objc_opt_self();
}

uint64_t sub_21F695090()
{
  return type metadata accessor for PASDeviceProvider();
}

uint64_t type metadata accessor for PASDeviceProvider()
{
  uint64_t result;

  result = qword_2554DEA20;
  if (!qword_2554DEA20)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21F6950D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_21F65A5AC(319, &qword_2554DEA30, &qword_2554DA778);
  if (v0 <= 0x3F)
  {
    sub_21F65A5AC(319, qword_2554DEA38, &qword_2554DA770);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t storeEnumTagSinglePayload for PASDeviceClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_21F6951CC + 4 * byte_21F71D205[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_21F695200 + 4 * byte_21F71D200[v4]))();
}

uint64_t sub_21F695200(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F695208(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F695210);
  return result;
}

uint64_t sub_21F69521C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F695224);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_21F695228(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F695230(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASDeviceClass()
{
  return &type metadata for PASDeviceClass;
}

void destroy for PASDevice(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);

}

uint64_t initializeWithCopy for PASDevice(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  id v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v5;
  return a1;
}

uint64_t *assignWithCopy for PASDevice(uint64_t *a1, uint64_t *a2)
{
  void *v4;
  void *v5;
  id v6;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  v4 = (void *)a1[6];
  v5 = (void *)a2[6];
  a1[6] = (uint64_t)v5;
  v6 = v5;

  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for PASDevice(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for PASDevice(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PASDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASDevice()
{
  return &type metadata for PASDevice;
}

ValueMetadata *type metadata accessor for PASDeviceCapability()
{
  return &type metadata for PASDeviceCapability;
}

uint64_t storeEnumTagSinglePayload for PASDeviceContext.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6955A8 + 4 * byte_21F71D20A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6955C8 + 4 * byte_21F71D20F[v4]))();
}

_BYTE *sub_21F6955A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6955C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6955D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6955D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6955E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6955E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASDeviceContext.CodingKeys()
{
  return &type metadata for PASDeviceContext.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PASDevice.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F695650 + 4 * byte_21F71D219[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F695684 + 4 * byte_21F71D214[v4]))();
}

uint64_t sub_21F695684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F69568C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F695694);
  return result;
}

uint64_t sub_21F6956A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6956A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F6956AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6956B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASDevice.Key()
{
  return &type metadata for PASDevice.Key;
}

unint64_t sub_21F6956D4()
{
  unint64_t result;

  result = qword_2554DEB78;
  if (!qword_2554DEB78)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D8E0, &type metadata for PASDevice.Key);
    atomic_store(result, (unint64_t *)&qword_2554DEB78);
  }
  return result;
}

unint64_t sub_21F69571C()
{
  unint64_t result;

  result = qword_2554DEB80;
  if (!qword_2554DEB80)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D998, &type metadata for PASDeviceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DEB80);
  }
  return result;
}

unint64_t sub_21F695764()
{
  unint64_t result;

  result = qword_2554DEB88;
  if (!qword_2554DEB88)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D908, &type metadata for PASDeviceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DEB88);
  }
  return result;
}

unint64_t sub_21F6957AC()
{
  unint64_t result;

  result = qword_2554DEB90;
  if (!qword_2554DEB90)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D930, &type metadata for PASDeviceContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2554DEB90);
  }
  return result;
}

unint64_t sub_21F6957F4()
{
  unint64_t result;

  result = qword_2554DEB98;
  if (!qword_2554DEB98)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D850, &type metadata for PASDevice.Key);
    atomic_store(result, (unint64_t *)&qword_2554DEB98);
  }
  return result;
}

unint64_t sub_21F69583C()
{
  unint64_t result;

  result = qword_2554DEBA0;
  if (!qword_2554DEBA0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71D878, &type metadata for PASDevice.Key);
    atomic_store(result, (unint64_t *)&qword_2554DEBA0);
  }
  return result;
}

uint64_t sub_21F695880(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C43656369766564 && a2 == 0xEB00000000737361;
  if (v3 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797274656D6F6962 && a2 == 0xEC00000065707954 || (sub_21F716800() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63697665645F6B61 && a2 == 0xED00006174614465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_21F6959FC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x696C696261706163 && a2 == 0xEC00000073656974)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_21F716800();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_21F695A90()
{
  return 0x696C696261706163;
}

unint64_t sub_21F695AB0()
{
  unint64_t result;

  result = qword_2554DEBA8;
  if (!qword_2554DEBA8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASDeviceCapability, &type metadata for PASDeviceCapability);
    atomic_store(result, (unint64_t *)&qword_2554DEBA8);
  }
  return result;
}

unint64_t sub_21F695AF4()
{
  unint64_t result;

  result = qword_2554DDF40;
  if (!qword_2554DDF40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554DDF40);
  }
  return result;
}

uint64_t sub_21F695B30(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2207CC46C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F695B70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_21F695B88()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_21F67F70C;
  return sub_21F708D74();
}

uint64_t sub_21F695BDC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_21F695BF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 24) + 16) + *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_21F695C4C;
  return v3();
}

uint64_t sub_21F695C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F695CC0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[5];
  v2 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255501170);
  objc_msgSend(v1, sel_setRemoteObjectInterface_, v2);

  objc_msgSend(v1, sel_resume);
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = v4;
  type metadata accessor for PASExtensionManifest();
  *v4 = v0;
  v4[1] = sub_21F695DC4;
  return sub_21F71686C();
}

uint64_t sub_21F695DC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F695E30()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21F695E64()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F695EA0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DED00);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_21F698264;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = a2;
  swift_retain();
  v11 = (void *)sub_21F697B64((uint64_t)sub_21F6984D0, v9);
  swift_release();
  aBlock[4] = sub_21F698264;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F697C60;
  aBlock[3] = &block_descriptor_72;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_fetchManifestWithCompletion_, v12);
  _Block_release(v12);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_21F696038(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_21F696050()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 32) + 16) + *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_21F6960A8;
  return v3();
}

uint64_t sub_21F6960A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F69611C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[6];
  v2 = v0[3];
  v3 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255501170);
  objc_msgSend(v1, sel_setRemoteObjectInterface_, v3);

  objc_msgSend(v1, sel_resume);
  v4 = swift_task_alloc();
  v0[7] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  type metadata accessor for PASExtensionProvidedViewDetails();
  *v5 = v0;
  v5[1] = sub_21F696224;
  return sub_21F71686C();
}

uint64_t sub_21F696224()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F696290()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21F6962C4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F696300(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECE8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_21F69808C;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = a2;
  swift_retain();
  v13 = (void *)sub_21F697B64((uint64_t)sub_21F6984D0, v11);
  swift_release();
  aBlock[4] = sub_21F69808C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F697C60;
  aBlock[3] = &block_descriptor_48;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_fetchViewDetailsWithDevicePair_completion_, a3, v14);
  _Block_release(v14);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_21F6964A0(void *a1, void *a2, id a3, uint64_t a4, uint64_t *a5, char a6)
{
  id v10;
  id v12;
  _BYTE *v13;

  objc_msgSend(a3, sel_invalidate);
  if (a2)
  {
    v10 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(a5);
    return sub_21F716254();
  }
  if (!a1)
  {
    sub_21F697EAC();
    swift_allocError();
    *v13 = a6;
    goto LABEL_3;
  }
  v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return sub_21F716260();
}

uint64_t sub_21F696564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch();
}

uint64_t sub_21F696580()
{
  objc_super *v0;
  Class super_class;
  id v2;
  objc_class *v3;
  char *v4;
  objc_class *v5;
  uint64_t (*v7)(void);

  super_class = v0[3].super_class;
  v2 = objc_msgSend(v0[3].receiver, sel_anisetteDataProvider);
  v3 = (objc_class *)type metadata accessor for AuthenticateExtras();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC21ProximityAppleIDSetupP33_6B22B88DD3ECBED0D0354FC242B14C8118AuthenticateExtras_anisetteDataProvider] = v2;
  v0[1].receiver = v4;
  v0[1].super_class = v3;
  swift_unknownObjectRetain();
  v0[4].receiver = objc_msgSendSuper2(v0 + 1, sel_init);
  swift_unknownObjectRelease();
  v7 = (uint64_t (*)(void))(**((int **)super_class + 2) + *((_QWORD *)super_class + 2));
  v5 = (objc_class *)swift_task_alloc();
  v0[4].super_class = v5;
  *(_QWORD *)v5 = v0;
  *((_QWORD *)v5 + 1) = sub_21F69664C;
  return v7();
}

uint64_t sub_21F69664C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6966B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v10 = *(_OWORD *)(v0 + 40);
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_interfaceWithProtocol_, &unk_255501170);
  objc_msgSend(v1, sel_setRemoteObjectInterface_, v4);

  objc_msgSend(v1, sel_resume);
  objc_msgSend(v1, sel_setExportedObject_, v2);
  v5 = objc_msgSend(v3, sel_interfaceWithProtocol_, &unk_2554FF400);
  v6 = objc_msgSend(v3, sel_interfaceWithProtocol_, &unk_2554FF848);
  objc_msgSend(v5, sel_setInterface_forSelector_argumentIndex_ofReply_, v6, sel_fetchExtrasWithCompletion_, 0, 1);

  objc_msgSend(v1, sel_setExportedInterface_, v5);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *(_QWORD *)(v7 + 16) = v1;
  *(_OWORD *)(v7 + 24) = v10;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAFD0);
  *v8 = v0;
  v8[1] = sub_21F69687C;
  return sub_21F71686C();
}

uint64_t sub_21F69687C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6968E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69691C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_21F69695C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6969A4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  _QWORD aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DEC98);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_21F697B10;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = a2;
  swift_retain();
  v15 = (void *)sub_21F697B64((uint64_t)sub_21F697CD8, v13);
  swift_release();
  aBlock[4] = sub_21F697B10;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F697D00;
  aBlock[3] = &block_descriptor_4;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_authenticateWithAccount_with_completion_, a3, a4, v16);
  _Block_release(v16);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_21F696B54(uint64_t a1, void *a2, id a3)
{
  id v5;
  _BYTE *v7;

  objc_msgSend(a3, sel_invalidate);
  if (a2)
  {
    v5 = a2;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DEC98);
    return sub_21F716254();
  }
  if (!a1)
  {
    sub_21F697EAC();
    swift_allocError();
    *v7 = 1;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DEC98);
  return sub_21F716260();
}

uint64_t sub_21F696C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_21F696C34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 32) + 16) + *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_21F696C8C;
  return v3();
}

uint64_t sub_21F696C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F696D00()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = (void *)v0[6];
  v3 = v0[2];
  v2 = v0[3];
  v4 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255501170);
  objc_msgSend(v1, sel_setRemoteObjectInterface_, v4);

  objc_msgSend(v1, sel_resume);
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  v5[2] = v1;
  v5[3] = v3;
  v5[4] = v2;
  v6 = (_QWORD *)swift_task_alloc();
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_21F696E00;
  return sub_21F71686C();
}

uint64_t sub_21F696E00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F696E6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_21F696EA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECC8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_21F697FC4;
  *(_QWORD *)(v7 + 24) = v6;
  swift_retain();
  v8 = (void *)sub_21F697B64((uint64_t)sub_21F6981C0, v7);
  swift_release();
  v9 = (void *)sub_21F7160E0();
  aBlock[4] = sub_21F697FC4;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F697DA8;
  aBlock[3] = &block_descriptor_60;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_signInSucceededWithAccount_completion_, v9, v10);
  _Block_release(v10);
  swift_release();
  swift_unknownObjectRelease();

}

uint64_t sub_21F697054()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F69706C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 16) + 16) + *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_21F6970C4;
  return v3();
}

uint64_t sub_21F6970C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
  else
    return swift_task_switch();
}

uint64_t sub_21F69713C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[4];
  v2 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255501170);
  objc_msgSend(v1, sel_setRemoteObjectInterface_, v2);

  objc_msgSend(v1, sel_resume);
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_21F69723C;
  return sub_21F71686C();
}

uint64_t sub_21F69723C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6972A8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 64));
}

uint64_t sub_21F6972E0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F697320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECD8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_21F698000;
  *(_QWORD *)(v7 + 24) = v6;
  swift_retain();
  v8 = (void *)sub_21F697B64((uint64_t)sub_21F698050, v7);
  swift_release();
  aBlock[4] = sub_21F698000;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F697DFC;
  aBlock[3] = &block_descriptor_36;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_shouldPerformLocalAuthenticationWithCompletion_, v9);
  _Block_release(v9);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_21F6974AC(int a1, id a2)
{
  id v2;

  if (a2)
  {
    v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECD8);
    return sub_21F716254();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECD8);
    return sub_21F716260();
  }
}

uint64_t sub_21F69751C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_21F697534()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 16) + 16) + *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_21F69758C;
  return v3();
}

uint64_t sub_21F69758C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F697600()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)v0[4];
  v2 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255501170);
  objc_msgSend(v1, sel_setRemoteObjectInterface_, v2);

  objc_msgSend(v1, sel_resume);
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  *v4 = v0;
  v4[1] = sub_21F6976F0;
  return sub_21F71686C();
}

uint64_t sub_21F6976F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F69775C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F697790()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6977CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD aBlock[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECC8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_21F697FC4;
  *(_QWORD *)(v7 + 24) = v6;
  swift_retain();
  v8 = (void *)sub_21F697B64((uint64_t)sub_21F6984D4, v7);
  swift_release();
  aBlock[4] = sub_21F697FC4;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F697DA8;
  aBlock[3] = &block_descriptor_24;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_didPerformLocalAuthenticationWithCompletion_, v9);
  _Block_release(v9);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_21F697958(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECC8);
    return sub_21F716254();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECC8);
    return sub_21F716260();
  }
}

uint64_t sub_21F6979B8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PASExtensionProxy()
{
  return objc_opt_self();
}

id sub_21F697A94()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AuthenticateExtras();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AuthenticateExtras()
{
  return objc_opt_self();
}

uint64_t sub_21F697AF8(uint64_t a1)
{
  uint64_t v1;

  return sub_21F6969A4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_21F697B04()
{
  return objectdestroyTm((uint64_t *)&unk_2554DEC98);
}

uint64_t sub_21F697B10(uint64_t a1, void *a2)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DEC98);
  return sub_21F696B54(a1, a2, *(id *)(v2 + 16));
}

uint64_t sub_21F697B64(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v5;
  id v6;
  uint64_t v8;
  _QWORD aBlock[6];

  objc_msgSend(v2, sel_activate);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21F697E5C;
  aBlock[3] = &block_descriptor_10;
  v5 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v6 = objc_msgSend(v2, sel_remoteObjectProxyWithErrorHandler_, v5);
  _Block_release(v5);
  sub_21F716458();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECA8);
  swift_dynamicCast();
  return v8;
}

void sub_21F697C64(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_21F697CD8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_21F697D00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
    v4 = sub_21F716044();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_21F697DA8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_21F697DFC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_21F697E5C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

unint64_t sub_21F697EAC()
{
  unint64_t result;

  result = qword_2554DECB0;
  if (!qword_2554DECB0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71DD3C, &type metadata for PASExtensionProxyError);
    atomic_store(result, &qword_2554DECB0);
  }
  return result;
}

unint64_t sub_21F697EF0(char a1)
{
  unint64_t result;

  result = 0xD000000000000029;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000036;
    else
      return 0xD00000000000002CLL;
  }
  return result;
}

unint64_t sub_21F697F50()
{
  char *v0;

  return sub_21F6A1B58(*v0);
}

unint64_t sub_21F697F58()
{
  char *v0;

  return sub_21F697EF0(*v0);
}

uint64_t sub_21F697F60()
{
  sub_21F698378();
  return sub_21F7168C0();
}

uint64_t sub_21F697F88()
{
  sub_21F698378();
  return sub_21F7168B4();
}

uint64_t sub_21F697FB0(uint64_t a1)
{
  return sub_21F6977CC(a1);
}

uint64_t sub_21F697FB8()
{
  return objectdestroy_17Tm(&qword_2554DECC8);
}

uint64_t sub_21F697FC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F697FEC(uint64_t a1)
{
  return sub_21F697320(a1);
}

uint64_t sub_21F697FF4()
{
  return objectdestroy_17Tm(&qword_2554DECD8);
}

uint64_t sub_21F698000(int a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECD8);
  return sub_21F6974AC(a1, a2);
}

uint64_t sub_21F698050(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_21F698078(uint64_t a1)
{
  uint64_t v1;

  return sub_21F696300(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_21F698080()
{
  return objectdestroyTm(&qword_2554DECE8);
}

uint64_t sub_21F69808C(void *a1, void *a2)
{
  return sub_21F69809C(a1, a2, &qword_2554DECE8, 2);
}

uint64_t sub_21F69809C(void *a1, void *a2, uint64_t *a3, char a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return sub_21F6964A0(a1, a2, *(id *)(v4 + 16), v4 + ((v9 + 24) & ~v9), a3, a4);
}

void sub_21F698108(uint64_t a1)
{
  sub_21F696EA0(a1);
}

uint64_t sub_21F698114()
{
  return objectdestroy_17Tm(&qword_2554DECC8);
}

uint64_t objectdestroy_17Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_21F69817C(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DECC8);
  return sub_21F697958(a1);
}

uint64_t sub_21F6981C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_21F6981E0(uint64_t a1)
{
  uint64_t v1;

  return sub_21F695EA0(a1, *(void **)(v1 + 16));
}

uint64_t sub_21F6981E8()
{
  return objectdestroyTm(&qword_2554DED00);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_21F698264(void *a1, void *a2)
{
  return sub_21F69809C(a1, a2, &qword_2554DED00, 0);
}

uint64_t storeEnumTagSinglePayload for PASExtensionProxyError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21F6982C0 + 4 * byte_21F71DB65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21F6982F4 + 4 * byte_21F71DB60[v4]))();
}

uint64_t sub_21F6982F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6982FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F698304);
  return result;
}

uint64_t sub_21F698310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F698318);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21F69831C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F698324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASExtensionProxyError()
{
  return &type metadata for PASExtensionProxyError;
}

unint64_t sub_21F698344(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F698378();
  a1[2] = sub_21F6983BC();
  result = sub_21F698400();
  a1[3] = result;
  return result;
}

unint64_t sub_21F698378()
{
  unint64_t result;

  result = qword_2554DED08;
  if (!qword_2554DED08)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71DC78, &type metadata for PASExtensionProxyError);
    atomic_store(result, (unint64_t *)&qword_2554DED08);
  }
  return result;
}

unint64_t sub_21F6983BC()
{
  unint64_t result;

  result = qword_2554DED10;
  if (!qword_2554DED10)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71DC30, &type metadata for PASExtensionProxyError);
    atomic_store(result, (unint64_t *)&qword_2554DED10);
  }
  return result;
}

unint64_t sub_21F698400()
{
  unint64_t result;

  result = qword_2554DED18;
  if (!qword_2554DED18)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71DC08, &type metadata for PASExtensionProxyError);
    atomic_store(result, (unint64_t *)&qword_2554DED18);
  }
  return result;
}

unint64_t sub_21F698448()
{
  unint64_t result;

  result = qword_2554DED20;
  if (!qword_2554DED20)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71DD14, &type metadata for PASExtensionProxyError);
    atomic_store(result, (unint64_t *)&qword_2554DED20);
  }
  return result;
}

void *PASFlowStepTargetError.error.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError_error);
  v2 = v1;
  return v1;
}

uint64_t PASFlowStepTargetError.__allocating_init(delegate:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v6 = swift_allocObject();
  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError__targetAppleIDExchanger;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA800);
  v8 = swift_allocObject();
  *(_QWORD *)(v6 + v7) = v8;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError_error) = a3;
  *(_QWORD *)(v8 + 16) = 0;
  v9 = v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v10 = qword_2554DA718;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v11 = sub_21F715F3C();
    __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
    v12 = sub_21F715F24();
    v13 = sub_21F716368();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21F63C000, v12, v13, "PASTargetFlowStepBase delegate is nil in init", v14, 2u);
      MEMORY[0x2207CC514](v14, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v9 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v15 = PASFlowStepBase.init()();
  swift_unknownObjectRelease();
  return v15;
}

uint64_t PASFlowStepTargetError.init(delegate:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v4 = v3;
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError__targetAppleIDExchanger;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA800);
  v9 = swift_allocObject();
  *(_QWORD *)(v4 + v8) = v9;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError_error) = a3;
  *(_QWORD *)(v9 + 16) = 0;
  v10 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v11 = qword_2554DA718;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = sub_21F715F3C();
    __swift_project_value_buffer(v12, (uint64_t)static PASLogger.common);
    v13 = sub_21F715F24();
    v14 = sub_21F716368();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_21F63C000, v13, v14, "PASTargetFlowStepBase delegate is nil in init", v15, 2u);
      MEMORY[0x2207CC514](v15, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v10 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  v16 = PASFlowStepBase.init()();
  swift_unknownObjectRelease();
  return v16;
}

uint64_t PASFlowStepTargetError.exitFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = v0;
  return swift_task_switch();
}

uint64_t sub_21F698878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  int *v7;
  id v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  swift_beginAccess();
  v2 = MEMORY[0x2207CC5BC](v1);
  *(_QWORD *)(v0 + 104) = v2;
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v1 + 8);
  ObjectType = swift_getObjectType();
  v6 = *(void **)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError_error);
  *(_QWORD *)(v0 + 16) = v6;
  *(_BYTE *)(v0 + 64) = 1;
  v7 = *(int **)(v4 + 24);
  v8 = v6;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v9;
  *v9 = v0;
  v9[1] = sub_21F698970;
  return v11(v0 + 16, ObjectType, v4);
}

uint64_t sub_21F698970()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F698B34(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void PASFlowStepTargetError.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepTargetError.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F698A24()
{
  uint64_t v0;

  return swift_release();
}

uint64_t PASFlowStepTargetError.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);

  swift_release();
  return v0;
}

uint64_t PASFlowStepTargetError.__deallocating_deinit()
{
  PASFlowStepTargetError.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F698B34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DED40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21F698B74()
{
  return type metadata accessor for PASFlowStepTargetError();
}

uint64_t type metadata accessor for PASFlowStepTargetError()
{
  uint64_t result;

  result = qword_2554DED70;
  if (!qword_2554DED70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F698BB8()
{
  return swift_updateClassMetadata2();
}

uint64_t PASFlowStepSourceAuthentication.targetFirstName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[24];
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account;
  swift_beginAccess();
  sub_21F68F3E8(v1, (uint64_t)v11);
  v2 = v12;
  if (v12)
  {
    v3 = v13;
    v4 = __swift_project_boxed_opaque_existential_1(v11, v12);
    v5 = *(_QWORD *)(v2 - 8);
    MEMORY[0x24BDAC7A8](v4);
    v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(_BYTE *))(v5 + 16))(v7);
    sub_21F6476AC((uint64_t)v11, &qword_2554DEF00);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v2);
  }
  else
  {
    sub_21F6476AC((uint64_t)v11, &qword_2554DEF00);
    return 0;
  }
  return v8;
}

uint64_t PASFlowStepSourceAuthentication.authenticate(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[69] = v2;
  v3[68] = a2;
  v3[67] = a1;
  return swift_task_switch();
}

uint64_t sub_21F698D40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0[69] + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__deviceProvider);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 24);
    swift_retain();
    v4 = v2;
  }
  else
  {
    v5 = qword_2554DA6A0;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v4 = sub_21F63EB84();
    v3 = v6;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[71] = v3;
  v0[70] = v4;
  swift_unknownObjectRetain();
  swift_release();
  v0[72] = swift_getObjectType();
  v0[73] = *(_QWORD *)(v3 + 8);
  v0[74] = sub_21F7162A8();
  v0[75] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F698E80()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(uint64_t, uint64_t))v0[73];
  v2 = v0[72];
  v3 = v0[71];
  swift_release();
  v1(v2, v3);
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F698EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 296);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 304);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 296));
    v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
    *(_QWORD *)(v0 + 608) = v3;
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 272);
    if (v3)
    {
      v4 = *(_QWORD *)(v0 + 552);
      v15 = *(_OWORD *)(v0 + 536);
      objc_msgSend(v3, sel_setLinkType_, 3);
      v5 = swift_allocObject();
      *(_QWORD *)(v0 + 616) = v5;
      *(_OWORD *)(v5 + 16) = v15;
      *(_QWORD *)(v5 + 32) = v3;
      *(_QWORD *)(v5 + 40) = v4;
      v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController + 24);
      v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController), v6);
      *(_QWORD *)&v15 = **(int **)(v7 + 8) + *(_QWORD *)(v7 + 8);
      v8 = v3;
      swift_retain();
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 624) = v9;
      *v9 = v0;
      v9[1] = sub_21F69911C;
      return ((uint64_t (*)(void *(*)(), uint64_t, uint64_t, uint64_t))v15)(sub_21F69A430, v5, v6, v7);
    }
  }
  else
  {
    sub_21F6476AC(v0 + 272, &qword_2554DA778);
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v11 = sub_21F715F3C();
  __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
  v12 = sub_21F715F24();
  v13 = sub_21F71635C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_21F63C000, v12, v13, "PASFlowStepSourceAuthentication authenticate has no target ak_device", v14, 2u);
    MEMORY[0x2207CC514](v14, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69911C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 632) = a1;
  *(_QWORD *)(v3 + 640) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F69918C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;

  if (*(_QWORD *)(v0 + 632))
  {
    v1 = *(_QWORD *)(v0 + 552);
    v2 = sub_21F66C120(*(_QWORD *)(v0 + 632));
    swift_bridgeObjectRelease();
    v15 = sub_21F6409B8(MEMORY[0x24BEE4AF8]);
    v3 = swift_bridgeObjectRetain();
    sub_21F670EE8(v3, (uint64_t *)&v15, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_21F66CC60, 0, v2);
    swift_bridgeObjectRelease_n();
    v4 = sub_21F66CC64(v15);
    swift_bridgeObjectRelease();
    v5 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account;
    swift_beginAccess();
    sub_21F68F3E8(v5, v0 + 176);
    *(_QWORD *)(v0 + 216) = v4;
    sub_21F69A62C((__int128 *)(v0 + 176), (_OWORD *)(v0 + 128));
    v6 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult;
    swift_beginAccess();
    sub_21F69A43C(v0 + 128, v6);
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v8 = sub_21F715F24();
    v9 = sub_21F716374();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, v9, "PASFlowStepSourceAuthentication authenticate returned nil", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }
    v11 = *(_QWORD *)(v0 + 552);

    *(_OWORD *)(v0 + 240) = 0u;
    *(_OWORD *)(v0 + 256) = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
    v12 = v11 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult;
    swift_beginAccess();
    sub_21F69A43C(v0 + 224, v12);
  }
  swift_endAccess();
  v13 = *(_QWORD *)(v0 + 552) + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account;
  swift_beginAccess();
  sub_21F68F3E8(v13, v0 + 312);
  *(_QWORD *)(v0 + 648) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F69942C()
{
  uint64_t v0;

  swift_release();
  sub_21F699C7C(v0 + 312);
  sub_21F6476AC(v0 + 312, &qword_2554DEF00);
  return swift_task_switch();
}

uint64_t sub_21F699488()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 656) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6994E8()
{
  swift_release();
  PASFlowStepBase.setFinished()();
  return swift_task_switch();
}

uint64_t sub_21F69952C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 608);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F699564()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  _QWORD *v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 640);
  *(_QWORD *)(v0 + 520) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if ((swift_dynamicCast() & 1) != 0 && !*(_BYTE *)(v0 + 65))
  {

    if (qword_2554DA718 != -1)
      swift_once();
    v29 = sub_21F715F3C();
    __swift_project_value_buffer(v29, (uint64_t)static PASLogger.common);
    v30 = sub_21F715F24();
    v31 = sub_21F716374();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_21F63C000, v30, v31, "PASFlowStepSourceAuthentication authenticate got targetCantSignInForSelf", v32, 2u);
      MEMORY[0x2207CC514](v32, -1, -1);
    }
    v33 = *(_QWORD *)(v0 + 552);

    v34 = v33 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v35 = MEMORY[0x2207CC5BC](v34);
    *(_QWORD *)(v0 + 664) = v35;
    if (v35)
    {
      v36 = *(_QWORD *)(v34 + 8);
      ObjectType = swift_getObjectType();
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *(_BYTE *)(v0 + 64) = 0;
      *(_OWORD *)(v0 + 16) = 0u;
      v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v36 + 16) + *(_QWORD *)(v36 + 16));
      v38 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 672) = v38;
      *v38 = v0;
      v38[1] = sub_21F6999C4;
      v24 = v0 + 16;
      v25 = ObjectType;
      v26 = v36;
      return v39(v24, v25, v26);
    }

  }
  else
  {

    if (qword_2554DA718 != -1)
      swift_once();
    v3 = *(void **)(v0 + 640);
    v4 = sub_21F715F3C();
    __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
    v5 = v3;
    v6 = v3;
    v7 = sub_21F715F24();
    v8 = sub_21F71635C();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(void **)(v0 + 640);
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138543362;
      v13 = v10;
      v14 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 528) = v14;
      sub_21F716428();
      *v12 = v14;

      _os_log_impl(&dword_21F63C000, v7, v8, "PASFlowStepSourceAuthentication authenticate error: %{public}@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v12, -1, -1);
      MEMORY[0x2207CC514](v11, -1, -1);
    }
    else
    {

    }
    v15 = *(_QWORD *)(v0 + 552);

    v16 = v15 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v17 = MEMORY[0x2207CC5BC](v16);
    *(_QWORD *)(v0 + 680) = v17;
    if (v17)
    {
      v18 = *(void **)(v0 + 640);
      v19 = *(_QWORD *)(v16 + 8);
      v20 = swift_getObjectType();
      *(_QWORD *)(v0 + 72) = v18;
      *(_BYTE *)(v0 + 120) = 1;
      v21 = *(int **)(v19 + 16);
      v22 = v18;
      v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v21 + *v21);
      v23 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 688) = v23;
      *v23 = v0;
      v23[1] = sub_21F699A7C;
      v24 = v0 + 72;
      v25 = v20;
      v26 = v19;
      return v39(v24, v25, v26);
    }
    v28 = *(void **)(v0 + 640);

  }
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6999C4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 16;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F6476AC(v1, (uint64_t *)&unk_2554DB8E0);
  return swift_task_switch();
}

uint64_t sub_21F699A38()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F699A7C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + 72;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F6476AC(v1, (uint64_t *)&unk_2554DB8E0);
  return swift_task_switch();
}

uint64_t sub_21F699AF0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 640);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_21F699B38(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (void *)a1();
  objc_msgSend(v6, sel_setProxiedDevice_, a3);
  objc_msgSend(v6, sel_setIsUsernameEditable_, 0);
  objc_msgSend(v6, sel_setServiceType_, 1);
  v7 = (uint64_t *)(*(_QWORD *)(a4
                             + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__anisetteDataProvider)
                 + 16);
  swift_beginAccess();
  v8 = *v7;
  if (*v7)
  {
    swift_retain();
    v9 = v8;
  }
  else
  {
    v10 = qword_2554DA6A0;
    swift_retain();
    if (v10 != -1)
      swift_once();
    v9 = sub_21F63F7C0();
    *v7 = v9;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v6, sel_setAnisetteDataProvider_, v9);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_21F699C7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  ValueMetadata *v9;
  _UNKNOWN **v10;
  _QWORD v11[5];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  swift_retain();
  sub_21F656B40((uint64_t)v15);
  swift_release();
  v2 = v16;
  v3 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v12, v2, v3);
  v4 = v13;
  sub_21F6476AC((uint64_t)v12, &qword_2554DEF00);
  result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  if (!v4)
  {
    v6 = *(_QWORD *)(a1 + 24);
    sub_21F68F3E8(a1, (uint64_t)v15);
    if (v6)
    {
      sub_21F65D4EC((uint64_t)v15, (uint64_t)v12);
      if (v13)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
        type metadata accessor for PASFamilyMember();
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_release();
LABEL_7:
          swift_retain();
          sub_21F656B40((uint64_t)v12);
          swift_release();
          v7 = v13;
          v8 = v14;
          __swift_project_boxed_opaque_existential_1(v12, v13);
          v9 = &type metadata for PASAccountContextFamilyMember;
          v10 = &protocol witness table for PASAccountContextFamilyMember;
LABEL_10:
          v11[3] = v9;
          v11[4] = v10;
          v11[0] = 0;
          (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v8 + 40))(a1, v11, v7, v8);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
        }
      }
      else
      {
        sub_21F6476AC((uint64_t)v12, &qword_2554DEF00);
      }
      swift_retain();
      sub_21F656B40((uint64_t)v12);
      swift_release();
      v7 = v13;
      v8 = v14;
      __swift_project_boxed_opaque_existential_1(v12, v13);
      v9 = &type metadata for PASAccountContextExistingAccount;
      v10 = &off_24E452508;
      goto LABEL_10;
    }
    sub_21F6476AC((uint64_t)v15, &qword_2554DEF00);
    goto LABEL_7;
  }
  return result;
}

uint64_t PASFlowStepSourceAuthentication.nextStep()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[5];
  _BYTE v27[40];
  _BYTE v28[40];
  uint64_t v29;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult;
  swift_beginAccess();
  sub_21F69A644(v2, (uint64_t)v28);
  v3 = v29;
  if (!v29)
  {
    v5 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v6 = MEMORY[0x2207CC5BC](v5);
    v7 = *(_QWORD *)(v5 + 8);
    type metadata accessor for PASFlowStepSignInResult();
    v8 = type metadata accessor for PASFlowStepSignInResult;
    v9 = swift_allocObject();
    v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__messageSessionProvider;
    __swift_instantiateConcreteTypeFromMangledName(qword_2554DA840);
    v11 = swift_allocObject();
    *(_QWORD *)(v9 + v10) = v11;
    *(_QWORD *)(v11 + 16) = 0;
    v12 = (_QWORD *)(v9 + OBJC_IVAR____TtC21ProximityAppleIDSetup23PASFlowStepSignInResult__nextStep);
    *v12 = 0;
    v12[1] = 0;
    v2 = sub_21F6BC954(v6, v7);
    swift_unknownObjectRelease();
    v13 = &qword_2554DB3A8;
LABEL_10:
    sub_21F65EAB0(v13, (uint64_t (*)(uint64_t))v8);
    return v2;
  }
  if (v29 != 1)
  {
    sub_21F65D4EC((uint64_t)v28, (uint64_t)v27);
    if (qword_2554DA718 != -1)
      swift_once();
    v14 = sub_21F715F3C();
    __swift_project_value_buffer(v14, (uint64_t)static PASLogger.common);
    v15 = sub_21F715F24();
    v16 = sub_21F716374();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_21F63C000, v15, v16, "PASFlowStepSourceAuthentication setting target account", v17, 2u);
      MEMORY[0x2207CC514](v17, -1, -1);
    }

    v18 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
    swift_beginAccess();
    v19 = MEMORY[0x2207CC5BC](v18);
    v20 = *(_QWORD *)(v18 + 8);
    v26[3] = &type metadata for PASAuthResults;
    v26[4] = sub_21F69A6A4();
    v26[0] = v3;
    type metadata accessor for PASFlowStepSendAuthResults();
    v8 = type metadata accessor for PASFlowStepSendAuthResults;
    v21 = swift_allocObject();
    v22 = OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults__sourceAppleIDExchanger;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7F0);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = 0;
    *(_QWORD *)(v23 + 24) = 0;
    *(_QWORD *)(v21 + v22) = v23;
    v24 = v21 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_result;
    *(_QWORD *)v24 = 0;
    *(_BYTE *)(v24 + 8) = -1;
    sub_21F647710((uint64_t)v26, v21 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_account);
    *(_QWORD *)(v21 + OBJC_IVAR____TtC21ProximityAppleIDSetup26PASFlowStepSendAuthResults_proxiedAuthResults) = v3;
    swift_bridgeObjectRetain_n();
    v2 = sub_21F6BC954(v19, v20);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
    swift_bridgeObjectRelease();
    sub_21F6476AC((uint64_t)v27, &qword_2554DEF00);
    v13 = &qword_2554DEF50;
    goto LABEL_10;
  }
  sub_21F658AF4();
  swift_allocError();
  *(_QWORD *)v4 = 0xD00000000000003BLL;
  *(_QWORD *)(v4 + 8) = 0x800000021F7285B0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_BYTE *)(v4 + 32) = 1;
  swift_willThrow();
  sub_21F69A678((uint64_t)v28);
  return v2;
}

void PASFlowStepSourceAuthentication.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepSourceAuthentication.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F69A228()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account, &qword_2554DEF00);
  return sub_21F69A678(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult);
}

uint64_t PASFlowStepSourceAuthentication.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account, &qword_2554DEF00);
  sub_21F69A678(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult);
  return v0;
}

uint64_t PASFlowStepSourceAuthentication.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController);
  sub_21F6476AC(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account, &qword_2554DEF00);
  sub_21F69A678(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult);
  return swift_deallocClassInstance();
}

uint64_t sub_21F69A3F0()
{
  return PASFlowStepSourceAuthentication.nextStep()();
}

uint64_t sub_21F69A404()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void *sub_21F69A430()
{
  uint64_t v0;

  return sub_21F699B38(*(uint64_t (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_21F69A43C(uint64_t a1, uint64_t a2)
{
  assignWithTake for PASFlowStepSourceAuthentication.AuthControllerResult(a2, a1);
  return a2;
}

uint64_t sub_21F69A470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26[5];

  v26[3] = a6;
  v26[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a3, a6);
  v14 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(a5 + v14) = v15;
  v16 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__anisetteDataProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE700);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(a5 + v16) = v17;
  v18 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_QWORD *)(v19 + 48) = 0;
  *(_QWORD *)(a5 + v18) = v19;
  v20 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = 0u;
  *(_OWORD *)(v21 + 32) = 0u;
  *(_QWORD *)(a5 + v20) = v21;
  *(_QWORD *)(v21 + 48) = 0;
  v22 = a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account;
  *(_QWORD *)(v22 + 32) = 0;
  *(_OWORD *)v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  v23 = a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult;
  *(_OWORD *)v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(_QWORD *)(v23 + 32) = 0;
  *(_QWORD *)(v23 + 40) = 1;
  sub_21F647710((uint64_t)v26, a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController);
  swift_beginAccess();
  swift_retain();
  sub_21F69AB84(a4, v22);
  swift_endAccess();
  swift_release();
  v24 = sub_21F6BC954(a1, a2);
  sub_21F6476AC(a4, &qword_2554DEF00);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  return v24;
}

_OWORD *sub_21F69A62C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_21F69A644(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PASFlowStepSourceAuthentication.AuthControllerResult(a2, a1);
  return a2;
}

uint64_t sub_21F69A678(uint64_t a1)
{
  destroy for PASFlowStepSourceAuthentication.AuthControllerResult(a1);
  return a1;
}

unint64_t sub_21F69A6A4()
{
  unint64_t result;

  result = qword_2554DEF40;
  if (!qword_2554DEF40)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASAuthResults, &type metadata for PASAuthResults);
    atomic_store(result, (unint64_t *)&qword_2554DEF40);
  }
  return result;
}

uint64_t sub_21F69A6E8(uint64_t a1)
{
  uint64_t result;

  result = sub_21F65EAB0(&qword_2554DEF70, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSourceAuthentication);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepSourceAuthentication()
{
  uint64_t result;

  result = qword_2554DEFA0;
  if (!qword_2554DEFA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F69A758()
{
  return type metadata accessor for PASFlowStepSourceAuthentication();
}

uint64_t sub_21F69A760()
{
  return swift_updateClassMetadata2();
}

unint64_t destroy for PASFlowStepSourceAuthentication.AuthControllerResult(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result >= 0xFFFFFFFF)
  {
    if (*(_QWORD *)(a1 + 24))
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PASFlowStepSourceAuthentication.AuthControllerResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 40);
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 24);
    if (v5)
    {
      v6 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      v4 = *(_QWORD *)(a2 + 40);
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_QWORD *)(a1 + 40) = v4;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PASFlowStepSourceAuthentication.AuthControllerResult(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *((_QWORD *)a2 + 5);
  if (*(_QWORD *)(a1 + 40) >= 0xFFFFFFFFuLL)
  {
    v5 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = *((_QWORD *)a2 + 3);
      if (v5)
      {
        if (v6)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_19:
          *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return a1;
        }
        __swift_destroy_boxed_opaque_existential_0Tm(a1);
      }
      else if (v6)
      {
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
        goto LABEL_19;
      }
      v12 = *a2;
      v13 = a2[1];
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_OWORD *)a1 = v12;
      *(_OWORD *)(a1 + 16) = v13;
      goto LABEL_19;
    }
    if (v5)
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v4 < 0xFFFFFFFF)
  {
LABEL_12:
    v8 = *a2;
    v9 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)a1 = v8;
    return a1;
  }
  v7 = *((_QWORD *)a2 + 3);
  if (v7)
  {
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
  }
  else
  {
    v10 = *a2;
    v11 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
  }
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for PASFlowStepSourceAuthentication.AuthControllerResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 40) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5)
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v5)
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PASFlowStepSourceAuthentication.AuthControllerResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PASFlowStepSourceAuthentication.AuthControllerResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2 + 1;
  }
  return result;
}

uint64_t sub_21F69AB2C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_21F69AB44(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 40) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepSourceAuthentication.AuthControllerResult()
{
  return &type metadata for PASFlowStepSourceAuthentication.AuthControllerResult;
}

uint64_t sub_21F69AB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DEF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F69ABCC(char *a1, char *a2)
{
  return sub_21F70BFBC(*a1, *a2);
}

uint64_t sub_21F69ABD8()
{
  return sub_21F70CA50();
}

uint64_t sub_21F69ABE0()
{
  sub_21F716134();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21F69AC40()
{
  return sub_21F70DB18();
}

uint64_t sub_21F69AC48@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_21F69ACA4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000010;
  else
    v2 = 0xD000000000000017;
  v3 = 0x800000021F725D20;
  if (*v1)
    v3 = 0x800000021F725D40;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_21F69ACE8()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F70E268();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F69AD64()
{
  return sub_21F70E268();
}

uint64_t sub_21F69AD6C()
{
  sub_21F6A1804();
  return sub_21F7168C0();
}

uint64_t sub_21F69AD94()
{
  sub_21F6A1804();
  return sub_21F7168B4();
}

uint64_t PASSourceFlowController.presenter.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v0 + 16);
}

uint64_t PASSourceFlowController.presenter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PASSourceFlowController.presenter.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x2207CC5BC](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_21F64E9C0;
}

uint64_t sub_21F69AECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 112);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 24);
    swift_retain();
  }
  else
  {
    v3 = qword_2554DA6A0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_21F63EB84();
    v2 = v5;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 16))(v10, ObjectType, v2);
  swift_unknownObjectRelease();
  v7 = v11;
  if (v11)
  {
    v8 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    if (qword_2554DA6E8 != -1)
      swift_once();
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 24))(static PASDeviceCapability.endFlowMessage, unk_2554E5160, v7, v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  }
  else
  {
    sub_21F6476AC((uint64_t)v10, &qword_2554DA770);
  }
  return v7 & 1;
}

uint64_t sub_21F69B03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(v0 + 120))
  {
    v1 = *(_QWORD *)(v0 + 120);
  }
  else
  {
    v2 = v0;
    swift_retain();
    sub_21F6569AC((uint64_t)v6);
    swift_release();
    v3 = v7;
    v4 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v1 = (*(uint64_t (**)(ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8))(&type metadata for PASSourceFlowController.AnalyticsEvent, &off_24E4565F8, v3, v4);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
    *(_QWORD *)(v2 + 120) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t PASSourceFlowController.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PASSourceFlowController.init()();
  return v0;
}

uint64_t PASSourceFlowController.init()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v1 = v0;
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v0 + 32) = 0;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_21F716608())
    v2 = sub_21F687E74(MEMORY[0x24BEE4AF8]);
  else
    v2 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 40) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7F0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v0 + 64) = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v0 + 72) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF590);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v0 + 88) = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA810);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v0 + 96) = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE710);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v0 + 104) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = 0;
  if (qword_2554DA718 != -1)
    swift_once();
  v10 = sub_21F715F3C();
  __swift_project_value_buffer(v10, (uint64_t)static PASLogger.common);
  v11 = sub_21F715F24();
  v12 = sub_21F716350();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_21F63C000, v11, v12, "PASSourceFlowController init", v13, 2u);
    MEMORY[0x2207CC514](v13, -1, -1);
  }

  return v1;
}

uint64_t PASSourceFlowController.prepareFlow()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[25] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v1[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2A8);
  v1[27] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v1[28] = v2;
  v1[29] = *(_QWORD *)(v2 - 8);
  v1[30] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2B0);
  v1[31] = v3;
  v1[32] = *(_QWORD *)(v3 - 8);
  v1[33] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5C0);
  v1[34] = v4;
  v1[35] = *(_QWORD *)(v4 - 8);
  v1[36] = swift_task_alloc();
  v1[37] = sub_21F7162A8();
  v1[38] = sub_21F71629C();
  v1[39] = sub_21F716248();
  v1[40] = v5;
  return swift_task_switch();
}

uint64_t sub_21F69B490()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v23)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowController prepareFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[25];

  v6 = *(_QWORD *)(v5 + 64);
  swift_beginAccess();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(_QWORD *)(v6 + 24);
    swift_retain();
  }
  else
  {
    v8 = qword_2554DA6A0;
    swift_retain();
    if (v8 != -1)
      swift_once();
    v9 = sub_21F63F1E4();
    v7 = v10;
    *(_QWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 24) = v10;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v12 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 16);
  v13 = swift_unknownObjectRetain();
  v12(v13, &protocol witness table for PASSourceFlowController, ObjectType, v7);
  swift_unknownObjectRelease();
  v14 = *(_QWORD *)(v5 + 64);
  swift_beginAccess();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = *(_QWORD *)(v14 + 24);
    swift_retain();
    v17 = v15;
  }
  else
  {
    v18 = qword_2554DA6A0;
    swift_retain();
    if (v18 != -1)
      swift_once();
    v17 = sub_21F63F1E4();
    v16 = v19;
    *(_QWORD *)(v14 + 16) = v17;
    *(_QWORD *)(v14 + 24) = v19;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[41] = v17;
  swift_unknownObjectRetain();
  swift_release();
  v20 = swift_getObjectType();
  v23 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v16 + 32) + *(_QWORD *)(v16 + 32));
  v21 = (_QWORD *)swift_task_alloc();
  v0[42] = v21;
  *v21 = v0;
  v21[1] = sub_21F69B74C;
  return v23(v20, v16);
}

uint64_t sub_21F69B74C()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F69B7A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  swift_retain();
  sub_21F656B78((uint64_t)(v0 + 7));
  swift_release();
  v1 = v0[10];
  v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v5 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 8) + *(_QWORD *)(v2 + 8));
  v3 = (_QWORD *)swift_task_alloc();
  v0[43] = v3;
  *v3 = v0;
  v3[1] = sub_21F69B840;
  return v5(v1, v2);
}

uint64_t sub_21F69B840()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F69B88C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v1 = v0[25];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  v2 = *(_QWORD *)(v1 + 96);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 24);
    swift_retain();
    v5 = v3;
  }
  else
  {
    v6 = qword_2554DA6A0;
    swift_retain();
    if (v6 != -1)
      swift_once();
    v5 = sub_21F63FD44();
    v4 = v7;
    *(_QWORD *)(v2 + 16) = v5;
    *(_QWORD *)(v2 + 24) = v7;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[44] = v5;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v11 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 8) + *(_QWORD *)(v4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  v0[45] = v9;
  *v9 = v0;
  v9[1] = sub_21F69B9B8;
  return v11(ObjectType, v4);
}

uint64_t sub_21F69B9B8()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F69BA0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 272);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 208);
  swift_release();
  swift_retain();
  sub_21F656B08(v0 + 16);
  swift_release();
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  sub_21F6A1030((unint64_t *)&unk_2554DF630, (uint64_t *)&unk_2554DF5B0, MEMORY[0x24BDB9EE8]);
  sub_21F715FE4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  sub_21F6A0FC8();
  *(_QWORD *)(v0 + 192) = sub_21F7163B0();
  v8 = sub_21F716398();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v14, 1, 1, v8);
  sub_21F6A1030((unint64_t *)&unk_2554DF640, &qword_2554DF2B0, MEMORY[0x24BDB96F8]);
  sub_21F647438(&qword_2554DF2B8, (uint64_t (*)(uint64_t))sub_21F6A0FC8, MEMORY[0x24BEE5670]);
  sub_21F715FD8();
  sub_21F6476AC(v14, &qword_2554DF2A8);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v15);
  swift_allocObject();
  swift_weakInit();
  sub_21F6A1030((unint64_t *)&unk_2554DF650, (uint64_t *)&unk_2554DF5C0, MEMORY[0x24BDB9A08]);
  sub_21F715FF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  swift_beginAccess();
  sub_21F715F54();
  swift_endAccess();
  swift_release();
  v9 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v20, 1, 1, v9);
  swift_retain();
  v10 = sub_21F71629C();
  v11 = (_QWORD *)swift_allocObject();
  v12 = MEMORY[0x24BEE6930];
  v11[2] = v10;
  v11[3] = v12;
  v11[4] = v5;
  sub_21F6B4038(v20, (uint64_t)&unk_2554DF2C8, (uint64_t)v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69BD54(char *a1)
{
  char v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if ((v1 & 1) == 0 && (*(_BYTE *)(result + 32) & 1) == 0)
    {
      if (qword_2554DA718 != -1)
        swift_once();
      v4 = sub_21F715F3C();
      __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
      v5 = sub_21F715F24();
      v6 = sub_21F71635C();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_21F63C000, v5, v6, "PASSourceFlowController message session is dead!", v7, 2u);
        MEMORY[0x2207CC514](v7, -1, -1);
      }

      v8 = sub_21F715F24();
      v9 = sub_21F71635C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        *(_DWORD *)v10 = 136446210;
        v19 = v11;
        v20 = 0;
        v21 = 0xE000000000000000;
        sub_21F7164E8();
        swift_bridgeObjectRelease();
        v20 = sub_21F644208(0xD00000000000004ALL, 0x800000021F7287A0, &v19);
        sub_21F716428();
        _os_log_impl(&dword_21F63C000, v8, v9, "PASSourceFlowController stepDidFinish with error\n%{public}s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v11, -1, -1);
        MEMORY[0x2207CC514](v10, -1, -1);
      }

      sub_21F658AF4();
      v12 = swift_allocError();
      *(_QWORD *)v13 = 0xD00000000000001CLL;
      *(_QWORD *)(v13 + 8) = 0x800000021F728780;
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)(v13 + 24) = 0;
      *(_BYTE *)(v13 + 32) = 2;
      type metadata accessor for PASFlowStepSourceError();
      *(_QWORD *)(swift_allocObject() + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepSourceError_error) = v12;
      v14 = swift_retain();
      v15 = sub_21F6BC954(v14, (uint64_t)&protocol witness table for PASSourceFlowController);
      swift_release();
      swift_beginAccess();
      if (MEMORY[0x2207CC5BC](v3 + 16))
      {
        v16 = *(_QWORD *)(v3 + 24);
        ObjectType = swift_getObjectType();
        v18 = sub_21F647438((unint64_t *)&unk_2554DF580, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSourceError, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8) + 8))(v15, v18, ObjectType);
        swift_unknownObjectRelease();
      }
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_21F69C0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a4;
  sub_21F7162A8();
  v4[7] = sub_21F71629C();
  v4[8] = sub_21F716248();
  v4[9] = v5;
  return swift_task_switch();
}

uint64_t sub_21F69C118()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[6] + 96);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 24);
    swift_retain();
    v4 = v2;
  }
  else
  {
    v5 = qword_2554DA6A0;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v4 = sub_21F63FD44();
    v3 = v6;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[10] = v4;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = v8;
  *v8 = v0;
  v8[1] = sub_21F69C238;
  return v10(ObjectType, v3);
}

uint64_t sub_21F69C238()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F69C298()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69C2D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  swift_release();
  swift_unknownObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 96);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 96);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v12;
    sub_21F716428();
    *v10 = v12;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASSourceFlowController prepare flow failed to sendPASDeviceInfo %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASSourceFlowController.prepareStepForPresentation(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t ObjectType;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v3[26] = swift_task_alloc();
  v3[27] = sub_21F7162A8();
  v3[28] = sub_21F71629C();
  ObjectType = swift_getObjectType();
  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v6 = (_QWORD *)swift_task_alloc();
  v3[29] = v6;
  *v6 = v3;
  v6[1] = sub_21F69C578;
  return v8(ObjectType, a2);
}

uint64_t sub_21F69C578()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc();
  v3 = sub_21F716248();
  if (v0)
  {
    *(_QWORD *)(v2 + 248) = v3;
    *(_QWORD *)(v2 + 256) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_21F69C600()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69C640()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD *v22;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _BYTE *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *type;
  uint64_t v41;
  uint64_t v42[2];

  v1 = *(void **)(v0 + 240);
  *(_QWORD *)(v0 + 160) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if (!swift_dynamicCast())
    goto LABEL_4;
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  if (*(_BYTE *)(v0 + 104))
  {
    sub_21F6A10E0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
LABEL_4:

    if (qword_2554DA718 != -1)
      swift_once();
    v7 = *(void **)(v0 + 240);
    v8 = sub_21F715F3C();
    __swift_project_value_buffer(v8, (uint64_t)static PASLogger.common);
    v9 = v7;
    swift_unknownObjectRetain();
    v10 = v7;
    swift_unknownObjectRetain();
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(void **)(v0 + 240);
    if (v13)
    {
      v38 = *(_OWORD *)(v0 + 184);
      v15 = swift_slowAlloc();
      type = (_QWORD *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v42[0] = v41;
      *(_DWORD *)v15 = 136446466;
      *(_OWORD *)(v0 + 128) = v38;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
      v16 = sub_21F716128();
      *(_QWORD *)(v0 + 144) = sub_21F644208(v16, v17, v42);
      sub_21F716428();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2114;
      v18 = v14;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 152) = v19;
      sub_21F716428();
      *type = v19;

      _os_log_impl(&dword_21F63C000, v11, v12, "PASSourceFlowController failed to prepare step %{public}s for presentation %{public}@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](type, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v41, -1, -1);
      MEMORY[0x2207CC514](v15, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();

    }
    v20 = *(void **)(v0 + 240);
    *(_QWORD *)(v0 + 16) = v20;
    *(_BYTE *)(v0 + 64) = 1;
    v21 = v20;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v22;
    *v22 = v0;
    v22[1] = sub_21F69CC7C;
    return PASSourceFlowController.stepDidEndFlow(with:)(v0 + 16);
  }
  v24 = *(void **)(v0 + 240);
  swift_release();

  if (qword_2554DA718 != -1)
    swift_once();
  v25 = sub_21F715F3C();
  __swift_project_value_buffer(v25, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  v26 = sub_21F715F24();
  v27 = sub_21F716374();
  if (os_log_type_enabled(v26, v27))
  {
    v37 = *(_OWORD *)(v0 + 184);
    v28 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    *(_DWORD *)v28 = 136446466;
    *(_OWORD *)(v0 + 112) = v37;
    v42[0] = v39;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v29 = sub_21F716128();
    *(_QWORD *)(v0 + 168) = sub_21F644208(v29, v30, v42);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_21F644208(v4, v3, v42);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v26, v27, "PASSourceFlowController skipping %{public}s.\n%{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v39, -1, -1);
    MEMORY[0x2207CC514](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
  v31 = *(_QWORD *)(v0 + 208);
  v32 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  swift_retain();
  v33 = sub_21F71629C();
  v34 = (_QWORD *)swift_allocObject();
  v35 = MEMORY[0x24BEE6930];
  v34[2] = v33;
  v34[3] = v35;
  v34[4] = v6;
  v34[5] = v5;
  sub_21F6B4038(v31, (uint64_t)&unk_2554DF2F0, (uint64_t)v34);
  swift_release();
  sub_21F6A11C8();
  swift_allocError();
  *v36 = 1;
  swift_willThrow();
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69CC7C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  sub_21F6476AC(v1 + 16, (uint64_t *)&unk_2554DB8E0);
  return swift_task_switch();
}

uint64_t sub_21F69CCDC()
{
  uint64_t v0;

  swift_release();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69CD28(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_21F7162A8();
  v4[3] = sub_21F71629C();
  v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_21F69CDA4;
  return v8();
}

uint64_t sub_21F69CDA4()
{
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t PASSourceFlowController.stepDidEndFlow(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[42] = a1;
  v2[43] = v1;
  sub_21F7162A8();
  v2[44] = sub_21F71629C();
  v2[45] = sub_21F716248();
  v2[46] = v3;
  return swift_task_switch();
}

uint64_t sub_21F69CE80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD *v21;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t (*v32)(_QWORD, uint64_t, uint64_t);
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = v0[42];
  v2 = sub_21F715F3C();
  v0[47] = __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  sub_21F6A120C(v1, (uint64_t)(v0 + 2));
  v3 = sub_21F715F24();
  v4 = sub_21F716374();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v34 = v6;
    *(_DWORD *)v5 = 136446210;
    sub_21F6A120C((uint64_t)(v0 + 2), (uint64_t)(v0 + 9));
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DB8E0);
    v7 = sub_21F716128();
    v0[41] = sub_21F644208(v7, v8, &v34);
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F6476AC((uint64_t)(v0 + 2), (uint64_t *)&unk_2554DB8E0);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASSourceFlowController stepDidEndFlow with result %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v6, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    sub_21F6476AC((uint64_t)(v0 + 2), (uint64_t *)&unk_2554DB8E0);
  }

  v9 = v0[43];
  if ((*(_BYTE *)(v9 + 32) & 1) != 0 || (v10 = sub_21F69AECC(), v9 = v0[43], (v10 & 1) == 0))
  {
    swift_retain();
    sub_21F656B08((uint64_t)(v0 + 23));
    swift_release();
    v15 = v0[26];
    v16 = v0[27];
    __swift_project_boxed_opaque_existential_1(v0 + 23, v15);
    (*(void (**)(uint64_t, uint64_t))(v16 + 40))(v15, v16);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 23));
    swift_beginAccess();
    v17 = MEMORY[0x2207CC5BC](v9 + 16);
    v0[51] = v17;
    if (v17)
    {
      v18 = v0[43];
      v19 = *(_QWORD *)(v18 + 24);
      *(_BYTE *)(v18 + 32) = 1;
      ObjectType = swift_getObjectType();
      v32 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v19 + 16) + *(_QWORD *)(v19 + 16));
      swift_unknownObjectRetain();
      v21 = (_QWORD *)swift_task_alloc();
      v0[52] = v21;
      *v21 = v0;
      v21[1] = sub_21F69D61C;
      return v32(v0[42], ObjectType, v19);
    }
    else
    {
      v23 = sub_21F715F24();
      v24 = sub_21F716368();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_21F63C000, v23, v24, "PASSourceFlowController presenter is nil in stepDidEndFlow", v25, 2u);
        MEMORY[0x2207CC514](v25, -1, -1);
      }
      v26 = v0[43];

      *(_BYTE *)(v26 + 32) = 1;
      v27 = v0[42];
      v0[53] = sub_21F69B03C();
      sub_21F6A120C(v27, (uint64_t)(v0 + 16));
      return swift_task_switch();
    }
  }
  else
  {
    v11 = *(_QWORD *)(v9 + 64);
    swift_beginAccess();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = *(_QWORD *)(v11 + 24);
      swift_retain();
      v14 = v12;
    }
    else
    {
      v28 = qword_2554DA6A0;
      swift_retain();
      if (v28 != -1)
        swift_once();
      v14 = sub_21F63F1E4();
      v13 = v29;
      *(_QWORD *)(v11 + 16) = v14;
      *(_QWORD *)(v11 + 24) = v29;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    v0[48] = v14;
    swift_unknownObjectRetain();
    swift_release();
    v30 = swift_getObjectType();
    v33 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v13 + 72) + *(_QWORD *)(v13 + 72));
    v31 = (_QWORD *)swift_task_alloc();
    v0[49] = v31;
    *v31 = v0;
    v31[1] = sub_21F69D330;
    return v33(v30, v13);
  }
}

uint64_t sub_21F69D330(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 65) = a1;
  *(_QWORD *)(v3 + 400) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F69D39C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD, uint64_t, uint64_t);

  swift_unknownObjectRelease();
  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 65);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67240192;
    *(_DWORD *)(v0 + 68) = v3;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASSourceFlowController stepDidEndFlow got response from flowEnded: %{BOOL,public}d", v4, 8u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 344);
  swift_retain();
  sub_21F656B08(v0 + 184);
  swift_release();
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 216);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 184), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 184);
  swift_beginAccess();
  v8 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 408) = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(v0 + 344);
    v10 = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v9 + 32) = 1;
    ObjectType = swift_getObjectType();
    v19 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v10 + 16) + *(_QWORD *)(v10 + 16));
    swift_unknownObjectRetain();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v12;
    *v12 = v0;
    v12[1] = sub_21F69D61C;
    return v19(*(_QWORD *)(v0 + 336), ObjectType, v10);
  }
  else
  {
    v14 = sub_21F715F24();
    v15 = sub_21F716368();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_21F63C000, v14, v15, "PASSourceFlowController presenter is nil in stepDidEndFlow", v16, 2u);
      MEMORY[0x2207CC514](v16, -1, -1);
    }
    v17 = *(_QWORD *)(v0 + 344);

    *(_BYTE *)(v17 + 32) = 1;
    v18 = *(_QWORD *)(v0 + 336);
    *(_QWORD *)(v0 + 424) = sub_21F69B03C();
    sub_21F6A120C(v18, v0 + 128);
    return swift_task_switch();
  }
}

uint64_t sub_21F69D61C()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F69D670()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 424) = sub_21F69B03C();
  sub_21F6A120C(v1, v0 + 128);
  return swift_task_switch();
}

uint64_t sub_21F69D6C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[31] = &type metadata for PASSourceFlowController.AnalyticsEvent;
  v0[32] = &off_24E4565F8;
  v1 = swift_allocObject();
  v0[28] = v1;
  sub_21F6A129C((uint64_t)(v0 + 16), v1 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  v0[54] = v2;
  *v2 = v0;
  v2[1] = sub_21F69D75C;
  return sub_21F6B7778((uint64_t)(v0 + 28), 0, 0);
}

uint64_t sub_21F69D75C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 224);
  swift_release();
  sub_21F6A12D0(v1 + 128);
  return swift_task_switch();
}

uint64_t sub_21F69D7D0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69D80C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD, uint64_t, uint64_t);
  uint64_t v28;

  v1 = (void *)v0[50];
  swift_unknownObjectRelease();
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[50];
    v7 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v8 = v28;
    *(_DWORD *)v7 = 136446210;
    v0[39] = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    v0[40] = sub_21F644208(v10, v11, &v28);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASSourceFlowController stepDidEndFlow got error sending flowEnded:%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {
    v12 = (void *)v0[50];

  }
  v13 = v0[43];
  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 23));
  swift_release();
  v14 = v0[26];
  v15 = v0[27];
  __swift_project_boxed_opaque_existential_1(v0 + 23, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 23));
  swift_beginAccess();
  v16 = MEMORY[0x2207CC5BC](v13 + 16);
  v0[51] = v16;
  if (v16)
  {
    v17 = v0[43];
    v18 = *(_QWORD *)(v17 + 24);
    *(_BYTE *)(v17 + 32) = 1;
    ObjectType = swift_getObjectType();
    v27 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v18 + 16) + *(_QWORD *)(v18 + 16));
    swift_unknownObjectRetain();
    v20 = (_QWORD *)swift_task_alloc();
    v0[52] = v20;
    *v20 = v0;
    v20[1] = sub_21F69D61C;
    return v27(v0[42], ObjectType, v18);
  }
  else
  {
    v22 = sub_21F715F24();
    v23 = sub_21F716368();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_21F63C000, v22, v23, "PASSourceFlowController presenter is nil in stepDidEndFlow", v24, 2u);
      MEMORY[0x2207CC514](v24, -1, -1);
    }
    v25 = v0[43];

    *(_BYTE *)(v25 + 32) = 1;
    v26 = v0[42];
    v0[53] = sub_21F69B03C();
    sub_21F6A120C(v26, (uint64_t)(v0 + 16));
    return swift_task_switch();
  }
}

uint64_t PASSourceFlowController.presentStep(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_21F6A0CD0(a1, v2, ObjectType, a2);
}

uint64_t PASSourceFlowController.initialStep()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for PASFlowStepSourceStart();
  swift_allocObject();
  v0 = swift_retain();
  v1 = sub_21F6BC954(v0, (uint64_t)&protocol witness table for PASSourceFlowController);
  swift_release();
  sub_21F647438(&qword_2554DF2F8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSourceStart, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  return v1;
}

uint64_t PASSourceFlowController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASSourceFlowController deinit", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  sub_21F653C88(v1 + 16);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PASSourceFlowController.__deallocating_deinit()
{
  PASSourceFlowController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F69DD80()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F656988;
  return PASSourceFlowController.prepareFlow()();
}

uint64_t sub_21F69DDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F651418;
  return PASSourceFlowController.prepareStepForPresentation(_:)(a1, a2);
}

uint64_t sub_21F69DE20(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_21F6A0CD0(a1, v2, ObjectType, a2);
}

uint64_t sub_21F69DE5C()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for PASFlowStepSourceStart();
  swift_allocObject();
  v0 = swift_retain();
  v1 = sub_21F6BC954(v0, (uint64_t)&protocol witness table for PASSourceFlowController);
  swift_release();
  sub_21F647438(&qword_2554DF2F8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSourceStart, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  return v1;
}

void PASSourceFlowController.stepDidFinish(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v6);
  v28[2] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v8 = sub_21F715F3C();
  v9 = __swift_project_value_buffer(v8, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v10 = sub_21F715F24();
  v11 = sub_21F716374();
  v12 = os_log_type_enabled(v10, v11);
  v29 = a2;
  if (v12)
  {
    v28[1] = v9;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v30 = v14;
    *(_DWORD *)v13 = 136446210;
    v31 = a1;
    v32 = a2;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF6D0);
    v15 = sub_21F716128();
    v31 = sub_21F644208(v15, v16, &v30);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v10, v11, "PASSourceFlowController stepDidFinish %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v14, -1, -1);
    MEMORY[0x2207CC514](v13, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  if ((*(_BYTE *)(v3 + 32) & 1) == 0)
  {
    ObjectType = swift_getObjectType();
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(ObjectType, v29);
    v20 = v19;
    swift_unknownObjectRetain_n();
    v21 = sub_21F715F24();
    v22 = sub_21F716374();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136446210;
      v31 = v18;
      v32 = v20;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
      v25 = sub_21F716128();
      v31 = sub_21F644208(v25, v26, &v30);
      sub_21F716428();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v21, v22, "PASSourceFlowController presenting next step %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v24, -1, -1);
      MEMORY[0x2207CC514](v23, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    v27 = swift_getObjectType();
    sub_21F6A0CD0(v18, (_QWORD *)v3, v27, v20);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_21F69E6EC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_21F7162A8();
  v4[3] = sub_21F71629C();
  v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_21F69E768;
  return v8();
}

uint64_t sub_21F69E768()
{
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F69E7D8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASSourceFlowController.stepDidRequestReset(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v3[11] = swift_task_alloc();
  v3[12] = sub_21F7162A8();
  v3[13] = sub_21F71629C();
  v3[14] = sub_21F716248();
  v3[15] = v4;
  return swift_task_switch();
}

uint64_t sub_21F69E8A0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t (*v25)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v26;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v24 = *(_OWORD *)(v0 + 64);
    v4 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v5 = v26;
    *(_DWORD *)v4 = 136446210;
    *(_OWORD *)(v0 + 40) = v24;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v6 = sub_21F716128();
    *(_QWORD *)(v0 + 56) = sub_21F644208(v6, v7, &v26);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowController stepDidRequestReset %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v5, -1, -1);
    MEMORY[0x2207CC514](v4, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v8 = *(_QWORD *)(v0 + 80);
  if ((*(_BYTE *)(v8 + 32) & 1) == 0)
  {
    v9 = *(_QWORD *)(v0 + 88);
    v10 = sub_21F7162C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_retain();
    v11 = sub_21F71629C();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x24BEE6930];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = v8;
    sub_21F6B4038(v9, (uint64_t)&unk_2554DF320, (uint64_t)v12);
    swift_release();
    swift_beginAccess();
    v14 = MEMORY[0x2207CC5BC](v8 + 16);
    *(_QWORD *)(v0 + 128) = v14;
    if (!v14)
    {
      v15 = sub_21F715F24();
      v16 = sub_21F716368();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_21F63C000, v15, v16, "PASSourceFlowController presenter is nil in stepDidRequestReset", v17, 2u);
        MEMORY[0x2207CC514](v17, -1, -1);
      }

    }
    v18 = MEMORY[0x2207CC5BC](v8 + 16);
    *(_QWORD *)(v0 + 136) = v18;
    if (v18)
    {
      v19 = *(_QWORD *)(v8 + 24);
      ObjectType = swift_getObjectType();
      v21 = *(_QWORD *)(v19 + 8);
      v25 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v21 + 16) + *(_QWORD *)(v21 + 16));
      v22 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 144) = v22;
      *v22 = v0;
      v22[1] = sub_21F69EC58;
      return v25(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), ObjectType, v21);
    }
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69EC58()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F69ECAC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69ECF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a4;
  sub_21F7162A8();
  v4[8] = sub_21F71629C();
  v4[9] = sub_21F716248();
  v4[10] = v5;
  return swift_task_switch();
}

uint64_t sub_21F69ED5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[7] + 64);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 24);
    swift_retain();
    v4 = v2;
  }
  else
  {
    v5 = qword_2554DA6A0;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v4 = sub_21F63F1E4();
    v3 = v6;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[11] = v4;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 56) + *(_QWORD *)(v3 + 56));
  v8 = (_QWORD *)swift_task_alloc();
  v0[12] = v8;
  *v8 = v0;
  v8[1] = sub_21F69EE7C;
  return v10(ObjectType, v3);
}

uint64_t sub_21F69EE7C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 116) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F69EEE8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;

  swift_release();
  swift_unknownObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 116);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    *(_DWORD *)(v0 + 112) = v4;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowController stepDidRequestReset got response from sendReset %{BOOL,public}d", v5, 8u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69F018()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release();
  swift_unknownObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 104);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 104);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 40) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v12 = sub_21F716128();
    *(_QWORD *)(v0 + 48) = sub_21F644208(v12, v13, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASSourceFlowController stepDidRequestReset got error sending flowReset.%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASSourceFlowController.stepDidRequestCancel(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  sub_21F7162A8();
  v3[21] = sub_21F71629C();
  v3[22] = sub_21F716248();
  v3[23] = v4;
  return swift_task_switch();
}

uint64_t sub_21F69F28C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  uint64_t (*v30)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  *(_QWORD *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v29 = *(_OWORD *)(v0 + 144);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136446210;
    v32 = v5;
    *(_OWORD *)(v0 + 104) = v29;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v6 = sub_21F716128();
    *(_QWORD *)(v0 + 136) = sub_21F644208(v6, v7, &v32);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowController stepDidRequestCancel %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v5, -1, -1);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  v8 = *(_QWORD *)(v0 + 160);
  if ((*(_BYTE *)(v8 + 32) & 1) != 0)
  {
    swift_retain();
    sub_21F656B08(v0 + 16);
    swift_release();
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    swift_beginAccess();
    v11 = MEMORY[0x2207CC5BC](v8 + 16);
    *(_QWORD *)(v0 + 224) = v11;
    if (!v11)
    {
      v12 = sub_21F715F24();
      v13 = sub_21F716368();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_21F63C000, v12, v13, "PASSourceFlowController presenter is nil in stepDidRequestCancel", v14, 2u);
        MEMORY[0x2207CC514](v14, -1, -1);
      }

    }
    *(_BYTE *)(*(_QWORD *)(v0 + 160) + 32) = 1;
    v15 = MEMORY[0x2207CC5BC](v8 + 16);
    *(_QWORD *)(v0 + 232) = v15;
    if (v15)
    {
      v16 = *(_QWORD *)(v8 + 24);
      ObjectType = swift_getObjectType();
      v18 = *(_QWORD *)(v16 + 8);
      v30 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v18 + 24) + *(_QWORD *)(v18 + 24));
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v19;
      *v19 = v0;
      v19[1] = sub_21F69F9FC;
      return v30(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), ObjectType, v18);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_release();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v21 = *(_QWORD *)(v8 + 64);
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = *(_QWORD *)(v21 + 24);
      swift_retain();
      v24 = v22;
    }
    else
    {
      v25 = qword_2554DA6A0;
      swift_retain();
      if (v25 != -1)
        swift_once();
      v24 = sub_21F63F1E4();
      v23 = v26;
      *(_QWORD *)(v21 + 16) = v24;
      *(_QWORD *)(v21 + 24) = v26;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v0 + 200) = v24;
    swift_unknownObjectRetain();
    swift_release();
    v27 = swift_getObjectType();
    v31 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v23 + 64) + *(_QWORD *)(v23 + 64));
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v28;
    *v28 = v0;
    v28[1] = sub_21F69F718;
    return v31(v27, v23);
  }
}

uint64_t sub_21F69F718(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 252) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F69F784()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(_QWORD, _QWORD, uint64_t, uint64_t);

  swift_unknownObjectRelease();
  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 252);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67240192;
    *(_DWORD *)(v0 + 248) = v3;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASSourceFlowController stepDidRequestCancel got response from sendCancelFlow %{BOOL,public}d", v4, 8u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 160);
  swift_retain();
  sub_21F656B08(v0 + 16);
  swift_release();
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_beginAccess();
  v8 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 224) = v8;
  if (!v8)
  {
    v9 = sub_21F715F24();
    v10 = sub_21F716368();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21F63C000, v9, v10, "PASSourceFlowController presenter is nil in stepDidRequestCancel", v11, 2u);
      MEMORY[0x2207CC514](v11, -1, -1);
    }

  }
  *(_BYTE *)(*(_QWORD *)(v0 + 160) + 32) = 1;
  v12 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 232) = v12;
  if (v12)
  {
    v13 = *(_QWORD *)(v5 + 24);
    ObjectType = swift_getObjectType();
    v15 = *(_QWORD *)(v13 + 8);
    v18 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v15 + 24) + *(_QWORD *)(v15 + 24));
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v16;
    *v16 = v0;
    v16[1] = sub_21F69F9FC;
    return v18(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), ObjectType, v15);
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F69F9FC()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F69FA50()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F69FA8C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v26)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v27;

  v1 = *(void **)(v0 + 216);
  swift_unknownObjectRelease();
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 216);
    v7 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v8 = v27;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 128) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 120) = sub_21F644208(v10, v11, &v27);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASSourceFlowController stepDidRequestCancel got error sending flowCancel.\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 216);

  }
  v13 = *(_QWORD *)(v0 + 160);
  swift_retain();
  sub_21F656B08(v0 + 16);
  swift_release();
  v14 = *(_QWORD *)(v0 + 40);
  v15 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_beginAccess();
  v16 = MEMORY[0x2207CC5BC](v13 + 16);
  *(_QWORD *)(v0 + 224) = v16;
  if (!v16)
  {
    v17 = sub_21F715F24();
    v18 = sub_21F716368();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_21F63C000, v17, v18, "PASSourceFlowController presenter is nil in stepDidRequestCancel", v19, 2u);
      MEMORY[0x2207CC514](v19, -1, -1);
    }

  }
  *(_BYTE *)(*(_QWORD *)(v0 + 160) + 32) = 1;
  v20 = MEMORY[0x2207CC5BC](v13 + 16);
  *(_QWORD *)(v0 + 232) = v20;
  if (v20)
  {
    v21 = *(_QWORD *)(v13 + 24);
    ObjectType = swift_getObjectType();
    v23 = *(_QWORD *)(v21 + 8);
    v26 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v23 + 24) + *(_QWORD *)(v23 + 24));
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v24;
    *v24 = v0;
    v24[1] = sub_21F69F9FC;
    return v26(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), ObjectType, v23);
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F69FDDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F656988;
  return PASSourceFlowController.stepDidEndFlow(with:)(a1);
}

uint64_t sub_21F69FE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return PASSourceFlowController.stepDidRequestReset(_:)(a1, a2);
}

uint64_t sub_21F69FE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return PASSourceFlowController.stepDidRequestCancel(_:)(a1, a2);
}

uint64_t PASSourceFlowController.handleReset()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  sub_21F7162A8();
  v1[6] = sub_21F71629C();
  v1[7] = sub_21F716248();
  v1[8] = v2;
  return swift_task_switch();
}

uint64_t sub_21F69FF50()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t (*v16)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowController handleReset", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  if ((*(_BYTE *)(v5 + 32) & 1) != 0)
  {
    swift_release();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 40) + 16;
    swift_beginAccess();
    v7 = MEMORY[0x2207CC5BC](v6);
    *(_QWORD *)(v0 + 72) = v7;
    if (v7)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24);
      ObjectType = swift_getObjectType();
      v10 = *(_QWORD *)(v8 + 8);
      v16 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v10 + 32) + *(_QWORD *)(v10 + 32));
      swift_unknownObjectRetain();
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 80) = v11;
      *v11 = v0;
      v11[1] = sub_21F6A0164;
      return v16(ObjectType, v10);
    }
    swift_release();
    v13 = sub_21F715F24();
    v14 = sub_21F716368();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_21F63C000, v13, v14, "PASSourceFlowController presenter is nil in handleReset", v15, 2u);
      MEMORY[0x2207CC514](v15, -1, -1);
    }

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6A0164()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6A01B8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t PASSourceFlowController.handleCancel()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 48) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6A0264()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  swift_release();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowController handleCancel", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  if ((*(_BYTE *)(v5 + 32) & 1) != 0)
    goto LABEL_11;
  v6 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess();
  if (!MEMORY[0x2207CC5BC](v6))
  {
    v12 = sub_21F715F24();
    v13 = sub_21F716368();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_21F63C000, v12, v13, "PASSourceFlowController presenter is nil in handleCancel", v14, 2u);
      MEMORY[0x2207CC514](v14, -1, -1);
    }

LABEL_11:
    v8 = 0;
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24);
  v8 = 1;
  *(_BYTE *)(v5 + 32) = 1;
  ObjectType = swift_getObjectType();
  v10 = *(_QWORD *)(v7 + 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 40);
  swift_unknownObjectRetain();
  v11(ObjectType, v10);
  swift_unknownObjectRelease_n();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

uint64_t PASSourceFlowController.handleEndFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 24) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6A04B0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  swift_release();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowController handleEndFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  *(_BYTE *)(v5 + 32) = 1;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_21F6A05A4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F6A1998;
  return PASSourceFlowController.handleReset()();
}

uint64_t sub_21F6A05E8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F6A1998;
  return PASSourceFlowController.handleCancel()();
}

uint64_t sub_21F6A062C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F6A0670;
  return PASSourceFlowController.handleEndFlow()();
}

uint64_t sub_21F6A0670(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_21F6A06C0()
{
  qword_2554E5180 = 0x746C75736552;
  *(_QWORD *)algn_2554E5188 = 0xE600000000000000;
}

void sub_21F6A06E0()
{
  qword_2554E5190 = 0x726F727245;
  *(_QWORD *)algn_2554E5198 = 0xE500000000000000;
}

unint64_t sub_21F6A0700()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[3];
  _OWORD v14[3];
  char v15;
  _BYTE v16[56];
  _BYTE v17[56];

  sub_21F6A129C(v0, (uint64_t)v17);
  sub_21F6A1918((uint64_t)v17, (uint64_t)v16);
  sub_21F6A120C((uint64_t)v16, (uint64_t)v14);
  if (v15 == 1)
  {
    v1 = *(void **)&v14[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    if (qword_2554DA700 != -1)
      swift_once();
    v3 = *(_QWORD *)algn_2554E5198;
    *(_QWORD *)(inited + 32) = qword_2554E5190;
    *(_QWORD *)(inited + 40) = v3;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    v4 = sub_21F7168CC();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 80) = &protocol witness table for String;
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v5;
    v6 = sub_21F640D60(inited);

  }
  else
  {
    v13[0] = v14[0];
    v13[1] = v14[1];
    v13[2] = v14[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
    v7 = swift_initStackObject();
    *(_OWORD *)(v7 + 16) = xmmword_21F717EF0;
    if (qword_2554DA6F8 != -1)
      swift_once();
    v8 = *(_QWORD *)algn_2554E5188;
    *(_QWORD *)(v7 + 32) = qword_2554E5180;
    *(_QWORD *)(v7 + 40) = v8;
    v9 = swift_bridgeObjectRetain();
    v10 = PASSourceFlowResultSuccess.description.getter(v9);
    *(_QWORD *)(v7 + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v7 + 80) = &protocol witness table for String;
    *(_QWORD *)(v7 + 48) = v10;
    *(_QWORD *)(v7 + 56) = v11;
    v6 = sub_21F640D60(v7);
    sub_21F6A1960((uint64_t)v13);
  }
  sub_21F6476AC((uint64_t)v16, (uint64_t *)&unk_2554DB8E0);
  return v6;
}

unint64_t sub_21F6A08E0()
{
  uint64_t v0;
  _BYTE v2[56];

  sub_21F6A129C(v0, (uint64_t)v2);
  sub_21F6476AC((uint64_t)v2, (uint64_t *)&unk_2554DB8E0);
  return 0xD000000000000026;
}

uint64_t sub_21F6A0930(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_21F6A0954@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_21F6A097C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;

  v4 = sub_21F647438((unint64_t *)&unk_2554DF580, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepSourceError, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  if (qword_2554DA718 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v6 = sub_21F715F24();
  v7 = sub_21F716374();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = v4;
    v10 = swift_slowAlloc();
    v27[0] = v10;
    *(_DWORD *)v8 = 136446210;
    v28 = a1;
    v29 = v9;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v11 = sub_21F716128();
    v28 = sub_21F644208(v11, v12, v27);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v6, v7, "PASSourceFlowController presentStep: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    v13 = v10;
    v4 = v9;
    MEMORY[0x2207CC514](v13, -1, -1);
    MEMORY[0x2207CC514](v8, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  v14 = MEMORY[0x2207CC5BC](a2 + 2);
  v15 = a2[3];
  if (!v14)
  {
    v16 = sub_21F715F24();
    v17 = sub_21F716368();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21F63C000, v16, v17, "PASSourceFlowController presenter is nil in stepDidFinish", v18, 2u);
      MEMORY[0x2207CC514](v18, -1, -1);
    }

  }
  v19 = swift_conformsToProtocol2();
  if (v19)
    v20 = v19;
  else
    v20 = 0;
  if (v19)
    v21 = a2;
  else
    v21 = 0;
  if (v21)
    swift_retain();
  else
    v20 = 0;
  v22 = a1 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  *(_QWORD *)(v22 + 8) = v20;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  a2[6] = a1;
  a2[7] = v4;
  swift_retain();
  result = swift_unknownObjectRelease();
  if (v14)
  {
    ObjectType = swift_getObjectType();
    v25 = *(_QWORD *)(v15 + 8);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
    swift_unknownObjectRetain();
    v26(a1, v4, ObjectType, v25);
    return swift_unknownObjectRelease_n();
  }
  return result;
}

uint64_t sub_21F6A0CD0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void (*v21)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t ObjectType;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_2554DA718 != -1)
    swift_once();
  v8 = sub_21F715F3C();
  __swift_project_value_buffer(v8, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v9 = sub_21F715F24();
  v10 = sub_21F716374();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v27 = a4;
    v28 = swift_slowAlloc();
    v12 = v28;
    *(_DWORD *)v11 = 136446210;
    v29 = a1;
    v30 = v27;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v13 = sub_21F716128();
    v29 = sub_21F644208(v13, v14, &v28);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v9, v10, "PASSourceFlowController presentStep: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    v15 = v12;
    a4 = v27;
    MEMORY[0x2207CC514](v15, -1, -1);
    MEMORY[0x2207CC514](v11, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  swift_beginAccess();
  v16 = MEMORY[0x2207CC5BC](a2 + 2);
  v17 = a2[3];
  if (!v16)
  {
    v18 = sub_21F715F24();
    v19 = sub_21F716368();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_21F63C000, v18, v19, "PASSourceFlowController presenter is nil in stepDidFinish", v20, 2u);
      MEMORY[0x2207CC514](v20, -1, -1);
    }

  }
  v21 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(a4 + 24);
  v22 = swift_unknownObjectRetain();
  v21(v22, &protocol witness table for PASSourceFlowController, a3, a4);
  a2[6] = a1;
  a2[7] = a4;
  swift_unknownObjectRetain();
  result = swift_unknownObjectRelease();
  if (v16)
  {
    ObjectType = swift_getObjectType();
    v25 = *(_QWORD *)(v17 + 8);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
    swift_unknownObjectRetain();
    v26(a1, a4, ObjectType, v25);
    return swift_unknownObjectRelease_n();
  }
  return result;
}

unint64_t sub_21F6A0FC8()
{
  unint64_t result;

  result = qword_2554E4980;
  if (!qword_2554E4980)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2554E4980);
  }
  return result;
}

uint64_t sub_21F6A1004()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F6A1028(char *a1)
{
  return sub_21F69BD54(a1);
}

uint64_t sub_21F6A1030(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2207CC46C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21F6A1074(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F651418;
  return sub_21F69C0AC(a1, v4, v5, v6);
}

uint64_t sub_21F6A10E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 3:
      swift_bridgeObjectRelease();
      result = swift_release();
      break;
    case 1:
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21F6A1150(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F69CD28(a1, v4, v5, v6);
}

unint64_t sub_21F6A11C8()
{
  unint64_t result;

  result = qword_2554E07E0;
  if (!qword_2554E07E0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E17C, &type metadata for PASSourceFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E07E0);
  }
  return result;
}

uint64_t sub_21F6A120C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DB8E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6A1254()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {

  }
  else
  {
    if (*(_QWORD *)(v0 + 40))
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v1);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_21F6A129C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PASSourceFlowController.AnalyticsEvent(a2, a1);
  return a2;
}

uint64_t sub_21F6A12D0(uint64_t a1)
{
  destroy for PASSourceFlowController.AnalyticsEvent(a1);
  return a1;
}

uint64_t objectdestroy_11Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6A132C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F69E6EC(a1, v4, v5, v6);
}

uint64_t objectdestroy_4Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6A13D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F69ECF0(a1, v4, v5, v6);
}

uint64_t type metadata accessor for PASSourceFlowController()
{
  return objc_opt_self();
}

void destroy for PASSourceFlowController.AnalyticsEvent(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {

  }
  else
  {
    if (*(_QWORD *)(a1 + 24))
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for PASSourceFlowController.AnalyticsEvent(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  if ((*(_BYTE *)(a2 + 48) & 1) != 0)
  {
    v4 = *(id *)a2;
    v5 = *(id *)a2;
    *(_QWORD *)a1 = v4;
    *(_BYTE *)(a1 + 48) = 1;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 24);
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PASSourceFlowController.AnalyticsEvent(uint64_t a1, __int128 *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    sub_21F6476AC(a1, (uint64_t *)&unk_2554DB8E0);
    if ((a2[3] & 1) != 0)
    {
      v4 = *(void **)a2;
      v5 = v4;
      *(_QWORD *)a1 = v4;
      *(_BYTE *)(a1 + 48) = 1;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      if (v6)
      {
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      }
      else
      {
        v7 = *a2;
        v8 = a2[1];
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_BYTE *)(a1 + 48) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PASSourceFlowController.AnalyticsEvent(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_21F6476AC(a1, (uint64_t *)&unk_2554DB8E0);
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PASSourceFlowController.AnalyticsEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PASSourceFlowController.AnalyticsEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASSourceFlowController.AnalyticsEvent()
{
  return &type metadata for PASSourceFlowController.AnalyticsEvent;
}

uint64_t storeEnumTagSinglePayload for PASSourceFlowControllerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21F6A174C + 4 * byte_21F71DEB9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21F6A1780 + 4 * byte_21F71DEB4[v4]))();
}

uint64_t sub_21F6A1780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6A1788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21F6A1790);
  return result;
}

uint64_t sub_21F6A179C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21F6A17A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21F6A17A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21F6A17B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PASSourceFlowControllerError()
{
  return &type metadata for PASSourceFlowControllerError;
}

unint64_t sub_21F6A17D0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6A1804();
  a1[2] = sub_21F6A1848();
  result = sub_21F6A188C();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6A1804()
{
  unint64_t result;

  result = qword_2554DF558;
  if (!qword_2554DF558)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E070, &type metadata for PASSourceFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF558);
  }
  return result;
}

unint64_t sub_21F6A1848()
{
  unint64_t result;

  result = qword_2554DF560;
  if (!qword_2554DF560)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E028, &type metadata for PASSourceFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF560);
  }
  return result;
}

unint64_t sub_21F6A188C()
{
  unint64_t result;

  result = qword_2554DF568;
  if (!qword_2554DF568)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E000, &type metadata for PASSourceFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF568);
  }
  return result;
}

unint64_t sub_21F6A18D4()
{
  unint64_t result;

  result = qword_2554DF570;
  if (!qword_2554DF570)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E144, &type metadata for PASSourceFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF570);
  }
  return result;
}

uint64_t sub_21F6A1918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DB8E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6A1960(uint64_t a1)
{
  destroy for PASSourceFlowResultSuccess();
  return a1;
}

unint64_t sub_21F6A199C()
{
  return sub_21F6A19E4();
}

unint64_t sub_21F6A19C0()
{
  return sub_21F6A19E4();
}

unint64_t sub_21F6A19E4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_21F6A1F20();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  if (!v3)
  {
    v6 = sub_21F7169F8();
    v7 = v4;
    sub_21F716140();
    sub_21F716140();
    v2 = v6;
    v3 = v7;
  }
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6A1AAC(uint64_t a1)
{
  uint64_t inited;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v3;
  v4 = 0xD000000000000029;
  if (a1)
    v4 = 0xD00000000000002BLL;
  v5 = 0x800000021F727B30;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  if (!a1)
    v5 = 0x800000021F727B60;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6A1B58(char a1)
{
  unint64_t v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xD000000000000029;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v4;
  if (a1)
  {
    if (a1 == 1)
      v2 = 0xD000000000000036;
    else
      v2 = 0xD00000000000002CLL;
    if (a1 == 1)
      v5 = 0x800000021F728420;
    else
      v5 = 0x800000021F7283F0;
  }
  else
  {
    v5 = 0x800000021F728460;
  }
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v5;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6A1C2C()
{
  return sub_21F6A19E4();
}

unint64_t sub_21F6A1C58()
{
  return sub_21F6A19E4();
}

unint64_t sub_21F6A1C84()
{
  return sub_21F6A19E4();
}

unint64_t sub_21F6A1CA8()
{
  return sub_21F6A19E4();
}

unint64_t sub_21F6A1CCC()
{
  return sub_21F6A19E4();
}

unint64_t sub_21F6A1CF0(void *a1)
{
  unint64_t v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;

  v2 = 0xD00000000000002FLL;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v4;
  if (a1 == (void *)1)
  {
    v5 = 0x800000021F726C10;
  }
  else
  {
    v6 = a1;
    sub_21F7164E8();
    sub_21F716140();
    v7 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB870);
    sub_21F716128();
    sub_21F716140();
    swift_bridgeObjectRelease();
    sub_21F65B780(a1);
    v2 = 0;
    v5 = 0xE000000000000000;
  }
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v5;
  return sub_21F6409B8(inited);
}

uint64_t sub_21F6A1E14()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A1E38()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A1E5C()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A1E80()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A1EAC()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A1ED0()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A1EF4()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A1F20()
{
  uint64_t v1;

  v1 = sub_21F7169F8();
  sub_21F716140();
  sub_21F716140();
  return v1;
}

unint64_t sub_21F6A1F80(void *a1)
{
  unint64_t v1;
  id v3;
  id v4;

  v1 = 0xD00000000000002FLL;
  if (a1 != (void *)1)
  {
    v3 = a1;
    sub_21F7164E8();
    sub_21F716140();
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB870);
    sub_21F716128();
    sub_21F716140();
    swift_bridgeObjectRelease();
    sub_21F65B780(a1);
    return 0;
  }
  return v1;
}

uint64_t (*sub_21F6A2054(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a1;
  return sub_21F6ABF40;
}

uint64_t sub_21F6A20A8()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F6A20FC()
{
  return sub_21F716134();
}

uint64_t sub_21F6A2118()
{
  sub_21F716920();
  sub_21F716134();
  return sub_21F716968();
}

uint64_t sub_21F6A2168@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21F71665C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_21F6A21B8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x800000021F725D40;
}

unint64_t sub_21F6A21D8()
{
  return sub_21F6A19E4();
}

uint64_t sub_21F6A220C()
{
  return sub_21F6A1F20();
}

uint64_t sub_21F6A2244()
{
  sub_21F6ABB14();
  return sub_21F7168C0();
}

uint64_t sub_21F6A226C()
{
  sub_21F6ABB14();
  return sub_21F7168B4();
}

uint64_t PASTargetFlowController.presenter.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v0 + 16);
}

uint64_t PASTargetFlowController.presenter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PASTargetFlowController.presenter.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x2207CC5BC](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_21F64E9C0;
}

uint64_t PASTargetFlowController.shouldSignInForSelf.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t PASTargetFlowController.shouldSignInForSelf.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t (*PASTargetFlowController.shouldSignInForSelf.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_21F6A244C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 104);
  swift_beginAccess();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 24);
    swift_retain();
  }
  else
  {
    v3 = qword_2554DA6A0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_21F63EB84();
    v2 = v5;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v5;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 32))(v10, ObjectType, v2);
  swift_unknownObjectRelease();
  v7 = v11;
  if (v11)
  {
    v8 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    if (qword_2554DA6E8 != -1)
      swift_once();
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 24))(static PASDeviceCapability.endFlowMessage, unk_2554E5160, v7, v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  }
  else
  {
    sub_21F6476AC((uint64_t)v10, &qword_2554DA770);
  }
  return v7 & 1;
}

uint64_t sub_21F6A25BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(v0 + 120))
  {
    v1 = *(_QWORD *)(v0 + 120);
  }
  else
  {
    v2 = v0;
    swift_retain();
    sub_21F6569AC((uint64_t)v6);
    swift_release();
    v3 = v7;
    v4 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    v1 = (*(uint64_t (**)(ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8))(&type metadata for PASTargetFlowController.AnalyticsEvent, &off_24E456A20, v3, v4);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
    *(_QWORD *)(v2 + 120) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t PASTargetFlowController.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PASTargetFlowController.init()();
  return v0;
}

uint64_t PASTargetFlowController.init()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v1 = v0;
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_21F716608())
    v2 = sub_21F687E74(MEMORY[0x24BEE4AF8]);
  else
    v2 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v0 + 56) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF590);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v0 + 64) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA820);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v0 + 72) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_QWORD *)(v5 + 48) = 0;
  *(_QWORD *)(v0 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_QWORD *)(v6 + 48) = 0;
  *(_QWORD *)(v0 + 88) = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA810);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v0 + 96) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v0 + 104) = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE710);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_QWORD *)(v9 + 48) = 0;
  *(_QWORD *)(v0 + 112) = v9;
  *(_QWORD *)(v0 + 120) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA780);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(v0 + 128) = v10;
  if (qword_2554DA718 != -1)
    swift_once();
  v11 = sub_21F715F3C();
  __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
  v12 = sub_21F715F24();
  v13 = sub_21F716350();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_21F63C000, v12, v13, "PASTargetFlowController init", v14, 2u);
    MEMORY[0x2207CC514](v14, -1, -1);
  }

  return v1;
}

uint64_t PASTargetFlowController.prepareFlow()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[44] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2A8);
  v1[45] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v1[46] = v2;
  v1[47] = *(_QWORD *)(v2 - 8);
  v1[48] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2B0);
  v1[49] = v3;
  v1[50] = *(_QWORD *)(v3 - 8);
  v1[51] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5C0);
  v1[52] = v4;
  v1[53] = *(_QWORD *)(v4 - 8);
  v1[54] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v1[55] = swift_task_alloc();
  v1[56] = sub_21F7162A8();
  v1[57] = sub_21F71629C();
  v1[58] = sub_21F716248();
  v1[59] = v5;
  return swift_task_switch();
}

uint64_t sub_21F6A2A38()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[60] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController prepareFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = v0[44];

  v6 = *(_QWORD *)(v5 + 72);
  swift_beginAccess();
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = *(_QWORD *)(v6 + 24);
    swift_retain();
  }
  else
  {
    v8 = qword_2554DA6A0;
    swift_retain();
    if (v8 != -1)
      swift_once();
    v9 = sub_21F63F780();
    v7 = v10;
    *(_QWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 24) = v10;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v12 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 16);
  v13 = swift_unknownObjectRetain();
  v12(v13, &protocol witness table for PASTargetFlowController, ObjectType, v7);
  swift_unknownObjectRelease();
  swift_retain();
  sub_21F656B78((uint64_t)(v0 + 9));
  swift_release();
  v14 = v0[12];
  v15 = v0[13];
  __swift_project_boxed_opaque_existential_1(v0 + 9, v14);
  v18 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v15 + 8) + *(_QWORD *)(v15 + 8));
  v16 = (_QWORD *)swift_task_alloc();
  v0[61] = v16;
  *v16 = v0;
  v16[1] = sub_21F6A2C70;
  return v18(v14, v15);
}

uint64_t sub_21F6A2C70()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6A2CBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v1 = v0[44];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 9));
  v2 = *(_QWORD *)(v1 + 72);
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 24);
    swift_retain();
    v5 = v3;
  }
  else
  {
    v6 = qword_2554DA6A0;
    swift_retain();
    if (v6 != -1)
      swift_once();
    v5 = sub_21F63F780();
    v4 = v7;
    *(_QWORD *)(v2 + 16) = v5;
    *(_QWORD *)(v2 + 24) = v7;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[62] = v5;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v11 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 32) + *(_QWORD *)(v4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  v0[63] = v9;
  *v9 = v0;
  v9[1] = sub_21F6A2DE8;
  return v11(ObjectType, v4);
}

uint64_t sub_21F6A2DE8()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6A2E3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[44] + 96);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 24);
    swift_retain();
    v4 = v2;
  }
  else
  {
    v5 = qword_2554DA6A0;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v4 = sub_21F63FD44();
    v3 = v6;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[64] = v4;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v8 = (_QWORD *)swift_task_alloc();
  v0[65] = v8;
  *v8 = v0;
  v8[1] = sub_21F6A2F5C;
  return v10(ObjectType, v3);
}

uint64_t sub_21F6A2F5C()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6A2FB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 19));
  swift_release();
  v1 = v0[22];
  v2 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[66] = v3;
  *v3 = v0;
  v3[1] = sub_21F6A3064;
  return v5(v0 + 24, v1, v2);
}

uint64_t sub_21F6A3064()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 536) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6A30C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v11;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 19));
  v1 = v0[27];
  v2 = v0[28];
  __swift_project_boxed_opaque_existential_1(v0 + 24, v1);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = MEMORY[0x24BEE1328];
  sub_21F64AC5C(7u, 0, (uint64_t)&unk_2554DF668, v3, v1, MEMORY[0x24BEE1328], v2);
  swift_release();
  v5 = v0[27];
  v6 = v0[28];
  __swift_project_boxed_opaque_existential_1(v0 + 24, v5);
  v7 = swift_allocObject();
  swift_weakInit();
  sub_21F64AC5C(0, 0, (uint64_t)&unk_2554DF678, v7, v5, v4, v6);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 24));
  v8 = swift_allocObject();
  v0[68] = v8;
  swift_weakInit();
  v11 = (char *)&dword_2554DF5F8 + dword_2554DF5F8;
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  v0[69] = v9;
  *v9 = v0;
  v9[1] = sub_21F6A3290;
  return ((uint64_t (*)(unint64_t, unint64_t, void *, _QWORD, void *, uint64_t))v11)(0xD000000000000012, 0x800000021F726930, &unk_2554DF5F0, 0, &unk_2554DF5E8, v8);
}

uint64_t sub_21F6A3290()
{
  swift_task_dealloc();
  swift_release_n();
  return swift_task_switch();
}

uint64_t sub_21F6A32EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = swift_allocObject();
  v0[70] = v1;
  swift_weakInit();
  v2 = swift_allocObject();
  v0[71] = v2;
  swift_weakInit();
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2554DF5F8
                                                                                    + dword_2554DF5F8);
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[72] = v3;
  *v3 = v0;
  v3[1] = sub_21F6A33E0;
  return v5(0xD000000000000012, 0x800000021F7268F0, (uint64_t)&unk_2554DF608, v1, (uint64_t)&unk_2554DF618, v2);
}

uint64_t sub_21F6A33E0()
{
  swift_task_dealloc();
  swift_release();
  swift_release_n();
  return swift_task_switch();
}

uint64_t sub_21F6A3450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v20 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 408);
  v19 = *(_QWORD *)(v0 + 416);
  v18 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 360);
  v17 = *(_QWORD *)(v0 + 392);
  swift_release();
  v7 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v1, 1, 1, v7);
  swift_retain();
  v8 = sub_21F71629C();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v6;
  sub_21F6B4038(v1, (uint64_t)&unk_2554DF628, (uint64_t)v9);
  swift_release();
  swift_retain();
  sub_21F656B08(v0 + 112);
  swift_release();
  v12 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 144);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 112), v12);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
  sub_21F6A1030((unint64_t *)&unk_2554DF630, (uint64_t *)&unk_2554DF5B0, MEMORY[0x24BDB9EE8]);
  sub_21F715FE4();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 112);
  sub_21F6A0FC8();
  *(_QWORD *)(v0 + 328) = sub_21F7163B0();
  v13 = sub_21F716398();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v16, 1, 1, v13);
  sub_21F6A1030((unint64_t *)&unk_2554DF640, &qword_2554DF2B0, MEMORY[0x24BDB96F8]);
  sub_21F647438(&qword_2554DF2B8, (uint64_t (*)(uint64_t))sub_21F6A0FC8, MEMORY[0x24BEE5670]);
  sub_21F715FD8();
  sub_21F6476AC(v16, &qword_2554DF2A8);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v3, v17);
  swift_allocObject();
  swift_weakInit();
  sub_21F6A1030((unint64_t *)&unk_2554DF650, (uint64_t *)&unk_2554DF5C0, MEMORY[0x24BDB9A08]);
  sub_21F715FF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v19);
  swift_beginAccess();
  sub_21F715F54();
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A3790()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;
  _QWORD *v15;
  uint64_t v17;

  v1 = *(void **)(v0 + 536);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 152);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 536);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v17 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 336) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 344) = sub_21F644208(v10, v11, &v17);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASTargetFlowController registerForRequests failed with error:\n%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 536);

  }
  v13 = *(void **)(v0 + 536);
  *(_QWORD *)(v0 + 16) = v13;
  *(_BYTE *)(v0 + 64) = 1;
  v14 = v13;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 584) = v15;
  *v15 = v0;
  v15[1] = sub_21F6A3974;
  return PASTargetFlowController.stepDidEndFlow(with:)(v0 + 16);
}

uint64_t sub_21F6A3974()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  sub_21F6476AC(v1 + 16, &qword_2554DED40);
  return swift_task_switch();
}

uint64_t sub_21F6A39D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 544) = v1;
  swift_weakInit();
  v4 = (char *)&dword_2554DF5F8 + dword_2554DF5F8;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 552) = v2;
  *v2 = v0;
  v2[1] = sub_21F6A3290;
  return ((uint64_t (*)(unint64_t, unint64_t, void *, _QWORD, void *, uint64_t))v4)(0xD000000000000012, 0x800000021F726930, &unk_2554DF5F0, 0, &unk_2554DF5E8, v1);
}

uint64_t sub_21F6A3AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[17] = a3;
  v4[18] = a4;
  v4[16] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6A3AC0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t Strong;
  char v6;
  uint64_t (*v8)(void);
  uint64_t v9;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  *(_QWORD *)(v0 + 152) = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController got message accountSelected", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 160) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 168) = sub_21F64DB04(*(_QWORD *)(v0 + 136), 1);
    if ((v6 & 1) == 0)
    {
      *(_QWORD *)(v0 + 176) = sub_21F7162A8();
      *(_QWORD *)(v0 + 184) = sub_21F71629C();
      sub_21F716248();
      return swift_task_switch();
    }
    sub_21F655840();
    swift_allocError();
    *(_OWORD *)v9 = xmmword_21F71E280;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    *(_BYTE *)(v9 + 32) = 0;
    swift_willThrow();
    swift_release();
    v8 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    **(_BYTE **)(v0 + 128) = 0;
    v8 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v8();
}

uint64_t sub_21F6A3CB4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[20];
  swift_release();
  swift_beginAccess();
  v0[24] = MEMORY[0x2207CC5BC](v1 + 16);
  v0[25] = *(_QWORD *)(v1 + 24);
  return swift_task_switch();
}

uint64_t sub_21F6A3D2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, _QWORD);

  if (v0[24])
  {
    v1 = v0[25];
    ObjectType = swift_getObjectType();
    v5 = (uint64_t (*)(_QWORD, uint64_t, _QWORD))(**(int **)(v1 + 24) + *(_QWORD *)(v1 + 24));
    v3 = (_QWORD *)swift_task_alloc();
    v0[26] = v3;
    *v3 = v0;
    v3[1] = sub_21F6A3DF8;
    return v5(v0[21], ObjectType, v0[25]);
  }
  else
  {
    v0[27] = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
}

uint64_t sub_21F6A3DF8()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6A3E58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6A3EB8()
{
  uint64_t v0;

  swift_release();
  swift_retain();
  sub_21F656B24(v0 + 16);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6A3F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v3 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 8))(0, v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if ((v3 & 1) != 0)
  {
    *(_QWORD *)(v0 + 224) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    v5 = sub_21F715F24();
    v6 = sub_21F716344();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_21F63C000, v5, v6, "Received .accountSelected message but .signInForSelf feature is not enabled, indicating it should not", v7, 2u);
      MEMORY[0x2207CC514](v7, -1, -1);

      swift_release();
    }
    else
    {
      swift_release();

    }
    **(_BYTE **)(v0 + 128) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A4070()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release();
  swift_beginAccess();
  *(_BYTE *)(v0 + 236) = *(_BYTE *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_21F6A40D0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint8_t *v4;

  v1 = sub_21F715F24();
  v2 = sub_21F716344();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 236);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67240192;
    *(_DWORD *)(v0 + 232) = v3;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v1, v2, "Received .accountSelected message and responding to source device with shouldSignInForSelf: %{BOOL,public}d", v4, 8u);
    MEMORY[0x2207CC514](v4, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();

  }
  **(_BYTE **)(v0 + 128) = *(_BYTE *)(v0 + 236);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A41D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = a4;
  return swift_task_switch();
}

uint64_t sub_21F6A41F0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t Strong;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController got message performPasscodeAndBiometricSetup", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    sub_21F7162A8();
    *(_QWORD *)(v0 + 88) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A4360()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[10];
  swift_release();
  swift_beginAccess();
  v0[12] = MEMORY[0x2207CC5BC](v1 + 16);
  v0[13] = *(_QWORD *)(v1 + 24);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6A43DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, _QWORD);

  if (*(_QWORD *)(v0 + 96))
  {
    v1 = *(_QWORD *)(v0 + 104);
    ObjectType = swift_getObjectType();
    v5 = (uint64_t (*)(uint64_t, _QWORD))(**(int **)(v1 + 32) + *(_QWORD *)(v1 + 32));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v3;
    *v3 = v0;
    v3[1] = sub_21F6A4474;
    return v5(ObjectType, *(_QWORD *)(v0 + 104));
  }
  else
  {
    **(_BYTE **)(v0 + 64) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A4474(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6A44DC()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 64) = *(_BYTE *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASTargetFlowController.stepDidEndFlow(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[42] = a1;
  v2[43] = v1;
  sub_21F7162A8();
  v2[44] = sub_21F71629C();
  v2[45] = sub_21F716248();
  v2[46] = v3;
  return swift_task_switch();
}

uint64_t sub_21F6A4560()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD *v21;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t (*v32)(_QWORD, uint64_t, uint64_t);
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = v0[42];
  v2 = sub_21F715F3C();
  v0[47] = __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  sub_21F647624(v1, (uint64_t)(v0 + 2), &qword_2554DED40);
  v3 = sub_21F715F24();
  v4 = sub_21F716374();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v34 = v6;
    *(_DWORD *)v5 = 136446210;
    sub_21F647624((uint64_t)(v0 + 2), (uint64_t)(v0 + 9), &qword_2554DED40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DED40);
    v7 = sub_21F716128();
    v0[41] = sub_21F644208(v7, v8, &v34);
    sub_21F716428();
    swift_bridgeObjectRelease();
    sub_21F6476AC((uint64_t)(v0 + 2), &qword_2554DED40);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASTargetFlowController stepDidEndFlow with result\n%{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v6, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    sub_21F6476AC((uint64_t)(v0 + 2), &qword_2554DED40);
  }

  v9 = v0[43];
  if ((*(_BYTE *)(v9 + 33) & 1) != 0 || (v10 = sub_21F6A244C(), v9 = v0[43], (v10 & 1) == 0))
  {
    swift_retain();
    sub_21F656B08((uint64_t)(v0 + 23));
    swift_release();
    v15 = v0[26];
    v16 = v0[27];
    __swift_project_boxed_opaque_existential_1(v0 + 23, v15);
    (*(void (**)(uint64_t, uint64_t))(v16 + 40))(v15, v16);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 23));
    swift_beginAccess();
    v17 = MEMORY[0x2207CC5BC](v9 + 16);
    v0[51] = v17;
    if (v17)
    {
      v18 = v0[43];
      v19 = *(_QWORD *)(v18 + 24);
      *(_BYTE *)(v18 + 33) = 1;
      ObjectType = swift_getObjectType();
      v32 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v19 + 40) + *(_QWORD *)(v19 + 40));
      swift_unknownObjectRetain();
      v21 = (_QWORD *)swift_task_alloc();
      v0[52] = v21;
      *v21 = v0;
      v21[1] = sub_21F6A4D18;
      return v32(v0[42], ObjectType, v19);
    }
    else
    {
      v23 = sub_21F715F24();
      v24 = sub_21F716368();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_21F63C000, v23, v24, "PASTargetFlowController presenter is nil in stepDidEndFlow", v25, 2u);
        MEMORY[0x2207CC514](v25, -1, -1);
      }
      v26 = v0[43];

      *(_BYTE *)(v26 + 33) = 1;
      v27 = v0[42];
      v0[53] = sub_21F6A25BC();
      sub_21F647624(v27, (uint64_t)(v0 + 16), &qword_2554DED40);
      return swift_task_switch();
    }
  }
  else
  {
    v11 = *(_QWORD *)(v9 + 72);
    swift_beginAccess();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = *(_QWORD *)(v11 + 24);
      swift_retain();
      v14 = v12;
    }
    else
    {
      v28 = qword_2554DA6A0;
      swift_retain();
      if (v28 != -1)
        swift_once();
      v14 = sub_21F63F780();
      v13 = v29;
      *(_QWORD *)(v11 + 16) = v14;
      *(_QWORD *)(v11 + 24) = v29;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    v0[48] = v14;
    swift_unknownObjectRetain();
    swift_release();
    v30 = swift_getObjectType();
    v33 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v13 + 64) + *(_QWORD *)(v13 + 64));
    v31 = (_QWORD *)swift_task_alloc();
    v0[49] = v31;
    *v31 = v0;
    v31[1] = sub_21F6A4A24;
    return v33(v30, v13);
  }
}

uint64_t sub_21F6A4A24(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 65) = a1;
  *(_QWORD *)(v3 + 400) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6A4A90()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD *v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD, uint64_t, uint64_t);

  swift_unknownObjectRelease();
  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 65);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67240192;
    *(_DWORD *)(v0 + 68) = v3;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASTargetFlowController stepDidEndFlow got response from flowEnded: %{BOOL,public}d", v4, 8u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 344);
  swift_retain();
  sub_21F656B08(v0 + 184);
  swift_release();
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 216);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 184), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 184);
  swift_beginAccess();
  v8 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 408) = v8;
  if (v8)
  {
    v9 = *(_QWORD *)(v0 + 344);
    v10 = *(_QWORD *)(v9 + 24);
    *(_BYTE *)(v9 + 33) = 1;
    ObjectType = swift_getObjectType();
    v19 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v10 + 40) + *(_QWORD *)(v10 + 40));
    swift_unknownObjectRetain();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v12;
    *v12 = v0;
    v12[1] = sub_21F6A4D18;
    return v19(*(_QWORD *)(v0 + 336), ObjectType, v10);
  }
  else
  {
    v14 = sub_21F715F24();
    v15 = sub_21F716368();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_21F63C000, v14, v15, "PASTargetFlowController presenter is nil in stepDidEndFlow", v16, 2u);
      MEMORY[0x2207CC514](v16, -1, -1);
    }
    v17 = *(_QWORD *)(v0 + 344);

    *(_BYTE *)(v17 + 33) = 1;
    v18 = *(_QWORD *)(v0 + 336);
    *(_QWORD *)(v0 + 424) = sub_21F6A25BC();
    sub_21F647624(v18, v0 + 128, &qword_2554DED40);
    return swift_task_switch();
  }
}

uint64_t sub_21F6A4D18()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6A4D6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 424) = sub_21F6A25BC();
  sub_21F647624(v1, v0 + 128, &qword_2554DED40);
  return swift_task_switch();
}

uint64_t sub_21F6A4DCC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v0[31] = &type metadata for PASTargetFlowController.AnalyticsEvent;
  v0[32] = &off_24E456A20;
  v1 = swift_allocObject();
  v0[28] = v1;
  sub_21F6AB704((uint64_t)(v0 + 16), v1 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  v0[54] = v2;
  *v2 = v0;
  v2[1] = sub_21F6A4E60;
  return sub_21F6B7B9C((uint64_t)(v0 + 28), 0, 0);
}

uint64_t sub_21F6A4E60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 224);
  swift_release();
  sub_21F6AB738(v1 + 128);
  return swift_task_switch();
}

uint64_t sub_21F6A4ED4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  _QWORD *v20;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD, uint64_t, uint64_t);
  uint64_t v28;

  v1 = (void *)v0[50];
  swift_unknownObjectRelease();
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[50];
    v7 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v8 = v28;
    *(_DWORD *)v7 = 136446210;
    v0[39] = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    v0[40] = sub_21F644208(v10, v11, &v28);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASTargetFlowController stepDidEndFlow got error sending flowEnded:%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {
    v12 = (void *)v0[50];

  }
  v13 = v0[43];
  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 23));
  swift_release();
  v14 = v0[26];
  v15 = v0[27];
  __swift_project_boxed_opaque_existential_1(v0 + 23, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 23));
  swift_beginAccess();
  v16 = MEMORY[0x2207CC5BC](v13 + 16);
  v0[51] = v16;
  if (v16)
  {
    v17 = v0[43];
    v18 = *(_QWORD *)(v17 + 24);
    *(_BYTE *)(v17 + 33) = 1;
    ObjectType = swift_getObjectType();
    v27 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v18 + 40) + *(_QWORD *)(v18 + 40));
    swift_unknownObjectRetain();
    v20 = (_QWORD *)swift_task_alloc();
    v0[52] = v20;
    *v20 = v0;
    v20[1] = sub_21F6A4D18;
    return v27(v0[42], ObjectType, v18);
  }
  else
  {
    v22 = sub_21F715F24();
    v23 = sub_21F716368();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_21F63C000, v22, v23, "PASTargetFlowController presenter is nil in stepDidEndFlow", v24, 2u);
      MEMORY[0x2207CC514](v24, -1, -1);
    }
    v25 = v0[43];

    *(_BYTE *)(v25 + 33) = 1;
    v26 = v0[42];
    v0[53] = sub_21F6A25BC();
    sub_21F647624(v26, (uint64_t)(v0 + 16), &qword_2554DED40);
    return swift_task_switch();
  }
}

uint64_t sub_21F6A5244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 72) = a3;
  return swift_task_switch();
}

uint64_t sub_21F6A525C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Strong;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _UNKNOWN **v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController got message proxiedAuthResults", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 64);

  v6 = sub_21F64D2A8(v5, 2);
  if (!v6)
  {
    sub_21F655840();
    swift_allocError();
    *(_OWORD *)v8 = xmmword_21F718DA0;
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    *(_BYTE *)(v8 + 32) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = sub_21F64DD04(*(_QWORD *)(v0 + 64), 3);
  v10 = v7;
  if (!v7)
  {
    sub_21F655840();
    swift_allocError();
    *(_OWORD *)v11 = xmmword_21F71E290;
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 24) = 0;
    *(_BYTE *)(v11 + 32) = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_21F64D0A8(*(_QWORD *)(v0 + 64), 4, 4, (uint64_t)v27);
  v12 = v27[0];
  v13 = v27[1];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  type metadata accessor for PASFamilyMember();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v10;
  v15[3] = v12;
  v15[4] = v13;
  type metadata accessor for PASFlowStepLocalAuth();
  v16 = swift_allocObject();
  v17 = OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v18 = swift_allocObject();
  *(_QWORD *)(v16 + v17) = v18;
  v19 = v16 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_result;
  *(_BYTE *)(v19 + 8) = -1;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_OWORD *)(v18 + 32) = 0u;
  *(_QWORD *)v19 = 0;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_familyMember) = v15;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASFlowStepLocalAuth_proxiedAuthResults) = v6;
  *(_QWORD *)(v18 + 48) = 0;
  v20 = v16 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v16 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  if (Strong)
  {
    v21 = &protocol witness table for PASTargetFlowController;
  }
  else
  {
    v22 = sub_21F715F24();
    v23 = sub_21F716368();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_21F63C000, v22, v23, "PASTargetFlowStepBase delegate is nil in init", v24, 2u);
      MEMORY[0x2207CC514](v24, -1, -1);
    }

    v21 = 0;
  }
  swift_beginAccess();
  *(_QWORD *)(v20 + 8) = v21;
  swift_unknownObjectWeakAssign();
  swift_release();
  v25 = PASFlowStepBase.init()();
  swift_release();
  v26 = sub_21F647438((unint64_t *)&unk_2554DF9E0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepLocalAuth, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v25, v26);
}

uint64_t sub_21F6A5640(_BYTE *a1)
{
  uint64_t v1;

  *a1 = 1;
  return sub_21F691054(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_21F6A5658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a1;
  *(_QWORD *)(v4 + 88) = a4;
  return swift_task_switch();
}

uint64_t sub_21F6A5670()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 104) = sub_21F7162A8();
    *(_QWORD *)(v0 + 112) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 80) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A5728()
{
  uint64_t v0;

  swift_release();
  swift_retain();
  sub_21F656B24(v0 + 16);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6A578C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v3 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 8))(0, v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if ((v3 & 1) != 0)
  {
    *(_QWORD *)(v0 + 120) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v5 = sub_21F715F3C();
    __swift_project_value_buffer(v5, (uint64_t)static PASLogger.common);
    v6 = sub_21F715F24();
    v7 = sub_21F716344();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_21F63C000, v6, v7, "Received .selectedOwnAccount message but .signInForSelf feature is not enabled, indicating it should not", v8, 2u);
      MEMORY[0x2207CC514](v8, -1, -1);

      swift_release();
    }
    else
    {
      swift_release();

    }
    **(_BYTE **)(v0 + 80) = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A591C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release();
  swift_beginAccess();
  *(_BYTE *)(v0 + 132) = *(_BYTE *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_21F6A597C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716344();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 132);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    *(_DWORD *)(v0 + 128) = v4;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v2, v3, "Received .selectedOwnAccount message and responding to source device with shouldSignInForSelf: %{BOOL,public}d", v5, 8u);
    MEMORY[0x2207CC514](v5, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();

  }
  **(_BYTE **)(v0 + 80) = *(_BYTE *)(v0 + 132);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A5AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 136) = a2;
  *(_QWORD *)(v3 + 144) = a3;
  return swift_task_switch();
}

uint64_t sub_21F6A5ADC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v7;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 152) = Strong;
  if (Strong)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v2 = sub_21F715F3C();
    *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
    v3 = sub_21F715F24();
    v4 = sub_21F716374();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_21F63C000, v3, v4, "PASTargetFlowController got message selectedOwnAccount", v5, 2u);
      MEMORY[0x2207CC514](v5, -1, -1);
    }

    *(_QWORD *)(v0 + 168) = sub_21F7162A8();
    *(_QWORD *)(v0 + 176) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v7 = 0xD00000000000001BLL;
    *(_QWORD *)(v7 + 8) = 0x800000021F728890;
    *(_QWORD *)(v7 + 16) = &unk_2554DF990;
    *(_QWORD *)(v7 + 24) = 0;
    *(_BYTE *)(v7 + 32) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A5C98()
{
  uint64_t v0;

  swift_release();
  swift_retain();
  sub_21F656B24(v0 + 16);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6A5CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v3 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 8))(0, v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if ((v3 & 1) != 0)
  {
    *(_QWORD *)(v0 + 184) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    v5 = sub_21F715F24();
    v6 = sub_21F716344();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_21F63C000, v5, v6, "Ending flow for Buddy setup after user selected their own account on the source device", v7, 2u);
      MEMORY[0x2207CC514](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 152);

    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v9 = 0xD000000000000010;
    *(_QWORD *)(v9 + 8) = 0x800000021F726A90;
    *(_QWORD *)(v9 + 16) = &unk_2554DF9A0;
    *(_QWORD *)(v9 + 24) = v8;
    *(_BYTE *)(v9 + 32) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A5E8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_release();
  swift_beginAccess();
  *(_BYTE *)(v0 + 192) = *(_BYTE *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_21F6A5EEC()
{
  uint64_t v0;
  int v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;

  v1 = *(unsigned __int8 *)(v0 + 192);
  v2 = sub_21F715F24();
  if (v1 != 1)
  {
    v6 = sub_21F716344();
    if (os_log_type_enabled(v2, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_21F63C000, v2, v6, "Ending flow for Buddy setup after user selected their own account on the source device", v7, 2u);
      MEMORY[0x2207CC514](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 152);

    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v9 = 0xD000000000000010;
    *(_QWORD *)(v9 + 8) = 0x800000021F726A90;
    *(_QWORD *)(v9 + 16) = &unk_2554DF9A0;
    *(_QWORD *)(v9 + 24) = v8;
    *(_BYTE *)(v9 + 32) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController will sign in for self", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  v5 = swift_bridgeObjectRetain();
  sub_21F6F506C(v5, (uint64_t *)(v0 + 16));
  v11 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v11, v12);
  if (!v13)
  {
    v25 = sub_21F715F24();
    v26 = sub_21F716374();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_21F63C000, v25, v26, "PASTargetFlowController selectedOwnAccount accountData missing companionDevice", v27, 2u);
      MEMORY[0x2207CC514](v27, -1, -1);
    }

    sub_21F66A660();
    swift_allocError();
    *v28 = 0xD00000000000004DLL;
    v28[1] = 0x800000021F7288B0;
    swift_willThrow();
    swift_release();
    goto LABEL_20;
  }
  v14 = (void *)v13;
  v15 = *(void **)(v0 + 72);
  if (!v15)
  {
    v29 = sub_21F715F24();
    v30 = sub_21F716374();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_21F63C000, v29, v30, "PASTargetFlowController selectedOwnAccount accountData missing account", v31, 2u);
      MEMORY[0x2207CC514](v31, -1, -1);
    }

    sub_21F66A660();
    swift_allocError();
    *v32 = 0xD00000000000004BLL;
    v32[1] = 0x800000021F728900;
    swift_willThrow();
    swift_release();

LABEL_20:
    sub_21F658DA0(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v16 = v15;
  v17 = sub_21F715F24();
  v18 = sub_21F716374();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    _os_log_impl(&dword_21F63C000, v17, v18, "PASTargetFlowController setting client anisette provider", v19, 2u);
    MEMORY[0x2207CC514](v19, -1, -1);
  }
  v20 = *(_QWORD *)(v0 + 152);

  objc_msgSend(v14, sel_setLinkType_, 3);
  type metadata accessor for PASAccountWithImage();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v16;
  *(_OWORD *)(v21 + 24) = xmmword_21F717E50;
  type metadata accessor for PASFlowStepPersonalSignIn();
  v22 = swift_allocObject();
  v23 = sub_21F6ABD00(v20, v21, (uint64_t)v14, v22);
  swift_release();
  sub_21F658DA0(v0 + 16);
  v24 = sub_21F647438(&qword_2554DD9E0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepPersonalSignIn, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v23, v24);
}

uint64_t sub_21F6A63A0()
{
  uint64_t v0;

  return sub_21F69104C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_21F6A63AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6A63C4()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_21F6A6424;
  return PASTargetFlowController.stepDidEndFlow(with:)(v0 + 16);
}

uint64_t sub_21F6A6424()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  sub_21F6476AC(v1, &qword_2554DED40);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21F6A6480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a4;
  sub_21F7162A8();
  v4[7] = sub_21F71629C();
  v4[8] = sub_21F716248();
  v4[9] = v5;
  return swift_task_switch();
}

uint64_t sub_21F6A64EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[6] + 96);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 24);
    swift_retain();
    v4 = v2;
  }
  else
  {
    v5 = qword_2554DA6A0;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v4 = sub_21F63FD44();
    v3 = v6;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[10] = v4;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = v8;
  *v8 = v0;
  v8[1] = sub_21F6A660C;
  return v10(ObjectType, v3);
}

uint64_t sub_21F6A660C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6A666C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  swift_release();
  swift_unknownObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 96);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 96);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138543362;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v12;
    sub_21F716428();
    *v10 = v12;

    _os_log_impl(&dword_21F63C000, v5, v6, "PASDEpendentFlowController prepareFlow failed to sendPASDeviceInfo %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A684C(char *a1)
{
  char v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22[3];
  uint64_t v23;
  unint64_t v24;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if ((v1 & 1) == 0 && (*(_BYTE *)(result + 33) & 1) == 0)
    {
      if (qword_2554DA718 != -1)
        swift_once();
      v4 = sub_21F715F3C();
      __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
      v5 = sub_21F715F24();
      v6 = sub_21F71635C();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_21F63C000, v5, v6, "PASTargetFlowController message session is dead!", v7, 2u);
        MEMORY[0x2207CC514](v7, -1, -1);
      }

      v8 = sub_21F715F24();
      v9 = sub_21F71635C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        *(_DWORD *)v10 = 136446210;
        v22[0] = v11;
        v23 = 0;
        v24 = 0xE000000000000000;
        sub_21F7164E8();
        swift_bridgeObjectRelease();
        v23 = sub_21F644208(0xD00000000000004ALL, 0x800000021F7287A0, v22);
        sub_21F716428();
        _os_log_impl(&dword_21F63C000, v8, v9, "PASTargetFlowController stepDidFinish with error\n%{public}s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v11, -1, -1);
        MEMORY[0x2207CC514](v10, -1, -1);
      }

      sub_21F658AF4();
      v12 = swift_allocError();
      *(_QWORD *)v13 = 0xD00000000000001CLL;
      *(_QWORD *)(v13 + 8) = 0x800000021F728780;
      *(_QWORD *)(v13 + 16) = 0;
      *(_QWORD *)(v13 + 24) = 0;
      *(_BYTE *)(v13 + 32) = 2;
      type metadata accessor for PASFlowStepTargetError();
      v14 = swift_allocObject();
      v15 = OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError__targetAppleIDExchanger;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA800);
      v16 = swift_allocObject();
      *(_QWORD *)(v14 + v15) = v16;
      *(_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityAppleIDSetup22PASFlowStepTargetError_error) = v12;
      *(_QWORD *)(v16 + 16) = 0;
      v17 = v14 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
      *(_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
      swift_unknownObjectWeakInit();
      swift_beginAccess();
      *(_QWORD *)(v17 + 8) = &protocol witness table for PASTargetFlowController;
      swift_unknownObjectWeakAssign();
      v18 = PASFlowStepBase.init()();
      swift_beginAccess();
      if (MEMORY[0x2207CC5BC](v3 + 16))
      {
        v19 = *(_QWORD *)(v3 + 24);
        ObjectType = swift_getObjectType();
        v21 = sub_21F647438(&qword_2554DF6B8, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepTargetError, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8) + 8))(v18, v21, ObjectType);
        swift_unknownObjectRelease();
      }
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t PASTargetFlowController.prepareStepForPresentation(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t ObjectType;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v3[26] = swift_task_alloc();
  v3[27] = sub_21F7162A8();
  v3[28] = sub_21F71629C();
  ObjectType = swift_getObjectType();
  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v6 = (_QWORD *)swift_task_alloc();
  v3[29] = v6;
  *v6 = v3;
  v6[1] = sub_21F6A6CC0;
  return v8(ObjectType, a2);
}

uint64_t sub_21F6A6CC0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc();
  v3 = sub_21F716248();
  if (v0)
  {
    *(_QWORD *)(v2 + 248) = v3;
    *(_QWORD *)(v2 + 256) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_21F6A6D48()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD *v22;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *type;
  uint64_t v40;
  uint64_t v41[2];

  v1 = *(void **)(v0 + 240);
  *(_QWORD *)(v0 + 160) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if (!swift_dynamicCast())
    goto LABEL_4;
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  if (*(_BYTE *)(v0 + 104))
  {
    sub_21F6A10E0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
LABEL_4:

    if (qword_2554DA718 != -1)
      swift_once();
    v7 = *(void **)(v0 + 240);
    v8 = sub_21F715F3C();
    __swift_project_value_buffer(v8, (uint64_t)static PASLogger.common);
    v9 = v7;
    swift_unknownObjectRetain();
    v10 = v7;
    swift_unknownObjectRetain();
    v11 = sub_21F715F24();
    v12 = sub_21F71635C();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(void **)(v0 + 240);
    if (v13)
    {
      v37 = *(_OWORD *)(v0 + 184);
      v15 = swift_slowAlloc();
      type = (_QWORD *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v41[0] = v40;
      *(_DWORD *)v15 = 136446466;
      *(_OWORD *)(v0 + 128) = v37;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
      v16 = sub_21F716128();
      *(_QWORD *)(v0 + 144) = sub_21F644208(v16, v17, v41);
      sub_21F716428();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2114;
      v18 = v14;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 152) = v19;
      sub_21F716428();
      *type = v19;

      _os_log_impl(&dword_21F63C000, v11, v12, "PASTargetFlowController failed to prepare step %{public}s for presentation %{public}@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](type, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v40, -1, -1);
      MEMORY[0x2207CC514](v15, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();

    }
    v20 = *(void **)(v0 + 240);
    *(_QWORD *)(v0 + 16) = v20;
    *(_BYTE *)(v0 + 64) = 1;
    v21 = v20;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v22;
    *v22 = v0;
    v22[1] = sub_21F6A7380;
    return PASTargetFlowController.stepDidEndFlow(with:)(v0 + 16);
  }
  v24 = *(void **)(v0 + 240);
  swift_release();

  if (qword_2554DA718 != -1)
    swift_once();
  v25 = sub_21F715F3C();
  __swift_project_value_buffer(v25, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  v26 = sub_21F715F24();
  v27 = sub_21F716374();
  if (os_log_type_enabled(v26, v27))
  {
    v36 = *(_OWORD *)(v0 + 184);
    v28 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v41[0] = v38;
    *(_DWORD *)v28 = 136446466;
    *(_OWORD *)(v0 + 112) = v36;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v29 = sub_21F716128();
    *(_QWORD *)(v0 + 168) = sub_21F644208(v29, v30, v41);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_21F644208(v4, v3, v41);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v26, v27, "PASTargetFlowController skipping %{public}s.\n%{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v38, -1, -1);
    MEMORY[0x2207CC514](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
  v31 = *(_QWORD *)(v0 + 208);
  v32 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 1, 1, v32);
  swift_retain();
  v33 = sub_21F71629C();
  v34 = (_QWORD *)swift_allocObject();
  v35 = MEMORY[0x24BEE6930];
  v34[2] = v33;
  v34[3] = v35;
  v34[4] = v6;
  v34[5] = v5;
  sub_21F6B4038(v31, (uint64_t)&unk_2554DF690, (uint64_t)v34);
  swift_release();
  sub_21F6AB7E0();
  swift_allocError();
  swift_willThrow();
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A7380()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  sub_21F6476AC(v1 + 16, &qword_2554DED40);
  return swift_task_switch();
}

uint64_t sub_21F6A73E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v7[22] = a6;
  v7[23] = v6;
  v7[20] = a4;
  v7[21] = a5;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  sub_21F7162A8();
  v7[24] = sub_21F71629C();
  v7[25] = sub_21F716248();
  v7[26] = v8;
  return swift_task_switch();
}

uint64_t sub_21F6A7458()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 7));
  swift_release();
  v1 = v0[10];
  v2 = v0[11];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[27] = v3;
  *v3 = v0;
  v3[1] = sub_21F6A7508;
  return v5(v0 + 2, v1, v2);
}

uint64_t sub_21F6A7508()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_21F6A7570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  sub_21F647624(v0 + 16, v0 + 96, &qword_2554DE730);
  v1 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 136);
    v12 = *(_OWORD *)(v0 + 160);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v1);
    v7 = swift_allocObject();
    swift_weakInit();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v12;
    *(_QWORD *)(v8 + 40) = v2;
    *(_QWORD *)(v8 + 48) = v7;
    *(_QWORD *)(v8 + 56) = v6;
    *(_QWORD *)(v8 + 64) = v3;
    v9 = (_QWORD *)swift_allocObject();
    v10 = MEMORY[0x24BEE1328];
    v9[2] = v1;
    v9[3] = v10;
    v9[4] = v5;
    v9[5] = v1;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_21F64AE64(v6, v3, 0, (uint64_t)sub_21F6ABF40, (uint64_t)v9, (uint64_t)&unk_2554DF9B8, v8, v1, MEMORY[0x24BEE1328], v5);
    swift_release();
    swift_release();
    sub_21F6476AC(v0 + 16, &qword_2554DE730);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  }
  else
  {
    sub_21F6476AC(v0 + 16, &qword_2554DE730);
    sub_21F6476AC(v0 + 96, &qword_2554DE730);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A7748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  sub_21F647624(v0 + 16, v0 + 96, &qword_2554DE730);
  v1 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 144);
    v4 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 128);
    v12 = *(_OWORD *)(v0 + 160);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v1);
    v6 = swift_allocObject();
    swift_weakInit();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v4;
    *(_OWORD *)(v7 + 24) = v12;
    *(_QWORD *)(v7 + 40) = v2;
    *(_QWORD *)(v7 + 48) = v6;
    *(_QWORD *)(v7 + 56) = v5;
    *(_QWORD *)(v7 + 64) = v3;
    v8 = (_QWORD *)swift_allocObject();
    v9 = MEMORY[0x24BEE1328];
    v8[2] = v1;
    v8[3] = v9;
    v8[4] = v11;
    v8[5] = v1;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_21F64AE64(v5, v3, 0, (uint64_t)sub_21F6ABF40, (uint64_t)v8, (uint64_t)&unk_2554DF9B8, v7, v1, MEMORY[0x24BEE1328], v11);
    swift_release();
    swift_release();
    sub_21F6476AC(v0 + 16, &qword_2554DE730);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  }
  else
  {
    sub_21F6476AC(v0 + 16, &qword_2554DE730);
    sub_21F6476AC(v0 + 96, &qword_2554DE730);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A7934(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  _QWORD *v12;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;

  *((_QWORD *)v8 + 18) = a8;
  *((_QWORD *)v8 + 19) = v15;
  *((_QWORD *)v8 + 16) = a6;
  *((_QWORD *)v8 + 17) = a7;
  *((_QWORD *)v8 + 14) = a2;
  *((_QWORD *)v8 + 15) = a5;
  *((_QWORD *)v8 + 13) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  *((_QWORD *)v8 + 20) = swift_task_alloc();
  v14 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)a3 + *a3);
  v12 = (_QWORD *)swift_task_alloc();
  *((_QWORD *)v8 + 21) = v12;
  *v12 = v8;
  v12[1] = sub_21F6A79F0;
  return v14(v8 + 49, a1, a2);
}

uint64_t sub_21F6A79F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD, _QWORD);

  v2 = *v1;
  *(_QWORD *)(v2 + 176) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v2 + 120) + *(_QWORD *)(v2 + 120));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 184) = v4;
  *v4 = v2;
  v4[1] = sub_21F6A7A9C;
  return v5(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112));
}

uint64_t sub_21F6A7A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[24] = a1;
  v4[25] = a2;
  v4[26] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6A7B0C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_21F6A7B44()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v3;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 216) = Strong;
  if (Strong)
  {
    sub_21F7162A8();
    *(_QWORD *)(v0 + 224) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  else
  {
    swift_unknownObjectRelease();
    v3 = *(unsigned __int8 *)(v0 + 49);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
  }
}

uint64_t sub_21F6A7C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  swift_release();
  PASTargetFlowController.presentStep(_:)(v2, v1);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6A7C64()
{
  uint64_t v0;
  uint64_t v1;

  swift_unknownObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 49);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6A7CA8()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 208);
  *(_QWORD *)(v0 + 80) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if (!swift_dynamicCast())
    goto LABEL_4;
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  if (*(_BYTE *)(v0 + 48))
  {
    sub_21F6A10E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
LABEL_4:

    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v8 = *(_QWORD *)(v0 + 160);

  v9 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v6;
  v10[5] = v5;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_2554DF9D0;
  v11[5] = v10;
  swift_retain();
  sub_21F6B4038(v8, (uint64_t)&unk_2554E19E0, (uint64_t)v11);
  swift_release();
  if (qword_2554DA718 != -1)
    swift_once();
  v12 = sub_21F715F3C();
  __swift_project_value_buffer(v12, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v13 = sub_21F715F24();
  v14 = sub_21F716344();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 152);
  if (v15)
  {
    v19 = *(_QWORD *)(v0 + 144);
    v17 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v17 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = sub_21F644208(v19, v16, &v21);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_21F644208(v4, v3, &v21);
    sub_21F716428();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v13, v14, "Skipping next step presentation for %{public}s: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v20, -1, -1);
    MEMORY[0x2207CC514](v17, -1, -1);

    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v18 = *(unsigned __int8 *)(v0 + 49);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18);
}

uint64_t sub_21F6A8000(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_21F656988;
  return v6();
}

uint64_t PASTargetFlowController.initialStep()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for PASFlowStepTargetStart();
  v0 = swift_allocObject() + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v0 + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(_QWORD *)(v0 + 8) = &protocol witness table for PASTargetFlowController;
  swift_unknownObjectWeakAssign();
  v1 = PASFlowStepBase.init()();
  sub_21F647438(&qword_2554DF6A0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepTargetStart, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  return v1;
}

uint64_t PASTargetFlowController.presentStep(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t ObjectType;
  void (*v21)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  if (qword_2554DA718 != -1)
    swift_once();
  v6 = sub_21F715F3C();
  __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v7 = sub_21F715F24();
  v8 = sub_21F716374();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = a2;
    v11 = swift_slowAlloc();
    v27 = v11;
    v28 = a1;
    *(_DWORD *)v9 = 136446210;
    v29 = v10;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v12 = sub_21F716128();
    v28 = sub_21F644208(v12, v13, &v27);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v7, v8, "PASTargetFlowController presentStep: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    v14 = v11;
    a2 = v10;
    MEMORY[0x2207CC514](v14, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  swift_beginAccess();
  v15 = MEMORY[0x2207CC5BC](v3 + 2);
  v16 = v3[3];
  if (!v15)
  {
    v17 = sub_21F715F24();
    v18 = sub_21F716368();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_21F63C000, v17, v18, "PASTargetFlowController presenter is nil in stepDidFinish", v19, 2u);
      MEMORY[0x2207CC514](v19, -1, -1);
    }

  }
  ObjectType = swift_getObjectType();
  v21 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(a2 + 24);
  v22 = swift_unknownObjectRetain();
  v21(v22, &protocol witness table for PASTargetFlowController, ObjectType, a2);
  v3[5] = a1;
  v3[6] = a2;
  swift_unknownObjectRetain();
  result = swift_unknownObjectRelease();
  if (v15)
  {
    v24 = swift_getObjectType();
    v25 = *(_QWORD *)(v16 + 8);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
    swift_unknownObjectRetain();
    v26(a1, a2, v24, v25);
    return swift_unknownObjectRelease_n();
  }
  return result;
}

uint64_t PASTargetFlowController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, "PASTargetFlowController deinit", v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  sub_21F653C88(v1 + 16);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PASTargetFlowController.__deallocating_deinit()
{
  PASTargetFlowController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6A855C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_21F6A858C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_21F6A85C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_21F6A8604()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F656988;
  return PASTargetFlowController.prepareFlow()();
}

uint64_t sub_21F6A8648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F651418;
  return PASTargetFlowController.prepareStepForPresentation(_:)(a1, a2);
}

uint64_t sub_21F6A86A8()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for PASFlowStepTargetStart();
  v0 = swift_allocObject() + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v0 + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(_QWORD *)(v0 + 8) = &protocol witness table for PASTargetFlowController;
  swift_unknownObjectWeakAssign();
  v1 = PASFlowStepBase.init()();
  sub_21F647438(&qword_2554DF6A0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepTargetStart, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  return v1;
}

uint64_t PASTargetFlowController.performAIDASignIn(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = a1;
  v2[6] = v1;
  sub_21F7162A8();
  v2[7] = sub_21F71629C();
  v2[8] = sub_21F716248();
  v2[9] = v3;
  return swift_task_switch();
}

uint64_t sub_21F6A87D0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(_QWORD, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController performAIDASignIn", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 48);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 80) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 24);
    ObjectType = swift_getObjectType();
    v14 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v7 + 16) + *(_QWORD *)(v7 + 16));
    swift_unknownObjectRetain();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v9;
    *v9 = v0;
    v9[1] = sub_21F6A89DC;
    return v14(*(_QWORD *)(v0 + 40), ObjectType, v7);
  }
  else
  {
    v11 = sub_21F715F24();
    v12 = sub_21F716368();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_21F63C000, v11, v12, "PASTargetFlowController presenter is nil in performAIDASignIn", v13, 2u);
      MEMORY[0x2207CC514](v13, -1, -1);
    }

    swift_release();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_21F6A89DC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6A8A3C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 96));
}

uint64_t PASTargetFlowController.stepDidFinish(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2554DA718 != -1)
    swift_once();
  v7 = sub_21F715F3C();
  v8 = __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v20[3] = v8;
  v9 = sub_21F715F24();
  v10 = sub_21F716374();
  v11 = os_log_type_enabled(v9, v10);
  v20[2] = v6;
  if (v11)
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v21 = v13;
    *(_DWORD *)v12 = 136446210;
    v22 = a1;
    v23 = a2;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF6D0);
    v14 = sub_21F716128();
    v22 = sub_21F644208(v14, v15, &v21);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v9, v10, "PASTargetFlowController stepDidFinish %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v13, -1, -1);
    MEMORY[0x2207CC514](v12, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  ObjectType = swift_getObjectType();
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  PASTargetFlowController.presentStep(_:)(v17, v18);
  return swift_unknownObjectRelease();
}

uint64_t PASTargetFlowController.stepDidRequestReset(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v3[11] = swift_task_alloc();
  v3[12] = sub_21F7162A8();
  v3[13] = sub_21F71629C();
  v3[14] = sub_21F716248();
  v3[15] = v4;
  return swift_task_switch();
}

uint64_t sub_21F6A921C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  _QWORD *v22;
  __int128 v24;
  uint64_t (*v25)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v26;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v24 = *(_OWORD *)(v0 + 64);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v26 = v5;
    *(_DWORD *)v4 = 136446210;
    *(_OWORD *)(v0 + 40) = v24;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v6 = sub_21F716128();
    *(_QWORD *)(v0 + 56) = sub_21F644208(v6, v7, &v26);
    sub_21F716428();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController stepDidRequestReset %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v5, -1, -1);
    MEMORY[0x2207CC514](v4, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = sub_21F7162C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  swift_retain();
  v11 = sub_21F71629C();
  v12 = (_QWORD *)swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  v12[2] = v11;
  v12[3] = v13;
  v12[4] = v9;
  sub_21F6B4038(v8, (uint64_t)&unk_2554DF6E8, (uint64_t)v12);
  swift_release();
  swift_beginAccess();
  v14 = MEMORY[0x2207CC5BC](v9 + 16);
  *(_QWORD *)(v0 + 128) = v14;
  if (!v14)
  {
    v15 = sub_21F715F24();
    v16 = sub_21F716368();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_21F63C000, v15, v16, "PASTargetFlowController presenter is nil in stepDidRequestReset", v17, 2u);
      MEMORY[0x2207CC514](v17, -1, -1);
    }

  }
  v18 = MEMORY[0x2207CC5BC](v9 + 16);
  *(_QWORD *)(v0 + 136) = v18;
  if (v18)
  {
    v19 = *(_QWORD *)(v9 + 24);
    ObjectType = swift_getObjectType();
    v21 = *(_QWORD *)(v19 + 8);
    v25 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v21 + 16) + *(_QWORD *)(v21 + 16));
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v22;
    *v22 = v0;
    v22[1] = sub_21F69EC58;
    return v25(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), ObjectType, v21);
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6A95CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a4;
  sub_21F7162A8();
  v4[8] = sub_21F71629C();
  v4[9] = sub_21F716248();
  v4[10] = v5;
  return swift_task_switch();
}

uint64_t sub_21F6A9638()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[7] + 72);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 24);
    swift_retain();
    v4 = v2;
  }
  else
  {
    v5 = qword_2554DA6A0;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v4 = sub_21F63F780();
    v3 = v6;
    *(_QWORD *)(v1 + 16) = v4;
    *(_QWORD *)(v1 + 24) = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  v0[11] = v4;
  swift_unknownObjectRetain();
  swift_release();
  ObjectType = swift_getObjectType();
  v10 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v8 = (_QWORD *)swift_task_alloc();
  v0[12] = v8;
  *v8 = v0;
  v8[1] = sub_21F6A9758;
  return v10(ObjectType, v3);
}

uint64_t sub_21F6A9758(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 116) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6A97C4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;

  swift_release();
  swift_unknownObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 116);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    *(_DWORD *)(v0 + 112) = v4;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController stepDidRequestReset got response from sendReset %{BOOL,public}d", v5, 8u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6A98F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  swift_release();
  swift_unknownObjectRelease();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 104);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = v1;
  v4 = v1;
  v5 = sub_21F715F24();
  v6 = sub_21F71635C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 104);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 40) = v8;
    v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v12 = sub_21F716128();
    *(_QWORD *)(v0 + 48) = sub_21F644208(v12, v13, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v5, v6, "PASTargetFlowController stepDidRequestReset got error sending flowReset.%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v10, -1, -1);
    MEMORY[0x2207CC514](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASTargetFlowController.stepDidRequestCancel(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  sub_21F7162A8();
  v3[21] = sub_21F71629C();
  v3[22] = sub_21F716248();
  v3[23] = v4;
  return swift_task_switch();
}

uint64_t sub_21F6A9B68()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  uint64_t (*v30)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  *(_QWORD *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_unknownObjectRetain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v29 = *(_OWORD *)(v0 + 144);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136446210;
    v32 = v5;
    *(_OWORD *)(v0 + 104) = v29;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF2E0);
    v6 = sub_21F716128();
    *(_QWORD *)(v0 + 136) = sub_21F644208(v6, v7, &v32);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController stepDidRequestCancel %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v5, -1, -1);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  v8 = *(_QWORD *)(v0 + 160);
  if ((*(_BYTE *)(v8 + 33) & 1) != 0)
  {
    swift_retain();
    sub_21F656B08(v0 + 16);
    swift_release();
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    swift_beginAccess();
    v11 = MEMORY[0x2207CC5BC](v8 + 16);
    *(_QWORD *)(v0 + 224) = v11;
    if (!v11)
    {
      v12 = sub_21F715F24();
      v13 = sub_21F716368();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_21F63C000, v12, v13, "PASTargetFlowController presenter is nil in stepDidRequestCancel", v14, 2u);
        MEMORY[0x2207CC514](v14, -1, -1);
      }

    }
    *(_BYTE *)(*(_QWORD *)(v0 + 160) + 33) = 1;
    v15 = MEMORY[0x2207CC5BC](v8 + 16);
    *(_QWORD *)(v0 + 232) = v15;
    if (v15)
    {
      v16 = *(_QWORD *)(v8 + 24);
      ObjectType = swift_getObjectType();
      v18 = *(_QWORD *)(v16 + 8);
      v30 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v18 + 24) + *(_QWORD *)(v18 + 24));
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 240) = v19;
      *v19 = v0;
      v19[1] = sub_21F69F9FC;
      return v30(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), ObjectType, v18);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_release();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    v21 = *(_QWORD *)(v8 + 72);
    swift_beginAccess();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = *(_QWORD *)(v21 + 24);
      swift_retain();
      v24 = v22;
    }
    else
    {
      v25 = qword_2554DA6A0;
      swift_retain();
      if (v25 != -1)
        swift_once();
      v24 = sub_21F63F780();
      v23 = v26;
      *(_QWORD *)(v21 + 16) = v24;
      *(_QWORD *)(v21 + 24) = v26;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v0 + 200) = v24;
    swift_unknownObjectRetain();
    swift_release();
    v27 = swift_getObjectType();
    v31 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v23 + 56) + *(_QWORD *)(v23 + 56));
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v28;
    *v28 = v0;
    v28[1] = sub_21F6A9FF4;
    return v31(v27, v23);
  }
}

uint64_t sub_21F6A9FF4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 252) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6AA060()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(_QWORD, _QWORD, uint64_t, uint64_t);

  swift_unknownObjectRelease();
  v1 = sub_21F715F24();
  v2 = sub_21F716374();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 252);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67240192;
    *(_DWORD *)(v0 + 248) = v3;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v1, v2, "PASTargetFlowController stepDidRequestCancel got response from sendCancelFlow %{BOOL,public}d", v4, 8u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 160);
  swift_retain();
  sub_21F656B08(v0 + 16);
  swift_release();
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_beginAccess();
  v8 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 224) = v8;
  if (!v8)
  {
    v9 = sub_21F715F24();
    v10 = sub_21F716368();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21F63C000, v9, v10, "PASTargetFlowController presenter is nil in stepDidRequestCancel", v11, 2u);
      MEMORY[0x2207CC514](v11, -1, -1);
    }

  }
  *(_BYTE *)(*(_QWORD *)(v0 + 160) + 33) = 1;
  v12 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 232) = v12;
  if (v12)
  {
    v13 = *(_QWORD *)(v5 + 24);
    ObjectType = swift_getObjectType();
    v15 = *(_QWORD *)(v13 + 8);
    v18 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v15 + 24) + *(_QWORD *)(v15 + 24));
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v16;
    *v16 = v0;
    v16[1] = sub_21F69F9FC;
    return v18(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), ObjectType, v15);
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6AA2D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v26)(_QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v27;

  v1 = *(void **)(v0 + 216);
  swift_unknownObjectRelease();
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 216);
    v7 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v8 = v27;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 128) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v10 = sub_21F716128();
    *(_QWORD *)(v0 + 120) = sub_21F644208(v10, v11, &v27);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASTargetFlowController stepDidRequestCancel got error sending flowCancel. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 216);

  }
  v13 = *(_QWORD *)(v0 + 160);
  swift_retain();
  sub_21F656B08(v0 + 16);
  swift_release();
  v14 = *(_QWORD *)(v0 + 40);
  v15 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_beginAccess();
  v16 = MEMORY[0x2207CC5BC](v13 + 16);
  *(_QWORD *)(v0 + 224) = v16;
  if (!v16)
  {
    v17 = sub_21F715F24();
    v18 = sub_21F716368();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_21F63C000, v17, v18, "PASTargetFlowController presenter is nil in stepDidRequestCancel", v19, 2u);
      MEMORY[0x2207CC514](v19, -1, -1);
    }

  }
  *(_BYTE *)(*(_QWORD *)(v0 + 160) + 33) = 1;
  v20 = MEMORY[0x2207CC5BC](v13 + 16);
  *(_QWORD *)(v0 + 232) = v20;
  if (v20)
  {
    v21 = *(_QWORD *)(v13 + 24);
    ObjectType = swift_getObjectType();
    v23 = *(_QWORD *)(v21 + 8);
    v26 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v23 + 24) + *(_QWORD *)(v23 + 24));
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v24;
    *v24 = v0;
    v24[1] = sub_21F69F9FC;
    return v26(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), ObjectType, v23);
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6AA628(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F6A1998;
  return PASTargetFlowController.performAIDASignIn(with:)(a1);
}

uint64_t sub_21F6AA674(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F656988;
  return PASTargetFlowController.stepDidEndFlow(with:)(a1);
}

uint64_t sub_21F6AA6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return PASTargetFlowController.stepDidRequestReset(_:)(a1, a2);
}

uint64_t sub_21F6AA720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return PASTargetFlowController.stepDidRequestCancel(_:)(a1, a2);
}

uint64_t PASTargetFlowController.handleReset()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  sub_21F7162A8();
  v1[6] = sub_21F71629C();
  v1[7] = sub_21F716248();
  v1[8] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6AA7E8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t (*v16)(uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController handleReset", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 40);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 72) = v6;
  if (v6)
  {
    v7 = MEMORY[0x2207CC5BC](v5 + 16);
    *(_QWORD *)(v0 + 80) = v7;
    if (v7)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24);
      ObjectType = swift_getObjectType();
      v10 = *(_QWORD *)(v8 + 8);
      v16 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v10 + 32) + *(_QWORD *)(v10 + 32));
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v11;
      *v11 = v0;
      v11[1] = sub_21F6AAA10;
      return v16(ObjectType, v10);
    }
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    v13 = sub_21F715F24();
    v14 = sub_21F716368();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_21F63C000, v13, v14, "PASTargetFlowController presenter is nil in handleReset", v15, 2u);
      MEMORY[0x2207CC514](v15, -1, -1);
    }

  }
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 72) != 0);
}

uint64_t sub_21F6AAA10()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6AAA64()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 72) != 0);
}

uint64_t PASTargetFlowController.handleCancel()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[12] = v0;
  sub_21F7162A8();
  v1[13] = sub_21F71629C();
  v1[14] = sub_21F716248();
  v1[15] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6AAB18()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController handleCancel", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 96);

  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5 + 16);
  *(_QWORD *)(v0 + 128) = v6;
  if (v6)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 24);
    ObjectType = swift_getObjectType();
    sub_21F655840();
    v9 = swift_allocError();
    *(_QWORD *)v10 = 1;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 5;
    *(_QWORD *)(v0 + 16) = v9;
    *(_BYTE *)(v0 + 64) = 1;
    v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 40) + *(_QWORD *)(v7 + 40));
    swift_unknownObjectRetain();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v11;
    *v11 = v0;
    v11[1] = sub_21F6AAD60;
    return v16(v0 + 16, ObjectType, v7);
  }
  else
  {
    swift_release();
    v13 = sub_21F715F24();
    v14 = sub_21F716368();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_21F63C000, v13, v14, "PASTargetFlowController presenter is nil in handleCancel", v15, 2u);
      MEMORY[0x2207CC514](v15, -1, -1);
    }

    return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 128) != 0);
  }
}

uint64_t sub_21F6AAD60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_21F6476AC(v1 + 16, &qword_2554DED40);
  return swift_task_switch();
}

uint64_t sub_21F6AADD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_unknownObjectRelease();
  swift_release();
  *(_BYTE *)(v1 + 33) = 1;
  return (*(uint64_t (**)(BOOL))(v0 + 8))(*(_QWORD *)(v0 + 128) != 0);
}

uint64_t PASTargetFlowController.handleEndFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 24) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6AAE8C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;

  swift_release();
  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASTargetFlowController handleEndFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 16);

  *(_BYTE *)(v5 + 33) = 1;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_21F6AAF80()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F6A1998;
  return PASTargetFlowController.handleReset()();
}

uint64_t sub_21F6AAFC4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F6A1998;
  return PASTargetFlowController.handleCancel()();
}

uint64_t sub_21F6AB008()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F6A0670;
  return PASTargetFlowController.handleEndFlow()();
}

void sub_21F6AB04C()
{
  qword_2554E51A0 = 0x746C75736552;
  *(_QWORD *)algn_2554E51A8 = 0xE600000000000000;
}

void sub_21F6AB06C()
{
  qword_2554E51B0 = 0x726F727245;
  *(_QWORD *)algn_2554E51B8 = 0xE500000000000000;
}

unint64_t sub_21F6AB08C()
{
  uint64_t v0;
  void *v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[3];
  _OWORD v14[3];
  char v15;
  _BYTE v16[56];
  _BYTE v17[56];

  sub_21F6AB704(v0, (uint64_t)v17);
  sub_21F6ABC28((uint64_t)v17, (uint64_t)v16);
  sub_21F647624((uint64_t)v16, (uint64_t)v14, &qword_2554DED40);
  if (v15 == 1)
  {
    v1 = *(void **)&v14[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    if (qword_2554DA710 != -1)
      swift_once();
    v3 = *(_QWORD *)algn_2554E51B8;
    *(_QWORD *)(inited + 32) = qword_2554E51B0;
    *(_QWORD *)(inited + 40) = v3;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    v4 = sub_21F7168CC();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 80) = &protocol witness table for String;
    *(_QWORD *)(inited + 48) = v4;
    *(_QWORD *)(inited + 56) = v5;
    v6 = sub_21F640D60(inited);

  }
  else
  {
    v13[0] = v14[0];
    v13[1] = v14[1];
    v13[2] = v14[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
    v7 = swift_initStackObject();
    *(_OWORD *)(v7 + 16) = xmmword_21F717EF0;
    if (qword_2554DA708 != -1)
      swift_once();
    v8 = *(_QWORD *)algn_2554E51A8;
    *(_QWORD *)(v7 + 32) = qword_2554E51A0;
    *(_QWORD *)(v7 + 40) = v8;
    v9 = swift_bridgeObjectRetain();
    v10 = PASTargetFlowResultSuccess.description.getter(v9);
    *(_QWORD *)(v7 + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v7 + 80) = &protocol witness table for String;
    *(_QWORD *)(v7 + 48) = v10;
    *(_QWORD *)(v7 + 56) = v11;
    v6 = sub_21F640D60(v7);
    sub_21F6ABC70((uint64_t)v13);
  }
  sub_21F6476AC((uint64_t)v16, &qword_2554DED40);
  return v6;
}

unint64_t sub_21F6AB274()
{
  uint64_t v0;
  _BYTE v2[56];

  sub_21F6AB704(v0, (uint64_t)v2);
  sub_21F6476AC((uint64_t)v2, &qword_2554DED40);
  return 0xD000000000000027;
}

uint64_t sub_21F6AB2C4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v17;

  *(_QWORD *)(v9 + 16) = a1;
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 24) = v17;
  *v17 = v9;
  v17[1] = sub_21F6AB370;
  return sub_21F6A7934(a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_21F6AB370(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1 & 1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_21F6AB3D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F6AB3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_21F6AB454;
  v5[8] = a2;
  v5[9] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6AB454(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_21F6AB4B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[10] = a1;
  v4[11] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6AB514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_21F6AC06C;
  v5[17] = a2;
  v5[18] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6AB578(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F6A6480(a1, v4, v5, v6);
}

uint64_t sub_21F6AB5E4(char *a1)
{
  return sub_21F6A684C(a1);
}

uint64_t sub_21F6AB5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_21F651418;
  v7[17] = a3;
  v7[18] = v3;
  v7[16] = a1;
  return swift_task_switch();
}

uint64_t sub_21F6AB65C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F656988;
  v4[8] = a1;
  v4[9] = v1;
  return swift_task_switch();
}

uint64_t sub_21F6AB6BC()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 64) & 1) != 0)
  {

  }
  else
  {
    if (*(_QWORD *)(v0 + 40))
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v1);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_21F6AB704(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PASSourceFlowController.AnalyticsEvent(a2, a1);
  return a2;
}

uint64_t sub_21F6AB738(uint64_t a1)
{
  destroy for PASSourceFlowController.AnalyticsEvent(a1);
  return a1;
}

uint64_t sub_21F6AB768(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F69CD28(a1, v4, v5, v6);
}

unint64_t sub_21F6AB7E0()
{
  unint64_t result;

  result = qword_2554DF698;
  if (!qword_2554DF698)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E568, &type metadata for PASTargetFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF698);
  }
  return result;
}

uint64_t sub_21F6AB828(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F69E6EC(a1, v4, v5, v6);
}

uint64_t sub_21F6AB8A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return sub_21F6A95CC(a1, v4, v5, v6);
}

uint64_t type metadata accessor for PASTargetFlowController()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for PASTargetFlowControllerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6AB970 + 4 * byte_21F71E2A4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6AB990 + 4 * byte_21F71E2A9[v4]))();
}

_BYTE *sub_21F6AB970(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6AB990(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6AB998(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6AB9A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6AB9A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6AB9B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASTargetFlowControllerError()
{
  return &type metadata for PASTargetFlowControllerError;
}

uint64_t assignWithCopy for PASTargetFlowController.AnalyticsEvent(uint64_t a1, __int128 *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    sub_21F6476AC(a1, &qword_2554DED40);
    if ((a2[3] & 1) != 0)
    {
      v4 = *(void **)a2;
      v5 = v4;
      *(_QWORD *)a1 = v4;
      *(_BYTE *)(a1 + 48) = 1;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      if (v6)
      {
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      }
      else
      {
        v7 = *a2;
        v8 = a2[1];
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
      }
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_BYTE *)(a1 + 48) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t assignWithTake for PASTargetFlowController.AnalyticsEvent(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_21F6476AC(a1, &qword_2554DED40);
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  return a1;
}

ValueMetadata *type metadata accessor for PASTargetFlowController.AnalyticsEvent()
{
  return &type metadata for PASTargetFlowController.AnalyticsEvent;
}

unint64_t sub_21F6ABAE0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6ABB14();
  a1[2] = sub_21F6ABB58();
  result = sub_21F6ABB9C();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6ABB14()
{
  unint64_t result;

  result = qword_2554DF968;
  if (!qword_2554DF968)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E46C, &type metadata for PASTargetFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF968);
  }
  return result;
}

unint64_t sub_21F6ABB58()
{
  unint64_t result;

  result = qword_2554DF970;
  if (!qword_2554DF970)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E424, &type metadata for PASTargetFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF970);
  }
  return result;
}

unint64_t sub_21F6ABB9C()
{
  unint64_t result;

  result = qword_2554DF978;
  if (!qword_2554DF978)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E3FC, &type metadata for PASTargetFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF978);
  }
  return result;
}

unint64_t sub_21F6ABBE4()
{
  unint64_t result;

  result = qword_2554DF980;
  if (!qword_2554DF980)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71E540, &type metadata for PASTargetFlowControllerError);
    atomic_store(result, (unint64_t *)&qword_2554DF980);
  }
  return result;
}

uint64_t sub_21F6ABC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DED40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6ABC70(uint64_t a1)
{
  destroy for PASSourceFlowResultSuccess();
  return a1;
}

uint64_t sub_21F6ABCA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  v2[9] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6ABD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__anisetteDataProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE700);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(a4 + v7) = v8;
  v9 = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__authenticator;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DDC50);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_QWORD *)(v10 + 48) = 0;
  *(_QWORD *)(a4 + v9) = v10;
  v11 = OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v12 = swift_allocObject();
  *(_QWORD *)(a4 + v11) = v12;
  v13 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_result;
  *(_BYTE *)(v13 + 8) = -1;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_QWORD *)v13 = 0;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_account) = a2;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup25PASFlowStepPersonalSignIn_companionDevice) = a3;
  *(_QWORD *)(v12 + 48) = 0;
  v14 = a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(a4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(_QWORD *)(v14 + 8) = &protocol witness table for PASTargetFlowController;
  swift_unknownObjectWeakAssign();
  return PASFlowStepBase.init()();
}

uint64_t sub_21F6ABE48()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_21F6ABE84()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_21F656988;
  __asm { BR              X9; sub_21F6AB2C4 }
}

uint64_t sub_21F6ABF30()
{
  return swift_deallocObject();
}

uint64_t sub_21F6ABF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  return sub_21F64AF38(a1, a2, a3, a4, a5, a6, v6[5], v6[2], v6[3], v6[4]);
}

uint64_t sub_21F6ABF6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2554DF9C8 + dword_2554DF9C8))(v2, v3, v4);
}

uint64_t sub_21F6ABFE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2554E19D8 + dword_2554E19D8))(a1, v4, v5, v6);
}

uint64_t sub_21F6AC070()
{
  return swift_task_switch();
}

uint64_t sub_21F6AC084()
{
  _QWORD *v0;
  uint64_t inited;
  uint64_t v2;
  _QWORD *v3;

  type metadata accessor for PASExtensionLocator();
  inited = swift_initStackObject();
  v0[12] = inited;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFB00);
  v2 = swift_initStackObject();
  v0[13] = v2;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(inited + 16) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[14] = v3;
  *v3 = v0;
  v3[1] = sub_21F6AC114;
  return sub_21F6BF218();
}

uint64_t sub_21F6AC114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 120) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_21F6AC1A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6AC1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 136))
  {
    v4 = *(_QWORD *)(v0 + 136);
  }
  else
  {
    v5 = sub_21F7162C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
    v6 = sub_21F6ACB60();
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v0;
    v7[3] = v6;
    v7[4] = v0;
    swift_retain_n();
    v4 = sub_21F6B41A0((uint64_t)v3, (uint64_t)&unk_2554DFAF0, (uint64_t)v7);
    *(_QWORD *)(v0 + 136) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_21F6AC2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a1;
  *(_QWORD *)(v4 + 88) = a4;
  return swift_task_switch();
}

uint64_t sub_21F6AC2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(void);
  uint64_t v20;

  swift_retain();
  sub_21F656B24(v0 + 16);
  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(3, v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if ((v3 & 1) != 0)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v4 = sub_21F715F3C();
    *(_QWORD *)(v0 + 96) = __swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
    v5 = sub_21F715F24();
    v6 = sub_21F716344();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_21F63C000, v5, v6, "PASExtensionCache task is locating extensions", v7, 2u);
      MEMORY[0x2207CC514](v7, -1, -1);
    }
    v8 = *(_QWORD *)(v0 + 88);

    v19 = (uint64_t (*)(void))(**(int **)(v8 + 112) + *(_QWORD *)(v8 + 112));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v9;
    *v9 = v0;
    v9[1] = sub_21F6AC5CC;
    return v19();
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v11 = sub_21F715F3C();
    __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
    v12 = sub_21F715F24();
    v13 = sub_21F716344();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20 = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = sub_21F71650C();
      *(_QWORD *)(v0 + 56) = sub_21F644208(v16, v17, &v20);
      sub_21F716428();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v12, v13, "PASExtensionCache task %{public}s feature flag is disabled", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v15, -1, -1);
      MEMORY[0x2207CC514](v14, -1, -1);
    }

    v18 = *(_QWORD **)(v0 + 80);
    *v18 = 0;
    v18[1] = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6AC5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6AC63C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v14;

  v1 = *(_QWORD **)(v0 + 112);
  if (v1)
  {
    v2 = *(void **)(v0 + 120);
    swift_retain_n();
    v3 = v2;
    sub_21F6ACC34(v1, v2);
    v4 = sub_21F715F24();
    v5 = sub_21F716344();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v14 = v7;
      *(_DWORD *)v6 = 136446210;
      __swift_project_boxed_opaque_existential_1(v1 + 2, v1[5]);
      v8 = sub_21F715F00();
      *(_QWORD *)(v0 + 72) = sub_21F644208(v8, v9, &v14);
      sub_21F716428();
      swift_bridgeObjectRelease();
      swift_release_n();

      _os_log_impl(&dword_21F63C000, v4, v5, "PASExtensionCache task found an extension: %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v7, -1, -1);
      MEMORY[0x2207CC514](v6, -1, -1);

      swift_release();
    }
    else
    {
      swift_release_n();

    }
  }
  else
  {
    v10 = sub_21F715F24();
    v11 = sub_21F716344();
    if (os_log_type_enabled(v10, (os_log_type_t)v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_21F63C000, v10, (os_log_type_t)v11, "PASExtensionCache task found no extensions", v12, 2u);
      MEMORY[0x2207CC514](v12, -1, -1);
    }

  }
  *(_OWORD *)*(_QWORD *)(v0 + 80) = *(_OWORD *)(v0 + 112);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6AC87C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;

  v1 = *(void **)(v0 + 128);
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 128);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138543362;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 64) = v10;
    sub_21F716428();
    *v8 = v10;

    _os_log_impl(&dword_21F63C000, v4, v5, "PASExtensionCache task failed to fetch designated picker extension: %{public}@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v8, -1, -1);
    MEMORY[0x2207CC514](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 128);

  }
  v12 = *(_QWORD **)(v0 + 80);
  *v12 = 0;
  v12[1] = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6ACA08()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for PASExtensionCache()
{
  return objc_opt_self();
}

uint64_t sub_21F6ACA5C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = *v0;
  return swift_task_switch();
}

uint64_t sub_21F6ACA74()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = sub_21F6AC1D8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFAD8);
  *v1 = v0;
  v1[1] = sub_21F6ACAF4;
  return sub_21F7162E4();
}

uint64_t sub_21F6ACAF4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_21F6ACB54()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_21F6ACB60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554DFAE8;
  if (!qword_2554DFAE8)
  {
    v1 = type metadata accessor for PASExtensionCache();
    result = MEMORY[0x2207CC46C](&unk_21F71E644, v1);
    atomic_store(result, (unint64_t *)&qword_2554DFAE8);
  }
  return result;
}

uint64_t sub_21F6ACBA4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6ACBD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F651418;
  v5[10] = a1;
  v5[11] = v4;
  return swift_task_switch();
}

id sub_21F6ACC34(id result, void *a2)
{
  if (result)
  {
    swift_retain();
    return a2;
  }
  return result;
}

uint64_t _s21ProximityAppleIDSetup26PASSourceFlowResultSuccessV11descriptionSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  _BYTE v5[40];

  sub_21F647624(v0, (uint64_t)&v3, &qword_2554DEF00);
  if (v4)
  {
    sub_21F64756C(&v3, (uint64_t)v5);
    sub_21F647710((uint64_t)v5, (uint64_t)&v3);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
    type metadata accessor for PASFamilyMember();
    if (swift_dynamicCast())
    {
      swift_release();
      v1 = 0x6E65646E65706564;
    }
    else
    {
      v1 = 0x6C616E6F73726570;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v5);
  }
  else
  {
    sub_21F6476AC((uint64_t)&v3, &qword_2554DEF00);
    return 1701736302;
  }
  return v1;
}

uint64_t PASFlowResultAccountTypeObjc.description.getter(unint64_t a1)
{
  uint64_t result;

  if (a1 < 3)
    return *(_QWORD *)&aDependenperson[8 * a1];
  result = sub_21F716878();
  __break(1u);
  return result;
}

unint64_t PASFlowResultAccountTypeObjc.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_21F6ACDCC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_21F6ACDE8()
{
  unint64_t *v0;

  return PASFlowResultAccountTypeObjc.description.getter(*v0);
}

uint64_t PASFlowResultAccountTypeObjc.toParsable()@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = MEMORY[0x24BEE1768];
  *a2 = result;
  return result;
}

unint64_t static PASFlowResultAccountTypeObjc.parseObject(_:)(uint64_t a1)
{
  return sub_21F6ADC00(a1);
}

unint64_t sub_21F6ACE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_21F6ADC00(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_21F6ACE50(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  a1[3] = MEMORY[0x24BEE1768];
  *a1 = v2;
}

uint64_t PASSourceFlowResultSuccess.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647624(v1, a1, &qword_2554DEF00);
}

uint64_t PASSourceFlowResultSuccess.authResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PASTargetFlowResultSuccess.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647624(v1, a1, &qword_2554DEF00);
}

uint64_t PASSourceFlowResultObjc.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647624(v1 + OBJC_IVAR___PASSourceFlowResult_result, a1, (uint64_t *)&unk_2554DB8E0);
}

uint64_t PASSourceFlowResultObjc.accountTypeObjc.getter()
{
  return sub_21F6AD3A0(&OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0, (void (*)(_OWORD *))sub_21F6A1960);
}

id PASSourceFlowResultObjc.familyMember.getter()
{
  return sub_21F6ACFDC(&OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0, (void (*)(_OWORD *))sub_21F6A1960, (void (*)(_QWORD))type metadata accessor for PASFamilyMember);
}

id PASSourceFlowResultObjc.personalAccount.getter()
{
  return sub_21F6ACFDC(&OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0, (void (*)(_OWORD *))sub_21F6A1960, (void (*)(_QWORD))type metadata accessor for PASAccountWithImage);
}

id sub_21F6ACFDC(_QWORD *a1, uint64_t *a2, void (*a3)(_OWORD *), void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t *v8;
  id v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v16[3];

  sub_21F647624(v4 + *a1, (uint64_t)&v12, a2);
  if (v15 == 1)
  {
    v8 = a2;
LABEL_7:
    sub_21F6476AC((uint64_t)&v12, v8);
    return 0;
  }
  v16[0] = v12;
  v16[1] = v13;
  v16[2] = v14;
  sub_21F647624((uint64_t)v16, (uint64_t)&v12, &qword_2554DEF00);
  a3(v16);
  if (!*((_QWORD *)&v13 + 1))
  {
    v8 = &qword_2554DEF00;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
  a4(0);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v9 = *(id *)(v11 + 16);
  swift_release();
  return v9;
}

id PASSourceFlowResultObjc.authResults.getter()
{
  return sub_21F6AD584(&OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0, (void (*)(_OWORD *))sub_21F6A1960);
}

uint64_t PASSourceFlowResultObjc.error.getter()
{
  return sub_21F6AD72C(&OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0);
}

id PASSourceFlowResultObjc.__allocating_init(result:)(uint64_t a1)
{
  return sub_21F6AD79C(a1, &OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0);
}

id PASSourceFlowResultObjc.init(result:)(uint64_t a1)
{
  return sub_21F6AD834(a1, &OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0);
}

unint64_t PASSourceFlowResultObjc.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  _QWORD v4[6];
  char v5;

  v1 = 0xD00000000000001BLL;
  sub_21F647624(v0 + OBJC_IVAR___PASSourceFlowResult_result, (uint64_t)v4, (uint64_t *)&unk_2554DB8E0);
  if (v5 == 1)
  {
    v2 = (void *)v4[0];
    sub_21F7164E8();
    sub_21F716140();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    sub_21F7165CC();

    return 0;
  }
  else
  {
    sub_21F6476AC((uint64_t)v4, (uint64_t *)&unk_2554DB8E0);
  }
  return v1;
}

void PASSourceFlowResultObjc.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6AD2D4()
{
  uint64_t v0;

  return sub_21F6476AC(v0 + OBJC_IVAR___PASSourceFlowResult_result, (uint64_t *)&unk_2554DB8E0);
}

uint64_t PASTargetFlowResultObjc.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21F647624(v1 + OBJC_IVAR___PASTargetFlowResult_result, a1, &qword_2554DED40);
}

uint64_t PASTargetFlowResultObjc.accountTypeObjc.getter()
{
  return sub_21F6AD3A0(&OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40, (void (*)(_OWORD *))sub_21F6ABC70);
}

uint64_t sub_21F6AD3A0(_QWORD *a1, uint64_t *a2, void (*a3)(_OWORD *))
{
  uint64_t v3;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;
  _OWORD v11[3];

  sub_21F647624(v3 + *a1, (uint64_t)&v7, a2);
  if ((v10 & 1) != 0)
  {
    sub_21F6476AC((uint64_t)&v7, a2);
    return 2;
  }
  v11[0] = v7;
  v11[1] = v8;
  v11[2] = v9;
  sub_21F647624((uint64_t)v11, (uint64_t)&v7, &qword_2554DEF00);
  a3(v11);
  if (*((_QWORD *)&v8 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF290);
    type metadata accessor for PASFamilyMember();
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_release();
      return 0;
    }
  }
  else
  {
    sub_21F6476AC((uint64_t)&v7, &qword_2554DEF00);
  }
  return 1;
}

id PASTargetFlowResultObjc.familyMember.getter()
{
  return sub_21F6ACFDC(&OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40, (void (*)(_OWORD *))sub_21F6ABC70, (void (*)(_QWORD))type metadata accessor for PASFamilyMember);
}

id PASTargetFlowResultObjc.personalAccount.getter()
{
  return sub_21F6ACFDC(&OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40, (void (*)(_OWORD *))sub_21F6ABC70, (void (*)(_QWORD))type metadata accessor for PASAccountWithImage);
}

id PASTargetFlowResultObjc.authResults.getter()
{
  return sub_21F6AD584(&OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40, (void (*)(_OWORD *))sub_21F6ABC70);
}

id sub_21F6AD584(_QWORD *a1, uint64_t *a2, void (*a3)(_OWORD *))
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  _OWORD v11[2];
  __int128 v12;
  char v13;
  _OWORD v14[3];

  sub_21F647624(v3 + *a1, (uint64_t)v11, a2);
  if ((v13 & 1) != 0)
  {
    sub_21F6476AC((uint64_t)v11, a2);
    return 0;
  }
  else
  {
    v14[0] = v11[0];
    v14[1] = v11[1];
    v14[2] = v12;
    if (*((_QWORD *)&v12 + 1))
    {
      v7 = swift_bridgeObjectRetain();
      sub_21F66C120(v7);
      v8 = objc_allocWithZone(MEMORY[0x24BDBCE70]);
      v9 = (void *)sub_21F71602C();
      swift_bridgeObjectRelease();
      v6 = objc_msgSend(v8, sel_initWithDictionary_, v9);
      swift_bridgeObjectRelease();

    }
    else
    {
      v6 = 0;
    }
    a3(v14);
  }
  return v6;
}

id sub_21F6AD6A4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  void *v5;
  void *v6;
  _QWORD v8[6];
  char v9;

  sub_21F647624(a1 + *a3, (uint64_t)v8, a4);
  if (v9 == 1)
  {
    v5 = (void *)v8[0];
    v6 = (void *)sub_21F715D44();

    return v6;
  }
  else
  {
    sub_21F6476AC((uint64_t)v8, a4);
    return 0;
  }
}

uint64_t PASTargetFlowResultObjc.error.getter()
{
  return sub_21F6AD72C(&OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40);
}

uint64_t sub_21F6AD72C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD v5[6];
  char v6;

  sub_21F647624(v2 + *a1, (uint64_t)v5, a2);
  if (v6 == 1)
    return v5[0];
  sub_21F6476AC((uint64_t)v5, a2);
  return 0;
}

id PASTargetFlowResultObjc.__allocating_init(result:)(uint64_t a1)
{
  return sub_21F6AD79C(a1, &OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40);
}

id sub_21F6AD79C(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  objc_class *v3;
  id v7;
  id v8;
  objc_super v10;

  v7 = objc_allocWithZone(v3);
  sub_21F647624(a1, (uint64_t)v7 + *a2, a3);
  v10.receiver = v7;
  v10.super_class = v3;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_21F6476AC(a1, a3);
  return v8;
}

id PASTargetFlowResultObjc.init(result:)(uint64_t a1)
{
  return sub_21F6AD834(a1, &OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40);
}

id sub_21F6AD834(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  void *v3;
  objc_class *ObjectType;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_21F647624(a1, (uint64_t)v3 + *a2, a3);
  v10.receiver = v3;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_21F6476AC(a1, a3);
  return v8;
}

id sub_21F6AD8C4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_21F7160E0();
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t PASTargetFlowResultObjc.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  _QWORD v4[6];
  char v5;

  v1 = 0xD00000000000001BLL;
  sub_21F647624(v0 + OBJC_IVAR___PASTargetFlowResult_result, (uint64_t)v4, &qword_2554DED40);
  if (v5 == 1)
  {
    v2 = (void *)v4[0];
    sub_21F7164E8();
    sub_21F716140();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    sub_21F7165CC();

    return 0;
  }
  else
  {
    sub_21F6476AC((uint64_t)v4, &qword_2554DED40);
  }
  return v1;
}

void PASTargetFlowResultObjc.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6ADA6C()
{
  uint64_t v0;

  return sub_21F6476AC(v0 + OBJC_IVAR___PASTargetFlowResult_result, &qword_2554DED40);
}

id _s21ProximityAppleIDSetup23PASSourceFlowResultObjcCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t PASFlowResultObjc.accountTypeObjc.getter()
{
  return 2;
}

uint64_t PASFlowResultObjc.familyMember.getter()
{
  return 0;
}

uint64_t PASFlowResultObjc.personalAccount.getter()
{
  return 0;
}

uint64_t PASFlowResultObjc.authResults.getter()
{
  return 0;
}

uint64_t PASFlowResultObjc.error.getter()
{
  return 0;
}

id PASFlowResultObjc.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PASFlowResultObjc.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASFlowResultObjc();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PASFlowResultObjc.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASFlowResultObjc();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_21F6ADC00(uint64_t a1)
{
  unint64_t v2;
  _BYTE v3[32];

  sub_21F6429E4(a1, (uint64_t)v3);
  if (!swift_dynamicCast())
    return 0;
  if (v2 <= 2)
    return v2;
  return 0;
}

uint64_t type metadata accessor for PASFlowResultObjc()
{
  return objc_opt_self();
}

unint64_t sub_21F6ADC88()
{
  unint64_t result;

  result = qword_2554DFB18;
  if (!qword_2554DFB18)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowResultAccountTypeObjc, &type metadata for PASFlowResultAccountTypeObjc);
    atomic_store(result, (unint64_t *)&qword_2554DFB18);
  }
  return result;
}

ValueMetadata *type metadata accessor for PASFlowResultAccountTypeObjc()
{
  return &type metadata for PASFlowResultAccountTypeObjc;
}

ValueMetadata *type metadata accessor for PASSourceFlowResultSuccess()
{
  return &type metadata for PASSourceFlowResultSuccess;
}

uint64_t _s21ProximityAppleIDSetup26PASSourceFlowResultSuccessVwxx_0(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return swift_bridgeObjectRelease();
}

uint64_t _s21ProximityAppleIDSetup26PASSourceFlowResultSuccessVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s21ProximityAppleIDSetup26PASSourceFlowResultSuccessVwca_0(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21ProximityAppleIDSetup26PASSourceFlowResultSuccessVwta_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21ProximityAppleIDSetup26PASSourceFlowResultSuccessVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s21ProximityAppleIDSetup26PASSourceFlowResultSuccessVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASTargetFlowResultSuccess()
{
  return &type metadata for PASTargetFlowResultSuccess;
}

uint64_t type metadata accessor for PASSourceFlowResultObjc()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASTargetFlowResultObjc()
{
  return objc_opt_self();
}

uint64_t PASLogger.common.unsafeMutableAddressor()
{
  return sub_21F6AE0D4(&qword_2554DA718, (uint64_t)static PASLogger.common);
}

void *PASLogger.subsystem.unsafeMutableAddressor()
{
  return &static PASLogger.subsystem;
}

unint64_t static PASLogger.subsystem.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_21F6ADFE4(uint64_t a1)
{
  return sub_21F6AE044(a1, static PASLogger.common);
}

uint64_t static PASLogger.common.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6AE130(&qword_2554DA718, (uint64_t)static PASLogger.common, a1);
}

uint64_t sub_21F6AE01C(uint64_t a1)
{
  return sub_21F6AE044(a1, static PASLogger.viewService);
}

uint64_t sub_21F6AE044(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_21F715F3C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_21F715F30();
}

uint64_t PASLogger.viewService.unsafeMutableAddressor()
{
  return sub_21F6AE0D4(&qword_2554DA720, (uint64_t)static PASLogger.viewService);
}

uint64_t sub_21F6AE0D4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_21F715F3C();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t static PASLogger.viewService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6AE130(&qword_2554DA720, (uint64_t)static PASLogger.viewService, a1);
}

uint64_t sub_21F6AE130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_21F715F3C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

void Logger.pas_ifError(_:message:)(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB6C8);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_21F717EF0;
    swift_getErrorValue();
    v3 = a1;
    v4 = sub_21F7168CC();
    v6 = v5;
    *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v2 + 64) = sub_21F659860();
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v6;
    v7 = sub_21F716110();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = sub_21F715F24();
    v11 = sub_21F71635C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v14 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_21F644208(v7, v9, &v14);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, v10, v11, "%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v13, -1, -1);
      MEMORY[0x2207CC514](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void Logger.pas_ifErrorElse(_:message:debug:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *oslog;
  uint64_t v11;

  if (a1)
  {
    Logger.pas_ifError(_:message:)(a1);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    oslog = sub_21F715F24();
    v7 = sub_21F716350();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v11 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_21F644208(a4, a5, &v11);
      sub_21F716428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_21F63C000, oslog, v7, "%s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v9, -1, -1);
      MEMORY[0x2207CC514](v8, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
}

ValueMetadata *type metadata accessor for PASLogger()
{
  return &type metadata for PASLogger;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_21F6AE58C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  int64_t v29;
  _OWORD v30[2];
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;

  if (!a1 || !*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a2;
  }
  v28 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = (v6 - 1) & v6;
      v10 = __clz(__rbit64(v6)) | (v7 << 6);
      v11 = v7;
LABEL_10:
      sub_21F6474FC(*(_QWORD *)(a1 + 48) + 40 * v10, (uint64_t)&v32);
      sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v34 + 8);
      v12 = v11;
      goto LABEL_29;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_46;
    v12 = v7;
    if (v11 < v29)
    {
      v13 = *(_QWORD *)(v28 + 8 * v11);
      if (v13)
        goto LABEL_14;
      v14 = v7 + 2;
      v12 = v7 + 1;
      if (v7 + 2 < v29)
      {
        v13 = *(_QWORD *)(v28 + 8 * v14);
        if (v13)
          goto LABEL_17;
        v12 = v7 + 2;
        if (v7 + 3 < v29)
        {
          v13 = *(_QWORD *)(v28 + 8 * (v7 + 3));
          if (v13)
          {
            v11 = v7 + 3;
            goto LABEL_14;
          }
          v14 = v7 + 4;
          v12 = v7 + 3;
          if (v7 + 4 < v29)
            break;
        }
      }
    }
LABEL_28:
    v9 = 0;
    v35 = 0;
    memset(v34, 0, sizeof(v34));
    v32 = 0u;
    v33 = 0u;
LABEL_29:
    sub_21F658D18((uint64_t)&v32, (uint64_t)&v36, &qword_2554DFE48);
    if (!*((_QWORD *)&v37 + 1))
    {
      sub_21F671984();
      return (uint64_t)a2;
    }
    sub_21F644FEC(&v39, v31);
    v32 = v36;
    v33 = v37;
    *(_QWORD *)&v34[0] = v38;
    sub_21F6429E4((uint64_t)v31, (uint64_t)v30);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = sub_21F644994((uint64_t)&v32);
    v18 = a2[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v21 = v16;
    if (a2[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v16 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_21F6F95F4();
        if ((v21 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_21F6F7D90(v20, isUniquelyReferenced_nonNull_native);
      v22 = sub_21F644994((uint64_t)&v32);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_48;
      v17 = v22;
      if ((v21 & 1) != 0)
      {
LABEL_6:
        v8 = (_OWORD *)(a2[7] + 32 * v17);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
        sub_21F644FEC(v30, v8);
        goto LABEL_7;
      }
    }
    a2[(v17 >> 6) + 8] |= 1 << v17;
    sub_21F6474FC((uint64_t)&v32, a2[6] + 40 * v17);
    sub_21F644FEC(v30, (_OWORD *)(a2[7] + 32 * v17));
    v24 = a2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_45;
    a2[2] = v26;
LABEL_7:
    swift_bridgeObjectRelease();
    sub_21F647538((uint64_t)&v32);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
    v7 = v12;
    v6 = v9;
  }
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
LABEL_17:
    v11 = v14;
LABEL_14:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_10;
  }
  while (1)
  {
    v11 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v11 >= v29)
    {
      v12 = v29 - 1;
      goto LABEL_28;
    }
    v13 = *(_QWORD *)(v28 + 8 * v11);
    ++v14;
    if (v13)
      goto LABEL_14;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t sub_21F6AE934(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  int64_t v34;
  uint64_t v35;

  if (!a1 || !*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a2;
  }
  v35 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v34 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v7 << 6);
    }
    else
    {
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_40;
      if (v11 >= v34)
      {
LABEL_36:
        sub_21F671984();
        return (uint64_t)a2;
      }
      v12 = *(_QWORD *)(v35 + 8 * v11);
      v13 = v7 + 1;
      if (!v12)
      {
        v13 = v7 + 2;
        if (v7 + 2 >= v34)
          goto LABEL_36;
        v12 = *(_QWORD *)(v35 + 8 * v13);
        if (!v12)
        {
          v13 = v7 + 3;
          if (v7 + 3 >= v34)
            goto LABEL_36;
          v12 = *(_QWORD *)(v35 + 8 * v13);
          if (!v12)
          {
            v14 = v7 + 4;
            if (v7 + 4 >= v34)
              goto LABEL_36;
            v12 = *(_QWORD *)(v35 + 8 * v14);
            if (!v12)
            {
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_41;
                if (v13 >= v34)
                  goto LABEL_36;
                v12 = *(_QWORD *)(v35 + 8 * v13);
                ++v14;
                if (v12)
                  goto LABEL_23;
              }
            }
            v13 = v7 + 4;
          }
        }
      }
LABEL_23:
      v6 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
      v7 = v13;
    }
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    v19 = v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = sub_21F6448D8(v17, v16);
    v23 = a2[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v21;
    if (a2[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v21 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_21F6F9994();
        if ((v26 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_21F6F83B8(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_21F6448D8(v17, v16);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_42;
      v22 = v27;
      if ((v26 & 1) != 0)
      {
LABEL_6:
        v8 = a2[7];

        *(_QWORD *)(v8 + 8 * v22) = v19;
        goto LABEL_7;
      }
    }
    a2[(v22 >> 6) + 8] |= 1 << v22;
    v29 = (uint64_t *)(a2[6] + 16 * v22);
    *v29 = v17;
    v29[1] = v16;
    *(_QWORD *)(a2[7] + 8 * v22) = v19;
    v30 = a2[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_39;
    a2[2] = v32;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t sub_21F6AEC34(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  int64_t v35;
  __int128 v36[2];
  __int128 v37;
  _OWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[3];

  if (!a1 || !*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a2;
  }
  v34 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v35 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = (v6 - 1) & v6;
      v10 = __clz(__rbit64(v6)) | (v7 << 6);
      v11 = v7;
LABEL_10:
      v12 = *(_QWORD *)(a1 + 56);
      v13 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v10);
      v14 = v13[1];
      *(_QWORD *)&v37 = *v13;
      *((_QWORD *)&v37 + 1) = v14;
      sub_21F647710(v12 + 40 * v10, (uint64_t)v38);
      swift_bridgeObjectRetain();
      v15 = v11;
      goto LABEL_29;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_46;
    v15 = v7;
    if (v11 < v35)
    {
      v16 = *(_QWORD *)(v34 + 8 * v11);
      if (v16)
        goto LABEL_14;
      v17 = v7 + 2;
      v15 = v7 + 1;
      if (v7 + 2 < v35)
      {
        v16 = *(_QWORD *)(v34 + 8 * v17);
        if (v16)
          goto LABEL_17;
        v15 = v7 + 2;
        if (v7 + 3 < v35)
        {
          v16 = *(_QWORD *)(v34 + 8 * (v7 + 3));
          if (v16)
          {
            v11 = v7 + 3;
            goto LABEL_14;
          }
          v17 = v7 + 4;
          v15 = v7 + 3;
          if (v7 + 4 < v35)
            break;
        }
      }
    }
LABEL_28:
    v9 = 0;
    v39 = 0;
    memset(v38, 0, sizeof(v38));
    v37 = 0u;
LABEL_29:
    sub_21F658D18((uint64_t)&v37, (uint64_t)&v40, &qword_2554DFE58);
    if (!v41)
    {
      sub_21F671984();
      return (uint64_t)a2;
    }
    sub_21F64756C(v42, (uint64_t)&v37);
    v19 = v40;
    v18 = v41;
    sub_21F647710((uint64_t)&v37, (uint64_t)v36);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = sub_21F6448D8(v19, v18);
    v23 = a2[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v26 = v21;
    if (a2[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v21 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_21F6F9B44();
        if ((v26 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_21F6F86C4(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_21F6448D8(v19, v18);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_48;
      v22 = v27;
      if ((v26 & 1) != 0)
      {
LABEL_6:
        v8 = a2[7] + 40 * v22;
        __swift_destroy_boxed_opaque_existential_0Tm(v8);
        sub_21F64756C(v36, v8);
        goto LABEL_7;
      }
    }
    a2[(v22 >> 6) + 8] |= 1 << v22;
    v29 = (uint64_t *)(a2[6] + 16 * v22);
    *v29 = v19;
    v29[1] = v18;
    sub_21F64756C(v36, a2[7] + 40 * v22);
    v30 = a2[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_45;
    a2[2] = v32;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v37);
    v7 = v15;
    v6 = v9;
  }
  v16 = *(_QWORD *)(v34 + 8 * v17);
  if (v16)
  {
LABEL_17:
    v11 = v17;
LABEL_14:
    v9 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_10;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v35)
    {
      v15 = v35 - 1;
      goto LABEL_28;
    }
    v16 = *(_QWORD *)(v34 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_14;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_21F716890();
  __break(1u);
  return result;
}

uint64_t Dictionary.pas_and(_:)(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v10 = sub_21F71641C();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v47 - v12;
  v62 = *(_QWORD *)(a3 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = sub_21F71641C();
  v59 = *(_QWORD *)(v18 - 8);
  v60 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v47 - v22;
  if (a1)
  {
    v24 = swift_bridgeObjectRetain();
    if ((MEMORY[0x2207CB5D8](v24, a3, a4, a5) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    v63 = a3;
    v64 = a2;
    v61 = v21;
    v54 = a5;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v25 = sub_21F7165D8();
      v50 = 0;
      v26 = 0;
      v27 = 0;
      a1 = v25 | 0x8000000000000000;
    }
    else
    {
      v28 = -1 << *(_BYTE *)(a1 + 32);
      v29 = *(_QWORD *)(a1 + 64);
      v50 = a1 + 64;
      v26 = ~v28;
      v30 = -v28;
      if (v30 < 64)
        v31 = ~(-1 << v30);
      else
        v31 = -1;
      v27 = v31 & v29;
    }
    v55 = a1;
    v51 = (unint64_t)(v26 + 64) >> 6;
    v52 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    v48 = v51 - 1;
    v49 = v26;
    result = swift_bridgeObjectRetain();
    v33 = 0;
    v53 = v23;
    v34 = v55;
    if ((v55 & 0x8000000000000000) != 0)
      goto LABEL_15;
LABEL_12:
    if (v27)
    {
      v35 = (v27 - 1) & v27;
      v36 = __clz(__rbit64(v27)) | (v33 << 6);
      v37 = v33;
LABEL_14:
      v38 = v61;
      v39 = v34;
      (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v61, *(_QWORD *)(v34 + 48) + *(_QWORD *)(v62 + 72) * v36, v63);
      (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(&v38[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v39 + 56) + *(_QWORD *)(v15 + 72) * v36, a4);
      v40 = 0;
      v23 = v53;
      goto LABEL_24;
    }
    v37 = v33 + 1;
    v38 = v61;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
    }
    else
    {
      if (v37 >= v51)
      {
        v35 = 0;
        v40 = 1;
        v37 = v33;
        goto LABEL_24;
      }
      v42 = *(_QWORD *)(v50 + 8 * v37);
      if (v42)
        goto LABEL_20;
      if (v33 + 2 >= v51)
      {
        v35 = 0;
        v40 = 1;
        goto LABEL_24;
      }
      v42 = *(_QWORD *)(v50 + 8 * (v33 + 2));
      if (v42)
      {
        v37 = v33 + 2;
LABEL_20:
        v35 = (v42 - 1) & v42;
        v36 = __clz(__rbit64(v42)) + (v37 << 6);
        goto LABEL_14;
      }
      v46 = v33 + 3;
      if (v33 + 3 >= v51)
      {
        v35 = 0;
        v40 = 1;
        v37 = v33 + 2;
        goto LABEL_24;
      }
      v42 = *(_QWORD *)(v50 + 8 * v46);
      if (v42)
      {
        v37 = v33 + 3;
        goto LABEL_20;
      }
      while (1)
      {
        v37 = v46 + 1;
        if (__OFADD__(v46, 1))
          break;
        if (v37 >= v51)
        {
          v35 = 0;
          v40 = 1;
          v37 = v48;
LABEL_24:
          while (1)
          {
            v43 = *(_QWORD *)(TupleTypeMetadata2 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v38, v40, 1, TupleTypeMetadata2);
            (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v23, v38, v60);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v23, 1, TupleTypeMetadata2) == 1)
              break;
            v44 = v56;
            (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v56, &v23[*(int *)(TupleTypeMetadata2 + 48)], a4);
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v57, v23, v63);
            v45 = v58;
            (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v58, v44, a4);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v45, 0, 1, a4);
            sub_21F716068();
            sub_21F716098();
            result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v44, a4);
            v33 = v37;
            v27 = v35;
            v34 = v55;
            if ((v55 & 0x8000000000000000) == 0)
              goto LABEL_12;
LABEL_15:
            v41 = sub_21F7165E4();
            v38 = v61;
            if (v41)
            {
              sub_21F7167DC();
              swift_unknownObjectRelease();
              sub_21F7167DC();
              swift_unknownObjectRelease();
              v40 = 0;
            }
            else
            {
              v40 = 1;
            }
            v37 = v33;
            v35 = v27;
          }
          sub_21F671984();
          return v64;
        }
        v42 = *(_QWORD *)(v50 + 8 * v37);
        ++v46;
        if (v42)
          goto LABEL_20;
      }
    }
    __break(1u);
    return result;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  return a2;
}

void sub_21F6AF504(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  void *v27;
  _BYTE v28[40];
  _QWORD v29[2];
  _BYTE v30[40];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA30);
    v2 = (_QWORD *)sub_21F71662C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v25 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  if (v5)
    goto LABEL_9;
LABEL_10:
  v12 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_38;
  if (v12 >= v26)
    goto LABEL_35;
  v13 = *(_QWORD *)(v25 + 8 * v12);
  ++v6;
  if (!v13)
  {
    v6 = v12 + 1;
    if (v12 + 1 >= v26)
      goto LABEL_35;
    v13 = *(_QWORD *)(v25 + 8 * v6);
    if (!v13)
    {
      v6 = v12 + 2;
      if (v12 + 2 >= v26)
        goto LABEL_35;
      v13 = *(_QWORD *)(v25 + 8 * v6);
      if (!v13)
      {
        v14 = v12 + 3;
        if (v14 < v26)
        {
          v13 = *(_QWORD *)(v25 + 8 * v14);
          if (v13)
          {
            v6 = v14;
            goto LABEL_23;
          }
          while (1)
          {
            v6 = v14 + 1;
            if (__OFADD__(v14, 1))
              goto LABEL_39;
            if (v6 >= v26)
              break;
            v13 = *(_QWORD *)(v25 + 8 * v6);
            ++v14;
            if (v13)
              goto LABEL_23;
          }
        }
LABEL_35:
        swift_release();
        return;
      }
    }
  }
LABEL_23:
  v5 = (v13 - 1) & v13;
  for (i = __clz(__rbit64(v13)) + (v6 << 6); ; i = v10 | (v6 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v15;
    v16 = v15[1];
    sub_21F647710(*(_QWORD *)(a1 + 56) + 40 * i, (uint64_t)v30);
    v29[0] = v17;
    v29[1] = v16;
    sub_21F647710((uint64_t)v30, (uint64_t)v28);
    swift_bridgeObjectRetain_n();
    sub_21F6476AC((uint64_t)v29, &qword_2554DFE38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFBD0);
    sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
    if (!swift_dynamicCast())
    {
      v27 = 0;
LABEL_33:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      return;
    }
    if (!v27)
      goto LABEL_33;
    if (!v16)
    {
      swift_release();
      swift_release();
      return;
    }
    v18 = sub_21F6448D8(v17, v16);
    v19 = v18;
    if ((v20 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * v18);
      *v7 = v17;
      v7[1] = v16;
      swift_bridgeObjectRelease();
      v8 = v2[7];
      v9 = *(void **)(v8 + 8 * v19);
      *(_QWORD *)(v8 + 8 * v19) = v27;

      if (!v5)
        goto LABEL_10;
      goto LABEL_9;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v18;
    v21 = (uint64_t *)(v2[6] + 16 * v18);
    *v21 = v17;
    v21[1] = v16;
    *(_QWORD *)(v2[7] + 8 * v18) = v27;
    v22 = v2[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_37;
    v2[2] = v24;
    if (!v5)
      goto LABEL_10;
LABEL_9:
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t sub_21F6AF82C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAB28);
    v2 = (_QWORD *)sub_21F71662C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_21F671984();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_21F6474FC(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_21F6429E4(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_21F6474FC((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_21F6476AC((uint64_t)v30, &qword_2554DFE50);
      swift_bridgeObjectRelease();
      sub_21F671984();
      swift_release();
      return 0;
    }
    sub_21F6429E4((uint64_t)v31 + 8, (uint64_t)v25);
    sub_21F6476AC((uint64_t)v30, &qword_2554DFE50);
    sub_21F644FEC(v25, v26);
    v27 = v24;
    sub_21F644FEC(v26, v28);
    v16 = v27;
    sub_21F644FEC(v28, v29);
    sub_21F644FEC(v29, &v27);
    result = sub_21F6448D8(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
      result = (unint64_t)sub_21F644FEC(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_21F644FEC(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_21F6AFBFC()
{
  uint64_t v0;

  v0 = sub_21F715F3C();
  __swift_allocate_value_buffer(v0, qword_2554DFB98);
  __swift_project_value_buffer(v0, (uint64_t)qword_2554DFB98);
  return sub_21F715F30();
}

unint64_t PASAnalyticsEventProtocol.data.getter()
{
  return sub_21F640D60(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_21F6AFC80()
{
  sub_21F7165CC();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t PASAnalyticsEventProtocol<>.name.getter()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v5[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)v5 - v2;
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_21F716158();
  sub_21F7167D0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v5[0];
}

uint64_t Dictionary.pas_and(_:forKey:withDefault:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t TupleTypeMetadata2;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = a7;
  v48 = a4;
  v44 = a3;
  v45 = a5;
  v46 = a2;
  v9 = sub_21F71641C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v43 - v15;
  v17 = *(_QWORD *)(a6 - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v23(v16, a1, v9);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v24(v16, 1, a6) == 1)
  {
    v43 = v20;
    v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v16, v9);
    v23(v13, v44, v9);
    v26 = v24(v13, 1, a6);
    v27 = v48;
    if (v26 == 1)
    {
      v25(v13, v9);
      swift_bridgeObjectRetain();
    }
    else
    {
      v34 = v17;
      v35 = v43;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v43, v13, a6);
      v36 = v45;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      sub_21F7167AC();
      swift_allocObject();
      sub_21F7161F4();
      v39 = v38 + *(int *)(TupleTypeMetadata2 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v38, v46, v36);
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v39, v35, a6);
      sub_21F716230();
      v40 = v47;
      v41 = sub_21F716050();
      v27 = Dictionary.pas_and(_:)(v41, v27, v36, a6, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, a6);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v16, a6);
    v28 = v45;
    v29 = swift_getTupleTypeMetadata2();
    sub_21F7167AC();
    swift_allocObject();
    sub_21F7161F4();
    v31 = v30 + *(int *)(v29 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v30, v46, v28);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v31, v22, a6);
    sub_21F716230();
    v32 = v47;
    v33 = sub_21F716050();
    v27 = Dictionary.pas_and(_:)(v33, v48, v28, a6, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, a6);
  }
  return v27;
}

void sub_21F6B0168(uint64_t a1)
{
  sub_21F6B0188(a1);
}

void sub_21F6B0188(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[3];
  uint64_t v10;

  sub_21F649B14(a1, (uint64_t)v9);
  v2 = v10;
  if (v10)
  {
    v3 = __swift_project_boxed_opaque_existential_1(v9, v10);
    v4 = *(_QWORD *)(v2 - 8);
    MEMORY[0x24BDAC7A8](v3);
    v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    v7 = sub_21F7167E8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
  }
  else
  {
    v7 = 0;
  }
  v8 = (void *)sub_21F7160E0();
  objc_msgSend(v1, sel_setObject_forKey_, v7, v8);
  swift_unknownObjectRelease();

}

double sub_21F6B0290@<D0>(_OWORD *a1@<X8>)
{
  void **v1;
  void *v3;
  void *v4;
  id v5;
  double result;

  v3 = *v1;
  v4 = (void *)sub_21F7160E0();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_21F716458();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_21F6B0310()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_21F6B032C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for PASAnalyticsActor.PASAnalyticsActorType();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  qword_2554E51F0 = v0;
  return result;
}

uint64_t sub_21F6B0368@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  result = sub_21F64779C(0, &qword_2554DFE90);
  a1[3] = result;
  a1[4] = &off_24E456F60;
  *a1 = v2;
  return result;
}

_QWORD *sub_21F6B03D8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0x6C7070612E6D6F63;
  v10[3] = 0xE900000000000065;
  v10[4] = 0xD000000000000015;
  v10[5] = 0x800000021F71E950;
  v10[6] = a2;
  v10[7] = a3;
  v10[8] = a4;
  v10[9] = a5;
  sub_21F64756C(a1, (uint64_t)(v10 + 10));
  return v10;
}

uint64_t PASAnalyticsFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PASAnalyticsFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_21F6B0494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  sub_21F647710(v0 + 80, (uint64_t)v6);
  v1 = v7;
  v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(_QWORD *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 24))(v9, 0xD000000000000017, 0x800000021F728D70, v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  sub_21F649B14((uint64_t)v9, (uint64_t)v6);
  if (!v7)
  {
    sub_21F6476AC((uint64_t)v6, &qword_2554DA750);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE88);
  if (!swift_dynamicCast())
  {
LABEL_5:
    v3 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    goto LABEL_6;
  }
  v3 = v5;
LABEL_6:
  sub_21F6476AC((uint64_t)v9, &qword_2554DA750);
  return v3;
}

uint64_t sub_21F6B0590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_21F647710(v1 + 80, (uint64_t)v7);
  v3 = v8;
  v4 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v6[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE88);
  v6[0] = a1;
  (*(void (**)(_QWORD *, unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 8))(v6, 0xD000000000000017, 0x800000021F728D70, v3, v4);
  sub_21F6476AC((uint64_t)v6, &qword_2554DA750);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
}

uint64_t sub_21F6B0634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD v10[6];

  v6 = (void *)sub_21F7160E0();
  v10[4] = a3;
  v10[5] = a4;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_21F6B06D8;
  v10[3] = &block_descriptor_5;
  v7 = _Block_copy(v10);
  swift_retain();
  v8 = AnalyticsSendEventLazy();

  _Block_release(v7);
  swift_release();
  return v8;
}

id sub_21F6B06D8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
    v4 = (void *)sub_21F71602C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

_QWORD *sub_21F6B075C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = 0x6C7070612E6D6F63;
  v5[3] = 0xE900000000000065;
  v5[4] = 0xD000000000000015;
  v5[5] = 0x800000021F71E950;
  v5[6] = a2;
  v5[7] = a3;
  v5[8] = a4;
  v5[9] = a5;
  sub_21F64756C(a1, (uint64_t)(v5 + 10));
  return v5;
}

uint64_t PASAnalytics.addPersistentValue(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  __int128 v18[2];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_21F647710(a1, (uint64_t)v18);
  v12 = qword_2554DA730;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  v13 = qword_2554E51F0;
  v14 = sub_21F6B36E0();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v13;
  v15[3] = v14;
  v15[4] = v4;
  sub_21F64756C(v18, (uint64_t)(v15 + 5));
  v15[10] = a2;
  v15[11] = a3;
  swift_retain();
  sub_21F6B4038((uint64_t)v10, (uint64_t)&unk_2554DFBC0, (uint64_t)v15);
  return swift_release();
}

{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_21F6B0900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v11;

  if (qword_2554DA730 != -1)
    swift_once();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v11;
  *v11 = v7;
  v11[1] = sub_21F656988;
  return PASAnalytics.addPersistentValue(_:forKey:)(a5, a6, a7);
}

uint64_t sub_21F6B09FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  void *v9;
  unint64_t v11;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_21F6B0494();
  v11 = v2;
  sub_21F647710(v1, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFBD0);
  sub_21F64779C(0, (unint64_t *)&qword_2554DC330);
  v3 = swift_dynamicCast();
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  if (v3)
  {
    v6 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_21F645404(v6, v5, v4, isUniquelyReferenced_nonNull_native);
    v8 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v9 = (void *)sub_21F6709D8(v5, v4);
    swift_bridgeObjectRelease();

    v8 = v11;
  }
  sub_21F6B0590(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall PASAnalytics.removePersistentValue(forKey:)(Swift::String forKey)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  object = forKey._object;
  countAndFlagsBits = forKey._countAndFlagsBits;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = qword_2554DA730;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = qword_2554E51F0;
  v10 = sub_21F6B36E0();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v9;
  v11[3] = v10;
  v11[4] = v1;
  v11[5] = countAndFlagsBits;
  v11[6] = object;
  swift_retain();
  sub_21F6B4038((uint64_t)v6, (uint64_t)&unk_2554DFBE0, (uint64_t)v11);
  swift_release();
}

uint64_t sub_21F6B0C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  if (qword_2554DA730 != -1)
    swift_once();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_21F656988;
  return PASAnalytics.removePersistentValue(forKey:)(a5, a6);
}

uint64_t PASAnalytics.removePersistentValue(forKey:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  if (qword_2554DA730 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_21F6B0D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v4 = sub_21F6B0494();

  sub_21F6B0590(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASAnalytics.send(event:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v18;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v12 = qword_2554DA730;
  swift_retain();
  if (v12 != -1)
    swift_once();
  v13 = qword_2554E51F0;
  v14 = sub_21F6B36E0();
  v15 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = v13;
  *((_QWORD *)v16 + 3) = v14;
  *((_QWORD *)v16 + 4) = v4;
  *((_QWORD *)v16 + 5) = *(_QWORD *)(v3 + 88);
  *((_QWORD *)v16 + 6) = v1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v7, v4);
  swift_retain();
  sub_21F6B4038((uint64_t)v10, (uint64_t)&unk_2554DFBF8, (uint64_t)v16);
  return swift_release();
}

{
  _QWORD *v1;
  _QWORD *v2;

  v2[7] = a1;
  v2[8] = v1;
  v2[9] = *v1;
  return swift_task_switch();
}

uint64_t sub_21F6B0F34(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[9] = *a4;
  if (qword_2554DA730 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_21F6B0FA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v5;

  v2 = v0[8];
  v1 = v0[9];
  v3 = *(_QWORD *)(v1 + 80);
  v0[5] = v3;
  v0[6] = *(_QWORD *)(v1 + 88);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_21F6B1030;
  return sub_21F6B2AF4((uint64_t)(v0 + 2), 0, 0);
}

uint64_t sub_21F6B1030()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21F6B10A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v5;

  v1 = v0[9];
  v2 = v0[7];
  v3 = *(_QWORD *)(v1 + 80);
  v0[5] = v3;
  v0[6] = *(_QWORD *)(v1 + 88);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_21F6B4020;
  return sub_21F6B2AF4((uint64_t)(v0 + 2), 0, 0);
}

uint64_t PASAnalytics.send(event:withAdditionalData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = v3;
  v25 = *v3;
  v26 = a2;
  v7 = *(_QWORD *)(v25 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = qword_2554DA730;
  swift_retain();
  v27 = a3;
  swift_retain();
  if (v15 != -1)
    swift_once();
  v16 = qword_2554E51F0;
  v17 = sub_21F6B36E0();
  v18 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = v16;
  *((_QWORD *)v20 + 3) = v17;
  *((_QWORD *)v20 + 4) = v7;
  *((_QWORD *)v20 + 5) = *(_QWORD *)(v25 + 88);
  *((_QWORD *)v20 + 6) = v4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v18], v10, v7);
  v21 = &v20[v19];
  v22 = v27;
  *(_QWORD *)v21 = v26;
  *((_QWORD *)v21 + 1) = v22;
  swift_retain();
  sub_21F6B4038((uint64_t)v13, (uint64_t)&unk_2554DFC18, (uint64_t)v20);
  return swift_release();
}

{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v5 = *v3;
  v4[13] = *v3;
  v6 = *(_QWORD *)(v5 + 80);
  v4[14] = v6;
  v4[15] = *(_QWORD *)(v6 - 8);
  v4[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6B1300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  if (qword_2554DA730 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_21F6B1368()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[4];
  v1 = v0[5];
  v3 = swift_allocObject();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_21F6B13F8;
  return PASAnalytics.send(event:withAdditionalData:)(v0[3], (uint64_t)&unk_2554DFE80, v3);
}

uint64_t sub_21F6B13F8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F6B1448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6B1460()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6B14C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[3];
  v1 = v0[4];
  v3 = swift_allocObject();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_21F6B4024;
  return PASAnalytics.send(event:withAdditionalData:)(v0[2], (uint64_t)&unk_2554DFC30, v3);
}

uint64_t sub_21F6B155C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6B15DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  void (*v9)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v10;

  v1 = v0[14];
  v2 = v0[15];
  v3 = v0[13];
  v5 = v0[10];
  v4 = v0[11];
  v6 = v0[9];
  v0[5] = v1;
  v7 = *(_QWORD *)(v3 + 88);
  v0[17] = v7;
  v0[6] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  v9 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16);
  v0[18] = (uint64_t)v9;
  v9(boxed_opaque_existential_1, v6, v1);
  v10 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_21F6B1680;
  return sub_21F6B2AF4((uint64_t)(v0 + 2), v5, v4);
}

uint64_t sub_21F6B1680()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_destroy_boxed_opaque_existential_0Tm(v2 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F6B16FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 160);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = sub_21F715F3C();
  __swift_project_value_buffer(v6, (uint64_t)qword_2554DFB98);
  v3(v4, v1, v5);
  v7 = v2;
  v8 = v2;
  v9 = sub_21F715F24();
  v10 = sub_21F71635C();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(void **)(v0 + 160);
  if (v11)
  {
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 136);
    v15 = *(_QWORD *)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 120);
    v16 = swift_slowAlloc();
    v26 = (_QWORD *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v16 = 136446466;
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    *(_QWORD *)(v0 + 56) = sub_21F644208(v17, v18, &v28);
    sub_21F716428();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v13, v15);
    *(_WORD *)(v16 + 12) = 2114;
    v19 = v12;
    v20 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 64) = v20;
    sub_21F716428();
    *v26 = v20;

    _os_log_impl(&dword_21F63C000, v9, v10, "PASAnalytics failed to send event %{public}s.\n%{public}@", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v27, -1, -1);
    MEMORY[0x2207CC514](v16, -1, -1);

  }
  else
  {
    v22 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASAnalytics.timer(for:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = *v2;
  v23 = sub_21F715DE0();
  v5 = *(_QWORD *)(v23 - 8);
  v6 = MEMORY[0x24BDAC7A8](v23);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v4 + 88);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v9, v13);
  v15 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = v9;
  *((_QWORD *)v17 + 3) = v13;
  *((_QWORD *)v17 + 4) = v2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v16], v12, v9);
  swift_retain();
  sub_21F715DC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFC50);
  v18 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v18 + 136) = 0;
  *(_BYTE *)(v18 + 144) = 1;
  *(_QWORD *)(v18 + 168) = 0;
  sub_21F715D98();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v23);
  *(_QWORD *)(v18 + 112) = v20;
  *(_QWORD *)(v18 + 120) = v22;
  *(_QWORD *)(v18 + 128) = v15;
  *(_QWORD *)(v18 + 152) = &unk_2554DFC48;
  *(_QWORD *)(v18 + 160) = v17;
  return v18;
}

uint64_t sub_21F6B1B64(uint64_t *a1, uint64_t *a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = a3;
  *(double *)(v4 + 56) = a4;
  v6 = *a2;
  *(_QWORD *)(v4 + 80) = *a2;
  v7 = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(v4 + 88) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 96) = v8;
  *(_QWORD *)(v4 + 104) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 112) = swift_task_alloc();
  v10 = *a1;
  v9 = a1[1];
  if (v10)
  {
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v9;
    v12 = &unk_2554DFE70;
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  *(_QWORD *)(v4 + 120) = v12;
  *(_QWORD *)(v4 + 128) = v11;
  sub_21F68747C(v10);
  return swift_task_switch();
}

uint64_t sub_21F6B1C18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  unint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v16;

  v1 = v0[15];
  v16 = v0[16];
  v3 = v0[13];
  v2 = v0[14];
  v4 = v0[11];
  v5 = v0[12];
  v7 = v0[9];
  v6 = v0[10];
  v8 = v0[7];
  v0[5] = v4;
  v9 = *(_QWORD *)(v6 + 88);
  v0[6] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16);
  v11(boxed_opaque_existential_1, v7, v4);
  v11((uint64_t *)v2, v7, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = (char *)swift_allocObject();
  v0[17] = (uint64_t)v13;
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v9;
  *((_QWORD *)v13 + 4) = v1;
  *((_QWORD *)v13 + 5) = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v13[v12], v2, v4);
  *(_QWORD *)&v13[(v3 + v12 + 7) & 0xFFFFFFFFFFFFFFF8] = v8;
  v14 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v14;
  *v14 = v0;
  v14[1] = sub_21F6B1D40;
  return sub_21F6B2AF4((uint64_t)(v0 + 2), (uint64_t)&unk_2554DFE68, (uint64_t)v13);
}

uint64_t sub_21F6B1D40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21F6B1DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 152) = a4;
  *(_QWORD *)(v6 + 160) = a5;
  *(double *)(v6 + 144) = a6;
  *(_QWORD *)(v6 + 128) = a2;
  *(_QWORD *)(v6 + 136) = a3;
  *(_QWORD *)(v6 + 120) = a1;
  *(_QWORD *)(v6 + 168) = *(_QWORD *)(a4 - 8);
  *(_QWORD *)(v6 + 176) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6B1E10()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v1 = *(int **)(v0 + 120);
  if (v1)
  {
    v10 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v2;
    *v2 = v0;
    v2[1] = sub_21F6B1F3C;
    return v10();
  }
  else
  {
    v4 = sub_21F640D60(MEMORY[0x24BEE4AF8]);
    v5 = *(_QWORD *)(v0 + 144);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    v7 = MEMORY[0x24BEE13C8];
    *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(inited + 40) = 0x800000021F728D50;
    *(_QWORD *)(inited + 72) = v7;
    *(_QWORD *)(inited + 80) = &protocol witness table for Double;
    *(_QWORD *)(inited + 48) = v5;
    v8 = (_QWORD *)sub_21F640D60(inited);
    v9 = sub_21F6AEC34(v4, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
  }
}

uint64_t sub_21F6B1F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 200) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6B1FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  v4 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 40) = 0x800000021F728D50;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = &protocol witness table for Double;
  *(_QWORD *)(inited + 48) = v2;
  v5 = (_QWORD *)sub_21F640D60(inited);
  v6 = sub_21F6AEC34(v1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_21F6B2084()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = sub_21F715F3C();
  __swift_project_value_buffer(v6, (uint64_t)qword_2554DFB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  v7 = v1;
  v8 = v1;
  v9 = sub_21F715F24();
  v10 = sub_21F71635C();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(void **)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 176);
  if (v11)
  {
    v16 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 160);
    v17 = swift_slowAlloc();
    v30 = (_QWORD *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v32 = v31;
    *(_DWORD *)v17 = 136446466;
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
    *(_QWORD *)(v0 + 104) = sub_21F644208(v18, v19, &v32);
    sub_21F716428();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v16);
    *(_WORD *)(v17 + 12) = 2114;
    v20 = v12;
    v21 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 112) = v21;
    sub_21F716428();
    *v30 = v21;

    _os_log_impl(&dword_21F63C000, v9, v10, "PASAnalytics timer failed to gather timer context for event %{public}s\n%{public}@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v30, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v31, -1, -1);
    MEMORY[0x2207CC514](v17, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v14 + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 152));

  }
  v22 = *(void **)(v0 + 192);
  v23 = sub_21F640D60(MEMORY[0x24BEE4AF8]);

  v24 = *(_QWORD *)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  v26 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 40) = 0x800000021F728D50;
  *(_QWORD *)(inited + 72) = v26;
  *(_QWORD *)(inited + 80) = &protocol witness table for Double;
  *(_QWORD *)(inited + 48) = v24;
  v27 = (_QWORD *)sub_21F640D60(inited);
  v28 = sub_21F6AEC34(v23, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v28);
}

Swift::Void __swiftcall PASAnalytics.storeDailyUUID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = qword_2554DA730;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = qword_2554E51F0;
  v7 = sub_21F6B36E0();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v7;
  v8[4] = v0;
  swift_retain();
  sub_21F6B4038((uint64_t)v3, (uint64_t)&unk_2554DFC60, (uint64_t)v8);
  swift_release();
}

uint64_t sub_21F6B24D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a4;
  v5 = sub_21F715DE0();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  if (qword_2554DA730 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_21F6B2564()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  sub_21F715DD4();
  v4 = sub_21F6B2688(v1);
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[5] = MEMORY[0x24BEE0D00];
  v0[6] = &protocol witness table for String;
  v0[2] = v4;
  v0[3] = v6;
  v7 = (_QWORD *)swift_task_alloc();
  v0[11] = v7;
  *v7 = v0;
  v7[1] = sub_21F6B2628;
  return PASAnalytics.addPersistentValue(_:forKey:)((uint64_t)(v0 + 2), 0xD000000000000018, 0x800000021F728D30);
}

uint64_t sub_21F6B2628()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21F6B2688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t);
  int v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t *, unint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];
  uint64_t v48;

  v42 = a1;
  v2 = sub_21F715E10();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21F715DE0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v38 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v38 - v16;
  v41 = v1 + 80;
  sub_21F647710(v1 + 80, (uint64_t)v44);
  v18 = v45;
  v19 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  v20 = *(void (**)(uint64_t *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v19 + 24);
  v38 = (unint64_t)"AdditionalDataError";
  v20(v47, 0xD000000000000017, 0x800000021F728CF0, v18, v19);
  if (!v48)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    sub_21F6476AC((uint64_t)v47, &qword_2554DA750);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  v21 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v21 ^ 1u, 1, v8);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:
    sub_21F6476AC((uint64_t)v7, &qword_2554DFE40);
LABEL_9:
    v27 = MEMORY[0x24BEE0D00];
    _s21ProximityAppleIDSetup32ActivatedMessageSessionTransportV21destinationIdentifier33_C75EFC377189F044D610653B1F91726FLL10Foundation4UUIDVvpfi_0();
    v26 = sub_21F715DEC();
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v40);
    v30 = v41;
    sub_21F647710(v41, (uint64_t)v44);
    v31 = v45;
    v32 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    v48 = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v47);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(boxed_opaque_existential_1, v42, v8);
    (*(void (**)(uint64_t *, unint64_t, unint64_t, uint64_t, uint64_t))(v32 + 8))(v47, 0xD000000000000017, v38 | 0x8000000000000000, v31, v32);
    sub_21F6476AC((uint64_t)v47, &qword_2554DA750);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    sub_21F647710(v30, (uint64_t)v44);
    v34 = v45;
    v35 = v46;
    __swift_project_boxed_opaque_existential_1(v44, v45);
    v48 = v27;
    v47[0] = v26;
    v47[1] = v29;
    v36 = *(void (**)(uint64_t *, unint64_t, unint64_t, uint64_t, uint64_t))(v35 + 8);
    swift_bridgeObjectRetain();
    v36(v47, 0xD000000000000018, 0x800000021F728D10, v34, v35);
    sub_21F6476AC((uint64_t)v47, &qword_2554DA750);
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v7, v8);
  sub_21F6C4930((uint64_t)v15);
  sub_21F6C4930((uint64_t)v12);
  v22 = sub_21F715DBC();
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v12, v8);
  v23(v15, v8);
  if ((v22 & 1) == 0)
  {
    v23(v17, v8);
    goto LABEL_9;
  }
  sub_21F647710(v41, (uint64_t)v44);
  v24 = v45;
  v25 = v46;
  __swift_project_boxed_opaque_existential_1(v44, v45);
  (*(void (**)(uint64_t *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v25 + 24))(v47, 0xD000000000000018, 0x800000021F728D10, v24, v25);
  v23(v17, v8);
  if (!v48)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    sub_21F6476AC((uint64_t)v47, &qword_2554DA750);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
    goto LABEL_9;
  }
  v26 = v43;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v44);
  return v26;
}

uint64_t sub_21F6B2AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[12] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B2B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 16);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v5 = 136446210;
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    *(_QWORD *)(v0 + 56) = sub_21F644208(v8, v9, &v19);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASAnalytics send event %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v18, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }

  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD **)(v0 + 64);
  v12 = *(_QWORD *)(v10 + 24);
  v19 = *(_QWORD *)(v10 + 16);
  v20 = v12;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v13 = v11[3];
  v14 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_21F716140();
  swift_bridgeObjectRelease();
  v15 = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v15;
  if (((*(uint64_t (**)(void))(v10 + 64))() & 1) != 0)
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B2E28;
    return sub_21F6B2F1C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6B2E28(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6B2E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(*(_QWORD *)(v0 + 88) + 48);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v4(v2, v3, sub_21F6B4000, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6B2F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[23] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B2F88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  _QWORD *v8;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_21F6AF504(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
    v6 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 192) = v6;
  v7 = *(int **)(v0 + 160);
  if (v7)
  {
    v15 = (uint64_t (*)(void))((char *)v7 + *v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v8;
    *v8 = v0;
    v8[1] = sub_21F6B30C8;
    return v15();
  }
  else
  {
    v10 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v0 + 192);
    v12 = (_QWORD *)sub_21F6B0494();
    v13 = (_QWORD *)sub_21F6AE934(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = sub_21F6AE934(v10, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
}

uint64_t sub_21F6B30C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 216) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6B313C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  sub_21F6AF504(*(_QWORD *)(v0 + 216));
  v2 = v1;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v2 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  v3 = *(_QWORD *)(v0 + 192);
  v4 = (_QWORD *)sub_21F6B0494();
  v5 = (_QWORD *)sub_21F6AE934(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = sub_21F6AE934(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_21F6B31F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t inited;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void **)(v0 + 208);
  v3 = sub_21F715F3C();
  __swift_project_value_buffer(v3, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 72);
  v4 = v2;
  v5 = v2;
  v6 = sub_21F715F24();
  v7 = sub_21F71635C();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 208);
  if (v8)
  {
    v10 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v30 = v29;
    *(_DWORD *)v10 = 136446466;
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    *(_QWORD *)(v0 + 136) = sub_21F644208(v13, v14, &v30);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
    *(_WORD *)(v10 + 12) = 2114;
    v15 = v9;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v16;
    sub_21F716428();
    *v28 = v16;

    _os_log_impl(&dword_21F63C000, v6, v7, "PASAnalytics failed to gather additional data for event %{public}s.\n%{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v29, -1, -1);
    MEMORY[0x2207CC514](v10, -1, -1);

  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);

  }
  v17 = *(void **)(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x800000021F728CD0;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0xE000000000000000;
  *(_QWORD *)(v0 + 128) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  sub_21F7165CC();
  v19 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v20 = (void *)sub_21F7160E0();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithString_, v20);

  *(_QWORD *)(inited + 48) = v21;
  v22 = sub_21F640C48(inited);

  v23 = *(_QWORD *)(v0 + 192);
  v24 = (_QWORD *)sub_21F6B0494();
  v25 = (_QWORD *)sub_21F6AE934(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = sub_21F6AE934(v22, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
}

uint64_t PASAnalytics.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 80);
  return v0;
}

uint64_t PASAnalytics.__deallocating_deinit()
{
  PASAnalytics.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6B361C()
{
  return sub_21F6AFC80();
}

unint64_t sub_21F6B3624()
{
  return sub_21F640D60(MEMORY[0x24BEE4AF8]);
}

_QWORD *_s21ProximityAppleIDSetup19PASAnalyticsFactoryC9analyticsAA0D0CyxGyAA0D13EventProtocolRzlF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  __int128 v6[2];

  type metadata accessor for PASAnalytics(0, a1, a2, a4);
  sub_21F6B0368(v6);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = 0x6C7070612E6D6F63;
  v4[3] = 0xE900000000000065;
  v4[4] = 0xD000000000000015;
  v4[5] = 0x800000021F71E950;
  v4[6] = sub_21F6B0634;
  v4[7] = 0;
  v4[8] = sub_21F656BCC;
  v4[9] = 0;
  sub_21F64756C(v6, (uint64_t)(v4 + 10));
  return v4;
}

unint64_t sub_21F6B36E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2554DFBB8;
  if (!qword_2554DFBB8)
  {
    v1 = type metadata accessor for PASAnalyticsActor.PASAnalyticsActorType();
    result = MEMORY[0x2207CC46C](&unk_21F71EAC4, v1);
    atomic_store(result, (unint64_t *)&qword_2554DFBB8);
  }
  return result;
}

uint64_t type metadata accessor for PASAnalyticsActor.PASAnalyticsActorType()
{
  return objc_opt_self();
}

uint64_t sub_21F6B3744()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F6B3780(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v9 = v1[10];
  v8 = v1[11];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_21F656988;
  return sub_21F6B0900(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_21F6B3810()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F6B3844(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21F656988;
  return sub_21F6B0C48(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_21F6B38C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21F6B3938(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[3];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1[4] - 8) + 80);
  v6 = v1[2];
  v7 = (_QWORD *)v1[6];
  v8 = (uint64_t)v1 + ((v5 + 56) & ~v5);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_21F656988;
  return sub_21F6B0F34(a1, v6, v4, v7, v8);
}

uint64_t sub_21F6B39C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6B3A5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[3];
  v5 = *(_QWORD *)(v1[4] - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v1[2];
  v8 = v1[6];
  v9 = (uint64_t)v1 + v6;
  v10 = (_QWORD *)((char *)v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  v11 = *v10;
  v12 = v10[1];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_21F656988;
  return sub_21F6B1300(a1, v7, v4, v8, v9, v11, v12);
}

uint64_t sub_21F6B3B14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6B3B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_21F6B4034;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_21F6B3B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_21F6B3C04(uint64_t *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80);
  v7 = *(uint64_t **)(v2 + 32);
  v8 = v2 + ((v6 + 40) & ~v6);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_21F656988;
  return sub_21F6B1B64(a1, v7, v8, a2);
}

uint64_t sub_21F6B3C84()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6B3CB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F651418;
  return sub_21F6B24D8(a1, v4, v5, v6);
}

uint64_t type metadata accessor for PASAnalyticsFactory()
{
  return objc_opt_self();
}

uint64_t sub_21F6B3D3C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PASAnalytics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PASAnalytics);
}

uint64_t sub_21F6B3DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 48) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_21F6B3E24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0[4];
  v7 = v0[5];
  v8 = (uint64_t)v0 + v5;
  v9 = *(double *)((char *)v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_21F6B4034;
  return sub_21F6B1DB0(v6, v7, v8, v2, v3, v9);
}

uint64_t sub_21F6B3EC8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_21F6B4034;
  return ((uint64_t (*)(int *))((char *)&dword_2554E0540 + dword_2554E0540))(v2);
}

uint64_t sub_21F6B3F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_21F6B3F8C;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch();
}

uint64_t sub_21F6B3F8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_21F6B3FDC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F6B4000()
{
  return swift_bridgeObjectRetain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_21F6B4038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_21F7162C0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_21F7162B4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21F6476AC(a1, &qword_2554E19B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21F716248();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_21F6B4184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F6B41BC(a1, a2, a3, (uint64_t)&unk_24E457470, &qword_2554E0500);
}

uint64_t sub_21F6B41A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21F6B41BC(a1, a2, a3, (uint64_t)&unk_24E457448, &qword_2554DFAD8);
}

uint64_t sub_21F6B41BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = sub_21F7162C0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_21F7162B4();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_21F6476AC(a1, &qword_2554E19B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21F716248();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_21F6B4318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_21F7162C0();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_21F7162B4();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_21F6476AC(a1, &qword_2554E19B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_21F716248();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t PASSourceFlowStepBase.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t PASSourceFlowStepBase.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate);
  v3(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentSheet, v2);
  v3(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentResetAlert, v2);
  v3(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentCancelAlert, v2);
  return v0;
}

uint64_t PASFlowStepBase.finished.getter()
{
  return sub_21F6B5288();
}

uint64_t PASFlowStepBase.finished.setter()
{
  return sub_21F6B5304();
}

uint64_t (*PASFlowStepBase.finished.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_21F715F9C();
  return sub_21F6B45FC;
}

uint64_t PASFlowStepBase.$finished.getter()
{
  return sub_21F6B53F0();
}

uint64_t PASFlowStepBase.$finished.setter(uint64_t a1)
{
  return sub_21F6B5458(a1);
}

uint64_t (*PASFlowStepBase.$finished.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

uint64_t sub_21F6B46E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[40];
  _BYTE v6[40];
  __int128 v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__baseStepAnalyticsProvider);
  swift_beginAccess();
  sub_21F647624(v3 + 16, (uint64_t)&v7, &qword_2554DAA48);
  if (v8)
    return sub_21F64756C(&v7, a1);
  swift_retain();
  sub_21F6476AC((uint64_t)&v7, &qword_2554DAA48);
  if (qword_2554DA6A0 != -1)
    swift_once();
  sub_21F63F19C((uint64_t)&v7);
  sub_21F647710((uint64_t)&v7, a1);
  sub_21F647710((uint64_t)&v7, (uint64_t)v6);
  sub_21F658D18((uint64_t)v6, (uint64_t)v5, &qword_2554DAA48);
  swift_beginAccess();
  sub_21F6BDAE8((uint64_t)v5, v3 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
  return swift_release();
}

uint64_t sub_21F6B4814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase____lazy_storage___baseStepAnalytics;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase____lazy_storage___baseStepAnalytics))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase____lazy_storage___baseStepAnalytics);
  }
  else
  {
    v3 = v0;
    sub_21F6B46E0((uint64_t)v7);
    v4 = v8;
    v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    v2 = (*(uint64_t (**)(ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(&type metadata for PASFlowStepAnalyticsEvent, &off_24E457420, v4, v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void PASSourceFlowStepBase.__allocating_init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t PASFlowStepBase.startTimeout(seconds:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21F7162C0();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v4;
  v13[5] = a1;
  v13[6] = a2;
  v13[7] = a3;
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  swift_retain();
  swift_retain();
  if ((_DWORD)a2 == 1)
  {
    sub_21F6476AC((uint64_t)v10, &qword_2554E19B0);
  }
  else
  {
    sub_21F7162B4();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (v13[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_21F716248();
      v16 = v15;
      swift_unknownObjectRelease();
      if (v16 | v14)
      {
        v18[0] = 0;
        v18[1] = 0;
        v18[2] = v14;
        v18[3] = v16;
      }
    }
  }
  return swift_task_create();
}

Swift::Void __swiftcall PASFlowStepBase.setFinished()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21F715DE0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - v10;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  if ((v26[0] & 1) != 0)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v12 = sub_21F715F3C();
    __swift_project_value_buffer(v12, (uint64_t)static PASLogger.common);
    swift_retain_n();
    v13 = sub_21F715F24();
    v14 = sub_21F71635C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v25 = v1;
      v26[0] = v16;
      *(_DWORD *)v15 = 136446210;
      type metadata accessor for PASFlowStepBase(0);
      swift_retain();
      v17 = sub_21F716128();
      v25 = sub_21F644208(v17, v18, v26);
      sub_21F716428();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_21F63C000, v13, v14, "%{public}s finished again", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v16, -1, -1);
      MEMORY[0x2207CC514](v15, -1, -1);
    }
    else
    {
      swift_release_n();
    }

  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v26[0]) = 1;
    swift_retain();
    sub_21F715FB4();
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase_timer);
    if (v19)
    {
      swift_retain();
      sub_21F715DC8();
      v20 = sub_21F7162C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v4, 1, 1, v20);
      v26[0] = 0;
      v26[1] = 0;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      v21 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v22 = (char *)swift_allocObject();
      *((_QWORD *)v22 + 2) = 0;
      *((_QWORD *)v22 + 3) = 0;
      *((_QWORD *)v22 + 4) = v19;
      sub_21F658D18((uint64_t)v26, (uint64_t)(v22 + 40), &qword_2554DFEE8);
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v22[v21], v9, v5);
      swift_retain();
      sub_21F6B4038((uint64_t)v4, (uint64_t)&unk_2554DFEF0, (uint64_t)v22);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    if (swift_conformsToProtocol2())
      v23 = v1;
    else
      v23 = 0;
    if (v23)
    {
      swift_getObjectType();
      swift_retain();
      PASFlowStepIntermediate.stepDidFinish()();
      swift_release();
    }
  }
}

uint64_t PASSourceFlowStepBase.delegate.getter()
{
  return sub_21F6B6804(&OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate);
}

uint64_t PASSourceFlowStepBase.delegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6B6858(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate);
}

uint64_t (*PASSourceFlowStepBase.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_21F6B4F70;
}

uint64_t PASSourceFlowStepBase.presentSheet.getter()
{
  return sub_21F6B5288();
}

uint64_t PASSourceFlowStepBase.presentSheet.setter()
{
  return sub_21F6B5304();
}

uint64_t (*PASSourceFlowStepBase.presentSheet.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_21F715F9C();
  return sub_21F6B45FC;
}

uint64_t PASSourceFlowStepBase.$presentSheet.getter()
{
  return sub_21F6B53F0();
}

uint64_t PASSourceFlowStepBase.$presentSheet.setter(uint64_t a1)
{
  return sub_21F6B5458(a1);
}

uint64_t (*PASSourceFlowStepBase.$presentSheet.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentSheet;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

uint64_t PASSourceFlowStepBase.presentResetAlert.getter()
{
  return sub_21F6B5288();
}

uint64_t PASSourceFlowStepBase.presentResetAlert.setter()
{
  return sub_21F6B5304();
}

uint64_t (*PASSourceFlowStepBase.presentResetAlert.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_21F715F9C();
  return sub_21F6B45FC;
}

uint64_t PASSourceFlowStepBase.$presentResetAlert.getter()
{
  return sub_21F6B53F0();
}

uint64_t PASSourceFlowStepBase.$presentResetAlert.setter(uint64_t a1)
{
  return sub_21F6B5458(a1);
}

uint64_t (*PASSourceFlowStepBase.$presentResetAlert.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentResetAlert;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

uint64_t PASSourceFlowStepBase.presentCancelAlert.getter()
{
  return sub_21F6B5288();
}

uint64_t sub_21F6B5288()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t PASSourceFlowStepBase.presentCancelAlert.setter()
{
  return sub_21F6B5304();
}

uint64_t sub_21F6B5304()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t (*PASSourceFlowStepBase.presentCancelAlert.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_21F715F9C();
  return sub_21F6B45FC;
}

uint64_t PASSourceFlowStepBase.$presentCancelAlert.getter()
{
  return sub_21F6B53F0();
}

uint64_t sub_21F6B53F0()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  return swift_endAccess();
}

uint64_t PASSourceFlowStepBase.$presentCancelAlert.setter(uint64_t a1)
{
  return sub_21F6B5458(a1);
}

uint64_t sub_21F6B5458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F90();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*PASSourceFlowStepBase.$presentCancelAlert.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DF5B0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentCancelAlert;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  sub_21F715F84();
  swift_endAccess();
  return sub_21F691894;
}

Swift::Void __swiftcall PASSourceFlowStepBase.promptForReset()()
{
  sub_21F6B5A78("PASSourceFlowStepBase promptForReset");
}

Swift::Void __swiftcall PASSourceFlowStepBase.cancelReset()()
{
  sub_21F6B5BB0("PASSourceFlowStepBase cancelReset");
}

uint64_t PASSourceFlowStepBase.resetFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6B5634()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(_QWORD, uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowStepBase resetFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 80);

  v6 = v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v7 = MEMORY[0x2207CC5BC](v6);
  swift_unknownObjectRelease();
  if (!v7)
  {
    v8 = sub_21F715F24();
    v9 = sub_21F716368();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, (os_log_type_t)v9, "PASSourceFlowStepBase delegate is nil in resetFlow", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

  }
  v11 = MEMORY[0x2207CC5BC](v6);
  *(_QWORD *)(v0 + 88) = v11;
  if (v11)
  {
    v12 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v14 = sub_21F647438(&qword_2554DFF00, type metadata accessor for PASSourceFlowStepBase, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
    v15 = *(_QWORD *)(v12 + 8);
    v21 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v15 + 16) + *(_QWORD *)(v15 + 16));
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B58E0;
    return v21(*(_QWORD *)(v0 + 80), v14, ObjectType, v15);
  }
  else
  {
    *(_QWORD *)(v0 + 104) = sub_21F6B4814();
    v18 = sub_21F7169F8();
    *(_QWORD *)(v0 + 112) = v19;
    *(_QWORD *)(v0 + 16) = v18;
    *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepAnalyticsEvent;
    *(_QWORD *)(v0 + 48) = &off_24E457420;
    *(_QWORD *)(v0 + 24) = v19;
    *(_BYTE *)(v0 + 32) = 4;
    swift_bridgeObjectRetain();
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v20;
    *v20 = v0;
    v20[1] = sub_21F6B59EC;
    return sub_21F6B7354(v0 + 16, 0, 0);
  }
}

uint64_t sub_21F6B58E0()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6B593C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 104) = sub_21F6B4814();
  v1 = sub_21F7169F8();
  *(_QWORD *)(v0 + 112) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepAnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E457420;
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = 4;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_21F6B59EC;
  return sub_21F6B7354(v0 + 16, 0, 0);
}

uint64_t sub_21F6B59EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

Swift::Void __swiftcall PASSourceFlowStepBase.promptForCancel()()
{
  sub_21F6B5A78("PASSourceFlowStepBase promptForCancel");
}

uint64_t sub_21F6B5A78(const char *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_21F63C000, v3, v4, a1, v5, 2u);
    MEMORY[0x2207CC514](v5, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

Swift::Void __swiftcall PASSourceFlowStepBase.dismissCancelAlert()()
{
  sub_21F6B5BB0("PASSourceFlowStepBase dismissCancelAlert");
}

void sub_21F6B5BB0(const char *a1)
{
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (qword_2554DA718 != -1)
    swift_once();
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)static PASLogger.common);
  oslog = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, oslog, v3, a1, v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

}

uint64_t PASSourceFlowStepBase.cancelFlow()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6B5C9C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(_QWORD, uint64_t, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716374();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASSourceFlowStepBase cancelFlow", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 80);

  v6 = v5 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  swift_beginAccess();
  v7 = MEMORY[0x2207CC5BC](v6);
  swift_unknownObjectRelease();
  if (!v7)
  {
    v8 = sub_21F715F24();
    v9 = sub_21F716368();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, (os_log_type_t)v9, "PASSourceFlowStepBase delegate is nil in cancelFlow", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

  }
  v11 = MEMORY[0x2207CC5BC](v6);
  *(_QWORD *)(v0 + 88) = v11;
  if (v11)
  {
    v12 = *(_QWORD *)(v6 + 8);
    ObjectType = swift_getObjectType();
    v14 = sub_21F647438(&qword_2554DFF00, type metadata accessor for PASSourceFlowStepBase, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
    v15 = *(_QWORD *)(v12 + 8);
    v21 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))(**(int **)(v15 + 24) + *(_QWORD *)(v15 + 24));
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B5F48;
    return v21(*(_QWORD *)(v0 + 80), v14, ObjectType, v15);
  }
  else
  {
    *(_QWORD *)(v0 + 104) = sub_21F6B4814();
    v18 = sub_21F7169F8();
    *(_QWORD *)(v0 + 112) = v19;
    *(_QWORD *)(v0 + 16) = v18;
    *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepAnalyticsEvent;
    *(_QWORD *)(v0 + 48) = &off_24E457420;
    *(_QWORD *)(v0 + 24) = v19;
    *(_BYTE *)(v0 + 32) = 3;
    swift_bridgeObjectRetain();
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v20;
    *v20 = v0;
    v20[1] = sub_21F6BDCD4;
    return sub_21F6B7354(v0 + 16, 0, 0);
  }
}

uint64_t sub_21F6B5F48()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6B5FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 104) = sub_21F6B4814();
  v1 = sub_21F7169F8();
  *(_QWORD *)(v0 + 112) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepAnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E457420;
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = 3;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v3;
  *v3 = v0;
  v3[1] = sub_21F6BDCD4;
  return sub_21F6B7354(v0 + 16, 0, 0);
}

uint64_t PASFlowStepBase.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[10] = v0;
  sub_21F7162A8();
  v1[11] = sub_21F71629C();
  v1[12] = sub_21F716248();
  v1[13] = v2;
  return swift_task_switch();
}

uint64_t sub_21F6B60C0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[10];
  if (v4)
  {
    v6 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v6 = 136446466;
    v0[7] = v5;
    type metadata accessor for PASFlowStepBase(0);
    swift_retain();
    v7 = sub_21F716128();
    v0[8] = sub_21F644208(v7, v8, &v14);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    v9 = sub_21F7169F8();
    v0[9] = sub_21F644208(v9, v10, &v14);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v2, v3, "%{public}s prepareForPresentation %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v13, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v0[14] = sub_21F6B4814();
  v0[15] = sub_21F7169F8();
  v0[16] = v11;
  return swift_task_switch();
}

uint64_t sub_21F6B6310()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepAnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E457420;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = 1;
  swift_bridgeObjectRetain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v2;
  *v2 = v0;
  v2[1] = sub_21F6B63A0;
  return sub_21F6B7354(v0 + 16, 0, 0);
}

uint64_t sub_21F6B63A0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0Tm(v1 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6B6414()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6B6448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21F6B6464()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  _QWORD *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t, double);
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 48);
  sub_21F715D98();
  if ((*(_BYTE *)(v1 + 144) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = v2 - *(double *)(v3 + 112);
    *(double *)(v3 + 136) = v4;
    *(_BYTE *)(v1 + 144) = 0;
    v16 = (uint64_t (*)(uint64_t, double))(**(int **)(v3 + 152) + *(_QWORD *)(v3 + 152));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v5;
    *v5 = v0;
    v5[1] = sub_21F6B66A8;
    return v16(v0 + 16, v4);
  }
  else
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    swift_retain();
    v8 = sub_21F715F24();
    v9 = sub_21F71635C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 48);
    if (v10)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17 = v13;
      *(_DWORD *)v12 = 136446210;
      v14 = *(_QWORD *)(v11 + 120);
      v15 = *(_QWORD *)(v11 + 128);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 32) = sub_21F644208(v14, v15, &v17);
      sub_21F716428();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_21F63C000, v8, v9, "PASTimer %{public}s already stopped", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v13, -1, -1);
      MEMORY[0x2207CC514](v12, -1, -1);
    }
    else
    {
      swift_release();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6B66A8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6B66FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASTargetFlowStepBase.init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_21F6BCEC8(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t PASTargetFlowStepBase.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  return v0;
}

void PASTargetFlowStepBase.__allocating_init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t PASTargetFlowStepBase.delegate.getter()
{
  return sub_21F6B6804(&OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
}

uint64_t sub_21F6B6804(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *a1;
  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v2);
}

uint64_t PASTargetFlowStepBase.delegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_21F6B6858(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
}

uint64_t sub_21F6B6858(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *a3;
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PASTargetFlowStepBase.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_21F6B4F70;
}

unint64_t sub_21F6B6930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  sub_21F647710(v0 + 80, (uint64_t)v6);
  v1 = v7;
  v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(_QWORD *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 24))(v9, 0xD000000000000017, 0x800000021F728D70, v1, v2);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  sub_21F647624((uint64_t)v9, (uint64_t)v6, &qword_2554DA750);
  if (!v7)
  {
    sub_21F6476AC((uint64_t)v6, &qword_2554DA750);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE88);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v3 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    goto LABEL_6;
  }
  v3 = v5;
LABEL_6:
  sub_21F6476AC((uint64_t)v9, &qword_2554DA750);
  return v3;
}

uint64_t sub_21F6B6A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, double a7)
{
  uint64_t v7;
  uint64_t v9;
  void *v10;

  v9 = a1;
  *(_BYTE *)(v7 + 73) = a6;
  *(_QWORD *)(v7 + 96) = a4;
  *(_QWORD *)(v7 + 104) = a5;
  *(_QWORD *)(v7 + 88) = a3;
  *(double *)(v7 + 80) = a7;
  if (a1)
  {
    a1 = swift_allocObject();
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = a2;
    v10 = &unk_2554DFE70;
  }
  else
  {
    v10 = 0;
  }
  *(_QWORD *)(v7 + 112) = v10;
  *(_QWORD *)(v7 + 120) = a1;
  sub_21F68747C(v9);
  return swift_task_switch();
}

uint64_t sub_21F6B6ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepAnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E457420;
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v3;
  v6 = *(_BYTE *)(v0 + 73);
  *(_BYTE *)(v0 + 32) = v6;
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v3;
  *(_BYTE *)(v0 + 72) = v6;
  v7 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 128) = v7;
  v7[2] = v2;
  v7[3] = v1;
  sub_21F6BD0F4((__int128 *)(v0 + 56), (uint64_t)(v7 + 4));
  v7[7] = v5;
  sub_21F6BD864(v4, v3, v6);
  sub_21F6BD864(v4, v3, v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v8;
  *v8 = v0;
  v8[1] = sub_21F6B6BC8;
  return sub_21F6B7354(v0 + 16, (uint64_t)&unk_2554E0538, (uint64_t)v7);
}

uint64_t sub_21F6B6BC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 16;
  v3 = *v0;
  swift_task_dealloc();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_21F6B6C24(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v4 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_21F6B6C8C;
  return v4(v1 + 16);
}

uint64_t sub_21F6B6C8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v2 + 16));
}

uint64_t sub_21F6B6CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  uint64_t v6;

  *(double *)(v6 + 152) = a6;
  *(_BYTE *)(v6 + 184) = a5;
  *(_QWORD *)(v6 + 136) = a3;
  *(_QWORD *)(v6 + 144) = a4;
  *(_QWORD *)(v6 + 120) = a1;
  *(_QWORD *)(v6 + 128) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6B6D14()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(void);

  v1 = *(int **)(v0 + 120);
  if (v1)
  {
    v10 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v2;
    *v2 = v0;
    v2[1] = sub_21F6B6E38;
    return v10();
  }
  else
  {
    v4 = sub_21F640D60(MEMORY[0x24BEE4AF8]);
    v5 = *(_QWORD *)(v0 + 152);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
    v7 = MEMORY[0x24BEE13C8];
    *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(inited + 40) = 0x800000021F728D50;
    *(_QWORD *)(inited + 72) = v7;
    *(_QWORD *)(inited + 80) = &protocol witness table for Double;
    *(_QWORD *)(inited + 48) = v5;
    v8 = (_QWORD *)sub_21F640D60(inited);
    v9 = sub_21F6AEC34(v4, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
  }
}

uint64_t sub_21F6B6E38(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 176) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6B6EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  v4 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 40) = 0x800000021F728D50;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = &protocol witness table for Double;
  *(_QWORD *)(inited + 48) = v2;
  v5 = (_QWORD *)sub_21F640D60(inited);
  v6 = sub_21F6AEC34(v1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_21F6B6F6C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _DWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_BYTE *)(v0 + 184);
  v5 = sub_21F715F3C();
  __swift_project_value_buffer(v5, (uint64_t)qword_2554DFB98);
  sub_21F6BD864(v3, v2, v4);
  v6 = v1;
  sub_21F6BD864(v3, v2, v4);
  v7 = v1;
  v8 = sub_21F715F24();
  v9 = sub_21F71635C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *(unsigned __int8 *)(v0 + 184);
    v11 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    swift_slowAlloc();
    *v11 = 136446466;
    __asm { BR              X9 }
  }
  v12 = *(void **)(v0 + 168);
  v14 = *(_QWORD *)(v0 + 136);
  v13 = *(_QWORD *)(v0 + 144);
  v15 = *(_BYTE *)(v0 + 184);
  sub_21F6BD0DC(v14, v13, v15);
  sub_21F6BD0DC(v14, v13, v15);

  v16 = *(void **)(v0 + 168);
  v17 = sub_21F640D60(MEMORY[0x24BEE4AF8]);

  v18 = *(_QWORD *)(v0 + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  v20 = MEMORY[0x24BEE13C8];
  *(_QWORD *)(inited + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 40) = 0x800000021F728D50;
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(inited + 80) = &protocol witness table for Double;
  *(_QWORD *)(inited + 48) = v18;
  v21 = (_QWORD *)sub_21F640D60(inited);
  v22 = sub_21F6AEC34(v17, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v22);
}

uint64_t sub_21F6B7354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[12] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B73C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 16);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v5 = 136446210;
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    *(_QWORD *)(v0 + 56) = sub_21F644208(v8, v9, &v19);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASAnalytics send event %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v18, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }

  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD **)(v0 + 64);
  v12 = *(_QWORD *)(v10 + 24);
  v19 = *(_QWORD *)(v10 + 16);
  v20 = v12;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v13 = v11[3];
  v14 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_21F716140();
  swift_bridgeObjectRelease();
  v15 = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v15;
  if (((*(uint64_t (**)(void))(v10 + 64))() & 1) != 0)
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B7688;
    return sub_21F6B8808(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6B7688(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6B76E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(*(_QWORD *)(v0 + 88) + 48);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v4(v2, v3, sub_21F6BDCCC, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6B7778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[12] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B77E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 16);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v5 = 136446210;
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    *(_QWORD *)(v0 + 56) = sub_21F644208(v8, v9, &v19);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASAnalytics send event %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v18, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }

  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD **)(v0 + 64);
  v12 = *(_QWORD *)(v10 + 24);
  v19 = *(_QWORD *)(v10 + 16);
  v20 = v12;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v13 = v11[3];
  v14 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_21F716140();
  swift_bridgeObjectRelease();
  v15 = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v15;
  if (((*(uint64_t (**)(void))(v10 + 64))() & 1) != 0)
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B7AAC;
    return sub_21F6B8EAC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6B7AAC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6B7B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(*(_QWORD *)(v0 + 88) + 48);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v4(v2, v3, sub_21F6BDCCC, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6B7B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[12] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B7C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 16);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v5 = 136446210;
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    *(_QWORD *)(v0 + 56) = sub_21F644208(v8, v9, &v19);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASAnalytics send event %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v18, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }

  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD **)(v0 + 64);
  v12 = *(_QWORD *)(v10 + 24);
  v19 = *(_QWORD *)(v10 + 16);
  v20 = v12;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v13 = v11[3];
  v14 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_21F716140();
  swift_bridgeObjectRelease();
  v15 = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v15;
  if (((*(uint64_t (**)(void))(v10 + 64))() & 1) != 0)
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B7ED0;
    return sub_21F6B8EAC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6B7ED0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6B7F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(*(_QWORD *)(v0 + 88) + 48);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v4(v2, v3, sub_21F6BDCCC, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6B7FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[12] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B802C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 16);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v5 = 136446210;
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    *(_QWORD *)(v0 + 56) = sub_21F644208(v8, v9, &v19);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASAnalytics send event %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v18, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }

  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD **)(v0 + 64);
  v12 = *(_QWORD *)(v10 + 24);
  v19 = *(_QWORD *)(v10 + 16);
  v20 = v12;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v13 = v11[3];
  v14 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_21F716140();
  swift_bridgeObjectRelease();
  v15 = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v15;
  if (((*(uint64_t (**)(void))(v10 + 64))() & 1) != 0)
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B82F4;
    return sub_21F6B90CC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6B82F4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6B8354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(*(_QWORD *)(v0 + 88) + 48);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v4(v2, v3, sub_21F6BDCCC, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6B83E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[12] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B8450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = sub_21F715F3C();
  __swift_project_value_buffer(v2, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 16);
  v3 = sub_21F715F24();
  v4 = sub_21F716350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v5 = 136446210;
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v7);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
    *(_QWORD *)(v0 + 56) = sub_21F644208(v8, v9, &v19);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
    _os_log_impl(&dword_21F63C000, v3, v4, "PASAnalytics send event %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v18, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }

  v10 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD **)(v0 + 64);
  v12 = *(_QWORD *)(v10 + 24);
  v19 = *(_QWORD *)(v10 + 16);
  v20 = v12;
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRetain();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  v13 = v11[3];
  v14 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_21F716140();
  swift_bridgeObjectRelease();
  v15 = v20;
  *(_QWORD *)(v0 + 104) = v19;
  *(_QWORD *)(v0 + 112) = v15;
  if (((*(uint64_t (**)(void))(v10 + 64))() & 1) != 0)
  {
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v16;
    *v16 = v0;
    v16[1] = sub_21F6B8718;
    return sub_21F6B8EAC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_21F6B8718(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6B8778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(*(_QWORD *)(v0 + 88) + 48);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  v4(v2, v3, sub_21F6BDB54, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6B8808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[23] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B8874()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  _QWORD *v8;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_21F6AF504(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
    v6 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 192) = v6;
  v7 = *(int **)(v0 + 160);
  if (v7)
  {
    v15 = (uint64_t (*)(void))((char *)v7 + *v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v8;
    *v8 = v0;
    v8[1] = sub_21F6B89B4;
    return v15();
  }
  else
  {
    v10 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v0 + 192);
    v12 = (_QWORD *)sub_21F6B6930();
    v13 = (_QWORD *)sub_21F6AE934(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = sub_21F6AE934(v10, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
}

uint64_t sub_21F6B89B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 216) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6B8A28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t inited;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void **)(v0 + 208);
  v3 = sub_21F715F3C();
  __swift_project_value_buffer(v3, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 72);
  v4 = v2;
  v5 = v2;
  v6 = sub_21F715F24();
  v7 = sub_21F71635C();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 208);
  if (v8)
  {
    v10 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v30 = v29;
    *(_DWORD *)v10 = 136446466;
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    *(_QWORD *)(v0 + 136) = sub_21F644208(v13, v14, &v30);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
    *(_WORD *)(v10 + 12) = 2114;
    v15 = v9;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v16;
    sub_21F716428();
    *v28 = v16;

    _os_log_impl(&dword_21F63C000, v6, v7, "PASAnalytics failed to gather additional data for event %{public}s.\n%{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v29, -1, -1);
    MEMORY[0x2207CC514](v10, -1, -1);

  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);

  }
  v17 = *(void **)(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x800000021F728CD0;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0xE000000000000000;
  *(_QWORD *)(v0 + 128) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  sub_21F7165CC();
  v19 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v20 = (void *)sub_21F7160E0();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithString_, v20);

  *(_QWORD *)(inited + 48) = v21;
  v22 = sub_21F640C48(inited);

  v23 = *(_QWORD *)(v0 + 192);
  v24 = (_QWORD *)sub_21F6B6930();
  v25 = (_QWORD *)sub_21F6AE934(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = sub_21F6AE934(v22, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
}

uint64_t sub_21F6B8DF4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  sub_21F6AF504(*(_QWORD *)(v0 + 216));
  v2 = v1;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v2 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  v3 = *(_QWORD *)(v0 + 192);
  v4 = (_QWORD *)sub_21F6B6930();
  v5 = (_QWORD *)sub_21F6AE934(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = sub_21F6AE934(v2, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_21F6B8EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[23] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B8F18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  _QWORD *v8;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_21F6AF504(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
    v6 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 192) = v6;
  v7 = *(int **)(v0 + 160);
  if (v7)
  {
    v15 = (uint64_t (*)(void))((char *)v7 + *v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v8;
    *v8 = v0;
    v8[1] = sub_21F6B9058;
    return v15();
  }
  else
  {
    v10 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v0 + 192);
    v12 = (_QWORD *)sub_21F6B6930();
    v13 = (_QWORD *)sub_21F6AE934(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = sub_21F6AE934(v10, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
}

uint64_t sub_21F6B9058(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 216) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6B90CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  if (qword_2554DA730 != -1)
    swift_once();
  v4[23] = qword_2554E51F0;
  return swift_task_switch();
}

uint64_t sub_21F6B9138()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int *v7;
  _QWORD *v8;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_21F6AF504(v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6)
    v6 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 192) = v6;
  v7 = *(int **)(v0 + 160);
  if (v7)
  {
    v15 = (uint64_t (*)(void))((char *)v7 + *v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v8;
    *v8 = v0;
    v8[1] = sub_21F6B9278;
    return v15();
  }
  else
  {
    v10 = sub_21F640C48(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v0 + 192);
    v12 = (_QWORD *)sub_21F6B6930();
    v13 = (_QWORD *)sub_21F6AE934(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = sub_21F6AE934(v10, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
}

uint64_t sub_21F6B9278(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 216) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6B92EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t inited;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_2554DA728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void **)(v0 + 208);
  v3 = sub_21F715F3C();
  __swift_project_value_buffer(v3, (uint64_t)qword_2554DFB98);
  sub_21F647710(v1, v0 + 72);
  v4 = v2;
  v5 = v2;
  v6 = sub_21F715F24();
  v7 = sub_21F71635C();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 208);
  if (v8)
  {
    v10 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v30 = v29;
    *(_DWORD *)v10 = 136446466;
    v12 = *(_QWORD *)(v0 + 96);
    v11 = *(_QWORD *)(v0 + 104);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 72), v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    *(_QWORD *)(v0 + 136) = sub_21F644208(v13, v14, &v30);
    sub_21F716428();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
    *(_WORD *)(v10 + 12) = 2114;
    v15 = v9;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v16;
    sub_21F716428();
    *v28 = v16;

    _os_log_impl(&dword_21F63C000, v6, v7, "PASAnalytics failed to gather additional data for event %{public}s.\n%{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v29, -1, -1);
    MEMORY[0x2207CC514](v10, -1, -1);

  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);

  }
  v17 = *(void **)(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x800000021F728CD0;
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0xE000000000000000;
  *(_QWORD *)(v0 + 128) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  sub_21F7165CC();
  v19 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v20 = (void *)sub_21F7160E0();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithString_, v20);

  *(_QWORD *)(inited + 48) = v21;
  v22 = sub_21F640C48(inited);

  v23 = *(_QWORD *)(v0 + 192);
  v24 = (_QWORD *)sub_21F6B6930();
  v25 = (_QWORD *)sub_21F6AE934(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = sub_21F6AE934(v22, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v26);
}

void PASFlowStepError.description.getter()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_21F66A5E4(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_21F6B970C()
{
  uint64_t v0;

  sub_21F7164E8();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return v0 + 12;
}

uint64_t sub_21F6B9800()
{
  uint64_t v0;

  return qword_21F71F010[*(char *)(v0 + 32)];
}

unint64_t sub_21F6B9814()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[40];

  sub_21F66A5E4(v0, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v2;
  PASFlowStepError.description.getter();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  return sub_21F6409B8(inited);
}

void sub_21F6B9898()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_21F66A5E4(v0, (uint64_t)v1);
  PASFlowStepError.description.getter();
}

uint64_t sub_21F6B98CC()
{
  sub_21F6BD278();
  return sub_21F7168C0();
}

uint64_t sub_21F6B98F4()
{
  sub_21F6BD278();
  return sub_21F7168B4();
}

uint64_t PASSourceFlowStep._delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_21F6BD024(a1, a2, a3, a4);
  return swift_unknownObjectRelease();
}

void (*PASSourceFlowStep._delegate.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (v8)
    v10 = *(_QWORD *)(v9 + 8);
  else
    v10 = 0;
  *v7 = v8;
  v7[1] = v10;
  return sub_21F6B99C8;
}

void sub_21F6B99C8(uint64_t **a1, char a2)
{
  sub_21F6B9AB8(a1, a2);
}

uint64_t _s21ProximityAppleIDSetup17PASSourceFlowStepPAAE9_delegateAA07PASFlowF8Delegate_pSgvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t PASTargetFlowStep._delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_21F6BD024(a1, a2, a3, a4);
  return swift_unknownObjectRelease();
}

void (*PASTargetFlowStep._delegate.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  if (v8)
    v10 = *(_QWORD *)(v9 + 8);
  else
    v10 = 0;
  *v7 = v8;
  v7[1] = v10;
  return sub_21F6B9AAC;
}

void sub_21F6B9AAC(uint64_t **a1, char a2)
{
  sub_21F6B9AB8(a1, a2);
}

void sub_21F6B9AB8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[1];
  v4 = (*a1)[3];
  v5 = (*a1)[2];
  v6 = **a1;
  if ((a2 & 1) != 0)
  {
    v7 = swift_unknownObjectRetain();
    sub_21F6BD024(v7, v3, v5, v4);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_21F6BD024(v6, v3, v5, v4);
  }
  swift_unknownObjectRelease();
  free(v2);
}

Swift::Void __swiftcall PASFlowStepIntermediate.stepDidFinish()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v4 = v1;
  v5 = v0;
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(uint64_t (**)(void))(v6 + 16);
  v8 = v7();
  swift_unknownObjectRelease();
  if (!v8)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v9 = sub_21F715F3C();
    __swift_project_value_buffer(v9, (uint64_t)static PASLogger.common);
    swift_unknownObjectRetain_n();
    v10 = sub_21F715F24();
    v11 = sub_21F716368();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v19 = v18;
      *(_DWORD *)v12 = 136446210;
      swift_unknownObjectRetain();
      v13 = sub_21F716128();
      sub_21F644208(v13, v14, &v19);
      sub_21F716428();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v10, v11, "%{public}s delegate is nil in setFinished", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v18, -1, -1);
      MEMORY[0x2207CC514](v12, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
  if (((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v6))
  {
    v16 = v15;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v3, v4, ObjectType, v16);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_21F6B9D68(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21F6B9DA0 + 4 * byte_21F71EAFA[a3]))(0xD000000000000012, 0x800000021F729100);
}

unint64_t sub_21F6B9DA0()
{
  return 0xD000000000000014;
}

void sub_21F6B9DD8()
{
  JUMPOUT(0x21F6B9DE4);
}

void sub_21F6B9DF0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_21F6B9E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DF578);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = 0xD000000000000017;
  *(_QWORD *)(inited + 40) = 0x800000021F729080;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = &protocol witness table for String;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v0;
  swift_bridgeObjectRetain();
  return sub_21F640D60(inited);
}

uint64_t sub_21F6B9EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_21F6B9D68(a1, a2, *(_BYTE *)(v2 + 16));
}

void sub_21F6B9ECC()
{
  uint64_t v0;

  sub_21F6B9DF0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t property wrapper backing initializer of PASFlowStepBase.finished()
{
  return sub_21F715F78();
}

uint64_t PASFlowStepBase.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  PASFlowStepBase.init()();
  return v0;
}

uint64_t PASFlowStepBase.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  char v37;

  v1 = v0;
  v2 = sub_21F715DE0();
  v34 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  LOBYTE(v36) = 0;
  sub_21F715F78();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v35 = v2;
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_21F716608())
    v13 = sub_21F687E74(MEMORY[0x24BEE4AF8]);
  else
    v13 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase_cancellables) = v13;
  v14 = OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase_timer;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase_timer) = 0;
  v15 = OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__baseStepAnalyticsProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE710);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_QWORD *)(v16 + 48) = 0;
  *(_QWORD *)(v1 + v15) = v16;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase____lazy_storage___baseStepAnalytics) = 0;
  v17 = sub_21F6B4814();
  v18 = sub_21F7169F8();
  v20 = v19;
  v21 = sub_21F7162C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
  *(_QWORD *)&v36 = v18;
  *((_QWORD *)&v36 + 1) = v20;
  v37 = 0;
  v22 = qword_2554DA730;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v22 != -1)
    swift_once();
  v23 = qword_2554E51F0;
  v24 = sub_21F647438((unint64_t *)&qword_2554DFBB8, (uint64_t (*)(uint64_t))type metadata accessor for PASAnalyticsActor.PASAnalyticsActorType, (uint64_t)&unk_21F71EAC4);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v23;
  v25[3] = v24;
  v25[4] = v17;
  sub_21F6BD0F4(&v36, (uint64_t)(v25 + 5));
  swift_retain();
  sub_21F6B4038((uint64_t)v7, (uint64_t)&unk_2554DFF28, (uint64_t)v25);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v26 = sub_21F6B4814();
  *(_QWORD *)&v36 = sub_21F7169F8();
  *((_QWORD *)&v36 + 1) = v27;
  v37 = 2;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v26;
  sub_21F6BD0F4(&v36, v28 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_21F715DC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFC50);
  v29 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v29 + 136) = 0;
  *(_BYTE *)(v29 + 144) = 1;
  *(_QWORD *)(v29 + 168) = 0;
  sub_21F715D98();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v35);
  *(_QWORD *)(v29 + 112) = v31;
  *(_QWORD *)(v29 + 120) = 0xD000000000000013;
  *(_QWORD *)(v29 + 128) = 0x800000021F728EF0;
  *(_QWORD *)(v29 + 152) = &unk_2554DFF38;
  *(_QWORD *)(v29 + 160) = v28;
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(v1 + v14) = v29;
  swift_release();
  return v1;
}

uint64_t sub_21F6BA310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[23] = a6;
  v7[24] = a7;
  v7[21] = a4;
  v7[22] = a5;
  v8 = sub_21F716278();
  v7[25] = v8;
  v7[26] = *(_QWORD *)(v8 - 8);
  v7[27] = swift_task_alloc();
  return swift_task_switch();
}

void sub_21F6BA374()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[28] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = v0[21];
    v10 = v0[22];
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136446466;
    v0[19] = v4;
    type metadata accessor for PASFlowStepBase(0);
    swift_retain();
    v7 = sub_21F716128();
    v0[20] = sub_21F644208(v7, v8, &v11);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2050;
    v0[16] = v10;
    sub_21F716428();
    _os_log_impl(&dword_21F63C000, v2, v3, "%{public}s will timeout after %{public}llu seconds", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v6, -1, -1);
    MEMORY[0x2207CC514](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (is_mul_ok(v0[22], 0x3B9ACA00uLL))
  {
    v9 = (_QWORD *)swift_task_alloc();
    v0[29] = v9;
    *v9 = v0;
    v9[1] = sub_21F6BA5BC;
    sub_21F7162FC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_21F6BA5BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F6BA630()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(void *);
  uint64_t (*v45)(uint64_t);
  uint64_t v46[2];

  v1 = *(void **)(v0 + 240);
  sub_21F7162F0();
  if (!v1)
  {
    sub_21F7162A8();
    *(_QWORD *)(v0 + 248) = sub_21F71629C();
    sub_21F716248();
    return swift_task_switch();
  }
  *(_QWORD *)(v0 + 256) = v1;
  *(_QWORD *)(v0 + 64) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if (swift_dynamicCast())
  {

    swift_retain_n();
    v3 = sub_21F715F24();
    v4 = sub_21F716374();
    v5 = os_log_type_enabled(v3, v4);
    v6 = *(_QWORD *)(v0 + 168);
    if (v5)
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v46[0] = v8;
      *(_DWORD *)v7 = 136446210;
      *(_QWORD *)(v0 + 112) = v6;
      type metadata accessor for PASFlowStepBase(0);
      swift_retain();
      v9 = sub_21F716128();
      *(_QWORD *)(v0 + 120) = sub_21F644208(v9, v10, v46);
      sub_21F716428();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v3, v4, "%{public}s timeout cancelled", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v8, -1, -1);
      MEMORY[0x2207CC514](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  *(_QWORD *)(v0 + 56) = v1;
  v12 = v1;
  if (!swift_dynamicCast())
    goto LABEL_10;
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_QWORD *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 32);
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(unsigned __int8 *)(v0 + 48);
  if (v17 != 4 || v14 | v13 | v15 | v16)
  {
    sub_21F6A10E0(v13, v14, v15, v16, v17);
LABEL_10:

    swift_retain();
    v18 = v1;
    swift_retain();
    v19 = v1;
    v20 = sub_21F715F24();
    v21 = sub_21F71635C();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 168);
    if (v22)
    {
      v24 = swift_slowAlloc();
      v42 = (_QWORD *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v46[0] = v43;
      *(_DWORD *)v24 = 136446466;
      *(_QWORD *)(v0 + 72) = v23;
      type metadata accessor for PASFlowStepBase(0);
      swift_retain();
      v25 = sub_21F716128();
      *(_QWORD *)(v0 + 80) = sub_21F644208(v25, v26, v46);
      sub_21F716428();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2114;
      v27 = v1;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 88) = v28;
      sub_21F716428();
      *v42 = v28;

      _os_log_impl(&dword_21F63C000, v20, v21, "%{public}s timeout error: %{public}@", (uint8_t *)v24, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v42, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v43, -1, -1);
      MEMORY[0x2207CC514](v24, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    v44 = (uint64_t (*)(void *))(**(int **)(v0 + 184) + *(_QWORD *)(v0 + 184));
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v29;
    *v29 = v0;
    v29[1] = sub_21F6BB694;
    return v44(v1);
  }

  swift_retain_n();
  v30 = sub_21F715F24();
  v31 = sub_21F71635C();
  v32 = os_log_type_enabled(v30, v31);
  v33 = *(_QWORD *)(v0 + 168);
  if (v32)
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v46[0] = v35;
    *(_DWORD *)v34 = 136446210;
    *(_QWORD *)(v0 + 96) = v33;
    type metadata accessor for PASFlowStepBase(0);
    swift_retain();
    v36 = sub_21F716128();
    *(_QWORD *)(v0 + 104) = sub_21F644208(v36, v37, v46);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21F63C000, v30, v31, "%{public}s timed out.", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v35, -1, -1);
    MEMORY[0x2207CC514](v34, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v38 = *(int **)(v0 + 184);
  sub_21F658AF4();
  v39 = swift_allocError();
  *(_QWORD *)(v0 + 264) = v39;
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  *(_BYTE *)(v40 + 32) = 4;
  v45 = (uint64_t (*)(uint64_t))((char *)v38 + *v38);
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v41;
  *v41 = v0;
  v41[1] = sub_21F6BB5FC;
  return v45(v39);
}

uint64_t sub_21F6BAD3C()
{
  uint64_t v0;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  *(_BYTE *)(v0 + 50) = *(_BYTE *)(v0 + 49);
  return swift_task_switch();
}

uint64_t sub_21F6BADD4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v38;
  uint64_t (*v39)();
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t (*v52)(void *);
  uint64_t v53[2];

  if (*(_BYTE *)(v0 + 50) == 1)
  {
    swift_retain_n();
    v1 = sub_21F715F24();
    v2 = sub_21F716374();
    v3 = os_log_type_enabled(v1, v2);
    v4 = *(_QWORD *)(v0 + 168);
    if (v3)
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v53[0] = v6;
      *(_DWORD *)v5 = 136446210;
      *(_QWORD *)(v0 + 136) = v4;
      type metadata accessor for PASFlowStepBase(0);
      swift_retain();
      v7 = sub_21F716128();
      *(_QWORD *)(v0 + 144) = sub_21F644208(v7, v8, v53);
      sub_21F716428();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v1, v2, "%{public}s timeout was not cancelled when the step was finished", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v6, -1, -1);
      MEMORY[0x2207CC514](v5, -1, -1);

    }
    else
    {

      swift_release_n();
    }
LABEL_16:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_21F658AF4();
  v9 = (void *)swift_allocError();
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_BYTE *)(v10 + 32) = 4;
  swift_willThrow();
  *(_QWORD *)(v0 + 256) = v9;
  *(_QWORD *)(v0 + 64) = v9;
  v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
  if ((swift_dynamicCast() & 1) != 0)
  {

    swift_retain_n();
    v12 = sub_21F715F24();
    v13 = sub_21F716374();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 168);
    if (v14)
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v53[0] = v17;
      *(_DWORD *)v16 = 136446210;
      *(_QWORD *)(v0 + 112) = v15;
      type metadata accessor for PASFlowStepBase(0);
      swift_retain();
      v18 = sub_21F716128();
      *(_QWORD *)(v0 + 120) = sub_21F644208(v18, v19, v53);
      sub_21F716428();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21F63C000, v12, v13, "%{public}s timeout cancelled", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v17, -1, -1);
      MEMORY[0x2207CC514](v16, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));

    goto LABEL_16;
  }

  *(_QWORD *)(v0 + 56) = v9;
  v20 = v9;
  if (swift_dynamicCast())
  {
    v21 = *(_QWORD *)(v0 + 16);
    v22 = *(_QWORD *)(v0 + 24);
    v23 = *(_QWORD *)(v0 + 32);
    v24 = *(_QWORD *)(v0 + 40);
    v25 = *(unsigned __int8 *)(v0 + 48);
    if (v25 == 4 && !(v22 | v21 | v23 | v24))
    {

      swift_retain_n();
      v40 = sub_21F715F24();
      v41 = sub_21F71635C();
      v42 = os_log_type_enabled(v40, v41);
      v43 = *(_QWORD *)(v0 + 168);
      if (v42)
      {
        v44 = (uint8_t *)swift_slowAlloc();
        v45 = swift_slowAlloc();
        v53[0] = v45;
        *(_DWORD *)v44 = 136446210;
        *(_QWORD *)(v0 + 96) = v43;
        type metadata accessor for PASFlowStepBase(0);
        swift_retain();
        v46 = sub_21F716128();
        *(_QWORD *)(v0 + 104) = sub_21F644208(v46, v47, v53);
        sub_21F716428();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21F63C000, v40, v41, "%{public}s timed out.", v44, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2207CC514](v45, -1, -1);
        MEMORY[0x2207CC514](v44, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v48 = *(int **)(v0 + 184);
      v9 = (void *)swift_allocError();
      *(_QWORD *)(v0 + 264) = v9;
      *(_OWORD *)v49 = 0u;
      *(_OWORD *)(v49 + 16) = 0u;
      *(_BYTE *)(v49 + 32) = 4;
      v52 = (uint64_t (*)(void *))((char *)v48 + *v48);
      v38 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v38;
      v39 = sub_21F6BB5FC;
      goto LABEL_19;
    }
    sub_21F6A10E0(v21, v22, v23, v24, v25);
  }

  swift_retain();
  v26 = v9;
  swift_retain();
  v27 = v9;
  v28 = sub_21F715F24();
  v29 = sub_21F71635C();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(_QWORD *)(v0 + 168);
  if (v30)
  {
    v32 = swift_slowAlloc();
    v50 = (_QWORD *)swift_slowAlloc();
    v51 = swift_slowAlloc();
    v53[0] = v51;
    *(_DWORD *)v32 = 136446466;
    *(_QWORD *)(v0 + 72) = v31;
    type metadata accessor for PASFlowStepBase(0);
    swift_retain();
    v33 = sub_21F716128();
    *(_QWORD *)(v0 + 80) = sub_21F644208(v33, v34, v53);
    sub_21F716428();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2114;
    v35 = v9;
    v36 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v36;
    sub_21F716428();
    *v50 = v36;

    _os_log_impl(&dword_21F63C000, v28, v29, "%{public}s timeout error: %{public}@", (uint8_t *)v32, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v50, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v51, -1, -1);
    MEMORY[0x2207CC514](v32, -1, -1);
  }
  else
  {
    swift_release_n();

  }
  v52 = (uint64_t (*)(void *))(**(int **)(v0 + 184) + *(_QWORD *)(v0 + 184));
  v38 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v38;
  v39 = sub_21F6BB694;
LABEL_19:
  *v38 = v0;
  v38[1] = v39;
  return v52(v9);
}

uint64_t sub_21F6BB5FC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 264);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_21F6BB658()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6BB694()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6BB6E8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepBase.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASFlowStepBase.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6BB840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PASFlowStepBase(0);
  result = sub_21F715F6C();
  *a1 = result;
  return result;
}

uint64_t PASTargetFlowStepBase.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v4 = swift_allocObject();
  v5 = v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v6 = qword_2554DA718;
    swift_retain();
    if (v6 != -1)
      swift_once();
    v7 = sub_21F715F3C();
    __swift_project_value_buffer(v7, (uint64_t)static PASLogger.common);
    v8 = sub_21F715F24();
    v9 = sub_21F716368();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_21F63C000, v8, v9, "PASTargetFlowStepBase delegate is nil in init", v10, 2u);
      MEMORY[0x2207CC514](v10, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  PASFlowStepBase.init()();
  swift_unknownObjectRelease();
  return v4;
}

void PASTargetFlowStepBase.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6BBA1C()
{
  uint64_t v0;

  return sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
}

uint64_t PASTargetFlowStepBase.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup15PASFlowStepBase__finished;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_21F6BBAD0(uint64_t a1, uint64_t a2)
{
  return sub_21F6BBF6C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
}

uint64_t sub_21F6BBADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6BBFC0(a1, a2, a3, a4, &OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate);
}

uint64_t (*sub_21F6BBAE8(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_21F6B4F70;
}

uint64_t sub_21F6BBB5C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASTargetFlowStepBase, a1);
  return PASSourceFlowStep._delegate.getter(a1, v2);
}

uint64_t sub_21F6BBB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6BC154(a1, a2, a3, a4, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
}

void (*sub_21F6BBBA4(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v5[2] = v2;
  v5[3] = a2;
  v6 = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASTargetFlowStepBase, a2);
  v5[4] = v6;
  *v5 = PASSourceFlowStep._delegate.getter(a2, v6);
  v5[1] = v7;
  return sub_21F6BBC10;
}

void sub_21F6BBC10(uint64_t **a1, char a2)
{
  sub_21F6BC22C(a1, a2);
}

uint64_t (*sub_21F6BBC24(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_21F715F9C();
  return sub_21F6B45FC;
}

uint64_t sub_21F6BBC9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 256) + *(_QWORD *)(*(_QWORD *)v0 + 256));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F656988;
  return v4();
}

uint64_t sub_21F6BBCF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PASTargetFlowStepBase(0);
  result = sub_21F716500();
  *a1 = result;
  return result;
}

uint64_t sub_21F6BBD38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_21F6BBDB0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

uint64_t PASSourceFlowStepBase.__allocating_init(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_21F6BC954(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

void PASSourceFlowStepBase.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6BBEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v4)(uint64_t, uint64_t);

  sub_21F653C88(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate);
  v1 = v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentSheet;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentResetAlert, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v4)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentCancelAlert, v2);
}

uint64_t PASSourceFlowStepBase.__deallocating_deinit()
{
  PASSourceFlowStepBase.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_21F6BBF60(uint64_t a1, uint64_t a2)
{
  return sub_21F6BBF6C(a1, a2, &OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate);
}

uint64_t sub_21F6BBF6C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *a3;
  swift_beginAccess();
  return MEMORY[0x2207CC5BC](v4);
}

uint64_t sub_21F6BBFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6BBFC0(a1, a2, a3, a4, &OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate);
}

uint64_t sub_21F6BBFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v7;

  v7 = v5 + *a5;
  swift_beginAccess();
  *(_QWORD *)(v7 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_21F6BC024(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x2207CC5BC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_21F6B4F70;
}

void sub_21F6BC098(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_21F6BC10C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASSourceFlowStepBase, a1);
  return PASSourceFlowStep._delegate.getter(a1, v2);
}

uint64_t sub_21F6BC140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6BC154(a1, a2, a3, a4, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
}

uint64_t sub_21F6BC154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;

  v8 = MEMORY[0x2207CC46C](a5, a3);
  sub_21F6BD024(a1, a2, a3, v8);
  return swift_unknownObjectRelease();
}

void (*sub_21F6BC1B4(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v5[2] = v2;
  v5[3] = a2;
  v6 = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASSourceFlowStepBase, a2);
  v5[4] = v6;
  *v5 = PASSourceFlowStep._delegate.getter(a2, v6);
  v5[1] = v7;
  return sub_21F6BC220;
}

void sub_21F6BC220(uint64_t **a1, char a2)
{
  sub_21F6BC22C(a1, a2);
}

void sub_21F6BC22C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[1];
  v5 = (*a1)[3];
  v4 = (*a1)[4];
  v6 = **a1;
  if ((a2 & 1) != 0)
  {
    v7 = swift_unknownObjectRetain();
    sub_21F6BD024(v7, v3, v5, v4);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_21F6BD024(v6, v3, v5, v4);
  }
  swift_unknownObjectRelease();
  free(v2);
}

uint64_t sub_21F6BC2C0()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_21F715FA8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_21F6BC330()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_21F715FB4();
}

void sub_21F6BC39C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_21F6BC3E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 256) + *(_QWORD *)(*(_QWORD *)v0 + 256));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return v4();
}

uint64_t sub_21F6BC440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PASSourceFlowStepBase(0);
  result = sub_21F716500();
  *a1 = result;
  return result;
}

uint64_t sub_21F6BC480(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_21F6BC4E4;
  return v6(a1);
}

uint64_t sub_21F6BC4E4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_21F6BC530(void (*a1)(void))
{
  a1();
  return sub_21F7169F8();
}

uint64_t sub_21F6BC554(uint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v7 = *a1;
  v8 = a1[1];
  v9 = *(_QWORD *)a3;
  v10 = *(_QWORD *)(a3 + 8);
  v11 = *(_BYTE *)(a3 + 16);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_21F656988;
  return sub_21F6B6A34(v7, v8, a2, v9, v10, v11, a4);
}

uint64_t sub_21F6BC5E0(uint64_t a1, uint64_t a2, uint64_t *a3, double a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v8 = *a3;
  v9 = a3[1];
  v10 = *((_BYTE *)a3 + 16);
  v11 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v11;
  *(_QWORD *)v11 = v4;
  *(_QWORD *)(v11 + 8) = sub_21F6514BC;
  *(double *)(v11 + 152) = a4;
  *(_BYTE *)(v11 + 184) = v10;
  *(_QWORD *)(v11 + 136) = v8;
  *(_QWORD *)(v11 + 144) = v9;
  *(_QWORD *)(v11 + 120) = a1;
  *(_QWORD *)(v11 + 128) = a2;
  return swift_task_switch();
}

uint64_t sub_21F6BC66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_OWORD *)(v5 + 64) = *(_OWORD *)a5;
  *(_BYTE *)(v5 + 88) = *(_BYTE *)(a5 + 16);
  if (qword_2554DA730 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_21F6BC6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 40) = &type metadata for PASFlowStepAnalyticsEvent;
  *(_QWORD *)(v0 + 48) = &off_24E457420;
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  v3 = *(_BYTE *)(v0 + 88);
  *(_BYTE *)(v0 + 32) = v3;
  sub_21F6BD864(v1, v2, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v4;
  *v4 = v0;
  v4[1] = sub_21F6B1030;
  return sub_21F6B7354(v0 + 16, 0, 0);
}

uint64_t sub_21F6BC764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v8 = *a5;
  v9 = a5[1];
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2554E0588 + dword_2554E0588);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v10;
  *v10 = v6;
  v10[1] = sub_21F656988;
  return v12(v8, v9, a6);
}

uint64_t sub_21F6BC7E4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_21F6BC84C;
  return v5(v2 + 32);
}

uint64_t sub_21F6BC84C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_21F6BC89C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 32) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 40) = v3;
  *v3 = v2;
  v3[1] = sub_21F6BC904;
  return v5(v2 + 16);
}

uint64_t sub_21F6BC904()
{
  uint64_t *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_OWORD **)(*v0 + 32);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_OWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_21F6BC954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  char v21;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E24B0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  v11 = v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentSheet;
  v21 = 0;
  swift_retain();
  sub_21F715F78();
  v12 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v12(v11, v9, v6);
  v13 = v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentResetAlert;
  v21 = 0;
  sub_21F715F78();
  v12(v13, v9, v6);
  v14 = v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASSourceFlowStepBase__presentCancelAlert;
  v21 = 0;
  sub_21F715F78();
  v12(v14, v9, v6);
  if (!a1)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v15 = sub_21F715F3C();
    __swift_project_value_buffer(v15, (uint64_t)static PASLogger.common);
    v16 = sub_21F715F24();
    v17 = sub_21F716368();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_21F63C000, v16, v17, "PASSourceFlowStepBase delegate is nil in init", v18, 2u);
      MEMORY[0x2207CC514](v18, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v10 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  PASFlowStepBase.init()();
  return v3;
}

uint64_t sub_21F6BCB84@<X0>(_BYTE *a1@<X8>)
{
  return sub_21F6BBD38(a1);
}

uint64_t sub_21F6BCBA8()
{
  return sub_21F6BBDB0();
}

uint64_t sub_21F6BCBCC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6BCC00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_21F651418;
  return sub_21F6BA310(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_21F6BCC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_21F715DE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 56) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_21F6BCD18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_21F715DE0() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1 + 5;
  v9 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_2554DFEE0
                                                                                         + dword_2554DFEE0))(a1, v5, v6, v7, v8, v9);
}

uint64_t type metadata accessor for PASFlowStepBase(uint64_t a1)
{
  return sub_21F6BD398(a1, qword_2554DFFA8);
}

uint64_t sub_21F6BCDDC@<X0>(_BYTE *a1@<X8>)
{
  return sub_21F6BBD38(a1);
}

uint64_t sub_21F6BCE00()
{
  return sub_21F6BBDB0();
}

uint64_t sub_21F6BCE24@<X0>(_BYTE *a1@<X8>)
{
  return sub_21F6BBD38(a1);
}

uint64_t sub_21F6BCE48()
{
  return sub_21F6BBDB0();
}

uint64_t sub_21F6BCE6C@<X0>(_BYTE *a1@<X8>)
{
  return sub_21F6BBD38(a1);
}

uint64_t sub_21F6BCE90()
{
  return sub_21F6BBDB0();
}

uint64_t type metadata accessor for PASSourceFlowStepBase(uint64_t a1)
{
  return sub_21F6BD398(a1, qword_2554E02A0);
}

uint64_t sub_21F6BCEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v3 = v2;
  v6 = v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityAppleIDSetup21PASTargetFlowStepBase_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_retain();
  }
  else
  {
    v7 = qword_2554DA718;
    swift_retain();
    if (v7 != -1)
      swift_once();
    v8 = sub_21F715F3C();
    __swift_project_value_buffer(v8, (uint64_t)static PASLogger.common);
    v9 = sub_21F715F24();
    v10 = sub_21F716368();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_21F63C000, v9, v10, "PASTargetFlowStepBase delegate is nil in init", v11, 2u);
      MEMORY[0x2207CC514](v11, -1, -1);
    }

  }
  swift_beginAccess();
  *(_QWORD *)(v6 + 8) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  PASFlowStepBase.init()();
  return v3;
}

uint64_t sub_21F6BD024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!a1)
  {
    v9 = 0;
LABEL_11:
    v8 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(v9, v8, a3, a4);
  }
  swift_getObjectType();
  v7 = swift_conformsToProtocol2();
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = a1;
  else
    v9 = 0;
  if (!v9)
    goto LABEL_11;
  swift_unknownObjectRetain();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(v9, v8, a3, a4);
}

uint64_t sub_21F6BD0A4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_21F6BD0DC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_21F6BD0DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_21F6BD0F4(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_21F6BD10C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_21F651418;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2554DFF20
                                                                              + dword_2554DFF20))(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_21F6BD194()
{
  uint64_t v0;

  swift_release();
  sub_21F6BD0DC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_21F6BD1C4(uint64_t *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t, double))((char *)&dword_2554DFF30 + dword_2554DFF30))(a1, v6, v2 + 24, a2);
}

unint64_t sub_21F6BD244(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6BD278();
  a1[2] = sub_21F6BD2BC();
  result = sub_21F6BD300();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6BD278()
{
  unint64_t result;

  result = qword_2554DFF40;
  if (!qword_2554DFF40)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepError, &type metadata for PASFlowStepError);
    atomic_store(result, (unint64_t *)&qword_2554DFF40);
  }
  return result;
}

unint64_t sub_21F6BD2BC()
{
  unint64_t result;

  result = qword_2554DFF48;
  if (!qword_2554DFF48)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepError, &type metadata for PASFlowStepError);
    atomic_store(result, (unint64_t *)&qword_2554DFF48);
  }
  return result;
}

unint64_t sub_21F6BD300()
{
  unint64_t result;

  result = qword_2554DFF50;
  if (!qword_2554DFF50)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASFlowStepError, &type metadata for PASFlowStepError);
    atomic_store(result, (unint64_t *)&qword_2554DFF50);
  }
  return result;
}

uint64_t sub_21F6BD348(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438((unint64_t *)&unk_2554DFF58, type metadata accessor for PASTargetFlowStepBase, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASTargetFlowStepBase(uint64_t a1)
{
  return sub_21F6BD398(a1, qword_2554E0110);
}

uint64_t sub_21F6BD398(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6BD3CC(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DFF68, type metadata accessor for PASTargetFlowStepBase, (uint64_t)&protocol conformance descriptor for PASTargetFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F6BD408()
{
  return MEMORY[0x24BEE0948];
}

uint64_t sub_21F6BD414(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DFF00, type metadata accessor for PASSourceFlowStepBase, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F6BD450(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DFF78, type metadata accessor for PASSourceFlowStepBase, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21F6BD48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 3:
      swift_bridgeObjectRetain();
      result = swift_retain();
      break;
    case 1:
    case 2:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for PASFlowStepError(uint64_t a1)
{
  return sub_21F6A10E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PASFlowStepError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21F6BD48C(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PASFlowStepError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_21F6BD48C(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_21F6A10E0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PASFlowStepError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_21F6A10E0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PASFlowStepError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PASFlowStepError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_21F6BD6B4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 3u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_21F6BD6CC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepError()
{
  return &type metadata for PASFlowStepError;
}

uint64_t sub_21F6BD6F8()
{
  return type metadata accessor for PASFlowStepBase(0);
}

void sub_21F6BD700()
{
  unint64_t v0;

  sub_21F690CF8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21F6BD794()
{
  return type metadata accessor for PASTargetFlowStepBase(0);
}

uint64_t sub_21F6BD79C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F6BD7DC()
{
  return type metadata accessor for PASSourceFlowStepBase(0);
}

void sub_21F6BD7E4()
{
  unint64_t v0;

  sub_21F690CF8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_21F6BD864(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for PASFlowStepAnalyticsEvent(uint64_t a1)
{
  return sub_21F6BD0DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s21ProximityAppleIDSetup25PASFlowStepAnalyticsEventOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F6BD864(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PASFlowStepAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_21F6BD864(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_21F6BD0DC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PASFlowStepAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_21F6BD0DC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PASFlowStepAnalyticsEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PASFlowStepAnalyticsEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASFlowStepAnalyticsEvent()
{
  return &type metadata for PASFlowStepAnalyticsEvent;
}

uint64_t sub_21F6BDA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2554E04E0 + dword_2554E04E0))(a1, v4);
}

uint64_t sub_21F6BDA78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2554E04F0 + dword_2554E04F0))(a1, v4);
}

uint64_t sub_21F6BDAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6BDB30()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21F6BDB54()
{
  uint64_t v0;

  return j__swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_21F6BDB5C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  sub_21F6BD0DC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_21F6BDB94()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  _QWORD *v5;

  v2 = *((_QWORD *)v0 + 2);
  v3 = *((_QWORD *)v0 + 3);
  v4 = v0[7];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_21F6B3F8C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, double))((char *)&dword_2554E0530 + dword_2554E0530))(v2, v3, (uint64_t *)v0 + 4, v4);
}

uint64_t sub_21F6BDC10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6BDC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F656988;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2554E0578 + dword_2554E0578))(a1, v4);
}

id PASExtensionAuthenticateExtrasProtocolXPCInterface.getter()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_2554FF400);
  v2 = objc_msgSend(v0, sel_interfaceWithProtocol_, &unk_2554FF848);
  objc_msgSend(v1, sel_setInterface_forSelector_argumentIndex_ofReply_, v2, sel_fetchExtrasWithCompletion_, 0, 1);

  return v1;
}

id PASExtensionInfoProviderXPCInterface.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_255501170);
}

unint64_t PASExtensionInfoProviderError.description.getter()
{
  return 0xD000000000000036;
}

uint64_t static PASExtensionInfoProviderError.__derived_enum_equals(_:_:)()
{
  return 1;
}

uint64_t PASExtensionInfoProviderError.hash(into:)()
{
  return sub_21F71692C();
}

uint64_t PASExtensionInfoProviderError.hashValue.getter()
{
  sub_21F716920();
  sub_21F71692C();
  return sub_21F716968();
}

unint64_t sub_21F6BDE48()
{
  unint64_t result;

  result = qword_2554E0590;
  if (!qword_2554E0590)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASExtensionInfoProviderError, &type metadata for PASExtensionInfoProviderError);
    atomic_store(result, (unint64_t *)&qword_2554E0590);
  }
  return result;
}

unint64_t sub_21F6BDE8C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6BDEC0();
  a1[2] = sub_21F6BDF04();
  result = sub_21F6BDF48();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6BDEC0()
{
  unint64_t result;

  result = qword_2554E0598;
  if (!qword_2554E0598)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASExtensionInfoProviderError, &type metadata for PASExtensionInfoProviderError);
    atomic_store(result, (unint64_t *)&qword_2554E0598);
  }
  return result;
}

unint64_t sub_21F6BDF04()
{
  unint64_t result;

  result = qword_2554E05A0;
  if (!qword_2554E05A0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASExtensionInfoProviderError, &type metadata for PASExtensionInfoProviderError);
    atomic_store(result, (unint64_t *)&qword_2554E05A0);
  }
  return result;
}

unint64_t sub_21F6BDF48()
{
  unint64_t result;

  result = qword_2554E05A8;
  if (!qword_2554E05A8)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASExtensionInfoProviderError, &type metadata for PASExtensionInfoProviderError);
    atomic_store(result, (unint64_t *)&qword_2554E05A8);
  }
  return result;
}

unint64_t sub_21F6BDF90()
{
  unint64_t result;

  result = qword_2554E05B0;
  if (!qword_2554E05B0)
  {
    result = MEMORY[0x2207CC46C](&protocol conformance descriptor for PASExtensionInfoProviderError, &type metadata for PASExtensionInfoProviderError);
    atomic_store(result, (unint64_t *)&qword_2554E05B0);
  }
  return result;
}

unint64_t sub_21F6BDFD4()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000036;
  *(_QWORD *)(inited + 56) = 0x800000021F729120;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6BE05C()
{
  return 0xD000000000000036;
}

uint64_t sub_21F6BE078()
{
  sub_21F6BDEC0();
  return sub_21F7168C0();
}

uint64_t sub_21F6BE0A0()
{
  sub_21F6BDEC0();
  return sub_21F7168B4();
}

uint64_t storeEnumTagSinglePayload for PASExtensionInfoProviderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6BE108 + 4 * byte_21F71F040[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6BE128 + 4 * byte_21F71F045[v4]))();
}

_BYTE *sub_21F6BE108(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6BE128(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6BE130(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6BE138(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6BE140(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6BE148(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASExtensionInfoProviderError()
{
  return &type metadata for PASExtensionInfoProviderError;
}

_QWORD *initializeBufferWithCopyOfBuffer for PASLocatedExtension(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  v4 = v3;
  return a1;
}

void destroy for PASLocatedExtension(uint64_t a1)
{
  swift_release();

}

_QWORD *assignWithCopy for PASLocatedExtension(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for PASLocatedExtension(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for PASLocatedExtension(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PASLocatedExtension(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PASLocatedExtension()
{
  return &type metadata for PASLocatedExtension;
}

uint64_t sub_21F6BE2EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[40];
  _BYTE v6[40];
  __int128 v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  sub_21F647624(v3 + 16, (uint64_t)&v7, &qword_2554DAA28);
  if (v8)
    return sub_21F64756C(&v7, a1);
  swift_retain();
  sub_21F6476AC((uint64_t)&v7, &qword_2554DAA28);
  if (qword_2554DA6A0 != -1)
    swift_once();
  sub_21F63FDBC((uint64_t)&v7);
  sub_21F647710((uint64_t)&v7, a1);
  sub_21F647710((uint64_t)&v7, (uint64_t)v6);
  sub_21F6C152C((uint64_t)v6, (uint64_t)v5);
  swift_beginAccess();
  sub_21F6C1574((uint64_t)v5, v3 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
  return swift_release();
}

uint64_t sub_21F6BE410()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6BE428()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t (*v7)(unint64_t, unint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716344();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASExtensionLocator allIdentities querying for extensions", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  sub_21F6BE2EC(v0 + 16);
  v7 = (uint64_t (*)(unint64_t, unint64_t))((char *)&dword_2554E43D8 + dword_2554E43D8);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_21F6BE560;
  return v7(0xD00000000000002ELL, 0x800000021F729230);
}

uint64_t sub_21F6BE560(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6BE5BC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_21F6BE5F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 176) = v2;
  *v2 = v1;
  v2[1] = sub_21F6BE650;
  v2[7] = v0;
  return swift_task_switch();
}

uint64_t sub_21F6BE650(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_21F6BE6C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0[23];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v22 = (uint64_t)(v0 + 7);
    v23 = (uint64_t)(v0 + 2);
    v20 = v0 + 17;
    v24 = MEMORY[0x24BEE4AF8];
    sub_21F716578();
    v3 = v1 + 32;
    v21 = v0;
    v4 = v0 + 12;
    do
    {
      sub_21F647710(v3, v23);
      sub_21F647710(v23, v22);
      v5 = v21[10];
      v6 = __swift_mutable_project_boxed_opaque_existential_1(v22, v5);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
      type metadata accessor for PASExtensionHandle();
      v9 = swift_allocObject();
      v10 = sub_21F715F0C();
      v21[15] = v10;
      v21[16] = &off_24E45BC80;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4);
      v12 = *(_QWORD *)(v10 - 8);
      v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16);
      v13(boxed_opaque_existential_1, v8, v10);
      sub_21F647710((uint64_t)v4, v9 + 16);
      v21[20] = v10;
      v21[21] = &off_24E45BC80;
      v14 = v2;
      v15 = __swift_allocate_boxed_opaque_existential_1(v20);
      v13(v15, (uint64_t)boxed_opaque_existential_1, v10);
      v16 = swift_allocObject();
      sub_21F64756C((__int128 *)v20, v16 + 16);
      type metadata accessor for PASExtensionProxy();
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = &unk_2554E06F8;
      *(_QWORD *)(v17 + 24) = v16;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
      *(_QWORD *)(v9 + 56) = v17;
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v10);
      __swift_destroy_boxed_opaque_existential_0Tm(v22);
      swift_task_dealloc();
      __swift_destroy_boxed_opaque_existential_0Tm(v23);
      sub_21F716560();
      sub_21F716584();
      sub_21F716590();
      sub_21F71656C();
      v3 += 40;
      --v2;
    }
    while (v14 != 1);
    v0 = v21;
    v18 = v24;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
  }
  return ((uint64_t (*)(uint64_t))v0[1])(v18);
}

uint64_t sub_21F6BE92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E19B0);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6BE99C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 88);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_21F716608();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v20 = **(_QWORD **)(v0 + 80);
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v21;
    *v21 = v0;
    v21[1] = sub_21F6BEC80;
    return sub_21F6C11A4(v20);
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v23 = v1 & 0xC000000000000001;
    v22 = *(_QWORD *)(v0 + 88) + 32;
    v24 = v2;
    while (1)
    {
      if (v23)
      {
        v6 = MEMORY[0x2207CBA94](v4, *(_QWORD *)(v0 + 88));
      }
      else
      {
        v6 = *(_QWORD *)(v22 + 8 * v4);
        swift_retain();
      }
      v8 = *(_QWORD *)(v0 + 96);
      v7 = *(_QWORD *)(v0 + 104);
      v9 = sub_21F7162C0();
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v7, 1, 1, v9);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = 0;
      v12 = v11 + 2;
      v11[3] = 0;
      v11[4] = v6;
      sub_21F647624(v7, v8, &qword_2554E19B0);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
      swift_retain();
      v13 = *(_QWORD *)(v0 + 96);
      if ((_DWORD)v8 == 1)
      {
        sub_21F6476AC(*(_QWORD *)(v0 + 96), &qword_2554E19B0);
        if (!*v12)
          goto LABEL_13;
      }
      else
      {
        sub_21F7162B4();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
        if (!*v12)
        {
LABEL_13:
          v14 = 0;
          v16 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_21F716248();
      v16 = v15;
      swift_unknownObjectRelease();
LABEL_14:
      v17 = **(_QWORD **)(v0 + 80);
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = &unk_2554E06D8;
      *(_QWORD *)(v18 + 24) = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFAD8);
      v19 = v16 | v14;
      if (v16 | v14)
      {
        v19 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v14;
        *(_QWORD *)(v0 + 40) = v16;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 104);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v19;
      *(_QWORD *)(v0 + 64) = v17;
      swift_task_create();
      swift_release();
      swift_release();
      sub_21F6476AC(v5, &qword_2554E19B0);
      if (v24 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_21F6BEC80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6BECDC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 72) = *(_QWORD *)(v0 + 120);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6BED20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_21F6BED38()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[7] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  swift_retain_n();
  v2 = sub_21F715F24();
  v3 = sub_21F716344();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[6];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136446210;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
    v8 = sub_21F715F00();
    v0[4] = sub_21F644208(v8, v9, &v12);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_21F63C000, v2, v3, "PASExtensionLocator allLocatedExtensions fetching manifest for extension %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v10 = (_QWORD *)swift_task_alloc();
  v0[8] = v10;
  *v10 = v0;
  v10[1] = sub_21F6BEF1C;
  return sub_21F695BDC();
}

uint64_t sub_21F6BEF1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6BEF90()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = v0[10];
  v2 = (_QWORD *)v0[5];
  *v2 = v0[6];
  v2[1] = v1;
  v4 = (uint64_t (*)(void))v0[1];
  swift_retain();
  return v4();
}

uint64_t sub_21F6BEFD0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 72);
  swift_retain();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18 = v17;
    *(_DWORD *)v8 = 136446466;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 40));
    v10 = sub_21F715F00();
    *(_QWORD *)(v0 + 16) = sub_21F644208(v10, v11, &v18);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2114;
    v12 = v6;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v13;
    sub_21F716428();
    *v9 = v13;

    _os_log_impl(&dword_21F63C000, v4, v5, "PASExtensionLocator allLocatedExtensions failed to fetch manifest for extension %{public}s: %{public}@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DB2C0);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v17, -1, -1);
    MEMORY[0x2207CC514](v8, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 72);

    swift_release_n();
  }
  v15 = *(_QWORD **)(v0 + 40);
  *v15 = 0;
  v15[1] = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6BF218()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 40) = v0;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_21F6BF260;
  return sub_21F6BE5F4();
}

uint64_t sub_21F6BF260(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_QWORD *)(v4 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6BF2E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[8];
  v2 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFAD8);
  v3 = swift_task_alloc();
  v0[9] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554E06B0);
  v4 = (_QWORD *)swift_task_alloc();
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_21F6BF3A4;
  return sub_21F716554();
}

uint64_t sub_21F6BF3A4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6BF40C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  _QWORD *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  __int128 v47;
  uint64_t v48[2];

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (__int128 *)(v1 + 32);
    v4 = OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      v9 = (void *)*((_QWORD *)v3 + 1);
      if (*((_BYTE *)v9 + v4) == 1)
      {
        v47 = *v3;
        swift_retain();
        v10 = v9;
        v48[0] = v5;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_21F6BFA64(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v48[0];
        }
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        v8 = v47;
        if (v7 >= v6 >> 1)
        {
          sub_21F6BFA64(v6 > 1, v7 + 1, 1);
          v8 = v47;
          v5 = v48[0];
        }
        *(_QWORD *)(v5 + 16) = v7 + 1;
        *(_OWORD *)(v5 + 16 * v7 + 32) = v8;
        v4 = OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable;
      }
      ++v3;
      --v2;
    }
    while (v2);
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v11 = v0[7];
  swift_bridgeObjectRelease();
  v48[0] = v5;
  swift_retain();
  sub_21F6BFEF0(v48);
  if (v11)
    return swift_release();
  swift_release();
  v13 = (_QWORD *)v48[0];
  v14 = *(_QWORD *)(v48[0] + 16);
  if (v14)
  {
    v48[0] = MEMORY[0x24BEE4AF8];
    sub_21F6BFA48(0, v14, 0);
    v15 = v48[0];
    v16 = (void **)(v13 + 5);
    do
    {
      v17 = *v16;
      __swift_project_boxed_opaque_existential_1((_QWORD *)*(v16 - 1) + 2, *((_QWORD *)*(v16 - 1) + 5));
      swift_retain();
      v18 = v17;
      v19 = sub_21F715F00();
      v21 = v20;
      swift_release();

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48[0] = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21F6BFA48(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v48[0];
      }
      v24 = *(_QWORD *)(v15 + 16);
      v23 = *(_QWORD *)(v15 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_21F6BFA48(v23 > 1, v24 + 1, 1);
        v15 = v48[0];
      }
      *(_QWORD *)(v15 + 16) = v24 + 1;
      v25 = v15 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v19;
      *(_QWORD *)(v25 + 40) = v21;
      v16 += 2;
      --v14;
    }
    while (v14);
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v26 = sub_21F715F3C();
  __swift_project_value_buffer(v26, (uint64_t)static PASLogger.common);
  swift_bridgeObjectRetain();
  v27 = sub_21F715F24();
  v28 = sub_21F716344();
  v46 = v0;
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v48[0] = v30;
    *(_DWORD *)v29 = 136446210;
    v31 = swift_bridgeObjectRetain();
    v32 = MEMORY[0x2207CB758](v31, MEMORY[0x24BEE0D00]);
    v34 = v33;
    swift_bridgeObjectRelease();
    v0[4] = sub_21F644208(v32, v34, v48);
    sub_21F716428();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_21F63C000, v27, v28, "PASExtensionLocator designatedExtension extensions with available account pickers: %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v30, -1, -1);
    MEMORY[0x2207CC514](v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (!v13[2])
  {
    swift_release();
    v36 = 0;
    v38 = 0;
LABEL_30:
    v41 = v46;
    return ((uint64_t (*)(uint64_t, id))v41[1])(v36, v38);
  }
  v36 = v13[4];
  v35 = (void *)v13[5];
  swift_retain_n();
  v37 = v35;
  swift_release();
  v38 = v37;
  v39 = sub_21F715F24();
  v40 = sub_21F716344();
  if (!os_log_type_enabled(v39, v40))
  {
    swift_release_n();

    goto LABEL_30;
  }
  v41 = v46;
  v42 = (uint8_t *)swift_slowAlloc();
  v43 = swift_slowAlloc();
  v48[0] = v43;
  *(_DWORD *)v42 = 136446210;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v36 + 16), *(_QWORD *)(v36 + 40));
  v44 = sub_21F715F00();
  v46[3] = sub_21F644208(v44, v45, v48);
  sub_21F716428();
  swift_bridgeObjectRelease();
  swift_release_n();

  _os_log_impl(&dword_21F63C000, v39, v40, "PASExtensionLocator designatedExtension picking user picker extension %{public}s", v42, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2207CC514](v43, -1, -1);
  MEMORY[0x2207CC514](v42, -1, -1);

  return ((uint64_t (*)(uint64_t, id))v41[1])(v36, v38);
}

uint64_t sub_21F6BF97C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PASExtensionLocator()
{
  return objc_opt_self();
}

uint64_t sub_21F6BF9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21F656988;
  return sub_21F6BE92C(a1, a2, v6);
}

uint64_t sub_21F6BFA2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21F6BFA80(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_21F6BFA48(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21F6BFC20(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21F6BFA64(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21F6BFD88(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21F6BFA80(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0700);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0708);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21F716638();
  __break(1u);
  return result;
}

uint64_t sub_21F6BFC20(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DD620);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21F716638();
  __break(1u);
  return result;
}

uint64_t sub_21F6BFD88(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC1A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21F716638();
  __break(1u);
  return result;
}

void sub_21F6BFEF0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21F6C1014(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_21F6BFF58(v4);
  *a1 = v2;
}

void sub_21F6BFF58(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  void *v19;
  uint64_t v20;
  id v21;
  void **v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *__dst;
  id v113;
  id v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_21F716794();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_131;
    if (v4)
      sub_21F6C0808(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_139;
  v104 = v5;
  v98 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v103 = MEMORY[0x24BEE4AF8];
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_97:
      if (v12 >= 2)
      {
        v92 = *v98;
        do
        {
          v93 = v12 - 2;
          if (v12 < 2)
            goto LABEL_126;
          if (!v92)
            goto LABEL_138;
          v94 = *(_QWORD *)&v9[16 * v93 + 32];
          v95 = *(_QWORD *)&v9[16 * v12 + 24];
          sub_21F6C0990((char *)(v92 + 16 * v94), (char *)(v92 + 16 * *(_QWORD *)&v9[16 * v12 + 16]), v92 + 16 * v95, __dst);
          if (v2)
            break;
          if (v95 < v94)
            goto LABEL_127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_21F6C1000((uint64_t)v9);
          if (v93 >= *((_QWORD *)v9 + 2))
            goto LABEL_128;
          v96 = &v9[16 * v93 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v9 + 2);
          if (v12 > v97)
            goto LABEL_129;
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v97 - v12));
          *((_QWORD *)v9 + 2) = v97 - 1;
          v12 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_108:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_21F716218();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 - 16;
  v100 = *a1 + 40;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v109 = v4;
  v117 = *a1;
  while (1)
  {
    v13 = v10;
    v14 = v10 + 1;
    v108 = v10;
    if (v10 + 1 < v4)
    {
      v105 = v9;
      v15 = (uint64_t *)(v11 + 16 * v14);
      v17 = *v15;
      v16 = (void *)v15[1];
      v18 = (uint64_t *)(v11 + 16 * v10);
      v20 = *v18;
      v19 = (void *)v18[1];
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 40));
      swift_retain();
      v21 = v16;
      swift_retain();
      v113 = v19;
      sub_21F715F00();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v20 + 16), *(_QWORD *)(v20 + 40));
      sub_21F715F00();
      sub_21F6C1028();
      v110 = sub_21F716440();
      v4 = v109;
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v14 = v13 + 2;
      if (v13 + 2 < v109)
      {
        v101 = v2;
        v22 = (void **)(v100 + 16 * v13);
        while (1)
        {
          v23 = *v22;
          v25 = (uint64_t)*(v22 - 3);
          v24 = *(v22 - 2);
          __swift_project_boxed_opaque_existential_1((_QWORD *)*(v22 - 1) + 2, *((_QWORD *)*(v22 - 1) + 5));
          swift_retain();
          v26 = v23;
          swift_retain();
          v27 = v24;
          sub_21F715F00();
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v25 + 16), *(_QWORD *)(v25 + 40));
          sub_21F715F00();
          v28 = sub_21F716440();
          swift_release();

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if ((v110 == -1) == (v28 != -1))
            break;
          ++v14;
          v22 += 2;
          v4 = v109;
          if (v109 == v14)
          {
            v14 = v109;
            v2 = v101;
            goto LABEL_22;
          }
        }
        v2 = v101;
        v4 = v109;
LABEL_22:
        v13 = v108;
      }
      v9 = v105;
      v11 = v117;
      if (v110 == -1)
      {
        if (v14 < v13)
          goto LABEL_134;
        if (v13 < v14)
        {
          v29 = (__int128 *)(v99 + 16 * v14);
          v30 = v14;
          v31 = v13;
          v32 = (__int128 *)(v117 + 16 * v13);
          do
          {
            if (v31 != --v30)
            {
              if (!v117)
                goto LABEL_137;
              v33 = *v32;
              *v32 = *v29;
              *v29 = v33;
            }
            ++v31;
            --v29;
            ++v32;
          }
          while (v31 < v30);
        }
      }
    }
    if (v14 < v4)
    {
      if (__OFSUB__(v14, v13))
        goto LABEL_130;
      if (v14 - v13 < v104)
        break;
    }
LABEL_49:
    if (v14 < v13)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_21F6C0DB8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v43 = *((_QWORD *)v9 + 2);
    v42 = *((_QWORD *)v9 + 3);
    v12 = v43 + 1;
    v11 = v117;
    if (v43 >= v42 >> 1)
    {
      v91 = sub_21F6C0DB8((char *)(v42 > 1), v43 + 1, 1, v9);
      v11 = v117;
      v9 = v91;
    }
    *((_QWORD *)v9 + 2) = v12;
    v44 = v9 + 32;
    v45 = &v9[16 * v43 + 32];
    *(_QWORD *)v45 = v13;
    *((_QWORD *)v45 + 1) = v14;
    v115 = v14;
    if (v43)
    {
      while (1)
      {
        v46 = v12 - 1;
        if (v12 >= 4)
        {
          v51 = &v44[16 * v12];
          v52 = *((_QWORD *)v51 - 8);
          v53 = *((_QWORD *)v51 - 7);
          v57 = __OFSUB__(v53, v52);
          v54 = v53 - v52;
          if (v57)
            goto LABEL_114;
          v56 = *((_QWORD *)v51 - 6);
          v55 = *((_QWORD *)v51 - 5);
          v57 = __OFSUB__(v55, v56);
          v49 = v55 - v56;
          v50 = v57;
          if (v57)
            goto LABEL_115;
          v58 = v12 - 2;
          v59 = &v44[16 * v12 - 32];
          v61 = *(_QWORD *)v59;
          v60 = *((_QWORD *)v59 + 1);
          v57 = __OFSUB__(v60, v61);
          v62 = v60 - v61;
          if (v57)
            goto LABEL_117;
          v57 = __OFADD__(v49, v62);
          v63 = v49 + v62;
          if (v57)
            goto LABEL_120;
          if (v63 >= v54)
          {
            v81 = &v44[16 * v46];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v57 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v57)
              goto LABEL_124;
            v74 = v49 < v84;
            goto LABEL_86;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v75 = *((_QWORD *)v9 + 4);
            v76 = *((_QWORD *)v9 + 5);
            v57 = __OFSUB__(v76, v75);
            v68 = v76 - v75;
            v69 = v57;
            goto LABEL_80;
          }
          v48 = *((_QWORD *)v9 + 4);
          v47 = *((_QWORD *)v9 + 5);
          v57 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          v50 = v57;
        }
        if ((v50 & 1) != 0)
          goto LABEL_116;
        v58 = v12 - 2;
        v64 = &v44[16 * v12 - 32];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v67 = __OFSUB__(v65, v66);
        v68 = v65 - v66;
        v69 = v67;
        if (v67)
          goto LABEL_119;
        v70 = &v44[16 * v46];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v57 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v57)
          goto LABEL_122;
        if (__OFADD__(v68, v73))
          goto LABEL_123;
        if (v68 + v73 >= v49)
        {
          v74 = v49 < v73;
LABEL_86:
          if (v74)
            v46 = v58;
          goto LABEL_88;
        }
LABEL_80:
        if ((v69 & 1) != 0)
          goto LABEL_118;
        v77 = &v44[16 * v46];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v57 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v57)
          goto LABEL_121;
        if (v80 < v68)
          goto LABEL_14;
LABEL_88:
        v85 = v46 - 1;
        if (v46 - 1 >= v12)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v11)
          goto LABEL_136;
        v86 = &v44[16 * v85];
        v87 = *(_QWORD *)v86;
        v88 = &v44[16 * v46];
        v89 = *((_QWORD *)v88 + 1);
        sub_21F6C0990((char *)(v11 + 16 * *(_QWORD *)v86), (char *)(v11 + 16 * *(_QWORD *)v88), v11 + 16 * v89, __dst);
        if (v2)
          goto LABEL_108;
        if (v89 < v87)
          goto LABEL_111;
        if (v46 > *((_QWORD *)v9 + 2))
          goto LABEL_112;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v44[16 * v85 + 8] = v89;
        v90 = *((_QWORD *)v9 + 2);
        if (v46 >= v90)
          goto LABEL_113;
        v12 = v90 - 1;
        memmove(&v44[16 * v46], v88 + 16, 16 * (v90 - 1 - v46));
        *((_QWORD *)v9 + 2) = v90 - 1;
        v11 = v117;
        if (v90 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v4 = v109;
    v10 = v115;
    if (v115 >= v109)
      goto LABEL_97;
  }
  if (__OFADD__(v13, v104))
    goto LABEL_132;
  if (v13 + v104 >= v4)
    v34 = v4;
  else
    v34 = v13 + v104;
  if (v34 >= v13)
  {
    if (v14 != v34)
    {
      v106 = v9;
      v107 = v34;
      v102 = v2;
      v35 = v99 + 16 * v14;
      do
      {
        v36 = *(_OWORD *)(v11 + 16 * v14);
        v37 = v13;
        v111 = v35;
        while (1)
        {
          v116 = (void *)*((_QWORD *)&v36 + 1);
          v39 = *(_QWORD *)v35;
          v38 = *(void **)(v35 + 8);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v36 + 16), *(_QWORD *)(v36 + 40));
          swift_retain();
          v114 = v116;
          swift_retain();
          v40 = v38;
          sub_21F715F00();
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v39 + 16), *(_QWORD *)(v39 + 40));
          sub_21F715F00();
          sub_21F6C1028();
          v41 = sub_21F716440();
          swift_release();

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v41 != -1)
            break;
          v11 = v117;
          if (!v117)
            goto LABEL_135;
          v36 = *(_OWORD *)(v35 + 16);
          *(_OWORD *)(v35 + 16) = *(_OWORD *)v35;
          *(_OWORD *)v35 = v36;
          v35 -= 16;
          if (v14 == ++v37)
            goto LABEL_42;
        }
        v11 = v117;
LABEL_42:
        ++v14;
        v35 = v111 + 16;
        v13 = v108;
      }
      while (v14 != v107);
      v14 = v107;
      v2 = v102;
      v9 = v106;
    }
    goto LABEL_49;
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  sub_21F7165F0();
  __break(1u);
}

void sub_21F6C0808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  if (a3 != a2)
  {
    v15 = *a4;
    v4 = *a4 + 16 * a3 - 16;
LABEL_5:
    v5 = *(_OWORD *)(v15 + 16 * a3);
    v6 = a1;
    v14 = v4;
    v17 = a3;
    while (1)
    {
      v16 = (void *)*((_QWORD *)&v5 + 1);
      v8 = *(_QWORD *)v4;
      v7 = *(void **)(v4 + 8);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
      swift_retain();
      v9 = v16;
      swift_retain();
      v10 = v7;
      sub_21F715F00();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 40));
      sub_21F715F00();
      sub_21F6C1028();
      v11 = sub_21F716440();
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v11 != -1)
      {
LABEL_4:
        a3 = v17 + 1;
        v4 = v14 + 16;
        if (v17 + 1 == a2)
          return;
        goto LABEL_5;
      }
      if (!v15)
        break;
      v5 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v4 + 16) = *(_OWORD *)v4;
      *(_OWORD *)v4 = v5;
      v4 -= 16;
      if (v17 == ++v6)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_21F6C0990(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  id v30;
  char *v31;
  char *v32;
  char *v34;
  id v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;

  v4 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v8 = a2 - __src;
  v9 = v8 >> 4;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 4;
  v39 = __src;
  v38 = __dst;
  if (v9 >= v11 >> 4)
  {
    if (v10 < -15)
      goto LABEL_45;
    if (__dst != a2 || &a2[16 * v12] <= __dst)
      memmove(__dst, a2, 16 * v12);
    v29 = v4;
    v19 = &v4[16 * v12];
    v37 = v19;
    v39 = v5;
    if (v6 >= v5 || v10 < 16)
      goto LABEL_44;
    v20 = (char *)(a3 - 16);
    v21 = v5;
    while (1)
    {
      v36 = v5;
      v32 = v19;
      v34 = v20 + 16;
      v23 = *((_QWORD *)v19 - 2);
      v22 = (void *)*((_QWORD *)v19 - 1);
      v19 -= 16;
      v25 = *((_QWORD *)v21 - 2);
      v24 = (void *)*((_QWORD *)v21 - 1);
      v21 -= 16;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v23 + 16), *(_QWORD *)(v23 + 40));
      swift_retain();
      v30 = v22;
      swift_retain();
      v26 = v24;
      sub_21F715F00();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v25 + 16), *(_QWORD *)(v25 + 40));
      sub_21F715F00();
      sub_21F6C1028();
      v27 = sub_21F716440();
      swift_release();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v27 == -1)
        break;
      v37 = v19;
      if (v34 < v32 || v20 >= v32)
      {
        *(_OWORD *)v20 = *(_OWORD *)v19;
        v21 = v36;
        goto LABEL_31;
      }
      if (v34 != v32)
        *(_OWORD *)v20 = *(_OWORD *)v19;
      v21 = v36;
      if (v36 <= v6)
        goto LABEL_44;
LABEL_32:
      v20 -= 16;
      v5 = v21;
      if (v19 <= v29)
        goto LABEL_44;
    }
    v19 = v32;
    if (v34 != v36 || v20 >= v36)
      *(_OWORD *)v20 = *(_OWORD *)v21;
    v39 = v21;
LABEL_31:
    if (v21 <= v6)
      goto LABEL_44;
    goto LABEL_32;
  }
  if (v7 >= -15)
  {
    if (__dst != __src || &__src[16 * v9] <= __dst)
      memmove(__dst, __src, 16 * v9);
    v31 = &v4[16 * v9];
    v37 = v31;
    if ((unint64_t)v5 < a3 && v7 >= 16)
    {
      do
      {
        v13 = (void *)*((_QWORD *)v5 + 1);
        v15 = *(_QWORD *)v4;
        v14 = (void *)*((_QWORD *)v4 + 1);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v5 + 16), *(_QWORD *)(*(_QWORD *)v5 + 40));
        swift_retain();
        v35 = v13;
        swift_retain();
        v16 = v14;
        sub_21F715F00();
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 40));
        sub_21F715F00();
        sub_21F6C1028();
        v17 = sub_21F716440();
        swift_release();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v17 == -1)
        {
          v18 = v5 + 16;
          if (v6 < v5 || v6 >= v18 || v6 != v5)
            *(_OWORD *)v6 = *(_OWORD *)v5;
        }
        else
        {
          if (v6 != v4)
            *(_OWORD *)v6 = *(_OWORD *)v4;
          v4 += 16;
          v38 = v4;
          v18 = v5;
        }
        v6 += 16;
        if (v4 >= v31)
          break;
        v5 = v18;
      }
      while ((unint64_t)v18 < a3);
      v39 = v6;
    }
LABEL_44:
    sub_21F6C0EB0((void **)&v39, (const void **)&v38, &v37);
    return 1;
  }
LABEL_45:
  result = sub_21F716638();
  __break(1u);
  return result;
}

char *sub_21F6C0DB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554E06C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21F6C0EB0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_21F716638();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_21F6C0F58(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_21F716638();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_21F6C1000(uint64_t a1)
{
  return sub_21F6C0DB8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21F6C1014(uint64_t a1)
{
  return sub_21F6BFD88(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_21F6C1028()
{
  unint64_t result;

  result = qword_2554E06B8;
  if (!qword_2554E06B8)
  {
    result = MEMORY[0x2207CC46C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2554E06B8);
  }
  return result;
}

void sub_21F6C106C()
{
  JUMPOUT(0x2207CBD04);
}

uint64_t sub_21F6C1080()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6C10AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F651418;
  v5[5] = a1;
  v5[6] = v4;
  return swift_task_switch();
}

uint64_t sub_21F6C1110()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21F6C1134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_21F651418;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2554E06D0 + dword_2554E06D0))(a1, v4);
}

uint64_t sub_21F6C11A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[4] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E06F0);
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_21F6C1208()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFAD8);
  sub_21F716284();
  *(_QWORD *)(v0 + 64) = MEMORY[0x24BEE4AF8];
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_21F6C12A4;
  return sub_21F716290();
}

uint64_t sub_21F6C12A4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6C12F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
  }
  else
  {
    if (v1)
    {
      v2 = *(void **)(v0 + 24);
      sub_21F6C1470(*(id *)(v0 + 16), v2);
      swift_retain();
      v3 = v2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v5 = *(_QWORD **)(v0 + 64);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v5 = sub_21F6636D0(0, v5[2] + 1, 1, *(_QWORD **)(v0 + 64));
      v7 = v5[2];
      v6 = v5[3];
      if (v7 >= v6 >> 1)
        v5 = sub_21F6636D0((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
      v5[2] = v7 + 1;
      v8 = &v5[2 * v7];
      v8[4] = v1;
      v8[5] = v3;
      sub_21F6C1480(v1, v2);
      swift_release();

      *(_QWORD *)(v0 + 64) = v5;
    }
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v9;
    *v9 = v0;
    v9[1] = sub_21F6C12A4;
    return sub_21F716290();
  }
}

id sub_21F6C1470(id result, void *a2)
{
  if (result != (id)1)
    return sub_21F6ACC34(result, a2);
  return result;
}

void sub_21F6C1480(uint64_t a1, void *a2)
{
  if (a1 != 1)
    sub_21F6C1490(a1, a2);
}

void sub_21F6C1490(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_release();

  }
}

uint64_t sub_21F6C14BC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_21F6C14E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F6B3F8C;
  return sub_21F695B70(v0 + 16);
}

uint64_t sub_21F6C152C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21F6C1574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t PASExtensionManifest.isAccountPickerAvailable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable);
}

uint64_t PASExtensionManifest.wantsFullScreenPresentation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_wantsFullScreenPresentation);
}

uint64_t PASExtensionManifest.description.getter()
{
  sub_21F7164E8();
  sub_21F716140();
  swift_getObjectType();
  sub_21F7169F8();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F7165CC();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  sub_21F716140();
  swift_bridgeObjectRelease();
  sub_21F716140();
  return 0;
}

uint64_t PASExtensionManifest.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char v3;
  char v5;
  char v6;
  _BYTE *v7;
  _BYTE v8[24];
  uint64_t v9;

  swift_getObjectType();
  sub_21F649B14(a1, (uint64_t)v8);
  if (v9)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (*(unsigned __int8 *)(v1
                              + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable) == v7[OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable])
      {
        v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_wantsFullScreenPresentation);
        v6 = v7[OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_wantsFullScreenPresentation];

        v3 = v5 ^ v6 ^ 1;
        return v3 & 1;
      }

    }
  }
  else
  {
    sub_21F649B5C((uint64_t)v8);
  }
  v3 = 0;
  return v3 & 1;
}

uint64_t PASExtensionManifest.hash.getter()
{
  uint64_t v0;

  v0 = sub_21F71623C();
  return sub_21F71623C() ^ v0;
}

char *PASExtensionManifest.supportsSecureCoding.unsafeMutableAddressor()
{
  return &static PASExtensionManifest.supportsSecureCoding;
}

uint64_t static PASExtensionManifest.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return static PASExtensionManifest.supportsSecureCoding;
}

uint64_t static PASExtensionManifest.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  static PASExtensionManifest.supportsSecureCoding = a1;
  return result;
}

uint64_t (*static PASExtensionManifest.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall PASExtensionManifest.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable);
  v4 = (void *)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v3, v4);

  v5 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_wantsFullScreenPresentation);
  v6 = (id)sub_21F7160E0();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v5, v6);

}

id PASExtensionManifest.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_21F6C20F4(a1);

  return v4;
}

id PASExtensionManifest.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_21F6C20F4(a1);

  return v2;
}

id PASExtensionManifest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t PASExtensionManifestBuilder.isAccountPickerAvailable.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_isAccountPickerAvailable);
  swift_beginAccess();
  return *v1;
}

uint64_t PASExtensionManifestBuilder.isAccountPickerAvailable.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_isAccountPickerAvailable);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASExtensionManifestBuilder.isAccountPickerAvailable.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t PASExtensionManifestBuilder.wantsFullScreenPresentation.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_wantsFullScreenPresentation);
  swift_beginAccess();
  return *v1;
}

uint64_t PASExtensionManifestBuilder.wantsFullScreenPresentation.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_wantsFullScreenPresentation);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*PASExtensionManifestBuilder.wantsFullScreenPresentation.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id PASExtensionManifestBuilder.build()()
{
  uint64_t v0;
  char *v1;
  char v2;
  char *v3;
  char v4;
  objc_class *v5;
  _BYTE *v6;
  objc_super v8;

  v1 = (char *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_isAccountPickerAvailable);
  swift_beginAccess();
  v2 = *v1;
  v3 = (char *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_wantsFullScreenPresentation);
  swift_beginAccess();
  v4 = *v3;
  v5 = (objc_class *)type metadata accessor for PASExtensionManifest();
  v6 = objc_allocWithZone(v5);
  v6[OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable] = v2;
  v6[OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_wantsFullScreenPresentation] = v4;
  v8.receiver = v6;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, sel_init);
}

id PASExtensionManifestBuilder.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id PASExtensionManifestBuilder.init()()
{
  _BYTE *v0;
  objc_super v2;

  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_isAccountPickerAvailable] = 0;
  v0[OBJC_IVAR____TtC21ProximityAppleIDSetup27PASExtensionManifestBuilder_wantsFullScreenPresentation] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASExtensionManifestBuilder();
  return objc_msgSendSuper2(&v2, sel_init);
}

id PASExtensionManifestBuilder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PASExtensionManifestBuilder();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_21F6C20F4(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  _BYTE *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = v1;
  v5 = (void *)sub_21F7160E0();
  v6 = objc_msgSend(a1, sel_decodeBoolForKey_, v5);

  v4[OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_isAccountPickerAvailable] = v6;
  v7 = (void *)sub_21F7160E0();
  LOBYTE(a1) = objc_msgSend(a1, sel_decodeBoolForKey_, v7);

  v4[OBJC_IVAR____TtC21ProximityAppleIDSetup20PASExtensionManifest_wantsFullScreenPresentation] = (_BYTE)a1;
  v9.receiver = v4;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t type metadata accessor for PASExtensionManifest()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PASExtensionManifestBuilder()
{
  return objc_opt_self();
}

uint64_t PASFlowStepPasscodeBiometricsRequest.__allocating_init(delegate:selectedFamilyMember:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  swift_allocObject();
  v6 = sub_21F6C3BC4(a1, a2, a3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t PASFlowStepPasscodeBiometricsRequest.familyMemberFirstName.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[48];

  sub_21F674A3C(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_selectedFamilyMember, (uint64_t)&v6);
  if (v7[40] != 1)
  {
    sub_21F674A78((uint64_t)&v6);
    return 0;
  }
  v1 = v6;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
  v2 = objc_msgSend(*(id *)(v1 + 16), sel_firstName);
  if (!v2)
  {
    swift_release();
    return 0;
  }
  v3 = v2;
  v4 = sub_21F716104();
  swift_release();

  return v4;
}

uint64_t PASFlowStepPasscodeBiometricsRequest.init(delegate:selectedFamilyMember:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_21F6C3BC4(a1, a2, a3);
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_21F6C2374()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6C238C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  sub_21F656B40((uint64_t)(v0 + 7));
  swift_release();
  v1 = v0[10];
  v2 = v0[11];
  v0[18] = v1;
  v0[19] = v2;
  v0[20] = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v0[21] = *(_QWORD *)(v2 + 16);
  sub_21F7162A8();
  v0[22] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6C243C()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = (void (*)(uint64_t, uint64_t))v0[21];
  v2 = v0[19];
  v3 = v0[18];
  swift_release();
  v1(v3, v2);
  return swift_task_switch();
}

uint64_t sub_21F6C24A4()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v1 = (__int128 *)(v0 + 96);
  if (*(_QWORD *)(v0 + 120))
  {
    sub_21F64756C(v1, v0 + 16);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3) ^ 1;
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }
  else
  {
    sub_21F6476AC((uint64_t)v1, (uint64_t *)&unk_2554DB8A0);
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
    LOBYTE(v4) = 0;
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v4 & 1);
}

uint64_t PASFlowStepPasscodeBiometricsRequest.prepareForPresentation()()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1[2] = v0;
  v1[3] = sub_21F7162A8();
  v1[4] = sub_21F71629C();
  v2 = (_QWORD *)swift_task_alloc();
  v1[5] = v2;
  *v2 = v1;
  v2[1] = sub_21F6C25B4;
  return PASFlowStepBase.prepareForPresentation()();
}

uint64_t sub_21F6C25B4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_21F716248();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    v2[7] = v3;
    *v3 = v2;
    v3[1] = sub_21F6C2664;
    v3[17] = v2[2];
  }
  return swift_task_switch();
}

uint64_t sub_21F6C2664(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6C26DC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 64);
  swift_release();
  if (v1 == 1)
  {
    v2 = swift_allocObject();
    swift_weakInit();
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v3 = 0xD00000000000004ELL;
    *(_QWORD *)(v3 + 8) = 0x800000021F7293E0;
    *(_QWORD *)(v3 + 16) = &unk_2554E07B0;
    *(_QWORD *)(v3 + 24) = v2;
    *(_BYTE *)(v3 + 32) = 0;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6C27A8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  sub_21F7162A8();
  *(_QWORD *)(v1 + 48) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6C2814()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result;
    v3 = *(void **)(Strong + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result);
    *(_QWORD *)v2 = 1;
    v4 = *(_BYTE *)(v2 + 8);
    *(_BYTE *)(v2 + 8) = 0;
    sub_21F674A0C(v3, v4);
    PASFlowStepBase.setFinished()();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PASFlowStepPasscodeBiometricsRequest.requestSetup()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  return swift_task_switch();
}

uint64_t sub_21F6C28B8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *, uint64_t, uint64_t);

  if (qword_2554DA718 != -1)
    swift_once();
  v1 = sub_21F715F3C();
  v0[15] = __swift_project_value_buffer(v1, (uint64_t)static PASLogger.common);
  v2 = sub_21F715F24();
  v3 = sub_21F716350();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_21F63C000, v2, v3, "PASFlowStepPasscodeBiometricsRequest requestSetup", v4, 2u);
    MEMORY[0x2207CC514](v4, -1, -1);
  }

  swift_retain();
  sub_21F656B08((uint64_t)(v0 + 2));
  swift_release();
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v9 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  v0[16] = v7;
  *v7 = v0;
  v7[1] = sub_21F6C2A20;
  return v9(v0 + 7, v5, v6);
}

uint64_t sub_21F6C2A20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_21F6C2A84()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = v0[10];
  __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  v2 = sub_21F640C2C(MEMORY[0x24BEE4AF8]);
  v0[18] = v2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[19] = v3;
  *v3 = v0;
  v3[1] = sub_21F6C2B34;
  return sub_21F64B604((uint64_t)(v0 + 22), 0, 0, 0, 1, v2, v1, MEMORY[0x24BEE1328]);
}

uint64_t sub_21F6C2B34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_21F6C2BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;

  v1 = *(unsigned __int8 *)(v0 + 176);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  v2 = *(_QWORD *)(v0 + 112) + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result;
  v3 = *(void **)v2;
  *(_QWORD *)v2 = v1;
  v4 = *(_BYTE *)(v2 + 8);
  *(_BYTE *)(v2 + 8) = 0;
  sub_21F674A0C(v3, v4);
  sub_21F7162A8();
  *(_QWORD *)(v0 + 168) = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6C2C44()
{
  uint64_t v0;

  swift_release();
  PASFlowStepBase.setFinished()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6C2C7C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v15;

  v1 = (void *)v0[17];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v15 = v7;
    v0[12] = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    v0[13] = sub_21F644208(v9, v10, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepPasscodeBiometricsRequest requestSetup failed:\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);
  }
  else
  {

  }
  v11 = v0[14] + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result;
  v12 = *(void **)v11;
  *(_QWORD *)v11 = v1;
  v13 = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(v11 + 8) = 1;
  sub_21F674A0C(v12, v13);
  sub_21F7162A8();
  v0[21] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint64_t sub_21F6C2E84()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v15;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 7));
  v1 = (void *)v0[20];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  v2 = v1;
  v3 = v1;
  v4 = sub_21F715F24();
  v5 = sub_21F71635C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v15 = v7;
    v0[12] = v1;
    v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
    v9 = sub_21F716128();
    v0[13] = sub_21F644208(v9, v10, &v15);
    sub_21F716428();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_21F63C000, v4, v5, "PASFlowStepPasscodeBiometricsRequest requestSetup failed:\n%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2207CC514](v7, -1, -1);
    MEMORY[0x2207CC514](v6, -1, -1);
  }
  else
  {

  }
  v11 = v0[14] + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result;
  v12 = *(void **)v11;
  *(_QWORD *)v11 = v1;
  v13 = *(_BYTE *)(v11 + 8);
  *(_BYTE *)(v11 + 8) = 1;
  sub_21F674A0C(v12, v13);
  sub_21F7162A8();
  v0[21] = sub_21F71629C();
  sub_21F716248();
  return swift_task_switch();
}

uint8_t *PASFlowStepPasscodeBiometricsRequest.nextStep()()
{
  uint8_t *v0;
  void **v1;
  int v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12[6];
  char v13;
  uint64_t v14;
  uint8_t *v16;

  v1 = (void **)&v0[OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result];
  v2 = v0[OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result + 8];
  if (v2 == 255)
  {
    sub_21F658AF4();
    swift_allocError();
    *(_QWORD *)v10 = 0xD000000000000032;
    *(_QWORD *)(v10 + 8) = 0x800000021F729430;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 1;
    swift_willThrow();
  }
  else
  {
    v3 = *v1;
    v12[5] = (uint64_t)*v1;
    v13 = v2 & 1;
    sub_21F674A3C((uint64_t)&v0[OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_selectedFamilyMember], (uint64_t)&v14);
    if ((v2 & 1) == 0)
      __asm { BR              X10 }
    sub_21F674A30(v3, 1);
    sub_21F674A30(v3, 1);
    if (qword_2554DA718 != -1)
      swift_once();
    v4 = sub_21F715F3C();
    v0 = (uint8_t *)__swift_project_value_buffer(v4, (uint64_t)static PASLogger.common);
    sub_21F674A30(v3, 1);
    sub_21F674A30(v3, 1);
    v5 = sub_21F715F24();
    v6 = sub_21F71635C();
    if (os_log_type_enabled(v5, v6))
    {
      v0 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v12[0] = v7;
      *(_DWORD *)v0 = 136446210;
      v16 = v0 + 4;
      sub_21F674A30(v3, 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554DAF00);
      v8 = sub_21F716128();
      sub_21F644208(v8, v9, v12);
      sub_21F716428();
      swift_bridgeObjectRelease();
      sub_21F674A0C(v3, v2);
      sub_21F674A0C(v3, v2);
      _os_log_impl(&dword_21F63C000, v5, v6, "PASFlowStepPasscodeBiometricsRequest failed with error:\n%{public}s", v0, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2207CC514](v7, -1, -1);
      MEMORY[0x2207CC514](v0, -1, -1);
    }
    else
    {
      sub_21F674A0C(v3, v2);
      sub_21F674A0C(v3, v2);
    }

    swift_willThrow();
    sub_21F674A0C(v3, v2);
    sub_21F674A78((uint64_t)&v14);
  }
  return v0;
}

void PASFlowStepPasscodeBiometricsRequest.__allocating_init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void PASFlowStepPasscodeBiometricsRequest.init(delegate:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_21F6C3A18()
{
  uint64_t v0;

  swift_release();
  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_selectedFamilyMember);
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result + 8));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t PASFlowStepPasscodeBiometricsRequest.deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_selectedFamilyMember);
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result + 8));
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t PASFlowStepPasscodeBiometricsRequest.__deallocating_deinit()
{
  uint64_t v0;

  v0 = PASSourceFlowStepBase.deinit();
  swift_release();
  sub_21F674A78(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_selectedFamilyMember);
  sub_21F674A0C(*(void **)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result), *(_BYTE *)(v0 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result + 8));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint8_t *sub_21F6C3BB0()
{
  return PASFlowStepPasscodeBiometricsRequest.nextStep()();
}

uint64_t sub_21F6C3BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v3 + v7) = v8;
  v9 = v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_result;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = -1;
  v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest__messageSessionProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7E0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v3 + v10) = v11;
  v12 = OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v3 + v12) = v13;
  v14 = OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest__featureFlagsProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA780);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_QWORD *)(v15 + 48) = 0;
  *(_QWORD *)(v3 + v14) = v15;
  sub_21F674A3C(a3, v3 + OBJC_IVAR____TtC21ProximityAppleIDSetup36PASFlowStepPasscodeBiometricsRequest_selectedFamilyMember);
  v16 = sub_21F6BC954(a1, a2);
  sub_21F674A78(a3);
  return v16;
}

uint64_t sub_21F6C3CF8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21F6C3D1C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_21F651418;
  return sub_21F6C27A8(v0);
}

uint64_t sub_21F6C3D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[5];

  v22[3] = type metadata accessor for PASExtensionAuthController();
  v22[4] = &off_24E457998;
  v22[0] = a3;
  v10 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__deviceProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DE720);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(a5 + v10) = v11;
  v12 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__anisetteDataProvider;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE700);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(a5 + v12) = v13;
  v14 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__accountStore;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DA7D0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_QWORD *)(v15 + 48) = 0;
  *(_QWORD *)(a5 + v14) = v15;
  v16 = OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication__accountProvider;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2554DA7C8);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(a5 + v16) = v17;
  v18 = a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_account;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_QWORD *)(v18 + 32) = 0;
  v19 = a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authControllerResult;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_QWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 40) = 1;
  sub_21F647710((uint64_t)v22, a5 + OBJC_IVAR____TtC21ProximityAppleIDSetup31PASFlowStepSourceAuthentication_authController);
  swift_beginAccess();
  swift_retain();
  sub_21F69AB84(a4, v18);
  swift_endAccess();
  swift_release();
  v20 = sub_21F6BC954(a1, a2);
  sub_21F6476AC(a4, &qword_2554DEF00);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  return v20;
}

uint64_t sub_21F6C3F18(uint64_t a1)
{
  uint64_t result;

  result = sub_21F647438(&qword_2554DC6A0, (uint64_t (*)(uint64_t))type metadata accessor for PASFlowStepPasscodeBiometricsRequest, (uint64_t)&protocol conformance descriptor for PASSourceFlowStepBase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PASFlowStepPasscodeBiometricsRequest()
{
  uint64_t result;

  result = qword_2554E0848;
  if (!qword_2554E0848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21F6C3F90()
{
  return type metadata accessor for PASFlowStepPasscodeBiometricsRequest();
}

uint64_t sub_21F6C3F98()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_21F6C3FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_21F6C4010()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (*(uint64_t *)(v0 + 32) < 1)
  {
    if (qword_2554DA718 != -1)
      swift_once();
    v6 = sub_21F715F3C();
    __swift_project_value_buffer(v6, (uint64_t)static PASLogger.common);
    v7 = sub_21F715F24();
    v8 = sub_21F71635C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_21F63C000, v7, v8, "PASExtensionAuthenticator authenticate with contextProvider maximum authentication attempts reached", v9, 2u);
      MEMORY[0x2207CC514](v9, -1, -1);
    }

    sub_21F6C4610();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 40);
    v2 = (void *)(*(uint64_t (**)(void))(v0 + 16))();
    *(_QWORD *)(v0 + 48) = v2;
    objc_msgSend(v2, sel_setAuthenticationType_, 1);
    v3 = *(_QWORD *)(v1 + 16);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v4;
    *v4 = v0;
    v4[1] = sub_21F6C4184;
    return sub_21F696564(v3, (uint64_t)v2);
  }
}

uint64_t sub_21F6C4184(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6C41F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_21F6C4234()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v20;

  v1 = *(void **)(v0 + 64);

  v2 = v1;
  v3 = (void *)sub_21F715D44();
  v4 = objc_msgSend(v3, sel_domain);
  v5 = sub_21F716104();
  v7 = v6;

  if (v5 == 0xD000000000000022 && v7 == 0x800000021F726A60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_21F716800();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      v20 = *(void **)(v0 + 64);

      goto LABEL_12;
    }
  }
  v9 = *(void **)(v0 + 64);
  v10 = objc_msgSend(v3, sel_code);

  if (v10 != (id)3200)
  {
LABEL_12:
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_2554DA718 != -1)
    swift_once();
  v11 = sub_21F715F3C();
  __swift_project_value_buffer(v11, (uint64_t)static PASLogger.common);
  v12 = sub_21F715F24();
  v13 = sub_21F716344();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_21F63C000, v12, v13, "PASExtensionAuthenticator authenticate with contextProvider extension asked for authentication re-try", v14, 2u);
    MEMORY[0x2207CC514](v14, -1, -1);
  }
  v15 = *(_QWORD *)(v0 + 32);

  v16 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v16;
  *(_QWORD *)v16 = v0;
  *(_QWORD *)(v16 + 8) = sub_21F6C446C;
  v17 = *(_QWORD *)(v0 + 40);
  v18 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v16 + 32) = v15 - 1;
  *(_QWORD *)(v16 + 40) = v17;
  *(_OWORD *)(v16 + 16) = v18;
  return swift_task_switch();
}

uint64_t sub_21F6C446C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_21F6C44E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_21F6C4518()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_21F6C454C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PASExtensionAuthController()
{
  return objc_opt_self();
}

uint64_t sub_21F6C4598(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_21F6514BC;
  v7[4] = 10;
  v7[5] = v6;
  v7[2] = a1;
  v7[3] = a2;
  return swift_task_switch();
}

unint64_t sub_21F6C4610()
{
  unint64_t result;

  result = qword_2554E0B90;
  if (!qword_2554E0B90)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71F564, &type metadata for PASExtensionAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E0B90);
  }
  return result;
}

unint64_t sub_21F6C4654()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000045;
  *(_QWORD *)(inited + 56) = 0x800000021F729560;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6C46DC()
{
  return 0xD000000000000045;
}

uint64_t sub_21F6C46F8()
{
  sub_21F6C481C();
  return sub_21F7168C0();
}

uint64_t sub_21F6C4720()
{
  sub_21F6C481C();
  return sub_21F7168B4();
}

uint64_t storeEnumTagSinglePayload for PASExtensionAuthControllerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_21F6C4788 + 4 * byte_21F71F3A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_21F6C47A8 + 4 * byte_21F71F3A5[v4]))();
}

_BYTE *sub_21F6C4788(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_21F6C47A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6C47B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6C47B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_21F6C47C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_21F6C47C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PASExtensionAuthControllerError()
{
  return &type metadata for PASExtensionAuthControllerError;
}

unint64_t sub_21F6C47E8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_21F6C481C();
  a1[2] = sub_21F6C4860();
  result = sub_21F6C48A4();
  a1[3] = result;
  return result;
}

unint64_t sub_21F6C481C()
{
  unint64_t result;

  result = qword_2554E0B98;
  if (!qword_2554E0B98)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71F4A0, &type metadata for PASExtensionAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E0B98);
  }
  return result;
}

unint64_t sub_21F6C4860()
{
  unint64_t result;

  result = qword_2554E0BA0;
  if (!qword_2554E0BA0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71F458, &type metadata for PASExtensionAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E0BA0);
  }
  return result;
}

unint64_t sub_21F6C48A4()
{
  unint64_t result;

  result = qword_2554E0BA8;
  if (!qword_2554E0BA8)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71F430, &type metadata for PASExtensionAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E0BA8);
  }
  return result;
}

unint64_t sub_21F6C48EC()
{
  unint64_t result;

  result = qword_2554E0BB0;
  if (!qword_2554E0BB0)
  {
    result = MEMORY[0x2207CC46C](&unk_21F71F53C, &type metadata for PASExtensionAuthControllerError);
    atomic_store(result, (unint64_t *)&qword_2554E0BB0);
  }
  return result;
}

uint64_t sub_21F6C4930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a1;
  v1 = sub_21F715DE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v24 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21F715E4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21F715E58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0BB8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554DFE40);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21F715E40();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCF220], v4);
  sub_21F715E34();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = sub_21F715C6C();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18) == 1)
  {
    sub_21F6476AC((uint64_t)v14, &qword_2554E0BB8);
    v20 = 1;
  }
  else
  {
    sub_21F715C60();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
    v20 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v17, v20, 1, v1);
  v21 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v24, v26, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v17, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v25, v21, v1);
    return sub_21F6476AC((uint64_t)v17, &qword_2554DFE40);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v21, v1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 32))(v25, v17, v1);
  }
}

uint64_t sub_21F6C4BDC(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v32 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v33 = (unint64_t)(v4 + 63) >> 6;
  v35 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v34 = v3;
      v8 = v7 | (v3 << 6);
      goto LABEL_25;
    }
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v9 >= v33)
      return 1;
    v10 = *(_QWORD *)(v32 + 8 * v9);
    v11 = v3 + 1;
    if (!v10)
    {
      v11 = v3 + 2;
      if (v3 + 2 >= v33)
        return 1;
      v10 = *(_QWORD *)(v32 + 8 * v11);
      if (!v10)
      {
        v11 = v3 + 3;
        if (v3 + 3 >= v33)
          return 1;
        v10 = *(_QWORD *)(v32 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_24:
    v6 = (v10 - 1) & v10;
    v34 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_25:
    v13 = result;
    v14 = *(void **)(*(_QWORD *)(result + 48) + 8 * v8);
    sub_21F716104();
    sub_21F716920();
    v15 = v14;
    sub_21F716134();
    v16 = sub_21F716968();
    swift_bridgeObjectRelease();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_40;
    v19 = sub_21F716104();
    v21 = v20;
    if (v19 == sub_21F716104() && v21 == v22)
    {
LABEL_7:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v24 = sub_21F716800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        v25 = ~v17;
        while (1)
        {
          v18 = (v18 + 1) & v25;
          if (((*(_QWORD *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
            break;
          v26 = sub_21F716104();
          v28 = v27;
          if (v26 == sub_21F716104() && v28 == v29)
            goto LABEL_7;
          v31 = sub_21F716800();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
            goto LABEL_8;
        }
LABEL_40:

        return 0;
      }
    }
LABEL_8:

    result = v13;
    v3 = v34;
  }
  v12 = v3 + 4;
  if (v3 + 4 >= v33)
    return 1;
  v10 = *(_QWORD *)(v32 + 8 * v12);
  if (v10)
  {
    v11 = v3 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v33)
      return 1;
    v10 = *(_QWORD *)(v32 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_24;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_21F6C4EEC(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v2 = 0;
  v28 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v29 = (unint64_t)(v3 + 63) >> 6;
  v30 = result;
  while (1)
  {
    if (v5)
    {
      v31 = (v5 - 1) & v5;
      v32 = v2;
      v6 = __clz(__rbit64(v5)) | (v2 << 6);
      goto LABEL_22;
    }
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v7 >= v29)
      return 1;
    v8 = *(_QWORD *)(v28 + 8 * v7);
    v9 = v2 + 1;
    if (!v8)
    {
      v9 = v7 + 1;
      if (v7 + 1 >= v29)
        return 1;
      v8 = *(_QWORD *)(v28 + 8 * v9);
      if (!v8)
      {
        v9 = v7 + 2;
        if (v7 + 2 >= v29)
          return 1;
        v8 = *(_QWORD *)(v28 + 8 * v9);
        if (!v8)
          break;
      }
    }
LABEL_21:
    v31 = (v8 - 1) & v8;
    v32 = v9;
    v6 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
    v11 = *(void **)(*(_QWORD *)(result + 48) + 8 * v6);
    v12 = *(_QWORD *)(result + 56) + 48 * v6;
    v14 = *(_QWORD *)v12;
    v13 = *(_QWORD *)(v12 + 8);
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v12 + 24);
    v17 = *(_QWORD *)(v12 + 32);
    v18 = *(_BYTE *)(v12 + 40);
    v19 = *(_BYTE *)(v12 + 41);
    v20 = v11;
    v33 = v15;
    v21 = v15;
    v22 = v17;
    v23 = v17;
    v24 = v18;
    sub_21F67C38C(v14, v13, v21, v16, v23, v18, v19);
    sub_21F644858((uint64_t)v20);
    v26 = v25;

    if ((v26 & 1) == 0)
    {
      sub_21F67C41C(v14, v13, v33, v16, v22, v24, v19);
      return 0;
    }
    sub_21F6CDF5C();
    sub_21F6CDF14();
    v27 = sub_21F716998();
    sub_21F67C41C(v14, v13, v33, v16, v22, v24, v19);
    result = v30;
    v5 = v31;
    v2 = v32;
    if ((v27 & 1) == 0)
      return 0;
  }
  v10 = v7 + 3;
  if (v10 >= v29)
    return 1;
  v8 = *(_QWORD *)(v28 + 8 * v10);
  if (v8)
  {
    v9 = v10;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v9 >= v29)
      return 1;
    v8 = *(_QWORD *)(v28 + 8 * v9);
    ++v10;
    if (v8)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t V1Command.Request.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _BYTE v30[208];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[32];
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[3];

  sub_21F676AA4(v1, (uint64_t)v30);
  v3 = sub_21F677BE0((uint64_t)v30);
  if (!v3)
  {
    sub_21F677BEC((uint64_t)v30);
    sub_21F71692C();
    sub_21F716938();
    sub_21F716938();
    return sub_21F716938();
  }
  if (v3 != 1)
  {
    v21 = sub_21F677BEC((uint64_t)v30);
    v22 = *(_OWORD *)(v21 + 144);
    v39 = *(_OWORD *)(v21 + 128);
    *(_OWORD *)v40 = v22;
    *(_OWORD *)&v40[16] = *(_OWORD *)(v21 + 160);
    v23 = *(_OWORD *)(v21 + 80);
    v35 = *(_OWORD *)(v21 + 64);
    v36 = v23;
    v24 = *(_OWORD *)(v21 + 112);
    v37 = *(_OWORD *)(v21 + 96);
    v38 = v24;
    v25 = *(_OWORD *)(v21 + 16);
    v31 = *(_OWORD *)v21;
    v32 = v25;
    v26 = *(_OWORD *)(v21 + 48);
    v33 = *(_OWORD *)(v21 + 32);
    v34 = v26;
    v27 = *(_QWORD *)(v21 + 176);
    v28 = *(_QWORD *)(v21 + 184);
    sub_21F71692C();
    v50 = v39;
    v51[0] = *(_OWORD *)v40;
    *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)&v40[9];
    v46 = v35;
    v47 = v36;
    v48 = v37;
    v49 = v38;
    v42 = v31;
    v43 = v32;
    v44 = v33;
    v45 = v34;
    sub_21F669DBC((uint64_t)&v42);
    IdMSAccount.hash(into:)(a1);
    sub_21F669EA8((uint64_t)&v42);
    if (v28)
    {
      sub_21F716938();
      sub_21F6C9564(v27, v28);
      sub_21F6C9564(v27, v28);
      swift_bridgeObjectRetain();
      sub_21F716134();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_21F716134();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return sub_21F676840(v27, v28);
    }
    return sub_21F716938();
  }
  v4 = sub_21F677BEC((uint64_t)v30);
  v5 = *(_OWORD *)(v4 + 144);
  v39 = *(_OWORD *)(v4 + 128);
  *(_OWORD *)v40 = v5;
  *(_OWORD *)&v40[16] = *(_OWORD *)(v4 + 160);
  v6 = *(_OWORD *)(v4 + 80);
  v35 = *(_OWORD *)(v4 + 64);
  v36 = v6;
  v7 = *(_OWORD *)(v4 + 112);
  v37 = *(_OWORD *)(v4 + 96);
  v38 = v7;
  v8 = *(_OWORD *)(v4 + 16);
  v31 = *(_OWORD *)v4;
  v32 = v8;
  v9 = *(_OWORD *)(v4 + 48);
  v33 = *(_OWORD *)(v4 + 32);
  v34 = v9;
  v10 = *(_QWORD *)(v4 + 176);
  sub_21F71692C();
  v50 = v39;
  v51[0] = *(_OWORD *)v40;
  *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)&v40[9];
  v46 = v35;
  v47 = v36;
  v48 = v37;
  v49 = v38;
  v42 = v31;
  v43 = v32;
  v44 = v33;
  v45 = v34;
  sub_21F669DBC((uint64_t)&v42);
  IdMSAccount.hash(into:)(a1);
  sub_21F669EA8((uint64_t)&v42);
  v29[1] = v29;
  v41 = v10;
  v11 = v10 + 64;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v10 + 64);
  sub_21F67A800((uint64_t)&v41);
  result = sub_21F67A800((uint64_t)&v41);
  v16 = 0;
  v17 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v14 &= v14 - 1;
      goto LABEL_7;
    }
    v18 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v17)
      goto LABEL_28;
    v19 = *(_QWORD *)(v11 + 8 * v18);
    ++v16;
    if (!v19)
    {
      v16 = v18 + 1;
      if (v18 + 1 >= v17)
        goto LABEL_28;
      v19 = *(_QWORD *)(v11 + 8 * v16);
      if (!v19)
      {
        v16 = v18 + 2;
        if (v18 + 2 >= v17)
          goto LABEL_28;
        v19 = *(_QWORD *)(v11 + 8 * v16);
        if (!v19)
        {
          v16 = v18 + 3;
          if (v18 + 3 >= v17)
            goto LABEL_28;
          v19 = *(_QWORD *)(v11 + 8 * v16);
          if (!v19)
            break;
        }
      }
    }
LABEL_24:
    v14 = (v19 - 1) & v19;
LABEL_7:
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_21F716134();
    objc_opt_self();
    swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    sub_21F7163F8();
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease_n();
  }
  v20 = v18 + 4;
  if (v20 >= v17)
  {
LABEL_28:
    swift_release();
    return sub_21F678B38((uint64_t)&v41);
  }
  v19 = *(_QWORD *)(v11 + 8 * v20);
  if (v19)
  {
    v16 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    v16 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v16 >= v17)
      goto LABEL_28;
    v19 = *(_QWORD *)(v11 + 8 * v16);
    ++v20;
    if (v19)
      goto LABEL_24;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21F6C5600(char a1)
{
  return *(_QWORD *)&aHandshaksignin[8 * a1];
}

uint64_t sub_21F6C5620()
{
  sub_21F6C95D8();
  return sub_21F7169E0();
}

uint64_t sub_21F6C5648()
{
  sub_21F6C95D8();
  return sub_21F7169EC();
}

uint64_t sub_21F6C5670()
{
  char *v0;

  return sub_21F6C5600(*v0);
}

uint64_t sub_21F6C5678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6CB76C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6C569C()
{
  sub_21F6C9594();
  return sub_21F7169E0();
}

uint64_t sub_21F6C56C4()
{
  sub_21F6C9594();
  return sub_21F7169EC();
}

uint64_t sub_21F6C56EC()
{
  sub_21F6C96A4();
  return sub_21F7169E0();
}

uint64_t sub_21F6C5714()
{
  sub_21F6C96A4();
  return sub_21F7169EC();
}

uint64_t sub_21F6C573C()
{
  sub_21F6C9660();
  return sub_21F7169E0();
}

uint64_t sub_21F6C5764()
{
  sub_21F6C9660();
  return sub_21F7169EC();
}

uint64_t V1Command.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[208];
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int16 v86;
  char v87;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0BC0);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0BC8);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0BD0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0BD8);
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6C9594();
  v44 = v14;
  sub_21F7169C8();
  sub_21F676AA4(v2, (uint64_t)v60);
  v15 = sub_21F677BE0((uint64_t)v60);
  if (v15)
  {
    if (v15 == 1)
    {
      v16 = sub_21F677BEC((uint64_t)v60);
      v17 = *(_OWORD *)(v16 + 144);
      v69 = *(_OWORD *)(v16 + 128);
      v70 = v17;
      v71 = *(_OWORD *)(v16 + 160);
      v72 = *(_QWORD *)(v16 + 176);
      v18 = *(_OWORD *)(v16 + 80);
      v65 = *(_OWORD *)(v16 + 64);
      v66 = v18;
      v19 = *(_OWORD *)(v16 + 112);
      v67 = *(_OWORD *)(v16 + 96);
      v68 = v19;
      v20 = *(_OWORD *)(v16 + 16);
      v61 = *(_OWORD *)v16;
      v62 = v20;
      v21 = *(_OWORD *)(v16 + 48);
      v63 = *(_OWORD *)(v16 + 32);
      v64 = v21;
      LOBYTE(v47) = 1;
      sub_21F6C9660();
      v22 = v38;
      v23 = v46;
      v24 = v44;
      sub_21F716704();
      v55 = v69;
      v56 = v70;
      v57 = v71;
      *(_QWORD *)&v58 = v72;
      v51 = v65;
      v52 = v66;
      v53 = v67;
      v54 = v68;
      v47 = v61;
      v48 = v62;
      v49 = v63;
      v50 = v64;
      sub_21F67B6AC();
      v25 = v40;
      sub_21F716758();
      v26 = v39;
    }
    else
    {
      v31 = (__int128 *)sub_21F677BEC((uint64_t)v60);
      v32 = v31[11];
      v83 = v31[10];
      v84 = v32;
      v85 = v31[12];
      v33 = v31[7];
      v79 = v31[6];
      v80 = v33;
      v34 = v31[9];
      v81 = v31[8];
      v82 = v34;
      v35 = v31[3];
      v75 = v31[2];
      v76 = v35;
      v36 = v31[5];
      v77 = v31[4];
      v78 = v36;
      v37 = v31[1];
      v73 = *v31;
      v74 = v37;
      LOBYTE(v47) = 2;
      sub_21F6C95D8();
      v22 = v41;
      v23 = v46;
      v24 = v44;
      sub_21F716704();
      v57 = v83;
      v58 = v84;
      v59 = v85;
      v53 = v79;
      v54 = v80;
      v55 = v81;
      v56 = v82;
      v49 = v75;
      v50 = v76;
      v51 = v77;
      v52 = v78;
      v47 = v73;
      v48 = v74;
      sub_21F6C961C();
      v25 = v43;
      sub_21F716758();
      v26 = v42;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v24, v23);
  }
  else
  {
    v27 = sub_21F677BEC((uint64_t)v60);
    v86 = *(_WORD *)v27;
    v87 = *(_BYTE *)(v27 + 2);
    LOBYTE(v47) = 0;
    sub_21F6C96A4();
    v28 = v46;
    v29 = v44;
    sub_21F716704();
    LOWORD(v47) = v86;
    BYTE2(v47) = v87;
    sub_21F678128();
    sub_21F716758();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v29, v28);
  }
}

uint64_t V1Command.Request.hashValue.getter()
{
  _BYTE v1[72];

  sub_21F716920();
  V1Command.Request.hash(into:)((uint64_t)v1);
  return sub_21F716968();
}

_QWORD *V1Command.Request.init(from:)@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6C7320((_QWORD *(*)(_QWORD *__return_ptr))sub_21F6CAF38, (uint64_t (*)(_QWORD *, uint64_t))sub_21F676AA4, a1);
}

_QWORD *sub_21F6C5C2C@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6C7394((_QWORD *(*)(_QWORD *__return_ptr))sub_21F6CAF38, (uint64_t (*)(_QWORD *, uint64_t))sub_21F676AA4, a1);
}

uint64_t sub_21F6C5C50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v4;

  sub_21F676AA4(v1, (uint64_t)&v4);
  return V1Command.Request.encode(to:)(a1);
}

uint64_t sub_21F6C5C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6C7444(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_21F676AA4, (uint64_t (*)(_BYTE *, _BYTE *))_s21ProximityAppleIDSetup9V1CommandO7RequestO21__derived_enum_equalsySbAE_AEtFZ_0);
}

uint64_t sub_21F6C5CB0()
{
  uint64_t v0;
  _BYTE v2[72];
  _BYTE v3[208];

  sub_21F676AA4(v0, (uint64_t)v3);
  sub_21F716920();
  V1Command.Request.hash(into:)((uint64_t)v2);
  return sub_21F716968();
}

uint64_t sub_21F6C5CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;

  sub_21F676AA4(v1, (uint64_t)&v4);
  return V1Command.Request.hash(into:)(a1);
}

uint64_t sub_21F6C5D38()
{
  uint64_t v0;
  _BYTE v2[72];
  _BYTE v3[208];

  sub_21F676AA4(v0, (uint64_t)v3);
  sub_21F716920();
  V1Command.Request.hash(into:)((uint64_t)v2);
  return sub_21F716968();
}

uint64_t V1Command.Response.hash(into:)(uint64_t a1)
{
  __int128 *v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  __int128 *v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[48];
  _BYTE v12[184];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];
  __int128 v23;
  _OWORD v24[8];
  _OWORD v25[2];

  sub_21F677BA4(v1, (uint64_t)v12);
  v3 = sub_21F677BE0((uint64_t)v12);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = sub_21F677BEC((uint64_t)v12);
      v20 = *(_OWORD *)(v4 + 112);
      v21 = *(_OWORD *)(v4 + 128);
      v22[0] = *(_OWORD *)(v4 + 144);
      v22[1] = *(_OWORD *)(v4 + 160);
      v16 = *(_OWORD *)(v4 + 48);
      v17 = *(_OWORD *)(v4 + 64);
      v18 = *(_OWORD *)(v4 + 80);
      v19 = *(_OWORD *)(v4 + 96);
      v13 = *(_OWORD *)v4;
      v14 = *(_OWORD *)(v4 + 16);
      v15 = *(_OWORD *)(v4 + 32);
      v5 = *(_QWORD *)(v4 + 176);
      sub_21F71692C();
      v24[6] = v20;
      v24[7] = v21;
      v25[0] = v22[0];
      *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v22 + 9);
      v24[3] = v17;
      v24[4] = v18;
      v24[5] = v19;
      v23 = v13;
      v24[0] = v14;
      v24[1] = v15;
      v24[2] = v16;
      sub_21F669DBC((uint64_t)&v23);
      IdMSAccount.hash(into:)(a1);
      sub_21F669EA8((uint64_t)&v23);
      swift_bridgeObjectRetain();
      sub_21F67A230(a1, v5);
      return swift_bridgeObjectRelease();
    }
    else
    {
      v8 = (__int128 *)sub_21F677BEC((uint64_t)v12);
      v9 = *(__int128 *)((char *)v8 + 26);
      v10 = v8[1];
      v23 = *v8;
      v24[0] = v10;
      *(_OWORD *)((char *)v24 + 10) = v9;
      sub_21F71692C();
      sub_21F6CB580((uint64_t)&v23, (uint64_t)&v13);
      sub_21F6CB580((uint64_t)&v13, (uint64_t)v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C18);
      sub_21F6CB5C8();
      sub_21F67C3D8();
      return sub_21F71698C();
    }
  }
  else
  {
    v7 = *(_BYTE *)(sub_21F677BEC((uint64_t)v12) + 3);
    sub_21F71692C();
    sub_21F716938();
    sub_21F716938();
    if ((v7 & 1) == 0)
      sub_21F716938();
    return sub_21F716938();
  }
}

uint64_t sub_21F6C5F98()
{
  sub_21F6CB65C();
  return sub_21F7169E0();
}

uint64_t sub_21F6C5FC0()
{
  sub_21F6CB65C();
  return sub_21F7169EC();
}

uint64_t sub_21F6C5FE8()
{
  sub_21F6CB60C();
  return sub_21F7169E0();
}

uint64_t sub_21F6C6010()
{
  sub_21F6CB60C();
  return sub_21F7169EC();
}

uint64_t sub_21F6C6038()
{
  sub_21F6CB728();
  return sub_21F7169E0();
}

uint64_t sub_21F6C6060()
{
  sub_21F6CB728();
  return sub_21F7169EC();
}

uint64_t sub_21F6C6088()
{
  sub_21F6CB6E4();
  return sub_21F7169E0();
}

uint64_t sub_21F6C60B0()
{
  sub_21F6CB6E4();
  return sub_21F7169EC();
}

_QWORD *V1Command.Response.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 *v15;
  int v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD v44[2];
  _OWORD v45[11];
  uint64_t v46;
  __int128 v47[11];
  _BYTE v48[184];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  _OWORD v62[2];
  __int128 v63[12];

  v2 = v1;
  sub_21F677BA4(v2, (uint64_t)v47);
  sub_21F677BA4(v47, (uint64_t)v63);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C30);
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C38);
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C40);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C48);
  v41 = *(_QWORD *)(v12 - 8);
  v42 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6CB60C();
  v15 = v2;
  sub_21F7169C8();
  sub_21F677BA4(v2, (uint64_t)v48);
  v16 = sub_21F677BE0((uint64_t)v48);
  if (v16)
  {
    if (v16 == 1)
    {
      v17 = sub_21F677BEC((uint64_t)v48);
      v18 = *(_OWORD *)(v17 + 144);
      v57 = *(_OWORD *)(v17 + 128);
      v58 = v18;
      v59 = *(_OWORD *)(v17 + 160);
      v60 = *(_QWORD *)(v17 + 176);
      v19 = *(_OWORD *)(v17 + 80);
      v53 = *(_OWORD *)(v17 + 64);
      v54 = v19;
      v20 = *(_OWORD *)(v17 + 112);
      v55 = *(_OWORD *)(v17 + 96);
      v56 = v20;
      v21 = *(_OWORD *)(v17 + 16);
      v49 = *(_OWORD *)v17;
      v50 = v21;
      v22 = *(_OWORD *)(v17 + 48);
      v51 = *(_OWORD *)(v17 + 32);
      v52 = v22;
      LOBYTE(v45[0]) = 1;
      sub_21F6CB6E4();
      v23 = v35;
      v24 = v42;
      sub_21F716704();
      v45[8] = v57;
      v45[9] = v58;
      v45[10] = v59;
      v46 = v60;
      v45[4] = v53;
      v45[5] = v54;
      v45[6] = v55;
      v45[7] = v56;
      v45[0] = v49;
      v45[1] = v50;
      v45[2] = v51;
      v45[3] = v52;
      sub_21F67B8AC();
      v25 = v37;
      sub_21F716758();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v25);
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v14, v24);
    }
    else
    {
      v29 = (__int128 *)sub_21F677BEC((uint64_t)v48);
      v30 = v29[1];
      v61 = *v29;
      v62[0] = v30;
      *(_OWORD *)((char *)v62 + 10) = *(__int128 *)((char *)v29 + 26);
      LOBYTE(v43) = 2;
      sub_21F677BA4(v63, (uint64_t)v45);
      v31 = sub_21F677BEC((uint64_t)v45);
      sub_21F6CB650(*(_QWORD *)v31, *(_QWORD *)(v31 + 8), *(_QWORD *)(v31 + 16), *(_QWORD *)(v31 + 24), *(_QWORD *)(v31 + 32), *(_BYTE *)(v31 + 40), *(_BYTE *)(v31 + 41));
      sub_21F6CB65C();
      v32 = v38;
      v33 = v42;
      sub_21F716704();
      v43 = v61;
      v44[0] = v62[0];
      *(_OWORD *)((char *)v44 + 10) = *(_OWORD *)((char *)v62 + 10);
      sub_21F6CB6A0();
      v34 = v40;
      sub_21F716758();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v34);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v33);
      return sub_21F6CBF34(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F676870);
    }
  }
  else
  {
    v27 = *(_DWORD *)sub_21F677BEC((uint64_t)v48);
    LOBYTE(v45[0]) = 0;
    sub_21F6CB728();
    v28 = v42;
    sub_21F716704();
    LODWORD(v45[0]) = v27;
    sub_21F678328();
    sub_21F716758();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v14, v28);
  }
}

uint64_t V1Command.Response.hashValue.getter()
{
  _BYTE v1[72];

  sub_21F716920();
  V1Command.Response.hash(into:)((uint64_t)v1);
  return sub_21F716968();
}

uint64_t V1Command.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[11];

  result = sub_21F6CB8C0(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F677BA4(v5, a2);
  return result;
}

uint64_t sub_21F6C65A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  __int128 v5[11];

  result = sub_21F6CB8C0(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F677BA4(v5, a2);
  return result;
}

_QWORD *sub_21F6C65EC(_QWORD *a1)
{
  __int128 *v1;
  _BYTE v4[184];

  sub_21F677BA4(v1, (uint64_t)v4);
  return V1Command.Response.encode(to:)(a1);
}

uint64_t sub_21F6C6638(__int128 *a1, __int128 *a2)
{
  __int128 v4[11];
  __int128 v5[11];

  sub_21F677BA4(a1, (uint64_t)v4);
  sub_21F677BA4(a2, (uint64_t)v5);
  return _s21ProximityAppleIDSetup9V1CommandO8ResponseO21__derived_enum_equalsySbAE_AEtFZ_0(v4, v5) & 1;
}

uint64_t sub_21F6C6680()
{
  __int128 *v0;
  uint64_t v2;
  _BYTE v3[184];

  sub_21F677BA4(v0, (uint64_t)v3);
  sub_21F716920();
  V1Command.Response.hash(into:)((uint64_t)&v2);
  return sub_21F716968();
}

uint64_t sub_21F6C66CC(uint64_t a1)
{
  __int128 *v1;
  _BYTE v4[184];

  sub_21F677BA4(v1, (uint64_t)v4);
  return V1Command.Response.hash(into:)(a1);
}

uint64_t sub_21F6C6708()
{
  __int128 *v0;
  uint64_t v2;
  _BYTE v3[184];

  sub_21F677BA4(v0, (uint64_t)v3);
  sub_21F716920();
  V1Command.Response.hash(into:)((uint64_t)&v2);
  return sub_21F716968();
}

uint64_t static V1CommandError.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int8x16_t v11;
  uint64_t v12;
  int8x16_t v13;
  int8x16_t v14;
  _QWORD v16[5];
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  _BYTE v24[48];
  _BYTE v25[48];
  _BYTE v26[48];
  uint64_t v27;
  int8x16_t v28;
  int8x16_t v29;
  char v30;

  sub_21F66A620(a1, (uint64_t)&v18);
  v3 = v18;
  if (v23)
  {
    if (v23 == 1)
    {
      sub_21F66A620(v18 + 16, (uint64_t)v26);
      sub_21F66A620(v3 + 64, (uint64_t)v24);
      sub_21F66A620(a2, (uint64_t)v16);
      if (v17 == 1)
      {
        v4 = v16[0];
        sub_21F66A620(v16[0] + 16, (uint64_t)&v27);
        sub_21F66A620(v4 + 64, (uint64_t)v25);
        sub_21F6CBEFC((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
        sub_21F6CBEFC((uint64_t)&v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
        sub_21F6CBEFC((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
        sub_21F6CBEFC((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
        if ((static V1CommandError.__derived_enum_equals(_:_:)(v26, &v27) & 1) != 0)
        {
          v5 = static V1CommandError.__derived_enum_equals(_:_:)(v24, v25);
          sub_21F6CBEFC((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
          sub_21F6CBEFC((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
          sub_21F6CBEFC((uint64_t)&v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
          sub_21F6CBEFC((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
          return v5 & 1;
        }
        sub_21F6CBEFC((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
        sub_21F6CBEFC((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
        sub_21F6CBEFC((uint64_t)&v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
        sub_21F6CBEFC((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
      }
      goto LABEL_34;
    }
    if (v21 | v22 | v18 | v20 | v19)
    {
      v12 = v21 | v22 | v20 | v19;
      if (v18 != 1 || v12)
      {
        if (v18 != 2 || v12)
        {
          sub_21F66A620(a2, (uint64_t)&v27);
          if (v30 != 2 || v27 != 3)
            goto LABEL_34;
        }
        else
        {
          sub_21F66A620(a2, (uint64_t)&v27);
          if (v30 != 2 || v27 != 2)
            goto LABEL_34;
        }
      }
      else
      {
        sub_21F66A620(a2, (uint64_t)&v27);
        if (v30 != 2 || v27 != 1)
          goto LABEL_34;
      }
      v14 = vorrq_s8(v28, v29);
      if (vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL)))
      {
LABEL_34:
        v5 = 0;
        return v5 & 1;
      }
    }
    else
    {
      sub_21F66A620(a2, (uint64_t)&v27);
      if (v30 != 2)
        goto LABEL_34;
      v13 = vorrq_s8(v28, v29);
      if (*(_QWORD *)&vorr_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL)) | v27)
        goto LABEL_34;
    }
LABEL_33:
    v5 = 1;
    return v5 & 1;
  }
  v6 = v19;
  v7 = v20;
  v8 = v21;
  v9 = v22;
  sub_21F66A620(a2, (uint64_t)&v27);
  if (v30)
    goto LABEL_34;
  v10 = v28.i64[1];
  v11 = v29;
  if (v3 == v27 && v6 == v28.i64[0])
  {
    if (v7 != v28.i64[1])
      goto LABEL_34;
    goto LABEL_28;
  }
  v5 = 0;
  if ((sub_21F716800() & 1) != 0 && v7 == v10)
  {
LABEL_28:
    if (__PAIR128__(v9, v8) != *(_OWORD *)&v11)
    {
      v5 = sub_21F716800();
      return v5 & 1;
    }
    goto LABEL_33;
  }
  return v5 & 1;
}

uint64_t V1Command.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  int v3;
  __int128 *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[208];
  _BYTE v11[208];
  _BYTE v12[208];
  _BYTE v13[184];
  _BYTE v14[208];

  sub_21F676AA4(v1, (uint64_t)v10);
  sub_21F676AA4((uint64_t)v10, (uint64_t)v14);
  sub_21F676AA4(v1, (uint64_t)v11);
  v3 = sub_21F677B88((uint64_t)v11);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = (__int128 *)sub_21F677B94((uint64_t)v11);
      sub_21F677BA4(v4, (uint64_t)v13);
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v14, (uint64_t)v12);
      v5 = (_QWORD *)sub_21F677B94((uint64_t)v12);
      sub_21F6CBF34(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6CBFA0);
      V1Command.Response.hash(into:)(a1);
    }
    else
    {
      v8 = sub_21F677B94((uint64_t)v11);
      sub_21F66A620(v8, (uint64_t)v13);
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v14, (uint64_t)v12);
      v9 = sub_21F677B94((uint64_t)v12);
      sub_21F67C398(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_BYTE *)(v9 + 40));
      V1CommandError.hash(into:)(a1);
    }
    return sub_21F6D07BC(v1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
  }
  else
  {
    v6 = sub_21F677B94((uint64_t)v11);
    sub_21F676AA4(v6, (uint64_t)v12);
    sub_21F71692C();
    return V1Command.Request.hash(into:)(a1);
  }
}

uint64_t sub_21F6C6BE8(char a1)
{
  return *(_QWORD *)&aRequest_4[8 * a1];
}

uint64_t sub_21F6C6C08()
{
  char *v0;

  return sub_21F6C6BE8(*v0);
}

uint64_t sub_21F6C6C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6CC2A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6C6C34()
{
  sub_21F6CC108();
  return sub_21F7169E0();
}

uint64_t sub_21F6C6C5C()
{
  sub_21F6CC108();
  return sub_21F7169EC();
}

uint64_t sub_21F6C6C84()
{
  sub_21F6CC14C();
  return sub_21F7169E0();
}

uint64_t sub_21F6C6CAC()
{
  sub_21F6CC14C();
  return sub_21F7169EC();
}

uint64_t sub_21F6C6CD4()
{
  sub_21F6CC218();
  return sub_21F7169E0();
}

uint64_t sub_21F6C6CFC()
{
  sub_21F6CC218();
  return sub_21F7169EC();
}

uint64_t sub_21F6C6D24()
{
  sub_21F6CC190();
  return sub_21F7169E0();
}

uint64_t sub_21F6C6D4C()
{
  sub_21F6CC190();
  return sub_21F7169EC();
}

uint64_t V1Command.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _BYTE v39[184];
  _BYTE v40[208];
  _BYTE v41[208];
  _BYTE v42[208];
  _BYTE v43[208];
  __int128 v44[11];
  _BYTE v45[48];
  _BYTE v46[216];

  v2 = v1;
  sub_21F676AA4(v2, (uint64_t)v41);
  sub_21F676AA4((uint64_t)v41, (uint64_t)v46);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C88);
  v31 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C90);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0C98);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0CA0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6CC108();
  v14 = v2;
  sub_21F7169C8();
  sub_21F676AA4(v2, (uint64_t)v42);
  v15 = sub_21F677B88((uint64_t)v42);
  if (v15)
  {
    v16 = v11;
    if (v15 == 1)
    {
      v17 = (__int128 *)sub_21F677B94((uint64_t)v42);
      sub_21F677BA4(v17, (uint64_t)v44);
      v39[0] = 1;
      sub_21F676AA4((uint64_t)v46, (uint64_t)v40);
      v18 = (_QWORD *)sub_21F677B94((uint64_t)v40);
      sub_21F6CBF34(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6CBFA0);
      sub_21F6CC190();
      v19 = v34;
      v20 = v10;
      sub_21F716704();
      sub_21F677BA4(v44, (uint64_t)v39);
      sub_21F6CC1D4();
      v21 = v36;
      sub_21F716758();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v21);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
    }
    else
    {
      v25 = sub_21F677B94((uint64_t)v42);
      sub_21F66A620(v25, (uint64_t)v45);
      v39[0] = 2;
      sub_21F676AA4((uint64_t)v46, (uint64_t)v40);
      v26 = sub_21F677B94((uint64_t)v40);
      sub_21F67C398(*(_QWORD *)v26, *(_QWORD *)(v26 + 8), *(_QWORD *)(v26 + 16), *(_QWORD *)(v26 + 24), *(_QWORD *)(v26 + 32), *(_BYTE *)(v26 + 40));
      sub_21F6CC14C();
      v27 = v37;
      v28 = v10;
      sub_21F716704();
      sub_21F66A620((uint64_t)v45, (uint64_t)v39);
      sub_21F67B0A0();
      v29 = v38;
      sub_21F716758();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v29);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v28);
    }
    return sub_21F6D07BC(v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
  }
  else
  {
    v22 = sub_21F677B94((uint64_t)v42);
    sub_21F676AA4(v22, (uint64_t)v43);
    v40[0] = 0;
    sub_21F6CC218();
    sub_21F716704();
    sub_21F676AA4((uint64_t)v43, (uint64_t)v40);
    sub_21F6CC25C();
    v23 = v33;
    sub_21F716758();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t V1Command.hashValue.getter()
{
  uint64_t v0;
  int v1;
  __int128 *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[72];
  _BYTE v9[208];
  _BYTE v10[208];
  _BYTE v11[208];
  _BYTE v12[184];
  _BYTE v13[208];

  sub_21F676AA4(v0, (uint64_t)v9);
  sub_21F676AA4((uint64_t)v9, (uint64_t)v13);
  sub_21F716920();
  sub_21F676AA4(v0, (uint64_t)v10);
  v1 = sub_21F677B88((uint64_t)v10);
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = (__int128 *)sub_21F677B94((uint64_t)v10);
      sub_21F677BA4(v2, (uint64_t)v12);
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v13, (uint64_t)v11);
      v3 = (_QWORD *)sub_21F677B94((uint64_t)v11);
      sub_21F6CBF34(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6CBFA0);
      V1Command.Response.hash(into:)((uint64_t)v8);
    }
    else
    {
      v5 = sub_21F677B94((uint64_t)v10);
      sub_21F66A620(v5, (uint64_t)v12);
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v13, (uint64_t)v11);
      v6 = sub_21F677B94((uint64_t)v11);
      sub_21F67C398(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_BYTE *)(v6 + 40));
      V1CommandError.hash(into:)((uint64_t)v8);
    }
    sub_21F6D07BC(v0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
  }
  else
  {
    v4 = sub_21F677B94((uint64_t)v10);
    sub_21F676AA4(v4, (uint64_t)v11);
    sub_21F71692C();
    V1Command.Request.hash(into:)((uint64_t)v8);
  }
  return sub_21F716968();
}

_QWORD *V1Command.init(from:)@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6C7320((_QWORD *(*)(_QWORD *__return_ptr))sub_21F6CC3E4, (uint64_t (*)(_QWORD *, uint64_t))sub_21F676AFC, a1);
}

_QWORD *sub_21F6C7320@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X1>, uint64_t (*a2)(_QWORD *, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  _QWORD v7[26];

  result = a1(v7);
  if (!v3)
    return (_QWORD *)a2(v7, a3);
  return result;
}

_QWORD *sub_21F6C7370@<X0>(uint64_t a1@<X8>)
{
  return sub_21F6C7394((_QWORD *(*)(_QWORD *__return_ptr))sub_21F6CC3E4, (uint64_t (*)(_QWORD *, uint64_t))sub_21F676AFC, a1);
}

_QWORD *sub_21F6C7394@<X0>(_QWORD *(*a1)(_QWORD *__return_ptr)@<X3>, uint64_t (*a2)(_QWORD *, uint64_t)@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  _QWORD v7[26];

  result = a1(v7);
  if (!v3)
    return (_QWORD *)a2(v7, a3);
  return result;
}

uint64_t sub_21F6C73E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v4;

  sub_21F676AA4(v1, (uint64_t)&v4);
  return V1Command.encode(to:)(a1);
}

uint64_t sub_21F6C7430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21F6C7444(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_21F676AFC, (uint64_t (*)(_BYTE *, _BYTE *))_s21ProximityAppleIDSetup9V1CommandO21__derived_enum_equalsySbAC_ACtFZ_0);
}

uint64_t sub_21F6C7444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _BYTE *), uint64_t (*a6)(_BYTE *, _BYTE *))
{
  _BYTE v10[208];
  _BYTE v11[208];

  a5(a1, v10);
  a5(a2, v11);
  return a6(v10, v11) & 1;
}

uint64_t sub_21F6C749C()
{
  uint64_t v0;
  uint64_t v2;

  sub_21F676AA4(v0, (uint64_t)&v2);
  return V1Command.hashValue.getter();
}

uint64_t sub_21F6C74D0(uint64_t a1)
{
  uint64_t v1;
  int v3;
  __int128 *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  _BYTE v13[208];
  _OWORD v14[2];
  uint64_t v15;
  char v16;
  _BYTE v17[208];
  _BYTE v18[208];

  sub_21F676AA4(v1, (uint64_t)v17);
  sub_21F676AA4((uint64_t)v17, (uint64_t)v18);
  v3 = sub_21F677B88((uint64_t)v18);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = (__int128 *)sub_21F677B94((uint64_t)v18);
      sub_21F677BA4(v4, (uint64_t)v14);
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v17, (uint64_t)v13);
      v5 = (_QWORD *)sub_21F677B94((uint64_t)v13);
      sub_21F6CBF34(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6CBFA0);
      V1Command.Response.hash(into:)(a1);
    }
    else
    {
      v8 = sub_21F677B94((uint64_t)v18);
      v9 = *(_QWORD *)(v8 + 32);
      v10 = *(_BYTE *)(v8 + 40);
      v11 = *(_OWORD *)(v8 + 16);
      v14[0] = *(_OWORD *)v8;
      v14[1] = v11;
      v15 = v9;
      v16 = v10;
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v17, (uint64_t)v13);
      v12 = sub_21F677B94((uint64_t)v13);
      sub_21F67C398(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_BYTE *)(v12 + 40));
      V1CommandError.hash(into:)(a1);
    }
    return sub_21F6D07BC((uint64_t)v17, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
  }
  else
  {
    v6 = sub_21F677B94((uint64_t)v18);
    sub_21F676AA4(v6, (uint64_t)v13);
    sub_21F71692C();
    return V1Command.Request.hash(into:)(a1);
  }
}

uint64_t sub_21F6C7624()
{
  uint64_t v0;
  int v1;
  __int128 *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v11[72];
  _BYTE v12[208];
  _OWORD v13[2];
  uint64_t v14;
  char v15;
  _BYTE v16[208];
  _BYTE v17[208];

  sub_21F676AA4(v0, (uint64_t)v16);
  sub_21F716920();
  sub_21F676AA4((uint64_t)v16, (uint64_t)v17);
  v1 = sub_21F677B88((uint64_t)v17);
  if (v1)
  {
    if (v1 == 1)
    {
      v2 = (__int128 *)sub_21F677B94((uint64_t)v17);
      sub_21F677BA4(v2, (uint64_t)v13);
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v16, (uint64_t)v12);
      v3 = (_QWORD *)sub_21F677B94((uint64_t)v12);
      sub_21F6CBF34(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6CBFA0);
      V1Command.Response.hash(into:)((uint64_t)v11);
    }
    else
    {
      v5 = sub_21F677B94((uint64_t)v17);
      v6 = *(_QWORD *)(v5 + 32);
      v7 = *(_BYTE *)(v5 + 40);
      v8 = *(_OWORD *)(v5 + 16);
      v13[0] = *(_OWORD *)v5;
      v13[1] = v8;
      v14 = v6;
      v15 = v7;
      sub_21F71692C();
      sub_21F676AA4((uint64_t)v16, (uint64_t)v12);
      v9 = sub_21F677B94((uint64_t)v12);
      sub_21F67C398(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_BYTE *)(v9 + 40));
      V1CommandError.hash(into:)((uint64_t)v11);
    }
    sub_21F6D07BC((uint64_t)v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F67667C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_21F676870, (uint64_t (*)(void))sub_21F6769E4);
  }
  else
  {
    v4 = sub_21F677B94((uint64_t)v17);
    sub_21F676AA4(v4, (uint64_t)v12);
    sub_21F71692C();
    V1Command.Request.hash(into:)((uint64_t)v11);
  }
  return sub_21F716968();
}

unint64_t V1CommandError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v13[6];
  _QWORD v14[6];

  sub_21F66A620(v0, (uint64_t)&v7);
  v1 = v7;
  if (v12)
  {
    if (v12 == 1)
    {
      sub_21F66A620(v7 + 16, (uint64_t)v14);
      sub_21F66A620(v1 + 64, (uint64_t)v13);
      sub_21F6CBEFC((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
      sub_21F6CBEFC((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
      sub_21F7164E8();
      v2 = sub_21F716140();
      V1CommandError.description.getter(v2);
      sub_21F716140();
      swift_bridgeObjectRelease();
      v3 = sub_21F716140();
      V1CommandError.description.getter(v3);
      sub_21F716140();
      swift_bridgeObjectRelease();
      sub_21F6CBEFC((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
      sub_21F6CBEFC((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
      return 0;
    }
    else
    {
      result = 0xD00000000000001ELL;
      if (v10 | v11 | v7 | v9 | v8)
      {
        v6 = v10 | v11 | v9 | v8;
        if ((v7 != 1 || v6) && v7 == 2 && v6 == 0)
          return 0xD00000000000001FLL;
      }
      else
      {
        return 0xD000000000000014;
      }
    }
  }
  else
  {
    v5 = v9;
    v14[0] = 0;
    v14[1] = 0xE000000000000000;
    sub_21F7164E8();
    sub_21F716140();
    sub_21F716140();
    sub_21F716140();
    v13[0] = v5;
    sub_21F7167A0();
    sub_21F716140();
    swift_bridgeObjectRelease();
    sub_21F716140();
    sub_21F716140();
    return v14[0];
  }
  return result;
}

uint64_t V1CommandError.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  char v6;
  _BYTE v7[48];
  _BYTE v8[48];

  sub_21F66A620(v1, (uint64_t)&v5);
  v3 = v5;
  if (v6)
  {
    if (v6 == 1)
    {
      sub_21F66A620(v5 + 16, (uint64_t)v8);
      sub_21F66A620(v3 + 64, (uint64_t)v7);
      sub_21F71692C();
      sub_21F6CBEFC((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
      sub_21F6CBEFC((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F67C398);
      V1CommandError.hash(into:)(a1);
      V1CommandError.hash(into:)(a1);
      sub_21F6CBEFC((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
      return sub_21F6CBEFC((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21F6769E4);
    }
    else
    {
      return sub_21F71692C();
    }
  }
  else
  {
    sub_21F71692C();
    sub_21F716134();
    sub_21F71692C();
    return sub_21F716134();
  }
}

uint64_t sub_21F6C7BB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_21F6C7BF0 + 4 * byte_21F71F5B0[a1]))(0xD000000000000011, 0x800000021F7296A0);
}

uint64_t sub_21F6C7BF0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_21F6C7C08()
{
  return 0x636972656E6567;
}

uint64_t sub_21F6C7C20()
{
  return 0x64657473656ELL;
}

uint64_t sub_21F6C7C34(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_21F6C7C58(char a1)
{
  return *(_QWORD *)&aDomain_1[8 * a1];
}

uint64_t sub_21F6C7C78(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_21F6C7C90()
{
  unsigned __int8 *v0;

  return sub_21F6C7BB8(*v0);
}

uint64_t sub_21F6C7C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6CCBCC(a1, a2);
  *a3 = result;
  return result;
}

void sub_21F6C7CBC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_21F6C7CC8()
{
  sub_21F6CC9F0();
  return sub_21F7169E0();
}

uint64_t sub_21F6C7CF0()
{
  sub_21F6CC9F0();
  return sub_21F7169EC();
}

uint64_t sub_21F6C7D18()
{
  char *v0;

  return sub_21F6C7C58(*v0);
}

uint64_t sub_21F6C7D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6CCE14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6C7D44()
{
  sub_21F6CCB44();
  return sub_21F7169E0();
}

uint64_t sub_21F6C7D6C()
{
  sub_21F6CCB44();
  return sub_21F7169EC();
}

uint64_t sub_21F6C7D94()
{
  char *v0;

  return sub_21F6C7C78(*v0);
}

uint64_t sub_21F6C7D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_21F6CCF50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_21F6C7DC0()
{
  sub_21F6CCB00();
  return sub_21F7169E0();
}

uint64_t sub_21F6C7DE8()
{
  sub_21F6CCB00();
  return sub_21F7169EC();
}

uint64_t sub_21F6C7E10()
{
  sub_21F6CCA34();
  return sub_21F7169E0();
}

uint64_t sub_21F6C7E38()
{
  sub_21F6CCA34();
  return sub_21F7169EC();
}

uint64_t sub_21F6C7E60()
{
  sub_21F6CCABC();
  return sub_21F7169E0();
}

uint64_t sub_21F6C7E88()
{
  sub_21F6CCABC();
  return sub_21F7169EC();
}

uint64_t sub_21F6C7EB0()
{
  sub_21F6CCA78();
  return sub_21F7169E0();
}

uint64_t sub_21F6C7ED8()
{
  sub_21F6CCA78();
  return sub_21F7169EC();
}

uint64_t sub_21F6C7F00()
{
  sub_21F6CCB88();
  return sub_21F7169E0();
}

uint64_t sub_21F6C7F28()
{
  sub_21F6CCB88();
  return sub_21F7169EC();
}

uint64_t V1CommandError.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, _QWORD);
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0CE0);
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v58 = (uint64_t)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0CE8);
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v55 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0CF0);
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0CF8);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v65 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0D00);
  v7 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0D08);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2554E0D10);
  v68 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_21F6CC9F0();
  v71 = v15;
  sub_21F7169C8();
  sub_21F66A620(v70, (uint64_t)&v79);
  if (v84)
  {
    if (v84 == 1)
    {
      v16 = *(_QWORD *)(v79 + 24);
      v70 = *(_QWORD *)(v79 + 16);
      v55 = (char *)v16;
      v18 = *(_QWORD *)(v79 + 32);
      v17 = *(_QWORD *)(v79 + 40);
      v19 = *(_QWORD *)(v79 + 48);
      LODWORD(v59) = *(unsigned __int8 *)(v79 + 56);
      v21 = *(_QWORD *)(v79 + 64);
      v20 = *(_QWORD *)(v79 + 72);
      v23 = *(_QWORD *)(v79 + 80);
      v22 = *(_QWORD *)(v79 + 88);
      v24 = *(_QWORD *)(v79 + 96);
      v25 = *(unsigned __int8 *)(v79 + 104);
      LOBYTE(v73) = 2;
      v26 = v19;
      sub_21F67C398(v70, v16, v18, v17, v19, v59);
      v60 = v21;
      v61 = v20;
      v62 = v23;
      v63 = v22;
      v58 = v24;
      LODWORD(v64) = v25;
      sub_21F67C398(v21, v20, v23, v22, v24, v25);
      sub_21F6CCB00();
      v27 = v65;
      sub_21F716704();
      v28 = (uint64_t)v55;
      v73 = v70;
      v74 = (uint64_t)v55;
      v56 = v18;
      v75 = v18;
      v76 = v17;
      v29 = v59;
      v57 = v17;
      v77 = v26;
      v78 = v59;
      v85 = 0;
      sub_21F67B0A0();
      v30 = v67;
      v31 = v69;
      sub_21F716758();
      if (v31)
      {
        sub_21F6769E4(v60, v61, v62, v63, v58, v64);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v30);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v71, v72);
        v32 = v70;
        v33 = v28;
        v34 = v56;
        v35 = v57;
        v36 = v26;
        v37 = v29;
      }
      else
      {
        v50 = v70;
        v73 = v60;
        v74 = v61;
        v75 = v62;
        v76 = v63;
        v51 = v58;
        v77 = v58;
        v78 = v64;
        v85 = 1;
        sub_21F716758();
        sub_21F6769E4(v50, v28, v56, v57, v26, v59);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v27, v30);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v71, v72);
        v32 = v60;
        v33 = v61;
        v34 = v62;
        v35 = v63;
        v36 = v51;
        v37 = v64;
      }
      return sub_21F6769E4(v32, v33, v34, v35, v36, v37);
    }
    else
    {
      v43 = v71;
      v44 = v72;
      if (v82 | v83 | v79 | v81 | v80)
      {
        v45 = v82 | v83 | v81 | v80;
        if (v79 != 1 || v45)
        {
          if (v79 != 2 || v45)
          {
            LOBYTE(v73) = 5;
            sub_21F6CCA34();
            v53 = v58;
            sub_21F716704();
            v47 = *(void (**)(uint64_t, _QWORD))(v59 + 8);
            v48 = v53;
            v49 = &v87;
          }
          else
          {
            LOBYTE(v73) = 4;
            sub_21F6CCA78();
            v52 = v55;
            sub_21F716704();
            v47 = *(void (**)(uint64_t, _QWORD))(v56 + 8);
            v48 = (uint64_t)v52;
            v49 = &v86;
          }
        }
        else
        {
          LOBYTE(v73) = 3;
          sub_21F6CCABC();
          v46 = v61;
          sub_21F716704();
          v47 = *(void (**)(uint64_t, _QWORD))(v62 + 8);
          v48 = v46;
          v49 = &v88;
        }
        v47(v48, *(v49 - 32));
      }
      else
      {
        LOBYTE(v73) = 0;
        sub_21F6CCB88();
        sub_21F716704();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v43, v44);
    }
  }
  else
  {
    v70 = v81;
    LOBYTE(v73) = 1;
    sub_21F6CCB44();
    v39 = v71;
    v38 = v72;
    sub_21F716704();
    LOBYTE(v73) = 0;
    v40 = v64;
    v41 = v69;
    sub_21F716734();
    if (v41)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v39, v38);
    }
    else
    {
      LOBYTE(v73) = 1;
      sub_21F71674C();
      LOBYTE(v73) = 2;
      sub_21F716734();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v71, v72);
    }
  }
}

uint64_t V1CommandError.hashValue.getter()
{
  _BYTE v1[72];

  sub_21F716920();
  V1CommandError.hash(into:)((uint64_t)v1);
  return sub_21F716968();
}

uint64_t V1CommandError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v5[48];

  result = sub_21F6CD008(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F66A620((uint64_t)v5, a2);
  return result;
}

unint64_t sub_21F6C8774()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _BYTE v6[48];

  sub_21F66A620(v0, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2554DE6F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_21F717EF0;
  *(_QWORD *)(inited + 32) = sub_21F716104();
  *(_QWORD *)(inited + 40) = v2;
  v3 = V1CommandError.description.getter();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  return sub_21F6409B8(inited);
}

unint64_t sub_21F6C87F8()
{
  uint64_t v0;
  uint64_t v2;

  sub_21F66A620(v0, (uint64_t)&v2);
  return V1CommandError.description.getter();
}

uint64_t sub_21F6C882C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _BYTE v5[48];

  result = sub_21F6CD008(a1, (uint64_t)v5);
  if (!v2)
    return sub_21F66A620((uint64_t)v5, a2);
  return result;
}

uint64_t sub_21F6C8870(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v4;

  sub_21F66A620(v1, (uint64_t)&v4);
  return V1CommandError.encode(to:)(a1);
}

uint64_t sub_21F6C88BC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[48];
  _BYTE v5[48];

  sub_21F66A620(a1, (uint64_t)v4);
  sub_21F66A620(a2, (uint64_t)v5);
  return static V1CommandError.__derived_enum_equals(_:_:)((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_21F6C8904()
{
  uint64_t v0;
  _BYTE v2[72];
  _BYTE v3[48];

  sub_21F66A620(v0, (uint64_t)v3);
  sub_21F716920();
  V1CommandError.hash(into:)((uint64_t)v2);
  return sub_21F716968();
}

uint64_t sub_21F6C8950(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;

  sub_21F66A620(v1, (uint64_t)&v4);
  return V1CommandError.hash(into:)(a1);
}

uint64_t sub_21F6C898C()
{
  uint64_t v0;
  _BYTE v2[72];
  _BYTE v3[48];

  sub_21F66A620(v0, (uint64_t)v3);
  sub_21F716920();
  V1CommandError.hash(into:)((uint64_t)v2);
  return sub_21F716968();
}

uint64_t sub_21F6C89DC()
{
  sub_21F6CDE28();
  return sub_21F7168C0();
}

uint64_t sub_21F6C8A04()
{
  sub_21F6CDE28();
  return sub_21F7168B4();
}

void Error.into()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_21F7167C4();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v8, v3, a1);
  }
  v9 = (void *)sub_21F715D44();

  v10 = objc_msgSend(v9, sel_domain);
  v11 = sub_21F716104();
  v13 = v12;

  v14 = objc_msgSend(v9, sel_code);
  v15 = objc_msgSend(v9, sel_description);
  v16 = sub_21F716104();
  v18 = v17;

  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v18;
  *(_BYTE *)(a2 + 40) = 0;
}

BOOL _s21ProximityAppleIDSetup9V1CommandO7RequestO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  char v21;
  int v22;
  int v23;
  unsigned __int8 *v24;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int8x16_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int8x16_t v55;
  unint64_t v56;
  unint64_t v57;
  int8x16_t v58;
  char v59;
  void *v60;
  void *v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  int8x16_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE v78[208];
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _BYTE v88[32];
  _BYTE v89[208];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[32];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  _OWORD v109[2];
  _OWORD v110[5];
  __int128 v111[2];
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  _OWORD v121[2];
  _OWORD v122[5];
  __int128 v123[2];
  int8x16_t v124;
  int8x16_t v125;
  char v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  char v131;

  sub_21F676AA4(a1, (uint64_t)v89);
  v3 = sub_21F677BE0((uint64_t)v89);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = (__int128 *)sub_21F677BEC((uint64_t)v89);
      v5 = v4[9];
      v98 = v4[8];
      *(_OWORD *)v99 = v5;
      *(_OWORD *)&v99[16] = v4[10];
      v6 = v4[5];
      v94 = v4[4];
      v95 = v6;
      v7 = v4[7];
      v96 = v4[6];
      v97 = v7;
      v8 = v4[1];
      v90 = *v4;
      v91 = v8;
      v9 = v4[3];
      v92 = v4[2];
      v93 = v9;
      sub_21F676AA4(a2, (uint64_t)v78);
      if (sub_21F677BE0((uint64_t)v78) != 1)
        return 0;
      v10 = (__int128 *)sub_21F677BEC((uint64_t)v78);
      v11 = v10[9];
      v87 = v10[8];
      *(_OWORD *)v88 = v11;
      *(_OWORD *)&v88[16] = v10[10];
      v12 = v10[5];
      v83 = v10[4];
      v84 = v12;
      v13 = v10[7];
      v85 = v10[6];
      v86 = v13;
      v14 = v10[1];
      v79 = *v10;
      v80 = v14;
      v15 = v10[3];
      v81 = v10[2];
      v82 = v15;
      v100 = v90;
      v101 = v91;
      v102 = v92;
      v103 = v93;
      v104 = v94;
      v105 = v95;
      v106 = v96;
      v107 = v97;
      v108 = v98;
      v109[0] = *(_OWORD *)v99;
      *(_OWORD *)((char *)v109 + 9) = *(_OWORD *)&v99[9];
      v120 = v87;
      v121[0] = *(_OWORD *)v88;
      *(_OWORD *)((char *)v121 + 9) = *(_OWORD *)&v88[9];
      v116 = v83;
      v117 = v84;
      v119 = v86;
      v118 = v85;
      v112 = v79;
      v113 = v14;
      v115 = v15;
      v114 = v81;
      v16 = v91;
      v17 = v92;
      v18 = v14;
      v19 = v81;
      if (v90 != v79 && (sub_21F716800() & 1) == 0)
        return 0;
      if (*((_QWORD *)&v16 + 1))
      {
        if (!*((_QWORD *)&v18 + 1) || v16 != v18 && (sub_21F716800() & 1) == 0)
          return 0;
      }
      else if (*((_QWORD *)&v18 + 1))
      {
        return 0;
      }
      if (*((_QWORD *)&v17 + 1))
      {
        if (!*((_QWORD *)&v19 + 1) || v17 != v19 && (sub_21F716800() & 1) == 0)
          return 0;
      }
      else if (*((_QWORD *)&v19 + 1))
      {
        return 0;
      }
      sub_21F65EF28(&v103, (uint64_t)v111);
      sub_21F65EF28(&v115, (uint64_t)v123);
      sub_21F65EF28(v111, (uint64_t)&v127);
      if (v131)
      {
        if (v131 == 1)
        {
          v46 = v127;
          v47 = v128;
          v48 = v129;
          v49 = v130;
          sub_21F65EF28(v123, (uint64_t)&v124);
          if (v126 != 1)
            return 0;
          v50 = v125;
          if (__PAIR128__(v47, v46) != *(_OWORD *)&v124 && (sub_21F716800() & 1) == 0)
            return 0;
          if (__PAIR128__(v49, v48) != *(_OWORD *)&v50)
          {
LABEL_53:
            if ((sub_21F716800() & 1) == 0)
              return 0;
          }
        }
        else
        {
          sub_21F65EF28(v123, (uint64_t)&v124);
          if (v126 != 2)
            return 0;
          v58 = vorrq_s8(v124, v125);
          if (vorr_s8(*(int8x8_t *)v58.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v58, v58, 8uLL)))
            return 0;
        }
LABEL_57:
        if ((sub_21F6C4BDC(*((uint64_t *)&v105 + 1), *((uint64_t *)&v117 + 1)) & 1) == 0)
          return 0;
        sub_21F65EF00(&v106, v110);
        sub_21F65EF00(&v118, v122);
        _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v110);
        if ((v59 & 1) == 0)
          return 0;
        sub_21F67C664();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2554DC320);
        v60 = (void *)sub_21F71602C();
        v61 = (void *)sub_21F71602C();
        v62 = sub_21F7163EC();

        return (v62 & 1) != 0;
      }
      v56 = v127;
      v57 = v128;
      sub_21F65EF28(v123, (uint64_t)&v124);
      if (!v126)
      {
        if (__PAIR128__(v57, v56) != *(_OWORD *)&v124)
          goto LABEL_53;
        goto LABEL_57;
      }
      return 0;
    }
    v26 = sub_21F677BEC((uint64_t)v89);
    v27 = *(_OWORD *)(v26 + 144);
    v98 = *(_OWORD *)(v26 + 128);
    *(_OWORD *)v99 = v27;
    *(_OWORD *)&v99[16] = *(_OWORD *)(v26 + 160);
    v28 = *(_OWORD *)(v26 + 80);
    v94 = *(_OWORD *)(v26 + 64);
    v95 = v28;
    v29 = *(_OWORD *)(v26 + 112);
    v96 = *(_OWORD *)(v26 + 96);
    v97 = v29;
    v30 = *(_OWORD *)(v26 + 16);
    v90 = *(_OWORD *)v26;
    v91 = v30;
    v31 = *(_OWORD *)(v26 + 48);
    v92 = *(_OWORD *)(v26 + 32);
    v93 = v31;
    v33 = *(_QWORD *)(v26 + 176);
    v32 = *(_QWORD *)(v26 + 184);
    v35 = *(_QWORD *)(v26 + 192);
    v34 = *(_QWORD *)(v26 + 200);
    sub_21F676AA4(a2, (uint64_t)v78);
    if (sub_21F677BE0((uint64_t)v78) != 2)
      return 0;
    v76 = v35;
    v77 = v34;
    v36 = sub_21F677BEC((uint64_t)v78);
    v37 = *(_OWORD *)(v36 + 144);
    v87 = *(_OWORD *)(v36 + 128);
    *(_OWORD *)v88 = v37;
    *(_OWORD *)&v88[16] = *(_OWORD *)(v36 + 160);
    v38 = *(_OWORD *)(v36 + 80);
    v83 = *(_OWORD *)(v36 + 64);
    v84 = v38;
    v39 = *(_OWORD *)(v36 + 112);
    v85 = *(_OWORD *)(v36 + 96);
    v86 = v39;
    v40 = *(_OWORD *)(v36 + 16);
    v79 = *(_OWORD *)v36;
    v80 = v40;
    v41 = *(_OWORD *)(v36 + 48);
    v81 = *(_OWORD *)(v36 + 32);
    v82 = v41;
    v72 = *(_QWORD *)(v36 + 192);
    v73 = *(_QWORD *)(v36 + 176);
    v74 = *(_QWORD *)(v36 + 200);
    v75 = *(_QWORD *)(v36 + 184);
    v100 = v90;
    v101 = v91;
    v102 = v92;
    v103 = v93;
    v104 = v94;
    v105 = v95;
    v106 = v96;
    v107 = v97;
    v108 = v98;
    v109[0] = *(_OWORD *)v99;
    *(_OWORD *)((char *)v109 + 9) = *(_OWORD *)&v99[9];
    v120 = v87;
    v121[0] = *(_OWORD *)v88;
    *(_OWORD *)((char *)v121 + 9) = *(_OWORD *)&v88[9];
    v116 = v83;
    v117 = v84;
    v119 = v86;
    v118 = v85;
    v112 = v79;
    v113 = v40;
    v115 = v41;
    v114 = v81;
    v42 = v91;
    v43 = v92;
    v44 = v40;
    v45 = v81;
    if (v90 != v79 && (sub_21F716800() & 1) == 0)
      return 0;
    if (*((_QWORD *)&v42 + 1))
    {
      if (!*((_QWORD *)&v44 + 1) || v42 != v44 && (sub_21F716800() & 1) == 0)
        return 0;
    }
    else if (*((_QWORD *)&v44 + 1))
    {
      return 0;
    }
    if (*((_QWORD *)&v43 + 1))
    {
      if (!*((_QWORD *)&v45 + 1) || v43 != v45 && (sub_21F716800() & 1) == 0)
        return 0;
    }
    else if (*((_QWORD *)&v45 + 1))
    {
      return 0;
    }
    sub_21F65EF28(&v103, (uint64_t)v111);
    sub_21F65EF28(&v115, (uint64_t)v123);
    sub_21F65EF28(v111, (uint64_t)&v127);
    if (v131)
    {
      if (v131 != 1)
      {
        sub_21F65EF28(v123, (uint64_t)&v124);
        if (v126 != 2)
          return 0;
        v65 = vorrq_s8(v124, v125);
        if (vorr_s8(*(int8x8_t *)v65.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v65, v65, 8uLL)))
          return 0;
        goto LABEL_67;
      }
      v51 = v127;
      v52 = v128;
      v53 = v129;
      v54 = v130;
      sub_21F65EF28(v123, (uint64_t)&v124);
      if (v126 != 1)
        return 0;
      v55 = v125;
      if (__PAIR128__(v52, v51) != *(_OWORD *)&v124 && (sub_21F716800() & 1) == 0)
        return 0;
      if (__PAIR128__(v54, v53) != *(_OWORD *)&v55)
        goto LABEL_63;
    }
    else
    {
      v63 = v127;
      v64 = v128;
      sub_21F65EF28(v123, (uint64_t)&v124);
      if (v126)
        return 0;
      if (__PAIR128__(v64, v63) != *(_OWORD *)&v124)
      {
LABEL_63:
        if ((sub_21F716800() & 1) == 0)
          return 0;
      }
    }
LABEL_67:
    if ((sub_21F6C4BDC(*((uint64_t *)&v105 + 1), *((uint64_t *)&v117 + 1)) & 1) == 0)
      return 0;
    sub_21F65EF00(&v106, v110);
    sub_21F65EF00(&v118, v122);
    _s21ProximityAppleIDSetup11IdMSAccountV10CredentialO21__derived_enum_equalsySbAE_AEtFZ_0(v110);
    if ((v66 & 1) == 0)
      return 0;
    if (v32)
    {
      v67 = v75;
      v68 = v73;
      if (v75)
      {
        if (v33 == v73 && v32 == v75 || (sub_21F716800() & 1) != 0)
        {
          if (v76 == v72 && v77 == v74)
          {
            sub_21F6C9564(v33, v32);
            sub_21F6C9564(v33, v32);
            sub_21F6C9564(v73, v75);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21F676840(v33, v32);
          }
          else
          {
            v71 = sub_21F716800();
            sub_21F6C9564(v33, v32);
            sub_21F6C9564(v33, v32);
            sub_21F6C9564(v73, v75);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_21F676840(v33, v32);
            if ((v71 & 1) == 0)
              return 0;
          }
          return 1;
        }
        sub_21F6C9564(v33, v32);
        sub_21F6C9564(v33, v32);
        sub_21F6C9564(v73, v75);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v69 = v33;
        v70 = v32;
LABEL_79:
        sub_21F676840(v69, v70);
        return 0;
      }
    }
    else
    {
      v67 = v75;
      v68 = v73;
      if (!v75)
        return 1;
    }
    sub_21F6C9564(v33, v32);
    sub_21F6C9564(v68, v67);
    sub_21F676840(v33, v32);
    v69 = v68;
    v70 = v67;
    goto LABEL_79;
  }
  v20 = (char *)sub_21F677BEC((uint64_t)v89);
  v21 = *v20;
  v22 = v20[1];
  v23 = v20[2];
  sub_21F676AA4(a2, (uint64_t)v78);
  if (sub_21F677BE0((uint64_t)v78))
    return 0;
  v24 = (unsigned __int8 *)sub_21F677BEC((uint64_t)v78);
  if (v23 == v24[2])
    return (((v21 & 1) == 0) ^ *v24) & (v22 == v24[1]);
  else
    return 0;
}

