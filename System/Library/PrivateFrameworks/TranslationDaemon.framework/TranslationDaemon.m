void sub_2491BB4C8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void _LTSendErrorEvent(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("%@.%@"), CFSTR("com.apple.translation"), CFSTR("Error"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v4;
    v7 = v3;
    AnalyticsSendEventLazy();

  }
}

void _LTAnalyticsSendOptionalErrorEvent(void *a1, void *a2)
{
  if (a1)
    _LTSendErrorEvent(a1, a2);
}

void sub_2491BC884(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2491BCD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_2491BD190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = MEMORY[0x2495AE9CC](*(_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

{

}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_2491BE008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a12);
  va_start(va, a12);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

CFStringRef VSCreate4CCString(unsigned int a1)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  char __str;
  int v8;
  __int16 v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v2 = bswap32(a1);
  v8 = v2;
  if ((v2 & 0x80) != 0)
  {
    if (!__maskrune((char)v2, 0x40000uLL))
      goto LABEL_17;
  }
  else if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * (char)v2 + 60) & 0x40000) == 0)
  {
    goto LABEL_17;
  }
  v3 = (__int16)v2 >> 8;
  if ((v2 & 0x8000) != 0)
  {
    if (!__maskrune(v3, 0x40000uLL))
      goto LABEL_17;
  }
  else if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v3 + 60) & 0x40000) == 0)
  {
    goto LABEL_17;
  }
  v4 = v2 << 8 >> 24;
  if ((v2 & 0x800000) != 0)
  {
    if (!__maskrune(v4, 0x40000uLL))
      goto LABEL_17;
LABEL_13:
    v5 = v2 >> 24;
    if (v2 < 0)
    {
      if (!__maskrune(v5, 0x40000uLL))
        goto LABEL_17;
    }
    else if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v5 + 60) & 0x40000) == 0)
    {
      goto LABEL_17;
    }
    v9 = 39;
    __str = 39;
    return CFStringCreateWithCString(0, &__str, 0x600u);
  }
  if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v4 + 60) & 0x40000) != 0)
    goto LABEL_13;
LABEL_17:
  if (a1 + 199999 > 0x61A7E)
    snprintf(&__str, 0x10uLL, "0x%x");
  else
    snprintf(&__str, 0x10uLL, "%d");
  return CFStringCreateWithCString(0, &__str, 0x600u);
}

uint64_t AudioConverterFillComplexBuffer_BlockInvoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (**v8)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v9;

  v8 = (uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x2495AE9CC](a5);
  v9 = v8[2](v8, a2, a3, a4);

  return v9;
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_2491BEBC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2491BEF74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_2491C04B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2491C0928(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 232), 8);
  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void sub_2491C115C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;

  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v38 - 184), 8);
  _Block_object_dispose((const void *)(v38 - 136), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_2491C18B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 192), 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_2491C36F4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_2491C44B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  uint64_t v57;

  _Block_object_dispose((const void *)(v57 - 176), 8);
  _Block_object_dispose(&a57, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void OUTLINED_FUNCTION_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

id OUTLINED_FUNCTION_8(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_10()
{
  void *v0;

  return objc_msgSend(v0, "assetVersion");
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_5_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_8_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_2491C9CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL _LTRemoteStatusIsSuccess(int a1)
{
  return a1 == 200 || a1 == 0;
}

id _LTErrorFromRemoteFailure(unsigned int a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v17[2];
  _QWORD v18[2];
  uint64_t v19;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  v6 = (void *)MEMORY[0x24BDD1540];
  v7 = *MEMORY[0x24BDD0FC8];
  v19 = *MEMORY[0x24BDD0FC8];
  v8 = v3;
  if (!v3)
  {
    objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("UNKNOWN_ERROR_DESCRIPTION"), &stru_251A15610, 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v20[0] = v8;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v20, &v19, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "errorWithDomain:code:userInfo:", CFSTR("LTRemoteFailure"), a1, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  v11 = (void *)MEMORY[0x24BDD1540];
  v12 = *MEMORY[0x24BDF6530];
  v17[0] = v7;
  objc_msgSend(v5, "localizedStringForKey:value:table:", CFSTR("REMOTE_SERVICE_FAILURE_DESCRIPTION"), &stru_251A15610, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = *MEMORY[0x24BDD1398];
  v18[0] = v13;
  v18[1] = v10;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v18, v17, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "errorWithDomain:code:userInfo:", v12, 4, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

uint64_t _LTDeviseHasGMSCapability()
{
  if (_LTDeviseHasGMSCapability_once != -1)
    dispatch_once(&_LTDeviseHasGMSCapability_once, &__block_literal_global_4);
  return _LTDeviseHasGMSCapability_deviceSupportsGenerativeModelSystems;
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  void *v0;

  return objc_msgSend(v0, "length");
}

void OUTLINED_FUNCTION_3_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_0_5(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, a5, 2u);
}

void OUTLINED_FUNCTION_6_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_2491D1F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2491D242C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2491D3A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __getCSLanguageDetectorClass_block_invoke(uint64_t a1)
{
  CoreSpeechLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CSLanguageDetector");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCSLanguageDetectorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCSLanguageDetectorClass_block_invoke_cold_1();
    CoreSpeechLibrary();
  }
}

void CoreSpeechLibrary()
{
  void *v0;

  if (!CoreSpeechLibraryCore_frameworkLibrary)
    CoreSpeechLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!CoreSpeechLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

Class __getCSLanguageDetectorOptionClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  CoreSpeechLibrary();
  result = objc_getClass("CSLanguageDetectorOption");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCSLanguageDetectorOptionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getCSLanguageDetectorOptionClass_block_invoke_cold_1();
    return (Class)OUTLINED_FUNCTION_4_0(v3);
  }
  return result;
}

void OUTLINED_FUNCTION_4_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_5_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

uint64_t _LTOSLogAssets()
{
  if (_LTOSLogAssets_onceToken != -1)
    dispatch_once(&_LTOSLogAssets_onceToken, &__block_literal_global_10);
  return _LTOSLogAssets_log;
}

uint64_t _LTOSLogDeviceState()
{
  if (_LTOSLogDeviceState_onceToken != -1)
    dispatch_once(&_LTOSLogDeviceState_onceToken, &__block_literal_global_3);
  return _LTOSLogDeviceState_log;
}

uint64_t _LTOSLogDisambiguation()
{
  if (_LTOSLogDisambiguation_onceToken != -1)
    dispatch_once(&_LTOSLogDisambiguation_onceToken, &__block_literal_global_5);
  return _LTOSLogDisambiguation_log;
}

uint64_t _LTOSLogEtiquetteSanitizer()
{
  if (_LTOSLogEtiquetteSanitizer_onceToken != -1)
    dispatch_once(&_LTOSLogEtiquetteSanitizer_onceToken, &__block_literal_global_7);
  return _LTOSLogEtiquetteSanitizer_log;
}

uint64_t _LTOSLogHotfix()
{
  if (_LTOSLogHotfix_onceToken != -1)
    dispatch_once(&_LTOSLogHotfix_onceToken, &__block_literal_global_9);
  return _LTOSLogHotfix_log;
}

uint64_t _LTOSLogLID()
{
  if (_LTOSLogLID_onceToken != -1)
    dispatch_once(&_LTOSLogLID_onceToken, &__block_literal_global_11);
  return _LTOSLogLID_log;
}

uint64_t _LTOSLogSandbox()
{
  if (_LTOSLogSandbox_onceToken != -1)
    dispatch_once(&_LTOSLogSandbox_onceToken, &__block_literal_global_13);
  return _LTOSLogSandbox_log;
}

uint64_t _LTOSLogSELFLogging()
{
  if (_LTOSLogSELFLogging_onceToken != -1)
    dispatch_once(&_LTOSLogSELFLogging_onceToken, &__block_literal_global_15);
  return _LTOSLogSELFLogging_log;
}

uint64_t _LTOSLogSpeech()
{
  if (_LTOSLogSpeech_onceToken != -1)
    dispatch_once(&_LTOSLogSpeech_onceToken, &__block_literal_global_17);
  return _LTOSLogSpeech_log;
}

uint64_t _LTOSLogTranslationEngine()
{
  if (_LTOSLogTranslationEngine_onceToken != -1)
    dispatch_once(&_LTOSLogTranslationEngine_onceToken, &__block_literal_global_19_0);
  return _LTOSLogTranslationEngine_log;
}

uint64_t _LTOSLogTTS()
{
  if (_LTOSLogTTS_onceToken != -1)
    dispatch_once(&_LTOSLogTTS_onceToken, &__block_literal_global_21_0);
  return _LTOSLogTTS_log;
}

uint64_t _LTOSLogXPC()
{
  if (_LTOSLogXPC_onceToken != -1)
    dispatch_once(&_LTOSLogXPC_onceToken, &__block_literal_global_23);
  return _LTOSLogXPC_log;
}

uint64_t LTDOspreyDataSharingStatus(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 3)
    return 0;
  return result;
}

uint64_t LTDDisablePayloadLogging(uint64_t a1)
{
  if (a1 == 2)
    return 0;
  else
    return _LTDeviseHasGMSCapability();
}

id _LTPreferencesObjectForKey(void *a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = (void *)MEMORY[0x24BDBCF50];
  v4 = a2;
  v5 = a1;
  objc_msgSend(v3, "standardUserDefaults");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
    v8 = v7;
  else
    v8 = v4;
  v9 = v8;

  return v9;
}

uint64_t _LTPreferencesIntegerForKey(void *a1, uint64_t a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v3 = (void *)MEMORY[0x24BDBCF50];
  v4 = a1;
  objc_msgSend(v3, "standardUserDefaults");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2 = objc_msgSend(v6, "integerValue");

  return a2;
}

double _LTPreferencesDoubleForKey(void *a1, double a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  double v7;

  v3 = (void *)MEMORY[0x24BDBCF50];
  v4 = a1;
  objc_msgSend(v3, "standardUserDefaults");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v6, "doubleValue");
    a2 = v7;
  }

  return a2;
}

uint64_t _LTPreferencesBooleanForKey(void *a1, uint64_t a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v3 = (void *)MEMORY[0x24BDBCF50];
  v4 = a1;
  objc_msgSend(v3, "standardUserDefaults");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKey:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    a2 = objc_msgSend(v6, "BOOLValue");

  return a2;
}

id _LTPreferencesStringForKey(void *a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v3 = (void *)MEMORY[0x24BDBCF50];
  v4 = a2;
  v5 = a1;
  objc_msgSend(v3, "standardUserDefaults");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v8 = v7;
  else
    v8 = 0;
  if (v8)
    v9 = v8;
  else
    v9 = v4;
  v10 = v9;

  return v10;
}

void _LTPreferencesSetObjectForKey(void *a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  id v6;

  v3 = (void *)MEMORY[0x24BDBCF50];
  v4 = a2;
  v5 = a1;
  objc_msgSend(v3, "standardUserDefaults");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setObject:forKey:", v5, v4);

}

void _LTPreferencesSetInstalledLocales(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCEF0], "set");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v7), "localeIdentifier", (_QWORD)v10);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObject:", v8);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v5);
  }

  objc_msgSend(v2, "allObjects");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  _LTPreferencesSetObjectForKey(v9, CFSTR("InstalledLocales"));

}

id _LTPreferencesInstalledLocales()
{
  return _LTPreferencesObjectForKey(CFSTR("InstalledLocales"), 0);
}

id _LTPreferencesOverrideDefaultCatalog()
{
  void *v0;

  if (_LTIsInternalInstall())
  {
    _LTPreferencesStringForKey(CFSTR("OverrideDefaultCatalog"), 0);
    v0 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v0 = 0;
  }
  return v0;
}

double _LTDPreferencesConfigurationCacheTimeout()
{
  return _LTPreferencesDoubleForKey(CFSTR("ConfigurationCacheTimeout"), 15.0);
}

id _LTPreferencesLastOfflineAssetCatalogUpdate()
{
  return _LTPreferencesObjectForKey(CFSTR("LastOfflineAssetCatalogUpdate"), 0);
}

void _LTPreferencesSetLastOfflineAssetCatalogUpdate(void *a1)
{
  _LTPreferencesSetObjectForKey(a1, CFSTR("LastOfflineAssetCatalogUpdate"));
}

uint64_t _LTPreferencesASRConfidenceThreshold(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("ASRConfidenceThresholds"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("default"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("default"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "integerValue");

  }
  else
  {
    v6 = 750;
  }

  objc_msgSend(v3, "objectForKeyedSubscript:", v1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
    v6 = objc_msgSend(v7, "integerValue");
  v8 = _LTPreferencesIntegerForKey(CFSTR("ASRConfidenceThresholds"), v6);

  return v8;
}

uint64_t _LTPreferencesServerASRConfidenceThreshold(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "_ltLocaleIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = _LTPreferencesASRConfidenceThreshold(v1);

  return v2;
}

uint64_t _LTPreferencesOfflineASRConfidenceThreshold(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = a2;
  objc_msgSend(a1, "_ltLocaleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringByAppendingString:", CFSTR("-"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringByAppendingString:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = _LTPreferencesASRConfidenceThreshold(v6);
  return v7;
}

uint64_t _LTPreferencesASRWordLevelConfidenceThreshold(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v1 = a1;
  if ((_LTPreferencesBooleanForKey((void *)*MEMORY[0x24BDF6560], 0) & 1) != 0)
  {
    v2 = 1000;
  }
  else
  {
    +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("ASRWordLevelConfidenceThreshold"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("default"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "objectForKeyedSubscript:", v1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      v8 = v6;

      v5 = v8;
    }
    v2 = (uint64_t)_LTPreferencesDoubleForKey(CFSTR("ASRWordLevelConfidenceThreshold"), (double)objc_msgSend(v5, "integerValue"));

  }
  return v2;
}

uint64_t _LTPreferencesServerASRWordLevelConfidenceThreshold(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "_ltLocaleIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = _LTPreferencesASRWordLevelConfidenceThreshold(v1);

  return v2;
}

uint64_t _LTPreferencesOfflineASRWordLevelConfidenceThreshold(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = a2;
  objc_msgSend(a1, "_ltLocaleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "stringByAppendingString:", CFSTR("-"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringByAppendingString:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = _LTPreferencesASRWordLevelConfidenceThreshold(v6);
  return v7;
}

float _LTPreferencesFloatValueFromOfflineAssetManager(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  float v10;
  float v11;

  v3 = a2;
  v4 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("default"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = v8;

    v7 = v9;
  }
  objc_msgSend(v7, "floatValue");
  v11 = _LTPreferencesDoubleForKey(v3, v10);

  return v11;
}

uint64_t _LTPreferencesBooleanValueFromOfflineAssetManager(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v3 = a2;
  v4 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("default"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = v8;

    v7 = v9;
  }
  v10 = _LTPreferencesBooleanForKey(v3, objc_msgSend(v7, "BOOLValue"));

  return v10;
}

uint64_t _LTPreferencesDebugForceLowConfidenceLID()
{
  return _LTPreferencesBooleanForKey((void *)*MEMORY[0x24BDF6558], 0);
}

uint64_t _LTPreferencesDebugDisableTTSCache()
{
  return _LTPreferencesBooleanForKey((void *)*MEMORY[0x24BDF6550], 0);
}

uint64_t _LTPreferencesMinimumAcousticLanguageDetectionResults()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("MinimumAcousticLanguageDetectionResults"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "integerValue");

  v3 = _LTPreferencesIntegerForKey(CFSTR("MinimumAcousticLanguageDetectionResults"), v2);
  return v3;
}

uint64_t _LTPreferencesFinalLanguageDetectionResultWaitTime()
{
  void *v0;
  void *v1;
  float v2;
  uint64_t v3;
  uint64_t v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("FinalAcousticLanguageDetectionResultsWaitTimeInMs"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "floatValue");
  v3 = (unint64_t)v2;

  v4 = _LTPreferencesIntegerForKey(CFSTR("FinalAcousticLanguageDetectionResultsWaitTimeInMs"), v3);
  return v4;
}

uint64_t _LTPreferencesFinalThresholdsLanguageDetectionResultWaitTime()
{
  void *v0;
  void *v1;
  float v2;
  uint64_t v3;
  uint64_t v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("FinalThresholdsAcousticLanguageDetectionResultsWaitTimeInMs"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "floatValue");
  v3 = (unint64_t)v2;

  v4 = _LTPreferencesIntegerForKey(CFSTR("FinalThresholdsAcousticLanguageDetectionResultsWaitTimeInMs"), v3);
  return v4;
}

uint64_t _LTPreferencesMaximumAcousticLanguageDetectionResults()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("MaximumAcousticLanguageDetectionResults"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "integerValue");

  v3 = _LTPreferencesIntegerForKey(CFSTR("MaximumAcousticLanguageDetectionResults"), v2);
  return v3;
}

double _LTPreferencesVADAudioCacheMaxDuration()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("VADAudioCacheMaxDuration"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "doubleValue");
  v3 = v2;

  v4 = _LTPreferencesDoubleForKey(CFSTR("VADAudioCacheMaxDuration"), v3);
  return v4;
}

float _LTPreferencesLanguageDetectorThresholdsForLocale(void *a1)
{
  void *v1;
  float v2;

  objc_msgSend(a1, "identifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = _LTPreferencesFloatValueFromOfflineAssetManager(v1, CFSTR("LanguageDetectorConfidenceThreshold"));

  return v2;
}

uint64_t _LTPreferencesLanguageDetectorFeatureCombinationModelSupportedForLocale(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "canonicalIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = _LTPreferencesBooleanValueFromOfflineAssetManager(v1, CFSTR("LanguageDetectorFeatureCombinationModelSupported"));

  return v2;
}

id _LTPreferencesGetLanguageDetectorUnsupportedPairs()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(CFSTR("LanguageDetectorNotSupported"), "stringByAppendingString:", CFSTR("-"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingString:", CFSTR("v230614"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v3
     || (objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("LanguageDetectorNotSupported")),
         (v3 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    if (objc_msgSend(v3, "lt_ensureElementType:", objc_opt_class()))
      v4 = v3;
    else
      v4 = 0;
  }
  else
  {

    v3 = 0;
    v4 = 0;
  }
  v5 = v4;

  v6 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v7 = v5;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v16;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v16 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(MEMORY[0x24BDF6410], "pairWithIdentifiers:", *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v11), (_QWORD)v15);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "canonicalLocalePair");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v13);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v9);
  }

  return v6;
}

float _LTPreferencesLanguageDetectorFeatureCombinationModelThresholdsForLocale(void *a1, void *a2, int a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  float v17;
  float v18;

  v5 = a2;
  objc_msgSend(a1, "canonicalIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  languageDetectorFeatureCombinationModelConfigKeyAppendingVersionIDIfNeeded(CFSTR("LanguageDetectorFeatureCombinationModelThreshold"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "objectForKeyedSubscript:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v6;
  v11 = v10;
  if (v5)
  {
    v11 = v10;
    if (objc_msgSend(v5, "length"))
    {
      objc_msgSend(v10, "stringByAppendingString:", CFSTR("-"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "stringByAppendingString:", v5);
      v11 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  objc_msgSend(v9, "objectForKeyedSubscript:", v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (a3)
  {
    objc_msgSend(v11, "stringByAppendingString:", CFSTR("-finalASR"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectForKeyedSubscript:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      v16 = v15;

      v13 = v16;
    }

  }
  if (v13)
  {
    objc_msgSend(v13, "floatValue");
    v18 = _LTPreferencesDoubleForKey(v7, v17);
  }
  else
  {
    v18 = _LTPreferencesFloatValueFromOfflineAssetManager(v10, v7);
  }

  return v18;
}

id languageDetectorFeatureCombinationModelConfigKeyAppendingVersionIDIfNeeded(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  char isKindOfClass;

  v1 = a1;
  objc_msgSend(v1, "stringByAppendingString:", CFSTR("-"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByAppendingString:", CFSTR("v230614"));
  v3 = (id)objc_claimAutoreleasedReturnValue();

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKeyedSubscript:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0)
  {

    v3 = v1;
  }

  return v3;
}

float _LTPreferencesLanguageDetectorFeatureCombinationModelConfidenceThresholdsForLocale(void *a1, void *a2, int a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  float v17;
  float v18;

  v5 = a2;
  objc_msgSend(a1, "identifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  languageDetectorFeatureCombinationModelConfigKeyAppendingVersionIDIfNeeded(CFSTR("LanguageDetectorFeatureCombinationModelConfidenceThreshold"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "objectForKeyedSubscript:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v6;
  v11 = v10;
  if (v5)
  {
    v11 = v10;
    if (objc_msgSend(v5, "length"))
    {
      objc_msgSend(v10, "stringByAppendingString:", CFSTR("-"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "stringByAppendingString:", v5);
      v11 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }
  objc_msgSend(v9, "objectForKeyedSubscript:", v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (a3)
  {
    objc_msgSend(v11, "stringByAppendingString:", CFSTR("-finalASR"));
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectForKeyedSubscript:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      v16 = v15;

      v13 = v16;
    }

  }
  if (v13)
  {
    objc_msgSend(v13, "floatValue");
    v18 = _LTPreferencesDoubleForKey(v7, v17);
  }
  else
  {
    v18 = _LTPreferencesFloatValueFromOfflineAssetManager(v10, v7);
  }

  return v18;
}

id _LTPreferencesLanguageDetectorFeatureCombinationThresholdVersionForASRDataPack(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = a1;
  v4 = a2;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("ASRDataPackToLIDThresholdVersion"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
    goto LABEL_3;
  objc_msgSend(v3, "localeIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringByAppendingString:", CFSTR("-"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "stringByAppendingString:", v4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v10)
  {
LABEL_3:
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("default"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v10;
}

id _LTPreferencesLanguageDetectorFeatureCombinationASRTypeIdentifierForASRDataPack(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = a1;
  v4 = a2;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("ASRDataPackToASRTypeIdentifier"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
    goto LABEL_3;
  objc_msgSend(v3, "localeIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringByAppendingString:", CFSTR("-"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "stringByAppendingString:", v4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v10)
  {
LABEL_3:
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("default"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v10;
}

double _LTPreferencesTextLIDScorerConfidenceThreshold()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("TextLIDScorerConfidenceThreshold"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "doubleValue");
  v3 = 1.0;
  if (v2 <= 1.0)
    v3 = v2;
  if (v2 >= 0.0)
    v4 = v3;
  else
    v4 = 0.0;

  return v4;
}

uint64_t _LTPreferencesHybridEndpointerEnabledForLocales(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;

  v3 = a2;
  v4 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("EnableHybridEndpointer"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("default"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localeIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(v3, "localeIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v8, "compare:", v9);

    if (v10 == -1)
    {
      objc_msgSend(v8, "stringByAppendingString:", CFSTR("-"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "localeIdentifier");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      v14 = v13;
    }
    else
    {
      objc_msgSend(v3, "localeIdentifier");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "stringByAppendingString:", CFSTR("-"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = v12;
      v14 = v8;
    }
    objc_msgSend(v12, "stringByAppendingString:", v14);
    v15 = objc_claimAutoreleasedReturnValue();

    v8 = (void *)v15;
  }
  objc_msgSend(v6, "objectForKeyedSubscript:", v8);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v16;
  if (v16)
  {
    v18 = v16;

    v7 = v18;
  }
  v19 = _LTPreferencesBooleanForKey(CFSTR("EnableHybridEndpointer"), objc_msgSend(v7, "BOOLValue"));

  return v19;
}

id _LTPreferencesHybridEndpointerThresholdForLocale(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("HybridEndpointerThreshold"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localeIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "objectForKeyedSubscript:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  _LTPreferencesObjectForKey(CFSTR("HybridEndpointerThreshold"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id _LTPreferencesDisconnectedHybridEndpointerThresholdForLocale(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("DisconnectedHybridEndpointerThreshold"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localeIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "objectForKeyedSubscript:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  _LTPreferencesObjectForKey(CFSTR("DisconnectedHybridEndpointerThreshold"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

uint64_t _LTPreferencesHybridEndpointerClientLagThreshold()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("HybridEndpointerClientLagThreshold"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "integerValue");

  v3 = _LTPreferencesIntegerForKey(CFSTR("HybridEndpointerClientLagThreshold"), v2);
  return v3;
}

uint64_t _LTPreferencesHybridEndpointerClientLagClampedLatency()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("HybridEndpointerClampedLatencyForClientLag"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "integerValue");

  v3 = _LTPreferencesIntegerForKey(CFSTR("HybridEndpointerClampedLatencyForClientLag"), v2);
  return v3;
}

uint64_t _LTPreferencesHybridEndpointerUseDefaultFeaturesOnClientLagThreshold()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("HybridEndpointerUseDefaultFeaturesOnClientLag"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "BOOLValue");

  v3 = _LTPreferencesBooleanForKey(CFSTR("HybridEndpointerUseDefaultFeaturesOnClientLag"), v2);
  return v3;
}

uint64_t _LTPreferencesIsCharacterBasedLocale(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("CharacterBasedLocales"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "localeIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v3, "containsObject:", v4);
  return v5;
}

uint64_t _LTPreferencesTranslationEngineCacheSize()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("TranslationEngineCacheSize"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
    v3 = objc_msgSend(v1, "integerValue");
  else
    v3 = -1;

  return v3;
}

id _LTPreferencesSupportedLocales(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v1 = 3;
  if (a1 == 4)
    v1 = 5;
  if (a1 == 2)
    v2 = 4;
  else
    v2 = v1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", v2, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("LanguagePairs"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {

    v4 = 0;
    goto LABEL_18;
  }
  if ((objc_msgSend(v4, "lt_ensureElementType:", objc_opt_class()) & 1) == 0)
  {
LABEL_18:

    v14 = (void *)MEMORY[0x24BDBD1A8];
    goto LABEL_19;
  }
  objc_msgSend(MEMORY[0x24BDBCEF0], "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v6 = v4;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v17;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v17 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(MEMORY[0x24BDF6410], "pairWithIdentifiers:", *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * v10), (_QWORD)v16);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "sourceLocale");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "addObject:", v12);

        objc_msgSend(v11, "targetLocale");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "addObject:", v13);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v8);
  }

  objc_msgSend(v5, "allObjects");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_19:
  return v14;
}

id _LTPreferencesSupportedLocalePairsForTask(uint64_t a1)
{
  return +[_LTDConfigurationService supportedLocalePairsForTask:error:](_LTDConfigurationService, "supportedLocalePairsForTask:error:", a1, 0);
}

id _LTPreferencesAdditionalLikelyPreferredLocales(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 6, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", CFSTR("locales"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  objc_msgSend(v1, "localeIdentifier", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKeyedSubscript:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(MEMORY[0x24BDBCEA0], "localeWithLocaleIdentifier:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v10));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "addObject:", v11);

        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  v12 = (void *)objc_msgSend(v4, "copy");
  return v12;
}

id _LTPreferencesConfigInfoForLocale(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  _QWORD v46[20];
  _QWORD v47[22];

  v47[20] = *MEMORY[0x24BDAC8D0];
  v3 = a1;
  v4 = a2;
  v46[0] = CFSTR("OspreyEndpointURL");
  _LTPreferencesOspreyEndpointURL();
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v47[0] = v43;
  v46[1] = CFSTR("HotfixEndpointURL");
  _LTPreferencesHotfixEndpointURL();
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v47[1] = v42;
  v46[2] = CFSTR("BatchingMaxParagraphs");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesBatchingMaxParagraphs());
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v47[2] = v41;
  v46[3] = CFSTR("BatchingMaxParagraphBufferSize");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesBatchingMaxParagraphBufferSize());
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v47[3] = v40;
  v46[4] = CFSTR("BatchingMaxParagraphBufferTimeout");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", _LTPreferencesBatchingMaxParagraphBufferTimeout());
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v47[4] = v39;
  v46[5] = *MEMORY[0x24BDF6570];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesRateLimitingMaximumPageLoadRequests());
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v47[5] = v38;
  v46[6] = *MEMORY[0x24BDF6568];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesRateLimitingMaximumDynamicContentRequests());
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v47[6] = v37;
  v46[7] = CFSTR("LastOfflineAssetCatalogUpdate");
  _LTPreferencesObjectForKey(CFSTR("LastOfflineAssetCatalogUpdate"), 0);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)v5;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x24BDBCEF8], "null");
    v5 = objc_claimAutoreleasedReturnValue();
  }
  v31 = (void *)v5;
  v47[7] = v5;
  v46[8] = CFSTR("LastOfflineAssetUpdate");
  _LTPreferencesObjectForKey(CFSTR("LastOfflineAssetUpdate"), 0);
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = (void *)v7;
  if (!v7)
  {
    objc_msgSend(MEMORY[0x24BDBCEF8], "null");
    v7 = objc_claimAutoreleasedReturnValue();
  }
  v30 = (void *)v7;
  v47[8] = v7;
  v46[9] = CFSTR("LastConfigAssetUpdate");
  _LTPreferencesObjectForKey(CFSTR("LastConfigAssetUpdate"), 0);
  v9 = objc_claimAutoreleasedReturnValue();
  v34 = (void *)v9;
  if (!v9)
  {
    objc_msgSend(MEMORY[0x24BDBCEF8], "null");
    v9 = objc_claimAutoreleasedReturnValue();
  }
  v36 = v6;
  v44 = v4;
  v29 = (void *)v9;
  v47[9] = v9;
  v46[10] = CFSTR("LastCDNUpdate");
  _LTPreferencesObjectForKey(CFSTR("LastCDNUpdate"), 0);
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = (void *)v10;
  if (!v10)
  {
    objc_msgSend(MEMORY[0x24BDBCEF8], "null");
    v10 = objc_claimAutoreleasedReturnValue();
  }
  v28 = (void *)v10;
  v47[10] = v10;
  v46[11] = CFSTR("ServerSpeechSessionInitialOnlineTimeout");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", _LTPreferencesServerSpeechSessionInitialOnlineTimeout());
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v47[11] = v33;
  v46[12] = CFSTR("ServerSpeechSessionOnlineTimeout");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", _LTPreferencesServerSpeechSessionOnlineTimeout());
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v47[12] = v32;
  v46[13] = CFSTR("DeviceSessionID");
  _LTPreferencesSessionIDOverride(CFSTR("default"));
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)v12;
  if (!v12)
  {
    objc_msgSend(MEMORY[0x24BDBCEF8], "null");
    v12 = objc_claimAutoreleasedReturnValue();
  }
  v35 = v8;
  v45 = v3;
  v27 = (void *)v12;
  v47[13] = v12;
  v46[14] = CFSTR("RequestID");
  _LTPreferencesRequestIDOverride(CFSTR("default"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (!v14)
  {
    objc_msgSend(MEMORY[0x24BDBCEF8], "null");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v47[14] = v15;
  v46[15] = CFSTR("MinimumAcousticLanguageDetectionResults");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesMinimumAcousticLanguageDetectionResults());
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v47[15] = v16;
  v46[16] = CFSTR("MaximumAcousticLanguageDetectionResults");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesMaximumAcousticLanguageDetectionResults());
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v47[16] = v17;
  v46[17] = CFSTR("FinalAcousticLanguageDetectionResultsWaitTimeInMs");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesFinalLanguageDetectionResultWaitTime());
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v47[17] = v18;
  v46[18] = CFSTR("FinalThresholdsAcousticLanguageDetectionResultsWaitTimeInMs");
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInteger:", _LTPreferencesFinalThresholdsLanguageDetectionResultWaitTime());
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v46[19] = CFSTR("LanguageDetectorFeatureCombinationModelVersionID");
  v47[18] = v19;
  v47[19] = CFSTR("v230614");
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v47, v46, 20);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = (void *)objc_msgSend(v20, "mutableCopy");

  if (!v14)
  if (!v13)

  if (!v11)
  if (!v34)

  if (!v35)
  if (!v36)

  if (v45)
  {
    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", _LTPreferencesServerASRConfidenceThreshold(v45));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setObject:forKeyedSubscript:", v22, CFSTR("ASRConfidenceThresholds"));

    objc_msgSend(MEMORY[0x24BDD16E0], "numberWithInteger:", _LTPreferencesServerASRWordLevelConfidenceThreshold(v45));
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "setObject:forKeyedSubscript:", v23, CFSTR("ASRWordLevelConfidenceThreshold"));

    if (v44)
    {
      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", _LTPreferencesHybridEndpointerEnabledForLocales(v45, v44));
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "setObject:forKeyedSubscript:", v24, CFSTR("EnableHybridEndpointer"));

    }
  }
  v25 = (void *)objc_msgSend(v21, "copy");

  return v25;
}

id _LTPreferencesOspreyEndpointURL()
{
  const __CFString *v0;
  __CFString *v1;
  void *v2;
  void *v3;

  if (_LTIsInternalInstall())
    v0 = CFSTR("https://carry-sequoia.siri.apple.com");
  else
    v0 = CFSTR("https://sequoia.apple.com");
  if (_LTIsSeedInstall())
    v1 = CFSTR("https://seed-sequoia.siri.apple.com");
  else
    v1 = (__CFString *)v0;
  _LTPreferencesObjectForKey(CFSTR("OspreyEndpointURL"), v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCF48], "URLWithString:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id _LTPreferencesHotfixEndpointURL()
{
  __CFString *v0;
  void *v1;
  void *v2;

  if (_LTIsInternalInstall())
    v0 = CFSTR("https://sequoia-test.cdn-apple.com/sequoia-livability/carry");
  else
    v0 = CFSTR("https://sequoia.cdn-apple.com/sequoia-prod");
  _LTPreferencesObjectForKey(CFSTR("HotfixEndpointURL"), v0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCF48], "URLWithString:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

uint64_t _LTPreferencesBatchingMaxParagraphs()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("BatchingMaxParagraphs"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "integerValue");

  v3 = _LTPreferencesIntegerForKey(CFSTR("BatchingMaxParagraphs"), v2);
  return v3;
}

uint64_t _LTPreferencesBatchingMaxParagraphBufferSize()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("BatchingMaxParagraphBufferSize"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "integerValue");

  v3 = _LTPreferencesIntegerForKey(CFSTR("BatchingMaxParagraphBufferSize"), v2);
  return v3;
}

double _LTPreferencesBatchingMaxParagraphBufferTimeout()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("BatchingMaxParagraphBufferTimeout"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "doubleValue");
  v3 = v2;

  v4 = _LTPreferencesDoubleForKey(CFSTR("BatchingMaxParagraphBufferTimeout"), v3);
  return v4;
}

uint64_t _LTPreferencesRateLimitingMaximumPageLoadRequests()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)*MEMORY[0x24BDF6570];
  objc_msgSend(v0, "objectForKeyedSubscript:", *MEMORY[0x24BDF6570]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "integerValue");

  v4 = _LTPreferencesIntegerForKey(v1, v3);
  return v4;
}

uint64_t _LTPreferencesRateLimitingMaximumDynamicContentRequests()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)*MEMORY[0x24BDF6568];
  objc_msgSend(v0, "objectForKeyedSubscript:", *MEMORY[0x24BDF6568]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "integerValue");

  v4 = _LTPreferencesIntegerForKey(v1, v3);
  return v4;
}

double _LTPreferencesServerSpeechSessionInitialOnlineTimeout()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("ServerSpeechSessionInitialOnlineTimeout"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "doubleValue");
  v3 = v2;

  v4 = _LTPreferencesDoubleForKey(CFSTR("ServerSpeechSessionInitialOnlineTimeout"), v3);
  return v4;
}

double _LTPreferencesServerSpeechSessionOnlineTimeout()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("ServerSpeechSessionOnlineTimeout"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "doubleValue");
  v3 = v2;

  v4 = _LTPreferencesDoubleForKey(CFSTR("ServerSpeechSessionOnlineTimeout"), v3);
  return v4;
}

id _LTPreferencesSessionIDOverride(void *a1)
{
  id v1;
  void *v2;
  int v3;
  void *v4;
  id v5;
  id v6;

  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCF50], "standardUserDefaults");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLForKey:", CFSTR("DataCollectionEnabled"));

  if (v3)
  {
    if ((unint64_t)objc_msgSend(v1, "length") >= 8)
    {
      v5 = v1;
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDD1880], "UUID");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "UUIDString");
      v5 = (id)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend(v5, "stringByReplacingCharactersInRange:withString:", 0, 8, CFSTR("EDC04020"));
    v6 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = v1;
  }

  return v6;
}

id _LTPreferencesRequestIDOverride(void *a1)
{
  id v1;
  void *v2;
  int v3;
  id v4;
  id v5;
  void *v6;

  v1 = a1;
  objc_msgSend(MEMORY[0x24BDBCF50], "standardUserDefaults");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLForKey:", CFSTR("DataCollectionEnabled"));

  if (v3)
  {
    if (objc_msgSend(v1, "length"))
    {
      v4 = v1;
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDD1880], "UUID");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "UUIDString");
      v4 = (id)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend(v4, "stringByReplacingCharactersInRange:withString:", 0, 1, CFSTR("0"));
    v5 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v5 = v1;
  }

  return v5;
}

double _LTPreferencesServerSpeechSessionEndpointTimeout()
{
  void *v0;
  void *v1;
  double v2;
  double v3;
  double v4;

  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("ServerSpeechSessionOnlineEndpointTimeout"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "doubleValue");
  v3 = v2;

  v4 = _LTPreferencesDoubleForKey(CFSTR("ServerSpeechSessionOnlineEndpointTimeout"), v3);
  return v4;
}

uint64_t _LTPreferencesTranslationIsDisabled()
{
  int v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  if (_LTPreferencesTranslationIsDisabled_once != -1)
    dispatch_once(&_LTPreferencesTranslationIsDisabled_once, &__block_literal_global_12);
  v0 = objc_msgSend(&unk_251A50B90, "lt_hasObjectPassingTest:", &__block_literal_global_139);
  +[_LTDConfigurationService configurationForType:error:](_LTDConfigurationService, "configurationForType:error:", 0, 0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("TranslationOverrideActive"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLValue");

  if (_LTIsInternalInstall())
    LODWORD(v3) = _LTPreferencesBooleanForKey(CFSTR("TranslationOverrideActive"), v3);
  v4 = v3 & v0;
  if (_LTIsInternalInstall())
    v4 = _LTPreferencesBooleanForKey(CFSTR("TranslationOverrideActiveInternalDebug"), v4);

  return v4;
}

void OUTLINED_FUNCTION_1_4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  uint64_t v0;

  return v0;
}

uint64_t convertFromNSLocale(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v1 = a1;
  objc_msgSend(v1, "countryCode");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "languageCode");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("%@-%@"), v3, v2);
    v4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = v3;
  }
  v5 = v4;
  if (v4)
    v6 = objc_msgSend(MEMORY[0x24BE95CA8], "convertLanguageCodeToSchemaLocale:", v4);
  else
    v6 = 0;

  return v6;
}

void OUTLINED_FUNCTION_0_6(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

id replacementDictionaryForEtiquetteFileAtURL(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  _QWORD v11[4];
  id v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;
  id v18;

  v1 = a1;
  if (v1)
  {
    objc_msgSend(MEMORY[0x24BDBCE50], "dataWithContentsOfURL:", v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v2)
    {
      v7 = _LTOSLogEtiquetteSanitizer();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        replacementDictionaryForEtiquetteFileAtURL_cold_2();
      v5 = 0;
      goto LABEL_21;
    }
    v18 = 0;
    objc_msgSend(MEMORY[0x24BDD1608], "JSONObjectWithData:options:error:", v2, 0, &v18);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v18;
    if (v3)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v14 = 0;
        v15 = &v14;
        v16 = 0x2020000000;
        v17 = 1;
        v11[0] = MEMORY[0x24BDAC760];
        v11[1] = 3221225472;
        v11[2] = __replacementDictionaryForEtiquetteFileAtURL_block_invoke;
        v11[3] = &unk_251A12660;
        v12 = v1;
        v13 = &v14;
        objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v11);
        if (*((_BYTE *)v15 + 24))
          v5 = v3;
        else
          v5 = 0;

        _Block_object_dispose(&v14, 8);
        goto LABEL_20;
      }
      v9 = _LTOSLogEtiquetteSanitizer();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        replacementDictionaryForEtiquetteFileAtURL_cold_4((uint64_t)v1, v9);
    }
    else
    {
      v8 = _LTOSLogEtiquetteSanitizer();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        replacementDictionaryForEtiquetteFileAtURL_cold_3();
    }
    v5 = 0;
LABEL_20:

LABEL_21:
    goto LABEL_22;
  }
  v6 = _LTOSLogEtiquetteSanitizer();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    replacementDictionaryForEtiquetteFileAtURL_cold_1(v6);
  v5 = 0;
LABEL_22:

  return v5;
}

void sub_2491E0EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __replacementDictionaryForEtiquetteFileAtURL_block_invoke(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v7 = a2;
  v8 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    v9 = _LTOSLogEtiquetteSanitizer();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      v10 = *(_QWORD *)(a1 + 32);
      v11 = 138412802;
      v12 = v10;
      v13 = 2112;
      v14 = v7;
      v15 = 2112;
      v16 = v8;
      _os_log_error_impl(&dword_2491B9000, v9, OS_LOG_TYPE_ERROR, "Model at URL %@ contains bogus key/value pair: %@ => %@", (uint8_t *)&v11, 0x20u);
    }
    *a4 = 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  }

}

void sub_2491E1364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void sub_2491E1710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  objc_destroyWeak(location);
  _Block_object_dispose(&a28, 8);
  objc_destroyWeak(&a34);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return archive_error_string();
}

uint64_t getModelFeature(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("min_source")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("max_source")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("avg_source")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("min_target")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("max_target")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("avg_target")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("acoustic_lid")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("acoustic_lid_count")) & 1) != 0)
  {
    v2 = 7;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("acoustic_lid0")) & 1) != 0)
  {
    v2 = 8;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("acoustic_lid1")) & 1) != 0)
  {
    v2 = 9;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("acoustic_lid2")) & 1) != 0)
  {
    v2 = 10;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("most_recent_partial_source")) & 1) != 0)
  {
    v2 = 11;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("max_partial_source")) & 1) != 0)
  {
    v2 = 12;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("avg_partial_source")) & 1) != 0)
  {
    v2 = 13;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("most_recent_partial_target")) & 1) != 0)
  {
    v2 = 14;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("max_partial_target")) & 1) != 0)
  {
    v2 = 15;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("avg_partial_target")) & 1) != 0)
  {
    v2 = 16;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("identifier_source")) & 1) != 0)
  {
    v2 = 17;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("identifier_target")) & 1) != 0)
  {
    v2 = 18;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("identifier_asr")))
  {
    v2 = 19;
  }
  else
  {
    v2 = 20;
  }

  return v2;
}

void sub_2491E6818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2491E6D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

double OUTLINED_FUNCTION_3_3(float a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  void *v0;

  return objc_msgSend(v0, "floatValue");
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  void *v0;

  return objc_msgSend(v0, "doubleValue");
}

id OUTLINED_FUNCTION_12(uint64_t a1, void *a2)
{
  return a2;
}

void OUTLINED_FUNCTION_13(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

double OUTLINED_FUNCTION_14(float a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_17()
{
  void *v0;

  return objc_msgSend(v0, "floatValue");
}

void sub_2491E9B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a45, 8);
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void sub_2491EC2F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_2491ED0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_2491EF438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;
  id *v28;
  id *v29;

  objc_destroyWeak(v27);
  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2491EFC64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491EFD94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_2491F0254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_2491F0914(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_2491F0D38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_2491F10B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F1444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, id a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  objc_destroyWeak(location);
  objc_destroyWeak(&a20);

  _Unwind_Resume(a1);
}

void sub_2491F18C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2491F2060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,void *a30,void *a31,void *a32,void *a33,void *a34,uint64_t a35,uint64_t a36,id location)
{
  id *v37;
  void *v38;
  void *v39;
  void *v40;

  objc_destroyWeak(v37);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_2491F23AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491F26B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491F29DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_2491F2AEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491F2B5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491F2C18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491F2E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25)
{
  void *v25;
  void *v26;
  id *v27;
  void *v28;
  void *v29;
  id *v30;
  uint64_t v31;

  objc_destroyWeak(v27);
  objc_destroyWeak(v30);
  objc_destroyWeak((id *)(v31 - 112));

  _Unwind_Resume(a1);
}

void sub_2491F305C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_2491F31E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2491F3444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,void *a25)
{
  void *v25;
  void *v26;
  void *v27;
  id *v28;
  uint64_t v29;

  objc_destroyWeak(v28);
  objc_destroyWeak((id *)(v29 - 112));

  _Unwind_Resume(a1);
}

void sub_2491F3650(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491F3750(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491F37FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F3A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2491F3D50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

void sub_2491F4120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2491F430C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F4444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F4550(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F45A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F4694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F478C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_2491F4978(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_2491F4A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F4B78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_2491F4DEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F4F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;
  void *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_2491F5120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F5618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, void *a11, void *a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,uint64_t a21,uint64_t a22,id a23)
{
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  objc_destroyWeak(location);
  objc_destroyWeak(&a23);

  _Unwind_Resume(a1);
}

void sub_2491F57FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2491F59EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2491F5ADC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491F5D4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_2491F5E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F60A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19)
{
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_2491F63B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2491F6B28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

void sub_2491F6CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2491F6F58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491F73BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491F7520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_2491F7590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F7AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_2491F7FD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491F82A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491F853C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F8644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_9_1(uint64_t result, uint64_t a2, float a3)
{
  *(float *)a2 = a3;
  *(_QWORD *)(a2 + 4) = result;
  return result;
}

void sub_2491F8E70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_2491F9128(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491F92F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491F9624(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F9764(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_2491F9A9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F9C40(_Unwind_Exception *a1)
{
  void *v1;
  id *v2;

  objc_destroyWeak(v2);

  _Unwind_Resume(a1);
}

void sub_2491F9CFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491F9D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2491F9FA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491FA024(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491FA33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_2491FA45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2491FA6F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_2491FAE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_2491FB1C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_2491FB97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{

  _Unwind_Resume(a1);
}

void sub_2491FBC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  v11 = v10;

  _Unwind_Resume(a1);
}

void sub_2491FBE80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491FC170(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_2491FC29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15)
{
  void *v15;

  _Unwind_Resume(a1);
}

void sub_2491FC390(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2491FC70C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_2491FC90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  void *v28;

  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

void sub_2491FCA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;

  _Unwind_Resume(a1);
}

void sub_2491FCB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_2491FCE28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_2491FD274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_2491FD448(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2491FD56C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_3_4(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x16u);
}

uint64_t OUTLINED_FUNCTION_4_2(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(_QWORD *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(_QWORD *)(a3 + 14) = a2;
  return result;
}

void OUTLINED_FUNCTION_8_2(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_debug_impl(a1, a4, OS_LOG_TYPE_DEBUG, a2, a3, 0x16u);
}

void OUTLINED_FUNCTION_9_2(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x12u);
}

uint64_t OUTLINED_FUNCTION_11(uint64_t result, uint64_t a2, int a3, float a4)
{
  *(float *)a2 = a4;
  *(_DWORD *)(a2 + 4) = a3;
  *(_WORD *)(a2 + 8) = 2112;
  *(_QWORD *)(a2 + 10) = result;
  return result;
}

void sub_2491FD84C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_2491FDFB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2491FE560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2491FE938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  void *v0;

  return objc_msgSend(v0, "return_code");
}

void _LTAudioPlaybackServiceAudioQueueCallback(uint64_t a1, AudioQueueRef inAQ, AudioQueueBuffer *a3)
{
  NSObject *v6;
  uint64_t mAudioDataByteSize;
  NSObject *v8;
  AudioTimeStamp v9;
  uint8_t buf[4];
  uint64_t v11;
  __int16 v12;
  Float64 mSampleTime;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  memset(&v9, 0, sizeof(v9));
  AudioQueueGetCurrentTime(inAQ, 0, &v9, 0);
  v6 = _LTOSLogTTS();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    mAudioDataByteSize = a3->mAudioDataByteSize;
    *(_DWORD *)buf = 134218496;
    v11 = a1;
    v12 = 2048;
    mSampleTime = v9.mSampleTime;
    v14 = 2048;
    v15 = mAudioDataByteSize;
    _os_log_impl(&dword_2491B9000, v6, OS_LOG_TYPE_INFO, "LTPlaybackServices %p played audio buffer at sample time: %f, size: %ld", buf, 0x20u);
  }
  if (AudioQueueFreeBuffer(inAQ, a3))
  {
    v8 = _LTOSLogTTS();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      _LTAudioPlaybackServiceAudioQueueCallback_cold_1();
  }
}

void OUTLINED_FUNCTION_0_7(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void OUTLINED_FUNCTION_3_5(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x12u);
}

void sub_249202850(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_249202ACC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_249202D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_249202E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = MEMORY[0x2495AE9CC](*(_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

void sub_2492030B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_2492031A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249203224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492032BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249203384(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492033F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249203560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492036CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249203730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249203860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492038D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249203938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249203A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249204308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t AudioConverterFillComplexBuffer_BlockInvoke_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (**v8)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v9;

  v8 = (uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x2495AE9CC](a5);
  v9 = v8[2](v8, a2, a3, a4);

  return v9;
}

uint64_t _anyDownloading(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _BYTE v10[128];
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v6 = 0u;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v1 = a1;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v7;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v7 != v3)
          objc_enumerationMutation(v1);
        if ((objc_msgSend(*(id *)(*((_QWORD *)&v6 + 1) + 8 * i), "isDownloading", (_QWORD)v6) & 1) != 0)
        {
          v2 = 1;
          goto LABEL_11;
        }
      }
      v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v6, v10, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_11:

  return v2;
}

uint64_t _allInstalled(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  if (objc_msgSend(v1, "count"))
  {
    v11 = 0u;
    v12 = 0u;
    v9 = 0u;
    v10 = 0u;
    v2 = v1;
    v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)v10;
      LOBYTE(v6) = 1;
      do
      {
        for (i = 0; i != v4; ++i)
        {
          if (*(_QWORD *)v10 != v5)
            objc_enumerationMutation(v2);
          if ((v6 & 1) != 0)
            v6 = objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * i), "isInstalled", (_QWORD)v9);
          else
            v6 = 0;
        }
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      }
      while (v4);
    }
    else
    {
      v6 = 1;
    }

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void sub_249209840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;

  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose((const void *)(v43 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{

}

void sub_24920A03C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_6_2(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_24920CA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{

}

void sub_24920CF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;

  if (v32)
    (*(void (**)(uint64_t))(*(_QWORD *)v32 + 16))(v32);
  (*(void (**)(uint64_t))(*(_QWORD *)v30 + 16))(v30);
  if (*(char *)(v33 - 113) < 0)
    operator delete(*(void **)(v33 - 136));
  v35 = *(void **)(v33 - 112);
  if (v35)
  {
    *(_QWORD *)(v33 - 104) = v35;
    operator delete(v35);
  }
  if (*(char *)(v33 - 65) < 0)
    operator delete(*(void **)(v33 - 88));

  _Unwind_Resume(a1);
}

uint64_t morphun::Chunk::end(morphun::Chunk *this)
{
  morphun::Token *v1;
  uint64_t v3;

  v1 = (morphun::Token *)*((_QWORD *)this + 2);
  if (v1)
    morphun::Token::getNext(v1);
  morphun::TokenIterator::TokenIterator();
  return v3;
}

void sub_24920D248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_24920D2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24920D3B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

_QWORD *std::basic_string<char16_t>::basic_string[abi:ne180100](_QWORD *__dst, void *__src, unint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;

  if (a3 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  if (a3 >= 0xB)
  {
    v7 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB)
      v7 = a3 | 3;
    v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>((uint64_t)__dst, v7 + 1);
    __dst[1] = a3;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((_BYTE *)__dst + 23) = a3;
    v6 = __dst;
    if (!a3)
      goto LABEL_9;
  }
  memmove(v6, __src, 2 * a3);
LABEL_9:
  *((_WORD *)v6 + a3) = 0;
  return __dst;
}

void std::basic_string<char16_t>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(2 * a2);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_251A10998, MEMORY[0x24BEDAAF0]);
}

void sub_24920D510(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8B8] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x24BEDB748], MEMORY[0x24BEDABB8]);
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::basic_string<char16_t>::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

_QWORD *std::vector<unsigned short>::vector(_QWORD *a1, uint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<unsigned short>::__vallocate[abi:ne180100](a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 2 * a2);
    a1[1] = &v4[2 * a2];
  }
  return a1;
}

void sub_24920D678(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned short>::__vallocate[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 < 0)
    std::vector<unsigned short>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void std::vector<unsigned short>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void OUTLINED_FUNCTION_0_8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  void *v0;

  return objc_msgSend(v0, "enable_disambiguation_alternatives");
}

id OUTLINED_FUNCTION_3_6(id a1)
{
  return a1;
}

void sub_249210A8C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_249210C30(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_249210E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2492110CC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2492115A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_249211838(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_249211A7C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_249211CC0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_249211F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_24921238C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_249212F30(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_249214318(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2492152B4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_249215378(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_14_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

void OUTLINED_FUNCTION_0_9(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

const __CFString *_LTVoiceTypeRemoteServiceString(uint64_t a1)
{
  const __CFString *v1;

  v1 = &stru_251A15610;
  if (a1 == 2)
    v1 = CFSTR("female");
  if (a1 == 1)
    return CFSTR("male");
  else
    return v1;
}

uint64_t _LTVoiceTypeLocaleOverride(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  int v5;
  uint64_t v6;
  BOOL v7;
  NSObject *v8;
  __CFString *v10;
  __CFString *v11;
  __CFString *v12;
  __CFString *v13;
  int v15;
  void *v16;
  __int16 v17;
  __CFString *v18;
  __int16 v19;
  __CFString *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(a2, "_ltLocaleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(&unk_251A50A10, "valueForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "intValue");
  v6 = v5;

  if (v5)
    v7 = v5 == a1;
  else
    v7 = 1;
  if (v7)
  {
    v6 = a1;
  }
  else
  {
    v8 = _LTOSLogTTS();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      if (a1 == 2)
        v10 = CFSTR("female");
      else
        v10 = &stru_251A15610;
      if (a1 == 1)
        v10 = CFSTR("male");
      v11 = v10;
      if (v5 == 2)
        v12 = CFSTR("female");
      else
        v12 = &stru_251A15610;
      if (v5 == 1)
        v12 = CFSTR("male");
      v13 = v12;
      v15 = 138543874;
      v16 = v3;
      v17 = 2114;
      v18 = v11;
      v19 = 2114;
      v20 = v13;
      _os_log_impl(&dword_2491B9000, v8, OS_LOG_TYPE_INFO, "Voice type overridden for locale %{public}@ from %{public}@ to %{public}@", (uint8_t *)&v15, 0x20u);

    }
  }

  return v6;
}

uint64_t _LTPreferredVoiceTypeForLocale(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  v2 = +[_LTDTTSAssetService preferredVoiceType](_LTDTTSAssetService, "preferredVoiceType");
  if (!v2)
    v2 = 2;
  v3 = _LTVoiceTypeLocaleOverride(v2, v1);

  return v3;
}

void sub_249216E00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249216F8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492170CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492172AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921742C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921761C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249217734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249217808(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492178DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492179B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249217A84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249217C44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249217EB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492181F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921830C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492183E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492184B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218588(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921865C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218730(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218804(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492188D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492189AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218A80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218B54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218C28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218CFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218DD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218EA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249218F78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921904C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249219120(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492191F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492192C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921939C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249219470(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249219544(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249219618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492196EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249219CBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921A638(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921A7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921A9C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921AAE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921ABB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921ACD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921AE08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921AF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921B13C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921B254(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921B328(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921B444(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921B57C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921B6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921B8B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921B9C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921BA9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921BBB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921BCF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921BE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921C024(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921C13C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921C210(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921C32C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921C464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921C5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921C798(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921C8B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921C984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921CAA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921CBD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921CD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921CF0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921D024(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921D0F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921D214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921D34C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921D490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921D680(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921D798(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921D86C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921D988(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921DAC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921DC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921DDF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921DF0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921DFE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E0B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E188(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E25C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E330(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E4D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E5AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E680(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E754(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E828(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E8FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921E9D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921EAA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921EB78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921EC4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921ED20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921EDF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921F28C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921F9E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921FB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24921FD58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24921FE70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24921FF44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249220018(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492200EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492201C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249220294(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249220368(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922043C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249220510(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492205E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492206B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922078C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249220860(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249220934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249220CC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922125C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492213D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492215C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492216D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492217AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221880(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221A28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221AFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221BD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221CA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221D78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221E4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221F20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249221FF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492220C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922219C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249222270(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249222344(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249222418(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492224EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492225C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249222694(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249222B60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249223310(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922349C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24922368C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492237A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249223878(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922394C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249223A20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249223AF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249223BC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249223C9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249223EC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492241E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922433C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24922452C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249224644(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249224718(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249224834(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922496C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249224AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249224CA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249224DB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249224E8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249224F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249225034(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492251C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492253B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249225504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492256F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24922580C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492258E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492259FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249225B34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249225C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249225E68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249225F80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249226054(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249226170(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492262A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492263EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492265DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492266F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492267C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492268E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249226A1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249226B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249226D50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249226E68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249226F3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249227058(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249227190(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492272D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492274C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492275DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492276B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492277CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249227904(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249227A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249227C38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249227D50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249227E24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249227EF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249227FCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492280A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249228260(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492284D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249228620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249228810(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249228928(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492289FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249228B18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249228C50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249228D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249228F84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24922909C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249229170(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922928C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492293C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249229508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492296F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249229810(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492298E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492299B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249229A8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249229C18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249229E10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249229F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24922A14C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24922A220(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A2E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A3E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A4B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A58C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A660(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A808(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A8DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922A9B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922AA84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922AB58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922AC2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922AD00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922ADD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922AEA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922AF7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B050(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B1F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B2CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B3A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B548(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B61C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922B6F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922BC8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922C614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24922C7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateString(apple::aiml::flatbuffers2::FlatBufferBuilder *this, const char *a2, unint64_t a3)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, a3 + 1, 4uLL);
  apple::aiml::flatbuffers2::vector_downward::fill((char *)this, 1uLL);
  apple::aiml::flatbuffers2::vector_downward::push(this, (const unsigned __int8 *)a2, a3);
  apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)this, a3);
  return (*((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10));
}

char *apple::aiml::flatbuffers2::vector_downward::fill(char *this, unint64_t a2)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = this;
  v4 = *((_QWORD *)this + 6);
  if (v4 - *((_QWORD *)this + 7) >= a2)
  {
    *((_QWORD *)this + 6) = v4 - a2;
    if (!a2)
      return this;
  }
  else
  {
    this = apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)this, a2);
    *((_QWORD *)v3 + 6) -= a2;
  }
  v5 = 0;
  do
    *(_BYTE *)(*((_QWORD *)v3 + 6) + v5++) = 0;
  while (a2 != v5);
  return this;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 4uLL);
  v4 = *(_QWORD *)(a1 + 48);
  if ((unint64_t)(v4 - *(_QWORD *)(a1 + 56)) <= 3)
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)a1, 4uLL);
    v4 = *(_QWORD *)(a1 + 48);
  }
  *(_DWORD *)(v4 - 4) = a2;
  v5 = v4 - 4;
  *(_QWORD *)(a1 + 48) = v5;
  return (*(_DWORD *)(a1 + 32) - v5 + *(_DWORD *)(a1 + 40));
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(apple::aiml::flatbuffers2::FlatBufferBuilder *this, uint64_t a2, unint64_t a3)
{
  if (*((_QWORD *)this + 9) < a3)
    *((_QWORD *)this + 9) = a3;
  return apple::aiml::flatbuffers2::vector_downward::fill((char *)this, (a3 - 1) & (-a2 - (*((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10))));
}

char *apple::aiml::flatbuffers2::vector_downward::reallocate(apple::aiml::flatbuffers2::vector_downward *this, unint64_t a2)
{
  char *v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *result;
  char *v11;
  char *v12;

  v4 = *((_QWORD *)this + 4);
  v3 = (char *)*((_QWORD *)this + 5);
  v5 = &v3[v4 - *((_QWORD *)this + 6)];
  v6 = *((_QWORD *)this + 7) - (_QWORD)v3;
  if (v4)
    v7 = v4 >> 1;
  else
    v7 = *((_QWORD *)this + 2);
  if (v7 <= a2)
    v7 = a2;
  v8 = (*((_QWORD *)this + 3) + v4 + v7 - 1) & -*((_QWORD *)this + 3);
  *((_QWORD *)this + 4) = v8;
  v9 = *(_QWORD *)this;
  if (!v3)
  {
    if (v9)
      result = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 16))(v9, v8);
    else
      result = (char *)operator new[]();
    goto LABEL_13;
  }
  if (v9)
  {
    result = (char *)(*(uint64_t (**)(uint64_t, char *, unint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v9 + 32))(v9, v3, v4, v8, v5, v6);
LABEL_13:
    v11 = result;
    goto LABEL_14;
  }
  v11 = (char *)operator new[]();
  memcpy(&v11[v8 - v5], &v3[v4 - v5], v5);
  memcpy(v11, v3, v6);
  result = (char *)MEMORY[0x2495AE504](v3, 0x1000C8077774924);
LABEL_14:
  v12 = &v11[*((_QWORD *)this + 4) - v5];
  *((_QWORD *)this + 5) = v11;
  *((_QWORD *)this + 6) = v12;
  *((_QWORD *)this + 7) = &v11[v6];
  return result;
}

_QWORD *apple::aiml::flatbuffers2::vector_downward::push(_QWORD *this, const unsigned __int8 *__src, unint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;

  if (a3)
  {
    v5 = this;
    v6 = this[6];
    if (v6 - this[7] < a3)
    {
      apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)this, a3);
      v6 = v5[6];
    }
    v5[6] = v6 - a3;
    return memcpy((void *)(v6 - a3), __src, a3);
  }
  return this;
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::Align(apple::aiml::flatbuffers2::FlatBufferBuilder *this, unint64_t a2)
{
  if (*((_QWORD *)this + 9) < a2)
    *((_QWORD *)this + 9) = a2;
  return apple::aiml::flatbuffers2::vector_downward::fill((char *)this, (a2 - 1) & -(uint64_t)(*((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10)));
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned int>(char *result, uint64_t a2, int a3, int a4)
{
  char *v5;
  unsigned int v6;

  v5 = result;
  if (a3 != a4 || result[80])
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)result, a3);
    return apple::aiml::flatbuffers2::FlatBufferBuilder::TrackField(v5, a2, v6);
  }
  return result;
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::TrackField(char *this, uint64_t a2, unsigned int a3)
{
  char *v5;
  unint64_t *v6;
  unsigned int v7;

  v5 = this;
  v6 = (unint64_t *)*((_QWORD *)this + 7);
  if (*((_QWORD *)this + 6) - (_QWORD)v6 <= 7uLL)
  {
    this = apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)this, 8uLL);
    v6 = (unint64_t *)*((_QWORD *)v5 + 7);
  }
  *v6 = a3 | (unint64_t)(a2 << 32);
  *((_QWORD *)v5 + 7) += 8;
  ++*((_DWORD *)v5 + 16);
  v7 = *((unsigned __int16 *)v5 + 34);
  if (v7 <= a2)
    LOWORD(v7) = a2;
  *((_WORD *)v5 + 34) = v7;
  return this;
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::AddOffset<apple::aiml::flatbuffers2::String>(char *result, uint64_t a2, int a3)
{
  char *v5;

  if (a3)
  {
    v5 = result;
    apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)result, 4uLL);
    return apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned int>(v5, a2, *((_DWORD *)v5 + 8) - *((_DWORD *)v5 + 12) + *((_DWORD *)v5 + 10) - a3 + 4, 0);
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable(apple::aiml::flatbuffers2::FlatBufferBuilder *this, __int16 a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned __int16 v7;
  unint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  char *v11;
  _WORD *v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  size_t v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;

  v4 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)this, 0);
  if ((unsigned __int16)(*((_WORD *)this + 34) + 2) <= 4u)
    v5 = 4;
  else
    v5 = (unsigned __int16)(*((_WORD *)this + 34) + 2);
  *((_WORD *)this + 34) = v5;
  v6 = *((_QWORD *)this + 6);
  if (v6 - *((_QWORD *)this + 7) < v5)
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate(this, v5);
    v6 = *((_QWORD *)this + 6);
  }
  *((_QWORD *)this + 6) = v6 - v5;
  bzero((void *)(v6 - v5), v5);
  v7 = v4 - a2;
  v9 = (unsigned __int16 *)*((_QWORD *)this + 6);
  v8 = *((_QWORD *)this + 7);
  v9[1] = v7;
  *v9 = *((_WORD *)this + 34);
  v10 = *((unsigned int *)this + 16);
  v11 = (char *)(v8 - 8 * v10);
  if ((_DWORD)v10)
  {
    v12 = (_WORD *)(v8 - 8 * v10);
    do
    {
      *(unsigned __int16 *)((char *)v9 + (unsigned __int16)v12[2]) = v4 - *v12;
      v12 += 4;
    }
    while ((unint64_t)v12 < v8);
  }
  *((_QWORD *)this + 7) = v11;
  *((_DWORD *)this + 16) = 0;
  *((_WORD *)this + 34) = 0;
  v13 = *((_QWORD *)this + 4);
  v14 = *((_QWORD *)this + 5);
  v15 = v13 - (_DWORD)v9 + v14;
  if (*((_BYTE *)this + 81) && v14 < (unint64_t)v11)
  {
    v16 = *v9;
    v17 = v14 + v13;
    v18 = (unsigned int *)*((_QWORD *)this + 5);
    while (1)
    {
      v19 = *v18;
      if ((_DWORD)v16 == *(unsigned __int16 *)(v17 - v19) && !memcmp((const void *)(v17 - v19), v9, v16))
        break;
      if (++v18 >= (unsigned int *)v11)
      {
        v15 = v13 - (_DWORD)v9 + v14;
        goto LABEL_17;
      }
    }
    v9 = (unsigned __int16 *)((char *)v9 + (v13 - (_DWORD)v9 + v14 - v4));
    *((_QWORD *)this + 6) = v9;
    v15 = v19;
  }
LABEL_17:
  if (v15 == (_DWORD)v13 + (_DWORD)v14 - (_DWORD)v9)
  {
    if ((unint64_t)((char *)v9 - v11) <= 3)
    {
      apple::aiml::flatbuffers2::vector_downward::reallocate(this, 4uLL);
      v11 = (char *)*((_QWORD *)this + 7);
      v13 = *((_QWORD *)this + 4);
      v14 = *((_QWORD *)this + 5);
    }
    *(_DWORD *)v11 = v15;
    *((_QWORD *)this + 7) = v11 + 4;
  }
  *(_DWORD *)(v14 + v13 - v4) = v15 - v4;
  *((_BYTE *)this + 70) = 0;
  return v4;
}

void apple::aiml::flatbuffers2::vector_downward::~vector_downward(apple::aiml::flatbuffers2::vector_downward *this)
{
  apple::aiml::flatbuffers2::vector_downward::clear_buffer(this);
  if (*((_BYTE *)this + 8) && *(_QWORD *)this)
    (*(void (**)(_QWORD))(**(_QWORD **)this + 8))(*(_QWORD *)this);
  *(_QWORD *)this = 0;
  *((_BYTE *)this + 8) = 0;
}

_QWORD *apple::aiml::flatbuffers2::vector_downward::clear_buffer(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  v2 = this[5];
  if (v2)
  {
    v3 = *this;
    if (*v1)
      this = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 24))(v3);
    else
      this = (_QWORD *)MEMORY[0x2495AE504](v2, 0x1000C8077774924);
  }
  v1[5] = 0;
  return this;
}

void apple::aiml::flatbuffers2::DetachedBuffer::~DetachedBuffer(apple::aiml::flatbuffers2::DetachedBuffer *this)
{
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;

  v3 = (_OWORD *)((char *)this + 16);
  v2 = *((_QWORD *)this + 2);
  if (v2)
  {
    v4 = *(_QWORD *)this;
    if (*(_QWORD *)this)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    else
      MEMORY[0x2495AE504](v2, 0x1000C8077774924);
  }
  if (*((_BYTE *)this + 8) && *(_QWORD *)this)
    (*(void (**)(_QWORD))(**(_QWORD **)this + 8))(*(_QWORD *)this);
  *(_QWORD *)this = 0;
  *((_BYTE *)this + 8) = 0;
  *v3 = 0u;
  v3[1] = 0u;
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder(apple::aiml::flatbuffers2::FlatBufferBuilder *this)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 11);
  if (v2)
  {
    std::__tree<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>,apple::aiml::flatbuffers2::FlatBufferBuilder::StringOffsetCompare,std::allocator<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>>>::destroy(*((_QWORD *)this + 11), *(_QWORD **)(v2 + 8));
    MEMORY[0x2495AE51C](v2, 0x1060C40C2B13FB5);
  }
  apple::aiml::flatbuffers2::vector_downward::~vector_downward(this);
}

void std::__tree<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>,apple::aiml::flatbuffers2::FlatBufferBuilder::StringOffsetCompare,std::allocator<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>>>::destroy(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    std::__tree<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>,apple::aiml::flatbuffers2::FlatBufferBuilder::StringOffsetCompare,std::allocator<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>>>::destroy(a1, *a2);
    std::__tree<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>,apple::aiml::flatbuffers2::FlatBufferBuilder::StringOffsetCompare,std::allocator<apple::aiml::flatbuffers2::Offset<apple::aiml::flatbuffers2::String>>>::destroy(a1, a2[1]);
    operator delete(a2);
  }
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned char>(char *result, uint64_t a2, int a3, int a4)
{
  char *v5;
  unsigned int v6;

  v5 = result;
  if (a3 != a4 || result[80])
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned char>((uint64_t)result, a3);
    return apple::aiml::flatbuffers2::FlatBufferBuilder::TrackField(v5, a2, v6);
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned char>(uint64_t a1, char a2)
{
  uint64_t v4;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 1uLL);
  v4 = *(_QWORD *)(a1 + 48);
  if (v4 == *(_QWORD *)(a1 + 56))
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)a1, 1uLL);
    v4 = *(_QWORD *)(a1 + 48);
  }
  *(_QWORD *)(a1 + 48) = v4 - 1;
  *(_BYTE *)(v4 - 1) = a2;
  return (*(_DWORD *)(a1 + 32) - *(_DWORD *)(a1 + 48) + *(_DWORD *)(a1 + 40));
}

BOOL siri::speech::qss_fb::ErrorMessage::Verify(siri::speech::qss_fb::ErrorMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Table::VerifyOffset(apple::aiml::flatbuffers2::Table *this, const apple::aiml::flatbuffers2::Verifier *a2, unsigned int a3)
{
  unsigned __int16 *v3;
  uint64_t v4;

  v3 = (unsigned __int16 *)((char *)this - *(int *)this);
  return *v3 <= a3
      || (v4 = *(unsigned __int16 *)((char *)v3 + a3)) == 0
      || apple::aiml::flatbuffers2::Verifier::VerifyOffset(a2, (unint64_t)this + v4 - *(_QWORD *)a2) != 0;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyString(apple::aiml::flatbuffers2::Verifier *a1, const unsigned __int8 *a2)
{
  _BOOL8 result;
  unint64_t v4;
  unint64_t v6;

  if (!a2)
    return 1;
  v6 = 0;
  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a1, a2, 1uLL, &v6);
  if (result)
  {
    v4 = *((_QWORD *)a1 + 1);
    return v4 >= 2 && v4 - 1 >= v6 && *(_BYTE *)(*(_QWORD *)a1 + v6) == 0;
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyTableStart(apple::aiml::flatbuffers2::Verifier *this, const unsigned __int8 *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;

  v2 = *(_QWORD *)this;
  v3 = (unint64_t)&a2[-*(_QWORD *)this];
  if ((v3 & 3) != 0 && *((_BYTE *)this + 40))
    return 0;
  v4 = *((_QWORD *)this + 1);
  v5 = v4 >= 5 && v4 - 4 >= v3;
  if (!v5)
    return 0;
  v6 = *(int *)a2;
  v7 = *((_DWORD *)this + 5);
  v8 = *((_DWORD *)this + 4) + 1;
  *((_DWORD *)this + 4) = v8;
  v9 = *((_DWORD *)this + 6) + 1;
  *((_DWORD *)this + 6) = v9;
  if (v8 > v7 || v9 > *((_DWORD *)this + 7))
    return 0;
  v10 = v3 - v6;
  if ((v10 & 1) != 0)
  {
    v11 = 0;
    if (*((_BYTE *)this + 40) || v4 - 2 < v10)
      return v11;
  }
  else if (v4 - 2 < v10)
  {
    return 0;
  }
  v12 = *(unsigned __int16 *)(v2 + v10);
  if ((v12 & 1) != 0 && *((_BYTE *)this + 40))
    return 0;
  v5 = v4 >= v12;
  v14 = v4 - v12;
  return v14 != 0 && v5 && v14 >= v10;
}

uint64_t apple::aiml::flatbuffers2::Verifier::VerifyOffset(apple::aiml::flatbuffers2::Verifier *this, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;

  if ((a2 & 3) != 0 && *((_BYTE *)this + 40))
    return 0;
  v2 = *((_QWORD *)this + 1);
  if (v2 < 5 || v2 - 4 < a2)
    return 0;
  v4 = *(unsigned int *)(*(_QWORD *)this + a2);
  if ((int)v4 < 1)
    return 0;
  if (v2 - 1 >= v4 + a2)
    return v4;
  return 0;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(apple::aiml::flatbuffers2::Verifier *this, const unsigned __int8 *a2, unint64_t a3, unint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;

  v4 = (unint64_t)&a2[-*(_QWORD *)this];
  if ((v4 & 3) != 0 && *((_BYTE *)this + 40))
    return 0;
  v5 = *((_QWORD *)this + 1);
  if (v5 < 5 || v5 - 4 < v4)
    return 0;
  v7 = *(unsigned int *)a2;
  if (0x7FFFFFFF / a3 <= v7)
    return 0;
  v8 = v7 * a3 + 4;
  if (a4)
  {
    *a4 = v8 + v4;
    v5 = *((_QWORD *)this + 1);
  }
  v9 = v5 > v8;
  v10 = v5 - v8;
  return v9 && v10 >= v4;
}

BOOL siri::speech::qss_fb::ApgPronGuessMessage::Verify(siri::speech::qss_fb::ApgPronGuessMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartPronGuessRequest *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_28:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  else if (v8[3])
  {
    v10 = (siri::speech::qss_fb::ApgPronGuessMessage *)((char *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]));
    goto LABEL_12;
  }
  v10 = 0;
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_28;
  switch(*((_BYTE *)this + v11))
  {
    case 1:
      if (!v10 || siri::speech::schema_fb::StartPronGuessRequest::Verify(v10, a2))
        goto LABEL_28;
      goto LABEL_25;
    case 2:
      if (!v10 || siri::speech::schema_fb::AudioPacket::Verify(v10, a2))
        goto LABEL_28;
      goto LABEL_25;
    case 3:
      if (!v10 || siri::speech::schema_fb::FinishAudio::Verify(v10, a2))
        goto LABEL_28;
      goto LABEL_25;
    case 4:
      if (!v10 || siri::speech::schema_fb::CancelRequest::Verify(v10, a2))
        goto LABEL_28;
LABEL_25:
      result = 0;
      break;
    case 5:
      if (!v10)
        goto LABEL_28;
      result = siri::speech::schema_fb::PronGuessResponse::Verify(v10, a2);
      if (result)
        goto LABEL_28;
      break;
    default:
      goto LABEL_28;
  }
  return result;
}

BOOL siri::speech::schema_fb::StartPronGuessRequest::Verify(siri::speech::schema_fb::StartPronGuessRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  unint64_t v19;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 < 0xDu
                      || (v18 = v17[6]) == 0
                      || (result = 0, v19 = *((_QWORD *)a2 + 1), v19 >= 5)
                      && v19 - 4 >= (unint64_t)this + v18 - *(_QWORD *)a2)
                    {
                      --*((_DWORD *)a2 + 4);
                      return 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::AudioPacket::Verify(siri::speech::schema_fb::AudioPacket *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  const unsigned __int8 *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = (const unsigned __int8 *)(a2 + 1);
  do
  {
    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a1, &v5[*(unsigned int *)v5]);
    if (!result)
      break;
    ++v4;
    v5 += 4;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::FinishAudio::Verify(siri::speech::schema_fb::FinishAudio *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  _DWORD *v18;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (v8 = v5[3]) == 0
       || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 5) && v9 - 4 >= (unint64_t)this + v8 - *(_QWORD *)a2))
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
      if (result)
      {
        v10 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v10 < 9u
          || (v11 = v10[4]) == 0
          || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0)))
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
          if (result)
          {
            v12 = *(int *)this;
            v13 = -v12;
            v14 = (unsigned __int16 *)((char *)this - v12);
            if (*v14 >= 0xBu)
            {
              v15 = v14[5];
              if (v15)
              {
                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
                if (!result)
                  return result;
                v13 = -(uint64_t)*(int *)this;
              }
            }
            v16 = (unsigned __int16 *)((char *)this + v13);
            if (*v16 >= 0xBu && (v17 = v16[5]) != 0)
              v18 = (_DWORD *)((char *)this + v17 + *(unsigned int *)((char *)this + v17));
            else
              v18 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry>(a2, v18);
            if (result)
            {
              --*((_DWORD *)a2 + 4);
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry::Verify((siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry::Verify(siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::CancelRequest::Verify(siri::speech::schema_fb::CancelRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::PronGuessResponse::Verify(siri::speech::schema_fb::PronGuessResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  _DWORD *v35;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v20 < 0xFu
                          || (v21 = v20[7]) == 0
                          || (result = siri::speech::schema_fb::VocToken::Verify((siri::speech::schema_fb::PronGuessResponse *)((char *)this+ v21+ *(unsigned int *)((char *)this + v21)), a2)))
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                          if (result)
                          {
                            v22 = *(int *)this;
                            v23 = -v22;
                            v24 = (unsigned __int16 *)((char *)this - v22);
                            if (*v24 >= 0x11u)
                            {
                              v25 = v24[8];
                              if (v25)
                              {
                                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v25 + *(unsigned int *)((char *)this + v25), 4uLL, 0);
                                if (!result)
                                  return result;
                                v23 = -(uint64_t)*(int *)this;
                              }
                            }
                            v26 = (unsigned __int16 *)((char *)this + v23);
                            if (*v26 >= 0x11u && (v27 = v26[8]) != 0)
                              v28 = (_DWORD *)((char *)this + v27 + *(unsigned int *)((char *)this + v27));
                            else
                              v28 = 0;
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Pronunciation>(a2, v28);
                            if (result)
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                              if (result)
                              {
                                v29 = *(int *)this;
                                v30 = -v29;
                                v31 = (unsigned __int16 *)((char *)this - v29);
                                if (*v31 >= 0x13u)
                                {
                                  v32 = v31[9];
                                  if (v32)
                                  {
                                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v32+ *(unsigned int *)((char *)this + v32), 4uLL, 0);
                                    if (!result)
                                      return result;
                                    v30 = -(uint64_t)*(int *)this;
                                  }
                                }
                                v33 = (unsigned __int16 *)((char *)this + v30);
                                if (*v33 >= 0x13u && (v34 = v33[9]) != 0)
                                  v35 = (_DWORD *)((char *)this + v34 + *(unsigned int *)((char *)this + v34));
                                else
                                  v35 = 0;
                                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v35);
                                if (result)
                                {
                                  --*((_DWORD *)a2 + 4);
                                  return 1;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Pronunciation>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::Pronunciation::Verify((siri::speech::schema_fb::Pronunciation *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::VocToken::Verify(siri::speech::schema_fb::VocToken *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 < 7u
            || (v9 = v8[3]) == 0
            || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9), 1uLL, 0)))
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::Pronunciation::Verify(siri::speech::schema_fb::Pronunciation *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrRecognitionMessage::Verify(siri::speech::qss_fb::AsrRecognitionMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::AsrRecognitionMessage *)((char *)this
                                                              + v8[3]
                                                              + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::AsrRecognitionMessage_::VerifySessionMessageUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrRecognitionMessage_::VerifySessionMessageUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_53;
      return siri::speech::schema_fb::StartSpeechRequest::Verify(this, a1);
    case 2:
      if (!this)
        goto LABEL_53;
      return siri::speech::schema_fb::UserParameters::Verify(this, a1);
    case 3:
      if (!this)
        goto LABEL_53;
      return siri::speech::schema_fb::SetRequestOrigin::Verify(this, a1);
    case 4:
      if (!this)
        goto LABEL_53;
      return siri::speech::schema_fb::SetSpeechContext::Verify(this, a1);
    case 5:
      if (!this)
        goto LABEL_53;
      return siri::speech::schema_fb::SetSpeechProfile::Verify(this, a1);
    case 6:
      if (!this)
        goto LABEL_53;
      goto LABEL_13;
    case 7:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::AudioPacket::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::FinishAudio::Verify(this, a1);
      break;
    case 9:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::ResetServerEndpointer::Verify(this, a1);
      break;
    case 10:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::CheckForSpeechRequest::Verify(this, a1);
      break;
    case 11:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify(this, a1);
      break;
    case 12:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 13:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 14:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::PartialSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 15:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::UpdatedAcousticProfile::Verify(this, a1);
      break;
    case 16:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::EndPointLikelihood::Verify(this, a1);
      break;
    case 17:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::EndPointCandidate::Verify(this, a1);
      break;
    case 18:
      if (!this)
        goto LABEL_53;
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    case 19:
      if (!this)
        goto LABEL_53;
LABEL_13:
      result = siri::speech::schema_fb::SetEndpointerState::Verify(this, a1);
      break;
    case 20:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 21:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::MultiUserRecognitionCandidate::Verify(this, a1);
      break;
    case 22:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 23:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::ServerEndpointFeatures::Verify(this, a1);
      break;
    case 24:
      if (!this)
        goto LABEL_53;
      result = siri::speech::schema_fb::ClientSetupInfo::Verify(this, a1);
      break;
    case 25:
      if (!this)
        goto LABEL_53;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if ((_DWORD)result)
      {
        --*((_DWORD *)a1 + 4);
LABEL_53:
        result = 1;
      }
      break;
    default:
      goto LABEL_53;
  }
  return result;
}

BOOL siri::speech::schema_fb::StartSpeechRequest::Verify(siri::speech::schema_fb::StartSpeechRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  const unsigned __int8 *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  const unsigned __int8 *v28;
  unsigned __int16 *v29;
  uint64_t v30;
  const unsigned __int8 *v31;
  unsigned __int16 *v32;
  uint64_t v33;
  const unsigned __int8 *v34;
  unsigned __int16 *v35;
  unsigned int v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unsigned __int16 *v42;
  uint64_t v43;
  const unsigned __int8 *v44;
  unsigned __int16 *v45;
  unsigned int v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unsigned __int16 *v56;
  uint64_t v57;
  const unsigned __int8 *v58;
  unsigned __int16 *v59;
  uint64_t v60;
  const unsigned __int8 *v61;
  unsigned __int16 *v62;
  uint64_t v63;
  const unsigned __int8 *v64;
  unsigned __int16 *v65;
  unsigned int v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unsigned __int16 *v71;
  uint64_t v72;
  const unsigned __int8 *v73;
  unsigned __int16 *v74;
  uint64_t v75;
  unint64_t v76;
  unsigned __int16 *v77;
  uint64_t v78;
  const unsigned __int8 *v79;
  unsigned __int16 *v80;
  uint64_t v81;
  const unsigned __int8 *v82;
  unsigned __int16 *v83;
  uint64_t v84;
  const unsigned __int8 *v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int16 *v88;
  uint64_t v89;
  unsigned __int16 *v90;
  uint64_t v91;
  _DWORD *v92;
  unsigned __int16 *v93;
  uint64_t v94;
  unint64_t v95;
  unsigned __int16 *v96;
  uint64_t v97;
  const unsigned __int8 *v98;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    v18 = *v17;
                    if (v18 < 0xD
                      || (!v17[6]
                       || (result = 0, v19 = *((_QWORD *)a2 + 1), v19 >= 5)
                       && v19 - 4 >= (unint64_t)this + v17[6] - *(_QWORD *)a2)
                      && (v18 < 0xF
                       || (!v17[7]
                        || (result = 0, v20 = *((_QWORD *)a2 + 1), v20 >= 2)
                        && v20 - 1 >= (unint64_t)this + v17[7] - *(_QWORD *)a2)
                       && (v18 < 0x11
                        || (v21 = v17[8]) == 0
                        || (result = 0, v22 = *((_QWORD *)a2 + 1), v22 >= 2)
                        && v22 - 1 >= (unint64_t)this + v21 - *(_QWORD *)a2)))
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                      if (result)
                      {
                        v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v23 >= 0x13u && (v24 = v23[9]) != 0)
                          v25 = (const unsigned __int8 *)this + v24 + *(unsigned int *)((char *)this + v24);
                        else
                          v25 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v25);
                        if (result)
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                          if (result)
                          {
                            v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                            if (*v26 >= 0x15u && (v27 = v26[10]) != 0)
                              v28 = (const unsigned __int8 *)this + v27 + *(unsigned int *)((char *)this + v27);
                            else
                              v28 = 0;
                            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v28);
                            if (result)
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                              if (result)
                              {
                                v29 = (unsigned __int16 *)((char *)this - *(int *)this);
                                if (*v29 >= 0x17u && (v30 = v29[11]) != 0)
                                  v31 = (const unsigned __int8 *)this + v30 + *(unsigned int *)((char *)this + v30);
                                else
                                  v31 = 0;
                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v31);
                                if (result)
                                {
                                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x18u);
                                  if (result)
                                  {
                                    v32 = (unsigned __int16 *)((char *)this - *(int *)this);
                                    if (*v32 >= 0x19u && (v33 = v32[12]) != 0)
                                      v34 = (const unsigned __int8 *)this + v33 + *(unsigned int *)((char *)this + v33);
                                    else
                                      v34 = 0;
                                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v34);
                                    if (result)
                                    {
                                      v35 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      v36 = *v35;
                                      if (v36 < 0x1B)
                                        goto LABEL_197;
                                      if (!v35[13]
                                        || (result = 0, v37 = *((_QWORD *)a2 + 1), v37 >= 5)
                                        && v37 - 4 >= (unint64_t)this + v35[13] - *(_QWORD *)a2)
                                      {
                                        if (v36 < 0x1D
                                          || (!v35[14]
                                           || (result = 0, v38 = *((_QWORD *)a2 + 1), v38 >= 2)
                                           && v38 - 1 >= (unint64_t)this + v35[14] - *(_QWORD *)a2)
                                          && (v36 < 0x1F
                                           || (!v35[15]
                                            || (result = 0, v39 = *((_QWORD *)a2 + 1), v39 >= 2)
                                            && v39 - 1 >= (unint64_t)this + v35[15] - *(_QWORD *)a2)
                                           && (v36 < 0x21
                                            || (v40 = v35[16]) == 0
                                            || (result = 0, v41 = *((_QWORD *)a2 + 1), v41 >= 2)
                                            && v41 - 1 >= (unint64_t)this + v40 - *(_QWORD *)a2)))
                                        {
LABEL_197:
                                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x22u);
                                          if (result)
                                          {
                                            v42 = (unsigned __int16 *)((char *)this - *(int *)this);
                                            if (*v42 >= 0x23u && (v43 = v42[17]) != 0)
                                              v44 = (const unsigned __int8 *)this
                                                  + v43
                                                  + *(unsigned int *)((char *)this + v43);
                                            else
                                              v44 = 0;
                                            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v44);
                                            if (result)
                                            {
                                              v45 = (unsigned __int16 *)((char *)this - *(int *)this);
                                              v46 = *v45;
                                              if (v46 < 0x25)
                                                goto LABEL_198;
                                              if (!v45[18]
                                                || (result = 0, v47 = *((_QWORD *)a2 + 1), v47 >= 5)
                                                && v47 - 4 >= (unint64_t)this + v45[18] - *(_QWORD *)a2)
                                              {
                                                if (v46 < 0x27)
                                                  goto LABEL_198;
                                                if (!v45[19]
                                                  || (result = 0, v48 = *((_QWORD *)a2 + 1), v48 >= 5)
                                                  && v48 - 4 >= (unint64_t)this + v45[19] - *(_QWORD *)a2)
                                                {
                                                  if (v46 < 0x29)
                                                    goto LABEL_198;
                                                  if (!v45[20]
                                                    || (result = 0, v49 = *((_QWORD *)a2 + 1), v49 >= 2)
                                                    && v49 - 1 >= (unint64_t)this + v45[20] - *(_QWORD *)a2)
                                                  {
                                                    if (v46 < 0x2B)
                                                      goto LABEL_198;
                                                    if (!v45[21]
                                                      || (result = 0, v50 = *((_QWORD *)a2 + 1), v50 >= 2)
                                                      && v50 - 1 >= (unint64_t)this + v45[21] - *(_QWORD *)a2)
                                                    {
                                                      if (v46 < 0x2D)
                                                        goto LABEL_198;
                                                      if (!v45[22]
                                                        || (result = 0, v51 = *((_QWORD *)a2 + 1), v51 >= 2)
                                                        && v51 - 1 >= (unint64_t)this + v45[22] - *(_QWORD *)a2)
                                                      {
                                                        if (v46 < 0x2F
                                                          || (!v45[23]
                                                           || (result = 0, v52 = *((_QWORD *)a2 + 1), v52 >= 9)
                                                           && v52 - 8 >= (unint64_t)this
                                                                       + v45[23]
                                                                       - *(_QWORD *)a2)
                                                          && (v46 < 0x31
                                                           || (!v45[24]
                                                            || (result = 0, v53 = *((_QWORD *)a2 + 1), v53 >= 9)
                                                            && v53 - 8 >= (unint64_t)this
                                                                        + v45[24]
                                                                        - *(_QWORD *)a2)
                                                           && (v46 < 0x33
                                                            || (v54 = v45[25]) == 0
                                                            || (result = 0, v55 = *((_QWORD *)a2 + 1), v55 >= 2)
                                                            && v55 - 1 >= (unint64_t)this + v54 - *(_QWORD *)a2)))
                                                        {
LABEL_198:
                                                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x34u);
                                                          if (result)
                                                          {
                                                            v56 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                            if (*v56 >= 0x35u && (v57 = v56[26]) != 0)
                                                              v58 = (const unsigned __int8 *)this
                                                                  + v57
                                                                  + *(unsigned int *)((char *)this + v57);
                                                            else
                                                              v58 = 0;
                                                            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v58);
                                                            if (result)
                                                            {
                                                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x36u);
                                                              if (result)
                                                              {
                                                                v59 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                if (*v59 >= 0x37u && (v60 = v59[27]) != 0)
                                                                  v61 = (const unsigned __int8 *)this
                                                                      + v60
                                                                      + *(unsigned int *)((char *)this + v60);
                                                                else
                                                                  v61 = 0;
                                                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v61);
                                                                if (result)
                                                                {
                                                                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x38u);
                                                                  if (result)
                                                                  {
                                                                    v62 = (unsigned __int16 *)((char *)this
                                                                                             - *(int *)this);
                                                                    if (*v62 >= 0x39u && (v63 = v62[28]) != 0)
                                                                      v64 = (const unsigned __int8 *)this
                                                                          + v63
                                                                          + *(unsigned int *)((char *)this + v63);
                                                                    else
                                                                      v64 = 0;
                                                                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v64);
                                                                    if (result)
                                                                    {
                                                                      v65 = (unsigned __int16 *)((char *)this
                                                                                               - *(int *)this);
                                                                      v66 = *v65;
                                                                      if (v66 < 0x3B
                                                                        || (!v65[29]
                                                                         || (result = 0,
                                                                             v67 = *((_QWORD *)a2 + 1),
                                                                             v67 >= 5)
                                                                         && v67 - 4 >= (unint64_t)this
                                                                                     + v65[29]
                                                                                     - *(_QWORD *)a2)
                                                                        && (v66 < 0x3D
                                                                         || (!v65[30]
                                                                          || (result = 0,
                                                                              v68 = *((_QWORD *)a2 + 1),
                                                                              v68 >= 2)
                                                                          && v68 - 1 >= (unint64_t)this
                                                                                      + v65[30]
                                                                                      - *(_QWORD *)a2)
                                                                         && (v66 < 0x3F
                                                                          || (v69 = v65[31]) == 0
                                                                          || (result = 0,
                                                                              v70 = *((_QWORD *)a2 + 1),
                                                                              v70 >= 2)
                                                                          && v70 - 1 >= (unint64_t)this
                                                                                      + v69
                                                                                      - *(_QWORD *)a2)))
                                                                      {
                                                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x40u);
                                                                        if (result)
                                                                        {
                                                                          v71 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                          if (*v71 >= 0x41u && (v72 = v71[32]) != 0)
                                                                            v73 = (const unsigned __int8 *)this
                                                                                + v72
                                                                                + *(unsigned int *)((char *)this + v72);
                                                                          else
                                                                            v73 = 0;
                                                                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v73);
                                                                          if (result)
                                                                          {
                                                                            v74 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                            if (*v74 < 0x43u
                                                                              || (v75 = v74[33]) == 0
                                                                              || (result = 0,
                                                                                  v76 = *((_QWORD *)a2 + 1),
                                                                                  v76 >= 5)
                                                                              && v76 - 4 >= (unint64_t)this
                                                                                          + v75
                                                                                          - *(_QWORD *)a2)
                                                                            {
                                                                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x44u);
                                                                              if (result)
                                                                              {
                                                                                v77 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                                if (*v77 >= 0x45u
                                                                                  && (v78 = v77[34]) != 0)
                                                                                {
                                                                                  v79 = (const unsigned __int8 *)this
                                                                                      + v78
                                                                                      + *(unsigned int *)((char *)this + v78);
                                                                                }
                                                                                else
                                                                                {
                                                                                  v79 = 0;
                                                                                }
                                                                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v79);
                                                                                if (result)
                                                                                {
                                                                                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x46u);
                                                                                  if (result)
                                                                                  {
                                                                                    v80 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                                    if (*v80 >= 0x47u
                                                                                      && (v81 = v80[35]) != 0)
                                                                                    {
                                                                                      v82 = (const unsigned __int8 *)this
                                                                                          + v81
                                                                                          + *(unsigned int *)((char *)this + v81);
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      v82 = 0;
                                                                                    }
                                                                                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v82);
                                                                                    if (result)
                                                                                    {
                                                                                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x48u);
                                                                                      if (result)
                                                                                      {
                                                                                        v83 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                                        if (*v83 >= 0x49u
                                                                                          && (v84 = v83[36]) != 0)
                                                                                        {
                                                                                          v85 = (const unsigned __int8 *)this
                                                                                              + v84
                                                                                              + *(unsigned int *)((char *)this + v84);
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          v85 = 0;
                                                                                        }
                                                                                        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v85);
                                                                                        if (result)
                                                                                        {
                                                                                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x4Au);
                                                                                          if (result)
                                                                                          {
                                                                                            v86 = *(int *)this;
                                                                                            v87 = -v86;
                                                                                            v88 = (unsigned __int16 *)((char *)this - v86);
                                                                                            if (*v88 >= 0x4Bu)
                                                                                            {
                                                                                              v89 = v88[37];
                                                                                              if (v89)
                                                                                              {
                                                                                                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v89 + *(unsigned int *)((char *)this + v89), 4uLL, 0);
                                                                                                if (!result)
                                                                                                  return result;
                                                                                                v87 = -(uint64_t)*(int *)this;
                                                                                              }
                                                                                            }
                                                                                            v90 = (unsigned __int16 *)((char *)this + v87);
                                                                                            if (*v90 >= 0x4Bu
                                                                                              && (v91 = v90[37]) != 0)
                                                                                            {
                                                                                              v92 = (_DWORD *)((char *)this + v91 + *(unsigned int *)((char *)this + v91));
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              v92 = 0;
                                                                                            }
                                                                                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v92);
                                                                                            if (result)
                                                                                            {
                                                                                              v93 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                                              if (*v93 < 0x4Du
                                                                                                || (v94 = v93[38]) == 0
                                                                                                || (result = 0,
                                                                                                    v95 = *((_QWORD *)a2 + 1),
                                                                                                    v95 >= 5)
                                                                                                && v95 - 4 >= (unint64_t)this + v94 - *(_QWORD *)a2)
                                                                                              {
                                                                                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x4Eu);
                                                                                                if (result)
                                                                                                {
                                                                                                  v96 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                                                  if (*v96 >= 0x4Fu && (v97 = v96[39]) != 0)
                                                                                                    v98 = (const unsigned __int8 *)this + v97 + *(unsigned int *)((char *)this + v97);
                                                                                                  else
                                                                                                    v98 = 0;
                                                                                                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v98);
                                                                                                  if (result)
                                                                                                  {
                                                                                                    --*((_DWORD *)a2 + 4);
                                                                                                    return 1;
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::UserParameters::Verify((siri::speech::schema_fb::UserParameters *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::UserParameters::Verify(siri::speech::schema_fb::UserParameters *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SetRequestOrigin::Verify(siri::speech::schema_fb::SetRequestOrigin *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 9) && v7 - 8 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 9) && v8 - 8 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
       && (v6 < 9
        || (v9 = v5[4]) == 0
        || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 2) && v10 - 1 >= (unint64_t)this + v9 - *(_QWORD *)a2)))
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SetSpeechContext::Verify(siri::speech::schema_fb::SetSpeechContext *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;
  unsigned __int16 *v12;
  uint64_t v13;
  const unsigned __int8 *v14;
  unsigned __int16 *v15;
  uint64_t v16;
  const unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  _DWORD *v24;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v11);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v12 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (const unsigned __int8 *)this + v13 + *(unsigned int *)((char *)this + v13);
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v14);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v15 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v15 >= 9u && (v16 = v15[4]) != 0)
                v17 = (const unsigned __int8 *)this + v16 + *(unsigned int *)((char *)this + v16);
              else
                v17 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v17);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v18 = *(int *)this;
                  v19 = -v18;
                  v20 = (unsigned __int16 *)((char *)this - v18);
                  if (*v20 >= 0xBu)
                  {
                    v21 = v20[5];
                    if (v21)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21), 4uLL, 0);
                      if (!result)
                        return result;
                      v19 = -(uint64_t)*(int *)this;
                    }
                  }
                  v22 = (unsigned __int16 *)((char *)this + v19);
                  if (*v22 >= 0xBu && (v23 = v22[5]) != 0)
                    v24 = (_DWORD *)((char *)this + v23 + *(unsigned int *)((char *)this + v23));
                  else
                    v24 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ContextWithPronHints>(a2, v24);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ContextWithPronHints>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::ContextWithPronHints::Verify((siri::speech::schema_fb::ContextWithPronHints *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::ContextWithPronHints::Verify(siri::speech::schema_fb::ContextWithPronHints *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v14);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SetSpeechProfile::Verify(siri::speech::schema_fb::SetSpeechProfile *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  const unsigned __int8 *v17;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 < 9u
                || (v12 = v11[4]) == 0
                || (result = siri::speech::schema_fb::UserLanguageProfile::Verify((siri::speech::schema_fb::SetSpeechProfile *)((char *)this+ v12+ *(unsigned int *)((char *)this + v12)), a2)))
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v13 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v13 < 0xBu
                    || (v14 = v13[5]) == 0
                    || (result = siri::speech::schema_fb::UserAcousticProfile::Verify((siri::speech::schema_fb::SetSpeechProfile *)((char *)this+ v14+ *(unsigned int *)((char *)this + v14)), a2)))
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v15 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v15 >= 0xDu && (v16 = v15[6]) != 0)
                        v17 = (const unsigned __int8 *)this + v16 + *(unsigned int *)((char *)this + v16);
                      else
                        v17 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v17);
                      if (result)
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::UserLanguageProfile::Verify(siri::speech::schema_fb::UserLanguageProfile *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  const unsigned __int8 *v9;
  unsigned __int16 *v10;
  uint64_t v11;
  const unsigned __int8 *v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6), 1uLL, 0)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v7 >= 7u && (v8 = v7[3]) != 0)
            v9 = (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8);
          else
            v9 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v9);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v10 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v10 >= 9u && (v11 = v10[4]) != 0)
                v12 = (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11);
              else
                v12 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v12);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::UserAcousticProfile::Verify(siri::speech::schema_fb::UserAcousticProfile *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  const unsigned __int8 *v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 < 7u
            || (v9 = v8[3]) == 0
            || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9), 1uLL, 0)))
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v10 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v10 >= 9u && (v11 = v10[4]) != 0)
                v12 = (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11);
              else
                v12 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v12);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SetEndpointerState::Verify(siri::speech::schema_fb::SetEndpointerState *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::ResetServerEndpointer::Verify(siri::speech::schema_fb::ResetServerEndpointer *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 9) && v7 - 8 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::CheckForSpeechRequest::Verify(siri::speech::schema_fb::CheckForSpeechRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 9) && v7 - 8 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (v8 = v5[3]) == 0
       || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 9) && v9 - 8 >= (unint64_t)this + v8 - *(_QWORD *)a2))
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify(siri::speech::schema_fb::SetAlternateRecognitionSausage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionPhraseTokensAlternatives>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionPhraseTokensAlternatives>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RecognitionPhraseTokensAlternatives::Verify((siri::speech::schema_fb::RecognitionPhraseTokensAlternatives *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RecognitionPhraseTokensAlternatives::Verify(siri::speech::schema_fb::RecognitionPhraseTokensAlternatives *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;
  unsigned __int16 *v12;
  uint64_t v13;
  unint64_t v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionPhraseTokens>(a2, v11);
      if (result)
      {
        v12 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v12 < 7u
          || (v13 = v12[3]) == 0
          || (result = 0, v14 = *((_QWORD *)a2 + 1), v14 >= 2)
          && v14 - 1 >= (unint64_t)this + v13 - *(_QWORD *)a2)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionPhraseTokens>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RecognitionPhraseTokens::Verify((siri::speech::schema_fb::RecognitionPhraseTokens *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RecognitionPhraseTokens::Verify(siri::speech::schema_fb::RecognitionPhraseTokens *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionToken>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionToken>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RecognitionToken::Verify((siri::speech::schema_fb::RecognitionToken *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RecognitionToken::Verify(siri::speech::schema_fb::RecognitionToken *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  const unsigned __int8 *v18;
  unsigned __int16 *v19;
  uint64_t v20;
  const unsigned __int8 *v21;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
          goto LABEL_43;
        if (!v8[3]
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v8[3] - *(_QWORD *)a2)
        {
          if (v9 < 9)
            goto LABEL_43;
          if (!v8[4]
            || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
            && v11 - 4 >= (unint64_t)this + v8[4] - *(_QWORD *)a2)
          {
            if (v9 < 0xB
              || (!v8[5]
               || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 5)
               && v12 - 4 >= (unint64_t)this + v8[5] - *(_QWORD *)a2)
              && (v9 < 0xD
               || (!v8[6]
                || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
                && v13 - 4 >= (unint64_t)this + v8[6] - *(_QWORD *)a2)
               && (v9 < 0xF
                || (v14 = v8[7]) == 0
                || (result = 0, v15 = *((_QWORD *)a2 + 1), v15 >= 2)
                && v15 - 1 >= (unint64_t)this + v14 - *(_QWORD *)a2)))
            {
LABEL_43:
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
              if (result)
              {
                v16 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v16 >= 0x11u && (v17 = v16[8]) != 0)
                  v18 = (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17);
                else
                  v18 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v18);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                  if (result)
                  {
                    v19 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v19 >= 0x13u && (v20 = v19[9]) != 0)
                      v21 = (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20);
                    else
                      v21 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v21);
                    if (result)
                    {
                      --*((_DWORD *)a2 + 4);
                      return 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify(siri::speech::schema_fb::FinalSpeechRecognitionResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned __int16 *v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  const unsigned __int8 *v35;
  unsigned __int16 *v36;
  uint64_t v37;
  unsigned __int16 *v38;
  uint64_t v39;
  const unsigned __int8 *v40;
  unsigned __int16 *v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = *(int *)this;
                    v18 = -v17;
                    v19 = (unsigned __int16 *)((char *)this - v17);
                    if (*v19 >= 0xDu)
                    {
                      v20 = v19[6];
                      if (v20)
                      {
                        result = siri::speech::schema_fb::RecognitionResult::Verify((siri::speech::schema_fb::FinalSpeechRecognitionResponse *)((char *)this+ v20+ *(unsigned int *)((char *)this + v20)), a2);
                        if (!result)
                          return result;
                        v18 = -(uint64_t)*(int *)this;
                      }
                    }
                    v21 = (unsigned __int16 *)((char *)this + v18);
                    if (*v21 < 0xFu
                      || (v22 = v21[7]) == 0
                      || (result = 0, v23 = *((_QWORD *)a2 + 1), v23 >= 5)
                      && v23 - 4 >= (unint64_t)this + v22 - *(_QWORD *)a2)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                      if (result)
                      {
                        v24 = *(int *)this;
                        v25 = -v24;
                        v26 = (unsigned __int16 *)((char *)this - v24);
                        if (*v26 >= 0x11u)
                        {
                          v27 = v26[8];
                          if (v27)
                          {
                            result = siri::speech::schema_fb::AudioAnalytics::Verify((siri::speech::schema_fb::FinalSpeechRecognitionResponse *)((char *)this+ v27+ *(unsigned int *)((char *)this + v27)), a2);
                            if (!result)
                              return result;
                            v25 = -(uint64_t)*(int *)this;
                          }
                        }
                        v28 = (unsigned __int16 *)((char *)this + v25);
                        v29 = *v28;
                        if (v29 < 0x13
                          || (!v28[9]
                           || (result = 0, v30 = *((_QWORD *)a2 + 1), v30 >= 5)
                           && v30 - 4 >= (unint64_t)this + v28[9] - *(_QWORD *)a2)
                          && (v29 < 0x15
                           || (v31 = v28[10]) == 0
                           || (result = 0, v32 = *((_QWORD *)a2 + 1), v32 >= 9)
                           && v32 - 8 >= (unint64_t)this + v31 - *(_QWORD *)a2))
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                          if (result)
                          {
                            v33 = (unsigned __int16 *)((char *)this - *(int *)this);
                            if (*v33 >= 0x17u && (v34 = v33[11]) != 0)
                              v35 = (const unsigned __int8 *)this + v34 + *(unsigned int *)((char *)this + v34);
                            else
                              v35 = 0;
                            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v35);
                            if (result)
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x18u);
                              if (result)
                              {
                                v36 = (unsigned __int16 *)((char *)this - *(int *)this);
                                if (*v36 < 0x19u
                                  || (v37 = v36[12]) == 0
                                  || (result = siri::speech::schema_fb::LatnnMitigatorResult::Verify((siri::speech::schema_fb::FinalSpeechRecognitionResponse *)((char *)this + v37 + *(unsigned int *)((char *)this + v37)), a2)))
                                {
                                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Au);
                                  if (result)
                                  {
                                    v38 = (unsigned __int16 *)((char *)this - *(int *)this);
                                    if (*v38 >= 0x1Bu && (v39 = v38[13]) != 0)
                                      v40 = (const unsigned __int8 *)this + v39 + *(unsigned int *)((char *)this + v39);
                                    else
                                      v40 = 0;
                                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v40);
                                    if (result)
                                    {
                                      v41 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      v42 = *v41;
                                      if (v42 < 0x1D
                                        || (!v41[14]
                                         || (result = 0, v43 = *((_QWORD *)a2 + 1), v43 >= 2)
                                         && v43 - 1 >= (unint64_t)this + v41[14] - *(_QWORD *)a2)
                                        && (v42 < 0x1F
                                         || (v44 = v41[15]) == 0
                                         || (result = 0, v45 = *((_QWORD *)a2 + 1), v45 >= 2)
                                         && v45 - 1 >= (unint64_t)this + v44 - *(_QWORD *)a2))
                                      {
                                        --*((_DWORD *)a2 + 4);
                                        return 1;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::RecognitionResult::Verify(siri::speech::schema_fb::RecognitionResult *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unsigned __int16 *v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned __int16 *v27;
  uint64_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int16 *v32;
  uint64_t v33;
  unsigned __int16 *v34;
  uint64_t v35;
  _DWORD *v36;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify((siri::speech::schema_fb::RecognitionResult *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v7 < 7u
            || (v8 = v7[3]) == 0
            || (result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify((siri::speech::schema_fb::RecognitionResult *)((char *)this+ v8+ *(unsigned int *)((char *)this + v8)), a2)))
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v9 = *(int *)this;
              v10 = -v9;
              v11 = (unsigned __int16 *)((char *)this - v9);
              if (*v11 >= 9u)
              {
                v12 = v11[4];
                if (v12)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12), 4uLL, 0);
                  if (!result)
                    return result;
                  v10 = -(uint64_t)*(int *)this;
                }
              }
              v13 = (unsigned __int16 *)((char *)this + v10);
              if (*v13 >= 9u && (v14 = v13[4]) != 0)
                v15 = (_DWORD *)((char *)this + v14 + *(unsigned int *)((char *)this + v14));
              else
                v15 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionChoice>(a2, v15);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v16 = *(int *)this;
                  v17 = -v16;
                  v18 = (unsigned __int16 *)((char *)this - v16);
                  if (*v18 >= 0xBu)
                  {
                    v19 = v18[5];
                    if (v19)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v19 + *(unsigned int *)((char *)this + v19), 4uLL, 0);
                      if (!result)
                        return result;
                      v17 = -(uint64_t)*(int *)this;
                    }
                  }
                  v20 = (unsigned __int16 *)((char *)this + v17);
                  if (*v20 >= 0xBu && (v21 = v20[5]) != 0)
                    v22 = (_DWORD *)((char *)this + v21 + *(unsigned int *)((char *)this + v21));
                  else
                    v22 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionChoice>(a2, v22);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v23 = *(int *)this;
                      v24 = -v23;
                      v25 = (unsigned __int16 *)((char *)this - v23);
                      if (*v25 >= 0xDu)
                      {
                        v26 = v25[6];
                        if (v26)
                        {
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v26 + *(unsigned int *)((char *)this + v26), 4uLL, 0);
                          if (!result)
                            return result;
                          v24 = -(uint64_t)*(int *)this;
                        }
                      }
                      v27 = (unsigned __int16 *)((char *)this + v24);
                      if (*v27 >= 0xDu && (v28 = v27[6]) != 0)
                        v29 = (_DWORD *)((char *)this + v28 + *(unsigned int *)((char *)this + v28));
                      else
                        v29 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ItnAlignment>(a2, v29);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v30 = *(int *)this;
                          v31 = -v30;
                          v32 = (unsigned __int16 *)((char *)this - v30);
                          if (*v32 >= 0xFu)
                          {
                            v33 = v32[7];
                            if (v33)
                            {
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v33 + *(unsigned int *)((char *)this + v33), 4uLL, 0);
                              if (!result)
                                return result;
                              v31 = -(uint64_t)*(int *)this;
                            }
                          }
                          v34 = (unsigned __int16 *)((char *)this + v31);
                          if (*v34 >= 0xFu && (v35 = v34[7]) != 0)
                            v36 = (_DWORD *)((char *)this + v35 + *(unsigned int *)((char *)this + v35));
                          else
                            v36 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ChoiceAlignment>(a2, v36);
                          if (result)
                          {
                            --*((_DWORD *)a2 + 4);
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionChoice>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RecognitionChoice::Verify((siri::speech::schema_fb::RecognitionChoice *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ItnAlignment>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::ItnAlignment::Verify((siri::speech::schema_fb::ItnAlignment *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ChoiceAlignment>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::ChoiceAlignment::Verify((siri::speech::schema_fb::ChoiceAlignment *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RecognitionChoice::Verify(siri::speech::schema_fb::RecognitionChoice *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 < 7u
        || (v10 = v9[3]) == 0
        || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
        && v11 - 4 >= (unint64_t)this + v10 - *(_QWORD *)a2)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::ItnAlignment::Verify(siri::speech::schema_fb::ItnAlignment *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5)
      goto LABEL_18;
    if (!v5[2]
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
    {
      if (v6 < 7
        || (!v5[3]
         || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 5)
         && v8 - 4 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
        && (v6 < 9
         || (!v5[4]
          || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 5)
          && v9 - 4 >= (unint64_t)this + v5[4] - *(_QWORD *)a2)
         && (v6 < 0xB
          || (v10 = v5[5]) == 0
          || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
          && v11 - 4 >= (unint64_t)this + v10 - *(_QWORD *)a2)))
      {
LABEL_18:
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::ChoiceAlignment::Verify(siri::speech::schema_fb::ChoiceAlignment *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6), 4uLL, 0)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RepeatedItnAlignment>(a2, v13);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RepeatedItnAlignment>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RepeatedItnAlignment::Verify((siri::speech::schema_fb::RepeatedItnAlignment *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RepeatedItnAlignment::Verify(siri::speech::schema_fb::RepeatedItnAlignment *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ItnAlignment>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::AudioAnalytics::Verify(siri::speech::schema_fb::AudioAnalytics *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  _DWORD *v18;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry>(a2, v11);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v12 = *(int *)this;
          v13 = -v12;
          v14 = (unsigned __int16 *)((char *)this - v12);
          if (*v14 >= 7u)
          {
            v15 = v14[3];
            if (v15)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
              if (!result)
                return result;
              v13 = -(uint64_t)*(int *)this;
            }
          }
          v16 = (unsigned __int16 *)((char *)this + v13);
          if (*v16 >= 7u && (v17 = v16[3]) != 0)
            v18 = (_DWORD *)((char *)this + v17 + *(unsigned int *)((char *)this + v17));
          else
            v18 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioAnalytics_::AcousticFeaturesEntry>(a2, v18);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioAnalytics_::AcousticFeaturesEntry>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::AudioAnalytics_::AcousticFeaturesEntry::Verify((siri::speech::schema_fb::AudioAnalytics_::AcousticFeaturesEntry *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::AudioAnalytics_::AcousticFeaturesEntry::Verify(siri::speech::schema_fb::AudioAnalytics_::AcousticFeaturesEntry *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 < 7u
            || (v9 = v8[3]) == 0
            || (result = siri::speech::schema_fb::RecognitionChoice::Verify((siri::speech::schema_fb::AudioAnalytics_::AcousticFeaturesEntry *)((char *)this+ v9+ *(unsigned int *)((char *)this + v9)), a2)))
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::LatnnMitigatorResult::Verify(siri::speech::schema_fb::LatnnMitigatorResult *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          v11 = (unsigned __int16 *)((char *)this - *(int *)this);
          v12 = *v11;
          if (v12 < 9)
            goto LABEL_28;
          if (!v11[4]
            || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 9)
            && v13 - 8 >= (unint64_t)this + v11[4] - *(_QWORD *)a2)
          {
            if (v12 < 0xB
              || (!v11[5]
               || (result = 0, v14 = *((_QWORD *)a2 + 1), v14 >= 9)
               && v14 - 8 >= (unint64_t)this + v11[5] - *(_QWORD *)a2)
              && (v12 < 0xD
               || (!v11[6]
                || (result = 0, v15 = *((_QWORD *)a2 + 1), v15 >= 5)
                && v15 - 4 >= (unint64_t)this + v11[6] - *(_QWORD *)a2)
               && (v12 < 0xF
                || (v16 = v11[7]) == 0
                || (result = 0, v17 = *((_QWORD *)a2 + 1), v17 >= 5)
                && v17 - 4 >= (unint64_t)this + v16 - *(_QWORD *)a2)))
            {
LABEL_28:
              --*((_DWORD *)a2 + 4);
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse::Verify(siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinalSpeechRecognitionResponse>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinalSpeechRecognitionResponse>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify((siri::speech::schema_fb::FinalSpeechRecognitionResponse *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::PartialSpeechRecognitionResponse::Verify(siri::speech::schema_fb::PartialSpeechRecognitionResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  const unsigned __int8 *v28;
  unsigned __int16 *v29;
  uint64_t v30;
  const unsigned __int8 *v31;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                      v21 = *v20;
                      if (v21 < 0xF
                        || (!v20[7]
                         || (result = 0, v22 = *((_QWORD *)a2 + 1), v22 >= 2)
                         && v22 - 1 >= (unint64_t)this + v20[7] - *(_QWORD *)a2)
                        && (v21 < 0x11
                         || (!v20[8]
                          || (result = 0, v23 = *((_QWORD *)a2 + 1), v23 >= 5)
                          && v23 - 4 >= (unint64_t)this + v20[8] - *(_QWORD *)a2)
                         && (v21 < 0x13
                          || (v24 = v20[9]) == 0
                          || (result = 0, v25 = *((_QWORD *)a2 + 1), v25 >= 5)
                          && v25 - 4 >= (unint64_t)this + v24 - *(_QWORD *)a2)))
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                        if (result)
                        {
                          v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v26 >= 0x15u && (v27 = v26[10]) != 0)
                            v28 = (const unsigned __int8 *)this + v27 + *(unsigned int *)((char *)this + v27);
                          else
                            v28 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v28);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                            if (result)
                            {
                              v29 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v29 >= 0x17u && (v30 = v29[11]) != 0)
                                v31 = (const unsigned __int8 *)this + v30 + *(unsigned int *)((char *)this + v30);
                              else
                                v31 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v31);
                              if (result)
                              {
                                --*((_DWORD *)a2 + 4);
                                return 1;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::UpdatedAcousticProfile::Verify(siri::speech::schema_fb::UpdatedAcousticProfile *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 < 0xDu
                      || (v18 = v17[6]) == 0
                      || (result = siri::speech::schema_fb::UserAcousticProfile::Verify((siri::speech::schema_fb::UpdatedAcousticProfile *)((char *)this+ v18+ *(unsigned int *)((char *)this + v18)), a2)))
                    {
                      --*((_DWORD *)a2 + 4);
                      return 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::EndPointLikelihood::Verify(siri::speech::schema_fb::EndPointLikelihood *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  unint64_t v19;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v17 < 0xDu
                    || (v18 = v17[6]) == 0
                    || (result = 0, v19 = *((_QWORD *)a2 + 1), v19 >= 5)
                    && v19 - 4 >= (unint64_t)this + v18 - *(_QWORD *)a2)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::EndPointCandidate::Verify(siri::speech::schema_fb::EndPointCandidate *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                  v18 = *v17;
                  if (v18 < 0xD
                    || (!v17[6]
                     || (result = 0, v19 = *((_QWORD *)a2 + 1), v19 >= 5)
                     && v19 - 4 >= (unint64_t)this + v17[6] - *(_QWORD *)a2)
                    && (v18 < 0xF
                     || (v20 = v17[7]) == 0
                     || (result = 0, v21 = *((_QWORD *)a2 + 1), v21 >= 5)
                     && v21 - 4 >= (unint64_t)this + v20 - *(_QWORD *)a2))
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::RecognitionCandidate::Verify(siri::speech::schema_fb::RecognitionCandidate *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  const unsigned __int8 *v21;
  unsigned __int16 *v22;
  unsigned int v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unsigned __int16 *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unsigned __int16 *v36;
  uint64_t v37;
  const unsigned __int8 *v38;
  unsigned __int16 *v39;
  uint64_t v40;
  unsigned __int16 *v41;
  uint64_t v42;
  const unsigned __int8 *v43;
  unsigned __int16 *v44;
  uint64_t v45;
  unint64_t v46;
  unsigned __int16 *v47;
  uint64_t v48;
  const unsigned __int8 *v49;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 < 0xDu
                      || (v18 = v17[6]) == 0
                      || (result = siri::speech::schema_fb::RecognitionResult::Verify((siri::speech::schema_fb::RecognitionCandidate *)((char *)this+ v18+ *(unsigned int *)((char *)this + v18)), a2)))
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v19 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v19 >= 0xFu && (v20 = v19[7]) != 0)
                          v21 = (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20);
                        else
                          v21 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v21);
                        if (result)
                        {
                          v22 = (unsigned __int16 *)((char *)this - *(int *)this);
                          v23 = *v22;
                          if (v23 < 0x11
                            || (!v22[8]
                             || (result = 0, v24 = *((_QWORD *)a2 + 1), v24 >= 9)
                             && v24 - 8 >= (unint64_t)this + v22[8] - *(_QWORD *)a2)
                            && (v23 < 0x13
                             || (v25 = v22[9]) == 0
                             || (result = 0, v26 = *((_QWORD *)a2 + 1), v26 >= 5)
                             && v26 - 4 >= (unint64_t)this + v25 - *(_QWORD *)a2))
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                            if (result)
                            {
                              v27 = *(int *)this;
                              v28 = -v27;
                              v29 = (unsigned __int16 *)((char *)this - v27);
                              if (*v29 >= 0x15u)
                              {
                                v30 = v29[10];
                                if (v30)
                                {
                                  result = siri::speech::schema_fb::AudioAnalytics::Verify((siri::speech::schema_fb::RecognitionCandidate *)((char *)this+ v30+ *(unsigned int *)((char *)this + v30)), a2);
                                  if (!result)
                                    return result;
                                  v28 = -(uint64_t)*(int *)this;
                                }
                              }
                              v31 = (unsigned __int16 *)((char *)this + v28);
                              v32 = *v31;
                              if (v32 < 0x17
                                || (!v31[11]
                                 || (result = 0, v33 = *((_QWORD *)a2 + 1), v33 >= 5)
                                 && v33 - 4 >= (unint64_t)this + v31[11] - *(_QWORD *)a2)
                                && (v32 < 0x19
                                 || (v34 = v31[12]) == 0
                                 || (result = 0, v35 = *((_QWORD *)a2 + 1), v35 >= 9)
                                 && v35 - 8 >= (unint64_t)this + v34 - *(_QWORD *)a2))
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Au);
                                if (result)
                                {
                                  v36 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v36 >= 0x1Bu && (v37 = v36[13]) != 0)
                                    v38 = (const unsigned __int8 *)this + v37 + *(unsigned int *)((char *)this + v37);
                                  else
                                    v38 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v38);
                                  if (result)
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Cu);
                                    if (result)
                                    {
                                      v39 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      if (*v39 < 0x1Du
                                        || (v40 = v39[14]) == 0
                                        || (result = siri::speech::schema_fb::LatnnMitigatorResult::Verify((siri::speech::schema_fb::RecognitionCandidate *)((char *)this + v40 + *(unsigned int *)((char *)this + v40)), a2)))
                                      {
                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Eu);
                                        if (result)
                                        {
                                          v41 = (unsigned __int16 *)((char *)this - *(int *)this);
                                          if (*v41 >= 0x1Fu && (v42 = v41[15]) != 0)
                                            v43 = (const unsigned __int8 *)this
                                                + v42
                                                + *(unsigned int *)((char *)this + v42);
                                          else
                                            v43 = 0;
                                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v43);
                                          if (result)
                                          {
                                            v44 = (unsigned __int16 *)((char *)this - *(int *)this);
                                            if (*v44 < 0x21u
                                              || (v45 = v44[16]) == 0
                                              || (result = 0, v46 = *((_QWORD *)a2 + 1), v46 >= 2)
                                              && v46 - 1 >= (unint64_t)this + v45 - *(_QWORD *)a2)
                                            {
                                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x22u);
                                              if (result)
                                              {
                                                v47 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                if (*v47 >= 0x23u && (v48 = v47[17]) != 0)
                                                  v49 = (const unsigned __int8 *)this
                                                      + v48
                                                      + *(unsigned int *)((char *)this + v48);
                                                else
                                                  v49 = 0;
                                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v49);
                                                if (result)
                                                {
                                                  --*((_DWORD *)a2 + 4);
                                                  return 1;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::MultiUserRecognitionCandidate::Verify(siri::speech::schema_fb::MultiUserRecognitionCandidate *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionCandidate>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionCandidate>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RecognitionCandidate::Verify((siri::speech::schema_fb::RecognitionCandidate *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RequestStatsResponse::Verify(siri::speech::schema_fb::RequestStatsResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  _DWORD *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  const unsigned __int8 *v28;
  unsigned __int16 *v29;
  uint64_t v30;
  const unsigned __int8 *v31;
  unsigned __int16 *v32;
  uint64_t v33;
  const unsigned __int8 *v34;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RequestStatsResponse_::BoolStat>(a2, v11);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v12 = *(int *)this;
          v13 = -v12;
          v14 = (unsigned __int16 *)((char *)this - v12);
          if (*v14 >= 7u)
          {
            v15 = v14[3];
            if (v15)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
              if (!result)
                return result;
              v13 = -(uint64_t)*(int *)this;
            }
          }
          v16 = (unsigned __int16 *)((char *)this + v13);
          if (*v16 >= 7u && (v17 = v16[3]) != 0)
            v18 = (_DWORD *)((char *)this + v17 + *(unsigned int *)((char *)this + v17));
          else
            v18 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry>(a2, v18);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v19 = *(int *)this;
              v20 = -v19;
              v21 = (unsigned __int16 *)((char *)this - v19);
              if (*v21 >= 9u)
              {
                v22 = v21[4];
                if (v22)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22), 4uLL, 0);
                  if (!result)
                    return result;
                  v20 = -(uint64_t)*(int *)this;
                }
              }
              v23 = (unsigned __int16 *)((char *)this + v20);
              if (*v23 >= 9u && (v24 = v23[4]) != 0)
                v25 = (_DWORD *)((char *)this + v24 + *(unsigned int *)((char *)this + v24));
              else
                v25 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RequestStatsResponse_::DoubleStat>(a2, v25);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v26 >= 0xBu && (v27 = v26[5]) != 0)
                    v28 = (const unsigned __int8 *)this + v27 + *(unsigned int *)((char *)this + v27);
                  else
                    v28 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v28);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v29 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v29 >= 0xDu && (v30 = v29[6]) != 0)
                        v31 = (const unsigned __int8 *)this + v30 + *(unsigned int *)((char *)this + v30);
                      else
                        v31 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v31);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v32 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v32 >= 0xFu && (v33 = v32[7]) != 0)
                            v34 = (const unsigned __int8 *)this + v33 + *(unsigned int *)((char *)this + v33);
                          else
                            v34 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v34);
                          if (result)
                          {
                            --*((_DWORD *)a2 + 4);
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RequestStatsResponse_::BoolStat>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RequestStatsResponse_::BoolStat::Verify((siri::speech::schema_fb::RequestStatsResponse_::BoolStat *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RequestStatsResponse_::DoubleStat>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RequestStatsResponse_::DoubleStat::Verify((siri::speech::schema_fb::RequestStatsResponse_::DoubleStat *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RequestStatsResponse_::BoolStat::Verify(siri::speech::schema_fb::RequestStatsResponse_::BoolStat *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 2)
          && v10 - 1 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::RequestStatsResponse_::DoubleStat::Verify(siri::speech::schema_fb::RequestStatsResponse_::DoubleStat *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 9)
          && v10 - 8 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::ServerEndpointFeatures::Verify(siri::speech::schema_fb::ServerEndpointFeatures *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  const unsigned __int8 *v21;
  unsigned __int16 *v22;
  uint64_t v23;
  const unsigned __int8 *v24;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5)
      goto LABEL_18;
    if (!v5[2]
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
    {
      if (v6 < 7
        || (!v5[3]
         || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 5)
         && v8 - 4 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
        && (v6 < 9
         || (!v5[4]
          || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 5)
          && v9 - 4 >= (unint64_t)this + v5[4] - *(_QWORD *)a2)
         && (v6 < 0xB
          || (v10 = v5[5]) == 0
          || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 9)
          && v11 - 8 >= (unint64_t)this + v10 - *(_QWORD *)a2)))
      {
LABEL_18:
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
        if (result)
        {
          v12 = *(int *)this;
          v13 = -v12;
          v14 = (unsigned __int16 *)((char *)this - v12);
          if (*v14 >= 0xDu)
          {
            v15 = v14[6];
            if (v15)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
              if (!result)
                return result;
              v13 = -(uint64_t)*(int *)this;
            }
          }
          v16 = (unsigned __int16 *)((char *)this + v13);
          if (*v16 < 0xFu
            || (v17 = v16[7]) == 0
            || (result = 0, v18 = *((_QWORD *)a2 + 1), v18 >= 9)
            && v18 - 8 >= (unint64_t)this + v17 - *(_QWORD *)a2)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
            if (result)
            {
              v19 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v19 >= 0x11u && (v20 = v19[8]) != 0)
                v21 = (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20);
              else
                v21 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v21);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                if (result)
                {
                  v22 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v22 >= 0x13u && (v23 = v22[9]) != 0)
                    v24 = (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23);
                  else
                    v24 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v24);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::ClientSetupInfo::Verify(siri::speech::schema_fb::ClientSetupInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  const unsigned __int8 *v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (v8 = v5[3]) == 0
       || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 2) && v9 - 1 >= (unint64_t)this + v8 - *(_QWORD *)a2))
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
      if (result)
      {
        v10 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v10 >= 9u && (v11 = v10[4]) != 0)
          v12 = (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11);
        else
          v12 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrErrorBlamerMessage::Verify(siri::speech::qss_fb::AsrErrorBlamerMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::ErrorBlamerRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::AsrErrorBlamerMessage *)((char *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::ErrorBlamerRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::ErrorBlamerResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::ErrorBlamerRequest::Verify(siri::speech::schema_fb::ErrorBlamerRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned __int16 *v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  _DWORD *v37;
  unsigned __int16 *v38;
  uint64_t v39;
  const unsigned __int8 *v40;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::StartSpeechRequest::Verify((siri::speech::schema_fb::ErrorBlamerRequest *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v13);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v14 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v14 >= 9u && (v15 = v14[4]) != 0)
                v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
              else
                v16 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v17 >= 0xBu && (v18 = v17[5]) != 0)
                    v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                  else
                    v19 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v20 < 0xDu
                        || (v21 = v20[6]) == 0
                        || (result = siri::speech::schema_fb::UserLanguageProfile::Verify((siri::speech::schema_fb::ErrorBlamerRequest *)((char *)this+ v21+ *(unsigned int *)((char *)this + v21)), a2)))
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v22 = *(int *)this;
                          v23 = -v22;
                          v24 = (unsigned __int16 *)((char *)this - v22);
                          if (*v24 >= 0xFu)
                          {
                            v25 = v24[7];
                            if (v25)
                            {
                              result = siri::speech::schema_fb::UserAcousticProfile::Verify((siri::speech::schema_fb::ErrorBlamerRequest *)((char *)this+ v25+ *(unsigned int *)((char *)this + v25)), a2);
                              if (!result)
                                return result;
                              v23 = -(uint64_t)*(int *)this;
                            }
                          }
                          v26 = (unsigned __int16 *)((char *)this + v23);
                          v27 = *v26;
                          if (v27 < 0x11
                            || (!v26[8]
                             || (result = 0, v28 = *((_QWORD *)a2 + 1), v28 >= 9)
                             && v28 - 8 >= (unint64_t)this + v26[8] - *(_QWORD *)a2)
                            && (v27 < 0x13
                             || (v29 = v26[9]) == 0
                             || (result = 0, v30 = *((_QWORD *)a2 + 1), v30 >= 9)
                             && v30 - 8 >= (unint64_t)this + v29 - *(_QWORD *)a2))
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                            if (result)
                            {
                              v31 = *(int *)this;
                              v32 = -v31;
                              v33 = (unsigned __int16 *)((char *)this - v31);
                              if (*v33 >= 0x15u)
                              {
                                v34 = v33[10];
                                if (v34)
                                {
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v34 + *(unsigned int *)((char *)this + v34), 4uLL, 0);
                                  if (!result)
                                    return result;
                                  v32 = -(uint64_t)*(int *)this;
                                }
                              }
                              v35 = (unsigned __int16 *)((char *)this + v32);
                              if (*v35 >= 0x15u && (v36 = v35[10]) != 0)
                                v37 = (_DWORD *)((char *)this + v36 + *(unsigned int *)((char *)this + v36));
                              else
                                v37 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioPacket>(a2, v37);
                              if (result)
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                if (result)
                                {
                                  v38 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v38 >= 0x17u && (v39 = v38[11]) != 0)
                                    v40 = (const unsigned __int8 *)this + v39 + *(unsigned int *)((char *)this + v39);
                                  else
                                    v40 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v40);
                                  if (result)
                                  {
                                    --*((_DWORD *)a2 + 4);
                                    return 1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioPacket>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::AudioPacket::Verify((siri::speech::schema_fb::AudioPacket *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::ErrorBlamerResponse::Verify(siri::speech::schema_fb::ErrorBlamerResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              --*((_DWORD *)a2 + 4);
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrItnMessage::Verify(siri::speech::qss_fb::AsrItnMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::ItnRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::AsrItnMessage *)((char *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::ItnRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::ItnResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::ItnRequest::Verify(siri::speech::schema_fb::ItnRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = *(int *)this;
                  v15 = -v14;
                  v16 = (unsigned __int16 *)((char *)this - v14);
                  if (*v16 >= 0xBu)
                  {
                    v17 = v16[5];
                    if (v17)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                      if (!result)
                        return result;
                      v15 = -(uint64_t)*(int *)this;
                    }
                  }
                  v18 = (unsigned __int16 *)((char *)this + v15);
                  if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                    v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
                  else
                    v20 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionPhraseTokens>(a2, v20);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::ItnResponse::Verify(siri::speech::schema_fb::ItnResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unint64_t v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  _DWORD *v26;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 < 0xBu
                  || (v15 = v14[5]) == 0
                  || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 5)
                  && v16 - 4 >= (unint64_t)this + v15 - *(_QWORD *)a2)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = *(int *)this;
                        v21 = -v20;
                        v22 = (unsigned __int16 *)((char *)this - v20);
                        if (*v22 >= 0xFu)
                        {
                          v23 = v22[7];
                          if (v23)
                          {
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23), 4uLL, 0);
                            if (!result)
                              return result;
                            v21 = -(uint64_t)*(int *)this;
                          }
                        }
                        v24 = (unsigned __int16 *)((char *)this + v21);
                        if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                          v26 = (_DWORD *)((char *)this + v25 + *(unsigned int *)((char *)this + v25));
                        else
                          v26 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionPhraseTokens>(a2, v26);
                        if (result)
                        {
                          --*((_DWORD *)a2 + 4);
                          return 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrTextNormalizationMessage::Verify(siri::speech::qss_fb::AsrTextNormalizationMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartPronGuessRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::AsrTextNormalizationMessage *)((char *)this
                                                            + v8[3]
                                                            + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::StartPronGuessRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::TextNormalizationResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::TextNormalizationResponse::Verify(siri::speech::schema_fb::TextNormalizationResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  _DWORD *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  const unsigned __int8 *v23;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = *(int *)this;
              v12 = -v11;
              v13 = (unsigned __int16 *)((char *)this - v11);
              if (*v13 >= 9u)
              {
                v14 = v13[4];
                if (v14)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v14 + *(unsigned int *)((char *)this + v14), 4uLL, 0);
                  if (!result)
                    return result;
                  v12 = -(uint64_t)*(int *)this;
                }
              }
              v15 = (unsigned __int16 *)((char *)this + v12);
              if (*v15 >= 9u && (v16 = v15[4]) != 0)
                v17 = (_DWORD *)((char *)this + v16 + *(unsigned int *)((char *)this + v16));
              else
                v17 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::NormalizedToken>(a2, v17);
              if (result)
              {
                v18 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v18 < 0xBu
                  || (v19 = v18[5]) == 0
                  || (result = 0, v20 = *((_QWORD *)a2 + 1), v20 >= 5)
                  && v20 - 4 >= (unint64_t)this + v19 - *(_QWORD *)a2)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v21 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v21 >= 0xDu && (v22 = v21[6]) != 0)
                      v23 = (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22);
                    else
                      v23 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v23);
                    if (result)
                    {
                      --*((_DWORD *)a2 + 4);
                      return 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::NormalizedToken>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::NormalizedToken::Verify((siri::speech::schema_fb::NormalizedToken *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::NormalizedToken::Verify(siri::speech::schema_fb::NormalizedToken *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioPacket>(a2, v14);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrPostItnHammerMessage::Verify(siri::speech::qss_fb::AsrPostItnHammerMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::PostItnHammerRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::AsrPostItnHammerMessage *)((char *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::PostItnHammerRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::PostItnHammerResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::PostItnHammerRequest::Verify(siri::speech::schema_fb::PostItnHammerRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  _DWORD *v23;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v17 = *(int *)this;
                      v18 = -v17;
                      v19 = (unsigned __int16 *)((char *)this - v17);
                      if (*v19 >= 0xDu)
                      {
                        v20 = v19[6];
                        if (v20)
                        {
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20), 4uLL, 0);
                          if (!result)
                            return result;
                          v18 = -(uint64_t)*(int *)this;
                        }
                      }
                      v21 = (unsigned __int16 *)((char *)this + v18);
                      if (*v21 >= 0xDu && (v22 = v21[6]) != 0)
                        v23 = (_DWORD *)((char *)this + v22 + *(unsigned int *)((char *)this + v22));
                      else
                        v23 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionToken>(a2, v23);
                      if (result)
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::PostItnHammerResponse::Verify(siri::speech::schema_fb::PostItnHammerResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unint64_t v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  _DWORD *v26;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 < 0xBu
                  || (v15 = v14[5]) == 0
                  || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 5)
                  && v16 - 4 >= (unint64_t)this + v15 - *(_QWORD *)a2)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = *(int *)this;
                        v21 = -v20;
                        v22 = (unsigned __int16 *)((char *)this - v20);
                        if (*v22 >= 0xFu)
                        {
                          v23 = v22[7];
                          if (v23)
                          {
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23), 4uLL, 0);
                            if (!result)
                              return result;
                            v21 = -(uint64_t)*(int *)this;
                          }
                        }
                        v24 = (unsigned __int16 *)((char *)this + v21);
                        if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                          v26 = (_DWORD *)((char *)this + v25 + *(unsigned int *)((char *)this + v25));
                        else
                          v26 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionToken>(a2, v26);
                        if (result)
                        {
                          --*((_DWORD *)a2 + 4);
                          return 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrKeywordFinderMessage::Verify(siri::speech::qss_fb::AsrKeywordFinderMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::KeywordFinderRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::AsrKeywordFinderMessage *)((char *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::KeywordFinderRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::KeywordFinderResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::KeywordFinderRequest::Verify(siri::speech::schema_fb::KeywordFinderRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned __int16 *v25;
  uint64_t v26;
  unint64_t v27;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = *(int *)this;
                  v15 = -v14;
                  v16 = (unsigned __int16 *)((char *)this - v14);
                  if (*v16 >= 0xBu)
                  {
                    v17 = v16[5];
                    if (v17)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                      if (!result)
                        return result;
                      v15 = -(uint64_t)*(int *)this;
                    }
                  }
                  v18 = (unsigned __int16 *)((char *)this + v15);
                  if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                    v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
                  else
                    v20 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RequestStatsResponse_::DoubleStat>(a2, v20);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v21 = *(int *)this;
                      v22 = -v21;
                      v23 = (unsigned __int16 *)((char *)this - v21);
                      if (*v23 >= 0xDu)
                      {
                        v24 = v23[6];
                        if (v24)
                        {
                          result = siri::speech::schema_fb::RecognitionResult::Verify((siri::speech::schema_fb::KeywordFinderRequest *)((char *)this+ v24+ *(unsigned int *)((char *)this + v24)), a2);
                          if (!result)
                            return result;
                          v22 = -(uint64_t)*(int *)this;
                        }
                      }
                      v25 = (unsigned __int16 *)((char *)this + v22);
                      if (*v25 < 0xFu
                        || (v26 = v25[7]) == 0
                        || (result = 0, v27 = *((_QWORD *)a2 + 1), v27 >= 2)
                        && v27 - 1 >= (unint64_t)this + v26 - *(_QWORD *)a2)
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::KeywordFinderResponse::Verify(siri::speech::schema_fb::KeywordFinderResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unint64_t v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  _DWORD *v28;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 < 0xBu
                  || (v15 = v14[5]) == 0
                  || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 5)
                  && v16 - 4 >= (unint64_t)this + v15 - *(_QWORD *)a2)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v20 < 0xFu
                          || (v21 = v20[7]) == 0
                          || (result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify((siri::speech::schema_fb::KeywordFinderResponse *)((char *)this+ v21+ *(unsigned int *)((char *)this + v21)), a2)))
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                          if (result)
                          {
                            v22 = *(int *)this;
                            v23 = -v22;
                            v24 = (unsigned __int16 *)((char *)this - v22);
                            if (*v24 >= 0x11u)
                            {
                              v25 = v24[8];
                              if (v25)
                              {
                                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v25 + *(unsigned int *)((char *)this + v25), 4uLL, 0);
                                if (!result)
                                  return result;
                                v23 = -(uint64_t)*(int *)this;
                              }
                            }
                            v26 = (unsigned __int16 *)((char *)this + v23);
                            if (*v26 >= 0x11u && (v27 = v26[8]) != 0)
                              v28 = (_DWORD *)((char *)this + v27 + *(unsigned int *)((char *)this + v27));
                            else
                              v28 = 0;
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionChoice>(a2, v28);
                            if (result)
                            {
                              --*((_DWORD *)a2 + 4);
                              return 1;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrCorrectionsValidatorMessage::Verify(siri::speech::qss_fb::AsrCorrectionsValidatorMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::CorrectionsValidatorRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::AsrCorrectionsValidatorMessage *)((char *)this
                                                               + v8[3]
                                                               + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::CorrectionsValidatorRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::CorrectionsValidatorResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::CorrectionsValidatorRequest::Verify(siri::speech::schema_fb::CorrectionsValidatorRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  const unsigned __int8 *v18;
  unsigned __int16 *v19;
  uint64_t v20;
  const unsigned __int8 *v21;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 < 0xBu
                    || (v15 = v14[5]) == 0
                    || (result = siri::speech::schema_fb::RecognitionResult::Verify((siri::speech::schema_fb::CorrectionsValidatorRequest *)((char *)this+ v15+ *(unsigned int *)((char *)this + v15)), a2)))
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v16 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v16 >= 0xDu && (v17 = v16[6]) != 0)
                        v18 = (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17);
                      else
                        v18 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v18);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v19 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v19 >= 0xFu && (v20 = v19[7]) != 0)
                            v21 = (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20);
                          else
                            v21 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v21);
                          if (result)
                          {
                            --*((_DWORD *)a2 + 4);
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::CorrectionsValidatorResponse::Verify(siri::speech::schema_fb::CorrectionsValidatorResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unint64_t v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  _DWORD *v26;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 < 0xBu
                  || (v15 = v14[5]) == 0
                  || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 5)
                  && v16 - 4 >= (unint64_t)this + v15 - *(_QWORD *)a2)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = *(int *)this;
                        v21 = -v20;
                        v22 = (unsigned __int16 *)((char *)this - v20);
                        if (*v22 >= 0xFu)
                        {
                          v23 = v22[7];
                          if (v23)
                          {
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23), 4uLL, 0);
                            if (!result)
                              return result;
                            v21 = -(uint64_t)*(int *)this;
                          }
                        }
                        v24 = (unsigned __int16 *)((char *)this + v21);
                        if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                          v26 = (_DWORD *)((char *)this + v25 + *(unsigned int *)((char *)this + v25));
                        else
                          v26 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v26);
                        if (result)
                        {
                          --*((_DWORD *)a2 + 4);
                          return 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::AsrGraphemeToPhonemeMessage::Verify(siri::speech::qss_fb::AsrGraphemeToPhonemeMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::GraphemeToPhonemeRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::AsrGraphemeToPhonemeMessage *)((char *)this
                                                            + v8[3]
                                                            + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::GraphemeToPhonemeRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::GraphemeToPhonemeResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::GraphemeToPhonemeRequest::Verify(siri::speech::schema_fb::GraphemeToPhonemeRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 < 0xBu
                    || (v15 = v14[5]) == 0
                    || (result = siri::speech::schema_fb::ContextWithPronHints::Verify((siri::speech::schema_fb::GraphemeToPhonemeRequest *)((char *)this+ v15+ *(unsigned int *)((char *)this + v15)), a2)))
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::GraphemeToPhonemeResponse::Verify(siri::speech::schema_fb::GraphemeToPhonemeResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  const unsigned __int8 *v26;
  unsigned __int16 *v27;
  uint64_t v28;
  const unsigned __int8 *v29;
  unsigned __int16 *v30;
  uint64_t v31;
  const unsigned __int8 *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  unsigned __int16 *v37;
  uint64_t v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int16 *v42;
  uint64_t v43;
  unsigned __int16 *v44;
  uint64_t v45;
  _DWORD *v46;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = *(int *)this;
                v15 = -v14;
                v16 = (unsigned __int16 *)((char *)this - v14);
                if (*v16 >= 0xBu)
                {
                  v17 = v16[5];
                  if (v17)
                  {
                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                    if (!result)
                      return result;
                    v15 = -(uint64_t)*(int *)this;
                  }
                }
                v18 = (unsigned __int16 *)((char *)this + v15);
                if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                  v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
                else
                  v20 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v20);
                if (result)
                {
                  v21 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v21 < 0xDu
                    || (v22 = v21[6]) == 0
                    || (result = 0, v23 = *((_QWORD *)a2 + 1), v23 >= 2)
                    && v23 - 1 >= (unint64_t)this + v22 - *(_QWORD *)a2)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                    if (result)
                    {
                      v24 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                        v26 = (const unsigned __int8 *)this + v25 + *(unsigned int *)((char *)this + v25);
                      else
                        v26 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v26);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                        if (result)
                        {
                          v27 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v27 >= 0x11u && (v28 = v27[8]) != 0)
                            v29 = (const unsigned __int8 *)this + v28 + *(unsigned int *)((char *)this + v28);
                          else
                            v29 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v29);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                            if (result)
                            {
                              v30 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v30 >= 0x13u && (v31 = v30[9]) != 0)
                                v32 = (const unsigned __int8 *)this + v31 + *(unsigned int *)((char *)this + v31);
                              else
                                v32 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v32);
                              if (result)
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                                if (result)
                                {
                                  v33 = *(int *)this;
                                  v34 = -v33;
                                  v35 = (unsigned __int16 *)((char *)this - v33);
                                  if (*v35 >= 0x15u)
                                  {
                                    v36 = v35[10];
                                    if (v36)
                                    {
                                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v36+ *(unsigned int *)((char *)this + v36), 4uLL, 0);
                                      if (!result)
                                        return result;
                                      v34 = -(uint64_t)*(int *)this;
                                    }
                                  }
                                  v37 = (unsigned __int16 *)((char *)this + v34);
                                  if (*v37 >= 0x15u && (v38 = v37[10]) != 0)
                                    v39 = (_DWORD *)((char *)this + v38 + *(unsigned int *)((char *)this + v38));
                                  else
                                    v39 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TokenProns>(a2, v39);
                                  if (result)
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                    if (result)
                                    {
                                      v40 = *(int *)this;
                                      v41 = -v40;
                                      v42 = (unsigned __int16 *)((char *)this - v40);
                                      if (*v42 >= 0x17u)
                                      {
                                        v43 = v42[11];
                                        if (v43)
                                        {
                                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v43+ *(unsigned int *)((char *)this + v43), 4uLL, 0);
                                          if (!result)
                                            return result;
                                          v41 = -(uint64_t)*(int *)this;
                                        }
                                      }
                                      v44 = (unsigned __int16 *)((char *)this + v41);
                                      if (*v44 >= 0x17u && (v45 = v44[11]) != 0)
                                        v46 = (_DWORD *)((char *)this + v45 + *(unsigned int *)((char *)this + v45));
                                      else
                                        v46 = 0;
                                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TokenProns>(a2, v46);
                                      if (result)
                                      {
                                        --*((_DWORD *)a2 + 4);
                                        return 1;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TokenProns>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TokenProns::Verify((siri::speech::schema_fb::TokenProns *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TokenProns::Verify(siri::speech::schema_fb::TokenProns *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int16 *v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  _DWORD *v28;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TokenProns_::SanitizedSequence>(a2, v14);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v15 = *(int *)this;
              v16 = -v15;
              v17 = (unsigned __int16 *)((char *)this - v15);
              if (*v17 >= 9u)
              {
                v18 = v17[4];
                if (v18)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18), 4uLL, 0);
                  if (!result)
                    return result;
                  v16 = -(uint64_t)*(int *)this;
                }
              }
              v19 = (unsigned __int16 *)((char *)this + v16);
              if (*v19 >= 9u && (v20 = v19[4]) != 0)
                v21 = (_DWORD *)((char *)this + v20 + *(unsigned int *)((char *)this + v20));
              else
                v21 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry>(a2, v21);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v22 = *(int *)this;
                  v23 = -v22;
                  v24 = (unsigned __int16 *)((char *)this - v22);
                  if (*v24 >= 0xBu)
                  {
                    v25 = v24[5];
                    if (v25)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v25 + *(unsigned int *)((char *)this + v25), 4uLL, 0);
                      if (!result)
                        return result;
                      v23 = -(uint64_t)*(int *)this;
                    }
                  }
                  v26 = (unsigned __int16 *)((char *)this + v23);
                  if (*v26 >= 0xBu && (v27 = v26[5]) != 0)
                    v28 = (_DWORD *)((char *)this + v27 + *(unsigned int *)((char *)this + v27));
                  else
                    v28 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::FinishAudio_::ServerFeatureLatencyDistributionEntry>(a2, v28);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TokenProns_::SanitizedSequence>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TokenProns_::SanitizedSequence::Verify((siri::speech::schema_fb::TokenProns_::SanitizedSequence *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TokenProns_::SanitizedSequence::Verify(siri::speech::schema_fb::TokenProns_::SanitizedSequence *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarMultiUserMessage::Verify(siri::speech::qss_fb::BlazarMultiUserMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::FinalSpeechRecognitionResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::BlazarMultiUserMessage *)((char *)this
                                                               + v8[3]
                                                               + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::BlazarMultiUserMessage_::VerifySessionMessageUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarMultiUserMessage_::VerifySessionMessageUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::FinalSpeechRecognitionResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::MultiUserStartSpeechRequest::Verify(this, a1);
    case 2:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::UserParameters::Verify(this, a1);
    case 3:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::SetRequestOrigin::Verify(this, a1);
    case 4:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::SetSpeechContext::Verify(this, a1);
    case 5:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::SetSpeechProfile::Verify(this, a1);
    case 6:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::SetEndpointerState::Verify(this, a1);
    case 7:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::AudioPacket::Verify(this, a1);
    case 8:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::FinishAudio::Verify(this, a1);
    case 9:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::ResetServerEndpointer::Verify(this, a1);
    case 10:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify(this, a1);
    case 11:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify(this, a1);
    case 12:
      if (!this)
        goto LABEL_40;
      return siri::speech::schema_fb::PartialSpeechRecognitionResponse::Verify(this, a1);
    case 13:
      if (!this)
        goto LABEL_40;
      goto LABEL_27;
    case 14:
      if (!this)
        goto LABEL_40;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 15:
      if (!this)
        goto LABEL_40;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 16:
      if (!this)
        goto LABEL_40;
      result = siri::speech::schema_fb::ServerEndpointFeatures::Verify(this, a1);
      break;
    case 17:
      if (!this)
        goto LABEL_40;
      result = siri::speech::schema_fb::ClientSetupInfo::Verify(this, a1);
      break;
    case 18:
      if (!this)
        goto LABEL_40;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if ((_DWORD)result)
      {
        --*((_DWORD *)a1 + 4);
LABEL_40:
        result = 1;
      }
      break;
    case 19:
      if (!this)
        goto LABEL_40;
LABEL_27:
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    default:
      goto LABEL_40;
  }
  return result;
}

BOOL siri::speech::schema_fb::MultiUserStartSpeechRequest::Verify(siri::speech::schema_fb::MultiUserStartSpeechRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::StartSpeechRequest::Verify((siri::speech::schema_fb::MultiUserStartSpeechRequest *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v13);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v14 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v14 >= 9u && (v15 = v14[4]) != 0)
                v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
              else
                v16 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarMultilingualMessage::Verify(siri::speech::qss_fb::BlazarMultilingualMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::FinalSpeechRecognitionResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::BlazarMultilingualMessage *)((char *)this
                                                                  + v8[3]
                                                                  + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::BlazarMultilingualMessage_::VerifySessionMessageUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarMultilingualMessage_::VerifySessionMessageUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::FinalSpeechRecognitionResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::StartMultilingualSpeechRequest::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::UserParameters::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::SetRequestOrigin::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::SetSpeechContext::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::SetSpeechProfile::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::AudioPacket::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::FinishAudio::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::LanguageDetected::Verify(this, a1);
      break;
    case 9:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 10:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::PartialSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 11:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 12:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 13:
      if (!this)
        goto LABEL_31;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if (result)
      {
        --*((_DWORD *)a1 + 4);
        goto LABEL_31;
      }
      break;
    case 14:
      if (!this)
        goto LABEL_31;
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    default:
LABEL_31:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::schema_fb::StartMultilingualSpeechRequest::Verify(siri::speech::schema_fb::StartMultilingualSpeechRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::StartSpeechRequest::Verify((siri::speech::schema_fb::StartMultilingualSpeechRequest *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::LanguageParameters>(a2, v13);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::LanguageParameters>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::CancelRequest::Verify((siri::speech::schema_fb::CancelRequest *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::LanguageDetected::Verify(siri::speech::schema_fb::LanguageDetected *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::LanguageDetectionPrediction>(a2, v14);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::LanguageDetectionPrediction>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::LanguageDetectionPrediction::Verify((siri::speech::schema_fb::LanguageDetectionPrediction *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::LanguageDetectionPrediction::Verify(siri::speech::schema_fb::LanguageDetectionPrediction *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7
          || (!v8[3]
           || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
           && v10 - 4 >= (unint64_t)this + v8[3] - *(_QWORD *)a2)
          && (v9 < 9
           || (!v8[4]
            || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
            && v11 - 4 >= (unint64_t)this + v8[4] - *(_QWORD *)a2)
           && (v9 < 0xB
            || (v12 = v8[5]) == 0
            || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 2)
            && v13 - 1 >= (unint64_t)this + v12 - *(_QWORD *)a2)))
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarSpeechTranslationMessage::Verify(siri::speech::qss_fb::BlazarSpeechTranslationMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartSpeechTranslationRequest *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::BlazarSpeechTranslationMessage *)((char *)this
                                                                       + v8[3]
                                                                       + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::BlazarSpeechTranslationMessage_::VerifySessionMessageUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarSpeechTranslationMessage_::VerifySessionMessageUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::StartSpeechTranslationRequest *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::StartSpeechTranslationRequest::Verify(this, a1);
    case 2:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::LanguageDetected::Verify(this, a1);
    case 3:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::AudioPacket::Verify(this, a1);
    case 4:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::SpeechTranslationAudioPacket::Verify(this, a1);
    case 5:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::FinishAudio::Verify(this, a1);
    case 6:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::SetEndpointerState::Verify(this, a1);
    case 7:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::ResetServerEndpointer::Verify(this, a1);
    case 8:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::StartSpeechTranslationLoggingRequest::Verify(this, a1);
    case 9:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::SpeechTranslationPartialRecognitionResponse::Verify(this, a1);
    case 10:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::SpeechTranslationFinalRecognitionResponse::Verify(this, a1);
    case 11:
      if (!this)
        goto LABEL_43;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if ((_DWORD)result)
      {
        --*((_DWORD *)a1 + 4);
        goto LABEL_43;
      }
      return result;
    case 12:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::SpeechTranslationMtResponse::Verify(this, a1);
    case 13:
      if (!this)
        goto LABEL_43;
      return siri::speech::schema_fb::SpeechTranslationTextToSpeechResponse::Verify(this, a1);
    case 14:
      if (!this)
        goto LABEL_43;
      goto LABEL_30;
    case 15:
      if (!this)
        goto LABEL_43;
LABEL_30:
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    case 16:
      if (!this)
        goto LABEL_43;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 17:
      if (!this)
        goto LABEL_43;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 18:
      if (!this)
        goto LABEL_43;
      result = siri::speech::schema_fb::ServerEndpointFeatures::Verify(this, a1);
      break;
    case 19:
      if (!this)
        goto LABEL_43;
      result = siri::speech::schema_fb::ClientSetupInfo::Verify(this, a1);
      break;
    case 20:
      if (!this)
        goto LABEL_43;
      result = siri::speech::schema_fb::SpeechTranslationServerEndpointFeatures::Verify(this, a1);
      break;
    default:
LABEL_43:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::schema_fb::StartSpeechTranslationRequest::Verify(siri::speech::schema_fb::StartSpeechTranslationRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  _DWORD *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unsigned __int16 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  _DWORD *v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unint64_t v31;
  unsigned __int16 *v32;
  uint64_t v33;
  const unsigned __int8 *v34;
  unsigned __int16 *v35;
  unsigned int v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unsigned __int16 *v40;
  uint64_t v41;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = *(int *)this;
              v12 = -v11;
              v13 = (unsigned __int16 *)((char *)this - v11);
              if (*v13 >= 9u)
              {
                v14 = v13[4];
                if (v14)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v14 + *(unsigned int *)((char *)this + v14), 4uLL, 0);
                  if (!result)
                    return result;
                  v12 = -(uint64_t)*(int *)this;
                }
              }
              v15 = (unsigned __int16 *)((char *)this + v12);
              if (*v15 >= 9u && (v16 = v15[4]) != 0)
                v17 = (_DWORD *)((char *)this + v16 + *(unsigned int *)((char *)this + v16));
              else
                v17 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v17);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v18 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v18 < 0xBu
                    || (v19 = v18[5]) == 0
                    || (result = siri::speech::schema_fb::StartSpeechRequest::Verify((siri::speech::schema_fb::StartSpeechTranslationRequest *)((char *)this+ v19+ *(unsigned int *)((char *)this + v19)), a2)))
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v20 < 0xDu
                        || (v21 = v20[6]) == 0
                        || (result = siri::speech::schema_fb::TranslationRequest::Verify((siri::speech::schema_fb::StartSpeechTranslationRequest *)((char *)this+ v21+ *(unsigned int *)((char *)this + v21)), a2)))
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v22 = *(int *)this;
                          v23 = -v22;
                          v24 = (unsigned __int16 *)((char *)this - v22);
                          if (*v24 >= 0xFu)
                          {
                            v25 = v24[7];
                            if (v25)
                            {
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v25 + *(unsigned int *)((char *)this + v25), 4uLL, 0);
                              if (!result)
                                return result;
                              v23 = -(uint64_t)*(int *)this;
                            }
                          }
                          v26 = (unsigned __int16 *)((char *)this + v23);
                          if (*v26 >= 0xFu && (v27 = v26[7]) != 0)
                            v28 = (_DWORD *)((char *)this + v27 + *(unsigned int *)((char *)this + v27));
                          else
                            v28 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechRequest>(a2, v28);
                          if (result)
                          {
                            v29 = (unsigned __int16 *)((char *)this - *(int *)this);
                            if (*v29 < 0x11u
                              || (v30 = v29[8]) == 0
                              || (result = 0, v31 = *((_QWORD *)a2 + 1), v31 >= 2)
                              && v31 - 1 >= (unint64_t)this + v30 - *(_QWORD *)a2)
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                              if (result)
                              {
                                v32 = (unsigned __int16 *)((char *)this - *(int *)this);
                                if (*v32 >= 0x13u && (v33 = v32[9]) != 0)
                                  v34 = (const unsigned __int8 *)this + v33 + *(unsigned int *)((char *)this + v33);
                                else
                                  v34 = 0;
                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v34);
                                if (result)
                                {
                                  v35 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  v36 = *v35;
                                  if (v36 < 0x15
                                    || (!v35[10]
                                     || (result = 0, v37 = *((_QWORD *)a2 + 1), v37 >= 5)
                                     && v37 - 4 >= (unint64_t)this + v35[10] - *(_QWORD *)a2)
                                    && (v36 < 0x17
                                     || (v38 = v35[11]) == 0
                                     || (result = 0, v39 = *((_QWORD *)a2 + 1), v39 >= 2)
                                     && v39 - 1 >= (unint64_t)this + v38 - *(_QWORD *)a2))
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x18u);
                                    if (result)
                                    {
                                      v40 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      if (*v40 < 0x19u
                                        || (v41 = v40[12]) == 0
                                        || (result = siri::speech::schema_fb::TranslationOptions::Verify((siri::speech::schema_fb::StartSpeechTranslationRequest *)((char *)this + v41 + *(unsigned int *)((char *)this + v41)), a2)))
                                      {
                                        --*((_DWORD *)a2 + 4);
                                        return 1;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechRequest>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TextToSpeechRequest::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TranslationRequest::Verify(siri::speech::schema_fb::TranslationRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  _DWORD *v26;
  unsigned __int16 *v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  const unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int16 *v38;
  uint64_t v39;
  unsigned __int16 *v40;
  unsigned int v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned __int16 *v45;
  uint64_t v46;
  const unsigned __int8 *v47;
  unsigned __int16 *v48;
  uint64_t v49;
  const unsigned __int8 *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int16 *v53;
  uint64_t v54;
  unsigned __int16 *v55;
  uint64_t v56;
  unint64_t v57;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                        v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                      else
                        v19 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v20 = *(int *)this;
                          v21 = -v20;
                          v22 = (unsigned __int16 *)((char *)this - v20);
                          if (*v22 >= 0xFu)
                          {
                            v23 = v22[7];
                            if (v23)
                            {
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23), 4uLL, 0);
                              if (!result)
                                return result;
                              v21 = -(uint64_t)*(int *)this;
                            }
                          }
                          v24 = (unsigned __int16 *)((char *)this + v21);
                          if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                            v26 = (_DWORD *)((char *)this + v25 + *(unsigned int *)((char *)this + v25));
                          else
                            v26 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v26);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                            if (result)
                            {
                              v27 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v27 < 0x11u
                                || (v28 = v27[8]) == 0
                                || (result = siri::speech::schema_fb::SiriTranslationInfo::Verify((siri::speech::schema_fb::TranslationRequest *)((char *)this+ v28+ *(unsigned int *)((char *)this + v28)), a2)))
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                                if (result)
                                {
                                  v29 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v29 < 0x13u
                                    || (v30 = v29[9]) == 0
                                    || (result = siri::speech::schema_fb::SpeechTranslationInfo::Verify((siri::speech::schema_fb::TranslationRequest *)((char *)this+ v30+ *(unsigned int *)((char *)this + v30)), a2)))
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                                    if (result)
                                    {
                                      v31 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      if (*v31 < 0x15u
                                        || (v32 = v31[10]) == 0
                                        || (result = siri::speech::schema_fb::SiriPayloadTranslationInfo::Verify((siri::speech::schema_fb::TranslationRequest *)((char *)this + v32 + *(unsigned int *)((char *)this + v32)), a2)))
                                      {
                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                        if (result)
                                        {
                                          v33 = (unsigned __int16 *)((char *)this - *(int *)this);
                                          if (*v33 >= 0x17u && (v34 = v33[11]) != 0)
                                            v35 = (const unsigned __int8 *)this
                                                + v34
                                                + *(unsigned int *)((char *)this + v34);
                                          else
                                            v35 = 0;
                                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v35);
                                          if (result)
                                          {
                                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x18u);
                                            if (result)
                                            {
                                              v36 = *(int *)this;
                                              v37 = -v36;
                                              v38 = (unsigned __int16 *)((char *)this - v36);
                                              if (*v38 >= 0x19u)
                                              {
                                                v39 = v38[12];
                                                if (v39)
                                                {
                                                  result = siri::speech::schema_fb::WebTranslationInfo::Verify((siri::speech::schema_fb::TranslationRequest *)((char *)this + v39 + *(unsigned int *)((char *)this + v39)), a2);
                                                  if (!result)
                                                    return result;
                                                  v37 = -(uint64_t)*(int *)this;
                                                }
                                              }
                                              v40 = (unsigned __int16 *)((char *)this + v37);
                                              v41 = *v40;
                                              if (v41 < 0x1B
                                                || (!v40[13]
                                                 || (result = 0, v42 = *((_QWORD *)a2 + 1), v42 >= 2)
                                                 && v42 - 1 >= (unint64_t)this + v40[13] - *(_QWORD *)a2)
                                                && (v41 < 0x1D
                                                 || (v43 = v40[14]) == 0
                                                 || (result = 0, v44 = *((_QWORD *)a2 + 1), v44 >= 5)
                                                 && v44 - 4 >= (unint64_t)this + v43 - *(_QWORD *)a2))
                                              {
                                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Eu);
                                                if (result)
                                                {
                                                  v45 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                  if (*v45 >= 0x1Fu && (v46 = v45[15]) != 0)
                                                    v47 = (const unsigned __int8 *)this
                                                        + v46
                                                        + *(unsigned int *)((char *)this + v46);
                                                  else
                                                    v47 = 0;
                                                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v47);
                                                  if (result)
                                                  {
                                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x20u);
                                                    if (result)
                                                    {
                                                      v48 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                      if (*v48 >= 0x21u && (v49 = v48[16]) != 0)
                                                        v50 = (const unsigned __int8 *)this
                                                            + v49
                                                            + *(unsigned int *)((char *)this + v49);
                                                      else
                                                        v50 = 0;
                                                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v50);
                                                      if (result)
                                                      {
                                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x22u);
                                                        if (result)
                                                        {
                                                          v51 = *(int *)this;
                                                          v52 = -v51;
                                                          v53 = (unsigned __int16 *)((char *)this - v51);
                                                          if (*v53 >= 0x23u)
                                                          {
                                                            v54 = v53[17];
                                                            if (v54)
                                                            {
                                                              result = siri::speech::schema_fb::TranslationOptions::Verify((siri::speech::schema_fb::TranslationRequest *)((char *)this + v54 + *(unsigned int *)((char *)this + v54)), a2);
                                                              if (!result)
                                                                return result;
                                                              v52 = -(uint64_t)*(int *)this;
                                                            }
                                                          }
                                                          v55 = (unsigned __int16 *)((char *)this + v52);
                                                          if (*v55 < 0x25u
                                                            || (v56 = v55[18]) == 0
                                                            || (result = 0, v57 = *((_QWORD *)a2 + 1), v57 >= 2)
                                                            && v57 - 1 >= (unint64_t)this + v56 - *(_QWORD *)a2)
                                                          {
                                                            --*((_DWORD *)a2 + 4);
                                                            return 1;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SiriTranslationInfo::Verify(siri::speech::schema_fb::SiriTranslationInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;
  unsigned __int16 *v21;
  uint64_t v22;
  const unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  _DWORD *v37;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify((siri::speech::schema_fb::SiriTranslationInfo *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionChoice>(a2, v13);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v14 = *(int *)this;
              v15 = -v14;
              v16 = (unsigned __int16 *)((char *)this - v14);
              if (*v16 >= 9u)
              {
                v17 = v16[4];
                if (v17)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                  if (!result)
                    return result;
                  v15 = -(uint64_t)*(int *)this;
                }
              }
              v18 = (unsigned __int16 *)((char *)this + v15);
              if (*v18 >= 9u && (v19 = v18[4]) != 0)
                v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
              else
                v20 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v20);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v21 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v21 >= 0xBu && (v22 = v21[5]) != 0)
                    v23 = (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22);
                  else
                    v23 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v23);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v24 = *(int *)this;
                      v25 = -v24;
                      v26 = (unsigned __int16 *)((char *)this - v24);
                      if (*v26 >= 0xDu)
                      {
                        v27 = v26[6];
                        if (v27)
                        {
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v27 + *(unsigned int *)((char *)this + v27), 4uLL, 0);
                          if (!result)
                            return result;
                          v25 = -(uint64_t)*(int *)this;
                        }
                      }
                      v28 = (unsigned __int16 *)((char *)this + v25);
                      if (*v28 >= 0xDu && (v29 = v28[6]) != 0)
                        v30 = (_DWORD *)((char *)this + v29 + *(unsigned int *)((char *)this + v29));
                      else
                        v30 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ItnAlignment>(a2, v30);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v31 = *(int *)this;
                          v32 = -v31;
                          v33 = (unsigned __int16 *)((char *)this - v31);
                          if (*v33 >= 0xFu)
                          {
                            v34 = v33[7];
                            if (v34)
                            {
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v34 + *(unsigned int *)((char *)this + v34), 4uLL, 0);
                              if (!result)
                                return result;
                              v32 = -(uint64_t)*(int *)this;
                            }
                          }
                          v35 = (unsigned __int16 *)((char *)this + v32);
                          if (*v35 >= 0xFu && (v36 = v35[7]) != 0)
                            v37 = (_DWORD *)((char *)this + v36 + *(unsigned int *)((char *)this + v36));
                          else
                            v37 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Span>(a2, v37);
                          if (result)
                          {
                            --*((_DWORD *)a2 + 4);
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Span>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::Span::Verify((siri::speech::schema_fb::Span *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::Span::Verify(siri::speech::schema_fb::Span *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 5) && v8 - 4 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
       && (v6 < 9
        || (v9 = v5[4]) == 0
        || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 2) && v10 - 1 >= (unint64_t)this + v9 - *(_QWORD *)a2)))
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
      if (result)
      {
        v11 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v11 >= 0xBu && (v12 = v11[5]) != 0)
          v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
        else
          v13 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationInfo::Verify(siri::speech::schema_fb::SpeechTranslationInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify((siri::speech::schema_fb::SpeechTranslationInfo *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RecognitionChoice>(a2, v13);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SiriPayloadTranslationInfo::Verify(siri::speech::schema_fb::SiriPayloadTranslationInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 < 9u
                || (v12 = v11[4]) == 0
                || (result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify((siri::speech::schema_fb::SiriPayloadTranslationInfo *)((char *)this+ v12+ *(unsigned int *)((char *)this + v12)), a2)))
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::WebTranslationInfo::Verify(siri::speech::schema_fb::WebTranslationInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Span>(a2, v14);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechRequest::Verify(siri::speech::schema_fb::TextToSpeechRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned __int16 *v25;
  uint64_t v26;
  const unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned __int16 *v32;
  uint64_t v33;
  _DWORD *v34;
  unsigned __int16 *v35;
  uint64_t v36;
  unint64_t v37;
  unsigned __int16 *v38;
  uint64_t v39;
  unsigned __int16 *v40;
  uint64_t v41;
  unsigned __int16 *v42;
  uint64_t v43;
  unsigned __int16 *v44;
  uint64_t v45;
  unsigned __int16 *v46;
  uint64_t v47;
  unsigned __int16 *v48;
  uint64_t v49;
  unsigned __int16 *v50;
  uint64_t v51;
  unsigned __int16 *v52;
  uint64_t v53;
  unsigned __int16 *v54;
  uint64_t v55;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                        v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                      else
                        v19 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                      if (result)
                      {
                        v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                        v21 = *v20;
                        if (v21 < 0xF
                          || (!v20[7]
                           || (result = 0, v22 = *((_QWORD *)a2 + 1), v22 >= 5)
                           && v22 - 4 >= (unint64_t)this + v20[7] - *(_QWORD *)a2)
                          && (v21 < 0x11
                           || (v23 = v20[8]) == 0
                           || (result = 0, v24 = *((_QWORD *)a2 + 1), v24 >= 2)
                           && v24 - 1 >= (unint64_t)this + v23 - *(_QWORD *)a2))
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                          if (result)
                          {
                            v25 = (unsigned __int16 *)((char *)this - *(int *)this);
                            if (*v25 >= 0x13u && (v26 = v25[9]) != 0)
                              v27 = (const unsigned __int8 *)this + v26 + *(unsigned int *)((char *)this + v26);
                            else
                              v27 = 0;
                            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v27);
                            if (result)
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                              if (result)
                              {
                                v28 = *(int *)this;
                                v29 = -v28;
                                v30 = (unsigned __int16 *)((char *)this - v28);
                                if (*v30 >= 0x15u)
                                {
                                  v31 = v30[10];
                                  if (v31)
                                  {
                                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v31+ *(unsigned int *)((char *)this + v31), 4uLL, 0);
                                    if (!result)
                                      return result;
                                    v29 = -(uint64_t)*(int *)this;
                                  }
                                }
                                v32 = (unsigned __int16 *)((char *)this + v29);
                                if (*v32 >= 0x15u && (v33 = v32[10]) != 0)
                                  v34 = (_DWORD *)((char *)this + v33 + *(unsigned int *)((char *)this + v33));
                                else
                                  v34 = 0;
                                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v34);
                                if (result)
                                {
                                  v35 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v35 < 0x17u
                                    || (v36 = v35[11]) == 0
                                    || (result = 0, v37 = *((_QWORD *)a2 + 1), v37 >= 5)
                                    && v37 - 4 >= (unint64_t)this + v36 - *(_QWORD *)a2)
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x18u);
                                    if (result)
                                    {
                                      v38 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      if (*v38 < 0x19u
                                        || (v39 = v38[12]) == 0
                                        || (result = siri::speech::schema_fb::TextToSpeechRequestMeta::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v39 + *(unsigned int *)((char *)this + v39)), a2)))
                                      {
                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Au);
                                        if (result)
                                        {
                                          v40 = (unsigned __int16 *)((char *)this - *(int *)this);
                                          if (*v40 < 0x1Bu
                                            || (v41 = v40[13]) == 0
                                            || (result = siri::speech::schema_fb::TextToSpeechRequestContext::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v41 + *(unsigned int *)((char *)this + v41)), a2)))
                                          {
                                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Cu);
                                            if (result)
                                            {
                                              v42 = (unsigned __int16 *)((char *)this - *(int *)this);
                                              if (*v42 < 0x1Du
                                                || (v43 = v42[14]) == 0
                                                || (result = siri::speech::schema_fb::Pronunciation::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v43 + *(unsigned int *)((char *)this + v43)), a2)))
                                              {
                                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Eu);
                                                if (result)
                                                {
                                                  v44 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                  if (*v44 < 0x1Fu
                                                    || (v45 = v44[15]) == 0
                                                    || (result = siri::speech::schema_fb::TTSRequestFeatureFlags::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v45 + *(unsigned int *)((char *)this + v45)), a2)))
                                                  {
                                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x20u);
                                                    if (result)
                                                    {
                                                      v46 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                      if (*v46 < 0x21u
                                                        || (v47 = v46[16]) == 0
                                                        || (result = siri::speech::schema_fb::TextToSpeechRequestDebug::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v47 + *(unsigned int *)((char *)this + v47)), a2)))
                                                      {
                                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x22u);
                                                        if (result)
                                                        {
                                                          v48 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                          if (*v48 < 0x23u
                                                            || (v49 = v48[17]) == 0
                                                            || (result = siri::speech::schema_fb::TextToSpeechUserProfile::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v49 + *(unsigned int *)((char *)this + v49)), a2)))
                                                          {
                                                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x24u);
                                                            if (result)
                                                            {
                                                              v50 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                              if (*v50 < 0x25u
                                                                || (v51 = v50[18]) == 0
                                                                || (result = siri::speech::schema_fb::TextToSpeechRequestDevConfig::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v51 + *(unsigned int *)((char *)this + v51)), a2)))
                                                              {
                                                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x26u);
                                                                if (result)
                                                                {
                                                                  v52 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                  if (*v52 < 0x27u
                                                                    || (v53 = v52[19]) == 0
                                                                    || (result = siri::speech::schema_fb::TextToSpeechRequestProsodyTransferConfig::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v53 + *(unsigned int *)((char *)this + v53)), a2)))
                                                                  {
                                                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x28u);
                                                                    if (result)
                                                                    {
                                                                      v54 = (unsigned __int16 *)((char *)this
                                                                                               - *(int *)this);
                                                                      if (*v54 < 0x29u
                                                                        || (v55 = v54[20]) == 0
                                                                        || (result = siri::speech::schema_fb::TextToSpeechRequestProsodyControlConfig::Verify((siri::speech::schema_fb::TextToSpeechRequest *)((char *)this + v55 + *(unsigned int *)((char *)this + v55)), a2)))
                                                                      {
                                                                        --*((_DWORD *)a2 + 4);
                                                                        return 1;
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechRequestMeta::Verify(siri::speech::schema_fb::TextToSpeechRequestMeta *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          v11 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v11 < 9u
            || (v12 = v11[4]) == 0
            || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 2)
            && v13 - 1 >= (unint64_t)this + v12 - *(_QWORD *)a2)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechRequestContext::Verify(siri::speech::schema_fb::TextToSpeechRequestContext *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;
  unsigned __int16 *v12;
  uint64_t v13;
  const unsigned __int8 *v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v11);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v12 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (const unsigned __int8 *)this + v13 + *(unsigned int *)((char *)this + v13);
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v14);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TTSRequestFeatureFlags::Verify(siri::speech::schema_fb::TTSRequestFeatureFlags *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5)
      goto LABEL_22;
    if (!v5[2]
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
    {
      if (v6 < 7)
        goto LABEL_22;
      if (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 2) && v8 - 1 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
      {
        if (v6 < 9
          || (!v5[4]
           || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 2)
           && v9 - 1 >= (unint64_t)this + v5[4] - *(_QWORD *)a2)
          && (v6 < 0xB
           || (!v5[5]
            || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 2)
            && v10 - 1 >= (unint64_t)this + v5[5] - *(_QWORD *)a2)
           && (v6 < 0xD
            || (v11 = v5[6]) == 0
            || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 5)
            && v12 - 4 >= (unint64_t)this + v11 - *(_QWORD *)a2)))
        {
LABEL_22:
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechRequestDebug::Verify(siri::speech::schema_fb::TextToSpeechRequestDebug *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (v8 = v5[3]) == 0
       || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 2) && v9 - 1 >= (unint64_t)this + v8 - *(_QWORD *)a2))
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechUserProfile::Verify(siri::speech::schema_fb::TextToSpeechUserProfile *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechVoiceResource>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechVoiceResource>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TextToSpeechVoiceResource::Verify((siri::speech::schema_fb::TextToSpeechVoiceResource *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechVoiceResource::Verify(siri::speech::schema_fb::TextToSpeechVoiceResource *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9), 1uLL, 0)))
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechRequestDevConfig::Verify(siri::speech::schema_fb::TextToSpeechRequestDevConfig *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unint64_t v16;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              v14 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v14 < 0xBu
                || (v15 = v14[5]) == 0
                || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 2)
                && v16 - 1 >= (unint64_t)this + v15 - *(_QWORD *)a2)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechRequestProsodyTransferConfig::Verify(siri::speech::schema_fb::TextToSpeechRequestProsodyTransferConfig *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  const unsigned __int8 *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::TextToSpeechVoiceResource::Verify((siri::speech::schema_fb::TextToSpeechRequestProsodyTransferConfig *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v7 < 7u
            || (v8 = v7[3]) == 0
            || (result = siri::speech::schema_fb::TextToSpeechUserVoiceProfile::Verify((siri::speech::schema_fb::TextToSpeechRequestProsodyTransferConfig *)((char *)this+ v8+ *(unsigned int *)((char *)this + v8)), a2)))
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v9 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v9 >= 9u && (v10 = v9[4]) != 0)
                v11 = (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10);
              else
                v11 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v11);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechUserVoiceProfile::Verify(siri::speech::schema_fb::TextToSpeechUserVoiceProfile *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5)
      goto LABEL_26;
    if (!v5[2]
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
    {
      if (v6 < 7)
        goto LABEL_26;
      if (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 5) && v8 - 4 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
      {
        if (v6 < 9)
          goto LABEL_26;
        if (!v5[4]
          || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 5)
          && v9 - 4 >= (unint64_t)this + v5[4] - *(_QWORD *)a2)
        {
          if (v6 < 0xB
            || (!v5[5]
             || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
             && v10 - 4 >= (unint64_t)this + v5[5] - *(_QWORD *)a2)
            && (v6 < 0xD
             || (!v5[6]
              || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
              && v11 - 4 >= (unint64_t)this + v5[6] - *(_QWORD *)a2)
             && (v6 < 0xF
              || (v12 = v5[7]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)))
          {
LABEL_26:
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechRequestProsodyControlConfig::Verify(siri::speech::schema_fb::TextToSpeechRequestProsodyControlConfig *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5)
      goto LABEL_34;
    if (!v5[2]
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
    {
      if (v6 < 7)
        goto LABEL_34;
      if (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 5) && v8 - 4 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
      {
        if (v6 < 9)
          goto LABEL_34;
        if (!v5[4]
          || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 5)
          && v9 - 4 >= (unint64_t)this + v5[4] - *(_QWORD *)a2)
        {
          if (v6 < 0xB)
            goto LABEL_34;
          if (!v5[5]
            || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
            && v10 - 4 >= (unint64_t)this + v5[5] - *(_QWORD *)a2)
          {
            if (v6 < 0xD)
              goto LABEL_34;
            if (!v5[6]
              || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
              && v11 - 4 >= (unint64_t)this + v5[6] - *(_QWORD *)a2)
            {
              if (v6 < 0xF
                || (!v5[7]
                 || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 5)
                 && v12 - 4 >= (unint64_t)this + v5[7] - *(_QWORD *)a2)
                && (v6 < 0x11
                 || (!v5[8]
                  || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
                  && v13 - 4 >= (unint64_t)this + v5[8] - *(_QWORD *)a2)
                 && (v6 < 0x13
                  || (v14 = v5[9]) == 0
                  || (result = 0, v15 = *((_QWORD *)a2 + 1), v15 >= 5)
                  && v15 - 4 >= (unint64_t)this + v14 - *(_QWORD *)a2)))
              {
LABEL_34:
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TranslationOptions::Verify(siri::speech::schema_fb::TranslationOptions *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 2) && v8 - 1 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
       && (v6 < 9
        || (v9 = v5[4]) == 0
        || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 2) && v10 - 1 >= (unint64_t)this + v9 - *(_QWORD *)a2)))
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationAudioPacket::Verify(siri::speech::schema_fb::SpeechTranslationAudioPacket *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioFrame>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioFrame>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::AudioFrame::Verify((siri::speech::schema_fb::AudioFrame *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::AudioFrame::Verify(siri::speech::schema_fb::AudioFrame *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6), 1uLL, 0)))
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::StartSpeechTranslationLoggingRequest::Verify(siri::speech::schema_fb::StartSpeechTranslationLoggingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  const unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  _DWORD *v24;
  unsigned __int16 *v25;
  uint64_t v26;
  const unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned __int16 *v32;
  uint64_t v33;
  _DWORD *v34;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 < 9u
                || (v12 = v11[4]) == 0
                || (result = siri::speech::schema_fb::UserParameters::Verify((siri::speech::schema_fb::StartSpeechTranslationLoggingRequest *)((char *)this+ v12+ *(unsigned int *)((char *)this + v12)), a2)))
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v13 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v13 < 0xBu
                    || (v14 = v13[5]) == 0
                    || (result = siri::speech::schema_fb::LanguageDetected::Verify((siri::speech::schema_fb::StartSpeechTranslationLoggingRequest *)((char *)this + v14 + *(unsigned int *)((char *)this + v14)), a2)))
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v15 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v15 >= 0xDu && (v16 = v15[6]) != 0)
                        v17 = (const unsigned __int8 *)this + v16 + *(unsigned int *)((char *)this + v16);
                      else
                        v17 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v17);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v18 = *(int *)this;
                          v19 = -v18;
                          v20 = (unsigned __int16 *)((char *)this - v18);
                          if (*v20 >= 0xFu)
                          {
                            v21 = v20[7];
                            if (v21)
                            {
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21), 4uLL, 0);
                              if (!result)
                                return result;
                              v19 = -(uint64_t)*(int *)this;
                            }
                          }
                          v22 = (unsigned __int16 *)((char *)this + v19);
                          if (*v22 >= 0xFu && (v23 = v22[7]) != 0)
                            v24 = (_DWORD *)((char *)this + v23 + *(unsigned int *)((char *)this + v23));
                          else
                            v24 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v24);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                            if (result)
                            {
                              v25 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v25 >= 0x11u && (v26 = v25[8]) != 0)
                                v27 = (const unsigned __int8 *)this + v26 + *(unsigned int *)((char *)this + v26);
                              else
                                v27 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v27);
                              if (result)
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                                if (result)
                                {
                                  v28 = *(int *)this;
                                  v29 = -v28;
                                  v30 = (unsigned __int16 *)((char *)this - v28);
                                  if (*v30 >= 0x13u)
                                  {
                                    v31 = v30[9];
                                    if (v31)
                                    {
                                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v31+ *(unsigned int *)((char *)this + v31), 4uLL, 0);
                                      if (!result)
                                        return result;
                                      v29 = -(uint64_t)*(int *)this;
                                    }
                                  }
                                  v32 = (unsigned __int16 *)((char *)this + v29);
                                  if (*v32 >= 0x13u && (v33 = v32[9]) != 0)
                                    v34 = (_DWORD *)((char *)this + v33 + *(unsigned int *)((char *)this + v33));
                                  else
                                    v34 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v34);
                                  if (result)
                                  {
                                    --*((_DWORD *)a2 + 4);
                                    return 1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationPartialRecognitionResponse::Verify(siri::speech::schema_fb::SpeechTranslationPartialRecognitionResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  const unsigned __int8 *v22;
  unsigned __int16 *v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v20 >= 0xFu && (v21 = v20[7]) != 0)
                          v22 = (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21);
                        else
                          v22 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v22);
                        if (result)
                        {
                          v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                          v24 = *v23;
                          if (v24 < 0x11
                            || (!v23[8]
                             || (result = 0, v25 = *((_QWORD *)a2 + 1), v25 >= 5)
                             && v25 - 4 >= (unint64_t)this + v23[8] - *(_QWORD *)a2)
                            && (v24 < 0x13
                             || (v26 = v23[9]) == 0
                             || (result = 0, v27 = *((_QWORD *)a2 + 1), v27 >= 2)
                             && v27 - 1 >= (unint64_t)this + v26 - *(_QWORD *)a2))
                          {
                            --*((_DWORD *)a2 + 4);
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationFinalRecognitionResponse::Verify(siri::speech::schema_fb::SpeechTranslationFinalRecognitionResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  const unsigned __int8 *v22;
  unsigned __int16 *v23;
  uint64_t v24;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v20 >= 0xFu && (v21 = v20[7]) != 0)
                          v22 = (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21);
                        else
                          v22 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v22);
                        if (result)
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                          if (result)
                          {
                            v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                            if (*v23 < 0x11u
                              || (v24 = v23[8]) == 0
                              || (result = siri::speech::schema_fb::RecognitionResult::Verify((siri::speech::schema_fb::SpeechTranslationFinalRecognitionResponse *)((char *)this + v24 + *(unsigned int *)((char *)this + v24)), a2)))
                            {
                              --*((_DWORD *)a2 + 4);
                              return 1;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationMtResponse::Verify(siri::speech::schema_fb::SpeechTranslationMtResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  _DWORD *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  _DWORD *v35;
  unsigned __int16 *v36;
  uint64_t v37;
  unint64_t v38;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 < 0xDu
                      || (v18 = v17[6]) == 0
                      || (result = siri::speech::schema_fb::UserParameters::Verify((siri::speech::schema_fb::SpeechTranslationMtResponse *)((char *)this+ v18+ *(unsigned int *)((char *)this + v18)), a2)))
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v19 = *(int *)this;
                        v20 = -v19;
                        v21 = (unsigned __int16 *)((char *)this - v19);
                        if (*v21 >= 0xFu)
                        {
                          v22 = v21[7];
                          if (v22)
                          {
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22), 4uLL, 0);
                            if (!result)
                              return result;
                            v20 = -(uint64_t)*(int *)this;
                          }
                        }
                        v23 = (unsigned __int16 *)((char *)this + v20);
                        if (*v23 >= 0xFu && (v24 = v23[7]) != 0)
                          v25 = (_DWORD *)((char *)this + v24 + *(unsigned int *)((char *)this + v24));
                        else
                          v25 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::SpeechTranslationMtResponse_::TranslationPhrase>(a2, v25);
                        if (result)
                        {
                          v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v26 < 0x11u
                            || (v27 = v26[8]) == 0
                            || (result = 0, v28 = *((_QWORD *)a2 + 1), v28 >= 2)
                            && v28 - 1 >= (unint64_t)this + v27 - *(_QWORD *)a2)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                            if (result)
                            {
                              v29 = *(int *)this;
                              v30 = -v29;
                              v31 = (unsigned __int16 *)((char *)this - v29);
                              if (*v31 >= 0x13u)
                              {
                                v32 = v31[9];
                                if (v32)
                                {
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v32 + *(unsigned int *)((char *)this + v32), 4uLL, 0);
                                  if (!result)
                                    return result;
                                  v30 = -(uint64_t)*(int *)this;
                                }
                              }
                              v33 = (unsigned __int16 *)((char *)this + v30);
                              if (*v33 >= 0x13u && (v34 = v33[9]) != 0)
                                v35 = (_DWORD *)((char *)this + v34 + *(unsigned int *)((char *)this + v34));
                              else
                                v35 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::MTAlternativeDescription>(a2, v35);
                              if (result)
                              {
                                v36 = (unsigned __int16 *)((char *)this - *(int *)this);
                                if (*v36 < 0x15u
                                  || (v37 = v36[10]) == 0
                                  || (result = 0, v38 = *((_QWORD *)a2 + 1), v38 >= 2)
                                  && v38 - 1 >= (unint64_t)this + v37 - *(_QWORD *)a2)
                                {
                                  --*((_DWORD *)a2 + 4);
                                  return 1;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::SpeechTranslationMtResponse_::TranslationPhrase>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::SpeechTranslationMtResponse_::TranslationPhrase::Verify((siri::speech::schema_fb::SpeechTranslationMtResponse_::TranslationPhrase *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::MTAlternativeDescription>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::MTAlternativeDescription::Verify((siri::speech::schema_fb::MTAlternativeDescription *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationMtResponse_::TranslationPhrase::Verify(siri::speech::schema_fb::SpeechTranslationMtResponse_::TranslationPhrase *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unint64_t v23;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              v14 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v14 < 0xBu
                || (v15 = v14[5]) == 0
                || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 2)
                && v16 - 1 >= (unint64_t)this + v15 - *(_QWORD *)a2)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                if (result)
                {
                  v17 = *(int *)this;
                  v18 = -v17;
                  v19 = (unsigned __int16 *)((char *)this - v17);
                  if (*v19 >= 0xDu)
                  {
                    v20 = v19[6];
                    if (v20)
                    {
                      result = siri::speech::schema_fb::TranslationPhraseMetaInfo::Verify((siri::speech::schema_fb::SpeechTranslationMtResponse_::TranslationPhrase *)((char *)this + v20 + *(unsigned int *)((char *)this + v20)), a2);
                      if (!result)
                        return result;
                      v18 = -(uint64_t)*(int *)this;
                    }
                  }
                  v21 = (unsigned __int16 *)((char *)this + v18);
                  if (*v21 < 0xFu
                    || (v22 = v21[7]) == 0
                    || (result = 0, v23 = *((_QWORD *)a2 + 1), v23 >= 2)
                    && v23 - 1 >= (unint64_t)this + v22 - *(_QWORD *)a2)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TranslationPhraseMetaInfo::Verify(siri::speech::schema_fb::TranslationPhraseMetaInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan>(a2, v14);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan::Verify((siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan::Verify(siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range::Verify((siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan *)((char *)this + v6 + *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range>(a2, v13);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v14 = *(int *)this;
              v15 = -v14;
              v16 = (unsigned __int16 *)((char *)this - v14);
              if (*v16 >= 9u)
              {
                v17 = v16[4];
                if (v17)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                  if (!result)
                    return result;
                  v15 = -(uint64_t)*(int *)this;
                }
              }
              v18 = (unsigned __int16 *)((char *)this + v15);
              if (*v18 >= 9u && (v19 = v18[4]) != 0)
                v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
              else
                v20 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Alternative>(a2, v20);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range::Verify((siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Alternative>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Alternative::Verify((siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Alternative *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range::Verify(siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (v8 = v5[3]) == 0
       || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 5) && v9 - 4 >= (unint64_t)this + v8 - *(_QWORD *)a2))
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Alternative::Verify(siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Alternative *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5
      || (!v5[2]
       || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
      && (v6 < 7
       || (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 5) && v8 - 4 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
       && (v6 < 9
        || (v9 = v5[4]) == 0
        || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5) && v10 - 4 >= (unint64_t)this + v9 - *(_QWORD *)a2)))
    {
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::MTAlternativeDescription::Verify(siri::speech::schema_fb::MTAlternativeDescription *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = siri::speech::schema_fb::TranslationPhraseMetaInfo_::AlternativeSelectedSpan_::Range::Verify((siri::speech::schema_fb::MTAlternativeDescription *)((char *)this+ v9+ *(unsigned int *)((char *)this + v9)), a2)))
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v10 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v10 < 9u
              || (v11 = v10[4]) == 0
              || (result = siri::speech::schema_fb::Pronunciation::Verify((siri::speech::schema_fb::MTAlternativeDescription *)((char *)this+ v11+ *(unsigned int *)((char *)this + v11)), a2)))
            {
              --*((_DWORD *)a2 + 4);
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationTextToSpeechResponse::Verify(siri::speech::schema_fb::SpeechTranslationTextToSpeechResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 < 0xBu
                    || (v15 = v14[5]) == 0
                    || (result = siri::speech::schema_fb::TextToSpeechResponse::Verify((siri::speech::schema_fb::SpeechTranslationTextToSpeechResponse *)((char *)this + v15 + *(unsigned int *)((char *)this + v15)), a2)))
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechResponse::Verify(siri::speech::schema_fb::TextToSpeechResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int16 *v30;
  uint64_t v31;
  unsigned __int16 *v32;
  uint64_t v33;
  _DWORD *v34;
  unsigned __int16 *v35;
  uint64_t v36;
  unsigned __int16 *v37;
  uint64_t v38;
  unsigned __int16 *v39;
  uint64_t v40;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                  v18 = *v17;
                  if (v18 < 0xD
                    || (!v17[6]
                     || (result = 0, v19 = *((_QWORD *)a2 + 1), v19 >= 5)
                     && v19 - 4 >= (unint64_t)this + v17[6] - *(_QWORD *)a2)
                    && (v18 < 0xF
                     || (v20 = v17[7]) == 0
                     || (result = 0, v21 = *((_QWORD *)a2 + 1), v21 >= 5)
                     && v21 - 4 >= (unint64_t)this + v20 - *(_QWORD *)a2))
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                    if (result)
                    {
                      v22 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v22 < 0x11u
                        || (v23 = v22[8]) == 0
                        || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23), 1uLL, 0)))
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                        if (result)
                        {
                          v24 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v24 < 0x13u
                            || (v25 = v24[9]) == 0
                            || (result = siri::speech::schema_fb::AudioDescription::Verify((siri::speech::schema_fb::TextToSpeechResponse *)((char *)this+ v25+ *(unsigned int *)((char *)this + v25)), a2)))
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                            if (result)
                            {
                              v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v26 < 0x15u
                                || (v27 = v26[10]) == 0
                                || (result = siri::speech::schema_fb::AudioDescription::Verify((siri::speech::schema_fb::TextToSpeechResponse *)((char *)this+ v27+ *(unsigned int *)((char *)this + v27)), a2)))
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                if (result)
                                {
                                  v28 = *(int *)this;
                                  v29 = -v28;
                                  v30 = (unsigned __int16 *)((char *)this - v28);
                                  if (*v30 >= 0x17u)
                                  {
                                    v31 = v30[11];
                                    if (v31)
                                    {
                                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v31+ *(unsigned int *)((char *)this + v31), 4uLL, 0);
                                      if (!result)
                                        return result;
                                      v29 = -(uint64_t)*(int *)this;
                                    }
                                  }
                                  v32 = (unsigned __int16 *)((char *)this + v29);
                                  if (*v32 >= 0x17u && (v33 = v32[11]) != 0)
                                    v34 = (_DWORD *)((char *)this + v33 + *(unsigned int *)((char *)this + v33));
                                  else
                                    v34 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::WordTimingInfo>(a2, v34);
                                  if (result)
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x18u);
                                    if (result)
                                    {
                                      v35 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      if (*v35 < 0x19u
                                        || (v36 = v35[12]) == 0
                                        || (result = siri::speech::schema_fb::TextToSpeechMeta::Verify((siri::speech::schema_fb::TextToSpeechResponse *)((char *)this + v36 + *(unsigned int *)((char *)this + v36)), a2)))
                                      {
                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Au);
                                        if (result)
                                        {
                                          v37 = (unsigned __int16 *)((char *)this - *(int *)this);
                                          if (*v37 < 0x1Bu
                                            || (v38 = v37[13]) == 0
                                            || (result = siri::speech::schema_fb::TextToSpeechFeature::Verify((siri::speech::schema_fb::TextToSpeechResponse *)((char *)this + v38 + *(unsigned int *)((char *)this + v38)), a2)))
                                          {
                                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Cu);
                                            if (result)
                                            {
                                              v39 = (unsigned __int16 *)((char *)this - *(int *)this);
                                              if (*v39 < 0x1Du
                                                || (v40 = v39[14]) == 0
                                                || (result = siri::speech::schema_fb::TextToSpeechResponseDevData::Verify((siri::speech::schema_fb::TextToSpeechResponse *)((char *)this + v40 + *(unsigned int *)((char *)this + v40)), a2)))
                                              {
                                                --*((_DWORD *)a2 + 4);
                                                return 1;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::WordTimingInfo>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::WordTimingInfo::Verify((siri::speech::schema_fb::WordTimingInfo *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::AudioDescription::Verify(siri::speech::schema_fb::AudioDescription *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    v6 = *v5;
    if (v6 < 5)
      goto LABEL_38;
    if (!v5[2]
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 9) && v7 - 8 >= (unint64_t)this + v5[2] - *(_QWORD *)a2)
    {
      if (v6 < 7)
        goto LABEL_38;
      if (!v5[3]
        || (result = 0, v8 = *((_QWORD *)a2 + 1), v8 >= 5) && v8 - 4 >= (unint64_t)this + v5[3] - *(_QWORD *)a2)
      {
        if (v6 < 9)
          goto LABEL_38;
        if (!v5[4]
          || (result = 0, v9 = *((_QWORD *)a2 + 1), v9 >= 5)
          && v9 - 4 >= (unint64_t)this + v5[4] - *(_QWORD *)a2)
        {
          if (v6 < 0xB)
            goto LABEL_38;
          if (!v5[5]
            || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
            && v10 - 4 >= (unint64_t)this + v5[5] - *(_QWORD *)a2)
          {
            if (v6 < 0xD)
              goto LABEL_38;
            if (!v5[6]
              || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
              && v11 - 4 >= (unint64_t)this + v5[6] - *(_QWORD *)a2)
            {
              if (v6 < 0xF)
                goto LABEL_38;
              if (!v5[7]
                || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 5)
                && v12 - 4 >= (unint64_t)this + v5[7] - *(_QWORD *)a2)
              {
                if (v6 < 0x11
                  || (!v5[8]
                   || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
                   && v13 - 4 >= (unint64_t)this + v5[8] - *(_QWORD *)a2)
                  && (v6 < 0x13
                   || (!v5[9]
                    || (result = 0, v14 = *((_QWORD *)a2 + 1), v14 >= 5)
                    && v14 - 4 >= (unint64_t)this + v5[9] - *(_QWORD *)a2)
                   && (v6 < 0x15
                    || (v15 = v5[10]) == 0
                    || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 5)
                    && v16 - 4 >= (unint64_t)this + v15 - *(_QWORD *)a2)))
                {
LABEL_38:
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::WordTimingInfo::Verify(siri::speech::schema_fb::WordTimingInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
          goto LABEL_24;
        if (!v8[3]
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v8[3] - *(_QWORD *)a2)
        {
          if (v9 < 9
            || (!v8[4]
             || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
             && v11 - 4 >= (unint64_t)this + v8[4] - *(_QWORD *)a2)
            && (v9 < 0xB
             || (!v8[5]
              || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 5)
              && v12 - 4 >= (unint64_t)this + v8[5] - *(_QWORD *)a2)
             && (v9 < 0xD
              || (v13 = v8[6]) == 0
              || (result = 0, v14 = *((_QWORD *)a2 + 1), v14 >= 5)
              && v14 - 4 >= (unint64_t)this + v13 - *(_QWORD *)a2)))
          {
LABEL_24:
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechMeta::Verify(siri::speech::schema_fb::TextToSpeechMeta *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::TextToSpeechVoice::Verify((siri::speech::schema_fb::TextToSpeechMeta *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v7 < 7u
            || (v8 = v7[3]) == 0
            || (result = siri::speech::schema_fb::CancelRequest::Verify((siri::speech::schema_fb::TextToSpeechMeta *)((char *)this+ v8+ *(unsigned int *)((char *)this + v8)), a2)))
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v9 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v9 < 9u
                || (v10 = v9[4]) == 0
                || (result = siri::speech::schema_fb::QSSVersionInfo::Verify((siri::speech::schema_fb::TextToSpeechMeta *)((char *)this+ v10+ *(unsigned int *)((char *)this + v10)), a2)))
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechVoice::Verify(siri::speech::schema_fb::TextToSpeechVoice *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  const unsigned __int8 *v22;
  unsigned __int16 *v23;
  uint64_t v24;
  const unsigned __int8 *v25;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                        v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                      else
                        v19 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v20 >= 0xFu && (v21 = v20[7]) != 0)
                            v22 = (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21);
                          else
                            v22 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v22);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                            if (result)
                            {
                              v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v23 >= 0x11u && (v24 = v23[8]) != 0)
                                v25 = (const unsigned __int8 *)this + v24 + *(unsigned int *)((char *)this + v24);
                              else
                                v25 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v25);
                              if (result)
                              {
                                --*((_DWORD *)a2 + 4);
                                return 1;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::QSSVersionInfo::Verify(siri::speech::schema_fb::QSSVersionInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechFeature::Verify(siri::speech::schema_fb::TextToSpeechFeature *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  unsigned __int16 *v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  unsigned __int16 *v37;
  uint64_t v38;
  _DWORD *v39;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Pronunciation>(a2, v11);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v12 = *(int *)this;
          v13 = -v12;
          v14 = (unsigned __int16 *)((char *)this - v12);
          if (*v14 >= 7u)
          {
            v15 = v14[3];
            if (v15)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
              if (!result)
                return result;
              v13 = -(uint64_t)*(int *)this;
            }
          }
          v16 = (unsigned __int16 *)((char *)this + v13);
          if (*v16 >= 7u && (v17 = v16[3]) != 0)
            v18 = (_DWORD *)((char *)this + v17 + *(unsigned int *)((char *)this + v17));
          else
            v18 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TTSPhonemeSequence>(a2, v18);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v19 = *(int *)this;
              v20 = -v19;
              v21 = (unsigned __int16 *)((char *)this - v19);
              if (*v21 >= 9u)
              {
                v22 = v21[4];
                if (v22)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22), 4uLL, 0);
                  if (!result)
                    return result;
                  v20 = -(uint64_t)*(int *)this;
                }
              }
              v23 = (unsigned __int16 *)((char *)this + v20);
              if (*v23 >= 9u && (v24 = v23[4]) != 0)
                v25 = (_DWORD *)((char *)this + v24 + *(unsigned int *)((char *)this + v24));
              else
                v25 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TTSPrompts>(a2, v25);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v26 = *(int *)this;
                  v27 = -v26;
                  v28 = (unsigned __int16 *)((char *)this - v26);
                  if (*v28 >= 0xBu)
                  {
                    v29 = v28[5];
                    if (v29)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v29 + *(unsigned int *)((char *)this + v29), 4uLL, 0);
                      if (!result)
                        return result;
                      v27 = -(uint64_t)*(int *)this;
                    }
                  }
                  v30 = (unsigned __int16 *)((char *)this + v27);
                  if (*v30 >= 0xBu && (v31 = v30[5]) != 0)
                    v32 = (_DWORD *)((char *)this + v31 + *(unsigned int *)((char *)this + v31));
                  else
                    v32 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v32);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v33 = *(int *)this;
                      v34 = -v33;
                      v35 = (unsigned __int16 *)((char *)this - v33);
                      if (*v35 >= 0xDu)
                      {
                        v36 = v35[6];
                        if (v36)
                        {
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v36 + *(unsigned int *)((char *)this + v36), 4uLL, 0);
                          if (!result)
                            return result;
                          v34 = -(uint64_t)*(int *)this;
                        }
                      }
                      v37 = (unsigned __int16 *)((char *)this + v34);
                      if (*v37 >= 0xDu && (v38 = v37[6]) != 0)
                        v39 = (_DWORD *)((char *)this + v38 + *(unsigned int *)((char *)this + v38));
                      else
                        v39 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioPacket>(a2, v39);
                      if (result)
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TTSPhonemeSequence>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TTSPhonemeSequence::Verify((siri::speech::schema_fb::TTSPhonemeSequence *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TTSPrompts>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TTSPrompts::Verify((siri::speech::schema_fb::TTSPrompts *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TTSPhonemeSequence::Verify(siri::speech::schema_fb::TTSPhonemeSequence *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::AudioPacket>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TTSPrompts::Verify(siri::speech::schema_fb::TTSPrompts *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  _DWORD *v18;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v11);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v12 = *(int *)this;
          v13 = -v12;
          v14 = (unsigned __int16 *)((char *)this - v12);
          if (*v14 >= 7u)
          {
            v15 = v14[3];
            if (v15)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
              if (!result)
                return result;
              v13 = -(uint64_t)*(int *)this;
            }
          }
          v16 = (unsigned __int16 *)((char *)this + v13);
          if (*v16 >= 7u && (v17 = v16[3]) != 0)
            v18 = (_DWORD *)((char *)this + v17 + *(unsigned int *)((char *)this + v17));
          else
            v18 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v18);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechResponseDevData::Verify(siri::speech::schema_fb::TextToSpeechResponseDevData *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  const unsigned __int8 *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  const unsigned __int8 *v23;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = siri::speech::schema_fb::QSSVersionInfo::Verify((siri::speech::schema_fb::TextToSpeechResponseDevData *)((char *)this+ v11+ *(unsigned int *)((char *)this + v11)), a2);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 < 9u
            || (v13 = v12[4]) == 0
            || (result = 0, v14 = *((_QWORD *)a2 + 1), v14 >= 2)
            && v14 - 1 >= (unint64_t)this + v13 - *(_QWORD *)a2)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
            if (result)
            {
              v15 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v15 >= 0xBu && (v16 = v15[5]) != 0)
                v17 = (const unsigned __int8 *)this + v16 + *(unsigned int *)((char *)this + v16);
              else
                v17 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v17);
              if (result)
              {
                v18 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v18 < 0xDu
                  || (v19 = v18[6]) == 0
                  || (result = 0, v20 = *((_QWORD *)a2 + 1), v20 >= 5)
                  && v20 - 4 >= (unint64_t)this + v19 - *(_QWORD *)a2)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                  if (result)
                  {
                    v21 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v21 >= 0xFu && (v22 = v21[7]) != 0)
                      v23 = (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22);
                    else
                      v23 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v23);
                    if (result)
                    {
                      --*((_DWORD *)a2 + 4);
                      return 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::SpeechTranslationServerEndpointFeatures::Verify(siri::speech::schema_fb::SpeechTranslationServerEndpointFeatures *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 < 0xBu
                    || (v15 = v14[5]) == 0
                    || (result = siri::speech::schema_fb::ServerEndpointFeatures::Verify((siri::speech::schema_fb::SpeechTranslationServerEndpointFeatures *)((char *)this + v15 + *(unsigned int *)((char *)this + v15)), a2)))
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarBatchTranslationMessage::Verify(siri::speech::qss_fb::BlazarBatchTranslationMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::BatchTranslationResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::BlazarBatchTranslationMessage *)((char *)this
                                                                      + v8[3]
                                                                      + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::BlazarBatchTranslationMessage_::VerifySessionMessageUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarBatchTranslationMessage_::VerifySessionMessageUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::BatchTranslationResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_16;
      result = siri::speech::schema_fb::BatchTranslationRequest::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_16;
      result = siri::speech::schema_fb::BatchTranslationFeedbackRequest::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_16;
      result = siri::speech::schema_fb::BatchTranslationLoggingRequest::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_16;
      result = siri::speech::schema_fb::UserParameters::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_16;
      result = siri::speech::schema_fb::BatchTranslationResponse::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_16;
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_16;
      result = siri::speech::schema_fb::TranslationSupportedLanguagesResponse::Verify(this, a1);
      break;
    default:
LABEL_16:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationRequest::Verify(siri::speech::schema_fb::BatchTranslationRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  _DWORD *v23;
  unsigned __int16 *v24;
  uint64_t v25;
  const unsigned __int8 *v26;
  unsigned __int16 *v27;
  uint64_t v28;
  const unsigned __int8 *v29;
  unsigned __int16 *v30;
  uint64_t v31;
  const unsigned __int8 *v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int16 *v38;
  uint64_t v39;
  unsigned __int16 *v40;
  uint64_t v41;
  unint64_t v42;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v17 = *(int *)this;
                      v18 = -v17;
                      v19 = (unsigned __int16 *)((char *)this - v17);
                      if (*v19 >= 0xDu)
                      {
                        v20 = v19[6];
                        if (v20)
                        {
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20), 4uLL, 0);
                          if (!result)
                            return result;
                          v18 = -(uint64_t)*(int *)this;
                        }
                      }
                      v21 = (unsigned __int16 *)((char *)this + v18);
                      if (*v21 >= 0xDu && (v22 = v21[6]) != 0)
                        v23 = (_DWORD *)((char *)this + v22 + *(unsigned int *)((char *)this + v22));
                      else
                        v23 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::BatchTranslationRequest_::Paragraph>(a2, v23);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v24 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                            v26 = (const unsigned __int8 *)this + v25 + *(unsigned int *)((char *)this + v25);
                          else
                            v26 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v26);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                            if (result)
                            {
                              v27 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v27 >= 0x11u && (v28 = v27[8]) != 0)
                                v29 = (const unsigned __int8 *)this + v28 + *(unsigned int *)((char *)this + v28);
                              else
                                v29 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v29);
                              if (result)
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                                if (result)
                                {
                                  v30 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v30 >= 0x13u && (v31 = v30[9]) != 0)
                                    v32 = (const unsigned __int8 *)this + v31 + *(unsigned int *)((char *)this + v31);
                                  else
                                    v32 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v32);
                                  if (result)
                                  {
                                    v33 = (unsigned __int16 *)((char *)this - *(int *)this);
                                    if (*v33 < 0x15u
                                      || (v34 = v33[10]) == 0
                                      || (result = 0, v35 = *((_QWORD *)a2 + 1), v35 >= 5)
                                      && v35 - 4 >= (unint64_t)this + v34 - *(_QWORD *)a2)
                                    {
                                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                      if (result)
                                      {
                                        v36 = *(int *)this;
                                        v37 = -v36;
                                        v38 = (unsigned __int16 *)((char *)this - v36);
                                        if (*v38 >= 0x17u)
                                        {
                                          v39 = v38[11];
                                          if (v39)
                                          {
                                            result = siri::speech::schema_fb::TranslationOptions::Verify((siri::speech::schema_fb::BatchTranslationRequest *)((char *)this + v39 + *(unsigned int *)((char *)this + v39)), a2);
                                            if (!result)
                                              return result;
                                            v37 = -(uint64_t)*(int *)this;
                                          }
                                        }
                                        v40 = (unsigned __int16 *)((char *)this + v37);
                                        if (*v40 < 0x19u
                                          || (v41 = v40[12]) == 0
                                          || (result = 0, v42 = *((_QWORD *)a2 + 1), v42 >= 2)
                                          && v42 - 1 >= (unint64_t)this + v41 - *(_QWORD *)a2)
                                        {
                                          --*((_DWORD *)a2 + 4);
                                          return 1;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::BatchTranslationRequest_::Paragraph>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::BatchTranslationRequest_::Paragraph::Verify((siri::speech::schema_fb::BatchTranslationRequest_::Paragraph *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationRequest_::Paragraph::Verify(siri::speech::schema_fb::BatchTranslationRequest_::Paragraph *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  _DWORD *v17;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = *(int *)this;
              v12 = -v11;
              v13 = (unsigned __int16 *)((char *)this - v11);
              if (*v13 >= 9u)
              {
                v14 = v13[4];
                if (v14)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v14 + *(unsigned int *)((char *)this + v14), 4uLL, 0);
                  if (!result)
                    return result;
                  v12 = -(uint64_t)*(int *)this;
                }
              }
              v15 = (unsigned __int16 *)((char *)this + v12);
              if (*v15 >= 9u && (v16 = v15[4]) != 0)
                v17 = (_DWORD *)((char *)this + v16 + *(unsigned int *)((char *)this + v16));
              else
                v17 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Span>(a2, v17);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationFeedbackRequest::Verify(siri::speech::schema_fb::BatchTranslationFeedbackRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  const unsigned __int8 *v22;
  unsigned __int16 *v23;
  uint64_t v24;
  const unsigned __int8 *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  const unsigned __int8 *v28;
  unsigned __int16 *v29;
  uint64_t v30;
  const unsigned __int8 *v31;
  unsigned __int16 *v32;
  uint64_t v33;
  const unsigned __int8 *v34;
  unsigned __int16 *v35;
  uint64_t v36;
  const unsigned __int8 *v37;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                        v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                      else
                        v19 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v20 >= 0xFu && (v21 = v20[7]) != 0)
                            v22 = (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21);
                          else
                            v22 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v22);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                            if (result)
                            {
                              v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v23 >= 0x11u && (v24 = v23[8]) != 0)
                                v25 = (const unsigned __int8 *)this + v24 + *(unsigned int *)((char *)this + v24);
                              else
                                v25 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v25);
                              if (result)
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                                if (result)
                                {
                                  v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v26 >= 0x13u && (v27 = v26[9]) != 0)
                                    v28 = (const unsigned __int8 *)this + v27 + *(unsigned int *)((char *)this + v27);
                                  else
                                    v28 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v28);
                                  if (result)
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                                    if (result)
                                    {
                                      v29 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      if (*v29 >= 0x15u && (v30 = v29[10]) != 0)
                                        v31 = (const unsigned __int8 *)this
                                            + v30
                                            + *(unsigned int *)((char *)this + v30);
                                      else
                                        v31 = 0;
                                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v31);
                                      if (result)
                                      {
                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                        if (result)
                                        {
                                          v32 = (unsigned __int16 *)((char *)this - *(int *)this);
                                          if (*v32 >= 0x17u && (v33 = v32[11]) != 0)
                                            v34 = (const unsigned __int8 *)this
                                                + v33
                                                + *(unsigned int *)((char *)this + v33);
                                          else
                                            v34 = 0;
                                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v34);
                                          if (result)
                                          {
                                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x18u);
                                            if (result)
                                            {
                                              v35 = (unsigned __int16 *)((char *)this - *(int *)this);
                                              if (*v35 >= 0x19u && (v36 = v35[12]) != 0)
                                                v37 = (const unsigned __int8 *)this
                                                    + v36
                                                    + *(unsigned int *)((char *)this + v36);
                                              else
                                                v37 = 0;
                                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v37);
                                              if (result)
                                              {
                                                --*((_DWORD *)a2 + 4);
                                                return 1;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationLoggingRequest::Verify(siri::speech::schema_fb::BatchTranslationLoggingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7
          || (!v8[3]
           || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
           && v10 - 4 >= (unint64_t)this + v8[3] - *(_QWORD *)a2)
          && (v9 < 9
           || (!v8[4]
            || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
            && v11 - 4 >= (unint64_t)this + v8[4] - *(_QWORD *)a2)
           && (v9 < 0xB
            || (v12 = v8[5]) == 0
            || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
            && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)))
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationResponse::Verify(siri::speech::schema_fb::BatchTranslationResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  _DWORD *v33;
  unsigned __int16 *v34;
  uint64_t v35;
  const unsigned __int8 *v36;
  unsigned __int16 *v37;
  uint64_t v38;
  unint64_t v39;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = *(int *)this;
                        v21 = -v20;
                        v22 = (unsigned __int16 *)((char *)this - v20);
                        if (*v22 >= 0xFu)
                        {
                          v23 = v22[7];
                          if (v23)
                          {
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23), 4uLL, 0);
                            if (!result)
                              return result;
                            v21 = -(uint64_t)*(int *)this;
                          }
                        }
                        v24 = (unsigned __int16 *)((char *)this + v21);
                        if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                          v26 = (_DWORD *)((char *)this + v25 + *(unsigned int *)((char *)this + v25));
                        else
                          v26 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RepeatedSpan>(a2, v26);
                        if (result)
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                          if (result)
                          {
                            v27 = *(int *)this;
                            v28 = -v27;
                            v29 = (unsigned __int16 *)((char *)this - v27);
                            if (*v29 >= 0x11u)
                            {
                              v30 = v29[8];
                              if (v30)
                              {
                                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v30 + *(unsigned int *)((char *)this + v30), 4uLL, 0);
                                if (!result)
                                  return result;
                                v28 = -(uint64_t)*(int *)this;
                              }
                            }
                            v31 = (unsigned __int16 *)((char *)this + v28);
                            if (*v31 >= 0x11u && (v32 = v31[8]) != 0)
                              v33 = (_DWORD *)((char *)this + v32 + *(unsigned int *)((char *)this + v32));
                            else
                              v33 = 0;
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence>(a2, v33);
                            if (result)
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                              if (result)
                              {
                                v34 = (unsigned __int16 *)((char *)this - *(int *)this);
                                if (*v34 >= 0x13u && (v35 = v34[9]) != 0)
                                  v36 = (const unsigned __int8 *)this + v35 + *(unsigned int *)((char *)this + v35);
                                else
                                  v36 = 0;
                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v36);
                                if (result)
                                {
                                  v37 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v37 < 0x15u
                                    || (v38 = v37[10]) == 0
                                    || (result = 0, v39 = *((_QWORD *)a2 + 1), v39 >= 2)
                                    && v39 - 1 >= (unint64_t)this + v38 - *(_QWORD *)a2)
                                  {
                                    --*((_DWORD *)a2 + 4);
                                    return 1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RepeatedSpan>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::RepeatedSpan::Verify((siri::speech::schema_fb::RepeatedSpan *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence::Verify((siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::RepeatedSpan::Verify(siri::speech::schema_fb::RepeatedSpan *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Span>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence::Verify(siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  const unsigned __int8 *v9;
  unsigned __int16 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  _DWORD *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unint64_t v28;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::Span::Verify((siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v7 >= 7u && (v8 = v7[3]) != 0)
            v9 = (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8);
          else
            v9 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v9);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v10 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v10 < 9u
                || (v11 = v10[4]) == 0
                || (result = siri::speech::schema_fb::Span::Verify((siri::speech::schema_fb::BatchTranslationResponse_::TranslatedSentence *)((char *)this + v11 + *(unsigned int *)((char *)this + v11)), a2)))
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v12 = *(int *)this;
                  v13 = -v12;
                  v14 = (unsigned __int16 *)((char *)this - v12);
                  if (*v14 >= 0xBu)
                  {
                    v15 = v14[5];
                    if (v15)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
                      if (!result)
                        return result;
                      v13 = -(uint64_t)*(int *)this;
                    }
                  }
                  v16 = (unsigned __int16 *)((char *)this + v13);
                  if (*v16 >= 0xBu && (v17 = v16[5]) != 0)
                    v18 = (_DWORD *)((char *)this + v17 + *(unsigned int *)((char *)this + v17));
                  else
                    v18 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::BatchTranslationResponse_::TranslationPhrase>(a2, v18);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v19 = *(int *)this;
                      v20 = -v19;
                      v21 = (unsigned __int16 *)((char *)this - v19);
                      if (*v21 >= 0xDu)
                      {
                        v22 = v21[6];
                        if (v22)
                        {
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22), 4uLL, 0);
                          if (!result)
                            return result;
                          v20 = -(uint64_t)*(int *)this;
                        }
                      }
                      v23 = (unsigned __int16 *)((char *)this + v20);
                      if (*v23 >= 0xDu && (v24 = v23[6]) != 0)
                        v25 = (_DWORD *)((char *)this + v24 + *(unsigned int *)((char *)this + v24));
                      else
                        v25 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::MTAlternativeDescription>(a2, v25);
                      if (result)
                      {
                        v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v26 < 0xFu
                          || (v27 = v26[7]) == 0
                          || (result = 0, v28 = *((_QWORD *)a2 + 1), v28 >= 2)
                          && v28 - 1 >= (unint64_t)this + v27 - *(_QWORD *)a2)
                        {
                          --*((_DWORD *)a2 + 4);
                          return 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::BatchTranslationResponse_::TranslationPhrase>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::BatchTranslationResponse_::TranslationPhrase::Verify((siri::speech::schema_fb::BatchTranslationResponse_::TranslationPhrase *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationResponse_::TranslationPhrase::Verify(siri::speech::schema_fb::BatchTranslationResponse_::TranslationPhrase *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  unint64_t v30;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              v14 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v14 < 0xBu
                || (v15 = v14[5]) == 0
                || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 2)
                && v16 - 1 >= (unint64_t)this + v15 - *(_QWORD *)a2)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                if (result)
                {
                  v17 = *(int *)this;
                  v18 = -v17;
                  v19 = (unsigned __int16 *)((char *)this - v17);
                  if (*v19 >= 0xDu)
                  {
                    v20 = v19[6];
                    if (v20)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20), 4uLL, 0);
                      if (!result)
                        return result;
                      v18 = -(uint64_t)*(int *)this;
                    }
                  }
                  v21 = (unsigned __int16 *)((char *)this + v18);
                  if (*v21 >= 0xDu && (v22 = v21[6]) != 0)
                    v23 = (_DWORD *)((char *)this + v22 + *(unsigned int *)((char *)this + v22));
                  else
                    v23 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RepeatedSpan>(a2, v23);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                    if (result)
                    {
                      v24 = *(int *)this;
                      v25 = -v24;
                      v26 = (unsigned __int16 *)((char *)this - v24);
                      if (*v26 >= 0xFu)
                      {
                        v27 = v26[7];
                        if (v27)
                        {
                          result = siri::speech::schema_fb::TranslationPhraseMetaInfo::Verify((siri::speech::schema_fb::BatchTranslationResponse_::TranslationPhrase *)((char *)this + v27 + *(unsigned int *)((char *)this + v27)), a2);
                          if (!result)
                            return result;
                          v25 = -(uint64_t)*(int *)this;
                        }
                      }
                      v28 = (unsigned __int16 *)((char *)this + v25);
                      if (*v28 < 0x11u
                        || (v29 = v28[8]) == 0
                        || (result = 0, v30 = *((_QWORD *)a2 + 1), v30 >= 2)
                        && v30 - 1 >= (unint64_t)this + v29 - *(_QWORD *)a2)
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TranslationSupportedLanguagesResponse::Verify(siri::speech::schema_fb::TranslationSupportedLanguagesResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = *(int *)this;
                v15 = -v14;
                v16 = (unsigned __int16 *)((char *)this - v14);
                if (*v16 >= 0xBu)
                {
                  v17 = v16[5];
                  if (v17)
                  {
                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                    if (!result)
                      return result;
                    v15 = -(uint64_t)*(int *)this;
                  }
                }
                v18 = (unsigned __int16 *)((char *)this + v15);
                if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                  v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
                else
                  v20 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v20);
                if (result)
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarTextToSpeechRouterMessage::Verify(siri::speech::qss_fb::BlazarTextToSpeechRouterMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::TextToSpeechRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::BlazarTextToSpeechRouterMessage *)((char *)this
                                                                + v8[3]
                                                                + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::TextToSpeechRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::TextToSpeechResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarTextToSpeechRouterStreamingMessage::Verify(siri::speech::qss_fb::BlazarTextToSpeechRouterStreamingMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartTextToSpeechStreamingRequest *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_25:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  else if (v8[3])
  {
    v10 = (siri::speech::qss_fb::BlazarTextToSpeechRouterStreamingMessage *)((char *)this
                                                                           + v8[3]
                                                                           + *(unsigned int *)((char *)this + v8[3]));
    goto LABEL_12;
  }
  v10 = 0;
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_25;
  switch(*((_BYTE *)this + v11))
  {
    case 1:
      if (!v10 || siri::speech::schema_fb::StartTextToSpeechStreamingRequest::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 2:
      if (!v10 || siri::speech::schema_fb::BeginTextToSpeechStreamingResponse::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 3:
      if (!v10 || siri::speech::schema_fb::PartialTextToSpeechStreamingResponse::Verify(v10, a2))
        goto LABEL_25;
LABEL_22:
      result = 0;
      break;
    case 4:
      if (!v10)
        goto LABEL_25;
      result = siri::speech::schema_fb::FinalTextToSpeechStreamingResponse::Verify(v10, a2);
      if (result)
        goto LABEL_25;
      break;
    default:
      goto LABEL_25;
  }
  return result;
}

BOOL siri::speech::schema_fb::StartTextToSpeechStreamingRequest::Verify(siri::speech::schema_fb::StartTextToSpeechStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  const unsigned __int8 *v22;
  unsigned __int16 *v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;
  const unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unsigned __int16 *v35;
  uint64_t v36;
  _DWORD *v37;
  unsigned __int16 *v38;
  uint64_t v39;
  unint64_t v40;
  unsigned __int16 *v41;
  uint64_t v42;
  unsigned __int16 *v43;
  uint64_t v44;
  unsigned __int16 *v45;
  uint64_t v46;
  unsigned __int16 *v47;
  uint64_t v48;
  unsigned __int16 *v49;
  uint64_t v50;
  unsigned __int16 *v51;
  uint64_t v52;
  unsigned __int16 *v53;
  uint64_t v54;
  unsigned __int16 *v55;
  uint64_t v56;
  unsigned __int16 *v57;
  uint64_t v58;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                    v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                        v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                      else
                        v19 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v20 >= 0xFu && (v21 = v20[7]) != 0)
                            v22 = (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21);
                          else
                            v22 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v22);
                          if (result)
                          {
                            v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                            v24 = *v23;
                            if (v24 < 0x11
                              || (!v23[8]
                               || (result = 0, v25 = *((_QWORD *)a2 + 1), v25 >= 5)
                               && v25 - 4 >= (unint64_t)this + v23[8] - *(_QWORD *)a2)
                              && (v24 < 0x13
                               || (v26 = v23[9]) == 0
                               || (result = 0, v27 = *((_QWORD *)a2 + 1), v27 >= 2)
                               && v27 - 1 >= (unint64_t)this + v26 - *(_QWORD *)a2))
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                              if (result)
                              {
                                v28 = (unsigned __int16 *)((char *)this - *(int *)this);
                                if (*v28 >= 0x15u && (v29 = v28[10]) != 0)
                                  v30 = (const unsigned __int8 *)this + v29 + *(unsigned int *)((char *)this + v29);
                                else
                                  v30 = 0;
                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v30);
                                if (result)
                                {
                                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                  if (result)
                                  {
                                    v31 = *(int *)this;
                                    v32 = -v31;
                                    v33 = (unsigned __int16 *)((char *)this - v31);
                                    if (*v33 >= 0x17u)
                                    {
                                      v34 = v33[11];
                                      if (v34)
                                      {
                                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v34+ *(unsigned int *)((char *)this + v34), 4uLL, 0);
                                        if (!result)
                                          return result;
                                        v32 = -(uint64_t)*(int *)this;
                                      }
                                    }
                                    v35 = (unsigned __int16 *)((char *)this + v32);
                                    if (*v35 >= 0x17u && (v36 = v35[11]) != 0)
                                      v37 = (_DWORD *)((char *)this + v36 + *(unsigned int *)((char *)this + v36));
                                    else
                                      v37 = 0;
                                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserParameters>(a2, v37);
                                    if (result)
                                    {
                                      v38 = (unsigned __int16 *)((char *)this - *(int *)this);
                                      if (*v38 < 0x19u
                                        || (v39 = v38[12]) == 0
                                        || (result = 0, v40 = *((_QWORD *)a2 + 1), v40 >= 5)
                                        && v40 - 4 >= (unint64_t)this + v39 - *(_QWORD *)a2)
                                      {
                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Au);
                                        if (result)
                                        {
                                          v41 = (unsigned __int16 *)((char *)this - *(int *)this);
                                          if (*v41 < 0x1Bu
                                            || (v42 = v41[13]) == 0
                                            || (result = siri::speech::schema_fb::TextToSpeechRequestMeta::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v42 + *(unsigned int *)((char *)this + v42)), a2)))
                                          {
                                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Cu);
                                            if (result)
                                            {
                                              v43 = (unsigned __int16 *)((char *)this - *(int *)this);
                                              if (*v43 < 0x1Du
                                                || (v44 = v43[14]) == 0
                                                || (result = siri::speech::schema_fb::TextToSpeechRequestContext::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v44 + *(unsigned int *)((char *)this + v44)), a2)))
                                              {
                                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x1Eu);
                                                if (result)
                                                {
                                                  v45 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                  if (*v45 < 0x1Fu
                                                    || (v46 = v45[15]) == 0
                                                    || (result = siri::speech::schema_fb::Pronunciation::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v46 + *(unsigned int *)((char *)this + v46)), a2)))
                                                  {
                                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x20u);
                                                    if (result)
                                                    {
                                                      v47 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                      if (*v47 < 0x21u
                                                        || (v48 = v47[16]) == 0
                                                        || (result = siri::speech::schema_fb::TTSRequestFeatureFlags::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v48 + *(unsigned int *)((char *)this + v48)), a2)))
                                                      {
                                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x22u);
                                                        if (result)
                                                        {
                                                          v49 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                          if (*v49 < 0x23u
                                                            || (v50 = v49[17]) == 0
                                                            || (result = siri::speech::schema_fb::TextToSpeechRequestDebug::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v50 + *(unsigned int *)((char *)this + v50)), a2)))
                                                          {
                                                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x24u);
                                                            if (result)
                                                            {
                                                              v51 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                              if (*v51 < 0x25u
                                                                || (v52 = v51[18]) == 0
                                                                || (result = siri::speech::schema_fb::TextToSpeechUserProfile::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v52 + *(unsigned int *)((char *)this + v52)), a2)))
                                                              {
                                                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x26u);
                                                                if (result)
                                                                {
                                                                  v53 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                  if (*v53 < 0x27u
                                                                    || (v54 = v53[19]) == 0
                                                                    || (result = siri::speech::schema_fb::TextToSpeechRequestDevConfig::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v54 + *(unsigned int *)((char *)this + v54)), a2)))
                                                                  {
                                                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x28u);
                                                                    if (result)
                                                                    {
                                                                      v55 = (unsigned __int16 *)((char *)this
                                                                                               - *(int *)this);
                                                                      if (*v55 < 0x29u
                                                                        || (v56 = v55[20]) == 0
                                                                        || (result = siri::speech::schema_fb::TextToSpeechRequestProsodyTransferConfig::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v56 + *(unsigned int *)((char *)this + v56)), a2)))
                                                                      {
                                                                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x2Au);
                                                                        if (result)
                                                                        {
                                                                          v57 = (unsigned __int16 *)((char *)this - *(int *)this);
                                                                          if (*v57 < 0x2Bu
                                                                            || (v58 = v57[21]) == 0
                                                                            || (result = siri::speech::schema_fb::TextToSpeechRequestProsodyControlConfig::Verify((siri::speech::schema_fb::StartTextToSpeechStreamingRequest *)((char *)this + v58 + *(unsigned int *)((char *)this + v58)), a2)))
                                                                          {
                                                                            --*((_DWORD *)a2 + 4);
                                                                            return 1;
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::BeginTextToSpeechStreamingResponse::Verify(siri::speech::schema_fb::BeginTextToSpeechStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  unsigned __int16 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unint64_t v33;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v20 < 0xFu
                        || (v21 = v20[7]) == 0
                        || (result = 0, v22 = *((_QWORD *)a2 + 1), v22 >= 5)
                        && v22 - 4 >= (unint64_t)this + v21 - *(_QWORD *)a2)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                        if (result)
                        {
                          v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v23 < 0x11u
                            || (v24 = v23[8]) == 0
                            || (result = siri::speech::schema_fb::AudioDescription::Verify((siri::speech::schema_fb::BeginTextToSpeechStreamingResponse *)((char *)this + v24 + *(unsigned int *)((char *)this + v24)), a2)))
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                            if (result)
                            {
                              v25 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v25 < 0x13u
                                || (v26 = v25[9]) == 0
                                || (result = siri::speech::schema_fb::AudioDescription::Verify((siri::speech::schema_fb::BeginTextToSpeechStreamingResponse *)((char *)this + v26 + *(unsigned int *)((char *)this + v26)), a2)))
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                                if (result)
                                {
                                  v27 = *(int *)this;
                                  v28 = -v27;
                                  v29 = (unsigned __int16 *)((char *)this - v27);
                                  if (*v29 >= 0x15u)
                                  {
                                    v30 = v29[10];
                                    if (v30)
                                    {
                                      result = siri::speech::schema_fb::TextToSpeechMeta::Verify((siri::speech::schema_fb::BeginTextToSpeechStreamingResponse *)((char *)this + v30 + *(unsigned int *)((char *)this + v30)), a2);
                                      if (!result)
                                        return result;
                                      v28 = -(uint64_t)*(int *)this;
                                    }
                                  }
                                  v31 = (unsigned __int16 *)((char *)this + v28);
                                  if (*v31 < 0x17u
                                    || (v32 = v31[11]) == 0
                                    || (result = 0, v33 = *((_QWORD *)a2 + 1), v33 >= 5)
                                    && v33 - 4 >= (unint64_t)this + v32 - *(_QWORD *)a2)
                                  {
                                    --*((_DWORD *)a2 + 4);
                                    return 1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::PartialTextToSpeechStreamingResponse::Verify(siri::speech::schema_fb::PartialTextToSpeechStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int16 *v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  _DWORD *v31;
  unsigned __int16 *v32;
  uint64_t v33;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v20 < 0xFu
                        || (v21 = v20[7]) == 0
                        || (result = 0, v22 = *((_QWORD *)a2 + 1), v22 >= 5)
                        && v22 - 4 >= (unint64_t)this + v21 - *(_QWORD *)a2)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                        if (result)
                        {
                          v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v23 < 0x11u
                            || (v24 = v23[8]) == 0
                            || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v24 + *(unsigned int *)((char *)this + v24), 1uLL, 0)))
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                            if (result)
                            {
                              v25 = *(int *)this;
                              v26 = -v25;
                              v27 = (unsigned __int16 *)((char *)this - v25);
                              if (*v27 >= 0x13u)
                              {
                                v28 = v27[9];
                                if (v28)
                                {
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v28 + *(unsigned int *)((char *)this + v28), 4uLL, 0);
                                  if (!result)
                                    return result;
                                  v26 = -(uint64_t)*(int *)this;
                                }
                              }
                              v29 = (unsigned __int16 *)((char *)this + v26);
                              if (*v29 >= 0x13u && (v30 = v29[9]) != 0)
                                v31 = (_DWORD *)((char *)this + v30 + *(unsigned int *)((char *)this + v30));
                              else
                                v31 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::WordTimingInfo>(a2, v31);
                              if (result)
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x14u);
                                if (result)
                                {
                                  v32 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v32 < 0x15u
                                    || (v33 = v32[10]) == 0
                                    || (result = siri::speech::schema_fb::TextToSpeechFeature::Verify((siri::speech::schema_fb::PartialTextToSpeechStreamingResponse *)((char *)this + v33 + *(unsigned int *)((char *)this + v33)), a2)))
                                  {
                                    --*((_DWORD *)a2 + 4);
                                    return 1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::FinalTextToSpeechStreamingResponse::Verify(siri::speech::schema_fb::FinalTextToSpeechStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v20 < 0xFu
                        || (v21 = v20[7]) == 0
                        || (result = 0, v22 = *((_QWORD *)a2 + 1), v22 >= 5)
                        && v22 - 4 >= (unint64_t)this + v21 - *(_QWORD *)a2)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                        if (result)
                        {
                          v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v23 < 0x11u
                            || (v24 = v23[8]) == 0
                            || (result = siri::speech::schema_fb::TextToSpeechResponseDevData::Verify((siri::speech::schema_fb::FinalTextToSpeechStreamingResponse *)((char *)this + v24 + *(unsigned int *)((char *)this + v24)), a2)))
                          {
                            --*((_DWORD *)a2 + 4);
                            return 1;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::BlazarServiceDiscoveryMessage::Verify(siri::speech::qss_fb::BlazarServiceDiscoveryMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::CancelRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::BlazarServiceDiscoveryMessage *)((char *)this
                                                              + v8[3]
                                                              + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::CancelRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::ServiceDiscoveryResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::ServiceDiscoveryResponse::Verify(siri::speech::schema_fb::ServiceDiscoveryResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 >= 9u && (v12 = v11[4]) != 0)
              v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
            else
              v13 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
            if (result)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = *(int *)this;
                v15 = -v14;
                v16 = (unsigned __int16 *)((char *)this - v14);
                if (*v16 >= 0xBu)
                {
                  v17 = v16[5];
                  if (v17)
                  {
                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                    if (!result)
                      return result;
                    v15 = -(uint64_t)*(int *)this;
                  }
                }
                v18 = (unsigned __int16 *)((char *)this + v15);
                if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                  v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
                else
                  v20 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v20);
                if (result)
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::LmtLmScorerMessage::Verify(siri::speech::qss_fb::LmtLmScorerMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::CancelRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::LmtLmScorerMessage *)((char *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::CancelRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::LmScorerResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::LmScorerResponse::Verify(siri::speech::schema_fb::LmScorerResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  _DWORD *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unint64_t v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 >= 7u && (v9 = v8[3]) != 0)
          v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
        else
          v10 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
        if (result)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = *(int *)this;
            v12 = -v11;
            v13 = (unsigned __int16 *)((char *)this - v11);
            if (*v13 >= 9u)
            {
              v14 = v13[4];
              if (v14)
              {
                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v14 + *(unsigned int *)((char *)this + v14), 4uLL, 0);
                if (!result)
                  return result;
                v12 = -(uint64_t)*(int *)this;
              }
            }
            v15 = (unsigned __int16 *)((char *)this + v12);
            if (*v15 >= 9u && (v16 = v15[4]) != 0)
              v17 = (_DWORD *)((char *)this + v16 + *(unsigned int *)((char *)this + v16));
            else
              v17 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::LmScorerToken>(a2, v17);
            if (result)
            {
              v18 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v18 < 0xBu
                || (v19 = v18[5]) == 0
                || (result = 0, v20 = *((_QWORD *)a2 + 1), v20 >= 9)
                && v20 - 8 >= (unint64_t)this + v19 - *(_QWORD *)a2)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::LmScorerToken>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::LmScorerToken::Verify((siri::speech::schema_fb::LmScorerToken *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::LmScorerToken::Verify(siri::speech::schema_fb::LmScorerToken *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7
          || (!v8[3]
           || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 9)
           && v10 - 8 >= (unint64_t)this + v8[3] - *(_QWORD *)a2)
          && (v9 < 9
           || (v11 = v8[4]) == 0
           || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 5)
           && v12 - 4 >= (unint64_t)this + v11 - *(_QWORD *)a2))
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::NapgCreateLanguageProfileMessage::Verify(siri::speech::qss_fb::NapgCreateLanguageProfileMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::CreateLanguageProfileRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::NapgCreateLanguageProfileMessage *)((char *)this
                                                                 + v8[3]
                                                                 + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::CreateLanguageProfileRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::CreateLanguageProfileResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::CreateLanguageProfileRequest::Verify(siri::speech::schema_fb::CreateLanguageProfileRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;
  unsigned __int16 *v21;
  uint64_t v22;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = *(int *)this;
                  v15 = -v14;
                  v16 = (unsigned __int16 *)((char *)this - v14);
                  if (*v16 >= 0xBu)
                  {
                    v17 = v16[5];
                    if (v17)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                      if (!result)
                        return result;
                      v15 = -(uint64_t)*(int *)this;
                    }
                  }
                  v18 = (unsigned __int16 *)((char *)this + v15);
                  if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                    v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
                  else
                    v20 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::CategoryData>(a2, v20);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v21 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v21 < 0xDu
                        || (v22 = v21[6]) == 0
                        || (result = siri::speech::schema_fb::UserLanguageProfile::Verify((siri::speech::schema_fb::CreateLanguageProfileRequest *)((char *)this+ v22+ *(unsigned int *)((char *)this + v22)), a2)))
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::CategoryData>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::CategoryData::Verify((siri::speech::schema_fb::CategoryData *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::CategoryData::Verify(siri::speech::schema_fb::CategoryData *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserDataEntity>(a2, v14);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::UserDataEntity>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::UserDataEntity::Verify((siri::speech::schema_fb::UserDataEntity *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::UserDataEntity::Verify(siri::speech::schema_fb::UserDataEntity *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Word>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::Word>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::Word::Verify((siri::speech::schema_fb::Word *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::Word::Verify(siri::speech::schema_fb::Word *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;
  unsigned __int16 *v15;
  uint64_t v16;
  unint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  const unsigned __int8 *v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v14);
          if (result)
          {
            v15 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v15 < 9u
              || (v16 = v15[4]) == 0
              || (result = 0, v17 = *((_QWORD *)a2 + 1), v17 >= 5)
              && v17 - 4 >= (unint64_t)this + v16 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v18 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                  v20 = (const unsigned __int8 *)this + v19 + *(unsigned int *)((char *)this + v19);
                else
                  v20 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v20);
                if (result)
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::CreateLanguageProfileResponse::Verify(siri::speech::schema_fb::CreateLanguageProfileResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = *(int *)this;
                    v18 = -v17;
                    v19 = (unsigned __int16 *)((char *)this - v17);
                    if (*v19 >= 0xDu)
                    {
                      v20 = v19[6];
                      if (v20)
                      {
                        result = siri::speech::schema_fb::UserLanguageProfile::Verify((siri::speech::schema_fb::CreateLanguageProfileResponse *)((char *)this+ v20+ *(unsigned int *)((char *)this + v20)), a2);
                        if (!result)
                          return result;
                        v18 = -(uint64_t)*(int *)this;
                      }
                    }
                    v21 = (unsigned __int16 *)((char *)this + v18);
                    v22 = *v21;
                    if (v22 < 0xF
                      || (!v21[7]
                       || (result = 0, v23 = *((_QWORD *)a2 + 1), v23 >= 2)
                       && v23 - 1 >= (unint64_t)this + v21[7] - *(_QWORD *)a2)
                      && (v22 < 0x11
                       || (v24 = v21[8]) == 0
                       || (result = 0, v25 = *((_QWORD *)a2 + 1), v25 >= 2)
                       && v25 - 1 >= (unint64_t)this + v24 - *(_QWORD *)a2))
                    {
                      --*((_DWORD *)a2 + 4);
                      return 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::MtTranslationMessage::Verify(siri::speech::qss_fb::MtTranslationMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::TranslationRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::MtTranslationMessage *)((char *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::TranslationRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::TranslationResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::TranslationResponse::Verify(siri::speech::schema_fb::TranslationResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  _DWORD *v23;
  unsigned __int16 *v24;
  uint64_t v25;
  const unsigned __int8 *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  _DWORD *v33;
  unsigned __int16 *v34;
  uint64_t v35;
  const unsigned __int8 *v36;
  unsigned __int16 *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int16 *v42;
  uint64_t v43;
  unsigned __int16 *v44;
  uint64_t v45;
  _DWORD *v46;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = *(int *)this;
                    v18 = -v17;
                    v19 = (unsigned __int16 *)((char *)this - v17);
                    if (*v19 >= 0xDu)
                    {
                      v20 = v19[6];
                      if (v20)
                      {
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20), 4uLL, 0);
                        if (!result)
                          return result;
                        v18 = -(uint64_t)*(int *)this;
                      }
                    }
                    v21 = (unsigned __int16 *)((char *)this + v18);
                    if (*v21 >= 0xDu && (v22 = v21[6]) != 0)
                      v23 = (_DWORD *)((char *)this + v22 + *(unsigned int *)((char *)this + v22));
                    else
                      v23 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationResponse_::TranslationPhrase>(a2, v23);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v24 = (unsigned __int16 *)((char *)this - *(int *)this);
                        if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                          v26 = (const unsigned __int8 *)this + v25 + *(unsigned int *)((char *)this + v25);
                        else
                          v26 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v26);
                        if (result)
                        {
                          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                          if (result)
                          {
                            v27 = *(int *)this;
                            v28 = -v27;
                            v29 = (unsigned __int16 *)((char *)this - v27);
                            if (*v29 >= 0x11u)
                            {
                              v30 = v29[8];
                              if (v30)
                              {
                                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v30 + *(unsigned int *)((char *)this + v30), 4uLL, 0);
                                if (!result)
                                  return result;
                                v28 = -(uint64_t)*(int *)this;
                              }
                            }
                            v31 = (unsigned __int16 *)((char *)this + v28);
                            if (*v31 >= 0x11u && (v32 = v31[8]) != 0)
                              v33 = (_DWORD *)((char *)this + v32 + *(unsigned int *)((char *)this + v32));
                            else
                              v33 = 0;
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationResponse_::TranslationPhrase>(a2, v33);
                            if (result)
                            {
                              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                              if (result)
                              {
                                v34 = (unsigned __int16 *)((char *)this - *(int *)this);
                                if (*v34 >= 0x13u && (v35 = v34[9]) != 0)
                                  v36 = (const unsigned __int8 *)this + v35 + *(unsigned int *)((char *)this + v35);
                                else
                                  v36 = 0;
                                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v36);
                                if (result)
                                {
                                  v37 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v37 < 0x15u
                                    || (v38 = v37[10]) == 0
                                    || (result = 0, v39 = *((_QWORD *)a2 + 1), v39 >= 2)
                                    && v39 - 1 >= (unint64_t)this + v38 - *(_QWORD *)a2)
                                  {
                                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x16u);
                                    if (result)
                                    {
                                      v40 = *(int *)this;
                                      v41 = -v40;
                                      v42 = (unsigned __int16 *)((char *)this - v40);
                                      if (*v42 >= 0x17u)
                                      {
                                        v43 = v42[11];
                                        if (v43)
                                        {
                                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this+ v43+ *(unsigned int *)((char *)this + v43), 4uLL, 0);
                                          if (!result)
                                            return result;
                                          v41 = -(uint64_t)*(int *)this;
                                        }
                                      }
                                      v44 = (unsigned __int16 *)((char *)this + v41);
                                      if (*v44 >= 0x17u && (v45 = v44[11]) != 0)
                                        v46 = (_DWORD *)((char *)this + v45 + *(unsigned int *)((char *)this + v45));
                                      else
                                        v46 = 0;
                                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::MTAlternativeDescription>(a2, v46);
                                      if (result)
                                      {
                                        --*((_DWORD *)a2 + 4);
                                        return 1;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationResponse_::TranslationPhrase>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TranslationResponse_::TranslationPhrase::Verify((siri::speech::schema_fb::TranslationResponse_::TranslationPhrase *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TranslationResponse_::TranslationPhrase::Verify(siri::speech::schema_fb::TranslationResponse_::TranslationPhrase *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;
  unsigned __int16 *v15;
  uint64_t v16;
  const unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  _DWORD *v24;
  unsigned __int16 *v25;
  uint64_t v26;
  unint64_t v27;
  unsigned __int16 *v28;
  uint64_t v29;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 5) && v7 - 4 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = *(int *)this;
        v9 = -v8;
        v10 = (unsigned __int16 *)((char *)this - v8);
        if (*v10 >= 7u)
        {
          v11 = v10[3];
          if (v11)
          {
            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
            if (!result)
              return result;
            v9 = -(uint64_t)*(int *)this;
          }
        }
        v12 = (unsigned __int16 *)((char *)this + v9);
        if (*v12 >= 7u && (v13 = v12[3]) != 0)
          v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
        else
          v14 = 0;
        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationResponse_::TranslationToken>(a2, v14);
        if (result)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v15 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v15 >= 9u && (v16 = v15[4]) != 0)
              v17 = (const unsigned __int8 *)this + v16 + *(unsigned int *)((char *)this + v16);
            else
              v17 = 0;
            result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v17);
            if (result)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v18 = *(int *)this;
                v19 = -v18;
                v20 = (unsigned __int16 *)((char *)this - v18);
                if (*v20 >= 0xBu)
                {
                  v21 = v20[5];
                  if (v21)
                  {
                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21), 4uLL, 0);
                    if (!result)
                      return result;
                    v19 = -(uint64_t)*(int *)this;
                  }
                }
                v22 = (unsigned __int16 *)((char *)this + v19);
                if (*v22 >= 0xBu && (v23 = v22[5]) != 0)
                  v24 = (_DWORD *)((char *)this + v23 + *(unsigned int *)((char *)this + v23));
                else
                  v24 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RepeatedSpan>(a2, v24);
                if (result)
                {
                  v25 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v25 < 0xDu
                    || (v26 = v25[6]) == 0
                    || (result = 0, v27 = *((_QWORD *)a2 + 1), v27 >= 2)
                    && v27 - 1 >= (unint64_t)this + v26 - *(_QWORD *)a2)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                    if (result)
                    {
                      v28 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v28 < 0xFu
                        || (v29 = v28[7]) == 0
                        || (result = siri::speech::schema_fb::TranslationPhraseMetaInfo::Verify((siri::speech::schema_fb::TranslationResponse_::TranslationPhrase *)((char *)this + v29 + *(unsigned int *)((char *)this + v29)), a2)))
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TranslationResponse_::TranslationToken>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TranslationResponse_::TranslationToken::Verify((siri::speech::schema_fb::TranslationResponse_::TranslationToken *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TranslationResponse_::TranslationToken::Verify(siri::speech::schema_fb::TranslationResponse_::TranslationToken *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  unint64_t v17;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        if (*v8 < 7u
          || (v9 = v8[3]) == 0
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v9 - *(_QWORD *)a2)
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
          if (result)
          {
            v11 = *(int *)this;
            v12 = -v11;
            v13 = (unsigned __int16 *)((char *)this - v11);
            if (*v13 >= 9u)
            {
              v14 = v13[4];
              if (v14)
              {
                result = siri::speech::schema_fb::Alignment::Verify((siri::speech::schema_fb::TranslationResponse_::TranslationToken *)((char *)this+ v14+ *(unsigned int *)((char *)this + v14)), a2);
                if (!result)
                  return result;
                v12 = -(uint64_t)*(int *)this;
              }
            }
            v15 = (unsigned __int16 *)((char *)this + v12);
            if (*v15 < 0xBu
              || (v16 = v15[5]) == 0
              || (result = 0, v17 = *((_QWORD *)a2 + 1), v17 >= 2)
              && v17 - 1 >= (unint64_t)this + v16 - *(_QWORD *)a2)
            {
              --*((_DWORD *)a2 + 4);
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::Alignment::Verify(siri::speech::schema_fb::Alignment *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6), 4uLL, 0)))
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::TtsTextToSpeechStreamingMessage::Verify(siri::speech::qss_fb::TtsTextToSpeechStreamingMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartTextToSpeechStreamingRequest *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          if (v9 < 5)
          {
LABEL_28:
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::TtsTextToSpeechStreamingMessage *)((char *)this
                                                                        + v8[3]
                                                                        + *(unsigned int *)((char *)this + v8[3]));
          goto LABEL_12;
        }
        v10 = 0;
LABEL_12:
        v11 = v8[2];
        if (v11)
        {
          switch(*((_BYTE *)this + v11))
          {
            case 1:
              if (!v10 || siri::speech::schema_fb::StartTextToSpeechStreamingRequest::Verify(v10, a2))
                goto LABEL_28;
              return 0;
            case 2:
              if (!v10)
                goto LABEL_28;
              result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)v10);
              if (!result)
                return result;
              --*((_DWORD *)a2 + 4);
              goto LABEL_28;
            case 3:
              if (!v10 || siri::speech::schema_fb::BeginTextToSpeechStreamingResponse::Verify(v10, a2))
                goto LABEL_28;
              return 0;
            case 4:
              if (!v10 || siri::speech::schema_fb::PartialTextToSpeechStreamingResponse::Verify(v10, a2))
                goto LABEL_28;
              return 0;
            case 5:
              if (!v10)
                goto LABEL_28;
              result = siri::speech::schema_fb::FinalTextToSpeechStreamingResponse::Verify(v10, a2);
              if (result)
                goto LABEL_28;
              return result;
            default:
              goto LABEL_28;
          }
        }
        goto LABEL_28;
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::TtsTextToSpeechSpeechFeatureMessage::Verify(siri::speech::qss_fb::TtsTextToSpeechSpeechFeatureMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::TtsTextToSpeechSpeechFeatureMessage *)((char *)this
                                                                    + v8[3]
                                                                    + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::TextToSpeechSpeechFeatureResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest::Verify(siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  _DWORD *v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unint64_t v26;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 < 9u
                || (v12 = v11[4]) == 0
                || (result = siri::speech::schema_fb::CancelRequest::Verify((siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest *)((char *)this+ v12+ *(unsigned int *)((char *)this + v12)), a2)))
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v13 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v13 < 0xBu
                    || (v14 = v13[5]) == 0
                    || (result = siri::speech::schema_fb::TextToSpeechSpeechFeatureInputText::Verify((siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest *)((char *)this+ v14+ *(unsigned int *)((char *)this + v14)), a2)))
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v15 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v15 < 0xDu
                        || (v16 = v15[6]) == 0
                        || (result = siri::speech::schema_fb::TextToSpeechVoiceResource::Verify((siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest *)((char *)this + v16 + *(unsigned int *)((char *)this + v16)), a2)))
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v17 = *(int *)this;
                          v18 = -v17;
                          v19 = (unsigned __int16 *)((char *)this - v17);
                          if (*v19 >= 0xFu)
                          {
                            v20 = v19[7];
                            if (v20)
                            {
                              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20), 4uLL, 0);
                              if (!result)
                                return result;
                              v18 = -(uint64_t)*(int *)this;
                            }
                          }
                          v21 = (unsigned __int16 *)((char *)this + v18);
                          if (*v21 >= 0xFu && (v22 = v21[7]) != 0)
                            v23 = (_DWORD *)((char *)this + v22 + *(unsigned int *)((char *)this + v22));
                          else
                            v23 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest_::LexiconEntry>(a2, v23);
                          if (result)
                          {
                            v24 = (unsigned __int16 *)((char *)this - *(int *)this);
                            if (*v24 < 0x11u
                              || (v25 = v24[8]) == 0
                              || (result = 0, v26 = *((_QWORD *)a2 + 1), v26 >= 2)
                              && v26 - 1 >= (unint64_t)this + v25 - *(_QWORD *)a2)
                            {
                              --*((_DWORD *)a2 + 4);
                              return 1;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest_::LexiconEntry>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest_::LexiconEntry::Verify((siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest_::LexiconEntry *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechSpeechFeatureInputText::Verify(siri::speech::schema_fb::TextToSpeechSpeechFeatureInputText *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  _DWORD *v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v8 + *(unsigned int *)((char *)this + v8), 4uLL, 0);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      if (*v9 >= 5u && (v10 = v9[2]) != 0)
        v11 = (_DWORD *)((char *)this + v10 + *(unsigned int *)((char *)this + v10));
      else
        v11 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ContextWithPronHints>(a2, v11);
      if (result)
      {
        --*((_DWORD *)a2 + 4);
        return 1;
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest_::LexiconEntry::Verify(siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest_::LexiconEntry *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 < 7u
            || (v9 = v8[3]) == 0
            || (result = siri::speech::schema_fb::TTSPhonemeSequence::Verify((siri::speech::schema_fb::TextToSpeechSpeechFeatureRequest_::LexiconEntry *)((char *)this + v9 + *(unsigned int *)((char *)this + v9)), a2)))
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechSpeechFeatureResponse::Verify(siri::speech::schema_fb::TextToSpeechSpeechFeatureResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  _DWORD *v23;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = *(int *)this;
                    v18 = -v17;
                    v19 = (unsigned __int16 *)((char *)this - v17);
                    if (*v19 >= 0xDu)
                    {
                      v20 = v19[6];
                      if (v20)
                      {
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v20 + *(unsigned int *)((char *)this + v20), 4uLL, 0);
                        if (!result)
                          return result;
                        v18 = -(uint64_t)*(int *)this;
                      }
                    }
                    v21 = (unsigned __int16 *)((char *)this + v18);
                    if (*v21 >= 0xDu && (v22 = v21[6]) != 0)
                      v23 = (_DWORD *)((char *)this + v22 + *(unsigned int *)((char *)this + v22));
                    else
                      v23 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechSpeechFeatureOutputFeature>(a2, v23);
                    if (result)
                    {
                      --*((_DWORD *)a2 + 4);
                      return 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechSpeechFeatureOutputFeature>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TextToSpeechSpeechFeatureOutputFeature::Verify((siri::speech::schema_fb::TextToSpeechSpeechFeatureOutputFeature *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechSpeechFeatureOutputFeature::Verify(siri::speech::schema_fb::TextToSpeechSpeechFeatureOutputFeature *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
          goto LABEL_32;
        if (!v8[3]
          || (result = 0, v10 = *((_QWORD *)a2 + 1), v10 >= 5)
          && v10 - 4 >= (unint64_t)this + v8[3] - *(_QWORD *)a2)
        {
          if (v9 < 9)
            goto LABEL_32;
          if (!v8[4]
            || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
            && v11 - 4 >= (unint64_t)this + v8[4] - *(_QWORD *)a2)
          {
            if (v9 < 0xB)
              goto LABEL_32;
            if (!v8[5]
              || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 5)
              && v12 - 4 >= (unint64_t)this + v8[5] - *(_QWORD *)a2)
            {
              if (v9 < 0xD
                || (!v8[6]
                 || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
                 && v13 - 4 >= (unint64_t)this + v8[6] - *(_QWORD *)a2)
                && (v9 < 0xF
                 || (!v8[7]
                  || (result = 0, v14 = *((_QWORD *)a2 + 1), v14 >= 5)
                  && v14 - 4 >= (unint64_t)this + v8[7] - *(_QWORD *)a2)
                 && (v9 < 0x11
                  || (v15 = v8[8]) == 0
                  || (result = 0, v16 = *((_QWORD *)a2 + 1), v16 >= 5)
                  && v16 - 4 >= (unint64_t)this + v15 - *(_QWORD *)a2)))
              {
LABEL_32:
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::NlShortcutFuzzyMatchMessage::Verify(siri::speech::qss_fb::NlShortcutFuzzyMatchMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::ShortcutFuzzyMatchRequest *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_22;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::NlShortcutFuzzyMatchMessage *)((char *)this
                                                            + v8[3]
                                                            + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_22;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 2)
  {
    v13 = v12 != 1 || v10 == 0;
    if (!v13 && !siri::speech::schema_fb::ShortcutFuzzyMatchRequest::Verify(v10, a2))
      return 0;
    goto LABEL_22;
  }
  if (!v10 || (result = siri::speech::schema_fb::ShortcutFuzzyMatchResponse::Verify(v10, a2)))
  {
LABEL_22:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::schema_fb::ShortcutFuzzyMatchRequest::Verify(siri::speech::schema_fb::ShortcutFuzzyMatchRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  const unsigned __int8 *v22;
  unsigned __int16 *v23;
  uint64_t v24;
  const unsigned __int8 *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  const unsigned __int8 *v28;
  unsigned __int16 *v29;
  uint64_t v30;
  const unsigned __int8 *v31;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::ContextWithPronHints::Verify((siri::speech::schema_fb::ShortcutFuzzyMatchRequest *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::ContextWithPronHints>(a2, v13);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v14 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v14 >= 9u && (v15 = v14[4]) != 0)
                v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
              else
                v16 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v17 >= 0xBu && (v18 = v17[5]) != 0)
                    v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                  else
                    v19 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v20 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v20 >= 0xDu && (v21 = v20[6]) != 0)
                        v22 = (const unsigned __int8 *)this + v21 + *(unsigned int *)((char *)this + v21);
                      else
                        v22 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v22);
                      if (result)
                      {
                        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                        if (result)
                        {
                          v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                          if (*v23 >= 0xFu && (v24 = v23[7]) != 0)
                            v25 = (const unsigned __int8 *)this + v24 + *(unsigned int *)((char *)this + v24);
                          else
                            v25 = 0;
                          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v25);
                          if (result)
                          {
                            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                            if (result)
                            {
                              v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                              if (*v26 >= 0x11u && (v27 = v26[8]) != 0)
                                v28 = (const unsigned __int8 *)this + v27 + *(unsigned int *)((char *)this + v27);
                              else
                                v28 = 0;
                              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v28);
                              if (result)
                              {
                                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                                if (result)
                                {
                                  v29 = (unsigned __int16 *)((char *)this - *(int *)this);
                                  if (*v29 >= 0x13u && (v30 = v29[9]) != 0)
                                    v31 = (const unsigned __int8 *)this + v30 + *(unsigned int *)((char *)this + v30);
                                  else
                                    v31 = 0;
                                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v31);
                                  if (result)
                                  {
                                    --*((_DWORD *)a2 + 4);
                                    return 1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::ShortcutFuzzyMatchResponse::Verify(siri::speech::schema_fb::ShortcutFuzzyMatchResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned __int16 *v12;
  uint64_t v13;
  _DWORD *v14;
  unsigned __int16 *v15;
  uint64_t v16;
  unint64_t v17;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = *(int *)this;
          v9 = -v8;
          v10 = (unsigned __int16 *)((char *)this - v8);
          if (*v10 >= 7u)
          {
            v11 = v10[3];
            if (v11)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v11 + *(unsigned int *)((char *)this + v11), 4uLL, 0);
              if (!result)
                return result;
              v9 = -(uint64_t)*(int *)this;
            }
          }
          v12 = (unsigned __int16 *)((char *)this + v9);
          if (*v12 >= 7u && (v13 = v12[3]) != 0)
            v14 = (_DWORD *)((char *)this + v13 + *(unsigned int *)((char *)this + v13));
          else
            v14 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RequestStatsResponse_::DoubleStat>(a2, v14);
          if (result)
          {
            v15 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v15 < 9u
              || (v16 = v15[4]) == 0
              || (result = 0, v17 = *((_QWORD *)a2 + 1), v17 >= 5)
              && v17 - 4 >= (unint64_t)this + v16 - *(_QWORD *)a2)
            {
              --*((_DWORD *)a2 + 4);
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::SlsLanguageDetectionMessage::Verify(siri::speech::qss_fb::SlsLanguageDetectionMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartLanguageDetectionRequest *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_25:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  else if (v8[3])
  {
    v10 = (siri::speech::qss_fb::SlsLanguageDetectionMessage *)((char *)this
                                                              + v8[3]
                                                              + *(unsigned int *)((char *)this + v8[3]));
    goto LABEL_12;
  }
  v10 = 0;
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_25;
  switch(*((_BYTE *)this + v11))
  {
    case 1:
      if (!v10 || siri::speech::schema_fb::StartLanguageDetectionRequest::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 2:
      if (!v10 || siri::speech::schema_fb::AudioPacket::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 3:
      if (!v10 || siri::speech::schema_fb::FinishAudio::Verify(v10, a2))
        goto LABEL_25;
LABEL_22:
      result = 0;
      break;
    case 4:
      if (!v10)
        goto LABEL_25;
      result = siri::speech::schema_fb::LanguageDetectionResponse::Verify(v10, a2);
      if (result)
        goto LABEL_25;
      break;
    default:
      goto LABEL_25;
  }
  return result;
}

BOOL siri::speech::schema_fb::StartLanguageDetectionRequest::Verify(siri::speech::schema_fb::StartLanguageDetectionRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  _DWORD *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unint64_t v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = *(int *)this;
              v12 = -v11;
              v13 = (unsigned __int16 *)((char *)this - v11);
              if (*v13 >= 9u)
              {
                v14 = v13[4];
                if (v14)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v14 + *(unsigned int *)((char *)this + v14), 4uLL, 0);
                  if (!result)
                    return result;
                  v12 = -(uint64_t)*(int *)this;
                }
              }
              v15 = (unsigned __int16 *)((char *)this + v12);
              if (*v15 >= 9u && (v16 = v15[4]) != 0)
                v17 = (_DWORD *)((char *)this + v16 + *(unsigned int *)((char *)this + v16));
              else
                v17 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v17);
              if (result)
              {
                v18 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v18 < 0xBu
                  || (v19 = v18[5]) == 0
                  || (result = 0, v20 = *((_QWORD *)a2 + 1), v20 >= 5)
                  && v20 - 4 >= (unint64_t)this + v19 - *(_QWORD *)a2)
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::LanguageDetectionResponse::Verify(siri::speech::schema_fb::LanguageDetectionResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  const unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  _DWORD *v26;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 >= 0xDu && (v18 = v17[6]) != 0)
                      v19 = (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18);
                    else
                      v19 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v19);
                    if (result)
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v20 = *(int *)this;
                        v21 = -v20;
                        v22 = (unsigned __int16 *)((char *)this - v20);
                        if (*v22 >= 0xFu)
                        {
                          v23 = v22[7];
                          if (v23)
                          {
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v23 + *(unsigned int *)((char *)this + v23), 4uLL, 0);
                            if (!result)
                              return result;
                            v21 = -(uint64_t)*(int *)this;
                          }
                        }
                        v24 = (unsigned __int16 *)((char *)this + v21);
                        if (*v24 >= 0xFu && (v25 = v24[7]) != 0)
                          v26 = (_DWORD *)((char *)this + v25 + *(unsigned int *)((char *)this + v25));
                        else
                          v26 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::LanguageDetectionPrediction>(a2, v26);
                        if (result)
                        {
                          --*((_DWORD *)a2 + 4);
                          return 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::Finish(apple::aiml::flatbuffers2::FlatBufferBuilder *this, int a2, const char *a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  *((_QWORD *)this + 7) = *((_QWORD *)this + 5);
  v8 = 4;
  if (a4)
    v8 = 8;
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, v8 + 4 * (a3 != 0), *((_QWORD *)this + 9));
  if (a3)
  {
    v9 = *((_QWORD *)this + 6);
    if ((unint64_t)(v9 - *((_QWORD *)this + 7)) <= 3)
    {
      apple::aiml::flatbuffers2::vector_downward::reallocate(this, 4uLL);
      v9 = *((_QWORD *)this + 6);
    }
    *((_QWORD *)this + 6) = v9 - 4;
    *(_DWORD *)(v9 - 4) = *(_DWORD *)a3;
  }
  apple::aiml::flatbuffers2::FlatBufferBuilder::Align(this, 4uLL);
  result = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)this, *((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10) - a2 + 4);
  if (a4)
    result = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)this, *((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10));
  *((_BYTE *)this + 71) = 1;
  return result;
}

BOOL siri::speech::qss_fb::QssMessage::Verify(siri::speech::qss_fb::QssMessage *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  unsigned int v15;
  siri::speech::qss_fb::BlazarSpeechTranslationMessage *v16;
  uint64_t v17;
  int v18;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::qss_fb::ErrorMessage::Verify((siri::speech::qss_fb::QssMessage *)((char *)this + v6 + *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10));
              if (!result)
                return result;
              --*((_DWORD *)a2 + 4);
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 < 9u
            || (v12 = v11[4]) == 0
            || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 2)
            && v13 - 1 >= (unint64_t)this + v12 - *(_QWORD *)a2)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
            if (result)
            {
              v14 = (unsigned __int16 *)((char *)this - *(int *)this);
              v15 = *v14;
              if (v15 < 0xB)
              {
                v16 = 0;
                if (v15 < 9)
                  goto LABEL_24;
              }
              else if (v14[5])
              {
                v16 = (siri::speech::qss_fb::QssMessage *)((char *)this
                                                         + v14[5]
                                                         + *(unsigned int *)((char *)this + v14[5]));
              }
              else
              {
                v16 = 0;
              }
              v17 = v14[4];
              if (v17)
              {
                v18 = *((unsigned __int8 *)this + v17);
                goto LABEL_25;
              }
LABEL_24:
              v18 = 0;
LABEL_25:
              result = siri::speech::qss_fb::QssMessage_::VerifyContainerMessageUnion(a2, v16, v18);
              if (result)
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::QssMessage_::VerifyContainerMessageUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::qss_fb::BlazarSpeechTranslationMessage *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::ApgPronGuessMessage::Verify(this, a1);
    case 2:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrRecognitionMessage::Verify(this, a1);
    case 3:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrErrorBlamerMessage::Verify(this, a1);
    case 4:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrItnMessage::Verify(this, a1);
    case 5:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrTextNormalizationMessage::Verify(this, a1);
    case 6:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrPostItnHammerMessage::Verify(this, a1);
    case 7:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrKeywordFinderMessage::Verify(this, a1);
    case 8:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrCorrectionsValidatorMessage::Verify(this, a1);
    case 9:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::AsrGraphemeToPhonemeMessage::Verify(this, a1);
    case 10:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::BlazarMultiUserMessage::Verify(this, a1);
    case 11:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::BlazarMultilingualMessage::Verify(this, a1);
    case 12:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::BlazarSpeechTranslationMessage::Verify(this, a1);
    case 13:
      if (!this)
        goto LABEL_50;
      return siri::speech::qss_fb::BlazarBatchTranslationMessage::Verify(this, a1);
    case 14:
      if (!this)
        goto LABEL_50;
      goto LABEL_29;
    case 15:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::BlazarTextToSpeechRouterStreamingMessage::Verify(this, a1);
      break;
    case 16:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::BlazarServiceDiscoveryMessage::Verify(this, a1);
      break;
    case 17:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::LmtLmScorerMessage::Verify(this, a1);
      break;
    case 18:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::NapgCreateLanguageProfileMessage::Verify(this, a1);
      break;
    case 19:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::MtTranslationMessage::Verify(this, a1);
      break;
    case 20:
      if (!this)
        goto LABEL_50;
LABEL_29:
      result = siri::speech::qss_fb::BlazarTextToSpeechRouterMessage::Verify(this, a1);
      break;
    case 21:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::TtsTextToSpeechStreamingMessage::Verify(this, a1);
      break;
    case 22:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::TtsTextToSpeechSpeechFeatureMessage::Verify(this, a1);
      break;
    case 23:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::NlShortcutFuzzyMatchMessage::Verify(this, a1);
      break;
    case 24:
      if (!this)
        goto LABEL_50;
      result = siri::speech::qss_fb::SlsLanguageDetectionMessage::Verify(this, a1);
      break;
    default:
LABEL_50:
      result = 1;
      break;
  }
  return result;
}

void sub_249241EAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249241F1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249241F78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249241FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249242070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492420FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924216C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492421F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249242264(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492422C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249242334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249242404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492424E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492425BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249242698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249242774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249242810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249242948(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249242AC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249242B50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249242BC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249242C1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249242C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249242D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249242E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249242F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249242FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492430D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492431AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924351C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492435F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492436D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492437B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924388C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249243F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249244048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249244124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249244200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924429C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492446A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249244D24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249244DAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249244E1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249244E78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249244EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249244FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249245098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249245134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924520C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492452CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245354(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492453C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245420(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249245564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249245640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492456DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492457B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245874(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492458FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924596C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492459C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249245B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249245BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249245C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249245D5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245E1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245EA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245F14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245F70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249245FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492460B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249246190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924622C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249246304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492463C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924644C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492464BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249246518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924658C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924665C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249246738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492467D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492468AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924696C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492469F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249246A64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249246AC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249246B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249246C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249246CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249246D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249246E54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249246F14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249246F9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924700C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249247068(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492470DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492471AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492473FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492474BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249247544(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492475B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249247610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249247684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249247754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924790C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492479E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249247FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492480C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492481A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249248280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924835C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249248438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249248514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492485F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492486CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249248768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249248A98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249248F98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249249020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249249090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492490EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249249160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249249230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924930C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492493E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492494C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492495A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924967C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492499EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249249DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924A074(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924A434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924A4BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924A52C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924A588(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924A5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924A6CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924A7A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924A884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924A960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924AA3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924AB18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924ABF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924ACD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924ADAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924AE88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924AF64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B11C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B2D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924B7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924BB10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924C050(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924C0D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924C148(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924C1A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924C218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924C2E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924C3C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924C4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924C57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924C658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924C734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924C810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924C8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924CA2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924CC2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924CCB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924CD24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924CD80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924CDF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924CEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924CFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924D03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924D114(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924D1D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924D25C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924D2CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924D328(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924D39C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924D46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924D548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924D624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924D700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924D79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924D8B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924D9F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924DA78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924DAE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924DB44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924DBB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924DC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924DD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924DE00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924DED8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924DF98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E020(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E0EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924E230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924E30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924E3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924E480(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E540(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E5C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E638(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E694(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924E708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924E7D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924E8B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924E950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924EA28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924EAE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924EB70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924EBE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924EC3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924ECB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924ED80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924EE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924EEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924EFD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F118(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F188(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F1E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924F328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924F404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924F4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924F578(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F638(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F6C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F730(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F78C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924F800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24924F8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924F9AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924FA88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924FB64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924FC40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924FCDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24924FE14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24924FF94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925001C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925008C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492500E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925015C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24925022C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249250308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492503A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24925047C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925053C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492505C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250634(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250690(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492507D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492508B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24925094C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249250A24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250AE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250B6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250BDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250C38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249250CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249250D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249250E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249250F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492510AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492511C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249251300(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249251388(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492513F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249251478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492514FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24925155C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492515D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492516A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24925177C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249251F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492520F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492521CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492522A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24925253C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492526F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492527D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2492528AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249252EE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249253524(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249253698(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249253780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249253A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(result + 48) = *(_DWORD *)(a2 + 48);
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<unsigned char>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, const unsigned __int8 *a2, unint64_t a3)
{
  *((_BYTE *)a1 + 70) = 1;
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(a1, a3, 4uLL);
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(a1, a3, 1uLL);
  if (a3)
    apple::aiml::flatbuffers2::vector_downward::push(a1, a2, a3);
  *((_BYTE *)a1 + 70) = 0;
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)a1, a3);
}

void sub_249253C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249253E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249253F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249254188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_249254324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249254504(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249254978(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249254AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249254CA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249254D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249254E68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249254F00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249255044(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492552C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::vector<apple::aiml::flatbuffers2::Offset<siri::speech::schema_fb::RecognitionToken>>::reserve(std::vector<int> *this, std::vector<int>::size_type __n)
{
  std::__compressed_pair<int *> *p_end_cap;
  int *value;
  int64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  int *v9;
  std::vector<int>::pointer begin;
  int *end;
  int *v12;
  int v13;

  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  if (__n > value - this->__begin_)
  {
    if (__n >> 62)
      std::vector<unsigned short>::__throw_length_error[abi:ne180100]();
    v5 = (char *)this->__end_ - (char *)this->__begin_;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<apple::aiml::flatbuffers2::Offset<siri::speech::schema_fb::RecognitionToken>>>((uint64_t)p_end_cap, __n);
    v7 = (int *)&v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    v9 = (int *)&v6[4 * v8];
    begin = this->__begin_;
    end = this->__end_;
    v12 = v7;
    if (end != this->__begin_)
    {
      v12 = v7;
      do
      {
        v13 = *--end;
        *--v12 = v13;
      }
      while (end != begin);
    }
    this->__begin_ = v12;
    this->__end_ = v7;
    this->__end_cap_.__value_ = v9;
    if (begin)
      operator delete(begin);
  }
}

void sub_2492554DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492556BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925579C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249255884(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925591C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249255A60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249255D44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249255ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492560B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249256190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249256278(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249256310(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249256454(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492566D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249256858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249256A38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249256B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249256C00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249256C98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249256DDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249257058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492571E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492573C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492574A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249257578(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249257610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249257738(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249257A10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249257B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249257D7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249257E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249257F44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249257FDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249258120(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925839C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249258524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249258704(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492587E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492588BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249258954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249258A7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249258B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249258C40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249258CD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249258E1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925926C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_24925943C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925961C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492596F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492597B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925987C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249259964(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492599FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249259B40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249259C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249259D04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249259D9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249259EE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249259FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925A0A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925A13C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925A280(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925A35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925A444(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925A4DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925A620(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925AE6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59)
{
  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  if (a46)
    operator delete(a46);
  if (a58)
    operator delete(a58);
  _Unwind_Resume(exception_object);
}

void sub_24925B0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925B2C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925B3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925B48C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925B524(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925B668(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925B744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925B82C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925B8C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925BA08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925BAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925BBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925BC64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925BDA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925C610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  if (a44)
    operator delete(a44);
  _Unwind_Resume(exception_object);
}

void sub_24925C858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925CA38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925CBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925CD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925CEEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925D078(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925D1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925D398(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925D528(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925D668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925D848(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925DB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925DD14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925DDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925DECC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925DF64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925E08C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925E360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::vector<float>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  int v13;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 2)
  {
    if (a2 >> 62)
      std::vector<unsigned short>::__throw_length_error[abi:ne180100]();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<apple::aiml::flatbuffers2::Offset<siri::speech::schema_fb::RecognitionToken>>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    v9 = &v6[4 * v8];
    v10 = (char *)*a1;
    v11 = (char *)a1[1];
    v12 = v7;
    if (v11 != *a1)
    {
      v12 = v7;
      do
      {
        v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

void sub_24925E580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925E760(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925E840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925E928(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925E9C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925EB04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925EBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24925ECC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925ED60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925EEA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925F2F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_24925F4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925F6A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925F838(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925F978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24925FB58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24925FCA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925FD84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24925FEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492600A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249260304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492603F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249260580(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492609DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249260B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249260D18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249260DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249260EE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249260F78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492610BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249261338(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492614C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492616A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249261D14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249261E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249262048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249262C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249262CF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249262D90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249262ED4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249263A20(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 - 248);
  if (v3)
  {
    *(_QWORD *)(v1 - 240) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_249263C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249263DFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249264000(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249264144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249264324(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249264400(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492644C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492645AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249264644(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249264788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249264B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249264CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249264E98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926509C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492651E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492653C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249265510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249265600(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249265698(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492657E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249265AE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249265C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249265E54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249265F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249266024(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492660BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926620C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492663C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492664B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249266548(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926668C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249266BA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_249266D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249266F70(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926712C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492671EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926741C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926756C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926774C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249267938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249267B18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249267C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249267CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_249267E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249268058(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249268194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24926826C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249268304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926842C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249268508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492685F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249268688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492687CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249268C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_249268E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926900C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926919C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492692DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492694BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249269718(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492698C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249269A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249269BF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249269D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249269FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24926A164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926A344(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926A424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24926A50C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926A5A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926A6E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926A964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24926AAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926ACCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926AE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24926AF04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926AF9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926B0E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926B3C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24926B558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926B738(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926B968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24926BA50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926BAE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926BC2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926BD04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926C0B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;

  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_24926C26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926C44C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926C6A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926C910(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926CA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926CC3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926D018(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926D164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926D344(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926D608(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926D750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926D930(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926DA68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926DBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926DD88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926DEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24926E040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24926E1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926E3AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926E678(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926E73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24926E824(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926E8BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926EA00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926EADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24926EBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926EC64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926EDB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926F3C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  if (__p)
    operator delete(__p);
  if (a36)
    operator delete(a36);
  _Unwind_Resume(exception_object);
}

void sub_24926F5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24926F794(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24926F9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24926FAB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926FB4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24926FC9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927003C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492701E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492703C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249270628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249270700(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249270798(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492708C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927099C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249270A84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249270B1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249270C60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492711D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  _Unwind_Resume(exception_object);
}

void sub_2492713C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492715A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492717D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492718B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249271950(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249271A94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249271E20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249271FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492721AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927247C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249272564(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492725FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249272740(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249272B40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249272CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249272ED0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249273170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249273258(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492732F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249273434(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249273810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492739C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249273BA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249273E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249273F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249273FF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927413C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927453C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492746EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492748CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249274CA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249274DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249274FD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492750B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492751A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927523C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927538C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249275620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492757A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249275988(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249275AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249275BC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249275C58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249275D9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249276080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249276214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492763F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492765B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927669C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249276734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249276878(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249276CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249276E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249277068(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492771F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249277338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249277518(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927771C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249277860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249277A40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249277B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249277C78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249277D10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249277E54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249277F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249278018(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492780B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492781F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492782D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492783B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249278450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249278594(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249278C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  if (a44)
    operator delete(a44);
  _Unwind_Resume(exception_object);
}

void sub_249278E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249279010(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492790F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492791D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249279270(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492793B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249279630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492797B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249279998(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249279BC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249279D4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249279E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24927A078(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927A268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927A358(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927A3F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927A540(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927A7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927A88C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927A924(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927AA68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927AB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927AC2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927ACC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927AE08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927B640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49)
{
  if (__p)
    operator delete(__p);
  if (a36)
    operator delete(a36);
  if (a48)
    operator delete(a48);
  _Unwind_Resume(exception_object);
}

void sub_24927B89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24927BA7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927BB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927BC34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927BCCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927BDF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927C06C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24927C1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24927C3D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927C610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927C750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24927C930(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927CA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927CAF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927CB90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927CCD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927CF50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24927D0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24927D2B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927D394(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927D458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927D540(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927D5D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927D71C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927D9D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24927DB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24927DD4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927DE28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927DEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927DFD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927E06C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927E1B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927E28C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927E37C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927E414(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927E564(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927E6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927E798(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927E830(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927E974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927EA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24927EB38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927EBD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927ED14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927F590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59)
{
  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  if (a46)
    operator delete(a46);
  if (a58)
    operator delete(a58);
  _Unwind_Resume(exception_object);
}

void sub_24927F80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24927F9EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24927FBA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927FCE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24927FE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249280008(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249280158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249280240(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492802D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928041C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249280700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249280894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249280A74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249280D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249280F08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249281218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249281308(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492813A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492814F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492815C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249281688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249281748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249281878(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249281A80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249282184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492823B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249282594(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492826E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492827CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249282864(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492829A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249282C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249282E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249283000(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492830DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492831A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249283288(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249283320(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249283464(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249283540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249283628(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492836C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249283804(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249283C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(exception_object);
}

void sub_249283E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249284048(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928428C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928446C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249284708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492848E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492849F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249284AB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249284B94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249284CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249284EB8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492850FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492852DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249285414(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249285554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249285734(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249285994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249285A7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249285B14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249285C58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249285DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249285E8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249285F24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249286068(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492861EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492862D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928636C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492864B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249286CC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *a48,uint64_t a49)
{
  if (__p)
    operator delete(__p);
  if (a36)
    operator delete(a36);
  if (a48)
    operator delete(a48);
  _Unwind_Resume(exception_object);
}

void sub_249286F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492870F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249287270(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492873D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928751C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492876FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249287808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492878F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249287988(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249287ACC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249287C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249287D00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249287D98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249287EDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249287FEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249288500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  void *v33;

  if (__p)
    operator delete(__p);
  if (a32)
    operator delete(a32);
  _Unwind_Resume(a1);
}

void sub_2492886F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492888D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249288C40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249288D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249288F68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249289324(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928946C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928964C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492898E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249289AC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249289C54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249289D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249289F74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928A158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928A338(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928A614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928A754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928A934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928AB90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928AD1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928AEA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928B3E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928B54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928B72C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928B80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24928B8F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928B98C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928BAD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928BD4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24928BED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928C0B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928C2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928C4D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928C6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928C8A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928C980(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928CA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24928CB34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928CBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928CD1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928CED4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928CF94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928D0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24928D198(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928D230(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928D374(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928DA38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  _Unwind_Resume(exception_object);
}

void sub_24928DC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928DE4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928E0A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928E1E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928E3C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928E5A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928E6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928E8C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928EB88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928ECD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928EEB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928F030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24928F118(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928F1B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928F2F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928F65C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24928F7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928F9D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24928FB64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24928FCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24928FE84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492900B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929019C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249290234(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249290378(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249290450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249290850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249290A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249290BF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249290EBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249290F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249291068(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249291100(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249291244(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929167C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249291820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249291A00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249291B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249291C74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249291D0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249291E34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929231C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492924C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492926A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492928D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249292BEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249292D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249292F20(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249293124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249293268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249293448(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249293718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249293800(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249293898(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492939DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249293DDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249293F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929416C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492944D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492946B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249294C84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249294DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249294FBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249295280(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492953C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492955A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249295684(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249295744(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249295804(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492958F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249295A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249295C1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249295E08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249295F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249296128(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249296208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492962F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249296388(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492964CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249296820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492969B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249296B98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249296D9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249296EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492970C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492971F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249297338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249297518(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492975F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492976E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249297780(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492978D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249297B64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249297CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249297ECC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249297FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249298094(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929812C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249298270(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492984EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249298674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249298854(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249298934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_249298A24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249298ABC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249298C0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249298EA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_249299028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249299208(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492992E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492993D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249299470(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492995C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492996A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492999C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32)
{
  _Block_object_dispose(&a16, 8);
  if (__p)
  {
    a32 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_249299B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249299D74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249299F78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929A0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929A29C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929A3D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929A514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929A6F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929A7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929A8BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929A954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929AA98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929AB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929AC5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929ACF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929AE38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929AF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929AFFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929B094(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929B1D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929B2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929B39C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929B434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929B578(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929B654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929B73C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929B7D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929B918(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929C2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *a70;

  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  if (a46)
    operator delete(a46);
  if (a58)
    operator delete(a58);
  if (a70)
    operator delete(a70);
  _Unwind_Resume(a1);
}

void sub_24929C56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929C74C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929C9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929CB80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929CC98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24929CDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_24929CF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929D120(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929D200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929D2E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929D380(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929D4C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929D740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_24929D8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929DAA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929DD5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929DEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929E080(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929E1CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929E4EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929E638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929E818(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929EC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24929EE14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929F1FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_24929F2E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929F37C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929F4C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24929F5C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929F688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929F748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929F808(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929F8C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929F988(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929FA48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929FB08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24929FBC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A0268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27)
{
  void *v27;

  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2492A04A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A0684(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A0888(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A09CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A0BAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A0F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A1108(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A11E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A12A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A142C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A1574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A1754(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A1BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A1DC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A204C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A218C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A236C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A2634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492A26F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A27B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A287C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492A2964(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A29FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A2B40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A2C18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A2CD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A2D98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A330C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  void *v34;

  if (__p)
    operator delete(__p);
  _Block_object_dispose(&a34, 8);
  _Unwind_Resume(a1);
}

void sub_2492A3540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A3720(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A3B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492A3C60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A3CF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A3E3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A3F44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A4004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A40C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A4184(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A4244(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A4304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A43C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A4484(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A4544(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A4C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27)
{
  void *v27;

  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2492A4E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A5058(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A525C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A53A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A5580(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A587C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A593C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A59FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A5CEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A5E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A6024(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A632C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492A63F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492A64DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A6574(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A66B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A6790(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A6C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  void *v30;

  if (__p)
    operator delete(__p);
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_2492A6E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A703C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A7338(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A7560(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A76B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A7890(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A796C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A7A94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A7B54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A7E78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A7FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A81A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A8290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492A8358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492A8440(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A84D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A861C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A8934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (__p)
    operator delete(__p);
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_2492A8B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A8CE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A8DC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A8E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492A8F6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A9004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A9148(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A9404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492A9598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A9778(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A98C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A9984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A9A9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A9BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492A9DC4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492A9F10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492A9FD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AA094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492AA17C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AA214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AA358(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AA430(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AA79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  void *v23;

  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2492AA958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AAB38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AACB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AAE98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AB15C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AB2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AB484(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AB5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492AB6C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AB75C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AB8AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492ABBA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492ABD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492ABF18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492ABFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492AC0E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AC178(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AC2BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AC538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492AC6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AC8A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AC9B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ACAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2492ACC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492ACE40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AD160(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AD2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AD480(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AD560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492AD650(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AD6E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AD838(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492ADACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492ADC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492ADE34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492ADF14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492ADFFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AE094(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AE1D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AE454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492AE5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AE7BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AE978(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AEA38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AEAF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AEBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492AECA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AED3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AEE80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AF2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492AF458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AF638(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AF784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AF864(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AF9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492AFB88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492AFDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492AFED0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492AFF68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B00AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B0458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492B05FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B07DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B09C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B0B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B0CE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B0E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B1044(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B1308(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B1450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B1630(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B1820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B1910(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B19A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B1AF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B1E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492B2004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B21E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B22CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492B23C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_2492B2544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B2724(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B2804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B28EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B2984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B2AC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B2D44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492B2ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B30AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B32B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B33F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B35D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B3794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B387C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B3914(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B3A58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B3B30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B3BF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B3CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B3D9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B3E34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B3F78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B4160(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B47A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  void *v35;

  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  _Unwind_Resume(a1);
}

void sub_2492B49D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B4BB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B4D6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B4E2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B4F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B5050(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B50E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B5238(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B5384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B5474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B550C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B565C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B5CAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  if (__p)
    operator delete(__p);
  if (a36)
    operator delete(a36);
  _Unwind_Resume(exception_object);
}

void sub_2492B5EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B6088(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B65D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B6724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B6904(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B6C40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B6E98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B6FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B71CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B7428(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B74EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B75D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B766C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B77B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B78C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B79AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B7A44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B7B88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B81AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37)
{
  if (__p)
    operator delete(__p);
  if (a36)
    operator delete(a36);
  _Unwind_Resume(exception_object);
}

void sub_2492B839C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B857C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B879C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B897C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B8AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B8CA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B8ED0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B9058(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B91A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B9384(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B95B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B9738(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B9884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492B9A64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492B9B40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B9C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492B9CEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B9D84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492B9EC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BA614(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492BA808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BA9E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BAB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492BAC28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BACC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BAE10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BB108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492BB29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BB47C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BB5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492BB6B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BB74C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BB890(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BBBCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492BBD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BBF44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BC0D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BC214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BC3F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BC6B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BC800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BC9E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BCABC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BCB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492BCC68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BCD00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BCE44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BD100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492BD294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BD474(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BD6A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BD7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BD9C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BDB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492BDC00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BDC98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BDDDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BE0C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492BE254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BE434(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BE5C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BE700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BE8E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BEB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492BEC68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BED00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BEE44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BF09C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BF610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492BF7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492BF9D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492BFB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492BFC80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BFD18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492BFE5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C0190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492C0330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C0510(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C0E10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C0F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C1158(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C138C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C14CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C16AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C197C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C1A64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C1AFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C1C40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C1D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C1E04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C1E9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C1FE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C26CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  _Unwind_Resume(exception_object);
}

void sub_2492C28C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C2AA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C2CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C2DB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C2E4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C2F90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C3068(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C3460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492C360C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C37EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C38C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C39F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C3ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C3BA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C3C3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C3D80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C3E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C3F44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C3FDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C4120(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C4694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35)
{
  if (__p)
    operator delete(__p);
  if (a34)
    operator delete(a34);
  _Unwind_Resume(exception_object);
}

void sub_2492C488C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C4A6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C4C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C4D14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C4DAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C4EF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C53A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492C5558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C5738(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C593C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C5A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C5C60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C5E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C5F38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C5FD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C6114(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C6470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492C6610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C67F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C69F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C6B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C6D18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C6ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C6FC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C7060(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C71B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C754C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492C76F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C78D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C7BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_2492C7C88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C7D20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C7E64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C8260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2492C8410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492C85F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492C897C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C8AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<double>(char *result, uint64_t a2, double a3, double a4)
{
  char *v5;
  unsigned int v6;

  v5 = result;
  if (a3 != a4 || result[80])
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<double>((uint64_t)result, a3);
    return apple::aiml::flatbuffers2::FlatBufferBuilder::TrackField(v5, a2, v6);
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<double>(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 8uLL);
  v4 = *(_QWORD *)(a1 + 48);
  if ((unint64_t)(v4 - *(_QWORD *)(a1 + 56)) <= 7)
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)a1, 8uLL);
    v4 = *(_QWORD *)(a1 + 48);
  }
  *(double *)(v4 - 8) = a2;
  v5 = v4 - 8;
  *(_QWORD *)(a1 + 48) = v5;
  return (*(_DWORD *)(a1 + 32) - v5 + *(_DWORD *)(a1 + 40));
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<float>(char *result, uint64_t a2, float a3, float a4)
{
  char *v5;
  unsigned int v6;

  v5 = result;
  if (a3 != a4 || result[80])
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<float>((uint64_t)result, a3);
    return apple::aiml::flatbuffers2::FlatBufferBuilder::TrackField(v5, a2, v6);
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<float>(uint64_t a1, float a2)
{
  uint64_t v4;
  uint64_t v5;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 4uLL);
  v4 = *(_QWORD *)(a1 + 48);
  if ((unint64_t)(v4 - *(_QWORD *)(a1 + 56)) <= 3)
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)a1, 4uLL);
    v4 = *(_QWORD *)(a1 + 48);
  }
  *(float *)(v4 - 4) = a2;
  v5 = v4 - 4;
  *(_QWORD *)(a1 + 48) = v5;
  return (*(_DWORD *)(a1 + 32) - v5 + *(_DWORD *)(a1 + 40));
}

char *apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned long long>(char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v5;
  unsigned int v6;

  v5 = result;
  if (a3 != a4 || result[80])
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned long long>((uint64_t)result, a3);
    return apple::aiml::flatbuffers2::FlatBufferBuilder::TrackField(v5, a2, v6);
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned long long>(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 8uLL);
  v4 = *(_QWORD *)(a1 + 48);
  if ((unint64_t)(v4 - *(_QWORD *)(a1 + 56)) <= 7)
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate((apple::aiml::flatbuffers2::vector_downward *)a1, 8uLL);
    v4 = *(_QWORD *)(a1 + 48);
  }
  *(_QWORD *)(v4 - 8) = a2;
  v5 = v4 - 8;
  *(_QWORD *)(a1 + 48) = v5;
  return (*(_DWORD *)(a1 + 32) - v5 + *(_DWORD *)(a1 + 40));
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<apple::aiml::flatbuffers2::String>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *((_BYTE *)a1 + 70) = 1;
  v6 = 4 * a3;
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(a1, 4 * a3, 4uLL);
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(a1, v6, 4uLL);
  if (a3)
  {
    v7 = a2 - 4;
    v8 = a3;
    do
    {
      v9 = v8 - 1;
      apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<apple::aiml::flatbuffers2::String>(a1, *(_DWORD *)(v7 + 4 * v8));
      v8 = v9;
    }
    while (v9);
  }
  *((_BYTE *)a1 + 70) = 0;
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)a1, a3);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<apple::aiml::flatbuffers2::String>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, int a2)
{
  apple::aiml::flatbuffers2::FlatBufferBuilder::Align(a1, 4uLL);
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)a1, *((_DWORD *)a1 + 8) - *((_DWORD *)a1 + 12) + *((_DWORD *)a1 + 10) - a2 + 4);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<int>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, const unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;

  *((_BYTE *)a1 + 70) = 1;
  v6 = 4 * a3;
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(a1, 4 * a3, 4uLL);
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(a1, v6, 4uLL);
  if (a3)
    apple::aiml::flatbuffers2::vector_downward::push(a1, a2, v6);
  *((_BYTE *)a1 + 70) = 0;
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned int>((uint64_t)a1, a3);
}

BOOL siri::speech::schema_fb::TextToSpeechCacheMetaInfo::Verify(siri::speech::schema_fb::TextToSpeechCacheMetaInfo *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  uint64_t v5;
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;
  unsigned __int16 *v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  const unsigned __int8 *v25;
  unsigned __int16 *v26;
  uint64_t v27;
  const unsigned __int8 *v28;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = *(int *)this;
      v6 = -v5;
      v7 = (unsigned __int16 *)((char *)this - v5);
      if (*v7 >= 5u)
      {
        v8 = v7[2];
        if (v8)
        {
          result = siri::speech::schema_fb::TextToSpeechMeta::Verify((siri::speech::schema_fb::TextToSpeechCacheMetaInfo *)((char *)this+ v8+ *(unsigned int *)((char *)this + v8)), a2);
          if (!result)
            return result;
          v6 = -(uint64_t)*(int *)this;
        }
      }
      v9 = (unsigned __int16 *)((char *)this + v6);
      v10 = *v9;
      if (v10 < 7
        || (!v9[3]
         || (result = 0, v11 = *((_QWORD *)a2 + 1), v11 >= 5)
         && v11 - 4 >= (unint64_t)this + v9[3] - *(_QWORD *)a2)
        && (v10 < 9
         || (v12 = v9[4]) == 0
         || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 2)
         && v13 - 1 >= (unint64_t)this + v12 - *(_QWORD *)a2))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
        if (result)
        {
          v14 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v14 < 0xBu
            || (v15 = v14[5]) == 0
            || (result = siri::speech::schema_fb::AudioDescription::Verify((siri::speech::schema_fb::TextToSpeechCacheMetaInfo *)((char *)this+ v15+ *(unsigned int *)((char *)this + v15)), a2)))
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
            if (result)
            {
              v16 = *(int *)this;
              v17 = -v16;
              v18 = (unsigned __int16 *)((char *)this - v16);
              if (*v18 >= 0xDu)
              {
                v19 = v18[6];
                if (v19)
                {
                  result = siri::speech::schema_fb::AudioDescription::Verify((siri::speech::schema_fb::TextToSpeechCacheMetaInfo *)((char *)this+ v19+ *(unsigned int *)((char *)this + v19)), a2);
                  if (!result)
                    return result;
                  v17 = -(uint64_t)*(int *)this;
                }
              }
              v20 = (unsigned __int16 *)((char *)this + v17);
              if (*v20 < 0xFu
                || (v21 = v20[7]) == 0
                || (result = 0, v22 = *((_QWORD *)a2 + 1), v22 >= 5)
                && v22 - 4 >= (unint64_t)this + v21 - *(_QWORD *)a2)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x10u);
                if (result)
                {
                  v23 = (unsigned __int16 *)((char *)this - *(int *)this);
                  if (*v23 >= 0x11u && (v24 = v23[8]) != 0)
                    v25 = (const unsigned __int8 *)this + v24 + *(unsigned int *)((char *)this + v24);
                  else
                    v25 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v25);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0x12u);
                    if (result)
                    {
                      v26 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v26 >= 0x13u && (v27 = v26[9]) != 0)
                        v28 = (const unsigned __int8 *)this + v27 + *(unsigned int *)((char *)this + v27);
                      else
                        v28 = 0;
                      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v28);
                      if (result)
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<apple::aiml::flatbuffers2::Offset<siri::speech::schema_fb::RecognitionToken>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a2);
}

BOOL siri::speech::schema_fb::RecoverPronsRequest::Verify(siri::speech::schema_fb::RecoverPronsRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  const unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  unsigned __int16 *v18;
  uint64_t v19;
  _DWORD *v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v11 >= 9u && (v12 = v11[4]) != 0)
                v13 = (const unsigned __int8 *)this + v12 + *(unsigned int *)((char *)this + v12);
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v14 = *(int *)this;
                  v15 = -v14;
                  v16 = (unsigned __int16 *)((char *)this - v14);
                  if (*v16 >= 0xBu)
                  {
                    v17 = v16[5];
                    if (v17)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v17 + *(unsigned int *)((char *)this + v17), 4uLL, 0);
                      if (!result)
                        return result;
                      v15 = -(uint64_t)*(int *)this;
                    }
                  }
                  v18 = (unsigned __int16 *)((char *)this + v15);
                  if (*v18 >= 0xBu && (v19 = v18[5]) != 0)
                    v20 = (_DWORD *)((char *)this + v19 + *(unsigned int *)((char *)this + v19));
                  else
                    v20 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfStrings(a2, v20);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::RecoverPronsResponse::Verify(siri::speech::schema_fb::RecoverPronsResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  unsigned __int16 *v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  const unsigned __int8 *v16;
  unsigned __int16 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned __int16 *v23;
  uint64_t v24;
  _DWORD *v25;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            v11 = (unsigned __int16 *)((char *)this - *(int *)this);
            if (*v11 < 9u
              || (v12 = v11[4]) == 0
              || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 5)
              && v13 - 4 >= (unint64_t)this + v12 - *(_QWORD *)a2)
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
              if (result)
              {
                v14 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v14 >= 0xBu && (v15 = v14[5]) != 0)
                  v16 = (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15);
                else
                  v16 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16);
                if (result)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v17 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v17 < 0xDu
                      || (v18 = v17[6]) == 0
                      || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v18 + *(unsigned int *)((char *)this + v18), 4uLL, 0)))
                    {
                      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xEu);
                      if (result)
                      {
                        v19 = *(int *)this;
                        v20 = -v19;
                        v21 = (unsigned __int16 *)((char *)this - v19);
                        if (*v21 >= 0xFu)
                        {
                          v22 = v21[7];
                          if (v22)
                          {
                            result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22), 4uLL, 0);
                            if (!result)
                              return result;
                            v20 = -(uint64_t)*(int *)this;
                          }
                        }
                        v23 = (unsigned __int16 *)((char *)this + v20);
                        if (*v23 >= 0xFu && (v24 = v23[7]) != 0)
                          v25 = (_DWORD *)((char *)this + v24 + *(unsigned int *)((char *)this + v24));
                        else
                          v25 = 0;
                        result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::VocToken>(a2, v25);
                        if (result)
                        {
                          --*((_DWORD *)a2 + 4);
                          return 1;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::VocToken>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::VocToken::Verify((siri::speech::schema_fb::VocToken *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechCacheObject::Verify(siri::speech::schema_fb::TextToSpeechCacheObject *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6), 1uLL, 0)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::WordTimingInfo>(a2, v13);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechCacheContainer::Verify(siri::speech::schema_fb::TextToSpeechCacheContainer *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  unsigned __int16 *v11;
  uint64_t v12;
  _DWORD *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 < 5u
        || (v6 = v5[2]) == 0
        || (result = siri::speech::schema_fb::TextToSpeechCacheMetaInfo::Verify((siri::speech::schema_fb::TextToSpeechCacheContainer *)((char *)this+ v6+ *(unsigned int *)((char *)this + v6)), a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this;
          v8 = -v7;
          v9 = (unsigned __int16 *)((char *)this - v7);
          if (*v9 >= 7u)
          {
            v10 = v9[3];
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v10 + *(unsigned int *)((char *)this + v10), 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this;
            }
          }
          v11 = (unsigned __int16 *)((char *)this + v8);
          if (*v11 >= 7u && (v12 = v11[3]) != 0)
            v13 = (_DWORD *)((char *)this + v12 + *(unsigned int *)((char *)this + v12));
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechCacheObject>(a2, v13);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::TextToSpeechCacheObject>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::TextToSpeechCacheObject::Verify((siri::speech::schema_fb::TextToSpeechCacheObject *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechCacheContainerRpcV2::Verify(siri::speech::schema_fb::TextToSpeechCacheContainerRpcV2 *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 < 7u
            || (v9 = v8[3]) == 0
            || (result = siri::speech::schema_fb::TextToSpeechRequest::Verify((siri::speech::schema_fb::TextToSpeechCacheContainerRpcV2 *)((char *)this+ v9+ *(unsigned int *)((char *)this + v9)), a2)))
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v10 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v10 < 9u
                || (v11 = v10[4]) == 0
                || (result = siri::speech::schema_fb::TextToSpeechResponse::Verify((siri::speech::schema_fb::TextToSpeechCacheContainerRpcV2 *)((char *)this+ v11+ *(unsigned int *)((char *)this + v11)), a2)))
              {
                --*((_DWORD *)a2 + 4);
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::schema_fb::TextToSpeechCacheContainerStreamingV2::Verify(siri::speech::schema_fb::TextToSpeechCacheContainerStreamingV2 *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  _DWORD *v18;
  unsigned __int16 *v19;
  uint64_t v20;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 < 7u
            || (v9 = v8[3]) == 0
            || (result = siri::speech::schema_fb::StartTextToSpeechStreamingRequest::Verify((siri::speech::schema_fb::TextToSpeechCacheContainerStreamingV2 *)((char *)this+ v9+ *(unsigned int *)((char *)this + v9)), a2)))
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v10 = (unsigned __int16 *)((char *)this - *(int *)this);
              if (*v10 < 9u
                || (v11 = v10[4]) == 0
                || (result = siri::speech::schema_fb::BeginTextToSpeechStreamingResponse::Verify((siri::speech::schema_fb::TextToSpeechCacheContainerStreamingV2 *)((char *)this+ v11+ *(unsigned int *)((char *)this + v11)), a2)))
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xAu);
                if (result)
                {
                  v12 = *(int *)this;
                  v13 = -v12;
                  v14 = (unsigned __int16 *)((char *)this - v12);
                  if (*v14 >= 0xBu)
                  {
                    v15 = v14[5];
                    if (v15)
                    {
                      result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v15 + *(unsigned int *)((char *)this + v15), 4uLL, 0);
                      if (!result)
                        return result;
                      v13 = -(uint64_t)*(int *)this;
                    }
                  }
                  v16 = (unsigned __int16 *)((char *)this + v13);
                  if (*v16 >= 0xBu && (v17 = v16[5]) != 0)
                    v18 = (_DWORD *)((char *)this + v17 + *(unsigned int *)((char *)this + v17));
                  else
                    v18 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::PartialTextToSpeechStreamingResponse>(a2, v18);
                  if (result)
                  {
                    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                    if (result)
                    {
                      v19 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v19 < 0xDu
                        || (v20 = v19[6]) == 0
                        || (result = siri::speech::schema_fb::FinalTextToSpeechStreamingResponse::Verify((siri::speech::schema_fb::TextToSpeechCacheContainerStreamingV2 *)((char *)this + v20 + *(unsigned int *)((char *)this + v20)), a2)))
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::PartialTextToSpeechStreamingResponse>(apple::aiml::flatbuffers2::Verifier *a1, _DWORD *a2)
{
  unint64_t v4;
  unsigned int *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*a2)
    return 1;
  v4 = 0;
  v5 = a2 + 1;
  do
  {
    result = siri::speech::schema_fb::PartialTextToSpeechStreamingResponse::Verify((siri::speech::schema_fb::PartialTextToSpeechStreamingResponse *)((char *)v5 + *v5), a1);
    if (!result)
      break;
    ++v4;
    ++v5;
  }
  while (v4 < *a2);
  return result;
}

BOOL siri::speech::schema_fb::BatchTranslationCacheContainer::Verify(siri::speech::schema_fb::BatchTranslationCacheContainer *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  const unsigned __int8 *v7;
  unsigned __int16 *v8;
  uint64_t v9;
  const unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  _DWORD *v17;
  unsigned __int16 *v18;
  uint64_t v19;
  unint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  const unsigned __int8 *v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unint64_t v26;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 4u);
    if (result)
    {
      v5 = (unsigned __int16 *)((char *)this - *(int *)this);
      if (*v5 >= 5u && (v6 = v5[2]) != 0)
        v7 = (const unsigned __int8 *)this + v6 + *(unsigned int *)((char *)this + v6);
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
        if (result)
        {
          v8 = (unsigned __int16 *)((char *)this - *(int *)this);
          if (*v8 >= 7u && (v9 = v8[3]) != 0)
            v10 = (const unsigned __int8 *)this + v9 + *(unsigned int *)((char *)this + v9);
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 8u);
            if (result)
            {
              v11 = *(int *)this;
              v12 = -v11;
              v13 = (unsigned __int16 *)((char *)this - v11);
              if (*v13 >= 9u)
              {
                v14 = v13[4];
                if (v14)
                {
                  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, (const unsigned __int8 *)this + v14 + *(unsigned int *)((char *)this + v14), 4uLL, 0);
                  if (!result)
                    return result;
                  v12 = -(uint64_t)*(int *)this;
                }
              }
              v15 = (unsigned __int16 *)((char *)this + v12);
              if (*v15 >= 9u && (v16 = v15[4]) != 0)
                v17 = (_DWORD *)((char *)this + v16 + *(unsigned int *)((char *)this + v16));
              else
                v17 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<siri::speech::schema_fb::RepeatedSpan>(a2, v17);
              if (result)
              {
                v18 = (unsigned __int16 *)((char *)this - *(int *)this);
                if (*v18 < 0xBu
                  || (v19 = v18[5]) == 0
                  || (result = 0, v20 = *((_QWORD *)a2 + 1), v20 >= 5)
                  && v20 - 4 >= (unint64_t)this + v19 - *(_QWORD *)a2)
                {
                  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 0xCu);
                  if (result)
                  {
                    v21 = (unsigned __int16 *)((char *)this - *(int *)this);
                    if (*v21 >= 0xDu && (v22 = v21[6]) != 0)
                      v23 = (const unsigned __int8 *)this + v22 + *(unsigned int *)((char *)this + v22);
                    else
                      v23 = 0;
                    result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v23);
                    if (result)
                    {
                      v24 = (unsigned __int16 *)((char *)this - *(int *)this);
                      if (*v24 < 0xFu
                        || (v25 = v24[7]) == 0
                        || (result = 0, v26 = *((_QWORD *)a2 + 1), v26 >= 2)
                        && v26 - 1 >= (unint64_t)this + v25 - *(_QWORD *)a2)
                      {
                        --*((_DWORD *)a2 + 4);
                        return 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_2492C9EFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C9F6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492C9FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA1A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA230(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA2A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA43C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA564(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA5D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA6B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA788(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA85C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CA930(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CA9A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CAA04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CAA78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CAAFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CAB80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CAC0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CAC7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CACFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CAD88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CADF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CAE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CAED8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CAF4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CAFD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB048(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CB154(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB1C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CB2D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB340(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CB420(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CB520(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB590(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CB69C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB70C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CB810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CB89C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB90C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CB98C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBA10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBB18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBCAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CBD1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CBD9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CBFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC0BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC12C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC20C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC30C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC37C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC3FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC45C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC4D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC55C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC5CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC6B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC7BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC82C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC888(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC8FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CC95C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CC9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CCA30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CCAA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CCB04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CCB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CCC04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CCC74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CCCF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CCD5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CCDD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CCE64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CCED4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CCF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CCFD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD064(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD0D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD1BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD2C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD334(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD3B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD4C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD534(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD5B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD698(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD874(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CD8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD96C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CD9CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CDA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CDAA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CDB24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CDBA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CDC2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CDCB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CDD10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CDD84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CDDE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CDE58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CDEE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CDF54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CDFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE060(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE0D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE1D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE234(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE32C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE410(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE4E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE5B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE62C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE7C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE830(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CE8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CE9B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEA3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEA9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CEB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEB70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CEBE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEC44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CECB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CED3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEDC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEEC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEF28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CEF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CEFFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF0D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF1A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF29C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF2FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF3D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF4A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF578(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF5EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF64C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF720(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF7F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF8C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CF93C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CF9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFB28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CFB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFBFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CFC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFCD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CFD44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFE28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492CFE9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492CFFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D00AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D010C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0290(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0300(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0490(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0500(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0714(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0914(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0B14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0B84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0E1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0E8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D0F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D0F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D111C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D11A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1274(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D12E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1374(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D13E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D14FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D15A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D166C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D16E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D17C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D18CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1958(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D19C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1AB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1BB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1C28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1D8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D1E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D1F94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D21A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D228C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D239C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D240C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D248C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2588(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D268C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2718(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2788(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D288C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2AA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2B14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2C78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2DF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2E54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D2F28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D2F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3028(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3098(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D319C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D32A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D34F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D35FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3688(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D36F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3804(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3874(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D38F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3AB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3B24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3C88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D3CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D3F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D401C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D408C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D410C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4324(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4394(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D44F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D456C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D45F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D46F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D47F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D48F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D497C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4A8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4AFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4CE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D4EEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4F5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D4FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D50E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D51EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5278(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D52E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D53EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D54D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D55C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D564C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D56D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D57C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D584C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D58D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D59B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5AB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5B24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5C30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5CA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5E30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5EA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D5F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D5FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6088(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D60FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D620C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D627C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D62FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6364(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D63E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D646C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D64DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D655C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D65E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D666C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D66DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D675C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D67E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D68E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6974(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D69E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D6A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6AF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D6B60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D6BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6DF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D6E68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D6EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D6F48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D6FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D70C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D721C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D72A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D73A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D742C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D74B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7528(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D75A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7634(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D76A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7700(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D77D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D78A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D791C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D79A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7A2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7A9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7BA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7C18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7DA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7E18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D7E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D7FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D80A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D812C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D81B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D8228(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D82A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D832C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D83B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D843C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D84AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D852C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D85B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D863C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D86AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D8708(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D877C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D87DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D8850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D88B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D8924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D89B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D8A20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D8AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8B24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8DB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D8FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9028(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D909C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D90FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D91F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D92FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D935C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D93D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D945C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D94CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D954C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D95D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D965C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D96CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D974C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D97D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D98E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9950(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D99AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9A80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9B80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9BF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9C4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9D20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9DF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492D9EF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9F64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492D9FC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA0B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA13C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA1C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA238(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA294(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA368(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA3DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA468(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA4D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA5E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA654(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA6D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA7B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DA82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DA9B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DAA3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DAAC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DAB20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DAB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DAC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DACA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DAD14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DAD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DADFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DAE78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DAEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DAF5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DAFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB05C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB0CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB130(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB398(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB40C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB51C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB58C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB60C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB6F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DB948(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DB9B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DBA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DBABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DBB1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DBB90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DBC14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DBC74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DBCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DBD48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DBDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DBE48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DBEB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DBF1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DBF98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC000(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC0DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC1DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC24C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC2A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC3A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC42C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC49C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC4F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC56C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC5F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC668(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC6C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC824(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC8A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC908(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DC984(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DC9EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DCA68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DCAD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DCB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DCBD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DCC48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DCCC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DCD4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DCDAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DCE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DCEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DCF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DCFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD014(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD0F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD1E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD248(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD324(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD3A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD4A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD52C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD58C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD710(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD780(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DD88C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD8FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD958(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DD9CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DDA2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DDAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DDB2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DDB9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DDBF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DDC6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DDCF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DDD68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DDDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DDE6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DDEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DDF74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DDFF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE07C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE0E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE1C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE34C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE3D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE448(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE4A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE59C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE6AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE71C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE804(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE8E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DE954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DE9E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DEA50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DEAD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DEB54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DEBD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DEC64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DECD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DED30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DEDA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DEE28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DEEAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DEF14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DEF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF01C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF08C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF10C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF174(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF1F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF27C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF2EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF4F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF5DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF6DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF74C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF8D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DF934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DF9A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DFA2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DFAB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DFB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DFBC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DFC30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DFC8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DFD00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DFD60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DFDD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DFE34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DFEA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492DFF10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492DFF8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0078(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E00F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E01FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0288(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E02F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E03FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E060C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0698(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0708(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E080C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0898(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0908(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0AF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0CF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0D68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0DC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0E98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E0F6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E0FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1040(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E10B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1114(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1284(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E140C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E161C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E16A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1718(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E181C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E18A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E192C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E199C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1B24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1BB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1C20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1C7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1DD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E1ED4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1F44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E1FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2048(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E20D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2144(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E21C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E22D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2344(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E23C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E24C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E25CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E263C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E26BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E27B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E28C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2934(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E29B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2B74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2BE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2D74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2DE4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E2EF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E2FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E30E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E316C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E31F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E327C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E32EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3348(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E33BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E341C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E351C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E358C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E35E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E365C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E36E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E381C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E388C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E390C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3A08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3A64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3C40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3D40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3DB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E3F14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E3F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E400C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E406C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E40E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E41F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4260(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E42C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E43A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E448C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E45EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4654(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E46D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4738(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E47B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E481C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4900(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E497C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4A08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4A78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4D08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4D68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4E3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E4EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E4FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5018(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E508C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E529C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E53A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E54AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E55BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E562C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E56AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E57BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E582C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E5890(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E590C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5974(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E59F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5A58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E5AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5B3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E5BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5C20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E5C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5D04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E5D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5E0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E5E7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E5EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E5F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6100(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6164(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E61E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6240(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E62B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6314(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E63E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E645C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E64BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6590(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6664(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E66D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6738(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E67AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E680C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E690C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E697C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E69FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6A5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6B30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6C04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6CE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6DE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6E58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E6ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E6FBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E7030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E70B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7114(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E7188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E71E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E725C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E72E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E751C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E75A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E76A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E77A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E7824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E78A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E792C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E79B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7B18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E7B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7BEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E7C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7DC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E7E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7EC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E7FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E804C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E80D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E81D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E825C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E82E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E836C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E83DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E845C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E84E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E856C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E85DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E865C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E86E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8740(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E87B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E88BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E891C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E8990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8B84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E8C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8C8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E8CFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E8D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E8ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E8FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E903C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E90B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9134(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E91CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E92EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9378(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E93E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E9468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E94EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E954C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E95C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E96C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9728(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E979C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E98AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E991C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E999C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E99FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E9A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9AD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E9B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9CAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E9D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492E9EB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E9F24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492E9FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA164(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EA1D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EA254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA2D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA364(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EA3D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EA454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA55C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA5E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EA658(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EA6D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA7E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EA974(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EA9E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EAA6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EAADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EAB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EABE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EAC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EACF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EAD60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EADE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EAE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EAEF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EAF60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EAFE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB06C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB0DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB138(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB36C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB3DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB4C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB5A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB68C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB770(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB7EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB854(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EB930(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EB9A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EBA30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EBAA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EBB20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EBBAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EBC1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EBC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EBD28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EBD98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EBE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EBE9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EBF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EBFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC10C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC20C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC27C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC40C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC47C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC5E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC6D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC7E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC858(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC8BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EC938(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EC998(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ECA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ECA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ECB1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ECB8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ECC14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ECC84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ECD04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ECD88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ECE0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ECE98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ECF08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ECF88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ECFE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED1F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED260(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED41C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED48C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED50C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED598(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED608(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED798(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED808(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492ED888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492ED990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDA98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDB1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDB7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EDBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDC74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDCD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EDD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDDA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EDE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EDF2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EDF9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EE01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE1A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE22C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE2B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE3B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE444(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EE4B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EE534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE5B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EE68C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE878(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EE8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EE94C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EE9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EEA4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EEABC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EEB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EEBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EEC20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EEC94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EED18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EED9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EEE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EEEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EEF30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EEFA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF104(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF364(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF3D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF4BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF5BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF62C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF690(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF874(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EF8E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF96C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EF9CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EFA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EFACC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EFB3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EFBBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EFC40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EFCC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EFD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EFDD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EFE44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492EFEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EFF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492EFFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F00DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F014C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F01CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F02D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F03DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F04E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F05F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0664(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F06E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F07F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0864(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F08E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F09C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0AC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0B38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0C20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0D28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0D98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F0E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F0FAC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F101C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F109C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F11AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F121C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F129C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1304(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F13E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F14C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F15C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1634(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F16B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F17C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1834(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1890(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1A14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1A84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1C0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1F00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F1F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F1FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2058(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F20CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2158(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F21C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F22CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F23DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F244C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F24CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F25D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F26DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F27E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F28EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F29F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2A80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2AF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2BD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2CA4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2D78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2E78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2EE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F2F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F2FC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F303C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F30C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F31C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F324C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F32D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F33B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F34B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3524(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3588(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F370C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F376C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F37E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F38E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3948(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F39BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3A48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3AB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3DA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F3EA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3F18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F3F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F401C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F40A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4100(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F41F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4258(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F42CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4358(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F43C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F44CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4558(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F45C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F46A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F471C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F47A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F48B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4920(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F49A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4AB0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4B20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4D08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4E08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4E78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F4EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F4FDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F5050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F50D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F5158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F51DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F5268(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F52D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F5358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F53DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F5460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F54E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2492F566C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492F5784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F5858(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F592C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F5A00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F5B8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F5D84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F5ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492F60C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492F61D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6298(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6374(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F64B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492F66A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492F67BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6890(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6964(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6A38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6B0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6BE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6CB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6D88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6E5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F6F30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F7004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F72FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F7784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F78EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492F7ADC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492F7BF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F7CC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F7D9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F7E70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F7F44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F8018(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F80EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F81C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F8294(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F8368(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F843C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F8510(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F85E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F86B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F8A4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F8FE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492F9344(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492F945C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9530(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9604(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F96D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F97AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9880(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9954(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9A28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9AFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9BD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492F9E94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FA2C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FA424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492FA614(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492FA72C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FA800(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FA8D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FA9A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FAA7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FAB50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FAC24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FACF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FADCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FB05C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FB428(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FB588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492FB778(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492FB890(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FB964(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FBA38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FBB0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FBBE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FBCB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FBD88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FBE5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FC0B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FC42C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FC588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492FC778(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492FC890(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FC964(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FCA38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FCB0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FCBE0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FCCB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FCEA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FD170(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FD2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492FD4B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492FD5CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FD6A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FD774(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FD848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FD91C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FD9F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FDAC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FDB98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FDDF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FE168(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FE2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492FE4B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492FE5CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FE6A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FE774(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FE848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FE91C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FE9F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FEAC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FEB98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FEC6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FED40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FEE14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FEEE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FF214(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FF6F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FF864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2492FFA54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2492FFB6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FFC40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FFD14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FFDE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2492FFF74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930016C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493002B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_2493004A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_2493005C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249300694(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249300768(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493008B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249300A50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249300B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249300D88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249300EA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249300F60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930103C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930117C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_24930136C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249301484(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249301558(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930162C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249301778(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249301914(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249301A5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249301C4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249301D64(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249301E24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249301F00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249302040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249302230(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249302348(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930241C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493024F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493025C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249302750(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249302948(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249302A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249302C84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_249302D9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249302E70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249302F44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249303090(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930322C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249303374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

void sub_249303564(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_24930367C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930373C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249303818(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249303958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  apple::aiml::flatbuffers2::FlatBufferBuilder::~FlatBufferBuilder((apple::aiml::flatbuffers2::FlatBufferBuilder *)va);
  _Unwind_Resume(a1);
}

BOOL siri::speech::qss_fb::PronGuessStreamingRequest::Verify(siri::speech::qss_fb::PronGuessStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartPronGuessRequest *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_25:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  else if (v8[3])
  {
    v10 = (siri::speech::qss_fb::PronGuessStreamingRequest *)((char *)this
                                                            + v8[3]
                                                            + *(unsigned int *)((char *)this + v8[3]));
    goto LABEL_12;
  }
  v10 = 0;
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_25;
  switch(*((_BYTE *)this + v11))
  {
    case 1:
      if (!v10 || siri::speech::schema_fb::StartPronGuessRequest::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 2:
      if (!v10 || siri::speech::schema_fb::AudioPacket::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 3:
      if (!v10 || siri::speech::schema_fb::FinishAudio::Verify(v10, a2))
        goto LABEL_25;
LABEL_22:
      result = 0;
      break;
    case 4:
      if (!v10)
        goto LABEL_25;
      result = siri::speech::schema_fb::CancelRequest::Verify(v10, a2);
      if (result)
        goto LABEL_25;
      break;
    default:
      goto LABEL_25;
  }
  return result;
}

BOOL siri::speech::qss_fb::PronGuessStreamingResponse::Verify(siri::speech::qss_fb::PronGuessStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::PronGuessResponse *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_16:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::PronGuessStreamingResponse *)((char *)this
                                                           + v8[3]
                                                           + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_16;
  if (!v10)
    goto LABEL_16;
  if (*((_BYTE *)this + v11) != 1)
    goto LABEL_16;
  result = siri::speech::schema_fb::PronGuessResponse::Verify(v10, a2);
  if (result)
    goto LABEL_16;
  return result;
}

BOOL siri::speech::qss_fb::RecognitionStreamingRequest::Verify(siri::speech::qss_fb::RecognitionStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::SetAlternateRecognitionSausage *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::RecognitionStreamingRequest *)((char *)this
                                                                    + v8[3]
                                                                    + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::RecognitionStreamingRequest_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::RecognitionStreamingRequest_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::SetAlternateRecognitionSausage *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::StartSpeechRequest::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::UserParameters::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::SetRequestOrigin::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::SetSpeechContext::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::SetSpeechProfile::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::SetEndpointerState::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::AudioPacket::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::FinishAudio::Verify(this, a1);
      break;
    case 9:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::ResetServerEndpointer::Verify(this, a1);
      break;
    case 10:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::CheckForSpeechRequest::Verify(this, a1);
      break;
    case 11:
      if (!this)
        goto LABEL_24;
      result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify(this, a1);
      break;
    default:
LABEL_24:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::qss_fb::RecognitionStreamingResponse::Verify(siri::speech::qss_fb::RecognitionStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::RecognitionStreamingResponse *)((char *)this
                                                                     + v8[3]
                                                                     + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::RecognitionStreamingResponse_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::RecognitionStreamingResponse_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::MultiUserFinalSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::PartialSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::UpdatedAcousticProfile::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::EndPointLikelihood::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::EndPointCandidate::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_31;
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::SetEndpointerState::Verify(this, a1);
      break;
    case 9:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 10:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::MultiUserRecognitionCandidate::Verify(this, a1);
      break;
    case 11:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 12:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::ServerEndpointFeatures::Verify(this, a1);
      break;
    case 13:
      if (!this)
        goto LABEL_31;
      result = siri::speech::schema_fb::ClientSetupInfo::Verify(this, a1);
      break;
    case 14:
      if (!this)
        goto LABEL_31;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if (result)
      {
        --*((_DWORD *)a1 + 4);
        goto LABEL_31;
      }
      break;
    default:
LABEL_31:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::qss_fb::MultiUserStreamingRequest::Verify(siri::speech::qss_fb::MultiUserStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::SetAlternateRecognitionSausage *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::MultiUserStreamingRequest *)((char *)this
                                                                  + v8[3]
                                                                  + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::MultiUserStreamingRequest_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::MultiUserStreamingRequest_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::SetAlternateRecognitionSausage *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::MultiUserStartSpeechRequest::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::UserParameters::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::SetRequestOrigin::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::SetSpeechContext::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::SetSpeechProfile::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::SetEndpointerState::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::AudioPacket::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::FinishAudio::Verify(this, a1);
      break;
    case 9:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::ResetServerEndpointer::Verify(this, a1);
      break;
    case 10:
      if (!this)
        goto LABEL_22;
      result = siri::speech::schema_fb::SetAlternateRecognitionSausage::Verify(this, a1);
      break;
    default:
LABEL_22:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::qss_fb::MultiUserStreamingResponse::Verify(siri::speech::qss_fb::MultiUserStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::FinalSpeechRecognitionResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::MultiUserStreamingResponse *)((char *)this
                                                                   + v8[3]
                                                                   + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::MultiUserStreamingResponse_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::MultiUserStreamingResponse_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::FinalSpeechRecognitionResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_20;
      return siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify(this, a1);
    case 2:
      if (!this)
        goto LABEL_20;
      return siri::speech::schema_fb::PartialSpeechRecognitionResponse::Verify(this, a1);
    case 3:
      if (!this)
        goto LABEL_20;
      goto LABEL_7;
    case 4:
      if (!this)
        goto LABEL_20;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_20;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_20;
      result = siri::speech::schema_fb::ServerEndpointFeatures::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_20;
      result = siri::speech::schema_fb::ClientSetupInfo::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_20;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if ((_DWORD)result)
      {
        --*((_DWORD *)a1 + 4);
LABEL_20:
        result = 1;
      }
      break;
    case 9:
      if (!this)
        goto LABEL_20;
LABEL_7:
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    default:
      goto LABEL_20;
  }
  return result;
}

BOOL siri::speech::qss_fb::MultilingualStreamingRequest::Verify(siri::speech::qss_fb::MultilingualStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::LanguageDetected *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::MultilingualStreamingRequest *)((char *)this
                                                                     + v8[3]
                                                                     + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::MultilingualStreamingRequest_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::MultilingualStreamingRequest_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::LanguageDetected *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::StartMultilingualSpeechRequest::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::UserParameters::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::SetRequestOrigin::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::SetSpeechContext::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::SetSpeechProfile::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::AudioPacket::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::FinishAudio::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::LanguageDetected::Verify(this, a1);
      break;
    default:
LABEL_18:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::qss_fb::MultilingualStreamingResponse::Verify(siri::speech::qss_fb::MultilingualStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::FinalSpeechRecognitionResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::MultilingualStreamingResponse *)((char *)this
                                                                      + v8[3]
                                                                      + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::MultilingualStreamingResponse_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::MultilingualStreamingResponse_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::FinalSpeechRecognitionResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_15;
      result = siri::speech::schema_fb::FinalSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_15;
      result = siri::speech::schema_fb::PartialSpeechRecognitionResponse::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_15;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_15;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_15;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if (result)
      {
        --*((_DWORD *)a1 + 4);
        goto LABEL_15;
      }
      break;
    case 6:
      if (!this)
        goto LABEL_15;
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    default:
LABEL_15:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::qss_fb::SpeechTranslationStreamingRequest::Verify(siri::speech::qss_fb::SpeechTranslationStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartSpeechTranslationRequest *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::SpeechTranslationStreamingRequest *)((char *)this
                                                                          + v8[3]
                                                                          + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::SpeechTranslationStreamingRequest_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::SpeechTranslationStreamingRequest_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::StartSpeechTranslationRequest *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::StartSpeechTranslationRequest::Verify(this, a1);
      break;
    case 2:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::LanguageDetected::Verify(this, a1);
      break;
    case 3:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::AudioPacket::Verify(this, a1);
      break;
    case 4:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::SpeechTranslationAudioPacket::Verify(this, a1);
      break;
    case 5:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::FinishAudio::Verify(this, a1);
      break;
    case 6:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::SetEndpointerState::Verify(this, a1);
      break;
    case 7:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::ResetServerEndpointer::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_18;
      result = siri::speech::schema_fb::StartSpeechTranslationLoggingRequest::Verify(this, a1);
      break;
    default:
LABEL_18:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::qss_fb::SpeechTranslationStreamingResponse::Verify(siri::speech::qss_fb::SpeechTranslationStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::SpeechTranslationMtResponse *v10;
  uint64_t v11;
  int v12;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          v10 = 0;
          if (v9 < 5)
            goto LABEL_15;
        }
        else if (v8[3])
        {
          v10 = (siri::speech::qss_fb::SpeechTranslationStreamingResponse *)((char *)this
                                                                           + v8[3]
                                                                           + *(unsigned int *)((char *)this + v8[3]));
        }
        else
        {
          v10 = 0;
        }
        v11 = v8[2];
        if (v11)
        {
          v12 = *((unsigned __int8 *)this + v11);
          goto LABEL_16;
        }
LABEL_15:
        v12 = 0;
LABEL_16:
        result = siri::speech::qss_fb::SpeechTranslationStreamingResponse_::VerifyContentUnion(a2, v10, v12);
        if (result)
        {
          --*((_DWORD *)a2 + 4);
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::SpeechTranslationStreamingResponse_::VerifyContentUnion(apple::aiml::flatbuffers2::Verifier *a1, siri::speech::schema_fb::SpeechTranslationMtResponse *this, int a3)
{
  _BOOL8 result;

  switch(a3)
  {
    case 1:
      if (!this)
        goto LABEL_27;
      return siri::speech::schema_fb::SpeechTranslationPartialRecognitionResponse::Verify(this, a1);
    case 2:
      if (!this)
        goto LABEL_27;
      return siri::speech::schema_fb::SpeechTranslationFinalRecognitionResponse::Verify(this, a1);
    case 3:
      if (!this)
        goto LABEL_27;
      result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a1, (const unsigned __int8 *)this);
      if ((_DWORD)result)
      {
        --*((_DWORD *)a1 + 4);
        goto LABEL_27;
      }
      return result;
    case 4:
      if (!this)
        goto LABEL_27;
      return siri::speech::schema_fb::SpeechTranslationMtResponse::Verify(this, a1);
    case 5:
      if (!this)
        goto LABEL_27;
      return siri::speech::schema_fb::SpeechTranslationTextToSpeechResponse::Verify(this, a1);
    case 6:
      if (!this)
        goto LABEL_27;
      goto LABEL_14;
    case 7:
      if (!this)
        goto LABEL_27;
LABEL_14:
      result = siri::speech::qss_fb::ErrorMessage::Verify(this, a1);
      break;
    case 8:
      if (!this)
        goto LABEL_27;
      result = siri::speech::schema_fb::RecognitionCandidate::Verify(this, a1);
      break;
    case 9:
      if (!this)
        goto LABEL_27;
      result = siri::speech::schema_fb::RequestStatsResponse::Verify(this, a1);
      break;
    case 10:
      if (!this)
        goto LABEL_27;
      result = siri::speech::schema_fb::ServerEndpointFeatures::Verify(this, a1);
      break;
    case 11:
      if (!this)
        goto LABEL_27;
      result = siri::speech::schema_fb::ClientSetupInfo::Verify(this, a1);
      break;
    case 12:
      if (!this)
        goto LABEL_27;
      result = siri::speech::schema_fb::SpeechTranslationServerEndpointFeatures::Verify(this, a1);
      break;
    default:
LABEL_27:
      result = 1;
      break;
  }
  return result;
}

BOOL siri::speech::qss_fb::BatchTranslationStreamingRequest::Verify(siri::speech::qss_fb::BatchTranslationStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::BatchTranslationRequest *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_25:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
  }
  else if (v8[3])
  {
    v10 = (siri::speech::qss_fb::BatchTranslationStreamingRequest *)((char *)this
                                                                   + v8[3]
                                                                   + *(unsigned int *)((char *)this + v8[3]));
    goto LABEL_12;
  }
  v10 = 0;
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_25;
  switch(*((_BYTE *)this + v11))
  {
    case 1:
      if (!v10 || siri::speech::schema_fb::BatchTranslationRequest::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 2:
      if (!v10 || siri::speech::schema_fb::BatchTranslationFeedbackRequest::Verify(v10, a2))
        goto LABEL_25;
      goto LABEL_22;
    case 3:
      if (!v10 || siri::speech::schema_fb::BatchTranslationLoggingRequest::Verify(v10, a2))
        goto LABEL_25;
LABEL_22:
      result = 0;
      break;
    case 4:
      if (!v10)
        goto LABEL_25;
      result = siri::speech::schema_fb::UserParameters::Verify(v10, a2);
      if (result)
        goto LABEL_25;
      break;
    default:
      goto LABEL_25;
  }
  return result;
}

BOOL siri::speech::qss_fb::BatchTranslationStreamingResponse::Verify(siri::speech::qss_fb::BatchTranslationStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::qss_fb::ErrorMessage *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_26;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::BatchTranslationStreamingResponse *)((char *)this
                                                                  + v8[3]
                                                                  + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_26;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 3)
  {
    if (v12 == 2)
    {
      if (v10 && !siri::speech::qss_fb::ErrorMessage::Verify(v10, a2))
        return 0;
    }
    else
    {
      v13 = v12 != 1 || v10 == 0;
      if (!v13 && !siri::speech::schema_fb::BatchTranslationResponse::Verify(v10, a2))
        return 0;
    }
    goto LABEL_26;
  }
  if (!v10 || (result = siri::speech::schema_fb::TranslationSupportedLanguagesResponse::Verify(v10, a2)))
  {
LABEL_26:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::qss_fb::TextToSpeechRouterStreamingStreamingRequest::Verify(siri::speech::qss_fb::TextToSpeechRouterStreamingStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::StartTextToSpeechStreamingRequest *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_16:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::TextToSpeechRouterStreamingStreamingRequest *)((char *)this
                                                                            + v8[3]
                                                                            + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_16;
  if (!v10)
    goto LABEL_16;
  if (*((_BYTE *)this + v11) != 1)
    goto LABEL_16;
  result = siri::speech::schema_fb::StartTextToSpeechStreamingRequest::Verify(v10, a2);
  if (result)
    goto LABEL_16;
  return result;
}

BOOL siri::speech::qss_fb::TextToSpeechRouterStreamingStreamingResponse::Verify(siri::speech::qss_fb::TextToSpeechRouterStreamingStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::PartialTextToSpeechStreamingResponse *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_26;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::TextToSpeechRouterStreamingStreamingResponse *)((char *)this
                                                                             + v8[3]
                                                                             + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_26;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 3)
  {
    if (v12 == 2)
    {
      if (v10 && !siri::speech::schema_fb::PartialTextToSpeechStreamingResponse::Verify(v10, a2))
        return 0;
    }
    else
    {
      v13 = v12 != 1 || v10 == 0;
      if (!v13 && !siri::speech::schema_fb::BeginTextToSpeechStreamingResponse::Verify(v10, a2))
        return 0;
    }
    goto LABEL_26;
  }
  if (!v10 || (result = siri::speech::schema_fb::FinalTextToSpeechStreamingResponse::Verify(v10, a2)))
  {
LABEL_26:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::qss_fb::TextToSpeechStreamingStreamingResponse::Verify(siri::speech::qss_fb::TextToSpeechStreamingStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (result)
  {
    v5 = (unsigned __int16 *)((char *)this - *(int *)this);
    if (*v5 < 5u
      || (v6 = v5[2]) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 2) && v7 - 1 >= (unint64_t)this + v6 - *(_QWORD *)a2)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
      if (result)
      {
        v8 = (unsigned __int16 *)((char *)this - *(int *)this);
        v9 = *v8;
        if (v9 < 7)
        {
          if (v9 < 5)
          {
LABEL_25:
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
        else if (v8[3])
        {
          v10 = (unsigned __int8 *)this + v8[3] + *(unsigned int *)((char *)this + v8[3]);
          goto LABEL_12;
        }
        v10 = 0;
LABEL_12:
        v11 = v8[2];
        if (v11)
        {
          switch(*((_BYTE *)this + v11))
          {
            case 1:
              if (!v10)
                goto LABEL_25;
              result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, v10);
              if (!result)
                return result;
              --*((_DWORD *)a2 + 4);
              goto LABEL_25;
            case 2:
              if (!v10
                || siri::speech::schema_fb::BeginTextToSpeechStreamingResponse::Verify((siri::speech::schema_fb::BeginTextToSpeechStreamingResponse *)v10, a2))
              {
                goto LABEL_25;
              }
              return 0;
            case 3:
              if (!v10
                || siri::speech::schema_fb::PartialTextToSpeechStreamingResponse::Verify((siri::speech::schema_fb::PartialTextToSpeechStreamingResponse *)v10, a2))
              {
                goto LABEL_25;
              }
              return 0;
            case 4:
              if (!v10)
                goto LABEL_25;
              result = siri::speech::schema_fb::FinalTextToSpeechStreamingResponse::Verify((siri::speech::schema_fb::FinalTextToSpeechStreamingResponse *)v10, a2);
              if (result)
                goto LABEL_25;
              return result;
            default:
              goto LABEL_25;
          }
        }
        goto LABEL_25;
      }
    }
  }
  return result;
}

BOOL siri::speech::qss_fb::LanguageDetectionStreamingRequest::Verify(siri::speech::qss_fb::LanguageDetectionStreamingRequest *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::AudioPacket *v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
      goto LABEL_26;
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::LanguageDetectionStreamingRequest *)((char *)this
                                                                  + v8[3]
                                                                  + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_26;
  v12 = *((unsigned __int8 *)this + v11);
  if (v12 != 3)
  {
    if (v12 == 2)
    {
      if (v10 && !siri::speech::schema_fb::AudioPacket::Verify(v10, a2))
        return 0;
    }
    else
    {
      v13 = v12 != 1 || v10 == 0;
      if (!v13 && !siri::speech::schema_fb::StartLanguageDetectionRequest::Verify(v10, a2))
        return 0;
    }
    goto LABEL_26;
  }
  if (!v10 || (result = siri::speech::schema_fb::FinishAudio::Verify(v10, a2)))
  {
LABEL_26:
    --*((_DWORD *)a2 + 4);
    return 1;
  }
  return result;
}

BOOL siri::speech::qss_fb::LanguageDetectionStreamingResponse::Verify(siri::speech::qss_fb::LanguageDetectionStreamingResponse *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  unsigned __int16 *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int16 *v8;
  unsigned int v9;
  siri::speech::schema_fb::LanguageDetectionResponse *v10;
  uint64_t v11;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, (const unsigned __int8 *)this);
  if (!result)
    return result;
  v5 = (unsigned __int16 *)((char *)this - *(int *)this);
  if (*v5 >= 5u)
  {
    v6 = v5[2];
    if (v6)
    {
      result = 0;
      v7 = *((_QWORD *)a2 + 1);
      if (v7 < 2 || v7 - 1 < (unint64_t)this + v6 - *(_QWORD *)a2)
        return result;
    }
  }
  result = apple::aiml::flatbuffers2::Table::VerifyOffset(this, a2, 6u);
  if (!result)
    return result;
  v8 = (unsigned __int16 *)((char *)this - *(int *)this);
  v9 = *v8;
  if (v9 < 7)
  {
    if (v9 < 5)
    {
LABEL_16:
      --*((_DWORD *)a2 + 4);
      return 1;
    }
    goto LABEL_11;
  }
  if (!v8[3])
  {
LABEL_11:
    v10 = 0;
    goto LABEL_12;
  }
  v10 = (siri::speech::qss_fb::LanguageDetectionStreamingResponse *)((char *)this
                                                                   + v8[3]
                                                                   + *(unsigned int *)((char *)this + v8[3]));
LABEL_12:
  v11 = v8[2];
  if (!v11)
    goto LABEL_16;
  if (!v10)
    goto LABEL_16;
  if (*((_BYTE *)this + v11) != 1)
    goto LABEL_16;
  result = siri::speech::schema_fb::LanguageDetectionResponse::Verify(v10, a2);
  if (result)
    goto LABEL_16;
  return result;
}

void sub_2493054A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249305510(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930556C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493055E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493056B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930578C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249305868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249305944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493059E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249305AF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249305C34(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249305CBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249305D2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249305D88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249305DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249305ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249305F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249305FFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249306074(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493060FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930616C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493061C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930623C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930630C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493063E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493064C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493065A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930667C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249306758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249306834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249306910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493069EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249306AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249306BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249306C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249306E50(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249307150(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493071D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249307248(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493072A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249307318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493073E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493074C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493075A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930767C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493079EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307BA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249307FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930822C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493085EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249308674(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493086E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249308740(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493087B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249308884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249308F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493090DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493092C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249309588(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249309610(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249309680(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493096DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249309750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249309820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493098FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493099D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249309F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930A164(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930A3E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930A46C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930A4DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930A538(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930A5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930A67C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930A758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930A834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930A910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930A9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930AAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930ABA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930AC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930AD1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930AEC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930B100(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930B188(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930B1F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930B254(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930B2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930B398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930B474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930B550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930B62C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930B708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930B7E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930B880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930B9DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930BB9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930BC24(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930BC94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930BCF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930BD64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930BE34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930BF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930BFEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930C0C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930C1A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930C280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930C35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930C438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930C4D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930C678(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930C8B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930C940(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930C9B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930CA0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930CA80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930CB50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930CC2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930CD08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930CDE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930CEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930CF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930D794(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930DAD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930DB5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930DBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930DC28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930DC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930DD6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930DE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930DF24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930E000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930E09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930E1B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930E2F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930E378(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930E3E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930E444(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930E4B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930E588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930E664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930E740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930E7DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930E8CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930E9CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EA54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EAC4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EB20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EB94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930EC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930ED00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930ED94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EE0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EE94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EF04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EF60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930EFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930F0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930F180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930F25C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930F2F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930F3E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930F4E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930F570(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930F5E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930F63C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930F6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930F780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930F81C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930F8B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930F928(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930F9B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930FA20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930FA7C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24930FAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24930FBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930FC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930FD78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930FE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_24930FEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249310004(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249310144(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493101CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24931023C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249310298(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24931030C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493103DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_2493104B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249310594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249310630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249310720(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249310820(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493108A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249310918(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249310974(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_2493109E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249310AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249310B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_249310BE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249310C60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249310D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_249310E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_249310FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_2493110B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_2493111B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493112B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2493113B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493114B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2493115B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493116B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2493117B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493118B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2493119B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_249311AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249311BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_249311CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249311DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_249311EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249312000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_2493120F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_249312240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_249312334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_249312480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_249312574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_2493126C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_2493127B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_2493128B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493129B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249312B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_249312BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_249312CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_249312DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249312EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_249312FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2493130F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493131F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2493132F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493133F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_2493134F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_2493135F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249313740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_249313834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_249313934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_249313A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249313B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_249313C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_249313D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_249313E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_249313F28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249313F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_24931401C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249314070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249314110(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249314164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_249314204(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249314258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493142F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24931434C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493143EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249314440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493144E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249314534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493145D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_249314628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_2493146C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_24931471C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t __getCSLanguageDetectorClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getCSLanguageDetectorOptionClass_block_invoke_cold_1(v0);
}

uint64_t __getCSLanguageDetectorOptionClass_block_invoke_cold_1()
{
  NSObject *v0;

  v0 = abort_report_np();
  return -[_LTDMAAssetModel initWithMAAsset:].cold.1(v0);
}

void replacementDictionaryForEtiquetteFileAtURL_cold_1(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_2491B9000, log, OS_LOG_TYPE_ERROR, "Could not locate asset etiquette.json", v1, 2u);
}

void replacementDictionaryForEtiquetteFileAtURL_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[14];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_1_5();
  v3 = 0;
  OUTLINED_FUNCTION_3_0(&dword_2491B9000, v0, v1, "Could not read model at URL %@: %@", v2);
}

void replacementDictionaryForEtiquetteFileAtURL_cold_3()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t v2[14];
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_1_5();
  v3 = v0;
  OUTLINED_FUNCTION_3_0(&dword_2491B9000, v1, (uint64_t)v1, "Failed to parse model at URL %@: %@", v2);
}

void replacementDictionaryForEtiquetteFileAtURL_cold_4(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v6 = 138412546;
  v7 = a1;
  v8 = 2114;
  v9 = (id)objc_opt_class();
  v4 = v9;
  OUTLINED_FUNCTION_3_0(&dword_2491B9000, v3, v5, "Model at URL %@ is wrong type: %{public}@", (uint8_t *)&v6);

}

void _LTAudioPlaybackServiceAudioQueueCallback_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_0_7(&dword_2491B9000, v0, v1, "Error AudioQueueFreeBuffer %d", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_0();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x24BE1A1B0]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

OSStatus AudioConverterDispose(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x24BDB67F0](inAudioConverter);
}

OSStatus AudioConverterFillComplexBuffer(AudioConverterRef inAudioConverter, AudioConverterComplexInputDataProc inInputDataProc, void *inInputDataProcUserData, UInt32 *ioOutputDataPacketSize, AudioBufferList *outOutputData, AudioStreamPacketDescription *outPacketDescription)
{
  return MEMORY[0x24BDB67F8](inAudioConverter, inInputDataProc, inInputDataProcUserData, ioOutputDataPacketSize, outOutputData, outPacketDescription);
}

OSStatus AudioConverterNew(const AudioStreamBasicDescription *inSourceFormat, const AudioStreamBasicDescription *inDestinationFormat, AudioConverterRef *outAudioConverter)
{
  return MEMORY[0x24BDB6810](inSourceFormat, inDestinationFormat, outAudioConverter);
}

OSStatus AudioConverterReset(AudioConverterRef inAudioConverter)
{
  return MEMORY[0x24BDB6820](inAudioConverter);
}

OSStatus AudioConverterSetProperty(AudioConverterRef inAudioConverter, AudioConverterPropertyID inPropertyID, UInt32 inPropertyDataSize, const void *inPropertyData)
{
  return MEMORY[0x24BDB6828](inAudioConverter, *(_QWORD *)&inPropertyID, *(_QWORD *)&inPropertyDataSize, inPropertyData);
}

OSStatus AudioQueueAddPropertyListener(AudioQueueRef inAQ, AudioQueuePropertyID inID, AudioQueuePropertyListenerProc inProc, void *inUserData)
{
  return MEMORY[0x24BDB68C8](inAQ, *(_QWORD *)&inID, inProc, inUserData);
}

OSStatus AudioQueueAllocateBuffer(AudioQueueRef inAQ, UInt32 inBufferByteSize, AudioQueueBufferRef *outBuffer)
{
  return MEMORY[0x24BDB68D0](inAQ, *(_QWORD *)&inBufferByteSize, outBuffer);
}

OSStatus AudioQueueDispose(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x24BDB68D8](inAQ, inImmediate);
}

OSStatus AudioQueueEnqueueBuffer(AudioQueueRef inAQ, AudioQueueBufferRef inBuffer, UInt32 inNumPacketDescs, const AudioStreamPacketDescription *inPacketDescs)
{
  return MEMORY[0x24BDB68E0](inAQ, inBuffer, *(_QWORD *)&inNumPacketDescs, inPacketDescs);
}

OSStatus AudioQueueFlush(AudioQueueRef inAQ)
{
  return MEMORY[0x24BDB68F0](inAQ);
}

OSStatus AudioQueueFreeBuffer(AudioQueueRef inAQ, AudioQueueBufferRef inBuffer)
{
  return MEMORY[0x24BDB68F8](inAQ, inBuffer);
}

OSStatus AudioQueueGetCurrentTime(AudioQueueRef inAQ, AudioQueueTimelineRef inTimeline, AudioTimeStamp *outTimeStamp, Boolean *outTimelineDiscontinuity)
{
  return MEMORY[0x24BDB6900](inAQ, inTimeline, outTimeStamp, outTimelineDiscontinuity);
}

OSStatus AudioQueueGetProperty(AudioQueueRef inAQ, AudioQueuePropertyID inID, void *outData, UInt32 *ioDataSize)
{
  return MEMORY[0x24BDB6908](inAQ, *(_QWORD *)&inID, outData, ioDataSize);
}

uint64_t AudioQueueNewOutputWithAudioSession()
{
  return MEMORY[0x24BDB6918]();
}

OSStatus AudioQueueRemovePropertyListener(AudioQueueRef inAQ, AudioQueuePropertyID inID, AudioQueuePropertyListenerProc inProc, void *inUserData)
{
  return MEMORY[0x24BDB6928](inAQ, *(_QWORD *)&inID, inProc, inUserData);
}

OSStatus AudioQueueReset(AudioQueueRef inAQ)
{
  return MEMORY[0x24BDB6930](inAQ);
}

OSStatus AudioQueueSetParameter(AudioQueueRef inAQ, AudioQueueParameterID inParamID, AudioQueueParameterValue inValue)
{
  return MEMORY[0x24BDB6938](inAQ, *(_QWORD *)&inParamID, inValue);
}

OSStatus AudioQueueSetProperty(AudioQueueRef inAQ, AudioQueuePropertyID inID, const void *inData, UInt32 inDataSize)
{
  return MEMORY[0x24BDB6940](inAQ, *(_QWORD *)&inID, inData, *(_QWORD *)&inDataSize);
}

OSStatus AudioQueueStart(AudioQueueRef inAQ, const AudioTimeStamp *inStartTime)
{
  return MEMORY[0x24BDB6948](inAQ, inStartTime);
}

OSStatus AudioQueueStop(AudioQueueRef inAQ, Boolean inImmediate)
{
  return MEMORY[0x24BDB6950](inAQ, inImmediate);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x24BDBC568](alloc, cStr, *(_QWORD *)&encoding);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x24BED8448]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x24BED8470]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x24BDD0B80](aClassName);
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x24BDD0E08](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x24BDD1240](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x24BDD1258](range.location, range.length);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x24BDD1268](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x24BDD1280]();
}

NSRange NSUnionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x24BDD13D8](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

uint64_t PLLogRegisteredEvent()
{
  return MEMORY[0x24BE74F60]();
}

uint64_t _AFPreferencesOutputVoice()
{
  return MEMORY[0x24BE09430]();
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

uint64_t _LTFeedbackCategoryString()
{
  return MEMORY[0x24BDF64E8]();
}

uint64_t _LTIsInternalInstall()
{
  return MEMORY[0x24BDF64F0]();
}

uint64_t _LTIsSeedInstall()
{
  return MEMORY[0x24BDF64F8]();
}

uint64_t _LTLanguageCodeToSupportedLocale()
{
  return MEMORY[0x24BDF6500]();
}

uint64_t _LTLocaleIdentifierMappedForTTS()
{
  return MEMORY[0x24BDF6508]();
}

uint64_t _LTLocaleMappedForTTS()
{
  return MEMORY[0x24BDF6510]();
}

uint64_t _LTLoggingRequestClasses()
{
  return MEMORY[0x24BDF6518]();
}

uint64_t _LTOfflineStateString()
{
  return MEMORY[0x24BDF6520]();
}

uint64_t _LTTextTranslationServiceXPCInterface()
{
  return MEMORY[0x24BDF6528]();
}

uint64_t _LTTranslationModelTaskString()
{
  return MEMORY[0x24BDF6538]();
}

uint64_t _LTTranslationServiceDelegateXPCInterface()
{
  return MEMORY[0x24BDF6540]();
}

uint64_t _LTTranslationServiceXPCInterface()
{
  return MEMORY[0x24BDF6548]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

uint64_t morphun::TokenIterator::TokenIterator()
{
  return MEMORY[0x24BEDC880]();
}

uint64_t morphun::TokenIterator::operator++()
{
  return MEMORY[0x24BEDC888]();
}

uint64_t morphun::TokenizerFactory::createTokenizer()
{
  return MEMORY[0x24BEDC890]();
}

uint64_t morphun::util::ULocale::ULocale()
{
  return MEMORY[0x24BEDC8B0]();
}

void morphun::util::ULocale::~ULocale(morphun::util::ULocale *this)
{
  MEMORY[0x24BEDC8B8](this);
}

uint64_t morphun::TokenIterator::operator*()
{
  return MEMORY[0x24BEDC8F8]();
}

uint64_t morphun::TokenIterator::operator!=()
{
  return MEMORY[0x24BEDC900]();
}

uint64_t morphun::Token::isWhitespace(morphun::Token *this)
{
  return MEMORY[0x24BEDC910](this);
}

uint64_t morphun::Token::isHead(morphun::Token *this)
{
  return MEMORY[0x24BEDC928](this);
}

uint64_t morphun::Token::isTail(morphun::Token *this)
{
  return MEMORY[0x24BEDC930](this);
}

uint64_t morphun::Token::getNext(morphun::Token *this)
{
  return MEMORY[0x24BEDC938](this);
}

uint64_t morphun::Token::getValue(morphun::Token *this)
{
  return MEMORY[0x24BEDC940](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x24BEDAAA8](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x24BEDABB0](this);
}

void std::terminate(void)
{
  MEMORY[0x24BEDB6C0]();
}

uint64_t operator delete[]()
{
  return off_251A109B8();
}

void operator delete(void *__p)
{
  off_251A109C0(__p);
}

uint64_t operator delete()
{
  return off_251A109C8();
}

uint64_t operator new[]()
{
  return off_251A109D0();
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_251A109D8(__sz);
}

uint64_t operator new()
{
  return off_251A109E0();
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x24BEDB8F8](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x24BEDB910](a1);
}

void __cxa_end_catch(void)
{
  MEMORY[0x24BEDB928]();
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x24BEDB930](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x24BEDB960](a1, lptinfo, a3);
}

int *__error(void)
{
  return (int *)MEMORY[0x24BDAC7D0]();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return MEMORY[0x24BDAC838](*(_QWORD *)&a1, a2);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x24BDACB60]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB68](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB88](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _set_user_dir_suffix()
{
  return MEMORY[0x24BDACC40]();
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x24BEAE670]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x24BDAD010]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x24BDAD170](*(_QWORD *)&__upper_bound);
}

uint64_t archive_entry_pathname()
{
  return MEMORY[0x24BEDA360]();
}

uint64_t archive_entry_set_pathname()
{
  return MEMORY[0x24BEDA3C8]();
}

uint64_t archive_error_string()
{
  return MEMORY[0x24BEDA430]();
}

uint64_t archive_read_extract()
{
  return MEMORY[0x24BEDA4A8]();
}

uint64_t archive_read_free()
{
  return MEMORY[0x24BEDA4B8]();
}

uint64_t archive_read_new()
{
  return MEMORY[0x24BEDA4C8]();
}

uint64_t archive_read_next_header()
{
  return MEMORY[0x24BEDA4D0]();
}

uint64_t archive_read_open_memory()
{
  return MEMORY[0x24BEDA500]();
}

uint64_t archive_read_support_filter_all()
{
  return MEMORY[0x24BEDA528]();
}

uint64_t archive_read_support_format_all()
{
  return MEMORY[0x24BEDA540]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return MEMORY[0x24BDADA08](*(_QWORD *)&a1, a2, a3);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADC60](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x24BDADCA8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC0](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x24BDADDA8](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADDE0](group, queue, block);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x24BDADF18](object);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x24BDADF68](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x24BDADF70](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x24BDADF78](source);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFB0](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x24BDADFD0](source, start, interval, leeway);
}

intptr_t dispatch_source_testcancel(dispatch_source_t source)
{
  return MEMORY[0x24BDADFD8](source);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x24BDADFF8](when, delta);
}

void exit(int a1)
{
  MEMORY[0x24BDAE268](*(_QWORD *)&a1);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

passwd *__cdecl getpwuid(uid_t a1)
{
  return (passwd *)MEMORY[0x24BDAE720](*(_QWORD *)&a1);
}

int gettimeofday(timeval *a1, void *a2)
{
  return MEMORY[0x24BDAE780](a1, a2);
}

uid_t getuid(void)
{
  return MEMORY[0x24BDAE788]();
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x24BEDCFD8](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x24BEDD030](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

void objc_end_catch(void)
{
  MEMORY[0x24BEDD050]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x24BEDD088](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x24BEDD0C0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x24BEDD148]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x24BEDD160]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x24BEDD2C0](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3D0](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD408](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x24BEDD420](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x24BEDD438](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x24BEDD440](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD458](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x24BDAF400](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x24BDAF408](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

int pthread_cond_broadcast(pthread_cond_t *a1)
{
  return MEMORY[0x24BDAF7C8](a1);
}

int pthread_cond_timedwait(pthread_cond_t *a1, pthread_mutex_t *a2, const timespec *a3)
{
  return MEMORY[0x24BDAF7F0](a1, a2, a3);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x24BDAF8D0](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x24BDAF8E0](a1);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return (char *)MEMORY[0x24BDAFAC0](a1, a2);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x24BDAFE40](__str, __size, __format);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x24BDAFF18](*(_QWORD *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x24BDB0100](a1, a2, a3, a4, a5);
}

