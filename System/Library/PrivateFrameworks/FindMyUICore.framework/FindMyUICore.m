uint64_t getEnumTagSinglePayload for GenericControl.Info(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t getEnumTagSinglePayload for Badge(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for GenericControl.Info()
{
  return &type metadata for GenericControl.Info;
}

ValueMetadata *type metadata accessor for Badge()
{
  return &type metadata for Badge;
}

double storeEnumTagSinglePayload for GenericControl.Info(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericControl.Info.Label()
{
  return &type metadata for GenericControl.Info.Label;
}

uint64_t type metadata accessor for FindMyRelativeDate()
{
  uint64_t result;

  result = qword_256A636D0;
  if (!qword_256A636D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for Badge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FindMyRelativeDate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for FindMyRelativeDate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for Feature.FindMyUI()
{
  return &type metadata for Feature.FindMyUI;
}

uint64_t sub_23B97BDA8()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  result = sub_23BB885E8();
  qword_256A5F818 = 0;
  qword_256A5F820 = 0;
  qword_256A5F828 = (uint64_t)v0;
  byte_256A5F830 = result & 1;
  return result;
}

Swift::Bool __swiftcall FeatureFlagsKey.isEnabled()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_1;
  void (*v10)(uint64_t *, uint64_t, uint64_t);
  char v11;
  char v12;
  uint64_t v15[5];

  v2 = v1;
  v3 = v0;
  v4 = *(_QWORD *)(v0 - 8);
  v5 = ((uint64_t (*)())MEMORY[0x24BDAC7A8])();
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = v5;
  v15[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v10(boxed_opaque_existential_1, v2, v3);
  v11 = sub_23BB88600();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  v10((uint64_t *)v7, v2, v3);
  if ((v11 & 1) != 0)
    v12 = 1;
  else
    v12 = sub_23B97BEE0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12 & 1;
}

unint64_t sub_23B97BEE0()
{
  void *v0;
  id v1;
  void *v2;
  unint64_t v3;

  sub_23BB88AB0();
  sub_23BB8AE2C();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  sub_23BB8A82C();
  sub_23BB88ABC();
  sub_23BB8AE2C();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  if (qword_256A58CD8 != -1)
    swift_once();
  if (byte_256A5F830 == 1)
  {
    v0 = (void *)qword_256A5F828;
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = (void *)sub_23BB8A784();
    v3 = (unint64_t)objc_msgSend(v1, sel_BOOLForKey_, v2);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    v3 = byte_256A5F831;
    swift_bridgeObjectRelease();
  }
  return v3;
}

const char *sub_23B97C048()
{
  _BYTE *v0;

  if (*v0)
    return "New_People_List_Rows";
  else
    return "New_Contact_Picker";
}

const char *sub_23B97C078()
{
  return "FindMy";
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

_BYTE *sub_23B97C0F8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t sub_23B97C104()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88984();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static MapsDirectionsProvider.live()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v6 = MEMORY[0x24BDAC7A8](v2, v5);
  v7 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v15 - v9;
  sub_23BB891B8();
  v11 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v11(v7, v10, v2);
  v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v11)(v13 + v12, v7, v2);
  *a1 = &unk_256A58E10;
  a1[1] = v13;
  a1[2] = sub_23B97C820;
  a1[3] = 0;
  return result;
}

uint64_t sub_23B97C2A0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[16] = a1;
  v4[17] = a4;
  v5 = *(_QWORD *)(a3 + 16);
  v4[18] = *a2;
  v4[19] = v5;
  sub_23BB8A9F4();
  v4[20] = sub_23BB8A9E8();
  v4[21] = sub_23BB8A988();
  v4[22] = v6;
  return swift_task_switch();
}

uint64_t sub_23B97C318()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[18];
  v2 = v0[19];
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_placemarkWithLocation_name_postalAddress_, v1, 0, 0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0F0]), sel_initWithPlacemark_, v4);
  v0[23] = v5;

  v6 = objc_msgSend(v3, sel_placemarkWithLocation_name_postalAddress_, v2, 0, 0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0F0]), sel_initWithPlacemark_, v6);
  v0[24] = v7;

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB058]), sel_init);
  v0[25] = v8;
  objc_msgSend(v8, sel_setSource_, v5);
  objc_msgSend(v8, sel_setDestination_, v7);
  objc_msgSend(v8, sel_setTransportType_, 7);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB050]), sel_initWithRequest_, v8);
  v0[26] = v9;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23B97C4E8;
  v10 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v11 = v0 + 10;
  v11[1] = 0x40000000;
  v11[2] = sub_23BA4C0E0;
  v11[3] = &block_descriptor;
  v11[4] = v10;
  objc_msgSend(v9, sel_calculateETAWithCompletionHandler_, v11);
  return swift_continuation_await();
}

uint64_t sub_23B97C4E8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23B97C544()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  swift_release();
  v1 = *(id *)(v0 + 120);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v17 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v4 = 136315394;
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(0x29286576696CLL, 0xE600000000000000, &v19);
    sub_23BB8ACB8();
    *(_WORD *)(v4 + 12) = 2112;
    *(_QWORD *)(v0 + 80) = v1;
    v5 = v1;
    sub_23BB8ACB8();
    *v17 = v1;

    _os_log_impl(&dword_23B979000, v2, v3, "MapsDirectionsProvider: didReceive %s - %@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v18, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);

  }
  else
  {

  }
  v6 = (uint64_t)objc_msgSend(v1, sel_transportType, v17);
  if (v6 > 3)
  {
    if (v6 == 4)
    {
      v7 = 3;
      goto LABEL_12;
    }
LABEL_9:
    v7 = 4;
    goto LABEL_12;
  }
  if (v6 == 1)
  {
    v7 = 0;
    goto LABEL_12;
  }
  if (v6 != 2)
    goto LABEL_9;
  v7 = 1;
LABEL_12:
  v9 = *(void **)(v0 + 200);
  v8 = *(void **)(v0 + 208);
  v11 = *(void **)(v0 + 184);
  v10 = *(void **)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 128);
  objc_msgSend(v1, sel_expectedTravelTime);
  v13 = sub_23BB8B384();
  v15 = v14;

  *(_BYTE *)v12 = v7;
  *(_QWORD *)(v12 + 8) = v13;
  *(_QWORD *)(v12 + 16) = v15;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B97C7BC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 208);
  v3 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 200);
  v4 = *(void **)(v0 + 184);
  swift_release();
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B97C820()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_meters);
  sub_23B97CD2C();
  return sub_23BB88678();
}

uint64_t sub_23B97C87C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23B97C8DC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v9 = v3 + ((v8 + 16) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_23B97C964;
  return sub_23B97C2A0(a1, a2, a3, v9);
}

uint64_t sub_23B97C964()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58E18);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58E20);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58E28);
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58E30);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58E38);
}

BOOL sub_23B97CA28(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23B97CA3C(uint64_t a1, uint64_t a2)
{
  return sub_23B97CB98(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23B97CA54(uint64_t a1, uint64_t a2)
{
  return sub_23B97CB98(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23B97CA68(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23BB8A79C();
  *a2 = 0;
  return result;
}

uint64_t sub_23B97CADC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23BB8A7A8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23B97CB58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23BB8A7B4();
  v2 = sub_23BB8A784();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23B97CB98(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23BB8A7B4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23B97CBD4()
{
  sub_23BB8A7B4();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B97CC14()
{
  uint64_t v0;

  sub_23BB8A7B4();
  sub_23BB8B240();
  sub_23BB8A808();
  v0 = sub_23BB8B270();
  swift_bridgeObjectRelease();
  return v0;
}

_DWORD *sub_23B97CC84@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_23B97CC94(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23B97CCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23BB8A7B4();
  v2 = v1;
  if (v0 == sub_23BB8A7B4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23BB8B1A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_23B97CD2C()
{
  unint64_t result;

  result = qword_256A58F00;
  if (!qword_256A58F00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A58F00);
  }
  return result;
}

uint64_t sub_23B97CD6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23BB8A7B4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23B97CD94()
{
  sub_23B97D0C8(&qword_256A58F60, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23BB8C118);
  sub_23B97D0C8(&qword_256A58F68, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23BB8C0B8);
  return sub_23BB8B018();
}

uint64_t sub_23B97CE18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23BB8A784();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23B97CE5C()
{
  sub_23B97D0C8(&qword_256A58F98, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_23BB8C324);
  sub_23B97D0C8((unint64_t *)&unk_256A58FA0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_23BB8C278);
  return sub_23BB8B018();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24260D8C4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t _s14descr250CB21E1V10InputValueOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_23B97CF50(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23B97CF70(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F10);
}

uint64_t sub_23B97CFB0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23B97CFD0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F18);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F20);
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F28);
}

void type metadata accessor for SPAccessoryPairingStatus(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F30);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F38);
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F40);
}

uint64_t sub_23B97D070()
{
  return sub_23B97D0C8(&qword_256A58F48, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23BB8C07C);
}

uint64_t sub_23B97D09C()
{
  return sub_23B97D0C8(&qword_256A58F50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23BB8C050);
}

uint64_t sub_23B97D0C8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24260D8DC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B97D108()
{
  return sub_23B97D0C8(&qword_256A58F58, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_23BB8C0EC);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F70);
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
  sub_23B97D15C(a1, &qword_256A58F78);
}

void sub_23B97D15C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_23B97D1A0()
{
  return sub_23B97D0C8(&qword_256A58F80, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_23BB8C23C);
}

uint64_t sub_23B97D1CC()
{
  return sub_23B97D0C8(&qword_256A58F88, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_23BB8C210);
}

uint64_t sub_23B97D1F8()
{
  return sub_23B97D0C8(&qword_256A58F90, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_23BB8C2AC);
}

uint64_t MapsDirectionsProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  return sub_23B989EFC(v3, a1, &qword_256A59148);
}

uint64_t sub_23B97D2F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  return sub_23B989EFC(v4, a2, &qword_256A59148);
}

uint64_t sub_23B97D3B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23B989EFC(a1, (uint64_t)v7, &qword_256A59148);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60((uint64_t)v7, &qword_256A59148);
}

uint64_t type metadata accessor for MapsDirectionsProvider()
{
  uint64_t result;

  result = qword_256A59200;
  if (!qword_256A59200)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MapsDirectionsProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A59148);
}

uint64_t sub_23B97D5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  sub_23B989EB4(a2, v3);
  return swift_endAccess();
}

uint64_t sub_23B97D618()
{
  uint64_t v0;

  return sub_23B97D5B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*MapsDirectionsProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23B97D72C;
}

void sub_23B97D72C(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

unint64_t sub_23B97D794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59428);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593F8);
  v7 = sub_23BB8B000();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (uint64_t)v6 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23B989EFC(v13, (uint64_t)v6, &qword_256A59428);
    v15 = *v6;
    v16 = v6[1];
    result = sub_23B984884(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    result = sub_23B989CA4(v10, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97D934(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  __int128 v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59420);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v16 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = *((id *)&v16 + 1);
    result = sub_23B984884(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = v2[7] + 24 * result;
    *(_QWORD *)v12 = v7;
    *(_OWORD *)(v12 + 8) = v16;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 = (_OWORD *)((char *)v4 + 40);
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97DA7C(uint64_t a1)
{
  return sub_23B97EDEC(a1, &qword_256A59378);
}

unint64_t sub_23B97DA88(uint64_t a1)
{
  return sub_23B97EC24(a1, &qword_256A59310, &qword_256A5E9D0, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_23B9849D4, type metadata accessor for SessionFollowingState);
}

unint64_t sub_23B97DAAC(uint64_t a1)
{
  return sub_23B97EC24(a1, &qword_256A59318, &qword_256A59320, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_23B9849D4, type metadata accessor for SessionFollowerState);
}

unint64_t sub_23B97DAD0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59330);
  v2 = sub_23BB8B000();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v20 = v2 + 64;
  swift_retain();
  v5 = (_BYTE *)(a1 + 80);
  while (1)
  {
    v6 = *((_QWORD *)v5 - 6);
    v7 = *((_QWORD *)v5 - 5);
    v8 = *(v5 - 32);
    v9 = *((_QWORD *)v5 - 3);
    v10 = *((_QWORD *)v5 - 2);
    v11 = (void *)*((_QWORD *)v5 - 1);
    v12 = *v5;
    swift_bridgeObjectRetain();
    sub_23B9894A0(v9, v10, v11);
    result = sub_23B9849D4(v6, v7, v8);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v15 = v3[6] + 24 * result;
    *(_QWORD *)v15 = v6;
    *(_QWORD *)(v15 + 8) = v7;
    *(_BYTE *)(v15 + 16) = v8;
    v16 = v3[7] + 32 * result;
    *(_QWORD *)v16 = v9;
    *(_QWORD *)(v16 + 8) = v10;
    *(_QWORD *)(v16 + 16) = v11;
    *(_BYTE *)(v16 + 24) = v12;
    v17 = v3[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v5 += 56;
    v3[2] = v19;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97DC30(uint64_t a1)
{
  return sub_23B97EC24(a1, &qword_256A59328, (uint64_t *)&unk_256A5E9E0, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_23B9849D4, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
}

unint64_t sub_23B97DC54(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592D0);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_23B984C24((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97DD5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t result;
  char v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59300);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (_QWORD *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59308);
  v7 = sub_23BB8B000();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23B989EFC(v13, (uint64_t)v6, &qword_256A59300);
    v15 = *v6;
    v16 = v6[1];
    result = sub_23B984B34(*v6, v16);
    if ((v18 & 1) != 0)
      break;
    v19 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v20 = (uint64_t *)(v8[6] + 16 * result);
    *v20 = v15;
    v20[1] = v16;
    v21 = v8[7];
    v22 = sub_23BB88984();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v19, v10, v22);
    v23 = v8[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97DEFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A592E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592F0);
  v7 = sub_23BB8B000();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23B989EFC(v13, (uint64_t)v6, &qword_256A592E8);
    result = sub_23B984B9C((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for RepositorySubscriber();
    result = sub_23B989CA4((uint64_t)v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    *(_QWORD *)(v8[7] + 8 * v17) = *(_QWORD *)&v6[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97E094(uint64_t a1)
{
  return sub_23B97E0A0(a1, &qword_256A593C0);
}

unint64_t sub_23B97E0A0(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23BB8B000();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_23B984884(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23B97E1B4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[3];

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593B8);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  swift_retain();
  v4 = *(_OWORD *)(a1 + 240);
  v41 = *(_OWORD *)(a1 + 224);
  v42[0] = v4;
  *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)(a1 + 249);
  v5 = *(_OWORD *)(a1 + 176);
  v37 = *(_OWORD *)(a1 + 160);
  v38 = v5;
  v6 = *(_OWORD *)(a1 + 208);
  v39 = *(_OWORD *)(a1 + 192);
  v40 = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v33 = *(_OWORD *)(a1 + 96);
  v34 = v7;
  v8 = *(_OWORD *)(a1 + 144);
  v35 = *(_OWORD *)(a1 + 128);
  v36 = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v29 = *(_OWORD *)(a1 + 32);
  v30 = v9;
  v10 = *(_OWORD *)(a1 + 80);
  v31 = *(_OWORD *)(a1 + 64);
  v32 = v10;
  v12 = *((_QWORD *)&v29 + 1);
  v11 = v29;
  sub_23B9898C4((uint64_t)&v29);
  v13 = sub_23B984884(v11, v12);
  if ((v14 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v15 = 272;
  while (1)
  {
    *(_QWORD *)((char *)v2 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v13;
    v16 = (uint64_t *)(v2[6] + 16 * v13);
    *v16 = v11;
    v16[1] = v12;
    result = sub_23B989684((uint64_t)&v30, v2[7] + 224 * v13);
    v18 = v2[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      break;
    v2[2] = v20;
    if (!--v3)
      goto LABEL_9;
    v21 = *(_OWORD *)(a1 + v15 + 208);
    v41 = *(_OWORD *)(a1 + v15 + 192);
    v42[0] = v21;
    *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)(a1 + v15 + 217);
    v22 = *(_OWORD *)(a1 + v15 + 144);
    v37 = *(_OWORD *)(a1 + v15 + 128);
    v38 = v22;
    v23 = *(_OWORD *)(a1 + v15 + 176);
    v39 = *(_OWORD *)(a1 + v15 + 160);
    v40 = v23;
    v24 = *(_OWORD *)(a1 + v15 + 80);
    v33 = *(_OWORD *)(a1 + v15 + 64);
    v34 = v24;
    v25 = *(_OWORD *)(a1 + v15 + 112);
    v35 = *(_OWORD *)(a1 + v15 + 96);
    v36 = v25;
    v26 = *(_OWORD *)(a1 + v15 + 16);
    v29 = *(_OWORD *)(a1 + v15);
    v30 = v26;
    v27 = *(_OWORD *)(a1 + v15 + 48);
    v31 = *(_OWORD *)(a1 + v15 + 32);
    v32 = v27;
    v12 = *((_QWORD *)&v29 + 1);
    v11 = v29;
    sub_23B9898C4((uint64_t)&v29);
    v13 = sub_23B984884(v11, v12);
    v15 += 240;
    if ((v28 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_23B97E388(uint64_t a1)
{
  return sub_23B97EDEC(a1, &qword_256A59368);
}

unint64_t sub_23B97E394(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  unint64_t result;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593A8);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    v8 = v4[1];
    v9 = v4[2];
    v10 = *((_BYTE *)v4 + 24);
    v11 = v4[4];
    v12 = *((_BYTE *)v4 + 40);
    v13 = (void *)v4[6];
    *(_QWORD *)&v23 = *(v4 - 3);
    *((_QWORD *)&v23 + 1) = v5;
    *(_QWORD *)&v24 = v6;
    *((_QWORD *)&v24 + 1) = v7;
    *(_QWORD *)&v25 = v8;
    *((_QWORD *)&v25 + 1) = v9;
    LOBYTE(v26) = v10;
    *((_QWORD *)&v26 + 1) = v11;
    v27 = v12;
    v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23B984960((double *)&v23);
    if ((v16 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v17 = v2[6] + 72 * result;
    v18 = v26;
    *(_OWORD *)(v17 + 32) = v25;
    *(_OWORD *)(v17 + 48) = v18;
    *(_BYTE *)(v17 + 64) = v27;
    v19 = v24;
    *(_OWORD *)v17 = v23;
    *(_OWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v2[7] + 8 * result) = v13;
    v20 = v2[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v4 += 10;
    v2[2] = v22;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97E510(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593A0);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 104);
  while (1)
  {
    v5 = *(v4 - 8);
    v6 = *(v4 - 7);
    v7 = *(v4 - 6);
    v9 = *(v4 - 5);
    v8 = *(v4 - 4);
    v10 = *((_BYTE *)v4 - 24);
    v11 = *(v4 - 2);
    v12 = *((_BYTE *)v4 - 8);
    v13 = *v4;
    *(_QWORD *)&v22 = *(v4 - 9);
    *((_QWORD *)&v22 + 1) = v5;
    *(_QWORD *)&v23 = v6;
    *((_QWORD *)&v23 + 1) = v7;
    *(_QWORD *)&v24 = v9;
    *((_QWORD *)&v24 + 1) = v8;
    LOBYTE(v25) = v10;
    *((_QWORD *)&v25 + 1) = v11;
    v26 = v12;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23B984960((double *)&v22);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v16 = v2[6] + 72 * result;
    v17 = v25;
    *(_OWORD *)(v16 + 32) = v24;
    *(_OWORD *)(v16 + 48) = v17;
    *(_BYTE *)(v16 + 64) = v26;
    v18 = v23;
    *(_OWORD *)v16 = v22;
    *(_OWORD *)(v16 + 16) = v18;
    *(_QWORD *)(v2[7] + 8 * result) = v13;
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v2[2] = v21;
    v4 += 10;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97E684(uint64_t a1)
{
  return sub_23B97EDEC(a1, &qword_256A593B0);
}

unint64_t sub_23B97E690(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unsigned __int8 v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  __int128 v26;
  _BYTE v27[144];

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59398);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = v3 - 1;
  for (i = 32; ; i += 160)
  {
    v6 = *(_OWORD *)(a1 + i + 112);
    *(_OWORD *)&v27[80] = *(_OWORD *)(a1 + i + 96);
    *(_OWORD *)&v27[96] = v6;
    v7 = *(_OWORD *)(a1 + i + 144);
    *(_OWORD *)&v27[112] = *(_OWORD *)(a1 + i + 128);
    *(_OWORD *)&v27[128] = v7;
    v8 = *(_OWORD *)(a1 + i + 48);
    *(_OWORD *)&v27[16] = *(_OWORD *)(a1 + i + 32);
    *(_OWORD *)&v27[32] = v8;
    v9 = *(_OWORD *)(a1 + i + 80);
    *(_OWORD *)&v27[48] = *(_OWORD *)(a1 + i + 64);
    *(_OWORD *)&v27[64] = v9;
    v10 = *(_OWORD *)(a1 + i + 16);
    v26 = *(_OWORD *)(a1 + i);
    *(_OWORD *)v27 = v10;
    v11 = v26;
    v12 = v10;
    sub_23B9895CC((uint64_t)&v26);
    result = sub_23B9849D4(v11, *((uint64_t *)&v11 + 1), v12);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = v2[6] + 24 * result;
    *(_OWORD *)v15 = v11;
    *(_BYTE *)(v15 + 16) = v12;
    v16 = v2[7] + 136 * result;
    *(_OWORD *)v16 = *(_OWORD *)&v27[8];
    v17 = *(_OWORD *)&v27[24];
    v18 = *(_OWORD *)&v27[40];
    v19 = *(_OWORD *)&v27[72];
    *(_OWORD *)(v16 + 48) = *(_OWORD *)&v27[56];
    *(_OWORD *)(v16 + 64) = v19;
    *(_OWORD *)(v16 + 16) = v17;
    *(_OWORD *)(v16 + 32) = v18;
    v20 = *(_OWORD *)&v27[88];
    v21 = *(_OWORD *)&v27[104];
    v22 = *(_OWORD *)&v27[120];
    *(_QWORD *)(v16 + 128) = *(_QWORD *)&v27[136];
    *(_OWORD *)(v16 + 96) = v21;
    *(_OWORD *)(v16 + 112) = v22;
    *(_OWORD *)(v16 + 80) = v20;
    v23 = v2[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_12;
    v2[2] = v25;
    if (!v4)
    {
      swift_release();
      goto LABEL_10;
    }
    --v4;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_23B97E824(uint64_t a1)
{
  return sub_23B97EACC(a1, &qword_256A59390);
}

unint64_t sub_23B97E830(uint64_t a1)
{
  return sub_23B97EDEC(a1, &qword_256A59370);
}

unint64_t sub_23B97E83C(uint64_t a1)
{
  return sub_23B97EDEC(a1, &qword_256A59388);
}

unint64_t sub_23B97E848(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59430);
  v2 = sub_23BB8B000();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23B989EFC(v6, (uint64_t)&v13, &qword_256A59438);
    v7 = v13;
    result = sub_23B984C24(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_23B989490(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97E974(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59358);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 56);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 3);
    v6 = (uint64_t)*(v4 - 2);
    v7 = *((_BYTE *)v4 - 8);
    v8 = *v4;
    sub_23B9894D4();
    v9 = v8;
    result = sub_23B984A70(v5, v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = v2[6] + 24 * result;
    *(_QWORD *)v12 = v5;
    *(_QWORD *)(v12 + 8) = v6;
    *(_BYTE *)(v12 + 16) = v7;
    *(_QWORD *)(v2[7] + 8 * result) = v9;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97EAB4(uint64_t a1)
{
  return sub_23B97EDEC(a1, &qword_256A59360);
}

unint64_t sub_23B97EAC0(uint64_t a1)
{
  return sub_23B97EACC(a1, &qword_256A59340);
}

unint64_t sub_23B97EACC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23BB8B000();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (_QWORD *)(a1 + 56);
  while (1)
  {
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v8 = *((_BYTE *)v5 - 8);
    v9 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_23B9849D4(v6, v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = v3[6] + 24 * result;
    *(_QWORD *)v12 = v6;
    *(_QWORD *)(v12 + 8) = v7;
    *(_BYTE *)(v12 + 16) = v8;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 4;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97EC00(uint64_t a1)
{
  return sub_23B97EC24(a1, &qword_256A59348, &qword_256A59338, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_23B9849D4, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
}

unint64_t sub_23B97EC24(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  unint64_t result;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t (*v35)(_QWORD, uint64_t, _QWORD);

  v34 = a2;
  v35 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_23BB8B000();
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  v33 = &v12[*(int *)(v8 + 48)];
  v16 = v13 + 64;
  v17 = *(unsigned __int8 *)(v9 + 80);
  v31[1] = a1;
  v18 = a1 + ((v17 + 32) & ~v17);
  v32 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_23B989EFC(v18, (uint64_t)v12, v34);
    v20 = *(_QWORD *)v12;
    v19 = *((_QWORD *)v12 + 1);
    v21 = v12[16];
    result = v35(*(_QWORD *)v12, v19, v21);
    if ((v23 & 1) != 0)
      break;
    v24 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = v14[6] + 24 * result;
    *(_QWORD *)v25 = v20;
    *(_QWORD *)(v25 + 8) = v19;
    *(_BYTE *)(v25 + 16) = v21;
    v26 = v14[7];
    v27 = a5(0);
    result = sub_23B989CA4((uint64_t)v33, v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v24, a5);
    v28 = v14[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_11;
    v14[2] = v30;
    v18 += v32;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97EDE0(uint64_t a1)
{
  return sub_23B97EDEC(a1, &qword_256A59350);
}

unint64_t sub_23B97EDEC(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_23BB8B000();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23B984884(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23B97EF00(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592C0);
  v2 = sub_23BB8B000();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23B989EFC(v6, (uint64_t)&v15, &qword_256A592C8);
    v7 = v15;
    v8 = v16;
    result = sub_23B984B34(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23B989490(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23B97F034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v23 = v0;
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v7 = v0 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  swift_retain_n();
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABEC();
  if (os_log_type_enabled(v8, v9))
  {
    v19 = v2;
    v10 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v22 = v17;
    v18 = v3;
    *(_DWORD *)v10 = 136315138;
    v16 = v10 + 4;
    swift_getKeyPath();
    v21 = v1;
    sub_23BB88A20();
    swift_release();
    swift_beginAccess();
    type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    sub_23B9892EC();
    swift_bridgeObjectRetain();
    v11 = sub_23BB8A6C4();
    v13 = v12;
    swift_bridgeObjectRelease();
    v20 = sub_23BB7B69C(v11, v13, &v22);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v8, v9, "MapsDirectionsProvider: data - %s", v10, 0xCu);
    v14 = v17;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t MapsDirectionsProvider.data.getter()
{
  return sub_23B97F670();
}

uint64_t sub_23B97F334@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23B97F710(a1, &OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data, a2);
}

uint64_t sub_23B97F34C()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B97F408(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_23B97F034();
}

id sub_23B97F480@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v3 = *(void **)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin);
  *a1 = v3;
  return v3;
}

id sub_23B97F514@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = *(void **)(v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin);
  *a2 = v4;
  return v4;
}

void sub_23B97F5A8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  v2 = v1;
  sub_23BB88A14();
  swift_release();

}

uint64_t sub_23B97F65C()
{
  return sub_23B97F670();
}

uint64_t sub_23B97F670()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B97F710@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B97F7C4()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B97F87C()
{
  return sub_23B97F670();
}

uint64_t sub_23B97F890()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B97F948(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v4;

  v4 = (_QWORD *)(a1 + *a3);
  swift_beginAccess();
  *v4 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t MapsDirectionsProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  MapsDirectionsProvider.init(dependencies:)(a1);
  return v2;
}

uint64_t MapsDirectionsProvider.init(dependencies:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  __int128 v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;

  v3 = sub_23BB891C4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v7 = MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v27 - v10;
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(int *)(v14 + 36);
  *(_QWORD *)&v16[v17] = sub_23B97EDEC(MEMORY[0x24BEE4AF8], &qword_256A593C8);
  *(_QWORD *)&v16[v12[10]] = MEMORY[0x24BEE4B08];
  v16[v12[11]] = 0;
  sub_23BB891B8();
  v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v19 = *a1;
  v27 = a1[1];
  v28 = v19;
  v18(v16, v11, v3);
  v20 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v20(v8, v11, v3);
  v21 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v22 = swift_allocObject();
  v20((char *)(v22 + v21), v8, v3);
  v23 = (uint64_t (**)())&v16[v12[12]];
  *v23 = sub_23B988EB4;
  v23[1] = (uint64_t (*)())v22;
  sub_23B988EE0((uint64_t)v16, v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage);
  v24 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data) = sub_23B97D794(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentDestinationBySubscription) = sub_23B97D934(v24);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__directionsQueryTaskBySubscription) = sub_23B97E0A0(v24, &qword_256A593D0);
  sub_23BB88A44();
  v25 = v27;
  *(_OWORD *)(v1 + 16) = v28;
  *(_OWORD *)(v1 + 32) = v25;
  return v1;
}

void MapsDirectionsProvider.inputValueDidChange(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char v8;
  id v9;
  void *v10[3];

  v2 = *(void **)a1;
  v1 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    v10[0] = *(void **)a1;
    v10[1] = v1;
    v10[2] = v3;
    swift_bridgeObjectRetain();
    v4 = v3;
    sub_23B980490((uint64_t *)v10);
    v5 = v2;
    v6 = (uint64_t)v1;
    v7 = v3;
    v8 = 1;
  }
  else
  {
    v10[0] = *(void **)a1;
    v9 = v2;
    sub_23B97FCBC(v10);
    v5 = v2;
    v6 = (uint64_t)v1;
    v7 = v3;
    v8 = 0;
  }
  sub_23B988F28(v5, v6, v7, v8);
}

uint64_t sub_23B97FCBC(void **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(_QWORD);
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t KeyPath;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t result;
  int64_t v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  NSObject *v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t v64;
  int64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  int64_t v70;
  unint64_t v71;
  int64_t v72;
  uint64_t v73;
  void (*v74)(_QWORD);
  void (*v75)(void);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v73 - v11;
  v13 = *a1;
  swift_getKeyPath();
  v14 = v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar;
  v83 = v2;
  v77 = sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  v79 = v14;
  sub_23BB88A20();
  swift_release();
  v15 = v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  v16 = *(void (**)(void))(v5 + 16);
  v78 = v15;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v12, v15, v4);
  v17 = v13;
  v18 = sub_23BB891AC();
  v19 = sub_23BB8ABC8();
  v20 = os_log_type_enabled(v18, v19);
  v75 = v16;
  v76 = v9;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v81 = v22;
    *(_DWORD *)v21 = 136315394;
    v80 = sub_23BB7B69C(0xD000000000000010, 0x800000023BB995F0, &v81);
    sub_23BB8ACB8();
    *(_WORD *)(v21 + 12) = 2080;
    v80 = (uint64_t)v17;
    v23 = v17;
    v73 = v4;
    v24 = v23;
    v25 = sub_23BB8A7D8();
    v74 = (void (*)(_QWORD))v5;
    v80 = sub_23BB7B69C(v25, v26, &v81);
    sub_23BB8ACB8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v18, v19, "%s - New Origin %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v22, -1, -1);
    MEMORY[0x24260D9B4](v21, -1, -1);

    v27 = (void (*)(_QWORD))*((_QWORD *)v74 + 1);
    v28 = v12;
    v29 = v73;
  }
  else
  {

    v27 = *(void (**)(_QWORD))(v5 + 8);
    v28 = v12;
    v29 = v4;
  }
  v74 = v27;
  v27(v28);
  swift_getKeyPath();
  v81 = v2;
  sub_23BB88A20();
  swift_release();
  v30 = *(void **)(v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v32);
  *(&v73 - 2) = v2;
  *(&v73 - 1) = (uint64_t)v17;
  v81 = v2;
  v33 = v30;
  v34 = v17;
  sub_23BB88A14();
  swift_release();

  swift_getKeyPath();
  if (!v30)
  {
    v81 = v2;
    sub_23BB88A20();
    swift_release();
    v52 = v29;
    v53 = v76;
    v75();
    v54 = sub_23BB891AC();
    v55 = sub_23BB8ABEC();
    if (os_log_type_enabled(v54, (os_log_type_t)v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v81 = v57;
      *(_DWORD *)v56 = 136315138;
      v80 = sub_23BB7B69C(0xD000000000000010, 0x800000023BB995F0, &v81);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v54, (os_log_type_t)v55, "%s - Triggering refresh due no previousOrigin", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v57, -1, -1);
      MEMORY[0x24260D9B4](v56, -1, -1);
    }

    ((void (*)(char *, uint64_t))v74)(v53, v52);
    swift_getKeyPath();
    v81 = v2;
    sub_23BB88A20();
    swift_release();
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
    v59 = *(_QWORD *)(v78 + *(int *)(v58 + 40));
    v60 = v59 + 56;
    v61 = 1 << *(_BYTE *)(v59 + 32);
    v62 = -1;
    if (v61 < 64)
      v62 = ~(-1 << v61);
    v63 = v62 & *(_QWORD *)(v59 + 56);
    v64 = (unint64_t)(v61 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v65 = 0;
    while (1)
    {
      if (v63)
      {
        v66 = __clz(__rbit64(v63));
        v63 &= v63 - 1;
        v67 = v66 | (v65 << 6);
      }
      else
      {
        v70 = v65 + 1;
        if (__OFADD__(v65, 1))
        {
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        if (v70 >= v64)
          goto LABEL_49;
        v71 = *(_QWORD *)(v60 + 8 * v70);
        ++v65;
        if (!v71)
        {
          v65 = v70 + 1;
          if (v70 + 1 >= v64)
            goto LABEL_49;
          v71 = *(_QWORD *)(v60 + 8 * v65);
          if (!v71)
          {
            v65 = v70 + 2;
            if (v70 + 2 >= v64)
              goto LABEL_49;
            v71 = *(_QWORD *)(v60 + 8 * v65);
            if (!v71)
            {
              v72 = v70 + 3;
              if (v72 >= v64)
                goto LABEL_49;
              v71 = *(_QWORD *)(v60 + 8 * v72);
              if (!v71)
              {
                while (1)
                {
                  v65 = v72 + 1;
                  if (__OFADD__(v72, 1))
                    goto LABEL_53;
                  if (v65 >= v64)
                    break;
                  v71 = *(_QWORD *)(v60 + 8 * v65);
                  ++v72;
                  if (v71)
                    goto LABEL_48;
                }
LABEL_49:

                return swift_release();
              }
              v65 = v72;
            }
          }
        }
LABEL_48:
        v63 = (v71 - 1) & v71;
        v67 = __clz(__rbit64(v71)) + (v65 << 6);
      }
      v68 = (uint64_t *)(*(_QWORD *)(v59 + 48) + 16 * v67);
      v69 = v68[1];
      v81 = *v68;
      v82 = v69;
      swift_bridgeObjectRetain();
      sub_23B9808F0(&v81);
      result = swift_bridgeObjectRelease();
    }
  }
  v81 = v2;
  sub_23BB88A20();
  swift_release();
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
  v36 = *(_QWORD *)(v78 + *(int *)(v35 + 40));
  v37 = v36 + 56;
  v38 = 1 << *(_BYTE *)(v36 + 32);
  v39 = -1;
  if (v38 < 64)
    v39 = ~(-1 << v38);
  v40 = v39 & *(_QWORD *)(v36 + 56);
  v41 = (unint64_t)(v38 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v43 = 0;
  while (1)
  {
    if (v40)
    {
      v44 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      v45 = v44 | (v43 << 6);
      goto LABEL_25;
    }
    v46 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v46 >= v41)
      goto LABEL_49;
    v47 = *(_QWORD *)(v37 + 8 * v46);
    ++v43;
    if (!v47)
    {
      v43 = v46 + 1;
      if (v46 + 1 >= v41)
        goto LABEL_49;
      v47 = *(_QWORD *)(v37 + 8 * v43);
      if (!v47)
      {
        v43 = v46 + 2;
        if (v46 + 2 >= v41)
          goto LABEL_49;
        v47 = *(_QWORD *)(v37 + 8 * v43);
        if (!v47)
          break;
      }
    }
LABEL_24:
    v40 = (v47 - 1) & v47;
    v45 = __clz(__rbit64(v47)) + (v43 << 6);
LABEL_25:
    v49 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * v45);
    v51 = *v49;
    v50 = v49[1];
    v81 = *v49;
    v82 = v50;
    swift_bridgeObjectRetain();
    if ((sub_23B981AEC(&v81) & 1) != 0)
    {
      v81 = v51;
      v82 = v50;
      sub_23B9808F0(&v81);
    }
    result = swift_bridgeObjectRelease();
  }
  v48 = v46 + 3;
  if (v48 >= v41)
    goto LABEL_49;
  v47 = *(_QWORD *)(v37 + 8 * v48);
  if (v47)
  {
    v43 = v48;
    goto LABEL_24;
  }
  while (1)
  {
    v43 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v43 >= v41)
      goto LABEL_49;
    v47 = *(_QWORD *)(v37 + 8 * v43);
    ++v48;
    if (v47)
      goto LABEL_24;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_23B980490(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  uint64_t result;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v9 = a1[1];
  v11 = (void *)a1[2];
  swift_getKeyPath();
  v12 = v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar;
  v39 = v2;
  v34 = sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v13 = v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  v33 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v13, v4);
  swift_bridgeObjectRetain_n();
  v14 = v11;
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABC8();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v32 = v12;
    v18 = v17;
    v30 = swift_slowAlloc();
    v35 = v30;
    *(_DWORD *)v18 = 136315394;
    v31 = v4;
    v36 = sub_23BB7B69C(0xD000000000000015, 0x800000023BB99610, &v35);
    sub_23BB8ACB8();
    *(_WORD *)(v18 + 12) = 2080;
    v29[1] = v18 + 14;
    v36 = v10;
    v37 = v9;
    v38 = v14;
    swift_bridgeObjectRetain();
    v19 = v10;
    v20 = v14;
    v21 = sub_23BB8A7D8();
    v36 = sub_23BB7B69C(v21, v22, &v35);
    sub_23BB8ACB8();

    v10 = v19;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v15, v16, "%s - New Destination %s", (uint8_t *)v18, 0x16u);
    v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v23, -1, -1);
    MEMORY[0x24260D9B4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v31);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v4);
  }
  swift_getKeyPath();
  v36 = v2;
  swift_bridgeObjectRetain_n();
  v24 = v14;
  sub_23BB88A20();
  swift_release();
  v36 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentDestinationBySubscription);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v35 = *v25;
  *v25 = 0x8000000000000000;
  sub_23BAAE9E4(v10, v9, (uint64_t)v24, v10, v9, isUniquelyReferenced_nonNull_native);
  *v25 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v36 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v36 = v10;
  v37 = v9;
  swift_bridgeObjectRetain();
  v27 = sub_23B981AEC(&v36);
  result = swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
  {
    v36 = v10;
    v37 = v9;
    swift_bridgeObjectRetain();
    sub_23B9808F0(&v36);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B9808F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  void *v70;
  id v71;
  uint64_t *v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char **v76;
  void *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char **v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t, uint64_t);
  _QWORD *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char **v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t, uint64_t, _QWORD *);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  _QWORD *v150;
  uint64_t *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157[3];
  uint64_t v158;
  uint64_t v159[4];

  v2 = v1;
  v154 = sub_23BB891C4();
  v4 = *(_QWORD *)(v154 - 8);
  v6 = MEMORY[0x24BDAC7A8](v154, v5);
  v149 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v140 = (char *)&v132 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v144 = (char *)&v132 - v13;
  v137 = v14;
  MEMORY[0x24BDAC7A8](v12, v15);
  v142 = (char *)&v132 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v143 = (uint64_t)&v132 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v147 = *(_QWORD *)(v146 - 8);
  v21 = MEMORY[0x24BDAC7A8](v146, v20);
  v141 = (uint64_t)&v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v145 = (uint64_t)&v132 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v151 = (uint64_t *)((char *)&v132 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v27, v29);
  v148 = (uint64_t)&v132 - v30;
  v150 = (_QWORD *)type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v31 = *(v150 - 1);
  MEMORY[0x24BDAC7A8](v150, v32);
  v152 = (char *)&v132 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *a1;
  v34 = a1[1];
  swift_getKeyPath();
  v36 = (char *)(v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar);
  v159[3] = v2;
  v37 = sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v38 = v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  v39 = *(_QWORD *)(v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59148) + 40));
  swift_bridgeObjectRetain();
  v153 = v35;
  v40 = sub_23BA4C16C(v35, v34, v39);
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
  {
    v134 = v38;
    v135 = v4;
    swift_getKeyPath();
    v159[0] = v2;
    swift_bridgeObjectRetain();
    v41 = v37;
    v149 = v36;
    sub_23BB88A20();
    swift_release();
    v42 = v2;
    v43 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data);
    swift_beginAccess();
    v138 = (uint64_t)v43;
    v44 = *v43;
    if (*(_QWORD *)(v44 + 16))
    {
      swift_bridgeObjectRetain();
      v45 = sub_23B984884(v153, v34);
      v46 = v34;
      if ((v47 & 1) != 0)
      {
        v48 = v148;
        sub_23B989CE8(*(_QWORD *)(v44 + 56) + *(_QWORD *)(v31 + 72) * v45, v148, type metadata accessor for MapsDirectionsProvider.DirectionsState);
        v49 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v31 + 56);
        v50 = v48;
        v51 = 0;
      }
      else
      {
        v49 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v31 + 56);
        v48 = v148;
        v50 = v148;
        v51 = 1;
      }
      v63 = v150;
      v136 = v49;
      v49(v50, v51, 1, v150);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v61 = (uint64_t)v152;
      v62 = v41;
    }
    else
    {
      v48 = v148;
      v60 = v150;
      v136 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v31 + 56);
      v136(v148, 1, 1, v150);
      swift_bridgeObjectRelease();
      v61 = (uint64_t)v152;
      v62 = v37;
      v46 = v34;
      v63 = v60;
    }
    v64 = v153;
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v31 + 48))(v48, 1, v63) == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v147 + 56))(v61, 1, 1, v146);
      v65 = v61 + *((int *)v63 + 5);
      v66 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v65, 1, 1, v66);
      *(_BYTE *)(v61 + *((int *)v63 + 6)) = 0;
      sub_23B989D60(v48, &qword_256A593D8);
    }
    else
    {
      sub_23B989CA4(v48, v61, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    }
    v67 = v42;
    *(_BYTE *)(v61 + *((int *)v63 + 6)) = 1;
    v68 = v63;
    v69 = (uint64_t)v151;
    sub_23B989CE8(v61, (uint64_t)v151, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    v136(v69, 0, 1, v68);
    swift_getKeyPath();
    v158 = v42;
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v158 = v42;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    sub_23BB4ED4C(v69, v64, v46);
    swift_endAccess();
    sub_23B97F034();
    v158 = v42;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    swift_getKeyPath();
    v158 = v42;
    sub_23BB88A20();
    swift_release();
    v70 = *(void **)(v42 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin);
    if (!v70)
    {
      swift_getKeyPath();
      v158 = v42;
      sub_23BB88A20();
      swift_release();
      v93 = v135;
      v94 = v140;
      v95 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v140, v134, v154);
      v96 = sub_23BB891AC();
      v97 = sub_23BB8ABEC();
      if (os_log_type_enabled(v96, v97))
      {
        v98 = (uint8_t *)swift_slowAlloc();
        v99 = swift_slowAlloc();
        v158 = v99;
        *(_DWORD *)v98 = 136315138;
        v157[0] = sub_23BB7B69C(0xD000000000000017, 0x800000023BB99570, &v158);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v96, v97, "%s - Trigger evaluation without origin", v98, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v99, -1, -1);
        MEMORY[0x24260D9B4](v98, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
      v100 = (uint64_t)v152;
      return sub_23B989D9C(v100, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    }
    swift_getKeyPath();
    v158 = v42;
    swift_bridgeObjectRetain();
    v71 = v70;
    sub_23BB88A20();
    swift_release();
    v72 = (uint64_t *)(v42 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentDestinationBySubscription);
    swift_beginAccess();
    v73 = *v72;
    if (*(_QWORD *)(v73 + 16))
    {
      swift_bridgeObjectRetain();
      v74 = sub_23B984884(v64, v46);
      if ((v75 & 1) != 0)
      {
        v76 = (char **)(*(_QWORD *)(v73 + 56) + 24 * v74);
        v77 = v71;
        v79 = *v76;
        v78 = (uint64_t)v76[1];
        v80 = v76[2];
        swift_bridgeObjectRetain();
        v81 = v80;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v82 = v145;
        sub_23BB88978();
        v83 = v146;
        *(_QWORD *)(v82 + *(int *)(v146 + 20)) = v77;
        v84 = (char **)(v82 + *(int *)(v83 + 24));
        v144 = v79;
        *v84 = v79;
        v84[1] = (char *)v78;
        v84[2] = v81;
        v85 = v77;
        v148 = v78;
        swift_bridgeObjectRetain();
        v140 = v81;
        sub_23B989D60(v61, &qword_256A593E0);
        sub_23B989CE8(v82, v61, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v147 + 56))(v61, 0, 1, v83);
        v86 = v61;
        v87 = (uint64_t)v151;
        sub_23B989CE8(v86, (uint64_t)v151, type metadata accessor for MapsDirectionsProvider.DirectionsState);
        v136(v87, 0, 1, v150);
        swift_getKeyPath();
        v157[0] = v67;
        swift_bridgeObjectRetain();
        sub_23BB88A20();
        swift_release();
        v157[0] = v67;
        swift_getKeyPath();
        sub_23BB88A38();
        v88 = v153;
        swift_release();
        swift_beginAccess();
        sub_23BB4ED4C(v87, v88, v46);
        swift_endAccess();
        sub_23B97F034();
        v157[0] = v67;
        swift_getKeyPath();
        sub_23BB88A2C();
        swift_release();
        swift_getKeyPath();
        v157[0] = v67;
        swift_bridgeObjectRetain();
        sub_23BB88A20();
        swift_release();
        v89 = v67 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__directionsQueryTaskBySubscription;
        swift_beginAccess();
        v90 = *(_QWORD *)(*(_QWORD *)v89 + 16);
        v151 = (uint64_t *)v89;
        v133 = v85;
        if (v90)
        {
          swift_bridgeObjectRetain();
          sub_23B984884(v88, v46);
          v91 = v137;
          if ((v92 & 1) != 0)
          {
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23BB8AA78();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v91 = v137;
        }
        v109 = sub_23BB8AA18();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v143, 1, 1, v109);
        v138 = swift_allocObject();
        swift_weakInit();
        swift_getKeyPath();
        v156 = v67;
        swift_bridgeObjectRetain();
        sub_23BB88A20();
        swift_release();
        v110 = v135;
        v111 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
        v146 = v62;
        v111(v142, v134, v154);
        sub_23B989CE8(v145, v141, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
        sub_23BB8A9F4();
        swift_bridgeObjectRetain();
        v112 = v133;
        v150 = v112;
        swift_bridgeObjectRetain();
        v140 = v140;
        swift_retain();
        v113 = sub_23BB8A9E8();
        v114 = (*(unsigned __int8 *)(v110 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
        v115 = (v91 + v114 + 7) & 0xFFFFFFFFFFFFFFF8;
        v116 = (v115 + 15) & 0xFFFFFFFFFFFFFFF8;
        v117 = v46;
        v132 = v46;
        v118 = (v116 + 31) & 0xFFFFFFFFFFFFFFF8;
        v119 = (*(unsigned __int8 *)(v147 + 80) + v118 + 16) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
        v120 = (char *)swift_allocObject();
        v147 = v67;
        v121 = (uint64_t)v120;
        v122 = MEMORY[0x24BEE6930];
        *((_QWORD *)v120 + 2) = v113;
        *((_QWORD *)v120 + 3) = v122;
        *((_QWORD *)v120 + 4) = v138;
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(&v120[v114], v142, v154);
        *(_QWORD *)(v121 + v115) = v112;
        v123 = (char **)(v121 + v116);
        v124 = v148;
        *v123 = v144;
        v123[1] = (char *)v124;
        v125 = v140;
        v123[2] = v140;
        v126 = (_QWORD *)(v121 + v118);
        v127 = v153;
        *v126 = v153;
        v126[1] = v117;
        sub_23B989CA4(v141, v121 + v119, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
        swift_release();
        v128 = sub_23B989F54(v143, (uint64_t)&unk_256A593F0, v121);
        swift_getKeyPath();
        v129 = v147;
        v156 = v147;
        sub_23BB88A20();
        swift_release();
        v156 = v129;
        swift_getKeyPath();
        sub_23BB88A38();
        swift_release();
        v130 = v151;
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v155 = *v130;
        *v130 = 0x8000000000000000;
        sub_23BAAE880(v128, v127, v132, isUniquelyReferenced_nonNull_native);
        *v130 = v155;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        v156 = v129;
        swift_getKeyPath();
        sub_23BB88A2C();

        swift_bridgeObjectRelease();
        swift_release();
        sub_23B989D9C(v145, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
        v100 = (uint64_t)v152;
        return sub_23B989D9C(v100, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v101 = v154;
    v102 = v135;
    v103 = v134;
    swift_getKeyPath();
    v157[0] = v67;
    sub_23BB88A20();
    swift_release();
    v104 = v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v144, v103, v101);
    v105 = sub_23BB891AC();
    v106 = sub_23BB8ABEC();
    if (os_log_type_enabled(v105, v106))
    {
      v107 = (uint8_t *)swift_slowAlloc();
      v108 = swift_slowAlloc();
      v157[0] = v108;
      *(_DWORD *)v107 = 136315138;
      v156 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB99570, v157);
      v61 = (uint64_t)v152;
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v105, v106, "%s - Trigger evaluation without destination", v107, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v108, -1, -1);
      MEMORY[0x24260D9B4](v107, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v101);
    v100 = v61;
    return sub_23B989D9C(v100, type metadata accessor for MapsDirectionsProvider.DirectionsState);
  }
  swift_getKeyPath();
  v159[0] = v2;
  sub_23BB88A20();
  swift_release();
  v52 = v149;
  v53 = v38;
  v54 = v154;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v149, v53, v154);
  v55 = sub_23BB891AC();
  v56 = sub_23BB8ABC8();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    v159[0] = v58;
    *(_DWORD *)v57 = 136315138;
    v158 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB99570, v159);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v55, v56, "%s - Skipping new input value since it's not part of subscriptions", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v58, -1, -1);
    MEMORY[0x24260D9B4](v57, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v52, v54);
}

uint64_t sub_23B981AEC(uint64_t *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void *v68;
  char v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  NSObject *v97;
  os_log_type_t v98;
  _BOOL4 v99;
  char *v100;
  uint8_t *v101;
  char *v102;
  uint64_t v103;
  id v104;
  char *v105;
  id v106;
  char *v107;
  id v108;
  char *v109;
  char v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  id v128[3];
  char *v129;
  char *v130;
  char *v131;

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v125 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v126 = (char *)&v111 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v118 = (char *)&v111 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v112 = (char *)&v111 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
  MEMORY[0x24BDAC7A8](v17, v18);
  v113 = (uint64_t)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v121 = (char *)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v24);
  v115 = (uint64_t)&v111 - v25;
  v117 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v124 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117, v26);
  v114 = (uint64_t)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
  MEMORY[0x24BDAC7A8](v28, v29);
  v119 = (uint64_t)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v31 = *(_QWORD *)(v120 - 8);
  v33 = MEMORY[0x24BDAC7A8](v120, v32);
  v116 = (uint64_t)&v111 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v122 = (uint64_t)&v111 - v36;
  v37 = *a1;
  v38 = a1[1];
  swift_getKeyPath();
  v131 = v1;
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v39 = *(void **)&v1[OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin];
  if (!v39)
  {
    swift_getKeyPath();
    v131 = v2;
    sub_23BB88A20();
    swift_release();
    v55 = &v2[OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage];
    swift_beginAccess();
    v56 = v125;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v125, v55, v4);
    v57 = sub_23BB891AC();
    v58 = sub_23BB8ABEC();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v130 = (char *)v60;
      *(_DWORD *)v59 = 136315138;
      v128[0] = (id)sub_23BB7B69C(0xD00000000000001CLL, 0x800000023BB99590, (uint64_t *)&v130);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v57, v58, "%s - Trigger evaluation without origin", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v60, -1, -1);
      MEMORY[0x24260D9B4](v59, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v56, v4);
    goto LABEL_16;
  }
  v40 = v5;
  v123 = v4;
  swift_getKeyPath();
  v131 = v2;
  v125 = v39;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v41 = &v2[OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentDestinationBySubscription];
  swift_beginAccess();
  v42 = *(_QWORD *)v41;
  if (!*(_QWORD *)(v42 + 16))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    v61 = v123;
    v62 = v125;
    v63 = v126;
    swift_getKeyPath();
    v130 = v2;
    sub_23BB88A20();
    swift_release();
    v64 = &v2[OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v63, v64, v61);
    v65 = sub_23BB891AC();
    v66 = sub_23BB8ABEC();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = (void *)swift_slowAlloc();
      v128[0] = v68;
      *(_DWORD *)v67 = 136315138;
      v129 = (char *)sub_23BB7B69C(0xD00000000000001CLL, 0x800000023BB99590, (uint64_t *)v128);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v65, v66, "%s - Trigger evaluation without destination", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v68, -1, -1);
      MEMORY[0x24260D9B4](v67, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v63, v61);
LABEL_16:
    v69 = 0;
    return v69 & 1;
  }
  swift_bridgeObjectRetain();
  v43 = sub_23B984884(v37, v38);
  if ((v44 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v45 = *(_QWORD *)(v42 + 56) + 24 * v43;
  v46 = *(void **)(v45 + 16);
  v111 = *(_QWORD *)(v45 + 8);
  swift_bridgeObjectRetain();
  v126 = v46;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v130 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v47 = &v2[OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data];
  swift_beginAccess();
  v48 = *(_QWORD *)v47;
  if (*(_QWORD *)(v48 + 16))
  {
    swift_bridgeObjectRetain();
    v49 = sub_23B984884(v37, v38);
    if ((v50 & 1) != 0)
    {
      v51 = v119;
      sub_23B989CE8(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v31 + 72) * v49, v119, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v53 = v51;
      v54 = 0;
    }
    else
    {
      v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v51 = v119;
      v53 = v119;
      v54 = 1;
    }
    v71 = v120;
    v52(v53, v54, 1, v120);
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = v119;
    v71 = v120;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v119, 1, 1, v120);
  }
  swift_bridgeObjectRelease();
  v72 = (uint64_t)v121;
  v73 = v124;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v51, 1, v71) == 1)
  {
    sub_23B989D60(v51, &qword_256A593D8);
    swift_getKeyPath();
    v128[0] = v2;
    sub_23BB88A20();
    swift_release();
    v74 = &v2[OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage];
    swift_beginAccess();
    v75 = v118;
    v76 = v123;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v118, v74, v123);
    v77 = sub_23BB891AC();
    v78 = sub_23BB8ABEC();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = (char *)swift_slowAlloc();
      v129 = v80;
      *(_DWORD *)v79 = 136315138;
      v127 = sub_23BB7B69C(0xD00000000000001CLL, 0x800000023BB99590, (uint64_t *)&v129);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v77, v78, "%s - Trigger evaluation without state", v79, 0xCu);
      v69 = 1;
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v80, -1, -1);
      MEMORY[0x24260D9B4](v79, -1, -1);

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v75, v76);
    }
    else
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v75, v76);
      v69 = 1;
    }
    return v69 & 1;
  }
  v81 = v122;
  sub_23B989CA4(v51, v122, type metadata accessor for MapsDirectionsProvider.DirectionsState);
  sub_23B989EFC(v81, v72, &qword_256A593E0);
  v82 = v81;
  v83 = v116;
  sub_23B989CE8(v82, v116, type metadata accessor for MapsDirectionsProvider.DirectionsState);
  v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  v85 = v117;
  if (v84(v72, 1, v117) != 1)
  {
    sub_23B989D9C(v83, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    v92 = v115;
    sub_23B989CA4(v72, v115, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v92, 0, 1, v85);
LABEL_33:
    v103 = v114;
    sub_23B989CA4(v92, v114, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    v128[0] = *(id *)(v103 + *(int *)(v85 + 20));
    v104 = v128[0];
    v129 = v125;
    v105 = v125;
    v106 = v104;
    LOBYTE(v104) = sub_23B982940(v128, &v129, (uint64_t)v2);

    v128[0] = *(id *)(v103 + *(int *)(v85 + 24) + 16);
    v107 = v126;
    v129 = v126;
    v108 = v128[0];
    v109 = v107;
    v110 = sub_23B982940(v128, &v129, (uint64_t)v2);

    swift_bridgeObjectRelease();
    sub_23B989D9C(v103, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    sub_23B989D9C(v122, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    v69 = v104 | v110;
    return v69 & 1;
  }
  v86 = v83 + *(int *)(v71 + 20);
  v87 = v83;
  v88 = v113;
  sub_23B989EFC(v86, v113, &qword_256A59400);
  sub_23B989D9C(v87, type metadata accessor for MapsDirectionsProvider.DirectionsState);
  v89 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89) == 1)
  {
    sub_23B989D60(v88, &qword_256A59400);
    v90 = 1;
    v91 = v123;
    v92 = v115;
  }
  else
  {
    v93 = v88;
    v94 = v88;
    v92 = v115;
    sub_23B989CE8(v93, v115, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    sub_23B989D9C(v94, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
    v90 = 0;
    v91 = v123;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v92, v90, 1, v85);
  sub_23B989D60(v72, &qword_256A593E0);
  if (v84(v92, 1, v85) != 1)
    goto LABEL_33;
  sub_23B989D60(v92, &qword_256A593E0);
  swift_getKeyPath();
  v128[0] = v2;
  sub_23BB88A20();
  swift_release();
  v95 = &v2[OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage];
  swift_beginAccess();
  v96 = v112;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v112, v95, v91);
  v97 = sub_23BB891AC();
  v98 = sub_23BB8ABEC();
  v99 = os_log_type_enabled(v97, v98);
  v100 = v125;
  if (v99)
  {
    v101 = (uint8_t *)swift_slowAlloc();
    v102 = (char *)swift_slowAlloc();
    v129 = v102;
    *(_DWORD *)v101 = 136315138;
    v127 = sub_23BB7B69C(0xD00000000000001CLL, 0x800000023BB99590, (uint64_t *)&v129);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v97, v98, "%s - Trigger evaluation without request/result", v101, 0xCu);
    v69 = 1;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v102, -1, -1);
    MEMORY[0x24260D9B4](v101, -1, -1);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v112, v91);
    sub_23B989D9C(v122, type metadata accessor for MapsDirectionsProvider.DirectionsState);
  }
  else
  {

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v96, v91);
    sub_23B989D9C(v122, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    v69 = 1;
  }
  return v69 & 1;
}

uint64_t sub_23B982940(id *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  id v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v6 = sub_23BB891C4();
  v7 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  v56 = v7;
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v50 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  v54 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v50 - v22;
  v25 = MEMORY[0x24BDAC7A8](v21, v24);
  v27 = (char *)&v50 - v26;
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v50 - v29;
  objc_msgSend(*a1, sel_distanceFromLocation_, *a2);
  v31 = objc_msgSend((id)objc_opt_self(), sel_meters);
  sub_23B97CD2C();
  v32 = sub_23BB88678();
  (*(void (**)(uint64_t))(a3 + 32))(v32);
  sub_23B989E1C(&qword_256A59410, MEMORY[0x24BDCB5C0]);
  v53 = v27;
  v33 = sub_23BB8A73C();
  swift_getKeyPath();
  if ((v33 & 1) != 0)
  {
    v59 = a3;
    sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
    sub_23BB88A20();
    swift_release();
    v34 = a3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v14, v34, v55);
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v23, v30, v15);
    v35 = sub_23BB891AC();
    v36 = sub_23BB8ABEC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v58 = v51;
      *(_DWORD *)v37 = 136315394;
      v57 = sub_23BB7B69C(0xD000000000000036, 0x800000023BB995B0, &v58);
      sub_23BB8ACB8();
      *(_WORD *)(v37 + 12) = 2080;
      v52 = v33;
      sub_23B989E1C(&qword_256A59418, MEMORY[0x24BDCB5E0]);
      v38 = sub_23BB8B150();
      v57 = sub_23BB7B69C(v38, v39, &v58);
      LOBYTE(v33) = v52;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      v40 = *(void (**)(char *, uint64_t))(v54 + 8);
      v40(v23, v15);
      _os_log_impl(&dword_23B979000, v35, v36, "%s - Triggering refresh due to distanceFromLast: %s", (uint8_t *)v37, 0x16u);
      v41 = v51;
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v41, -1, -1);
      MEMORY[0x24260D9B4](v37, -1, -1);

    }
    else
    {

      v40 = *(void (**)(char *, uint64_t))(v54 + 8);
      v40(v23, v15);
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v55);
  }
  else
  {
    v59 = a3;
    sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
    sub_23BB88A20();
    swift_release();
    v42 = a3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v11, v42, v55);
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v19, v30, v15);
    v43 = sub_23BB891AC();
    v44 = sub_23BB8ABEC();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v58 = v51;
      *(_DWORD *)v45 = 136315394;
      v57 = sub_23BB7B69C(0xD000000000000036, 0x800000023BB995B0, &v58);
      v52 = v33;
      sub_23BB8ACB8();
      *(_WORD *)(v45 + 12) = 2080;
      sub_23B989E1C(&qword_256A59418, MEMORY[0x24BDCB5E0]);
      v46 = sub_23BB8B150();
      v57 = sub_23BB7B69C(v46, v47, &v58);
      LOBYTE(v33) = v52;
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      v40 = *(void (**)(char *, uint64_t))(v54 + 8);
      v40(v19, v15);
      _os_log_impl(&dword_23B979000, v43, v44, "%s - Not triggering refresh due to distanceFromLast: %s", (uint8_t *)v45, 0x16u);
      v48 = v51;
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v48, -1, -1);
      MEMORY[0x24260D9B4](v45, -1, -1);

    }
    else
    {

      v40 = *(void (**)(char *, uint64_t))(v54 + 8);
      v40(v19, v15);
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v55);
  }
  v40(v53, v15);
  v40(v30, v15);
  return v33 & 1;
}

uint64_t sub_23B982F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 264) = v14;
  *(_QWORD *)(v8 + 272) = v15;
  *(_OWORD *)(v8 + 248) = v13;
  *(_QWORD *)(v8 + 232) = a7;
  *(_QWORD *)(v8 + 240) = a8;
  *(_QWORD *)(v8 + 216) = a5;
  *(_QWORD *)(v8 + 224) = a6;
  *(_QWORD *)(v8 + 208) = a4;
  v9 = sub_23BB88984();
  *(_QWORD *)(v8 + 280) = v9;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  v10 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  *(_QWORD *)(v8 + 304) = v10;
  *(_QWORD *)(v8 + 312) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 320) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
  *(_QWORD *)(v8 + 328) = swift_task_alloc();
  *(_QWORD *)(v8 + 336) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  *(_QWORD *)(v8 + 344) = swift_task_alloc();
  *(_QWORD *)(v8 + 352) = swift_task_alloc();
  sub_23BB8A9F4();
  *(_QWORD *)(v8 + 360) = sub_23BB8A9E8();
  *(_QWORD *)(v8 + 368) = sub_23BB8A988();
  *(_QWORD *)(v8 + 376) = v11;
  return swift_task_switch();
}

uint64_t sub_23B9830DC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 384) = Strong;
  if (Strong)
  {
    v2 = *(_QWORD *)(v0 + 232);
    v3 = *(int **)(Strong + 16);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 224);
    *(_QWORD *)(v0 + 112) = v2;
    *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 240);
    v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 392) = v4;
    *v4 = v0;
    v4[1] = sub_23B983304;
    return v10(v0 + 64, v0 + 160, v0 + 112);
  }
  else
  {
    swift_release();
    v6 = sub_23BB891AC();
    v7 = sub_23BB8ABD4();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v11 = v9;
      *(_DWORD *)v8 = 136315138;
      *(_QWORD *)(v0 + 184) = sub_23BB7B69C(0xD000000000000017, 0x800000023BB99570, &v11);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v6, v7, "%s - No self", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v9, -1, -1);
      MEMORY[0x24260D9B4](v8, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B983304()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B983368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 384);
  swift_release();
  v50 = *(_BYTE *)(v0 + 64);
  v48 = *(_QWORD *)(v0 + 80);
  v49 = *(_QWORD *)(v0 + 72);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 152) = v1;
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data);
  swift_beginAccess();
  v3 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v4 = *(_QWORD *)(v0 + 256);
    v5 = *(_QWORD *)(v0 + 264);
    swift_bridgeObjectRetain();
    v6 = sub_23B984884(v4, v5);
    v7 = *(_QWORD *)(v0 + 336);
    if ((v8 & 1) != 0)
    {
      v9 = v6;
      v10 = *(_QWORD *)(v3 + 56);
      v11 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
      v12 = *(_QWORD *)(v11 - 8);
      sub_23B989CE8(v10 + *(_QWORD *)(v12 + 72) * v9, v7, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    else
    {
      v11 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 336);
    v11 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v13, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v0 + 336);
  type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v47 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v14, 1, v11)
    || (v15 = v14 + *(int *)(v11 + 20),
        (*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 312) + 48))(v15, 1, *(_QWORD *)(v0 + 304))))
  {
    sub_23B989D60(v14, &qword_256A593D8);
    v16 = 1;
  }
  else
  {
    v41 = *(_QWORD *)(v0 + 352);
    v42 = *(_QWORD *)(v0 + 320);
    v43 = *(_QWORD *)(v0 + 280);
    v44 = *(_QWORD *)(v0 + 288);
    sub_23B989CE8(v15, v42, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
    sub_23B989D60(v14, &qword_256A593D8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v41, v42, v43);
    sub_23B989D9C(v42, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    v16 = 0;
  }
  v18 = *(_QWORD *)(v0 + 344);
  v17 = *(_QWORD *)(v0 + 352);
  v19 = *(_QWORD *)(v0 + 280);
  v20 = *(_QWORD *)(v0 + 288);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v17, v16, 1, v19);
  sub_23B989EFC(v17, v18, (uint64_t *)&unk_256A5E6B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 344), (uint64_t *)&unk_256A5E6B0);
LABEL_16:
    v31 = *(_QWORD *)(v0 + 384);
    v46 = *(_QWORD *)(v0 + 352);
    v32 = *(_QWORD *)(v0 + 328);
    v33 = *(_QWORD *)(v0 + 304);
    v34 = *(_QWORD *)(v0 + 312);
    v35 = *(_QWORD *)(v0 + 264);
    v36 = *(_QWORD *)(v0 + 272);
    v45 = *(_QWORD *)(v0 + 256);
    v37 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v32, 1, 1, v37);
    v38 = v32 + *(int *)(v11 + 20);
    sub_23B989CE8(v36, v38, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    v39 = v38 + *(int *)(v33 + 20);
    *(_BYTE *)v39 = v50;
    *(_QWORD *)(v39 + 8) = v49;
    *(_QWORD *)(v39 + 16) = v48;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v33);
    *(_BYTE *)(v32 + *(int *)(v11 + 24)) = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v32, 0, 1, v11);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 168) = v31;
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    *(_QWORD *)(v0 + 176) = v31;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    sub_23BB4ED4C(v32, v45, v35);
    swift_endAccess();
    sub_23B97F034();
    *(_QWORD *)(v0 + 192) = v31;
    swift_getKeyPath();
    sub_23BB88A2C();
    swift_release();
    swift_release();
    v30 = v46;
    goto LABEL_17;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 32))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 280));
  if ((sub_23BB888DC() & 1) == 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
    goto LABEL_16;
  }
  v21 = sub_23BB891AC();
  v22 = sub_23BB8ABEC();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v0 + 352);
  v26 = *(_QWORD *)(v0 + 288);
  v25 = *(_QWORD *)(v0 + 296);
  v27 = *(_QWORD *)(v0 + 280);
  if (v23)
  {
    v52 = *(_QWORD *)(v0 + 280);
    v51 = *(_QWORD *)(v0 + 352);
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v53 = v29;
    *(_DWORD *)v28 = 136315138;
    *(_QWORD *)(v0 + 200) = sub_23BB7B69C(0xD000000000000017, 0x800000023BB99570, &v53);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v21, v22, "%s - Skipping due to this being an old request", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v29, -1, -1);
    MEMORY[0x24260D9B4](v28, -1, -1);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v52);
    v30 = v51;
  }
  else
  {

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    v30 = v24;
  }
LABEL_17:
  sub_23B989D60(v30, (uint64_t *)&unk_256A5E6B0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B983A0C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 400);
  swift_release();
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 400);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 136) = sub_23BB7B69C(0xD000000000000017, 0x800000023BB99570, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v10;
    sub_23BB8ACB8();
    *v8 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "%s - Error trying to fetch directions %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 400);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MapsDirectionsProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  char v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t i;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = v2;
  if ((a2 & 1) == 0)
  {
    v26 = a1;
    v47 = a1 + 56;
    v27 = 1 << *(_BYTE *)(a1 + 32);
    v28 = -1;
    if (v27 < 64)
      v28 = ~(-1 << v27);
    v29 = v28 & *(_QWORD *)(a1 + 56);
    v30 = (uint64_t *)(v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__directionsQueryTaskBySubscription);
    swift_bridgeObjectRetain();
    result = swift_beginAccess();
    v31 = 0;
    v49 = (unint64_t)(v27 + 63) >> 6;
    for (i = v26; ; v26 = i)
    {
      if (v29)
      {
        v32 = __clz(__rbit64(v29));
        v29 &= v29 - 1;
        v33 = v32 | (v31 << 6);
      }
      else
      {
        v34 = v31 + 1;
        if (__OFADD__(v31, 1))
        {
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        if (v34 >= v49)
          return swift_release();
        v35 = *(_QWORD *)(v47 + 8 * v34);
        ++v31;
        if (!v35)
        {
          v31 = v34 + 1;
          if (v34 + 1 >= v49)
            return swift_release();
          v35 = *(_QWORD *)(v47 + 8 * v31);
          if (!v35)
          {
            v31 = v34 + 2;
            if (v34 + 2 >= v49)
              return swift_release();
            v35 = *(_QWORD *)(v47 + 8 * v31);
            if (!v35)
            {
              v36 = v34 + 3;
              if (v36 >= v49)
                return swift_release();
              v35 = *(_QWORD *)(v47 + 8 * v36);
              if (!v35)
              {
                while (1)
                {
                  v31 = v36 + 1;
                  if (__OFADD__(v36, 1))
                    break;
                  if (v31 >= v49)
                    return swift_release();
                  v35 = *(_QWORD *)(v47 + 8 * v31);
                  ++v36;
                  if (v35)
                    goto LABEL_55;
                }
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
              v31 = v36;
            }
          }
        }
LABEL_55:
        v29 = (v35 - 1) & v35;
        v33 = __clz(__rbit64(v35)) + (v31 << 6);
      }
      v37 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * v33);
      v39 = *v37;
      v38 = v37[1];
      swift_getKeyPath();
      sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
      swift_bridgeObjectRetain_n();
      sub_23BB88A20();
      swift_release();
      if (*(_QWORD *)(*v30 + 16))
      {
        swift_bridgeObjectRetain();
        sub_23B984884(v39, v38);
        if ((v40 & 1) != 0)
        {
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23BB8AA78();
          swift_release();
          goto LABEL_62;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_62:
      swift_getKeyPath();
      sub_23BB88A20();
      swift_release();
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v41 = sub_23B984884(v39, v38);
      v43 = v42;
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v45 = *v30;
        v54 = *v30;
        *v30 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23B987A58(&qword_256A593D0);
          v45 = v54;
        }
        swift_bridgeObjectRelease();
        sub_23B985F88(v41, v45);
        *v30 = v45;
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_getKeyPath();
      sub_23BB88A2C();
      result = swift_release();
    }
  }
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__directionsQueryTaskBySubscription);
  swift_beginAccess();
  v5 = *v4;
  v46 = *v4 + 64;
  v6 = 1 << *(_BYTE *)(*v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(*v4 + 64);
  v48 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v50 = v5;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v52 = v10;
      v12 = v11 | (v10 << 6);
      goto LABEL_26;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v13 >= v48)
      return swift_release();
    v14 = *(_QWORD *)(v46 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v48)
        return swift_release();
      v14 = *(_QWORD *)(v46 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v48)
          return swift_release();
        v14 = *(_QWORD *)(v46 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 4;
          if (v10 + 4 >= v48)
            return swift_release();
          v14 = *(_QWORD *)(v46 + 8 * v15);
          if (!v14)
          {
            v15 = v10 + 5;
            if (v10 + 5 >= v48)
              return swift_release();
            v14 = *(_QWORD *)(v46 + 8 * v15);
            if (!v14)
              break;
          }
        }
      }
    }
LABEL_25:
    v8 = (v14 - 1) & v14;
    v52 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    v17 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v12);
    v18 = *v17;
    v19 = v17[1];
    swift_getKeyPath();
    swift_bridgeObjectRetain_n();
    sub_23BB88A20();
    swift_release();
    if (*(_QWORD *)(*v4 + 16))
    {
      swift_bridgeObjectRetain();
      sub_23B984884(v18, v19);
      if ((v20 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23BB8AA78();
        swift_release();
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_32:
    swift_getKeyPath();
    sub_23BB88A20();
    swift_release();
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v21 = sub_23B984884(v18, v19);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      v24 = swift_isUniquelyReferenced_nonNull_native();
      v25 = *v4;
      v53 = *v4;
      *v4 = 0x8000000000000000;
      if ((v24 & 1) == 0)
      {
        sub_23B987A58(&qword_256A593D0);
        v25 = v53;
      }
      swift_bridgeObjectRelease();
      sub_23B985F88(v21, v25);
      *v4 = v25;
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_getKeyPath();
    sub_23BB88A2C();
    result = swift_release();
    v5 = v50;
    v10 = v52;
  }
  v16 = v10 + 6;
  if (v10 + 6 >= v48)
    return swift_release();
  v14 = *(_QWORD *)(v46 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v48)
      return swift_release();
    v14 = *(_QWORD *)(v46 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_25;
  }
LABEL_70:
  __break(1u);
  return result;
}

uint64_t MapsDirectionsProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23B989D60(v0 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage, &qword_256A59148);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MapsDirectionsProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23B989D60(v0 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage, &qword_256A59148);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23B9845EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  return sub_23B989EFC(v3, a1, &qword_256A59148);
}

uint64_t sub_23B9846A4(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A14();
  swift_release();
  return sub_23B989D60(a1, &qword_256A59148);
}

void (*sub_23B984758(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = MapsDirectionsProvider.storage.modify(v2);
  return sub_23B98479C;
}

void sub_23B98479C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_23B9847D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data);
  swift_beginAccess();
  *a1 = *v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_23B984884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  v4 = sub_23BB8B270();
  return sub_23B984DC4(a1, a2, v4);
}

unint64_t sub_23B984904(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_23BB8B240();
  sub_23BB8B24C();
  v2 = sub_23BB8B270();
  return sub_23B984D08(v1, v2);
}

unint64_t sub_23B984960(double *a1)
{
  uint64_t v2;

  sub_23BB8B240();
  DeviceImageProvider.Subscription.hash(into:)();
  v2 = sub_23BB8B270();
  return sub_23B984EA4(a1, v2);
}

unint64_t sub_23B9849D4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6;

  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  sub_23BB8B24C();
  v6 = sub_23BB8B270();
  return sub_23B9852C4(a1, a2, a3, v6);
}

unint64_t sub_23B984A70(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6;

  sub_23BB8B240();
  sub_23BB8B24C();
  if ((a3 & 0x80) != 0)
  {
    sub_23BB8A808();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23B9894DC();
    sub_23BB8B24C();
  }
  v6 = sub_23BB8B270();
  return sub_23B985074(a1, a2, a3, v6);
}

unint64_t sub_23B984B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23BB8B240();
  sub_23BB8A808();
  v4 = sub_23BB8B270();
  return sub_23B984DC4(a1, a2, v4);
}

unint64_t sub_23B984B9C(uint64_t a1)
{
  uint64_t v2;

  sub_23BB8B240();
  sub_23BB889CC();
  sub_23B97D0C8(&qword_256A592F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BB8A718();
  v2 = sub_23BB8B270();
  return sub_23B9853A4(a1, v2);
}

unint64_t sub_23B984C24(uint64_t a1)
{
  uint64_t v2;

  sub_23BB8A7B4();
  sub_23BB8B240();
  sub_23BB8A808();
  v2 = sub_23BB8B270();
  swift_bridgeObjectRelease();
  return sub_23B9854B4(a1, v2);
}

unint64_t sub_23B984CA4(unsigned __int8 a1)
{
  uint64_t v2;

  sub_23BB8B240();
  sub_23BB8B24C();
  v2 = sub_23BB8B270();
  return sub_23B985628(a1, v2);
}

unint64_t sub_23B984D08(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23B984DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23BB8B1A4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23BB8B1A4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23B984EA4(double *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  double v17;
  int v18;
  BOOL v19;
  BOOL v20;
  BOOL v22;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  v30 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v28 = ~v3;
    v29 = *(_QWORD *)(v2 + 48);
    v5 = *a1;
    v6 = *((_QWORD *)a1 + 1);
    v7 = *((_QWORD *)a1 + 3);
    v31 = *((_QWORD *)a1 + 2);
    v26 = *((_QWORD *)a1 + 4);
    v27 = *((_QWORD *)a1 + 5);
    v8 = a1[7];
    v24 = *((unsigned __int8 *)a1 + 64);
    v25 = *((unsigned __int8 *)a1 + 48);
    do
    {
      v11 = v29 + 72 * v4;
      v13 = *(_QWORD *)(v11 + 16);
      v12 = *(_QWORD *)(v11 + 24);
      v15 = *(_QWORD *)(v11 + 32);
      v14 = *(_QWORD *)(v11 + 40);
      v16 = *(unsigned __int8 *)(v11 + 48);
      v17 = *(double *)(v11 + 56);
      v18 = *(unsigned __int8 *)(v11 + 64);
      v19 = *(_QWORD *)v11 == *(_QWORD *)&v5 && *(_QWORD *)(v11 + 8) == v6;
      if (!v19 && (sub_23BB8B1A4() & 1) == 0)
        goto LABEL_10;
      v20 = v13 == v31 && v12 == v7;
      if (!v20 && (sub_23BB8B1A4() & 1) == 0)
        goto LABEL_10;
      if (v14)
      {
        if (!v27)
          goto LABEL_10;
        if (v15 != v26 || v14 != v27)
        {
          if ((sub_23BB8B1A4() & 1) != 0)
          {
            v22 = v16 == v25 && v17 == v8;
            if (v22 && ((v24 ^ v18) & 1) == 0)
              return v4;
          }
          goto LABEL_10;
        }
      }
      else if (v27)
      {
        goto LABEL_10;
      }
      if (v16 == v25 && v17 == v8 && v24 == v18)
        return v4;
LABEL_10:
      v4 = (v4 + 1) & v28;
    }
    while (((*(_QWORD *)(v30 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_23B985074(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  char v19;
  uint64_t v20;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    do
    {
      v12 = *(_QWORD *)(v4 + 48) + 24 * v7;
      v14 = *(_QWORD *)v12;
      v13 = *(_QWORD *)(v12 + 8);
      v15 = *(char *)(v12 + 16);
      if (v15 < 0)
      {
        if ((a3 & 0x80) == 0)
          goto LABEL_4;
        if (v14 == a1 && v13 == a2)
        {
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          sub_23B9894DC();
          return v7;
        }
        v19 = sub_23BB8B1A4();
        sub_23B9894D4();
        sub_23B9894D4();
        sub_23B9894DC();
        sub_23B9894DC();
        if ((v19 & 1) != 0)
          return v7;
      }
      else
      {
        if ((a3 & 0x80) != 0 || (v14 == a1 ? (v16 = v13 == a2) : (v16 = 0), !v16 && (sub_23BB8B1A4() & 1) == 0))
        {
LABEL_4:
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          sub_23B9894DC();
          goto LABEL_5;
        }
        sub_23B9894D4();
        sub_23B9894D4();
        sub_23B9894DC();
        sub_23B9894DC();
        v4 = v20;
        if (v15 == a3)
          return v7;
      }
LABEL_5:
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_23B9852C4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v10 = a3;
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    do
    {
      v13 = v12 + 24 * v7;
      v14 = *(unsigned __int8 *)(v13 + 16);
      v15 = *(_QWORD *)v13 == a1 && *(_QWORD *)(v13 + 8) == a2;
      if ((v15 || (sub_23BB8B1A4() & 1) != 0) && v14 == v10)
        break;
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_23B9853A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  v4 = type metadata accessor for RepositorySubscriber();
  MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_23B989CE8(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      v13 = sub_23BB889A8();
      sub_23B989D9C((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
      if ((v13 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_23B9854B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23BB8A7B4();
    v8 = v7;
    if (v6 == sub_23BB8A7B4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23BB8A7B4();
          v15 = v14;
          if (v13 == sub_23BB8A7B4() && v15 == v16)
            break;
          v18 = sub_23BB8B1A4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_23B985628(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_23B9856C8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        v9 = sub_23BB8B270();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for MapsDirectionsProvider.DirectionsState(0) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B9858C4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23BB8B240();
        sub_23BB8B24C();
        result = sub_23BB8B270();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B985A7C(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v23 = v4;
      v24 = v2;
      v22 = (result + 1) & v7;
      do
      {
        v25 = 72 * v6;
        v8 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 72 * v6 + 40);
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
        sub_23BB8B258();
        if (v8)
        {
          swift_bridgeObjectRetain();
          sub_23BB8A808();
          swift_bridgeObjectRelease();
        }
        sub_23BB8B24C();
        sub_23BB8B264();
        sub_23BB8B24C();
        v9 = sub_23BB8B270();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        v4 = v23;
        v2 = v24;
        if (v3 >= (uint64_t)v22)
        {
          if (v10 < v22)
            goto LABEL_5;
        }
        else if (v10 >= v22)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_13:
          v11 = *(_QWORD *)(v24 + 48);
          result = v11 + 72 * v3;
          v12 = (const void *)(v11 + v25);
          if (72 * v3 < v25 || result >= (unint64_t)v12 + 72 || v3 != v6)
            result = (unint64_t)memmove((void *)result, v12, 0x48uLL);
          v13 = *(_QWORD *)(v24 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v23 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(v2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v21;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_23B985D50(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = 24 * v6;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        v10 = sub_23BB8B270();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v11 < v8)
          goto LABEL_11;
LABEL_12:
        v12 = *(_QWORD *)(a2 + 48);
        v13 = v12 + 24 * v3;
        v14 = (__int128 *)(v12 + v9);
        if (24 * v3 < v9 || v13 >= (unint64_t)v14 + 24 || v3 != v6)
        {
          v15 = *v14;
          *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
          *(_OWORD *)v13 = v15;
        }
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0) - 8)
                        + 72);
        v18 = v17 * v3;
        result = v16 + v17 * v3;
        v19 = v17 * v6;
        v20 = v16 + v17 * v6 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_22;
      }
      if (v11 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v11)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_22:
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B985F88(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        v9 = sub_23BB8B270();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B986160(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = 24 * v6;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        v10 = sub_23BB8B270();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = v12 + 24 * v3;
          v14 = (__int128 *)(v12 + v9);
          if (24 * v3 < v9 || v13 >= (unint64_t)v14 + 24 || v3 != v6)
          {
            v15 = *v14;
            *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
            *(_OWORD *)v13 = v15;
          }
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B98636C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;

  v30 = type metadata accessor for RepositorySubscriber();
  v4 = *(_QWORD *)(v30 - 8);
  result = MEMORY[0x24BDAC7A8](v30, v5);
  v32 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v31 = (result + 1) & v11;
      v12 = *(_QWORD *)(v4 + 72);
      v33 = v11;
      v13 = (uint64_t)v32;
      do
      {
        v14 = v12;
        v15 = v12 * v10;
        sub_23B989CE8(*(_QWORD *)(a2 + 48) + v12 * v10, v13, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
        sub_23BB8B240();
        sub_23BB889CC();
        sub_23B97D0C8(&qword_256A592F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        sub_23BB8A718();
        v16 = sub_23BB8B270();
        result = sub_23B989D9C(v13, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
        v17 = v33;
        v18 = v16 & v33;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 < v31)
          {
            v12 = v14;
          }
          else
          {
            v12 = v14;
            if (a1 >= (uint64_t)v18)
              goto LABEL_12;
          }
        }
        else
        {
          v12 = v14;
          if (v18 >= v31 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            v19 = *(_QWORD *)(a2 + 48);
            result = v19 + v12 * a1;
            if (v12 * a1 < v15 || result >= v19 + v15 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              v17 = v33;
            }
            else if (v12 * a1 != v15)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            v20 = *(_QWORD *)(a2 + 56);
            v21 = (_QWORD *)(v20 + 8 * a1);
            v22 = (_QWORD *)(v20 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v21 >= v22 + 1))
            {
              *v21 = *v22;
              a1 = v10;
            }
          }
        }
        v10 = (v10 + 1) & v17;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v23;
    v25 = (-1 << a1) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B986624(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 *v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = 24 * v6;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        v11 = sub_23BB8B270();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = v13 + 24 * v3;
          v15 = (__int128 *)(v13 + v10);
          if (24 * v3 < v10 || v14 >= (unint64_t)v15 + 24 || v3 != v6)
          {
            v16 = *v15;
            *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
            *(_OWORD *)v14 = v16;
          }
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 32 * v3);
          v19 = (_OWORD *)(v17 + 32 * v6);
          if (32 * v3 != 32 * v6 || (v3 = v6, v18 >= v19 + 2))
          {
            v9 = v19[1];
            *v18 = *v19;
            v18[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B986838(unint64_t a1, uint64_t a2)
{
  return sub_23B98685C(a1, a2, type metadata accessor for SessionFollowerState);
}

unint64_t sub_23B986844(unint64_t a1, uint64_t a2)
{
  return sub_23B98685C(a1, a2, type metadata accessor for SessionFollowingState);
}

unint64_t sub_23B986850(unint64_t a1, uint64_t a2)
{
  return sub_23B98685C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
}

unint64_t sub_23B98685C(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v8 = ~v6;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v9 = (result + 1) & v8;
      while (1)
      {
        v10 = 24 * v7;
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        sub_23BB8B24C();
        v11 = sub_23BB8B270();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v8;
        if (v4 >= (uint64_t)v9)
          break;
        if (v12 < v9)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = v13 + 24 * v4;
        v15 = (__int128 *)(v13 + v10);
        if (24 * v4 < v10 || v14 >= (unint64_t)v15 + 24 || v4 != v7)
        {
          v16 = *v15;
          *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
          *(_OWORD *)v14 = v16;
        }
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v19 = v18 * v4;
        result = v17 + v18 * v4;
        v20 = v18 * v7;
        v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v8;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_22;
      }
      if (v12 < v9)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_22:
    v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v24 = *v23;
    v25 = (-1 << v4) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B986A98(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23BB8AD90();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_23BB8B240();
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        v9 = sub_23BB8B270();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_23BB88984() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_23B986C94()
{
  return sub_23B987A58(&qword_256A593D0);
}

void *sub_23B986CA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v30 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593F8);
  v6 = *v0;
  v7 = sub_23BB8AFE8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v27 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v28 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v29 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v12;
    if (!v25)
    {
      v12 = v24 + 1;
      if (v24 + 1 >= v29)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v12);
      if (!v25)
        break;
    }
LABEL_25:
    v15 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_23B989CE8(*(_QWORD *)(v6 + 56) + v22, (uint64_t)v5, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    v23 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    sub_23B989CA4((uint64_t)v5, *(_QWORD *)(v8 + 56) + v22, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v29)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v12 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v12 >= v29)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v12);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23B986EE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59420);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v28 = *(_OWORD *)(v21 + 8);
    *v23 = v19;
    v23[1] = v18;
    v24 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v24 = v22;
    *(_OWORD *)(v24 + 8) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = *((id *)&v28 + 1);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B9870C8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59380);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B987268()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _BYTE v26[232];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593B8);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 224 * v15;
    sub_23B989684(*(_QWORD *)(v2 + 56) + 224 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23B989684((uint64_t)v26, *(_QWORD *)(v4 + 56) + v20);
    swift_bridgeObjectRetain();
    result = (void *)sub_23B9896C0((uint64_t)v26);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B987458()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593A0);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = 72 * v15;
    v18 = *(_QWORD *)(v2 + 48) + v17;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v24 = *(_QWORD *)(v18 + 32);
    v23 = *(_QWORD *)(v18 + 40);
    v25 = *(_BYTE *)(v18 + 48);
    v26 = *(_QWORD *)(v18 + 56);
    LOBYTE(v18) = *(_BYTE *)(v18 + 64);
    v27 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v28 = *(_QWORD *)(v4 + 48) + v17;
    *(_QWORD *)v28 = v19;
    *(_QWORD *)(v28 + 8) = v20;
    *(_QWORD *)(v28 + 16) = v21;
    *(_QWORD *)(v28 + 24) = v22;
    *(_QWORD *)(v28 + 32) = v24;
    *(_QWORD *)(v28 + 40) = v23;
    *(_BYTE *)(v28 + 48) = v25;
    *(_QWORD *)(v28 + 56) = v26;
    *(_BYTE *)(v28 + 64) = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v27;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B987650()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59398);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    LOBYTE(v17) = *(_BYTE *)(v17 + 16);
    v20 = 136 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v23 = *(_OWORD *)(v21 + 16);
    v22 = *(_OWORD *)(v21 + 32);
    v24 = *(_OWORD *)(v21 + 64);
    v42 = *(_OWORD *)(v21 + 48);
    v43 = v24;
    v26 = *(_OWORD *)(v21 + 96);
    v25 = *(_OWORD *)(v21 + 112);
    v27 = *(_OWORD *)(v21 + 80);
    v47 = *(_QWORD *)(v21 + 128);
    v45 = v26;
    v46 = v25;
    v44 = v27;
    v39 = *(_OWORD *)v21;
    v40 = v23;
    v41 = v22;
    v28 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v28 = v19;
    *(_QWORD *)(v28 + 8) = v18;
    *(_BYTE *)(v28 + 16) = v17;
    v29 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v29 = v39;
    v30 = v40;
    v31 = v41;
    v32 = v43;
    *(_OWORD *)(v29 + 48) = v42;
    *(_OWORD *)(v29 + 64) = v32;
    *(_OWORD *)(v29 + 16) = v30;
    *(_OWORD *)(v29 + 32) = v31;
    v33 = v44;
    v34 = v45;
    v35 = v46;
    *(_QWORD *)(v29 + 128) = v47;
    *(_OWORD *)(v29 + 96) = v34;
    *(_OWORD *)(v29 + 112) = v35;
    *(_OWORD *)(v29 + 80) = v33;
    swift_bridgeObjectRetain();
    result = (void *)sub_23B9894E4((uint64_t)&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B98787C()
{
  return sub_23B988770(type metadata accessor for PeopleRelationshipsProvider.RelationshipState, &qword_256A59338);
}

id sub_23B987890()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59358);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 24 * v15;
    v18 = *(_QWORD *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    v22 = *(_BYTE *)(v17 + 16);
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_QWORD *)(v21 + 8) = v18;
    *(_BYTE *)(v21 + 16) = v22;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    sub_23B9894D4();
    result = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B987A4C()
{
  return sub_23B987A58(&qword_256A593C0);
}

void *sub_23B987A58(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23BB8AFE8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B987C04()
{
  return sub_23B987C1C(&qword_256A59390);
}

void *sub_23B987C10()
{
  return sub_23B987C1C(&qword_256A59340);
}

void *sub_23B987C1C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23BB8AFE8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 24 * v16;
    v18 = *(_QWORD *)(v3 + 48) + 24 * v16;
    v20 = *(_QWORD *)v18;
    v19 = *(_QWORD *)(v18 + 8);
    LOBYTE(v18) = *(_BYTE *)(v18 + 16);
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = *(_QWORD *)(v5 + 48) + v17;
    *(_QWORD *)v23 = v20;
    *(_QWORD *)(v23 + 8) = v19;
    *(_BYTE *)(v23 + 16) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B987DD4()
{
  return sub_23B988200(&qword_256A593B0);
}

void *sub_23B987DE0()
{
  return sub_23B988200(&qword_256A593C8);
}

void *sub_23B987DEC()
{
  return sub_23B988200(&qword_256A59378);
}

void *sub_23B987DF8()
{
  return sub_23B988200(&qword_256A59368);
}

void *sub_23B987E04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592E0);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B987FA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for RepositorySubscriber();
  v28 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592F0);
  v6 = *v0;
  v7 = sub_23BB8AFE8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v26 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v27 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v28 + 72) * v18;
    sub_23B989CE8(*(_QWORD *)(v6 + 48) + v19, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v18);
    sub_23B989CA4((uint64_t)v5, *(_QWORD *)(v8 + 48) + v19, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B9881DC()
{
  return sub_23B988200(&qword_256A59360);
}

void *sub_23B9881E8()
{
  return sub_23B988200(&qword_256A59370);
}

void *sub_23B9881F4()
{
  return sub_23B988200(&qword_256A59350);
}

void *sub_23B988200(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23BB8AFE8();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B9883AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59330);
  v30 = v0;
  v1 = *v0;
  v2 = sub_23BB8AFE8();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v30 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v27 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v12)
      goto LABEL_26;
    v28 = *(_QWORD *)(v5 + 8 * v27);
    ++v8;
    if (!v28)
    {
      v8 = v27 + 1;
      if (v27 + 1 >= v12)
        goto LABEL_26;
      v28 = *(_QWORD *)(v5 + 8 * v8);
      if (!v28)
        break;
    }
LABEL_25:
    v11 = (v28 - 1) & v28;
    v14 = __clz(__rbit64(v28)) + (v8 << 6);
LABEL_12:
    v15 = 24 * v14;
    v16 = *(_QWORD *)(v1 + 48) + 24 * v14;
    v18 = *(_QWORD *)v16;
    v17 = *(_QWORD *)(v16 + 8);
    LOBYTE(v16) = *(_BYTE *)(v16 + 16);
    v19 = 32 * v14;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(void **)(v20 + 16);
    v24 = *(_QWORD *)(v3 + 48) + v15;
    v25 = *(_BYTE *)(v20 + 24);
    *(_QWORD *)v24 = v18;
    *(_QWORD *)(v24 + 8) = v17;
    *(_BYTE *)(v24 + 16) = v16;
    v26 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v26 = v21;
    *(_QWORD *)(v26 + 8) = v22;
    *(_QWORD *)(v26 + 16) = v23;
    *(_BYTE *)(v26 + 24) = v25;
    swift_bridgeObjectRetain();
    result = sub_23B9894A0(v21, v22, v23);
  }
  v29 = v27 + 2;
  if (v29 >= v12)
    goto LABEL_26;
  v28 = *(_QWORD *)(v5 + 8 * v29);
  if (v28)
  {
    v8 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v28 = *(_QWORD *)(v5 + 8 * v8);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B9885A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592D8);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B98875C()
{
  return sub_23B988770(type metadata accessor for SessionFollowerState, &qword_256A59320);
}

void *sub_23B988770(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(_QWORD);
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;

  v39 = a1;
  v4 = a1(0);
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v35 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v35 = v2;
  v8 = *v2;
  v9 = sub_23BB8AFE8();
  v10 = *(_QWORD *)(v8 + 16);
  v40 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v34 = v40;
    v33 = v35;
LABEL_28:
    *v33 = v34;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v40;
  }
  v36 = v8 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v16 = 1 << *(_BYTE *)(v8 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v8 + 64);
  v37 = (unint64_t)(v16 + 63) >> 6;
  v19 = v39;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v30 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v37)
      goto LABEL_26;
    v31 = *(_QWORD *)(v36 + 8 * v30);
    ++v15;
    if (!v31)
    {
      v15 = v30 + 1;
      if (v30 + 1 >= v37)
        goto LABEL_26;
      v31 = *(_QWORD *)(v36 + 8 * v15);
      if (!v31)
        break;
    }
LABEL_25:
    v18 = (v31 - 1) & v31;
    v21 = __clz(__rbit64(v31)) + (v15 << 6);
LABEL_12:
    v22 = 24 * v21;
    v23 = *(_QWORD *)(v8 + 48) + 24 * v21;
    v25 = *(_QWORD *)v23;
    v24 = *(_QWORD *)(v23 + 8);
    v26 = *(_BYTE *)(v23 + 16);
    v27 = *(_QWORD *)(v38 + 72) * v21;
    sub_23B989CE8(*(_QWORD *)(v8 + 56) + v27, (uint64_t)v7, v19);
    v28 = v40;
    v29 = *(_QWORD *)(v40 + 48) + v22;
    *(_QWORD *)v29 = v25;
    *(_QWORD *)(v29 + 8) = v24;
    *(_BYTE *)(v29 + 16) = v26;
    sub_23B989CA4((uint64_t)v7, *(_QWORD *)(v28 + 56) + v27, v19);
    result = (void *)swift_bridgeObjectRetain();
  }
  v32 = v30 + 2;
  if (v32 >= v37)
  {
LABEL_26:
    result = (void *)swift_release();
    v33 = v35;
    v34 = v40;
    goto LABEL_28;
  }
  v31 = *(_QWORD *)(v36 + 8 * v32);
  if (v31)
  {
    v15 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v15 >= v37)
      goto LABEL_26;
    v31 = *(_QWORD *)(v36 + 8 * v15);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B9889D8()
{
  return sub_23B988770(type metadata accessor for SessionFollowingState, &qword_256A5E9D0);
}

void *sub_23B9889EC()
{
  return sub_23B988770((uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
}

void *sub_23B988A00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = sub_23BB88984();
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59308);
  v32 = v0;
  v5 = *v0;
  v6 = sub_23BB8AFE8();
  v7 = *(_QWORD *)(v5 + 16);
  v36 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v30 = v36;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v36;
  }
  v33 = v5 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v13 + 63) >> 6;
  v16 = v35;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v26 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v34)
      goto LABEL_26;
    v27 = *(_QWORD *)(v33 + 8 * v26);
    ++v12;
    if (!v27)
    {
      v12 = v26 + 1;
      if (v26 + 1 >= v34)
        goto LABEL_26;
      v27 = *(_QWORD *)(v33 + 8 * v12);
      if (!v27)
        break;
    }
LABEL_25:
    v15 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v4, *(_QWORD *)(v5 + 56) + v23, v16);
    v24 = v36;
    v25 = (_QWORD *)(*(_QWORD *)(v36 + 48) + v19);
    *v25 = v22;
    v25[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v24 + 56) + v23, v4, v16);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v33 + 8 * v28);
  if (v27)
  {
    v12 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v12 >= v34)
      goto LABEL_26;
    v27 = *(_QWORD *)(v33 + 8 * v12);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B988C5C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A593A8);
  v2 = *v0;
  v3 = sub_23BB8AFE8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      v9 = v30 + 1;
      if (v30 + 1 >= v13)
        goto LABEL_26;
      v31 = *(_QWORD *)(v6 + 8 * v9);
      if (!v31)
        break;
    }
LABEL_25:
    v12 = (v31 - 1) & v31;
    v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = 72 * v15;
    v18 = *(_QWORD *)(v2 + 48) + v17;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 32);
    v24 = *(_QWORD *)(v18 + 40);
    v25 = *(_BYTE *)(v18 + 48);
    v26 = *(_QWORD *)(v18 + 56);
    LOBYTE(v18) = *(_BYTE *)(v18 + 64);
    v27 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    v28 = *(_QWORD *)(v4 + 48) + v17;
    *(_QWORD *)v28 = v19;
    *(_QWORD *)(v28 + 8) = v20;
    *(_QWORD *)(v28 + 16) = v21;
    *(_QWORD *)(v28 + 24) = v22;
    *(_QWORD *)(v28 + 32) = v23;
    *(_QWORD *)(v28 + 40) = v24;
    *(_BYTE *)(v28 + 48) = v25;
    *(_QWORD *)(v28 + 56) = v26;
    *(_BYTE *)(v28 + 64) = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v27;
    v29 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v32 = v30 + 2;
  if (v32 >= v13)
    goto LABEL_26;
  v31 = *(_QWORD *)(v6 + 8 * v32);
  if (v31)
  {
    v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v31 = *(_QWORD *)(v6 + 8 * v9);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23B988E54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23B988EB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  return sub_23BB54390(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_23B988EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23B988F28(void *a1, uint64_t a2, void *a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    a1 = a3;
  }

}

unint64_t sub_23B988F54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A592E0);
  v3 = (_QWORD *)sub_23BB8B000();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_23B984CA4(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_23B984CA4(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_23B989054(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59380);
  v3 = (_QWORD *)sub_23BB8B000();
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_23B984904(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_BYTE *)v8 - 8);
    v13 = *v8;
    swift_retain();
    result = sub_23B984904(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t _s12FindMyUICore22MapsDirectionsProviderC28didAddNewUniqueSubscriptions05addedK08wasEmptyyShyAC10InputValueO11DestinationV10IdentifierVG_SbtF_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_21;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v6)
      return swift_release();
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v6)
        return swift_release();
      v12 = *(_QWORD *)(v2 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v6)
          return swift_release();
        v12 = *(_QWORD *)(v2 + 8 * v8);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_21:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v16 = *v14;
    v15 = v14[1];
    v17 = *v14;
    v18 = v15;
    swift_bridgeObjectRetain();
    if ((sub_23B981AEC(&v17) & 1) != 0)
    {
      v17 = v16;
      v18 = v15;
      sub_23B9808F0(&v17);
    }
    result = swift_bridgeObjectRelease();
  }
  v13 = v11 + 3;
  if (v13 >= v6)
    return swift_release();
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      return swift_release();
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B9892C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23B97F710(a1, &OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__directionsQueryTaskBySubscription, a2);
}

unint64_t sub_23B9892EC()
{
  unint64_t result;

  result = qword_256A59170;
  if (!qword_256A59170)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for MapsDirectionsProvider.InputValue.Destination.Identifier, &type metadata for MapsDirectionsProvider.InputValue.Destination.Identifier);
    atomic_store(result, (unint64_t *)&qword_256A59170);
  }
  return result;
}

uint64_t sub_23B989330(uint64_t a1)
{
  uint64_t result;

  result = sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23B98936C()
{
  return type metadata accessor for MapsDirectionsProvider();
}

void sub_23B989374()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B989438(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MapsDirectionsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MapsDirectionsProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_23B989438(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A59210)
  {
    v2 = sub_23B9892EC();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for MapsDirectionsProvider.InputValue.Destination.Identifier, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A59210);
  }
}

_OWORD *sub_23B989490(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id sub_23B9894A0(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if ((unint64_t)a3 >= 2)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

uint64_t sub_23B9894D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9894DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B9894E4(uint64_t a1)
{
  sub_23B989540(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_23B989540(uint64_t result)
{
  void *v1;
  id v2;

  if (result)
  {
    v1 = (void *)result;
    swift_bridgeObjectRetain();
    v2 = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23B9895CC(uint64_t a1)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_23B989540(v3);
  return a1;
}

uint64_t sub_23B989684(uint64_t a1, uint64_t a2)
{
  __swift_memcpy217_8(a2, a1);
  return a2;
}

uint64_t sub_23B9896C0(uint64_t a1)
{
  sub_23B989738(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_BYTE *)(a1 + 216));
  return a1;
}

void sub_23B989738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  if ((a28 & 0x40) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B989540(a5);
    sub_23B989888(a22, a23, a24, a25, a26, a27, a28 & 0xBF);
  }
}

uint64_t sub_23B989888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 0x80) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9898C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v19 = *(_OWORD *)(a1 + 96);
  v20 = *(_OWORD *)(a1 + 80);
  v17 = *(_OWORD *)(a1 + 128);
  v18 = *(_OWORD *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 160);
  v16 = *(_OWORD *)(a1 + 144);
  v13 = *(_OWORD *)(a1 + 192);
  v14 = *(_OWORD *)(a1 + 176);
  v12 = *(_OWORD *)(a1 + 208);
  v9 = *(_QWORD *)(a1 + 224);
  v10 = *(_BYTE *)(a1 + 232);
  swift_bridgeObjectRetain();
  sub_23B989738(v21, v2, v3, v4, v5, v6, v7, v8, v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v10);
  return a1;
}

uint64_t sub_23B9899D8()
{
  uint64_t v0;

  return sub_23B97F948(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__directionsQueryTaskBySubscription);
}

uint64_t sub_23B989A00@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23B97F710(a1, &OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentDestinationBySubscription, a2);
}

uint64_t sub_23B989A28()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B989A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = sub_23BB891C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v7 = (*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = sub_23BB88984();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v7, v8);

  v9 = v0 + v7 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23B989B94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(sub_23BB891C4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v7 = v1[4];
  v14 = v1[3];
  v15 = v1[2];
  v8 = *(_QWORD *)((char *)v1 + v5);
  v9 = (char *)v1 + v6;
  v10 = *(_QWORD *)((char *)v1 + v6);
  v11 = *((_QWORD *)v9 + 1);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_23B97C964;
  return sub_23B982F9C(a1, v15, v14, v7, (uint64_t)v1 + v4, v8, v10, v11);
}

uint64_t sub_23B989CA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B989CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B989D2C()
{
  uint64_t v0;

  return sub_23B97F948(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentDestinationBySubscription);
}

void sub_23B989D4C()
{
  sub_23B989E60();
}

uint64_t sub_23B989D60(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23B989D9C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24260D8D0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23B989E1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59408);
    result = MEMORY[0x24260D8DC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23B989E60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__currentOrigin) = v2;
  v4 = v2;

}

uint64_t sub_23B989E9C()
{
  uint64_t v0;

  return sub_23B97F408(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23B989EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B989EFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B989F40()
{
  return sub_23B97D618();
}

uint64_t sub_23B989F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23BB8AA18();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23BB8AA0C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23B9907F8(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23BB8A988();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t DeviceDetailsController.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59448, (uint64_t (*)(uint64_t))type metadata accessor for DeviceDetailsController, (uint64_t)&protocol conformance descriptor for DeviceDetailsController);
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController__state;
  swift_beginAccess();
  return sub_23B989CE8(v3, a1, type metadata accessor for DeviceDetailsController.State);
}

uint64_t sub_23B98A150@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A59448, (uint64_t (*)(uint64_t))type metadata accessor for DeviceDetailsController, (uint64_t)&protocol conformance descriptor for DeviceDetailsController);
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController__state;
  swift_beginAccess();
  return sub_23B989CE8(v4, a2, type metadata accessor for DeviceDetailsController.State);
}

uint64_t sub_23B98A20C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = type metadata accessor for DeviceDetailsController.State(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23B989CE8(a1, (uint64_t)v7, v8);
  v9 = *a2;
  swift_getKeyPath();
  v12 = v9;
  v13 = v7;
  v14 = v9;
  sub_23B97D0C8(&qword_256A59448, (uint64_t (*)(uint64_t))type metadata accessor for DeviceDetailsController, (uint64_t)&protocol conformance descriptor for DeviceDetailsController);
  sub_23BB88A14();
  swift_release();
  return sub_23B98A8EC((uint64_t)v7);
}

uint64_t type metadata accessor for DeviceDetailsController()
{
  uint64_t result;

  result = qword_256A594A8;
  if (!qword_256A594A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B98A344(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController__state;
  swift_beginAccess();
  sub_23B990C00(a2, v3);
  return swift_endAccess();
}

uint64_t DeviceDetailsController.__allocating_init(deviceIdentifier:initialState:dependencies:)(uint64_t *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  DeviceDetailsController.init(deviceIdentifier:initialState:dependencies:)(a1, a2, a3);
  return v6;
}

uint64_t DeviceDetailsController.init(deviceIdentifier:initialState:dependencies:)(uint64_t *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  __int128 v19;
  __int128 v20;
  __int128 v22;
  __int128 v23;

  v4 = v3;
  v8 = sub_23BB889CC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = a1[1];
  sub_23BB889C0();
  v15 = sub_23BB88990();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19 = *a3;
  v22 = a3[1];
  v23 = v19;
  v18(v12, v8);
  *(_QWORD *)(v4 + 16) = v15;
  *(_QWORD *)(v4 + 24) = v17;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController_isAutomaticLocationsSubscriptionEnabled) = 0;
  sub_23BB88A44();
  *(_QWORD *)(v4 + 32) = v13;
  *(_QWORD *)(v4 + 40) = v14;
  sub_23B989CE8(a2, v4 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController__state, type metadata accessor for DeviceDetailsController.State);
  v20 = v22;
  *(_OWORD *)(v4 + 48) = v23;
  *(_OWORD *)(v4 + 64) = v20;
  sub_23B98A520();
  sub_23B98A8EC(a2);
  return v4;
}

uint64_t sub_23B98A520()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  _BYTE v37[224];
  _QWORD v38[28];

  v1 = v0;
  v2 = type metadata accessor for DeviceDetailsController.State(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88A08();
  swift_getKeyPath();
  v35 = v0;
  v36 = v5;
  v38[0] = v0;
  sub_23B97D0C8(&qword_256A59448, (uint64_t (*)(uint64_t))type metadata accessor for DeviceDetailsController, (uint64_t)&protocol conformance descriptor for DeviceDetailsController);
  sub_23BB88A14();
  swift_release();
  result = sub_23B98A8EC((uint64_t)v5);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController_isAutomaticLocationsSubscriptionEnabled) == 1)
  {
    v7 = v0[6];
    swift_getKeyPath();
    v38[0] = v7;
    sub_23B97D0C8((unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider);
    sub_23BB88A20();
    swift_release();
    v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
    result = swift_beginAccess();
    v9 = *v8;
    if (*(_QWORD *)(v9 + 16))
    {
      v11 = v1[4];
      v10 = v1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_23B984880(v11, v10);
      if ((v13 & 1) != 0)
      {
        sub_23B989684(*(_QWORD *)(v9 + 56) + 224 * v12, (uint64_t)v37);
        sub_23B990954((uint64_t)v37, sub_23B989738);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23B989684((uint64_t)v37, (uint64_t)v38);
        v14 = sub_23B990938((uint64_t)v38);
        result = sub_23B990944((uint64_t)v38);
        if (v14 == 1)
        {
          v15 = *(char *)(result + 216);
          if (v15 < 0)
          {
            return sub_23B990954((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
          }
          else
          {
            v16 = *(_QWORD *)(result + 208);
            v34 = *(_QWORD *)(result + 200);
            v18 = *(_QWORD *)(result + 184);
            v17 = *(_QWORD *)(result + 192);
            v20 = *(_QWORD *)(result + 168);
            v19 = *(_QWORD *)(result + 176);
            v21 = (void *)objc_opt_self();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v22 = objc_msgSend(v21, sel_mainScreen);
            objc_msgSend(v22, sel_scale);
            v24 = v23;

            v25 = v1[8];
            v26 = v1[2];
            v27 = v1[3];
            v32 = v26;
            v33 = v25;
            __swift_instantiateConcreteTypeFromMangledName(&qword_256A59648);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
            *(_QWORD *)(inited + 32) = v20;
            *(_QWORD *)(inited + 40) = v19;
            *(_QWORD *)(inited + 48) = v18;
            v31 = v18;
            v29 = v34;
            *(_QWORD *)(inited + 56) = v17;
            *(_QWORD *)(inited + 64) = v29;
            *(_QWORD *)(inited + 72) = v16;
            *(_BYTE *)(inited + 80) = v15;
            *(_QWORD *)(inited + 88) = v24;
            *(_BYTE *)(inited + 96) = 0;
            sub_23B989888(v20, v19, v18, v17, v29, v16, v15);
            swift_bridgeObjectRetain();
            v30 = sub_23B98ECEC(inited);
            swift_setDeallocating();
            swift_arrayDestroy();
            sub_23BACB070(v30, v32, v27);
            swift_bridgeObjectRelease();
            sub_23B990954((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
            swift_bridgeObjectRelease();
            return sub_23B990BAC(v20, v19, v31, v17, v34, v16, v15);
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_23B98A8EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceDetailsController.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *DeviceDetailsController.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = v0[2];
  v7 = v0[3];
  v9 = v0[6];
  v10 = v0[7];
  v11 = v0[8];
  v12 = v0[9];
  sub_23BB8A9F4();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = sub_23BB8A9E8();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v9;
  v14[5] = v8;
  v14[6] = v7;
  v14[7] = v10;
  v14[8] = v11;
  v14[9] = v12;
  sub_23B989F54((uint64_t)v5, (uint64_t)&unk_256A59468, (uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23B98A8EC((uint64_t)v1 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController__state);
  v16 = (char *)v1 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController___observationRegistrar;
  v17 = sub_23BB88A50();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  return v1;
}

uint64_t sub_23B98AAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  sub_23BB8A9F4();
  v8[8] = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23B98AB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_23B98ACB0(v2, v1);
  sub_23B98AF5C(v2, v1);
  sub_23B98B208(v2, v1);
  sub_23B98B4B4(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B98ABC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B98AC10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B990D68;
  return sub_23B98AAC0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23B98ACB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24 = v2;
  sub_23B97D0C8((unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider);
  sub_23BB88A20();
  swift_release();
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v6;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 141558275;
    v21 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2081;
    v21 = a1;
    v22 = a2;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8A7D8();
    v19 = v5;
    v21 = sub_23BB7B69C(v16, v17, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BACE898(MEMORY[0x24BEE4B08], a1, a2);
}

uint64_t sub_23B98AF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24 = v2;
  sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  sub_23BB88A20();
  swift_release();
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v6;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 141558275;
    v21 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2081;
    v21 = a1;
    v22 = a2;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8A7D8();
    v19 = v5;
    v21 = sub_23BB7B69C(v16, v17, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BACD5DC(MEMORY[0x24BEE4B08], a1, a2);
}

uint64_t sub_23B98B208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24 = v2;
  sub_23B97D0C8((unint64_t *)&qword_256A595F0, (uint64_t (*)(uint64_t))type metadata accessor for DeviceImageProvider, (uint64_t)&protocol conformance descriptor for DeviceImageProvider);
  sub_23BB88A20();
  swift_release();
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v6;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 141558275;
    v21 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2081;
    v21 = a1;
    v22 = a2;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8A7D8();
    v19 = v5;
    v21 = sub_23BB7B69C(v16, v17, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BACB070(MEMORY[0x24BEE4B08], a1, a2);
}

uint64_t sub_23B98B4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24 = v2;
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v6;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 141558275;
    v21 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2081;
    v21 = a1;
    v22 = a2;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8A7D8();
    v19 = v5;
    v21 = sub_23BB7B69C(v16, v17, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BACC320(MEMORY[0x24BEE4B08], a1, a2);
}

uint64_t sub_23B98B760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24 = v2;
  sub_23B97D0C8((unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider);
  sub_23BB88A20();
  swift_release();
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v6;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 141558275;
    v21 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2081;
    v21 = a1;
    v22 = a2;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8A7D8();
    v19 = v5;
    v21 = sub_23BB7B69C(v16, v17, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BAD1038(MEMORY[0x24BEE4B08], a1, a2);
}

uint64_t sub_23B98BA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24 = v2;
  sub_23B97D0C8((unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider);
  sub_23BB88A20();
  swift_release();
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v6;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 141558275;
    v21 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2081;
    v21 = a1;
    v22 = a2;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8A7D8();
    v19 = v5;
    v21 = sub_23BB7B69C(v16, v17, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BACE960(MEMORY[0x24BEE4B08], a1, a2);
}

uint64_t sub_23B98BCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = sub_23BB891C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v24 = v2;
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v10 = v2 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v10, v5);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20 = v6;
    v15 = v14;
    v23 = v14;
    *(_DWORD *)v13 = 141558275;
    v21 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2081;
    v21 = a1;
    v22 = a2;
    swift_bridgeObjectRetain();
    v16 = sub_23BB8A7D8();
    v19 = v5;
    v21 = sub_23BB7B69C(v16, v17, &v23);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "Provider: removeSubscriber\n- Subscriber: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_23BACFD70(MEMORY[0x24BEE4B08], a1, a2);
}

uint64_t DeviceDetailsController.__deallocating_deinit()
{
  DeviceDetailsController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23B98BF88@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  id v39;
  char v40;
  uint64_t v41;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  double v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  _BYTE v69[224];
  _BYTE v70[224];
  _QWORD v71[28];
  double v72[6];
  char v73;
  uint64_t v74;
  char v75;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v68 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[6];
  swift_getKeyPath();
  v71[0] = v7;
  sub_23B97D0C8((unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider);
  sub_23BB88A20();
  swift_release();
  v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
  swift_beginAccess();
  v9 = *v8;
  v10 = v2[7];
  swift_getKeyPath();
  v71[0] = v10;
  sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v11 = *(void **)(v10 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  v12 = v2[8];
  swift_getKeyPath();
  v71[0] = v12;
  sub_23B97D0C8((unint64_t *)&qword_256A595F0, (uint64_t (*)(uint64_t))type metadata accessor for DeviceImageProvider, (uint64_t)&protocol conformance descriptor for DeviceImageProvider);
  v67 = v11;
  v13 = v11;
  sub_23BB88A20();
  swift_release();
  v14 = (uint64_t *)(v12 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__data);
  swift_beginAccess();
  v15 = *v14;
  v16 = v2[9];
  swift_getKeyPath();
  v71[0] = v16;
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data);
  swift_beginAccess();
  v18 = *v17;
  v20 = v2[4];
  v19 = v2[5];
  v21 = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  if (!v21)
    goto LABEL_10;
  swift_bridgeObjectRetain();
  v22 = sub_23B984880(v20, v19);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v41 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a1, 1, 1, v41);
  }
  sub_23B989684(*(_QWORD *)(v9 + 56) + 224 * v22, (uint64_t)v70);
  sub_23B990954((uint64_t)v70, sub_23B989738);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B989684((uint64_t)v70, (uint64_t)v71);
  v24 = sub_23B990938((uint64_t)v71);
  v25 = sub_23B990944((uint64_t)v71);
  if (v24 != 1)
  {
    swift_bridgeObjectRelease();
    v26 = 0.0;
    v66 = 0;
    v40 = -1;
    goto LABEL_13;
  }
  v26 = *(double *)(v25 + 168);
  v66 = *(_QWORD *)(v25 + 176);
  if (*(char *)(v25 + 216) < 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v40 = 1;
LABEL_13:
    v33 = v68;
    if (*(_QWORD *)(v18 + 16))
      goto LABEL_14;
    goto LABEL_21;
  }
  v64 = *(char *)(v25 + 216);
  v65 = v26;
  v27 = *(_QWORD *)(v25 + 192);
  v60 = *(double *)(v25 + 184);
  v28 = *(_QWORD *)(v25 + 208);
  v62 = *(_QWORD *)(v25 + 200);
  v29 = (void *)objc_opt_self();
  v63 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v61 = v27;
  swift_bridgeObjectRetain();
  v30 = objc_msgSend(v29, sel_mainScreen);
  objc_msgSend(v30, sel_scale);
  v32 = v31;

  v33 = v68;
  if (*(_QWORD *)(v15 + 16))
  {
    v34 = *(_QWORD *)&v65;
    v72[0] = v65;
    *(_QWORD *)&v72[1] = v66;
    v35 = *(_QWORD *)&v60;
    v72[2] = v60;
    *(_QWORD *)&v72[3] = v61;
    *(_QWORD *)&v72[4] = v62;
    *(_QWORD *)&v72[5] = v63;
    v73 = v64;
    v74 = v32;
    v75 = 0;
    v36 = sub_23B984960(v72);
    if ((v37 & 1) != 0)
    {
      v38 = *(void **)(*(_QWORD *)(v15 + 56) + 8 * v36);
      v39 = v38;
      swift_bridgeObjectRelease();
      sub_23B990BAC(v34, v66, v35, v61, v62, v63, v64);
      v66 = 0;
      v40 = 0;
      v26 = *(double *)&v38;
      if (!*(_QWORD *)(v18 + 16))
        goto LABEL_21;
LABEL_14:
      swift_bridgeObjectRetain();
      v43 = sub_23B984880(v20, v19);
      if ((v44 & 1) != 0)
      {
        v45 = v43;
        v46 = *(_QWORD *)(v18 + 56);
        v47 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
        v65 = v26;
        v48 = v47;
        v49 = *(_QWORD *)(v47 - 8);
        v50 = v46 + *(_QWORD *)(v49 + 72) * v45;
        v33 = v68;
        sub_23B989CE8(v50, v68, type metadata accessor for MapsDirectionsProvider.DirectionsState);
        v51 = v48;
        v26 = v65;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v33, 0, 1, v51);
      }
      else
      {
        v52 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v33, 1, 1, v52);
      }
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    v53 = v34;
    v54 = v66;
    v55 = v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    v53 = *(_QWORD *)&v65;
    v54 = v66;
    v55 = *(_QWORD *)&v60;
  }
  sub_23B990BAC(v53, v54, v55, v61, v62, v63, v64);
  v26 = 0.0;
  v66 = 0;
  v40 = -1;
  if (*(_QWORD *)(v18 + 16))
    goto LABEL_14;
LABEL_21:
  v56 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v33, 1, 1, v56);
LABEL_22:
  swift_bridgeObjectRelease();
  sub_23B989684((uint64_t)v70, (uint64_t)v69);
  nullsub_1(v69);
  *(_QWORD *)a1 = v20;
  *(_QWORD *)(a1 + 8) = v19;
  sub_23B990D24((uint64_t)v69, a1 + 16, &qword_256A59668);
  v57 = v66;
  *(double *)(a1 + 240) = v26;
  *(_QWORD *)(a1 + 248) = v57;
  *(_BYTE *)(a1 + 256) = v40;
  *(_QWORD *)(a1 + 264) = v67;
  v58 = type metadata accessor for DeviceInfo();
  sub_23B990D24(v33, a1 + *(int *)(v58 + 32), &qword_256A593D8);
  v59 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(a1, 0, 1, v59);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B98C5E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_23BB8A9F4();
  swift_retain();
  v6 = sub_23BB8A9E8();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  swift_release();
  sub_23B989F54((uint64_t)v3, (uint64_t)&unk_256A59660, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_23B98C728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  sub_23BB8A9F4();
  *(_QWORD *)(v4 + 48) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23B98C794()
{
  uint64_t v0;

  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23B98A520();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall DeviceDetailsController.onAppear()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *((_BYTE *)v0 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController_isAutomaticLocationsSubscriptionEnabled) = 1;
  v2 = v0[4];
  v1 = v0[5];
  v4 = v0[2];
  v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59470);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v6 = sub_23B98F07C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_23B98DD3C(v6, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = sub_23B98F234((uint64_t)&unk_250CA9900);
  swift_bridgeObjectRetain();
  sub_23B98D950(v7, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59478);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v9 = sub_23B98F30C(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_23B98D564(v9, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DeviceDetailsController.onDisappear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC12FindMyUICore23DeviceDetailsController_isAutomaticLocationsSubscriptionEnabled) = 0;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_23B98ACB0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98AF5C(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98B208(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98B4B4(v1, v2);
  swift_bridgeObjectRelease();
}

uint64_t sub_23B98CA74(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_23BAD358C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B98CBF0(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  int64_t v11;
  int64_t v12;

  v3 = 0;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      v11 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v11 >= v8)
        goto LABEL_25;
      v7 = *(_QWORD *)(v4 + 8 * v11);
      ++v3;
      if (!v7)
      {
        v3 = v11 + 1;
        if (v11 + 1 >= v8)
          goto LABEL_25;
        v7 = *(_QWORD *)(v4 + 8 * v3);
        if (!v7)
        {
          v3 = v11 + 2;
          if (v11 + 2 >= v8)
            goto LABEL_25;
          v7 = *(_QWORD *)(v4 + 8 * v3);
          if (!v7)
          {
            v3 = v11 + 3;
            if (v11 + 3 >= v8)
              goto LABEL_25;
            v7 = *(_QWORD *)(v4 + 8 * v3);
            if (!v7)
              break;
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_23BB8B240();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v10 = result & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_23BAD75EC(v10, isUniquelyReferenced_nonNull_native);
      result = swift_bridgeObjectRelease();
    }
  }
  v12 = v11 + 4;
  if (v12 >= v8)
  {
LABEL_25:
    swift_release();
    return a2;
  }
  v7 = *(_QWORD *)(v4 + 8 * v12);
  if (v7)
  {
    v3 = v12;
    goto LABEL_8;
  }
  while (1)
  {
    v3 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v3 >= v8)
      goto LABEL_25;
    v7 = *(_QWORD *)(v4 + 8 * v3);
    ++v12;
    if (v7)
      goto LABEL_8;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23B98CD90(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_23BAD3748(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B98CF0C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = result;
  v3 = 0;
  v5 = result + 56;
  v4 = *(_QWORD *)(result + 56);
  v20 = a2;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v5 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v5 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v9)
            goto LABEL_23;
          v17 = *(_QWORD *)(v5 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v2 + 48) + 24 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    swift_bridgeObjectRetain();
    sub_23BAD4330((uint64_t)&v19, v13, v14, v15);
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 4;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B98D09C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19[2];
  unsigned __int16 v20;
  uint64_t v21;

  v2 = result;
  v3 = 0;
  v5 = result + 56;
  v4 = *(_QWORD *)(result + 56);
  v21 = a2;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v5 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v5 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v9)
            goto LABEL_23;
          v17 = *(_QWORD *)(v5 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v2 + 48) + 24 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_WORD *)(v12 + 16);
    sub_23B9906EC(*(_QWORD *)v12, v14, v15);
    sub_23BAD4728((uint64_t)v19, v13, v14, v15);
    result = sub_23B9906D4(v19[0], v19[1], v20);
  }
  v18 = v16 + 4;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    return v21;
  }
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B98D238(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = result;
  v3 = 0;
  v5 = result + 56;
  v4 = *(_QWORD *)(result + 56);
  v20 = a2;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v5 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v5 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v9)
            goto LABEL_23;
          v17 = *(_QWORD *)(v5 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v2 + 48) + 24 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_BYTE *)(v12 + 16);
    sub_23B9894D4();
    sub_23BAD3D84((uint64_t)&v19, v13, v14, v15);
    result = sub_23B9894DC();
  }
  v18 = v16 + 4;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B98D3D4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = result;
  v3 = 0;
  v5 = result + 56;
  v4 = *(_QWORD *)(result + 56);
  v20 = a2;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    ++v3;
    if (!v17)
    {
      v3 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v5 + 8 * v3);
      if (!v17)
      {
        v3 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v5 + 8 * v3);
        if (!v17)
        {
          v3 = v16 + 3;
          if (v16 + 3 >= v9)
            goto LABEL_23;
          v17 = *(_QWORD *)(v5 + 8 * v3);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v11 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    v12 = *(_QWORD *)(v2 + 48) + 24 * v11;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v15 = *(_WORD *)(v12 + 16);
    swift_bridgeObjectRetain();
    sub_23BAD4120((uint64_t)&v19, v13, v14, v15);
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 4;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
    v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v5 + 8 * v3);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23B98D564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = sub_23BB891C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13 = v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider___observationRegistrar;
  v43 = v3;
  v37 = sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  sub_23BB88A20();
  swift_release();
  v14 = v3 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__storage;
  swift_beginAccess();
  v38 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v14, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABEC();
  v17 = os_log_type_enabled(v15, v16);
  v39 = v14;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v42 = v33;
    *(_DWORD *)v18 = 136315394;
    v35 = v13;
    sub_23B9892EC();
    v36 = a2;
    swift_bridgeObjectRetain();
    v19 = sub_23BB8AAFC();
    v34 = v8;
    v21 = v20;
    swift_bridgeObjectRelease();
    v40 = sub_23BB7B69C(v19, v21, &v42);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40 = v36;
    v41 = a3;
    swift_bridgeObjectRetain();
    v22 = sub_23BB8A7D8();
    v40 = sub_23BB7B69C(v22, v23, &v42);
    a2 = v36;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v15, v16, "Provider: addSubscriptions\n- requestedSubscriptions: %s\n- subscriber: %s", (uint8_t *)v18, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v24, -1, -1);
    MEMORY[0x24260D9B4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v8);
  }
  swift_getKeyPath();
  v40 = v4;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59148);
  v26 = *(_QWORD *)(v39 + *(int *)(v25 + 36));
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_23B984880(a2, a3), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = swift_bridgeObjectRetain();
    a1 = sub_23B98CA74(v30, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_23BACC320(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B98D950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = sub_23BB891C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13 = v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider___observationRegistrar;
  v43 = v3;
  v37 = sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  sub_23BB88A20();
  swift_release();
  v14 = v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  v38 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v14, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABEC();
  v17 = os_log_type_enabled(v15, v16);
  v39 = v14;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v42 = v33;
    *(_DWORD *)v18 = 136315394;
    v35 = v13;
    sub_23B990770();
    v36 = a2;
    swift_bridgeObjectRetain();
    v19 = sub_23BB8AAFC();
    v34 = v8;
    v21 = v20;
    swift_bridgeObjectRelease();
    v40 = sub_23BB7B69C(v19, v21, &v42);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40 = v36;
    v41 = a3;
    swift_bridgeObjectRetain();
    v22 = sub_23BB8A7D8();
    v40 = sub_23BB7B69C(v22, v23, &v42);
    a2 = v36;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v15, v16, "Provider: addSubscriptions\n- requestedSubscriptions: %s\n- subscriber: %s", (uint8_t *)v18, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v24, -1, -1);
    MEMORY[0x24260D9B4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v8);
  }
  swift_getKeyPath();
  v40 = v4;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  v26 = *(_QWORD *)(v39 + *(int *)(v25 + 36));
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_23B984880(a2, a3), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = swift_bridgeObjectRetain();
    a1 = sub_23B98CBF0(v30, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_23BACD5DC(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B98DD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = sub_23BB891C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13 = v3 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar;
  v43 = v3;
  v37 = sub_23B97D0C8((unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider);
  sub_23BB88A20();
  swift_release();
  v14 = v3 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  v38 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v14, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABEC();
  v17 = os_log_type_enabled(v15, v16);
  v39 = v14;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v42 = v33;
    *(_DWORD *)v18 = 136315394;
    v35 = v13;
    sub_23B9907B4();
    v36 = a2;
    swift_bridgeObjectRetain();
    v19 = sub_23BB8AAFC();
    v34 = v8;
    v21 = v20;
    swift_bridgeObjectRelease();
    v40 = sub_23BB7B69C(v19, v21, &v42);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40 = v36;
    v41 = a3;
    swift_bridgeObjectRetain();
    v22 = sub_23BB8A7D8();
    v40 = sub_23BB7B69C(v22, v23, &v42);
    a2 = v36;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v15, v16, "Provider: addSubscriptions\n- requestedSubscriptions: %s\n- subscriber: %s", (uint8_t *)v18, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v24, -1, -1);
    MEMORY[0x24260D9B4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v8);
  }
  swift_getKeyPath();
  v40 = v4;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59628);
  v26 = *(_QWORD *)(v39 + *(int *)(v25 + 36));
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_23B984880(a2, a3), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = swift_bridgeObjectRetain();
    a1 = sub_23B98CD90(v30, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_23BACE898(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B98E128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = sub_23BB891C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13 = v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider___observationRegistrar;
  v43 = v3;
  v37 = sub_23B97D0C8((unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider);
  sub_23BB88A20();
  swift_release();
  v14 = v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__storage;
  swift_beginAccess();
  v38 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v14, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABEC();
  v17 = os_log_type_enabled(v15, v16);
  v39 = v14;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v42 = v33;
    *(_DWORD *)v18 = 136315394;
    v35 = v13;
    sub_23B99070C();
    v36 = a2;
    swift_bridgeObjectRetain();
    v19 = sub_23BB8AAFC();
    v34 = v8;
    v21 = v20;
    swift_bridgeObjectRelease();
    v40 = sub_23BB7B69C(v19, v21, &v42);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40 = v36;
    v41 = a3;
    swift_bridgeObjectRetain();
    v22 = sub_23BB8A7D8();
    v40 = sub_23BB7B69C(v22, v23, &v42);
    a2 = v36;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v15, v16, "Provider: addSubscriptions\n- requestedSubscriptions: %s\n- subscriber: %s", (uint8_t *)v18, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v24, -1, -1);
    MEMORY[0x24260D9B4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v8);
  }
  swift_getKeyPath();
  v40 = v4;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595D8);
  v26 = *(_QWORD *)(v39 + *(int *)(v25 + 36));
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_23B984880(a2, a3), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = swift_bridgeObjectRetain();
    a1 = sub_23B98CF0C(v30, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_23BAD1038(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B98E514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = sub_23BB891C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13 = v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider___observationRegistrar;
  v43 = v3;
  v37 = sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  sub_23BB88A20();
  swift_release();
  v14 = v3 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__storage;
  swift_beginAccess();
  v38 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v14, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABEC();
  v17 = os_log_type_enabled(v15, v16);
  v39 = v14;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v42 = v33;
    *(_DWORD *)v18 = 136315394;
    v35 = v13;
    sub_23B9900F8();
    v36 = a2;
    swift_bridgeObjectRetain();
    v19 = sub_23BB8AAFC();
    v34 = v8;
    v21 = v20;
    swift_bridgeObjectRelease();
    v40 = sub_23BB7B69C(v19, v21, &v42);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40 = v36;
    v41 = a3;
    swift_bridgeObjectRetain();
    v22 = sub_23BB8A7D8();
    v40 = sub_23BB7B69C(v22, v23, &v42);
    a2 = v36;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v15, v16, "Provider: addSubscriptions\n- requestedSubscriptions: %s\n- subscriber: %s", (uint8_t *)v18, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v24, -1, -1);
    MEMORY[0x24260D9B4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v8);
  }
  swift_getKeyPath();
  v40 = v4;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59590);
  v26 = *(_QWORD *)(v39 + *(int *)(v25 + 36));
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_23B984880(a2, a3), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = swift_bridgeObjectRetain();
    a1 = sub_23B98D238(v30, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_23BACFD70(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B98E900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = v3;
  v8 = sub_23BB891C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13 = v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider___observationRegistrar;
  v43 = v3;
  v37 = sub_23B97D0C8((unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider);
  sub_23BB88A20();
  swift_release();
  v14 = v3 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__storage;
  swift_beginAccess();
  v38 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v14, v8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v15 = sub_23BB891AC();
  v16 = sub_23BB8ABEC();
  v17 = os_log_type_enabled(v15, v16);
  v39 = v14;
  if (v17)
  {
    v18 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v42 = v33;
    *(_DWORD *)v18 = 136315394;
    v35 = v13;
    sub_23B990690();
    v36 = a2;
    swift_bridgeObjectRetain();
    v19 = sub_23BB8AAFC();
    v34 = v8;
    v21 = v20;
    swift_bridgeObjectRelease();
    v40 = sub_23BB7B69C(v19, v21, &v42);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40 = v36;
    v41 = a3;
    swift_bridgeObjectRetain();
    v22 = sub_23BB8A7D8();
    v40 = sub_23BB7B69C(v22, v23, &v42);
    a2 = v36;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v15, v16, "Provider: addSubscriptions\n- requestedSubscriptions: %s\n- subscriber: %s", (uint8_t *)v18, 0x16u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v24, -1, -1);
    MEMORY[0x24260D9B4](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v34);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v8);
  }
  swift_getKeyPath();
  v40 = v4;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A595B0);
  v26 = *(_QWORD *)(v39 + *(int *)(v25 + 36));
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_23B984880(a2, a3), (v28 & 1) != 0))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = swift_bridgeObjectRetain();
    a1 = sub_23B98D3D4(v30, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_23BACE960(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B98ECEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  double v27;
  int v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59650);
    v3 = sub_23BB8ADF0();
    v4 = 0;
    v44 = v3 + 56;
    v38 = v1;
    v39 = a1 + 32;
    v37 = v3;
    while (1)
    {
      v5 = (double *)(v39 + 72 * v4);
      v7 = *v5;
      v6 = *((_QWORD *)v5 + 1);
      v9 = *((_QWORD *)v5 + 2);
      v8 = *((_QWORD *)v5 + 3);
      v10 = *((_QWORD *)v5 + 4);
      v11 = *((_QWORD *)v5 + 5);
      v43 = *((unsigned __int8 *)v5 + 48);
      v12 = v5[7];
      v41 = *((unsigned __int8 *)v5 + 64);
      sub_23BB8B240();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v47 = v7;
      sub_23BB8A808();
      v48 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v45 = v9;
      sub_23BB8A808();
      v46 = v8;
      swift_bridgeObjectRelease();
      v42 = v10;
      sub_23BB8B258();
      if (v11)
      {
        swift_bridgeObjectRetain();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      sub_23BB8B24C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8B264();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v14 = ~(-1 << *(_BYTE *)(v3 + 32));
      v15 = result & v14;
      v16 = (result & (unint64_t)v14) >> 6;
      v17 = *(_QWORD *)(v44 + 8 * v16);
      v18 = 1 << (result & v14);
      v19 = *(_QWORD *)(v3 + 48);
      if ((v18 & v17) != 0)
        break;
LABEL_35:
      *(_QWORD *)(v44 + 8 * v16) = v18 | v17;
      v33 = v19 + 72 * v15;
      *(double *)v33 = v47;
      *(_QWORD *)(v33 + 8) = v48;
      *(_QWORD *)(v33 + 16) = v45;
      *(_QWORD *)(v33 + 24) = v46;
      *(_QWORD *)(v33 + 32) = v42;
      *(_QWORD *)(v33 + 40) = v11;
      *(_BYTE *)(v33 + 48) = v43;
      *(double *)(v33 + 56) = v12;
      *(_BYTE *)(v33 + 64) = v41;
      v34 = *(_QWORD *)(v3 + 16);
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v36;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
    v20 = v11;
    v40 = v4;
    while (1)
    {
      v21 = v19 + 72 * v15;
      result = *(_QWORD *)v21;
      v22 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v21 + 24);
      v25 = *(_QWORD *)(v21 + 32);
      v24 = *(_QWORD *)(v21 + 40);
      v26 = *(unsigned __int8 *)(v21 + 48);
      v27 = *(double *)(v21 + 56);
      v28 = *(unsigned __int8 *)(v21 + 64);
      v29 = *(_QWORD *)v21 == *(_QWORD *)&v47 && *(_QWORD *)(v21 + 8) == v48;
      if (v29 || (result = sub_23BB8B1A4(), (result & 1) != 0))
      {
        v30 = v22 == v45 && v23 == v46;
        if (v30 || (result = sub_23BB8B1A4(), (result & 1) != 0))
        {
          if (v24)
          {
            if (v20)
            {
              v31 = v25 == v42 && v24 == v20;
              if (v31 || (result = sub_23BB8B1A4(), (result & 1) != 0))
              {
LABEL_27:
                v32 = v26 == v43 && v27 == v12;
                if (v32 && ((v41 ^ v28) & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v3 = v37;
                  v1 = v38;
                  v4 = v40;
                  goto LABEL_3;
                }
              }
            }
          }
          else if (!v20)
          {
            goto LABEL_27;
          }
        }
      }
      v15 = (v15 + 1) & v14;
      v16 = v15 >> 6;
      v17 = *(_QWORD *)(v44 + 8 * (v15 >> 6));
      v18 = 1 << v15;
      if ((v17 & (1 << v15)) == 0)
      {
        v3 = v37;
        v1 = v38;
        v19 = *(_QWORD *)(v37 + 48);
        v4 = v40;
        v11 = v20;
        goto LABEL_35;
      }
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23B98F07C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59638);
    v3 = sub_23BB8ADF0();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
LABEL_5:
    v7 = (uint64_t *)(v6 + 16 * v4);
    v9 = *v7;
    v8 = v7[1];
    sub_23BB8B240();
    sub_23BB8B24C();
    if (v8)
    {
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
    }
    result = sub_23BB8B270();
    v11 = ~(-1 << *(_BYTE *)(v3 + 32));
    v12 = result & v11;
    v13 = (result & (unint64_t)v11) >> 6;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    v15 = 1 << (result & v11);
    if ((v15 & v14) == 0)
    {
LABEL_8:
      *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
      v16 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v12);
      *v16 = v9;
      v16[1] = v8;
      v17 = *(_QWORD *)(v3 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (!v18)
      {
        *(_QWORD *)(v3 + 16) = v19;
        goto LABEL_4;
      }
      __break(1u);
      return result;
    }
    while (1)
    {
      v20 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v12);
      v21 = v20[1];
      if (v21)
      {
        if (v8)
        {
          v22 = *v20 == v9 && v21 == v8;
          if (v22 || (result = sub_23BB8B1A4(), (result & 1) != 0))
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
      }
      else if (!v8)
      {
        swift_bridgeObjectRelease_n();
LABEL_4:
        if (++v4 == v1)
          return v3;
        goto LABEL_5;
      }
      v12 = (v12 + 1) & v11;
      v13 = v12 >> 6;
      v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
      v15 = 1 << v12;
      if ((v14 & (1 << v12)) == 0)
        goto LABEL_8;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23B98F234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59620);
    v2 = sub_23BB8ADF0();
    v3 = v2 + 56;
    while (1)
    {
      sub_23BB8B240();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v5 = result & ~(-1 << *(_BYTE *)(v2 + 32));
      v6 = v5 >> 6;
      v7 = *(_QWORD *)(v3 + 8 * (v5 >> 6));
      v8 = 1 << v5;
      if ((v8 & v7) == 0)
      {
        *(_QWORD *)(v3 + 8 * v6) = v8 | v7;
        v9 = *(_QWORD *)(v2 + 16);
        v10 = __OFADD__(v9, 1);
        v11 = v9 + 1;
        if (v10)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v2 + 16) = v11;
      }
      if (!--v1)
        return v2;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23B98F30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59608);
    v3 = sub_23BB8ADF0();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_23BB8B240();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      result = sub_23BB8B270();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_23BB8B1A4(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_23BB8B1A4();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23B98F4B8()
{
  return type metadata accessor for DeviceDetailsController();
}

uint64_t sub_23B98F4C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DeviceDetailsController.State(319);
  if (v1 <= 0x3F)
  {
    result = sub_23BB88A50();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DeviceDetailsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceDetailsController.__allocating_init(deviceIdentifier:initialState:dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_23B98F57C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;

  v2 = sub_23BB8B300();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59570);
    v12 = sub_23BB8ADF0();
    v13 = 0;
    v14 = *(unsigned __int8 *)(v3 + 80);
    v30 = v11;
    v31 = a1 + ((v14 + 32) & ~v14);
    v15 = *(_QWORD *)(v3 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v34 = v12 + 56;
    while (1)
    {
      v32 = v13;
      v33(v10, v31 + v15 * v13, v2);
      sub_23B97D0C8(&qword_256A59578, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0A50], MEMORY[0x24BDD0A60]);
      v16 = sub_23BB8A70C();
      v17 = ~(-1 << *(_BYTE *)(v12 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v33(v7, *(_QWORD *)(v12 + 48) + v18 * v15, v2);
          sub_23B97D0C8(&qword_256A59580, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0A50], MEMORY[0x24BDD0A68]);
          v22 = sub_23BB8A760();
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v7, v2);
          if ((v22 & 1) != 0)
          {
            v24(v10, v2);
            v3 = v23;
            v11 = v30;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v11 = v30;
      }
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v12 + 48) + v18 * v15, v10, v2);
      v26 = *(_QWORD *)(v12 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v12 + 16) = v28;
LABEL_4:
      v13 = v32 + 1;
      if (v32 + 1 == v11)
        return v12;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23B98F7E4(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C8);
    sub_23BB8ADF0();
    LODWORD(v1) = *(unsigned __int16 *)(v1 + 48);
    sub_23BB8B240();
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23B98FC9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A595E8);
    v3 = sub_23BB8ADF0();
    v4 = 0;
    v5 = v3 + 56;
    v24 = v1;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 24 * v4);
      v8 = *v6;
      v7 = v6[1];
      v9 = *((unsigned __int8 *)v6 + 16);
      sub_23BB8B240();
      if (v7)
      {
        sub_23BB8B24C();
        swift_bridgeObjectRetain_n();
        sub_23BB8A808();
        swift_bridgeObjectRelease();
      }
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v11 = ~(-1 << *(_BYTE *)(v3 + 32));
      v12 = result & v11;
      v13 = (result & (unint64_t)v11) >> 6;
      v14 = *(_QWORD *)(v5 + 8 * v13);
      v15 = 1 << (result & v11);
      if ((v15 & v14) != 0)
      {
        do
        {
          v16 = *(_QWORD *)(v3 + 48) + 24 * v12;
          v17 = *(_QWORD *)(v16 + 8);
          if (v17)
          {
            if (v7)
            {
              result = *(_QWORD *)v16;
              v18 = *(unsigned __int8 *)(v16 + 16);
              v19 = *(_QWORD *)v16 == v8 && v17 == v7;
              if (v19 || (result = sub_23BB8B1A4(), (result & 1) != 0))
              {
                if (v18 == v9)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_4;
                }
              }
            }
          }
          else if (!v7)
          {
            swift_bridgeObjectRelease_n();
LABEL_4:
            v1 = v24;
            goto LABEL_5;
          }
          v12 = (v12 + 1) & v11;
          v13 = v12 >> 6;
          v14 = *(_QWORD *)(v5 + 8 * (v12 >> 6));
          v15 = 1 << v12;
        }
        while ((v14 & (1 << v12)) != 0);
        v1 = v24;
      }
      *(_QWORD *)(v5 + 8 * v13) = v15 | v14;
      v20 = *(_QWORD *)(v3 + 48) + 24 * v12;
      *(_QWORD *)v20 = v8;
      *(_QWORD *)(v20 + 8) = v7;
      *(_BYTE *)(v20 + 16) = v9;
      v21 = *(_QWORD *)(v3 + 16);
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        break;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_5:
      if (++v4 == v1)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23B98FE88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;

  v2 = sub_23BB897F4();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59558);
    v12 = sub_23BB8ADF0();
    v13 = 0;
    v14 = *(unsigned __int8 *)(v3 + 80);
    v30 = v11;
    v31 = a1 + ((v14 + 32) & ~v14);
    v15 = *(_QWORD *)(v3 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v34 = v12 + 56;
    while (1)
    {
      v32 = v13;
      v33(v10, v31 + v15 * v13, v2);
      sub_23B97D0C8(&qword_256A59560, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEB10], MEMORY[0x24BDEEB20]);
      v16 = sub_23BB8A70C();
      v17 = ~(-1 << *(_BYTE *)(v12 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v33(v7, *(_QWORD *)(v12 + 48) + v18 * v15, v2);
          sub_23B97D0C8(&qword_256A59568, (uint64_t (*)(uint64_t))MEMORY[0x24BDEEB10], MEMORY[0x24BDEEB28]);
          v22 = sub_23BB8A760();
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v7, v2);
          if ((v22 & 1) != 0)
          {
            v24(v10, v2);
            v3 = v23;
            v11 = v30;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v11 = v30;
      }
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v12 + 48) + v18 * v15, v10, v2);
      v26 = *(_QWORD *)(v12 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v12 + 16) = v28;
LABEL_4:
      v13 = v32 + 1;
      if (v32 + 1 == v11)
        return v12;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

unint64_t sub_23B9900F8()
{
  unint64_t result;

  result = qword_256A59598;
  if (!qword_256A59598)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for ContactsProvider.Subscription, &type metadata for ContactsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A59598);
  }
  return result;
}

uint64_t sub_23B99013C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A595C0);
    v3 = sub_23BB8ADF0();
    v4 = 0;
    v5 = v3 + 56;
    v28 = v1;
    v29 = a1 + 32;
    v27 = v3;
    while (1)
    {
      v30 = v4;
      v6 = (uint64_t *)(v29 + 24 * v4);
      v8 = *v6;
      v7 = v6[1];
      v9 = *((unsigned __int8 *)v6 + 16);
      v10 = *((unsigned __int8 *)v6 + 17);
      sub_23BB8B240();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      sub_23BB8B24C();
      swift_bridgeObjectRelease();
      sub_23BB8B24C();
      result = sub_23BB8B270();
      v12 = ~(-1 << *(_BYTE *)(v3 + 32));
      v13 = result & v12;
      v14 = (result & (unint64_t)v12) >> 6;
      v15 = *(_QWORD *)(v5 + 8 * v14);
      v16 = 1 << (result & v12);
      v17 = *(_QWORD *)(v3 + 48);
      if ((v16 & v15) != 0)
      {
        do
        {
          v18 = v17 + 24 * v13;
          result = *(_QWORD *)v18;
          v19 = *(unsigned __int8 *)(v18 + 16);
          v20 = *(unsigned __int8 *)(v18 + 17);
          v21 = *(_QWORD *)v18 == v8 && *(_QWORD *)(v18 + 8) == v7;
          if (v21 || (result = sub_23BB8B1A4(), (result & 1) != 0))
          {
            if (v19 == v9 && v20 == v10)
            {
              swift_bridgeObjectRelease();
              v3 = v27;
              v1 = v28;
              goto LABEL_4;
            }
          }
          v13 = (v13 + 1) & v12;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v5 + 8 * (v13 >> 6));
          v16 = 1 << v13;
        }
        while ((v15 & (1 << v13)) != 0);
        v3 = v27;
        v1 = v28;
        v17 = *(_QWORD *)(v27 + 48);
      }
      *(_QWORD *)(v5 + 8 * v14) = v16 | v15;
      v23 = v17 + 24 * v13;
      *(_QWORD *)v23 = v8;
      *(_QWORD *)(v23 + 8) = v7;
      *(_BYTE *)(v23 + 16) = v9;
      *(_BYTE *)(v23 + 17) = v10;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      v4 = v30 + 1;
      if (v30 + 1 == v1)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23B99031C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A595A0);
    v3 = sub_23BB8ADF0();
    v4 = 0;
    v29 = v3 + 56;
    v26 = v1;
    v27 = a1 + 32;
    while (1)
    {
      v5 = (uint64_t *)(v27 + 24 * v4);
      v7 = *v5;
      v6 = v5[1];
      v8 = *((char *)v5 + 16);
      sub_23BB8B240();
      sub_23BB8B24C();
      if (v8 < 0)
      {
        swift_bridgeObjectRetain();
        sub_23BB8A808();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        sub_23BB8A808();
        sub_23B9894DC();
        sub_23BB8B24C();
      }
      result = sub_23BB8B270();
      v10 = ~(-1 << *(_BYTE *)(v3 + 32));
      v11 = result & v10;
      v12 = (result & (unint64_t)v10) >> 6;
      v13 = *(_QWORD *)(v29 + 8 * v12);
      v14 = 1 << (result & v10);
      if ((v14 & v13) != 0)
        break;
LABEL_30:
      *(_QWORD *)(v29 + 8 * v12) = v14 | v13;
      v22 = *(_QWORD *)(v3 + 48) + 24 * v11;
      *(_QWORD *)v22 = v7;
      *(_QWORD *)(v22 + 8) = v6;
      *(_BYTE *)(v22 + 16) = v8;
      v23 = *(_QWORD *)(v3 + 16);
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v25;
LABEL_5:
      if (++v4 == v1)
        return v3;
    }
    v28 = v4;
    while (1)
    {
      v15 = *(_QWORD *)(v3 + 48) + 24 * v11;
      v17 = *(_QWORD *)v15;
      v16 = *(_QWORD *)(v15 + 8);
      v18 = *(char *)(v15 + 16);
      if (v18 < 0)
      {
        if (v8 < 0)
        {
          if (v17 == v7 && v16 == v6)
          {
            sub_23B9894D4();
            sub_23B9894D4();
            sub_23B9894DC();
            sub_23B9894DC();
LABEL_4:
            sub_23B9894DC();
            v1 = v26;
            v4 = v28;
            goto LABEL_5;
          }
          v21 = sub_23BB8B1A4();
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          result = sub_23B9894DC();
          if ((v21 & 1) != 0)
            goto LABEL_4;
          goto LABEL_13;
        }
      }
      else if ((v8 & 0x80000000) == 0)
      {
        v19 = v17 == v7 && v16 == v6;
        if (v19 || (sub_23BB8B1A4() & 1) != 0)
        {
          sub_23B9894D4();
          sub_23B9894D4();
          sub_23B9894DC();
          result = sub_23B9894DC();
          if (v18 == v8)
            goto LABEL_4;
          goto LABEL_13;
        }
      }
      sub_23B9894D4();
      sub_23B9894D4();
      sub_23B9894DC();
      result = sub_23B9894DC();
LABEL_13:
      v11 = (v11 + 1) & v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v29 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if ((v13 & (1 << v11)) == 0)
      {
        v1 = v26;
        v4 = v28;
        goto LABEL_30;
      }
    }
  }
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_23B990690()
{
  unint64_t result;

  result = qword_256A595B8;
  if (!qword_256A595B8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleLocationsProvider.Subscription, &type metadata for PeopleLocationsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A595B8);
  }
  return result;
}

uint64_t sub_23B9906D4(uint64_t a1, uint64_t a2, unsigned __int16 a3)
{
  uint64_t result;

  if ((unsigned __int16)(a3 >> 14) <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23B9906EC(uint64_t a1, uint64_t a2, unsigned __int16 a3)
{
  uint64_t result;

  if ((unsigned __int16)(a3 >> 14) <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_23B99070C()
{
  unint64_t result;

  result = qword_256A595E0;
  if (!qword_256A595E0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PeopleRelationshipsProvider.Subscription, &type metadata for PeopleRelationshipsProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A595E0);
  }
  return result;
}

unint64_t sub_23B990770()
{
  unint64_t result;

  result = qword_256A59618;
  if (!qword_256A59618)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for UserLocationProvider.Subscription, &type metadata for UserLocationProvider.Subscription);
    atomic_store(result, (unint64_t *)&qword_256A59618);
  }
  return result;
}

unint64_t sub_23B9907B4()
{
  unint64_t result;

  result = qword_256A59630;
  if (!qword_256A59630)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for BeaconsInfoProvider.BeaconsSubscription, &type metadata for BeaconsInfoProvider.BeaconsSubscription);
    atomic_store(result, (unint64_t *)&qword_256A59630);
  }
  return result;
}

uint64_t sub_23B9907F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B990838()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B99085C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B97C964;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A5E7C0 + dword_256A5E7C0))(a1, v4);
}

uint64_t (*sub_23B9908D0())()
{
  swift_allocObject();
  swift_weakInit();
  return sub_23B990C68;
}

uint64_t sub_23B990918()
{
  uint64_t v0;

  return sub_23B98A344(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23B990938(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 216) >> 6) & 1;
}

uint64_t sub_23B990944(uint64_t result)
{
  *(_BYTE *)(result + 216) &= ~0x40u;
  return result;
}

uint64_t sub_23B990954(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 216);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    v4);
  return a1;
}

uint64_t sub_23B9909D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t result;

  if ((a28 & 0x40) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B990B20(a5);
    return sub_23B990BAC(a22, a23, a24, a25, a26, a27, a28 & 0xBF);
  }
  return result;
}

void *sub_23B990B20(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B990BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a7 & 0x80) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B990C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceDetailsController.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B990C44()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B990C68()
{
  return sub_23B98C5E8();
}

uint64_t sub_23B990C70()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B990C9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B97C964;
  return sub_23B98C728(a1, v4, v5, v6);
}

uint64_t sub_23B990D24(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23B990D6C()
{
  return sub_23B990918();
}

uint64_t static UserLocationProvider.live(customEffectiveBundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23BB891C4();
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 + 64);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  sub_23BB8A9F4();
  v3[10] = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

id sub_23B990E2C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(unint64_t, unint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_23BB891B8();
  if (v1)
  {
    v2 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v3 = objc_msgSend(v2, sel_mainBundle);
    v4 = objc_msgSend(v3, sel_bundleIdentifier);

    if (v4)
    {
      v6 = *(_QWORD *)(v0 + 24);
      v5 = *(_QWORD *)(v0 + 32);
      v7 = sub_23BB8A7B4();
      v9 = v8;

      if (v7 == v6 && v5 == v9)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      v11 = sub_23BB8B1A4();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
LABEL_11:
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    v12 = objc_msgSend(objc_allocWithZone((Class)_s14descr250CAA801O24MockCoreLocationDelegateCMa()), sel_init);
    sub_23B99231C();
    v13 = (void *)sub_23BB8AC28();
    v14 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
    v15 = (void *)sub_23BB8A784();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v14, sel_initWithEffectiveBundleIdentifier_delegate_onQueue_, v15, v12, v13);

    if (v16)
    {
LABEL_13:
      v18 = *(_QWORD *)(v0 + 64);
      v19 = *(_QWORD *)(v0 + 48);
      v20 = *(_QWORD *)(v0 + 40);
      v21 = *(_QWORD **)(v0 + 16);
      v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v19 + 32);
      v22(v18, *(_QWORD *)(v0 + 72), v20);
      v23 = (*(unsigned __int8 *)(v19 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = v16;
      v22(v24 + v23, v18, v20);
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v16;
      *v21 = &unk_256A59680;
      v21[1] = v24;
      v21[2] = sub_23B9922D4;
      v21[3] = v25;
      v26 = v16;
      swift_task_dealloc();
      swift_task_dealloc();
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  result = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
  v16 = result;
  if (result)
    goto LABEL_13;
  __break(1u);
  return result;
}

uint64_t sub_23B9910C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_23BB891C4();
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(_QWORD *)(v5 + 64);
  v3[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v3[9] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596C0);
  v3[10] = v6;
  v3[11] = *(_QWORD *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A596C8) - 8);
  v3[13] = v7;
  v3[14] = *(_QWORD *)(v7 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v8 = sub_23BB88A68();
  v3[17] = v8;
  v3[18] = *(_QWORD *)(v8 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = sub_23BB88A80();
  v3[21] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596D0);
  v3[22] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[23] = v10;
  v3[24] = *(_QWORD *)(v10 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = sub_23BB8A9F4();
  v3[28] = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23B991280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 208);
  v26 = *(_QWORD *)(v0 + 192);
  v22 = *(_QWORD *)(v0 + 176);
  v23 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 184);
  v21 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 64);
  v27 = *(_QWORD *)(v0 + 48);
  v29 = *(_QWORD *)(v0 + 40);
  v7 = *(void **)(v0 + 24);
  v19 = *(_QWORD *)(v0 + 32);
  swift_release();
  objc_msgSend(v7, sel_requestWhenInUseAuthorization);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BEE5148], v4);
  sub_23BB88A5C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A596E0);
  sub_23B97D0C8(&qword_256A596E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5168], MEMORY[0x24BEE5178]);
  sub_23BB8AF94();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  *(_QWORD *)(swift_task_alloc() + 16) = v5;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v28, *MEMORY[0x24BEE6A10], v18);
  sub_23BB8AA6C();
  swift_task_dealloc();
  v9 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v23, v1, v22);
  sub_23B992360(v5, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v30, v19, v29);
  v10 = sub_23BB8A9E8();
  v11 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v12 = (v26 + *(unsigned __int8 *)(v24 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v13 = (v25 + *(unsigned __int8 *)(v27 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v10;
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v14 + v11, v23, v22);
  sub_23B9924E4(v21, v14 + v12);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32))(v14 + v13, v30, v29);
  sub_23B989F54(v6, (uint64_t)&unk_256A59700, v14);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v22);
  sub_23B989D60(v5, &qword_256A596C8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B991614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23B99162C()
{
  uint64_t v0;
  uint64_t *v1;

  v1 = *(uint64_t **)(v0 + 16);
  *v1 = sub_23BB88A8C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B991660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23B989D60(a2, &qword_256A596C8);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596F0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_23B9916D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A596C8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59708);
  v6[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  v6[15] = swift_task_alloc();
  v7 = sub_23BB88A98();
  v6[16] = v7;
  v6[17] = *(_QWORD *)(v7 - 8);
  v6[18] = swift_task_alloc();
  v6[19] = sub_23BB88A80();
  v6[20] = swift_task_alloc();
  v6[21] = sub_23BB88A74();
  v6[22] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59718);
  v6[23] = v8;
  v6[24] = *(_QWORD *)(v8 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v6[27] = sub_23BB8A9F4();
  v6[28] = sub_23BB8A9E8();
  v6[29] = sub_23BB8A988();
  v6[30] = v9;
  return swift_task_switch();
}

uint64_t sub_23B991870()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A596D0);
  sub_23BB8AF4C();
  sub_23B97D0C8(&qword_256A596E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5168], MEMORY[0x24BEE5178]);
  sub_23BB8AAD8();
  sub_23BB8AF64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A596E0);
  sub_23BB8AF70();
  v1 = sub_23BB8A9E8();
  v0[31] = v1;
  if (v1)
  {
    swift_getObjectType();
    v2 = sub_23BB8A988();
    v4 = v3;
  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  v0[32] = v2;
  v0[33] = v4;
  return swift_task_switch();
}

uint64_t sub_23B991994()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 272) = sub_23BB8AF58();
  sub_23B97D0C8(&qword_256A59720, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5158], MEMORY[0x24BEE5160]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v1;
  *v1 = v0;
  v1[1] = sub_23B991A44;
  return sub_23BB8A9D0();
}

uint64_t sub_23B991A44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 272))(v2 + 16, 0);
  return swift_task_switch();
}

uint64_t sub_23B991AB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;

  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23B989D60(v3, &qword_256A59710);
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v6 = v0[25];
    v5 = v0[26];
    v7 = v0[23];
    v8 = v0[24];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[18], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    v9 = (int *)sub_23BB8AF64();
    v0[37] = v10;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v12 = (int *)((char *)v9 + *v9);
    v11 = (_QWORD *)swift_task_alloc();
    v0[38] = v11;
    *v11 = v0;
    v11[1] = sub_23B991DF4;
    return ((uint64_t (*)(_QWORD *, _QWORD))v12)(v0 + 7, v0[18]);
  }
}

uint64_t sub_23B991BF8()
{
  _QWORD *v0;
  void (*v1)(_QWORD *, uint64_t);

  v1 = (void (*)(_QWORD *, uint64_t))v0[34];
  v0[36] = v0[6];
  v1(v0 + 2, 1);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B991C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  void *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 288);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23B979000, v4, v5, "UserLocationProvider: live() failed to get element from originalStream", v8, 2u);
    MEMORY[0x24260D9B4](v8, -1, -1);
  }

  v9 = *(_QWORD *)(v0 + 96);
  sub_23B992360(*(_QWORD *)(v0 + 80), v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596F0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  v13 = *(_QWORD *)(v0 + 96);
  if (v12 == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 96), &qword_256A596C8);
  }
  else
  {
    sub_23BB8AA48();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B991DF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 136);
  v2 = *(_QWORD *)(*v0 + 144);
  v4 = *(_QWORD *)(*v0 + 128);
  swift_task_dealloc();
  swift_release();
  *(_QWORD *)(v1 + 312) = *(_QWORD *)(v1 + 56);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23B991E78()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B991EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 104);
  sub_23B992360(*(_QWORD *)(v0 + 80), v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596F0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);

    sub_23B989D60(v4, &qword_256A596C8);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59728);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  }
  else
  {
    v7 = *(void **)(v0 + 312);
    *(_QWORD *)(v0 + 64) = v7;
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v10 = v7;
    sub_23BB8AA3C();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9, v2);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59728);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 0, 1, v11);
  }
  sub_23B989D60(*(_QWORD *)(v0 + 112), &qword_256A59708);
  v12 = sub_23BB8A9E8();
  *(_QWORD *)(v0 + 248) = v12;
  if (v12)
  {
    swift_getObjectType();
    v13 = sub_23BB8A988();
    v15 = v14;
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  *(_QWORD *)(v0 + 256) = v13;
  *(_QWORD *)(v0 + 264) = v15;
  return swift_task_switch();
}

uint64_t sub_23B992024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
  swift_release();
  v1 = *(_QWORD *)(v0 + 96);
  sub_23B992360(*(_QWORD *)(v0 + 80), v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596F0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 96);
  if (v4 == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 96), &qword_256A596C8);
  }
  else
  {
    sub_23BB8AA48();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23B992188()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23B9921BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB891C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B992230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = v1 + ((v4 + 24) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B97C964;
  return sub_23B9910C8(a1, v5, v6);
}

uint64_t sub_23B9922B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23B9922D4()
{
  uint64_t v0;

  return sub_23B99AD3C((uint64_t)objc_msgSend(*(id *)(v0 + 16), sel_authorizationStatus), (uint64_t)&unk_250CA9928);
}

uint64_t _s14descr250CAA801O24MockCoreLocationDelegateCMa()
{
  return objc_opt_self();
}

unint64_t sub_23B99231C()
{
  unint64_t result;

  result = qword_256A59688;
  if (!qword_256A59688)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A59688);
  }
  return result;
}

uint64_t sub_23B992358(uint64_t a1)
{
  uint64_t v1;

  return sub_23B991660(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23B992360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B9923A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596D0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A596C8) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = *(_QWORD *)(v5 + 64);
  v7 = sub_23BB891C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596F0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v6, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v6, v10);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + ((v6 + v13 + v9) & ~v9), v7);
  return swift_deallocObject();
}

uint64_t sub_23B9924E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A596C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B99252C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A596D0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A596C8) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v1 + v5;
  v15 = v1 + v8;
  v16 = v1 + (v11 & ~v10);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_23B990D68;
  return sub_23B9916D4(a1, v12, v13, v14, v15, v16);
}

id UserLocationProvider.data.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;

  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v3 = *(void **)(v1 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  *a1 = v3;
  return v3;
}

uint64_t UserLocationProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  return sub_23B992F24(v3, a1);
}

uint64_t sub_23B992724@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  return sub_23B992F24(v4, a2);
}

uint64_t sub_23B9927BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23B992F24(a1, (uint64_t)v7);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23B992E98();
  sub_23BB88A14();
  swift_release();
  return sub_23B992F84((uint64_t)v7);
}

uint64_t UserLocationProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A14();
  swift_release();
  return sub_23B992F84(a1);
}

uint64_t sub_23B99292C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  sub_23B99497C(a2, v3);
  return swift_endAccess();
}

void (*UserLocationProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23B992A78;
}

void sub_23B992A78(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t sub_23B992AE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;

  v1 = v0;
  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v23 = v0;
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v7 = &v0[OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v7, v2);
  swift_retain_n();
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABEC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v20 = v2;
    v11 = (uint8_t *)v10;
    v18 = swift_slowAlloc();
    v22 = v18;
    v19 = v3;
    *(_DWORD *)v11 = 136315138;
    v17[1] = v11 + 4;
    swift_getKeyPath();
    v21 = v1;
    sub_23BB88A20();
    swift_release();
    v21 = *(id *)&v1[OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data];
    v12 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A596E0);
    v13 = sub_23BB8A7D8();
    v21 = (id)sub_23BB7B69C(v13, v14, &v22);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v8, v9, "UserLocationProvider: data - %s", v11, 0xCu);
    v15 = v18;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

id sub_23B992D78@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v4 = *(void **)(v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  *a2 = v4;
  return v4;
}

void sub_23B992DF8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_23B992E98();
  v2 = v1;
  sub_23BB88A14();
  swift_release();

}

unint64_t sub_23B992E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A595F8;
  if (!qword_256A595F8)
  {
    v1 = type metadata accessor for UserLocationProvider();
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for UserLocationProvider, v1);
    atomic_store(result, (unint64_t *)&qword_256A595F8);
  }
  return result;
}

uint64_t type metadata accessor for UserLocationProvider()
{
  uint64_t result;

  result = qword_256A59800;
  if (!qword_256A59800)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B992F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B992F6C()
{
  uint64_t v0;

  return sub_23B99292C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23B992F84(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Bool __swiftcall UserLocationProvider.isLocationManagerUseAuthorized()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t sub_23B992FE8()
{
  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  return swift_retain();
}

uint64_t sub_23B993060@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__valuePublisher);
  return swift_retain();
}

uint64_t sub_23B9930E0()
{
  swift_getKeyPath();
  sub_23B992E98();
  swift_retain();
  sub_23BB88A14();
  swift_release();
  return swift_release();
}

uint64_t UserLocationProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  UserLocationProvider.init(dependencies:)(a1);
  return v2;
}

uint64_t UserLocationProvider.init(dependencies:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  __int128 v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v32;
  __int128 v33;
  char *v34;

  v2 = v1;
  v4 = sub_23BB889CC();
  MEMORY[0x24BDAC7A8](v4, v5);
  v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB891C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v32 - v14;
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v18 + 36);
  *(_QWORD *)&v20[v21] = sub_23B97DA7C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v20[v16[10]] = MEMORY[0x24BEE4B08];
  v20[v16[11]] = 0;
  sub_23BB891B8();
  v22 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23 = *a1;
  v32 = a1[1];
  v33 = v23;
  v22(v20, v15, v7);
  v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v24(v12, v15, v7);
  v25 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v26 = swift_allocObject();
  v24((char *)(v26 + v25), v12, v7);
  v27 = (uint64_t (**)())&v20[v16[12]];
  *v27 = sub_23B988EB4;
  v27[1] = (uint64_t (*)())v26;
  sub_23B99452C((uint64_t)v20, v2 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage);
  v28 = OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider_taskQueue;
  v29 = (uint64_t)v34;
  sub_23BB889C0();
  type metadata accessor for SerialTaskQueue(0);
  swift_allocObject();
  *(_QWORD *)(v2 + v28) = sub_23B9C7D14(0xD000000000000019, 0x800000023BB99790, v29);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__valuePublisher) = 0;
  sub_23BB88A44();
  v30 = v32;
  *(_OWORD *)(v2 + 16) = v33;
  *(_OWORD *)(v2 + 32) = v30;
  return v2;
}

uint64_t sub_23B99344C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[6] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A598D0);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 + 64);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = sub_23BB8A9F4();
  v1[13] = sub_23BB8A9E8();
  v1[14] = sub_23BB8A988();
  v1[15] = v4;
  return swift_task_switch();
}

uint64_t sub_23B993520()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v1 = v0[5];
  swift_getKeyPath();
  v2 = OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider___observationRegistrar;
  v0[2] = v1;
  v0[16] = v2;
  v0[17] = sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__valuePublisher))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  v3 = v0[5];
  swift_getKeyPath();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  v0[3] = v3;
  sub_23BB88A14();
  v0[18] = 0;
  swift_release();
  swift_task_dealloc();
  v7 = (uint64_t (*)(_QWORD))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  v0[19] = v5;
  *v5 = v0;
  v5[1] = sub_23B993684;
  return v7(v0[11]);
}

uint64_t sub_23B993684()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9936D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v20 = v5;
  v6 = *(_QWORD *)(v0 + 40);
  swift_release();
  v7 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = v3;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v11 = v2;
  v10(v2, v1, v4);
  swift_retain();
  v12 = sub_23BB8A9E8();
  v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v13, v11, v4);
  *(_QWORD *)(v14 + ((v19 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  v16 = sub_23B989F54(v20, (uint64_t)&unk_256A598E0, v14);
  swift_getKeyPath();
  v17 = swift_task_alloc();
  *(_QWORD *)(v17 + 16) = v6;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(v0 + 32) = v6;
  sub_23BB88A14();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9938D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[12] = a4;
  v5[13] = a5;
  v6 = sub_23BB891C4();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A598E8);
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = sub_23BB8A9F4();
  v5[21] = sub_23BB8A9E8();
  v5[22] = sub_23BB8A988();
  v5[23] = v8;
  return swift_task_switch();
}

uint64_t sub_23B993998()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A598D0);
  sub_23BB8AA54();
  swift_beginAccess();
  v0[24] = 0;
  v0[25] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[26] = v1;
  *v1 = v0;
  v1[1] = sub_23B993A5C;
  return sub_23BB8AA60();
}

uint64_t sub_23B993A5C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B993AB0()
{
  uint64_t v0;
  void *v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 64);
  if (v1 == (void *)1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
LABEL_7:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    sub_23B994958(v1);
    goto LABEL_7;
  }
  v3 = Strong;
  v5 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v26 = *(_QWORD *)(v0 + 112);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 72) = v3;
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v6 = v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v6, v26);
  v7 = v1;
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABEC();
  v10 = os_log_type_enabled(v8, v9);
  v12 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 112);
  if (v10)
  {
    v27 = *(_QWORD *)(v0 + 120);
    v25 = *(_QWORD *)(v0 + 128);
    v14 = swift_slowAlloc();
    v24 = v13;
    v15 = swift_slowAlloc();
    v28 = v15;
    *(_DWORD *)v14 = 136315138;
    *(_QWORD *)(v0 + 88) = v1;
    v16 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A596E0);
    v17 = sub_23BB8A7D8();
    *(_QWORD *)(v14 + 4) = sub_23BB7B69C(v17, v18, &v28);
    swift_bridgeObjectRelease();
    sub_23B994958(v1);
    sub_23B994958(v1);
    _os_log_impl(&dword_23B979000, v8, v9, "UserLocationProvider: change - %s", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v24);
  }
  else
  {
    sub_23B994958(v1);
    sub_23B994958(v1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  v20 = *(_QWORD *)(v0 + 192);
  swift_getKeyPath();
  v21 = swift_task_alloc();
  *(_QWORD *)(v21 + 16) = v3;
  *(_QWORD *)(v21 + 24) = v1;
  *(_QWORD *)(v0 + 80) = v3;
  v22 = v7;
  sub_23BB88A14();
  sub_23B994958(v1);
  swift_release();
  sub_23B994958(v1);
  swift_release();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 192) = v20;
  *(_QWORD *)(v0 + 200) = sub_23BB8A9E8();
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v23;
  *v23 = v0;
  v23[1] = sub_23B993A5C;
  return sub_23BB8AA60();
}

uint64_t UserLocationProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:)(uint64_t a1, char a2)
{
  return sub_23B993EC8(a1, a2, (uint64_t)&unk_250CAA840, (uint64_t)&unk_256A59760);
}

uint64_t sub_23B993E54(char a1)
{
  uint64_t v1;
  _QWORD *v2;

  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(void))(v1 + 8))();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23B990D68;
  return sub_23B99344C();
}

uint64_t UserLocationProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(uint64_t a1, char a2)
{
  return sub_23B993EC8(a1, a2, (uint64_t)&unk_250CAA868, (uint64_t)&unk_256A59770);
}

uint64_t sub_23B993EC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = swift_allocObject();
  *(_BYTE *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = v4;
  swift_retain();
  sub_23B9C7824(a4, v7);
  return swift_release();
}

uint64_t sub_23B993F3C(char a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a2;
  *(_BYTE *)(v2 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_23B993F58()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40) != 1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  sub_23BB8A9F4();
  *(_QWORD *)(v0 + 32) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23B993FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 16) = v1;
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__valuePublisher))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  v2 = *(_QWORD *)(v0 + 24);
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v0 + 16) = v2;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t UserLocationProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23B992F84(v0 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage);
  swift_release();

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t UserLocationProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_23B992F84(v0 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage);
  swift_release();

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23B994244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__storage;
  swift_beginAccess();
  return sub_23B992F24(v3, a1);
}

uint64_t sub_23B9942DC(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A14();
  swift_release();
  return sub_23B992F84(a1);
}

void (*sub_23B994370(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UserLocationProvider.storage.modify(v2);
  return sub_23B98479C;
}

uint64_t sub_23B9943B4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_23B9943DC(a1, a2, a3, a4, (uint64_t)&unk_250CAA8D8, (uint64_t)&unk_256A598C0);
}

uint64_t sub_23B9943C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_23B9943DC(a1, a2, a3, a4, (uint64_t)&unk_250CAA8B0, (uint64_t)&unk_256A598B8);
}

uint64_t sub_23B9943DC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v9;

  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = v6;
  swift_retain();
  sub_23B9C7824(a6, v9);
  return swift_release();
}

id sub_23B994450@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;

  v3 = *v1;
  swift_getKeyPath();
  sub_23B992E98();
  sub_23BB88A20();
  swift_release();
  v4 = *(void **)(v3 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  *a1 = v4;
  return v4;
}

uint64_t sub_23B9944CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23B99452C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B994574()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B990D68;
  return sub_23B993E54(v2);
}

uint64_t sub_23B9945C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9945EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23B990D68;
  *(_QWORD *)(v4 + 24) = v3;
  *(_BYTE *)(v4 + 40) = v2;
  return swift_task_switch();
}

unint64_t sub_23B994658(uint64_t a1)
{
  unint64_t result;

  result = sub_23B992E98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23B99467C()
{
  return type metadata accessor for UserLocationProvider();
}

void sub_23B994684()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B994744(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for UserLocationProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserLocationProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void sub_23B994744(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A59810)
  {
    v2 = sub_23B990770();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for UserLocationProvider.Subscription, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A59810);
  }
}

uint64_t sub_23B9947A4()
{
  return sub_23B994918();
}

uint64_t sub_23B9947B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B9947DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A598D0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B994870(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A598D0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B97C964;
  return sub_23B9938D4(a1, v6, v7, v8, v9);
}

uint64_t sub_23B994918()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__valuePublisher) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void sub_23B994958(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_23B994968()
{
  return sub_23B9949C4();
}

uint64_t sub_23B99497C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B9949C4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  v3 = *(void **)(v2 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data) = v1;
  v4 = v1;

  return sub_23B992AE0();
}

uint64_t sub_23B994A1C()
{
  return sub_23B992F6C();
}

id sub_23B994A30()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LocationServicesDisabledView.ViewModel()), sel_init);
}

uint64_t sub_23B994A54@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  void (**v30)();
  void *v31;
  int v32;
  uint64_t v33;
  uint64_t ObjCClassFromMetadata;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  __int128 v64;
  int v65;
  char v66;
  unsigned __int8 v67;
  __int128 v68;

  v2 = v1;
  v63 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59948);
  v55 = *(uint64_t **)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59950);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59958);
  MEMORY[0x24BDAC7A8](v59, v11);
  v60 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59960);
  v61 = *(_QWORD *)(v13 - 8);
  v62 = v13;
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v58 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v57 = (char *)&v53 - v18;
  v19 = *(_QWORD *)v1;
  v20 = *(void **)(v1 + 8);
  v21 = *(_BYTE *)(v1 + 16);
  v22 = type metadata accessor for LocationServicesDisabledView.ViewModel();
  sub_23B97D0C8(&qword_256A59968, (uint64_t (*)(uint64_t))type metadata accessor for LocationServicesDisabledView.ViewModel, (uint64_t)&unk_23BB8C9B0);
  v54 = v22;
  v23 = (void *)sub_23BB89308();
  v24 = sub_23B994FF8();

  if ((v24 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v63, 1, 1, v62);
  sub_23B99508C((uint64_t)v6);
  v68 = *(_OWORD *)(v2 + 24);
  v25 = swift_allocObject();
  v26 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v25 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 48) = *(_QWORD *)(v2 + 32);
  v53 = v2;
  v27 = v6;
  v29 = v55;
  v28 = v56;
  ((void (*)(char *, char *, uint64_t))v55[2])(v10, v27, v56);
  v30 = (void (**)())&v10[*(int *)(v7 + 36)];
  *v30 = sub_23B996688;
  v30[1] = (void (*)())v25;
  v30[2] = 0;
  v30[3] = 0;
  sub_23B996364(v19, v20, v21);
  sub_23B996690((uint64_t)&v68);
  ((void (*)(char *, uint64_t))v29[1])(v27, v28);
  v31 = (void *)sub_23BB89308();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();

  swift_release();
  swift_release();
  if (v66)
    v32 = 0x7FFFFFFF;
  else
    v32 = v65;
  v33 = v60;
  sub_23B989EFC((uint64_t)v10, v60, &qword_256A59950);
  *(_DWORD *)(v33 + *(int *)(v59 + 52)) = v32;
  sub_23B989D60((uint64_t)v10, &qword_256A59950);
  sub_23BB897D0();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v35 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v36 = sub_23BB89D1C();
  v38 = v37;
  v56 = v39;
  LOBYTE(ObjCClassFromMetadata) = v40 & 1;
  v64 = v68;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  v41 = sub_23BB8A0E8();
  v55 = &v53;
  LODWORD(v54) = v67;
  v43 = MEMORY[0x24BDAC7A8](v41, v42);
  MEMORY[0x24BDAC7A8](v43, v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59978);
  sub_23B996E1C(&qword_256A59980, &qword_256A59958, MEMORY[0x24BDF44C8]);
  sub_23B996E1C(&qword_256A59988, &qword_256A59978, MEMORY[0x24BDF5428]);
  v45 = v58;
  v46 = v60;
  sub_23BB89E90();
  swift_release();
  swift_release();
  sub_23B9967D0(v36, v38, ObjCClassFromMetadata);
  swift_bridgeObjectRelease();
  sub_23B989D60(v46, &qword_256A59958);
  v48 = v61;
  v47 = v62;
  v49 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  v50 = v57;
  v49(v57, v45, v62);
  v51 = v63;
  v49(v63, v50, v47);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v51, 0, 1, v47);
}

uint64_t sub_23B994FF8()
{
  char v0;
  unsigned int v2;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  if ((v3 & 1) != 0)
    v0 = 0;
  else
    v0 = sub_23B99AD3C(v2, (uint64_t)&unk_250CA9950) ^ 1;
  return v0 & 1;
}

uint64_t sub_23B99508C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t result;
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __int128 v60;
  __int128 v61;
  char v62;

  v51[1] = a1;
  v51[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v51[0], v2);
  v59 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v58, v4);
  v57 = (uint64_t)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB89F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for CustomControlStyle(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (_QWORD *)((char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C8);
  v56 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v15);
  v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599D0);
  v54 = *(_QWORD *)(v18 - 8);
  v55 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599D8);
  MEMORY[0x24BDAC7A8](v52, v22);
  v24 = (char *)v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v1;
  v62 = *((_BYTE *)v1 + 16);
  v60 = *(__int128 *)((char *)v1 + 24);
  v61 = v25;
  v26 = swift_allocObject();
  v27 = v1[1];
  *(_OWORD *)(v26 + 16) = *v1;
  *(_OWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 48) = *((_QWORD *)v1 + 4);
  sub_23B996AB8((uint64_t)&v61);
  sub_23B996690((uint64_t)&v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A599E0);
  sub_23B996AE8();
  sub_23BB8A10C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BDF3C28], v6);
  v28 = MEMORY[0x24260BF74](v10, 0.5, 0.5, 0.5, 1.0);
  v29 = MEMORY[0x24BDF3E18];
  v14[3] = MEMORY[0x24BDF3E48];
  v14[4] = v29;
  *v14 = v28;
  sub_23BB89C08();
  sub_23BB89C20();
  v30 = sub_23BB89C50();
  swift_release();
  v31 = (char *)v14 + v11[6];
  v32 = *MEMORY[0x24BDF5098];
  v33 = sub_23BB8A334();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
  v34 = (char *)v14 + v11[7];
  *(_QWORD *)v34 = sub_23B995E08;
  *((_QWORD *)v34 + 1) = 0;
  v34[40] = 1;
  v35 = (char *)v14 + v11[8];
  v36 = *MEMORY[0x24BDEB498];
  v37 = sub_23BB892F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  swift_storeEnumTagMultiPayload();
  v14[5] = v30;
  *((_BYTE *)v14 + v11[9]) = 2;
  *((_BYTE *)v14 + v11[10]) = 0;
  v38 = (char *)v14 + v11[11];
  *(_QWORD *)v38 = 0;
  v38[8] = 1;
  v39 = v52;
  v40 = v57;
  sub_23B996BD8((uint64_t)v14, v57);
  sub_23B996E1C(&qword_256A59A10, &qword_256A599C8, MEMORY[0x24BDF43B0]);
  sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
  v41 = v53;
  sub_23BB89D94();
  sub_23B989D9C(v40, type metadata accessor for CustomButtonStyle);
  sub_23B989D9C((uint64_t)v14, type metadata accessor for CustomControlStyle);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v41);
  KeyPath = swift_getKeyPath();
  v44 = v54;
  v43 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v24, v21, v55);
  v45 = &v24[*(int *)(v39 + 36)];
  *(_QWORD *)v45 = KeyPath;
  *((_QWORD *)v45 + 1) = 2;
  v46 = (uint64_t)v59;
  v45[16] = 0;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v43);
  v47 = *MEMORY[0x24BDECEA0];
  v48 = sub_23BB894A0();
  v49 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v46, v47, v48);
  sub_23B97D0C8((unint64_t *)&qword_256A59A20, v49, MEMORY[0x24BDECF78]);
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    sub_23B996C78();
    sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    sub_23BB89DF4();
    sub_23B989D60(v46, &qword_256A599C0);
    return sub_23B989D60((uint64_t)v24, &qword_256A599D8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23B9955F0()
{
  char *v0;

  type metadata accessor for LocationServicesDisabledView.ViewModel();
  sub_23B97D0C8(&qword_256A59968, (uint64_t (*)(uint64_t))type metadata accessor for LocationServicesDisabledView.ViewModel, (uint64_t)&unk_23BB8C9B0);
  v0 = (char *)sub_23BB89308();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCV12FindMyUICore28LocationServicesDisabledView9ViewModel_clLocationManager], sel_requestWhenInUseAuthorization);

}

uint64_t sub_23B995680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v36 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59998);
  v33 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v35 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v34 = (char *)&v31 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v32 = (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v31 - v16;
  type metadata accessor for LocationServicesDisabledView.ViewModel();
  sub_23B97D0C8(&qword_256A59968, (uint64_t (*)(uint64_t))type metadata accessor for LocationServicesDisabledView.ViewModel, (uint64_t)&unk_23BB8C9B0);

  v18 = sub_23BB8929C();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v10, 1, 1, v18);
  v20 = sub_23BB89308();
  *(_QWORD *)(swift_allocObject() + 16) = v20;
  sub_23BB8A100();
  v21 = v33;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v17, 0, 1, v1);
  sub_23BB89290();
  v19(v10, 0, 1, v18);
  v22 = v34;
  sub_23BB8A100();
  v23 = v32;
  sub_23B989EFC((uint64_t)v17, v32, &qword_256A599A8);
  v24 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v25 = v21;
  v26 = v35;
  v24(v35, v22, v1);
  v27 = v36;
  sub_23B989EFC(v23, v36, &qword_256A599A8);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B0);
  v24((char *)(v27 + *(int *)(v28 + 48)), v26, v1);
  v29 = *(void (**)(char *, uint64_t))(v25 + 8);
  v29(v22, v1);
  sub_23B989D60((uint64_t)v17, &qword_256A599A8);
  v29(v26, v1);
  return sub_23B989D60(v23, &qword_256A599A8);
}

uint64_t sub_23B9959AC@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23B9959C8@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23B9959E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23BB897D0();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_23BB89D1C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_23B995AA0@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  type metadata accessor for LocationServicesDisabledView.ViewModel();
  sub_23B97D0C8(&qword_256A59968, (uint64_t (*)(uint64_t))type metadata accessor for LocationServicesDisabledView.ViewModel, (uint64_t)&unk_23BB8C9B0);
  v2 = (void *)sub_23BB89308();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v5 = (void *)sub_23BB8A784();
  v6 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v5, 0, 0);

  sub_23BB8A7B4();
  sub_23B9967E0();
  result = sub_23BB89D28();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_23B995BEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _QWORD v22[2];
  char v23;
  __int128 v24;

  v2 = sub_23BB89788();
  sub_23B995CD8((uint64_t)v22);
  v3 = v22[0];
  v4 = v22[1];
  v5 = v23;
  v21 = v24;
  v6 = sub_23BB89BF0();
  sub_23BB892A8();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = sub_23BB89B9C();
  result = sub_23BB892A8();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = v21;
  *(_BYTE *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = 0;
  *(_BYTE *)(a1 + 112) = v15;
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 144) = v20;
  *(_BYTE *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_23B995CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  sub_23BB897D0();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_23BB89D1C();
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = sub_23BB8A064();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v11;
  sub_23B996E5C(v4, v6, v10);
  swift_bridgeObjectRetain();
  sub_23B9967D0(v4, v6, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B995E08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  char *v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A48);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58C90 != -1)
    swift_once();
  v8 = sub_23BB8A2B0();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_256A5A210);
  v10 = sub_23BB89578();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(&v7[*(int *)(v4 + 52)], v9, v8);
  *(_WORD *)&v7[*(int *)(v4 + 56)] = 256;
  sub_23BB89FBC();
  v11 = sub_23BB8A004();
  swift_release();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A50);
  a2[3] = v12;
  a2[4] = sub_23B996D98();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23B989EFC((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, &qword_256A59A48);
  v14 = (char *)boxed_opaque_existential_1 + *(int *)(v12 + 36);
  *(_QWORD *)v14 = v11;
  *(_OWORD *)(v14 + 8) = xmmword_23BB8C920;
  *((_QWORD *)v14 + 3) = 0x4034000000000000;
  return sub_23B989D60((uint64_t)v7, &qword_256A59A48);
}

unint64_t sub_23B995F90()
{
  unsigned int v1;
  unsigned __int8 v2;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  return v1 | ((unint64_t)v2 << 32);
}

char *sub_23B996010()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v14;
  objc_super v15;
  int v16;
  char v17;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtCV12FindMyUICore28LocationServicesDisabledView9ViewModel_clLocationManager;
  v9 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
  v10 = v1;
  *(_QWORD *)&v1[v8] = objc_msgSend(v9, sel_init);
  v11 = &v10[OBJC_IVAR____TtCV12FindMyUICore28LocationServicesDisabledView9ViewModel__authorizationStatus];
  v16 = 0;
  v17 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59940);
  sub_23BB89224();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v7, v3);

  v15.receiver = v10;
  v15.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v15, sel_init);
  objc_msgSend(*(id *)&v12[OBJC_IVAR____TtCV12FindMyUICore28LocationServicesDisabledView9ViewModel_clLocationManager], sel_setDelegate_, v12);
  return v12;
}

uint64_t sub_23B99624C()
{
  return type metadata accessor for LocationServicesDisabledView.ViewModel();
}

uint64_t type metadata accessor for LocationServicesDisabledView.ViewModel()
{
  uint64_t result;

  result = qword_256A59928;
  if (!qword_256A59928)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23B996290()
{
  unint64_t v0;

  sub_23B99630C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23B99630C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A59938)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59940);
    v0 = sub_23BB89248();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A59938);
  }
}

id sub_23B996364(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

uint64_t destroy for LocationServicesDisabledView(uint64_t a1)
{
  sub_23B9963A4(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  return swift_release();
}

void sub_23B9963A4(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t initializeWithCopy for LocationServicesDisabledView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_23B996364(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LocationServicesDisabledView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_23B996364(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23B9963A4(v7, v8, v9);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LocationServicesDisabledView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(void **)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23B9963A4(v5, v6, v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationServicesDisabledView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationServicesDisabledView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationServicesDisabledView()
{
  return &type metadata for LocationServicesDisabledView;
}

uint64_t sub_23B9965D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9965E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_23BB891E8();
  *a1 = result;
  return result;
}

uint64_t sub_23B996628()
{
  return sub_23BB89DD0();
}

uint64_t sub_23B996640@<X0>(char *a1@<X8>)
{
  return sub_23B994A54(a1);
}

uint64_t sub_23B996678()
{
  return MEMORY[0x24BDB9D70];
}

void sub_23B996688()
{
  sub_23B9955F0();
}

uint64_t sub_23B996690(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_23B9966B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  int v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  result = swift_release();
  *(_DWORD *)a1 = v3;
  *(_BYTE *)(a1 + 4) = v4;
  return result;
}

uint64_t sub_23B996740(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v3 = v2;
  return sub_23BB8923C();
}

uint64_t sub_23B9967C0@<X0>(uint64_t a1@<X8>)
{
  return sub_23B995680(a1);
}

uint64_t sub_23B9967C8@<X0>(uint64_t a1@<X8>)
{
  return sub_23B995AA0(a1);
}

uint64_t sub_23B9967D0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_23B9967E0()
{
  unint64_t result;

  result = qword_256A59990;
  if (!qword_256A59990)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256A59990);
  }
  return result;
}

uint64_t sub_23B996824()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23B99684C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23BB89704();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23B99687C()
{
  return sub_23BB89710();
}

uint64_t sub_23B9968A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB8884C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88840();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_23B989D60((uint64_t)v3, &qword_256A599B8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v10)
  {
    v11 = v10;
    v12 = (void *)sub_23BB88828();
    v13 = (void *)sub_23BB8A6B8();
    objc_msgSend(v11, sel_openSensitiveURL_withOptions_, v12, v13);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  sub_23B9963A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B996A6C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

uint64_t sub_23B996AB8(uint64_t a1)
{
  sub_23B996364(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

unint64_t sub_23B996AE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A599E8;
  if (!qword_256A599E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599E0);
    v2[0] = sub_23B996B54();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A599E8);
  }
  return result;
}

unint64_t sub_23B996B54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A599F0;
  if (!qword_256A599F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599F8);
    v2[0] = sub_23B996E1C(&qword_256A59A00, &qword_256A59A08, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A599F0);
  }
  return result;
}

uint64_t sub_23B996BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomControlStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B996C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23BB89704();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23B996C4C()
{
  return sub_23BB89710();
}

unint64_t sub_23B996C78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A59A28;
  if (!qword_256A59A28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599D8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C8);
    v2[3] = type metadata accessor for CustomButtonStyle(255);
    v2[4] = sub_23B996E1C(&qword_256A59A10, &qword_256A599C8, MEMORY[0x24BDF43B0]);
    v2[5] = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A59A30, &qword_256A59A38, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A59A28);
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_23B996D98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A59A58;
  if (!qword_256A59A58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59A50);
    v2[0] = sub_23B996E1C(&qword_256A59A60, &qword_256A59A48, MEMORY[0x24BDEB358]);
    v2[1] = MEMORY[0x24BDEC468];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A59A58);
  }
  return result;
}

uint64_t sub_23B996E1C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24260D8DC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B996E5C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

unint64_t sub_23B996E70()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[7];

  result = qword_256A59A70;
  if (!qword_256A59A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59A78);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59958);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59978);
    v4 = sub_23B996E1C(&qword_256A59980, &qword_256A59958, MEMORY[0x24BDF44C8]);
    v5 = sub_23B996E1C(&qword_256A59988, &qword_256A59978, MEMORY[0x24BDF5428]);
    v6[1] = v2;
    v6[2] = v3;
    v6[3] = MEMORY[0x24BDF1FA8];
    v6[4] = v4;
    v6[5] = v5;
    v6[6] = MEMORY[0x24BDF1F80];
    v6[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v1, v6);
    atomic_store(result, (unint64_t *)&qword_256A59A70);
  }
  return result;
}

uint64_t FindMyRelativeDateFormatStyle.init(anchor:displayStyle:capitalizationContext:recencyKey:locale:calendar:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  int *MyRelativeDateFormatStyle;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  int *v54;
  __int128 v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v72 = a6;
  v78 = a5;
  v79 = a3;
  v11 = sub_23BB8881C();
  v76 = *(_QWORD *)(v11 - 8);
  v77 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v71 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB889FC();
  v68 = *(_QWORD *)(v14 - 8);
  v69 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v67 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23BB889E4();
  v75 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66, v17);
  v64 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23BB888AC();
  v59 = *(_QWORD *)(v61 - 8);
  v20 = MEMORY[0x24BDAC7A8](v61, v19);
  v56 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v63 = (char *)&v52 - v23;
  v24 = sub_23BB888C4();
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23BB88984();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = (char *)&v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_23BB88954();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60, v33);
  v74 = (char *)&v52 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v70 = *a4;
  v65 = a4[1];
  v57 = a4[2];
  v55 = a4[3];
  v52 = a4[4];
  v35 = *((_QWORD *)a4 + 10);
  v36 = *((_QWORD *)a4 + 11);
  v62 = v29;
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v37(a7, a1, v28);
  MyRelativeDateFormatStyle = (int *)type metadata accessor for FindMyRelativeDateFormatStyle();
  *(_BYTE *)(a7 + MyRelativeDateFormatStyle[5]) = (_BYTE)a2;
  v39 = a7 + MyRelativeDateFormatStyle[6];
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16);
  v53(v39, v79, v77);
  v54 = MyRelativeDateFormatStyle;
  v40 = MyRelativeDateFormatStyle[7];
  v73 = a7;
  v41 = a7 + v40;
  v42 = v65;
  *(_OWORD *)v41 = v70;
  *(_OWORD *)(v41 + 16) = v42;
  v43 = v55;
  *(_OWORD *)(v41 + 32) = v57;
  *(_OWORD *)(v41 + 48) = v43;
  *(_OWORD *)(v41 + 64) = v52;
  *(_QWORD *)(v41 + 80) = v35;
  *(_QWORD *)(v41 + 88) = v36;
  *(_QWORD *)&v55 = v32;
  *(_QWORD *)&v70 = a1;
  *(_QWORD *)&v65 = v28;
  v37((uint64_t)v32, a1, v28);
  *(_QWORD *)&v57 = v27;
  sub_23BB888B8();
  if ((a2 & 1) != 0)
  {
    v44 = v56;
    sub_23BB888A0();
  }
  else
  {
    v44 = v56;
    sub_23BB88894();
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v63, v44, v61);
  v45 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v64, v78, v66);
  v46 = v68;
  v47 = v72;
  v48 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v72, v69);
  v49 = v79;
  v50 = v77;
  v53((uint64_t)v71, v79, v77);
  sub_23BB8893C();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v47, v48);
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v78, v45);
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v49, v50);
  (*(void (**)(_QWORD, _QWORD))(v62 + 8))(v70, v65);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v58 + 32))(v73 + v54[8], v74, v60);
}

uint64_t type metadata accessor for FindMyRelativeDateFormatStyle()
{
  uint64_t result;

  result = qword_256A59BD8;
  if (!qword_256A59BD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FindMyRelativeDateFormatStyle.format(_:)()
{
  uint64_t v0;
  uint64_t MyRelativeDateFormatStyle;
  uint64_t v2;

  sub_23BB8887C();
  MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
  if (!*(_QWORD *)(v0 + *(int *)(MyRelativeDateFormatStyle + 28) + 24))
    return sub_23BB88948();
  sub_23BB8B384();
  if ((sub_23BB8B360() & 1) == 0)
    return sub_23BB88948();
  v2 = sub_23BB38F44(v0 + *(int *)(MyRelativeDateFormatStyle + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t FindMyRelativeDateFormatStyle.discreteInput(before:)(uint64_t a1)
{
  return sub_23B997554(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE7B0]);
}

uint64_t FindMyRelativeDateFormatStyle.discreteInput(after:)(uint64_t a1)
{
  return sub_23B997554(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE7A8]);
}

uint64_t sub_23B997554(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  type metadata accessor for FindMyRelativeDateFormatStyle();
  return a2(a1);
}

BOOL static FindMyRelativeDateFormatStyle.DisplayStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FindMyRelativeDateFormatStyle.DisplayStyle.hash(into:)()
{
  return sub_23BB8B24C();
}

BOOL sub_23B9975DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23B9975F8()
{
  return sub_23BB8B24C();
}

uint64_t sub_23B997624()
{
  _BYTE *v0;

  if (*v0)
    return 0x64656C6961746564;
  else
    return 0x657369636E6F63;
}

uint64_t sub_23B997660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B99A954(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23B997684()
{
  return 0;
}

void sub_23B997690(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23B99769C()
{
  sub_23B999480();
  return sub_23BB8B390();
}

uint64_t sub_23B9976C4()
{
  sub_23B999480();
  return sub_23BB8B39C();
}

uint64_t sub_23B9976EC()
{
  return 0;
}

uint64_t sub_23B9976F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_23B997724(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23B997730()
{
  sub_23B999508();
  return sub_23BB8B390();
}

uint64_t sub_23B997758()
{
  sub_23B999508();
  return sub_23BB8B39C();
}

uint64_t sub_23B997780()
{
  sub_23B9994C4();
  return sub_23BB8B390();
}

uint64_t sub_23B9977A8()
{
  sub_23B9994C4();
  return sub_23BB8B39C();
}

uint64_t FindMyRelativeDateFormatStyle.DisplayStyle.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A80);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A88);
  v17 = *(_QWORD *)(v7 - 8);
  v18 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A90);
  v21 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B999480();
  sub_23BB8B294();
  if ((v15 & 1) != 0)
  {
    v23 = 1;
    sub_23B9994C4();
    sub_23BB8B0A8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  }
  else
  {
    v22 = 0;
    sub_23B999508();
    sub_23BB8B0A8();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v11);
}

uint64_t FindMyRelativeDateFormatStyle.DisplayStyle.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t FindMyRelativeDateFormatStyle.DisplayStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;

  v33 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59AB0);
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v3);
  v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59AB8);
  v5 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59AC0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B999480();
  v14 = v36;
  sub_23BB8B288();
  if (v14)
    goto LABEL_7;
  v29 = v5;
  v30 = a1;
  v15 = v34;
  v16 = v35;
  v36 = v10;
  v17 = sub_23BB8B09C();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v22 = sub_23BB8AE68();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59AC8);
    *v24 = &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle;
    sub_23BB8B048();
    sub_23BB8AE5C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v18);
    a1 = v30;
LABEL_7:
    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  v19 = *(_BYTE *)(v17 + 32);
  if ((v19 & 1) != 0)
  {
    LODWORD(v31) = *(unsigned __int8 *)(v17 + 32);
    v38 = 1;
    sub_23B9994C4();
    sub_23BB8B03C();
    v20 = v36;
    v21 = v33;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v18);
    v19 = v31;
  }
  else
  {
    v37 = 0;
    sub_23B999508();
    v25 = v8;
    sub_23BB8B03C();
    v26 = v36;
    v21 = v33;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v18);
  }
  *v21 = v19;
  v27 = (uint64_t)v30;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t _s12FindMyUICore17PublishedLocationV8PriorityO9hashValueSivg_0()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23B997D84()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23B997DC4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FindMyRelativeDateFormatStyle.DisplayStyle.init(from:)(a1, a2);
}

uint64_t sub_23B997DD8(_QWORD *a1)
{
  return FindMyRelativeDateFormatStyle.DisplayStyle.encode(to:)(a1);
}

uint64_t FindMyRelativeDateFormatStyle.hash(into:)()
{
  uint64_t v0;
  uint64_t MyRelativeDateFormatStyle;

  sub_23BB88984();
  sub_23B97D0C8(&qword_256A59AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BB8A718();
  MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
  sub_23BB8B24C();
  sub_23BB8881C();
  sub_23B97D0C8(&qword_256A59AD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD6D8], MEMORY[0x24BDCD6F0]);
  sub_23BB8A718();
  if (*(_QWORD *)(v0 + *(int *)(MyRelativeDateFormatStyle + 28) + 24))
  {
    sub_23BB8B258();
    sub_23BB8B378();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BB8B258();
  }
  sub_23BB88954();
  sub_23B97D0C8(&qword_256A59AE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE828], MEMORY[0x24BDCE840]);
  return sub_23BB8A718();
}

uint64_t sub_23B99801C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23B99804C + 4 * byte_23BB8CA60[a1]))(0x726F68636E61, 0xE600000000000000);
}

uint64_t sub_23B99804C()
{
  return 0x5379616C70736964;
}

unint64_t sub_23B99806C()
{
  return 0xD000000000000015;
}

uint64_t sub_23B998088()
{
  return 0x4B79636E65636572;
}

unint64_t sub_23B9980A4()
{
  return 0xD00000000000001BLL;
}

BOOL sub_23B9980C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23B9980D8()
{
  unsigned __int8 *v0;

  return sub_23B99801C(*v0);
}

uint64_t sub_23B9980E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23B99AA44(a1, a2);
  *a3 = result;
  return result;
}

void sub_23B998104(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23B998110()
{
  sub_23B99954C();
  return sub_23BB8B390();
}

uint64_t sub_23B998138()
{
  sub_23B99954C();
  return sub_23BB8B39C();
}

uint64_t FindMyRelativeDateFormatStyle.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t MyRelativeDateFormatStyle;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[6];
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59AE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B99954C();
  sub_23BB8B294();
  LOBYTE(v16[0]) = 0;
  sub_23BB88984();
  sub_23B97D0C8(&qword_256A59AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23BB8B0F0();
  if (!v2)
  {
    MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
    LOBYTE(v16[0]) = *(_BYTE *)(v3 + *(int *)(MyRelativeDateFormatStyle + 20));
    v17 = 1;
    sub_23B999590();
    sub_23BB8B0F0();
    LOBYTE(v16[0]) = 2;
    sub_23BB8881C();
    sub_23B97D0C8(&qword_256A59B08, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD6D8], MEMORY[0x24BDCD6E8]);
    sub_23BB8B0F0();
    v11 = (_OWORD *)(v3 + *(int *)(MyRelativeDateFormatStyle + 28));
    v12 = v11[1];
    v16[0] = *v11;
    v16[1] = v12;
    v13 = v11[3];
    v16[2] = v11[2];
    v16[3] = v13;
    v14 = v11[5];
    v16[4] = v11[4];
    v16[5] = v14;
    v17 = 3;
    sub_23B9995D4();
    sub_23BB8B0C0();
    LOBYTE(v16[0]) = 4;
    sub_23BB88954();
    sub_23B97D0C8(&qword_256A59B18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE828], MEMORY[0x24BDCE838]);
    sub_23BB8B0F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t FindMyRelativeDateFormatStyle.hashValue.getter()
{
  uint64_t v0;
  uint64_t MyRelativeDateFormatStyle;

  sub_23BB8B240();
  sub_23BB88984();
  sub_23B97D0C8(&qword_256A59AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BB8A718();
  MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
  sub_23BB8B24C();
  sub_23BB8881C();
  sub_23B97D0C8(&qword_256A59AD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD6D8], MEMORY[0x24BDCD6F0]);
  sub_23BB8A718();
  if (*(_QWORD *)(v0 + *(int *)(MyRelativeDateFormatStyle + 28) + 24))
  {
    sub_23BB8B258();
    sub_23BB8B378();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BB8B258();
  }
  sub_23BB88954();
  sub_23B97D0C8(&qword_256A59AE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE828], MEMORY[0x24BDCE840]);
  sub_23BB8A718();
  return sub_23BB8B270();
}

uint64_t FindMyRelativeDateFormatStyle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *MyRelativeDateFormatStyle;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  _QWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;

  v41 = a2;
  v43 = sub_23BB88954();
  v40 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v3);
  v42 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB8881C();
  v6 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  v46 = v6;
  MEMORY[0x24BDAC7A8](v5, v7);
  v44 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23BB88984();
  v9 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v10);
  v49 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59B20);
  v12 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MyRelativeDateFormatStyle = (int *)type metadata accessor for FindMyRelativeDateFormatStyle();
  MEMORY[0x24BDAC7A8](MyRelativeDateFormatStyle, v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B99954C();
  v50 = v15;
  v20 = (uint64_t)v51;
  sub_23BB8B288();
  if (v20)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v44;
  v39 = v12;
  v38 = v9;
  v51 = a1;
  v22 = v19;
  v24 = v45;
  v23 = v46;
  LOBYTE(v52) = 0;
  sub_23B97D0C8(&qword_256A59B28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v25 = v48;
  sub_23BB8B090();
  v26 = v25;
  v27 = (uint64_t)v22;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v22, v49, v26);
  v58 = 1;
  sub_23B999618();
  sub_23BB8B090();
  v22[MyRelativeDateFormatStyle[5]] = v52;
  LOBYTE(v52) = 2;
  sub_23B97D0C8(&qword_256A59B38, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD6D8], MEMORY[0x24BDCD700]);
  v28 = v21;
  v29 = v24;
  sub_23BB8B090();
  v30 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v27 + MyRelativeDateFormatStyle[6], v28, v29);
  v58 = 3;
  sub_23B9996B8();
  sub_23BB8B060();
  v31 = (_OWORD *)(v27 + MyRelativeDateFormatStyle[7]);
  v32 = v53;
  *v31 = v52;
  v31[1] = v32;
  v33 = v55;
  v31[2] = v54;
  v31[3] = v33;
  v34 = v57;
  v31[4] = v56;
  v31[5] = v34;
  LOBYTE(v52) = 4;
  sub_23B97D0C8(&qword_256A59B48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE828], MEMORY[0x24BDCE848]);
  v35 = v42;
  v36 = v43;
  sub_23BB8B090();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v50, v47);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v30 + MyRelativeDateFormatStyle[8], v35, v36);
  sub_23B9996FC(v30, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return sub_23B999740(v30);
}

uint64_t sub_23B998B78()
{
  return sub_23BB88924();
}

uint64_t sub_23B998B9C()
{
  return sub_23BB88918();
}

uint64_t sub_23B998BC8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_23BB8887C();
  if (*(_QWORD *)(v2 + *(int *)(a1 + 28) + 24) && (sub_23BB8B384(), (sub_23BB8B360() & 1) != 0))
  {
    v5 = sub_23BB38F44(v2 + *(int *)(a1 + 24));
    result = swift_bridgeObjectRetain();
  }
  else
  {
    v5 = sub_23BB88948();
    result = v7;
  }
  *a2 = v5;
  a2[1] = result;
  return result;
}

uint64_t sub_23B998CE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FindMyRelativeDateFormatStyle.init(from:)(a1, a2);
}

uint64_t sub_23B998CF4(_QWORD *a1)
{
  return FindMyRelativeDateFormatStyle.encode(to:)(a1);
}

uint64_t sub_23B998D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23BB8B240();
  sub_23BB88984();
  sub_23B97D0C8(&qword_256A59AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23BB8A718();
  sub_23BB8B24C();
  sub_23BB8881C();
  sub_23B97D0C8(&qword_256A59AD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCD6D8], MEMORY[0x24BDCD6F0]);
  sub_23BB8A718();
  if (*(_QWORD *)(v2 + *(int *)(a2 + 28) + 24))
  {
    sub_23BB8B258();
    sub_23BB8B378();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BB8B258();
  }
  sub_23BB88954();
  sub_23B97D0C8(&qword_256A59AE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE828], MEMORY[0x24BDCE840]);
  sub_23BB8A718();
  return sub_23BB8B270();
}

uint64_t static FormatStyle<>.findMyRelative(anchor:displayStyle:capitalizationContext:recencyKey:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[9];

  v43 = a3;
  v41 = a1;
  v45 = a5;
  v7 = sub_23BB889FC();
  MEMORY[0x24BDAC7A8](v7, v8);
  v44 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB889E4();
  MEMORY[0x24BDAC7A8](v10, v11);
  v42 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BB8881C();
  v38 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v37 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23BB88984();
  MEMORY[0x24BDAC7A8](v16, v17);
  v40 = (uint64_t)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a2;
  v20 = *a4;
  v36 = a4[1];
  v21 = a4[2];
  v22 = a4[3];
  v35 = a4[4];
  v23 = a4[6];
  v34 = a4[5];
  v25 = a4[7];
  v24 = a4[8];
  v26 = a4[9];
  v27 = a4[10];
  v28 = a4[11];
  (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v40, v41);
  v57[0] = v19;
  v30 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v43, v39);
  *(_QWORD *)&v46 = v20;
  *((_QWORD *)&v46 + 1) = v36;
  v47 = v21;
  v48 = v22;
  v49 = v35;
  v50 = v34;
  v51 = v23;
  v52 = v25;
  v53 = v24;
  v54 = v26;
  v55 = v27;
  v56 = v28;
  sub_23B99977C(v20, v36, v21, v22);
  v31 = (uint64_t)v42;
  sub_23BB889D8();
  v32 = (uint64_t)v44;
  sub_23BB889F0();
  return FindMyRelativeDateFormatStyle.init(anchor:displayStyle:capitalizationContext:recencyKey:locale:calendar:)(v40, v57, v30, &v46, v31, v32, v45);
}

uint64_t _s12FindMyUICore0aB23RelativeDateFormatStyleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t MyRelativeDateFormatStyle;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[12];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  if ((sub_23BB88960() & 1) != 0)
  {
    MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
    if (*(unsigned __int8 *)(a1 + *(int *)(MyRelativeDateFormatStyle + 20)) == *(unsigned __int8 *)(a2 + *(int *)(MyRelativeDateFormatStyle + 20)))
    {
      v5 = MyRelativeDateFormatStyle;
      if ((sub_23BB887F8() & 1) != 0)
      {
        v6 = *(int *)(v5 + 28);
        v8 = *(_QWORD *)(a1 + v6);
        v7 = *(_QWORD *)(a1 + v6 + 8);
        v9 = *(_QWORD *)(a1 + v6 + 16);
        v10 = *(_QWORD *)(a1 + v6 + 24);
        v12 = *(_QWORD *)(a1 + v6 + 32);
        v11 = *(_QWORD *)(a1 + v6 + 40);
        v14 = *(_QWORD *)(a1 + v6 + 48);
        v13 = *(_QWORD *)(a1 + v6 + 56);
        v16 = *(_QWORD *)(a1 + v6 + 64);
        v15 = *(_QWORD *)(a1 + v6 + 72);
        v17 = *(_QWORD *)(a1 + v6 + 80);
        v18 = *(_QWORD *)(a1 + v6 + 88);
        v19 = (uint64_t *)(a2 + v6);
        v21 = *v19;
        v20 = v19[1];
        v22 = v19[2];
        v23 = v19[3];
        v24 = v19[4];
        v25 = v19[5];
        v26 = v19[6];
        v27 = v19[7];
        v28 = v19[8];
        v29 = v19[9];
        v31 = v19[10];
        v30 = v19[11];
        if (v10)
        {
          v52 = v8;
          v53 = v7;
          v54 = v9;
          v55 = v10;
          v56 = v12;
          v57 = v11;
          v58 = v14;
          v59 = v13;
          v60 = v16;
          v61 = v15;
          v62 = v17;
          v63 = v18;
          v48 = v12;
          v49 = v14;
          v46 = v8;
          v47 = v9;
          v44 = v16;
          v45 = v7;
          v43 = v17;
          v50 = v15;
          if (v23)
          {
            v51[0] = v21;
            v51[1] = v20;
            v51[2] = v22;
            v51[3] = v23;
            v51[4] = v24;
            v51[5] = v25;
            v51[6] = v26;
            v51[7] = v27;
            v51[8] = v28;
            v51[9] = v29;
            v51[10] = v31;
            v51[11] = v30;
            sub_23B99977C(v8, v7, v9, v10);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = _s12FindMyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0(&v52, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23B99965C(v46, v45, v47, v10);
            if ((MyUICore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 & 1) == 0)
              return 0;
LABEL_13:
            JUMPOUT(0x24260A87CLL);
          }
          v32 = v13;
          v33 = v11;
          v34 = v18;
          v42 = v27;
          v39 = v25;
          v40 = v26;
          v37 = v22;
          v38 = v24;
          v36 = v20;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v20 = v36;
          v22 = v37;
          v24 = v38;
          v25 = v39;
          v26 = v40;
          v27 = v42;
          v17 = v43;
          v18 = v34;
          v14 = v49;
          v15 = v50;
          v16 = v44;
          v7 = v45;
          v8 = v46;
          v9 = v47;
          v12 = v48;
          v11 = v33;
          v13 = v32;
        }
        else if (!v23)
        {
          goto LABEL_13;
        }
        v52 = v8;
        v53 = v7;
        v54 = v9;
        v55 = v10;
        v56 = v12;
        v57 = v11;
        v58 = v14;
        v59 = v13;
        v60 = v16;
        v61 = v15;
        v62 = v17;
        v63 = v18;
        v64 = v21;
        v65 = v20;
        v66 = v22;
        v67 = v23;
        v68 = v24;
        v69 = v25;
        v70 = v26;
        v71 = v27;
        v72 = v28;
        v73 = v29;
        v74 = v31;
        v75 = v30;
        sub_23B99977C(v21, v20, v22, v23);
        sub_23B99AC70(&v52);
      }
    }
  }
  return 0;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23B999480()
{
  unint64_t result;

  result = qword_256A59A98;
  if (!qword_256A59A98)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8D044, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59A98);
  }
  return result;
}

unint64_t sub_23B9994C4()
{
  unint64_t result;

  result = qword_256A59AA0;
  if (!qword_256A59AA0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CFF4, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.DetailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59AA0);
  }
  return result;
}

unint64_t sub_23B999508()
{
  unint64_t result;

  result = qword_256A59AA8;
  if (!qword_256A59AA8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CFA4, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.ConciseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59AA8);
  }
  return result;
}

unint64_t sub_23B99954C()
{
  unint64_t result;

  result = qword_256A59AF0;
  if (!qword_256A59AF0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CF54, &type metadata for FindMyRelativeDateFormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59AF0);
  }
  return result;
}

unint64_t sub_23B999590()
{
  unint64_t result;

  result = qword_256A59B00;
  if (!qword_256A59B00)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for FindMyRelativeDateFormatStyle.DisplayStyle, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle);
    atomic_store(result, (unint64_t *)&qword_256A59B00);
  }
  return result;
}

unint64_t sub_23B9995D4()
{
  unint64_t result;

  result = qword_256A59B10;
  if (!qword_256A59B10)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for FindMyRelativeDate.RecencyKey, &type metadata for FindMyRelativeDate.RecencyKey);
    atomic_store(result, (unint64_t *)&qword_256A59B10);
  }
  return result;
}

unint64_t sub_23B999618()
{
  unint64_t result;

  result = qword_256A59B30;
  if (!qword_256A59B30)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for FindMyRelativeDateFormatStyle.DisplayStyle, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle);
    atomic_store(result, (unint64_t *)&qword_256A59B30);
  }
  return result;
}

uint64_t sub_23B99965C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23B9996B8()
{
  unint64_t result;

  result = qword_256A59B40;
  if (!qword_256A59B40)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for FindMyRelativeDate.RecencyKey, &type metadata for FindMyRelativeDate.RecencyKey);
    atomic_store(result, (unint64_t *)&qword_256A59B40);
  }
  return result;
}

uint64_t sub_23B9996FC(uint64_t a1, uint64_t a2)
{
  uint64_t MyRelativeDateFormatStyle;

  MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(MyRelativeDateFormatStyle - 8) + 16))(a2, a1, MyRelativeDateFormatStyle);
  return a2;
}

uint64_t sub_23B999740(uint64_t a1)
{
  uint64_t MyRelativeDateFormatStyle;

  MyRelativeDateFormatStyle = type metadata accessor for FindMyRelativeDateFormatStyle();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MyRelativeDateFormatStyle - 8) + 8))(a1, MyRelativeDateFormatStyle);
  return a1;
}

uint64_t sub_23B99977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23B9997DC()
{
  unint64_t result;

  result = qword_256A59B50;
  if (!qword_256A59B50)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for FindMyRelativeDateFormatStyle.DisplayStyle, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle);
    atomic_store(result, (unint64_t *)&qword_256A59B50);
  }
  return result;
}

uint64_t sub_23B999820()
{
  return sub_23B97D0C8(&qword_256A59B58, (uint64_t (*)(uint64_t))type metadata accessor for FindMyRelativeDateFormatStyle, (uint64_t)&protocol conformance descriptor for FindMyRelativeDateFormatStyle);
}

uint64_t sub_23B99984C()
{
  return sub_23B97D0C8(&qword_256A59B60, (uint64_t (*)(uint64_t))type metadata accessor for FindMyRelativeDateFormatStyle, (uint64_t)&protocol conformance descriptor for FindMyRelativeDateFormatStyle);
}

uint64_t sub_23B999878()
{
  return sub_23B97D0C8(&qword_256A59B68, (uint64_t (*)(uint64_t))type metadata accessor for FindMyRelativeDateFormatStyle, (uint64_t)&protocol conformance descriptor for FindMyRelativeDateFormatStyle);
}

uint64_t sub_23B9998A4()
{
  return sub_23B97D0C8(&qword_256A59B70, (uint64_t (*)(uint64_t))type metadata accessor for FindMyRelativeDateFormatStyle, (uint64_t)&protocol conformance descriptor for FindMyRelativeDateFormatStyle);
}

uint64_t sub_23B9998D0()
{
  return sub_23B97D0C8(&qword_256A59B78, (uint64_t (*)(uint64_t))type metadata accessor for FindMyRelativeDateFormatStyle, (uint64_t)&protocol conformance descriptor for FindMyRelativeDateFormatStyle);
}

_QWORD *initializeBufferWithCopyOfBuffer for FindMyRelativeDateFormatStyle(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BB88984();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23BB8881C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_QWORD *)v14 + 3);
    if (v15)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v15;
      v16 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = v16;
      v17 = *((_QWORD *)v14 + 7);
      *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 7) = v17;
      v18 = *((_QWORD *)v14 + 9);
      *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
      *((_QWORD *)v13 + 9) = v18;
      v19 = *((_QWORD *)v14 + 11);
      *((_QWORD *)v13 + 10) = *((_QWORD *)v14 + 10);
      *((_QWORD *)v13 + 11) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v21;
      v22 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v22;
      v23 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v23;
    }
    v24 = a3[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_23BB88954();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for FindMyRelativeDateFormatStyle(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[6];
  v6 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + a2[7] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = a1 + a2[8];
  v8 = sub_23BB88954();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for FindMyRelativeDateFormatStyle(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(v13 + 24);
  if (v14)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = v14;
    v15 = *(_QWORD *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_QWORD *)(v12 + 40) = v15;
    v16 = *(_QWORD *)(v13 + 56);
    *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
    *(_QWORD *)(v12 + 56) = v16;
    v17 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = v17;
    v18 = *(_QWORD *)(v13 + 88);
    *(_QWORD *)(v12 + 80) = *(_QWORD *)(v13 + 80);
    *(_QWORD *)(v12 + 88) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v19;
    v20 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v20;
    v21 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v21;
  }
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_23BB88954();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

uint64_t assignWithCopy for FindMyRelativeDateFormatStyle(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = *(_QWORD *)(a1 + v11 + 24);
  v15 = *(_QWORD *)(a2 + v11 + 24);
  if (v14)
  {
    if (v15)
    {
      *v12 = *v13;
      v12[1] = v13[1];
      v12[2] = v13[2];
      v12[3] = v13[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12[4] = v13[4];
      v12[5] = v13[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12[6] = v13[6];
      v12[7] = v13[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12[8] = v13[8];
      v12[9] = v13[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12[10] = v13[10];
      v12[11] = v13[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B999EBC((uint64_t)v12);
      v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      v17 = *((_OWORD *)v13 + 5);
      v19 = *((_OWORD *)v13 + 2);
      v18 = *((_OWORD *)v13 + 3);
      *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
      *((_OWORD *)v12 + 5) = v17;
      *((_OWORD *)v12 + 2) = v19;
      *((_OWORD *)v12 + 3) = v18;
    }
  }
  else if (v15)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v12[2] = v13[2];
    v12[3] = v13[3];
    v12[4] = v13[4];
    v12[5] = v13[5];
    v12[6] = v13[6];
    v12[7] = v13[7];
    v12[8] = v13[8];
    v12[9] = v13[9];
    v12[10] = v13[10];
    v12[11] = v13[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *((_OWORD *)v13 + 1);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v20;
    v21 = *((_OWORD *)v13 + 2);
    v22 = *((_OWORD *)v13 + 3);
    v23 = *((_OWORD *)v13 + 5);
    *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
    *((_OWORD *)v12 + 5) = v23;
    *((_OWORD *)v12 + 2) = v21;
    *((_OWORD *)v12 + 3) = v22;
  }
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_23BB88954();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

uint64_t sub_23B999EBC(uint64_t a1)
{
  destroy for FindMyRelativeDate.RecencyKey();
  return a1;
}

uint64_t initializeWithTake for FindMyRelativeDateFormatStyle(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[3];
  v13[2] = v14[2];
  v13[3] = v15;
  v16 = v14[5];
  v13[4] = v14[4];
  v13[5] = v16;
  v17 = v14[1];
  *v13 = *v14;
  v13[1] = v17;
  v18 = a1 + v12;
  v19 = a2 + v12;
  v20 = sub_23BB88954();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for FindMyRelativeDateFormatStyle(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23BB8881C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  if (!*(_QWORD *)(a1 + v11 + 24))
    goto LABEL_5;
  v14 = *(_QWORD *)(v13 + 24);
  if (!v14)
  {
    sub_23B999EBC(v12);
LABEL_5:
    v19 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v19;
    v20 = *(_OWORD *)(v13 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
    *(_OWORD *)(v12 + 80) = v20;
    v21 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v21;
    goto LABEL_6;
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v13 + 56);
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v13 + 48);
  *(_QWORD *)(v12 + 56) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v13 + 72);
  *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v12 + 72) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v13 + 88);
  *(_QWORD *)(v12 + 80) = *(_QWORD *)(v13 + 80);
  *(_QWORD *)(v12 + 88) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_23BB88954();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyRelativeDateFormatStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B99A120(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = sub_23BB88984();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_23BB8881C();
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v11 = sub_23BB88954();
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[7] + 24);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMyRelativeDateFormatStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B99A208(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_23BB88984();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_23BB8881C();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[6];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[7] + 24) = a2;
        return result;
      }
      v10 = sub_23BB88954();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23B99A2D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23BB88984();
  if (v1 <= 0x3F)
  {
    result = sub_23BB8881C();
    if (v2 <= 0x3F)
    {
      result = sub_23BB88954();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyRelativeDateFormatStyle.DisplayStyle()
{
  return &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle;
}

uint64_t _s14descr250CB21E1V15DirectionsStateV13TransportTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMyRelativeDateFormatStyle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23B99A478 + 4 * byte_23BB8CA6A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23B99A4AC + 4 * byte_23BB8CA65[v4]))();
}

uint64_t sub_23B99A4AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B99A4B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B99A4BCLL);
  return result;
}

uint64_t sub_23B99A4C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B99A4D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23B99A4D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B99A4DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B99A4E8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23B99A4F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FindMyRelativeDateFormatStyle.CodingKeys()
{
  return &type metadata for FindMyRelativeDateFormatStyle.CodingKeys;
}

uint64_t _s12SubscriptionV4SizeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12FindMyUICore29FindMyRelativeDateFormatStyleV12DisplayStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B99A5E4 + 4 * byte_23BB8CA74[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B99A618 + 4 * byte_23BB8CA6F[v4]))();
}

uint64_t sub_23B99A618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B99A620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B99A628);
  return result;
}

uint64_t sub_23B99A634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B99A63CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B99A640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B99A648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FindMyRelativeDateFormatStyle.DisplayStyle.CodingKeys()
{
  return &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for FindMyRelativeDateFormatStyle.DisplayStyle.ConciseCodingKeys()
{
  return &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.ConciseCodingKeys;
}

ValueMetadata *type metadata accessor for FindMyRelativeDateFormatStyle.DisplayStyle.DetailedCodingKeys()
{
  return &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.DetailedCodingKeys;
}

unint64_t sub_23B99A688()
{
  unint64_t result;

  result = qword_256A59C20;
  if (!qword_256A59C20)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CE74, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C20);
  }
  return result;
}

unint64_t sub_23B99A6D0()
{
  unint64_t result;

  result = qword_256A59C28;
  if (!qword_256A59C28)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CF2C, &type metadata for FindMyRelativeDateFormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C28);
  }
  return result;
}

unint64_t sub_23B99A718()
{
  unint64_t result;

  result = qword_256A59C30;
  if (!qword_256A59C30)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CE9C, &type metadata for FindMyRelativeDateFormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C30);
  }
  return result;
}

unint64_t sub_23B99A760()
{
  unint64_t result;

  result = qword_256A59C38;
  if (!qword_256A59C38)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CEC4, &type metadata for FindMyRelativeDateFormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C38);
  }
  return result;
}

unint64_t sub_23B99A7A8()
{
  unint64_t result;

  result = qword_256A59C40;
  if (!qword_256A59C40)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CD94, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.ConciseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C40);
  }
  return result;
}

unint64_t sub_23B99A7F0()
{
  unint64_t result;

  result = qword_256A59C48;
  if (!qword_256A59C48)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CDBC, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.ConciseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C48);
  }
  return result;
}

unint64_t sub_23B99A838()
{
  unint64_t result;

  result = qword_256A59C50;
  if (!qword_256A59C50)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CD44, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.DetailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C50);
  }
  return result;
}

unint64_t sub_23B99A880()
{
  unint64_t result;

  result = qword_256A59C58;
  if (!qword_256A59C58)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CD6C, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.DetailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C58);
  }
  return result;
}

unint64_t sub_23B99A8C8()
{
  unint64_t result;

  result = qword_256A59C60;
  if (!qword_256A59C60)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CDE4, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C60);
  }
  return result;
}

unint64_t sub_23B99A910()
{
  unint64_t result;

  result = qword_256A59C68;
  if (!qword_256A59C68)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8CE0C, &type metadata for FindMyRelativeDateFormatStyle.DisplayStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A59C68);
  }
  return result;
}

uint64_t sub_23B99A954(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657369636E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C6961746564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23B99AA44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F68636E61 && a2 == 0xE600000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC000000656C7974 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023BB999B0 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4B79636E65636572 && a2 == 0xEA00000000007965 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023BB999D0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t *sub_23B99AC70(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = a1[13];
  v6 = a1[12];
  v3 = a1[14];
  v4 = a1[15];
  sub_23B99965C(*a1, a1[1], a1[2], a1[3]);
  sub_23B99965C(v6, v2, v3, v4);
  return a1;
}

uint64_t sub_23B99AD3C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_DWORD *)(a2 + 32) == (_DWORD)result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 9; ; ++i)
  {
    v4 = i - 7;
    if (__OFADD__(i - 8, 1))
      break;
    v6 = *(_DWORD *)(a2 + 4 * i) == (_DWORD)result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

BOOL sub_23B99ADA0(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B99AE00@<X0>(int64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Action;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  int *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t result;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void **v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  char *v134;
  unint64_t v135;
  void *v136;
  int v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  ValueMetadata *v146;
  uint64_t v147;
  char v148;
  void *v149;
  id v150;
  void (*v151)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  void *v153;
  char v154;
  void *v155;
  char v156;
  uint64_t v157;
  id v158;
  id v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  BOOL v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  void (*v174)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  void (*v178)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t ObjCClassFromMetadata;
  id v183;
  void *v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  id v192;
  id v193;
  void *v194;
  id v195;
  void *v196;
  void *v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  char v212;
  char v213;
  unint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  void (*v243)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  __int128 v250;
  ValueMetadata *v251;
  unint64_t v252;
  uint64_t v253;
  id v254;
  uint64_t v255;

  v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  MEMORY[0x24BDAC7A8](v222, v3);
  v223 = (uint64_t *)((char *)&v217 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Annotation();
  v232 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v233 = (uint64_t)&v217 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v224 = (uint64_t)&v217 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v236 = (char *)&v217 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v241 = (char *)&v217 - v16;
  v242 = sub_23BB88984();
  v17 = *(_QWORD *)(v242 - 8);
  v19 = MEMORY[0x24BDAC7A8](v242, v18);
  v234 = (char *)&v217 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v238 = (char *)&v217 - v22;
  Action = type metadata accessor for LocateAction();
  MEMORY[0x24BDAC7A8](Action, v24);
  v229 = (uint64_t)&v217 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v226 = (uint64_t)&v217 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v235 = (uint64_t)&v217 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v240 = (uint64_t)&v217 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v239 = (uint64_t)&v217 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v237 = (uint64_t)&v217 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v231 = (uint64_t)&v217 - v44;
  MEMORY[0x24BDAC7A8](v43, v45);
  v230 = (uint64_t)&v217 - v46;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  v49 = MEMORY[0x24BDAC7A8](v47, v48);
  v221 = (uint64_t *)((char *)&v217 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v228 = (uint64_t *)((char *)&v217 - v53);
  MEMORY[0x24BDAC7A8](v52, v54);
  v227 = (uint64_t)&v217 - v55;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v56, v57);
  v59 = (char *)&v217 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for CompositeAppViewInitialInfo();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60, v62);
  v64 = (char *)&v217 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = &type metadata for MessagesFeatureFlag;
  v252 = sub_23B9A1350();
  LODWORD(v65) = sub_23BB88600();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v249);
  v66 = v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v66, (uint64_t)v59, &qword_256A59C70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) == 1)
  {
    sub_23B989D60((uint64_t)v59, &qword_256A59C70);
    if (qword_256A58E00 == -1)
    {
LABEL_3:
      v67 = sub_23BB891C4();
      __swift_project_value_buffer(v67, (uint64_t)qword_256A73E80);
      v68 = sub_23BB891AC();
      v69 = sub_23BB8ABD4();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (uint8_t *)swift_slowAlloc();
        v71 = swift_slowAlloc();
        v249 = v71;
        *(_DWORD *)v70 = 136315138;
        v255 = sub_23BB7B69C(0xD000000000000012, 0x800000023BB99A30, &v249);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v68, v69, "CompositeAppViewModel: %s - MonitorState with no initialInfo", v70, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v71, -1, -1);
        MEMORY[0x24260D9B4](v70, -1, -1);
      }

      v72 = (int *)type metadata accessor for DetailsAppView.State(0);
      v73 = (char *)(a1 + v72[5]);
      v74 = type metadata accessor for SessionLocation.Description(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 1, 1, v74);
      (*(void (**)(int64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a1 + v72[6], 1, 1, v242);
      v75 = (char *)(a1 + v72[11]);
      v76 = type metadata accessor for DirectionsState();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 1, 2, v76);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + v72[7]) = MEMORY[0x24BEE4AF8];
      v78 = (_QWORD *)(a1 + v72[8]);
      *v78 = 0;
      v78[1] = 0;
      *(_BYTE *)(a1 + v72[9]) = 0;
      *(_BYTE *)(a1 + v72[10]) = 0;
      goto LABEL_73;
    }
LABEL_77:
    swift_once();
    goto LABEL_3;
  }
  sub_23B989CA4((uint64_t)v59, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  v79 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository);
  v225 = v64;
  v244 = v79;
  if (!v79)
  {
    v109 = v17;
    if (qword_256A58E00 != -1)
      swift_once();
    v110 = (_QWORD *)a1;
    v111 = sub_23BB891C4();
    __swift_project_value_buffer(v111, (uint64_t)qword_256A73E80);
    v112 = sub_23BB891AC();
    v113 = sub_23BB8ABEC();
    if (os_log_type_enabled(v112, v113))
    {
      v114 = (uint8_t *)swift_slowAlloc();
      v115 = swift_slowAlloc();
      v249 = v115;
      *(_DWORD *)v114 = 136315138;
      v255 = sub_23BB7B69C(0xD000000000000012, 0x800000023BB99A30, &v249);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v112, v113, "CompositeAppViewModel: %s - No Repository", v114, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v115, -1, -1);
      MEMORY[0x24260D9B4](v114, -1, -1);
    }

    v116 = v242;
    v117 = type metadata accessor for SessionLocation.Description(0);
    v118 = v228;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v228, 1, 1, v117);
    v119 = v226;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v226, 1, 1, v116);
    v120 = (uint64_t)v225;
    v121 = v225[4];
    v122 = v225[5];
    v123 = v225[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B989D9C(v120, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    v72 = (int *)type metadata accessor for DetailsAppView.State(0);
    v124 = (char *)v110 + v72[11];
    v125 = type metadata accessor for DirectionsState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v124, 1, 2, v125);
    *v110 = 0;
    sub_23B990D24((uint64_t)v118, (uint64_t)v110 + v72[5], &qword_256A59C90);
    result = sub_23B990D24(v119, (uint64_t)v110 + v72[6], (uint64_t *)&unk_256A5E6B0);
    *(_QWORD *)((char *)v110 + v72[7]) = v122;
    v126 = (_QWORD *)((char *)v110 + v72[8]);
    *v126 = v123;
    v126[1] = v121;
    a1 = (int64_t)v110;
    *((_BYTE *)v110 + v72[9]) = 0;
    *((_BYTE *)v110 + v72[10]) = 0;
    goto LABEL_73;
  }
  v217 = v1;
  v218 = v65;
  v219 = (uint64_t *)a1;
  v80 = *((_QWORD *)v64 + 5);
  v81 = v231;
  v243 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v243(v231, 1, 1, v242);
  v82 = v237;
  sub_23B989EFC(v81, v237, (uint64_t *)&unk_256A5E6B0);
  v83 = *(_QWORD *)(v80 + 16);
  v220 = v80;
  if (v83)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v84 = (void **)(v80 + 80);
    v85 = (uint64_t)v236;
    v86 = v241;
    v65 = (uint64_t)v238;
    while (1)
    {
      v89 = (unint64_t)*(v84 - 3);
      v90 = *((_BYTE *)v84 - 16);
      v92 = (uint64_t)*(v84 - 1);
      v91 = *v84;
      v249 = (uint64_t)*(v84 - 6);
      v250 = *(_OWORD *)(v84 - 5);
      v251 = (ValueMetadata *)v89;
      LOBYTE(v252) = v90;
      v253 = v92;
      v254 = v91;
      v246 = v250;
      swift_bridgeObjectRetain();
      v248 = v89;
      swift_bridgeObjectRetain();
      v247 = v92;
      swift_bridgeObjectRetain();
      v245 = v91;
      sub_23BA4CB8C((__int128 *)&v249, (uint64_t)v86);
      v93 = type metadata accessor for SessionFollowerState(0);
      if ((*(unsigned int (**)(id, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v86, 1, v93) != 1)
      {
        sub_23B989EFC((uint64_t)v86, v85, &qword_256A59C78);
        if (!swift_getEnumCaseMultiPayload())
        {
          v108 = v85 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
          v94 = v240;
          sub_23B990D24(v85, v240, (uint64_t *)&unk_256A5E6B0);
          sub_23B989D60(v108, (uint64_t *)&unk_256A5E6B0);
          v95 = v242;
          goto LABEL_15;
        }
        sub_23B989D9C(v85, type metadata accessor for SessionFollowerState);
      }
      v94 = v240;
      v95 = v242;
      v243(v240, 1, 1, v242);
LABEL_15:
      sub_23B989D60((uint64_t)v86, &qword_256A59C78);
      v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v96(v94, 1, v95) == 1)
      {
        v87 = v65;
        sub_23B989D60(v94, (uint64_t *)&unk_256A5E6B0);
        v88 = v239;
        sub_23B989EFC(v82, v239, (uint64_t *)&unk_256A5E6B0);
        v86 = v241;
      }
      else
      {
        v97 = v17;
        v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
        v98(v65, v94, v95);
        v99 = v82;
        v100 = v235;
        sub_23B989EFC(v99, v235, (uint64_t *)&unk_256A5E6B0);
        if (v96(v100, 1, v95) == 1)
        {
          sub_23B989D60(v100, (uint64_t *)&unk_256A5E6B0);
          v88 = v239;
          v101 = v97;
          v87 = v65;
          v98(v239, v65, v95);
          v243(v88, 0, 1, v95);
          v17 = v101;
        }
        else
        {
          v102 = v234;
          v98((uint64_t)v234, v100, v95);
          sub_23B9A13D4();
          if ((sub_23BB8A73C() & 1) != 0)
            v103 = v238;
          else
            v103 = v102;
          v104 = v239;
          (*(void (**)(uint64_t, char *, uint64_t))(v97 + 16))(v239, v103, v95);
          v105 = *(void (**)(char *, uint64_t))(v97 + 8);
          v106 = v102;
          v88 = v104;
          v107 = v238;
          v105(v106, v95);
          v17 = v97;
          v87 = (uint64_t)v107;
          v105(v107, v95);
          v243(v88, 0, 1, v95);
        }
        v85 = (uint64_t)v236;
        v86 = v241;
        v82 = v237;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B989D60(v82, (uint64_t *)&unk_256A5E6B0);
      sub_23B990D24(v88, v82, (uint64_t *)&unk_256A5E6B0);
      v84 += 7;
      --v83;
      v65 = v87;
      if (!v83)
        goto LABEL_30;
    }
  }
  swift_retain();
  swift_bridgeObjectRetain();
LABEL_30:
  sub_23B990D24(v82, v230, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(v231, (uint64_t *)&unk_256A5E6B0);
  swift_bridgeObjectRelease();
  v127 = v225;
  sub_23BB3A0B8((uint64_t)&v249);
  v128 = (uint64_t)v251;
  if (v251)
  {
    v129 = v249;
    v130 = v250;
    v131 = v252;
    v132 = v253;
    v133 = v254;
    v245 = (_QWORD *)sub_23BA4C5C4((__int128 *)&v249);
    v248 = v135;
    v136 = v134;
    LODWORD(v246) = v137;
    if ((unint64_t)(v134 - 1) >= 2)
    {
      if (v134)
      {
        v249 = v129;
        v250 = v130;
        v251 = (ValueMetadata *)v128;
        LOBYTE(v252) = v131;
        v253 = v132;
        v254 = v133;
        swift_bridgeObjectRetain_n();
        v170 = v136;
        v243 = v170;
        sub_23B9A1300(v129, v130, *((uint64_t *)&v130 + 1), v128, v131, v132, v133);
        v171 = v224;
        sub_23B99C614(v248, v170, v246, &v249, v224);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CA0);
        v172 = (*(unsigned __int8 *)(v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v232 + 80);
        v173 = swift_allocObject();
        *(_OWORD *)(v173 + 16) = xmmword_23BB8C510;
        v247 = v173;
        sub_23B989CE8(v171, v173 + v172, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
        v174 = v243;
        sub_23BA196A0((uint64_t)v245, v248, v243, v246, v228);

        swift_bridgeObjectRelease();
        sub_23B989D9C(v224, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
        v175 = type metadata accessor for SessionLocation.Description(0);
        v176 = v228;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 56))(v228, 0, 1, v175);
        sub_23B990D24((uint64_t)v176, v227, &qword_256A59C90);
      }
      else
      {
        v169 = type metadata accessor for SessionLocation.Description(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v227, 1, 1, v169);
        v247 = 0;
      }
    }
    else
    {
      v138 = type metadata accessor for SessionLocation.Description(0);
      v139 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56);
      v247 = 1;
      v139(v227, 1, 1, v138);
    }
    v249 = v129;
    v250 = v130;
    v251 = (ValueMetadata *)v128;
    LOBYTE(v252) = v131;
    v253 = v132;
    v254 = v133;
    sub_23B99C9FC(&v249, v229);
    sub_23B9A1394((uint64_t)v245, v248, v136);
    sub_23B9A12B4(v129, v130, *((uint64_t *)&v130 + 1), v128, v131, v132, v133);
    v168 = v227;
    goto LABEL_72;
  }
  v140 = v127[5];
  v141 = *(_QWORD *)(v140 + 16);
  if (!v141)
  {
    v142 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
    {
LABEL_63:
      if (v225[4])
      {
        v180 = v225[3];
        v181 = v225[4];
      }
      else
      {
        type metadata accessor for FindMyUICore();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v183 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        v184 = (void *)sub_23BB8A784();
        v185 = objc_msgSend(v183, sel_localizedStringForKey_value_table_, v184, 0, 0);

        v180 = sub_23BB8A7B4();
        v181 = v186;

      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v187 = swift_allocObject();
      *(_OWORD *)(v187 + 16) = xmmword_23BB8C510;
      v188 = MEMORY[0x24BEE17F0];
      v189 = *(_QWORD *)(v140 + 16);
      *(_QWORD *)(v187 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v187 + 64) = v188;
      *(_QWORD *)(v187 + 32) = v189;
      v190 = qword_256A58DD8;
      swift_bridgeObjectRetain();
      if (v190 != -1)
        swift_once();
      v191 = (void *)qword_256A73E40;
      v247 = v142;
      if (qword_256A73E40)
      {
        swift_bridgeObjectRetain();
        v192 = v191;
        v193 = v192;
      }
      else
      {
        v194 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v193 = objc_msgSend(v194, sel_mainBundle);
        v192 = 0;
      }
      v195 = v192;
      v196 = (void *)sub_23BB8A784();
      v197 = (void *)sub_23BB8A784();
      v198 = objc_msgSend(v193, sel_localizedStringForKey_value_table_, v196, 0, v197);

      sub_23BB8A7B4();
      v199 = sub_23BB8A7C0();
      v201 = v200;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v202 = (uint64_t)v223;
      *v223 = v199;
      *(_QWORD *)(v202 + 8) = v201;
      swift_storeEnumTagMultiPayload();
      v203 = (uint64_t)v221;
      *v221 = v180;
      *(_QWORD *)(v203 + 8) = v181;
      v204 = type metadata accessor for SessionLocation.Description(0);
      sub_23B990D24(v202, v203 + *(int *)(v204 + 20), &qword_256A59C88);
      v205 = (_QWORD *)(v203 + *(int *)(v204 + 24));
      *v205 = 0;
      v205[1] = 0;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 56))(v203, 0, 1, v204);
      v168 = v227;
      sub_23B990D24(v203, v227, &qword_256A59C90);
      v206 = type metadata accessor for DirectionsState();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 56))(v229, 2, 2, v206);
    }
    else
    {
      swift_bridgeObjectRelease();
      v167 = v229;
      v168 = v227;
LABEL_61:
      v177 = type metadata accessor for SessionLocation.Description(0);
      v178 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56);
      v247 = 1;
      v178(v168, 1, 1, v177);
      v179 = type metadata accessor for DirectionsState();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 56))(v167, 1, 2, v179);
    }
    goto LABEL_72;
  }
  swift_bridgeObjectRetain();
  v239 = 0;
  LODWORD(v240) = 0;
  a1 = 0;
  v245 = (_QWORD *)(v141 - 1);
  v142 = MEMORY[0x24BEE4AF8];
  v246 = v140;
LABEL_35:
  if ((unint64_t)a1 >= *(_QWORD *)(v140 + 16))
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v17 = 56 * a1;
  while (1)
  {
    v247 = v142;
    v143 = v140 + v17;
    v145 = *(_QWORD *)(v140 + v17 + 32);
    v144 = *(_QWORD *)(v143 + 40);
    v147 = *(_QWORD *)(v143 + 48);
    v146 = *(ValueMetadata **)(v143 + 56);
    v148 = *(_BYTE *)(v143 + 64);
    v65 = *(_QWORD *)(v143 + 72);
    v149 = *(void **)(v143 + 80);
    v249 = v145;
    *(_QWORD *)&v250 = v144;
    *((_QWORD *)&v250 + 1) = v147;
    v251 = v146;
    LOBYTE(v252) = v148;
    v253 = v65;
    v254 = v149;
    v248 = v144;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v150 = v149;
    v151 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23BA4C5C4((__int128 *)&v249);
    if (!v153)
      break;
    v155 = v153;
    if (v153 == (void *)2)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v142 = v247;
    }
    else
    {
      v243 = v151;
      if (v153 == (void *)1)
      {
        v165 = v152;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v239 = 1;
        sub_23B9A1394((uint64_t)v243, v165, (void *)1);
        v140 = v246;
        v166 = v245 == (_QWORD *)a1++;
        v142 = v247;
        if (!v166)
          goto LABEL_35;
LABEL_52:
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v142 + 16))
          goto LABEL_63;
        swift_bridgeObjectRelease();
        if ((v240 & 1) == 0)
        {
          v167 = v229;
          v168 = v227;
          goto LABEL_61;
        }
        goto LABEL_75;
      }
      v249 = v145;
      v156 = v154;
      *(_QWORD *)&v250 = v248;
      *((_QWORD *)&v250 + 1) = v147;
      v251 = v146;
      LOBYTE(v252) = v148;
      v253 = v65;
      v254 = v150;
      v157 = v152;
      swift_bridgeObjectRetain_n();
      v158 = v155;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v241 = (char *)v150;
      v159 = v158;
      v242 = v157;
      sub_23B99C614(v157, v159, v156, &v249, v233);
      v142 = v247;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v142 = sub_23BB63644(0, *(_QWORD *)(v142 + 16) + 1, 1, v142);
      v161 = *(_QWORD *)(v142 + 16);
      v160 = *(_QWORD *)(v142 + 24);
      if (v161 >= v160 >> 1)
        v142 = sub_23BB63644(v160 > 1, v161 + 1, 1, v142);
      *(_QWORD *)(v142 + 16) = v161 + 1;
      sub_23B989CA4(v233, v142+ ((*(unsigned __int8 *)(v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v232 + 80))+ *(_QWORD *)(v232 + 72) * v161, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v162 = v242;
      swift_bridgeObjectRelease();
      sub_23B9A1394((uint64_t)v243, v162, v155);
    }
    v140 = v246;
    if (v245 == (_QWORD *)a1)
      goto LABEL_52;
LABEL_39:
    ++a1;
    v17 += 56;
    if ((unint64_t)a1 >= *(_QWORD *)(v140 + 16))
      goto LABEL_76;
  }
  v163 = v152;
  v164 = (uint64_t)v151;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B9A1394(v164, v163, 0);
  if (v245 != (_QWORD *)a1)
  {
    LODWORD(v240) = 1;
    v140 = v246;
    v142 = v247;
    goto LABEL_39;
  }
  v140 = v246;
  swift_bridgeObjectRelease();
  v142 = v247;
  if (*(_QWORD *)(v247 + 16))
    goto LABEL_63;
  swift_bridgeObjectRelease();
LABEL_75:
  v215 = type metadata accessor for SessionLocation.Description(0);
  v168 = v227;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v215 - 8) + 56))(v227, 1, 1, v215);
  v216 = type metadata accessor for DirectionsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 56))(v229, 1, 2, v216);
  v247 = 0;
LABEL_72:
  v207 = v228;
  sub_23B989EFC(v168, (uint64_t)v228, &qword_256A59C90);
  v65 = v230;
  v208 = v226;
  sub_23B989EFC(v230, v226, (uint64_t *)&unk_256A5E6B0);
  v209 = (uint64_t)v225;
  v210 = v225[4];
  v211 = v225[5];
  v248 = v225[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v212 = sub_23B99CD7C();
  v213 = sub_23B99D828();
  swift_release();
  sub_23B989D60(v65, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(v168, &qword_256A59C90);
  sub_23B989D9C(v209, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  a1 = (int64_t)v219;
  *v219 = v247;
  v72 = (int *)type metadata accessor for DetailsAppView.State(0);
  sub_23B990D24((uint64_t)v207, a1 + v72[5], &qword_256A59C90);
  sub_23B990D24(v208, a1 + v72[6], (uint64_t *)&unk_256A5E6B0);
  *(_QWORD *)(a1 + v72[7]) = v211;
  v214 = (unint64_t *)(a1 + v72[8]);
  *v214 = v248;
  v214[1] = v210;
  *(_BYTE *)(a1 + v72[9]) = v212;
  *(_BYTE *)(a1 + v72[10]) = v213;
  result = sub_23B989CA4(v229, a1 + v72[11], (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  LOBYTE(v65) = v218;
LABEL_73:
  *(_BYTE *)(a1 + v72[12]) = v65 & 1;
  return result;
}

uint64_t sub_23B99C614@<X0>(uint64_t a1@<X1>, void *a2@<X2>, char a3@<W3>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  int *v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  char *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v70 = a5;
  v71 = a1;
  v8 = (int *)type metadata accessor for Annotation();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (unint64_t *)((char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_23BB88984();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v67 = (uint64_t)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v58 - v22;
  v24 = a4[1];
  v25 = a4[2];
  v26 = a4[3];
  v27 = (void *)a4[6];
  v68 = a4[5];
  v72 = v26;
  v66 = v25;
  if (v24)
  {
    v28 = *a4;
    v64 = v24;
    v65 = v28;
    v29 = v24;
  }
  else
  {
    v69 = v13;
    v30 = a2;
    v31 = v8;
    v32 = (char *)&v58 - v22;
    v33 = v12;
    v34 = a3;
    v35 = v25;
    swift_bridgeObjectRetain();
    v29 = 0;
    v64 = v72;
    v65 = v35;
    a3 = v34;
    v12 = v33;
    v23 = v32;
    v8 = v31;
    a2 = v30;
    v13 = v69;
  }
  swift_bridgeObjectRetain();
  v63 = v27;
  v69 = v29;
  swift_bridgeObjectRetain();
  objc_msgSend(a2, sel_coordinate);
  v37 = v36;
  v39 = v38;
  v62 = a2;
  if (a3 == 2)
  {
    v40 = objc_msgSend(a2, sel_timestamp);
    sub_23BB8896C();

    sub_23BB88888();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v41(v23, 0, 1, v12);
    objc_msgSend(a2, sel_horizontalAccuracy);
    v43 = v42;
LABEL_8:
    v46 = 0;
    v58 = 0;
    v59 = 0;
    v60 = 0;
    v61 = 0;
    goto LABEL_9;
  }
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v41(v23, 1, 1, v12);
  objc_msgSend(a2, sel_horizontalAccuracy);
  v43 = v44;
  if (a3 != 3)
    goto LABEL_8;
  v45 = sub_23BB89FBC();
  v60 = 0xD000000000000010;
  v61 = v45;
  v58 = 0xE900000000000065;
  v59 = 0x800000023BB99AB0;
  v46 = 0x74696C6C65746153;
LABEL_9:
  v47 = v67;
  sub_23B989EFC((uint64_t)v23, v67, (uint64_t *)&unk_256A5E6B0);
  v48 = (uint64_t)v11 + v8[7];
  v41((char *)v48, 1, 1, v12);
  v49 = (char *)v11 + v8[10];
  *((_QWORD *)v49 + 4) = 0;
  *(_OWORD *)v49 = 0u;
  *((_OWORD *)v49 + 1) = 0u;
  v50 = v72;
  *v11 = v66;
  v11[1] = v50;
  v52 = v63;
  v51 = v64;
  v11[2] = v65;
  v11[3] = v51;
  v11[4] = v37;
  v11[5] = v39;
  v53 = v52;
  sub_23B9A141C(v47, v48);
  *(_QWORD *)((char *)v11 + v8[8]) = v43;
  v54 = (char *)v11 + v8[9];
  *(_QWORD *)v54 = v52;
  *((_QWORD *)v54 + 1) = 0;
  *((_QWORD *)v54 + 2) = 0;
  *((_QWORD *)v54 + 3) = 0;
  v54[32] = 0;
  sub_23B9A1464(*(_QWORD *)v49, *((_QWORD *)v49 + 1));
  v55 = v58;
  *(_QWORD *)v49 = v46;
  *((_QWORD *)v49 + 1) = v55;
  v56 = v59;
  *((_QWORD *)v49 + 2) = v60;
  *((_QWORD *)v49 + 3) = v56;
  *((_QWORD *)v49 + 4) = v61;
  sub_23B989CA4((uint64_t)v11, v70, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);

  sub_23B989D60((uint64_t)v23, (uint64_t *)&unk_256A5E6B0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23B99C9FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CA8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DirectionsState();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    v32 = v10;
    v33 = v9;
    v34 = a2;
    v14 = *a1;
    v15 = a1[1];
    v17 = a1[2];
    v16 = a1[3];
    v18 = *((_BYTE *)a1 + 32);
    v20 = a1[5];
    v19 = a1[6];
    *(_QWORD *)&v35 = v14;
    *((_QWORD *)&v35 + 1) = v15;
    v36 = v17;
    v37 = v16;
    v38 = v18;
    v39 = v20;
    v40 = v19;
    swift_retain();
    if (sub_23BA4CCE0(&v35))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v34, 2, 2, v33);
      return swift_release();
    }
    else
    {
      *(_QWORD *)&v35 = v14;
      *((_QWORD *)&v35 + 1) = v15;
      v36 = v17;
      v37 = v16;
      v38 = v18;
      v39 = v20;
      v40 = v19;
      sub_23BA4D22C(&v35, (uint64_t)v8);
      v28 = v32;
      v27 = v33;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v33) == 1)
      {
        if (qword_256A58DB8 != -1)
          swift_once();
        v29 = __swift_project_value_buffer(v27, (uint64_t)qword_256A73E00);
        sub_23B989CE8(v29, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        swift_release();
        sub_23B989D60((uint64_t)v8, &qword_256A59CA8);
      }
      else
      {
        swift_release();
        sub_23B989CA4((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      }
      v30 = v34;
      sub_23B989CA4((uint64_t)v13, v34, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v30, 0, 2, v27);
    }
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v22 = sub_23BB891C4();
    __swift_project_value_buffer(v22, (uint64_t)qword_256A73E80);
    v23 = sub_23BB891AC();
    v24 = sub_23BB8ABEC();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v35 = v26;
      *(_DWORD *)v25 = 136315138;
      v41 = sub_23BB7B69C(0xD000000000000012, 0x800000023BB99A90, (uint64_t *)&v35);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v23, v24, "CompositeAppViewModel: %s - No Repository", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v26, -1, -1);
      MEMORY[0x24260D9B4](v25, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a2, 1, 2, v9);
  }
}

uint64_t sub_23B99CD7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int EnumCaseMultiPayload;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  _QWORD v66[3];
  unint64_t v67;
  __int128 v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v3, v6);
  v73 = (uint64_t)v66 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v74 = (char *)v66 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v78 = (uint64_t)v66 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for CompositeAppViewInitialInfo();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v23, (uint64_t)v17, &qword_256A59C70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_23B989D60((uint64_t)v17, &qword_256A59C70);
    if (qword_256A58E00 != -1)
      swift_once();
    v24 = sub_23BB891C4();
    __swift_project_value_buffer(v24, (uint64_t)qword_256A73E80);
    v25 = sub_23BB891AC();
    v26 = sub_23BB8ABD4();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v79 = v28;
      *(_DWORD *)v27 = 136315138;
      v85 = sub_23BB7B69C(0xD000000000000010, 0x800000023BB999F0, &v79);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v25, v26, "CompositeAppViewModel: %s - MonitorState with no initialInfo", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v28, -1, -1);
      MEMORY[0x24260D9B4](v27, -1, -1);
    }

    return 0;
  }
  sub_23B989CA4((uint64_t)v17, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v50 = sub_23BB891C4();
    __swift_project_value_buffer(v50, (uint64_t)qword_256A73E80);
    v51 = sub_23BB891AC();
    v52 = sub_23BB8ABEC();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v79 = v54;
      *(_DWORD *)v53 = 136315138;
      v85 = sub_23BB7B69C(0xD000000000000010, 0x800000023BB999F0, &v79);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v51, v52, "CompositeAppViewModel: %s - No Repository", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v54, -1, -1);
      MEMORY[0x24260D9B4](v53, -1, -1);
    }

LABEL_34:
    sub_23B989D9C((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    return 0;
  }
  v29 = *((_QWORD *)v22 + 5);
  v30 = *(_QWORD *)(v29 + 16);
  if (!v30)
  {
    v55 = qword_256A58E00;
    swift_retain();
    if (v55 != -1)
      swift_once();
    v56 = sub_23BB891C4();
    __swift_project_value_buffer(v56, (uint64_t)qword_256A73E80);
    v57 = sub_23BB891AC();
    v58 = sub_23BB8ABEC();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v79 = v60;
      *(_DWORD *)v59 = 136315138;
      v85 = sub_23BB7B69C(0xD000000000000010, 0x800000023BB999F0, &v79);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v57, v58, "CompositeAppViewModel: %s - Action: .none - No friends", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v60, -1, -1);
      MEMORY[0x24260D9B4](v59, -1, -1);
    }

LABEL_33:
    swift_release();
    goto LABEL_34;
  }
  v69 = v1;
  swift_retain();
  swift_bridgeObjectRetain();
  v66[1] = v29;
  v31 = (void **)(v29 + 80);
  *(_QWORD *)&v32 = 136315394;
  v68 = v32;
  v66[0] = "internalRelativeFormatStyle";
  v67 = 0x800000023BB999F0;
  v66[2] = MEMORY[0x24BEE4AD8] + 8;
  v33 = (uint64_t)v74;
  v70 = v5;
  v71 = v22;
  while (1)
  {
    v34 = (uint64_t)*(v31 - 3);
    v36 = (uint64_t)*(v31 - 1);
    v35 = *v31;
    v37 = *((_BYTE *)v31 - 16);
    v79 = (uint64_t)*(v31 - 6);
    v80 = *(_OWORD *)(v31 - 5);
    v81 = v34;
    v82 = v37;
    v83 = v36;
    v84 = v35;
    v77 = v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76 = v35;
    v38 = v78;
    sub_23BA4CB8C((__int128 *)&v79, v78);
    if (qword_256A58E00 != -1)
      swift_once();
    v72 = sub_23BB891C4();
    __swift_project_value_buffer(v72, (uint64_t)qword_256A73E80);
    sub_23B989EFC(v38, v33, &qword_256A59C78);
    v39 = sub_23BB891AC();
    v40 = sub_23BB8ABEC();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v79 = v42;
      *(_DWORD *)v41 = v68;
      *(_QWORD *)(v41 + 4) = sub_23BB7B69C(0xD000000000000010, v67, &v79);
      *(_WORD *)(v41 + 12) = 2080;
      sub_23B989EFC(v33, v73, &qword_256A59C78);
      v43 = sub_23BB8A7D8();
      *(_QWORD *)(v41 + 14) = sub_23BB7B69C(v43, v44, &v79);
      v33 = (uint64_t)v74;
      swift_bridgeObjectRelease();
      sub_23B989D60(v33, &qword_256A59C78);
      _os_log_impl(&dword_23B979000, v39, v40, "CompositeAppViewModel: %s - followerState: %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      v45 = v42;
      v22 = v71;
      MEMORY[0x24260D9B4](v45, -1, -1);
      v46 = v41;
      v5 = v70;
      MEMORY[0x24260D9B4](v46, -1, -1);
    }
    else
    {
      sub_23B989D60(v33, &qword_256A59C78);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B990D24(v78, (uint64_t)v5, &qword_256A59C78);
    v47 = type metadata accessor for SessionFollowerState(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v5, 1, v47) == 1)
      goto LABEL_32;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
      break;
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
    sub_23B989D60((uint64_t)&v5[*(int *)(v49 + 48)], (uint64_t *)&unk_256A5E6B0);
    sub_23B989D60((uint64_t)v5, (uint64_t *)&unk_256A5E6B0);
    v31 += 7;
    if (!--v30)
    {
      swift_bridgeObjectRelease();
      if (qword_256A58E00 != -1)
        swift_once();
      __swift_project_value_buffer(v72, (uint64_t)qword_256A73E80);
      v62 = sub_23BB891AC();
      v63 = sub_23BB8ABEC();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc();
        v65 = swift_slowAlloc();
        v79 = v65;
        *(_DWORD *)v64 = 136315138;
        v85 = sub_23BB7B69C(0xD000000000000010, v66[0] | 0x8000000000000000, &v79);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v62, v63, "CompositeAppViewModel: %s - Action: .canStopSharingLocation", v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v65, -1, -1);
        MEMORY[0x24260D9B4](v64, -1, -1);
      }

      swift_release();
      sub_23B989D9C((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
      return 2;
    }
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_23B989D9C((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
      return 1;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B989D9C((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  sub_23B989D60((uint64_t)v5, (uint64_t *)&unk_256A5E6B0);
  return 1;
}

uint64_t sub_23B99D828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  int v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  _BYTE v85[4];
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109[4];
  char v110;
  uint64_t v111;
  void *v112;

  v1 = v0;
  v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6E0);
  v3 = MEMORY[0x24BDAC7A8](v100, v2);
  v5 = &v85[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v3, v6);
  v99 = &v85[-v8];
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = &v85[-v11];
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = &v85[-v14];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = &v85[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for CompositeAppViewInitialInfo();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = &v85[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v25, (uint64_t)v19, &qword_256A59C70);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_23B989D60((uint64_t)v19, &qword_256A59C70);
    if (qword_256A58E00 != -1)
      swift_once();
    v26 = sub_23BB891C4();
    __swift_project_value_buffer(v26, (uint64_t)qword_256A73E80);
    v27 = sub_23BB891AC();
    v28 = sub_23BB8ABD4();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v109[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v102 = sub_23BB7B69C(0xD000000000000011, 0x800000023BB99A10, v109);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v27, v28, "CompositeAppViewModel: %s - MonitorState with no initialInfo", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v30, -1, -1);
      MEMORY[0x24260D9B4](v29, -1, -1);
    }

    return 0;
  }
  sub_23B989CA4((uint64_t)v19, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  sub_23BB3A0B8((uint64_t)&v102);
  v31 = v105;
  v32 = v24;
  if (!v105)
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v58 = sub_23BB891C4();
    __swift_project_value_buffer(v58, (uint64_t)qword_256A73E80);
    v59 = sub_23BB891AC();
    v60 = sub_23BB8ABD4();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      v109[0] = v62;
      *(_DWORD *)v61 = 136315138;
      v102 = sub_23BB7B69C(0xD000000000000011, 0x800000023BB99A10, v109);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v59, v60, "CompositeAppViewModel: %s - No friendForNonGroupChat", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v62, -1, -1);
      MEMORY[0x24260D9B4](v61, -1, -1);
    }

    goto LABEL_30;
  }
  v94 = v12;
  v93 = v5;
  v34 = v102;
  v33 = v103;
  v35 = v104;
  v36 = v106;
  v37 = v107;
  v109[0] = v102;
  v109[1] = v103;
  v109[2] = v104;
  v109[3] = v105;
  v110 = v106;
  v111 = v107;
  v112 = v108;
  v98 = v108;
  v38 = *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository);
  if (!v38)
  {
    v63 = v106;
    if (qword_256A58E00 != -1)
      swift_once();
    v64 = sub_23BB891C4();
    __swift_project_value_buffer(v64, (uint64_t)qword_256A73E80);
    v65 = sub_23BB891AC();
    v66 = sub_23BB8ABEC();
    if (os_log_type_enabled(v65, v66))
    {
      v96 = v34;
      v67 = swift_slowAlloc();
      v97 = v35;
      v68 = (uint8_t *)v67;
      v69 = swift_slowAlloc();
      v95 = (uint64_t)v32;
      v70 = v33;
      v71 = v69;
      v102 = v69;
      *(_DWORD *)v68 = 136315138;
      v101 = sub_23BB7B69C(0xD000000000000011, 0x800000023BB99A10, &v102);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v65, v66, "CompositeAppViewModel: %s - No Repository", v68, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v71, -1, -1);
      MEMORY[0x24260D9B4](v68, -1, -1);
      sub_23B9A12B4(v96, v70, v97, v31, v63, v37, v98);

      v72 = v95;
LABEL_31:
      sub_23B989D9C(v72, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
      return 0;
    }
    sub_23B9A12B4(v34, v33, v35, v31, v63, v37, v98);

LABEL_30:
    v72 = (uint64_t)v32;
    goto LABEL_31;
  }
  v95 = (uint64_t)v32;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  v39 = v33;
  v40 = v35;
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  *(_QWORD *)(inited + 32) = v40;
  *(_QWORD *)(inited + 40) = v31;
  *(_BYTE *)(inited + 48) = v36;
  v92 = v15;
  v42 = v98;
  sub_23B9A1300(v34, v39, v40, v31, v36, v37, v98);
  sub_23B9A1300(v34, v39, v40, v31, v36, v37, v42);
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = swift_bridgeObjectRetain();
  v44 = sub_23BA7CF04(v43, (uint64_t)v109);
  sub_23B9A12B4(v34, v39, v40, v31, v36, v37, v42);
  swift_bridgeObjectRelease();
  v102 = inited;
  sub_23BA78CA0(v44);
  v96 = v34;
  v89 = v39;
  v97 = v40;
  v87 = v31;
  v90 = v36;
  v45 = v42;
  v46 = (uint64_t)v92;
  sub_23B9A12B4(v34, v39, v40, v31, v36, v37, v45);
  v88 = v38;
  sub_23BA6E0CC(v102, v46);
  swift_bridgeObjectRelease();
  if (qword_256A58E00 != -1)
    swift_once();
  v47 = sub_23BB891C4();
  __swift_project_value_buffer(v47, (uint64_t)qword_256A73E80);
  v48 = (uint64_t)v94;
  sub_23B989EFC(v46, (uint64_t)v94, (uint64_t *)&unk_256A5E6E0);
  v49 = sub_23BB891AC();
  v50 = sub_23BB8ABEC();
  v51 = v50;
  v52 = os_log_type_enabled(v49, v50);
  v91 = v37;
  if (v52)
  {
    v53 = swift_slowAlloc();
    v86 = v51;
    v54 = v53;
    v55 = swift_slowAlloc();
    v102 = v55;
    *(_DWORD *)v54 = 136315394;
    v101 = sub_23BB7B69C(0xD000000000000011, 0x800000023BB99A10, &v102);
    sub_23BB8ACB8();
    *(_WORD *)(v54 + 12) = 2080;
    sub_23B989EFC(v48, (uint64_t)v99, (uint64_t *)&unk_256A5E6E0);
    v56 = sub_23BB8A7D8();
    v101 = sub_23BB7B69C(v56, v57, &v102);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23B989D60(v48, (uint64_t *)&unk_256A5E6E0);
    _os_log_impl(&dword_23B979000, v49, (os_log_type_t)v86, "CompositeAppViewModel: %s - followingState: %s", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v55, -1, -1);
    MEMORY[0x24260D9B4](v54, -1, -1);
  }
  else
  {
    sub_23B989D60(v48, (uint64_t *)&unk_256A5E6E0);
  }

  v73 = v87;
  v74 = v95;
  v75 = (uint64_t)v93;
  sub_23B989EFC(v46, (uint64_t)v93, (uint64_t *)&unk_256A5E6E0);
  v76 = type metadata accessor for SessionFollowingState(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 48))(v75, 1, v76) != 1)
  {
    v83 = (char *)&loc_23B99E18C + 4 * byte_23BB8D098[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v77 = sub_23BB891AC();
  v78 = sub_23BB8ABEC();
  if (os_log_type_enabled(v77, v78))
  {
    v79 = swift_slowAlloc();
    v80 = swift_slowAlloc();
    v102 = v80;
    *(_DWORD *)v79 = 136315394;
    v101 = sub_23BB7B69C(0xD000000000000011, 0x800000023BB99A10, &v102);
    sub_23BB8ACB8();
    *(_WORD *)(v79 + 12) = 2080;
    LOBYTE(v101) = 0;
    v81 = sub_23BB8A7D8();
    v101 = sub_23BB7B69C(v81, v82, &v102);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v77, v78, "CompositeAppViewModel: %s - Action: %s", (uint8_t *)v79, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v80, -1, -1);
    MEMORY[0x24260D9B4](v79, -1, -1);
    swift_release();
    sub_23B9A12B4(v96, v89, v97, v73, v90, v91, v98);

    sub_23B989D60((uint64_t)v92, (uint64_t *)&unk_256A5E6E0);
  }
  else
  {
    swift_release();
    sub_23B9A12B4(v96, v89, v97, v73, v90, v91, v98);

    sub_23B989D60(v46, (uint64_t *)&unk_256A5E6E0);
  }
  sub_23B989D9C(v74, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
  return 0;
}

uint64_t sub_23B99E4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C70);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B99D828();
  v7 = sub_23B99CD7C();
  v8 = sub_23B99ADA0(v6, (uint64_t)&unk_250CA99A0);
  v9 = sub_23B99ADA0(v7, (uint64_t)&unk_250CA99C8);
  sub_23BB88D8C();
  v10 = MEMORY[0x24260ACCC]();
  v11 = v1 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_initialInfo;
  swift_beginAccess();
  sub_23B989EFC(v11, (uint64_t)v5, &qword_256A59C70);
  v12 = type metadata accessor for CompositeAppViewInitialInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12) == 1)
  {
    sub_23B989D60((uint64_t)v5, &qword_256A59C70);
    v13 = 1;
  }
  else
  {
    v14 = v5[*(int *)(v12 + 32)];
    sub_23B989D9C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
    v13 = (v14 | ~v10) & 1;
  }
  v15 = v7 == 2;
  v16 = sub_23BB071FC();
  v17 = 0x100000000;
  if ((v16 & 1) == 0)
    v17 = 0;
  v18 = 0x10000;
  if (!v9)
    v18 = 0;
  v19 = 256;
  if (!v8)
    v19 = 0;
  return v19 | (v15 << 24) | v17 | v18 | v13;
}

uint64_t sub_23B99E684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  __int128 v19;
  __int16 v20;
  uint64_t v21;

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    v5 = qword_256A58E00;
    swift_retain();
    if (v5 != -1)
      swift_once();
    v6 = sub_23BB891C4();
    __swift_project_value_buffer(v6, (uint64_t)qword_256A73E80);
    v7 = sub_23BB891AC();
    v8 = sub_23BB8ABEC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      *(_QWORD *)&v19 = v10;
      *(_DWORD *)v9 = 136315138;
      v21 = sub_23BB7B69C(0xD000000000000024, 0x800000023BB99B10, (uint64_t *)&v19);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v7, v8, "CompositeAppViewModel: %s - pendingShare", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v10, -1, -1);
      MEMORY[0x24260D9B4](v9, -1, -1);
    }

    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    swift_release();
    v11 = v20;
    v12 = v19;
    *(_QWORD *)a2 = a1;
    *(_OWORD *)(a2 + 8) = v12;
    *(_WORD *)(a2 + 24) = v11;
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v13 = sub_23BB891C4();
    __swift_project_value_buffer(v13, (uint64_t)qword_256A73E80);
    v14 = sub_23BB891AC();
    v15 = sub_23BB8ABEC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      *(_QWORD *)&v19 = v17;
      *(_DWORD *)v16 = 136315138;
      v21 = sub_23BB7B69C(0xD000000000000024, 0x800000023BB99B10, (uint64_t *)&v19);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v14, v15, "CompositeAppViewModel: %s - No Repository", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v17, -1, -1);
      MEMORY[0x24260D9B4](v16, -1, -1);
    }

    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = a1;
    *(_WORD *)(a2 + 24) = 0;
  }
  type metadata accessor for ShareSentMessageView.ShareState(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23B99E9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD v76[2];
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v79 = a3;
  v80 = a4;
  v85 = a1;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  MEMORY[0x24BDAC7A8](v82, v8);
  v86 = (uint64_t)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v81 = (uint64_t)v76 - v12;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)v76 - v15;
  MEMORY[0x24BDAC7A8](v17, v18);
  v88 = (uint64_t)v76 - v19;
  v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v77, v20);
  v76[1] = (char *)v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v84 = (char *)v76 - v24;
  MEMORY[0x24BDAC7A8](v25, v26);
  v78 = (char *)v76 - v27;
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)v76 - v30;
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)v76 - v34;
  v36 = sub_23BB88984();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v38);
  v40 = (char *)v76 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v42);
  v44 = (char *)v76 - v43;
  v45 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository);
  if (v45)
  {
    v83 = a5;
    sub_23B989EFC(a2, (uint64_t)v35, (uint64_t *)&unk_256A5E6B0);
    v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    v47 = v46(v35, 1, v36);
    v87 = v45;
    if (v47 == 1)
    {
      swift_retain();
      sub_23B989D60((uint64_t)v35, (uint64_t *)&unk_256A5E6B0);
LABEL_24:
      v64 = v88;
      sub_23BA4CAE4(v85, v88);
      if (qword_256A58E00 != -1)
        swift_once();
      v65 = sub_23BB891C4();
      __swift_project_value_buffer(v65, (uint64_t)qword_256A73E80);
      sub_23B989EFC(v64, (uint64_t)v16, &qword_256A59C78);
      v66 = sub_23BB891AC();
      v67 = sub_23BB8ABEC();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = swift_slowAlloc();
        v69 = swift_slowAlloc();
        v89 = v69;
        *(_DWORD *)v68 = 136315394;
        v90 = sub_23BB7B69C(0xD000000000000041, 0x800000023BB99B40, &v89);
        sub_23BB8ACB8();
        *(_WORD *)(v68 + 12) = 2080;
        sub_23B989EFC((uint64_t)v16, v81, &qword_256A59C78);
        v70 = sub_23BB8A7D8();
        v90 = sub_23BB7B69C(v70, v71, &v89);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        v64 = v88;
        sub_23B989D60((uint64_t)v16, &qword_256A59C78);
        _os_log_impl(&dword_23B979000, v66, v67, "CompositeAppViewModel: %s - followerState: %s", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v69, -1, -1);
        MEMORY[0x24260D9B4](v68, -1, -1);
      }
      else
      {
        sub_23B989D60((uint64_t)v16, &qword_256A59C78);
      }

      v72 = v86;
      sub_23B989EFC(v64, v86, &qword_256A59C78);
      v73 = type metadata accessor for SessionFollowerState(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v72, 1, v73) != 1)
      {
        v74 = (char *)&loc_23B99F270 + 4 * byte_23BB8D09C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      sub_23B989D60(v64, &qword_256A59C78);
      swift_release();
      type metadata accessor for ShareSentMessageView.ShareState(0);
      return swift_storeEnumTagMultiPayload();
    }
    v76[0] = *(_QWORD *)(v37 + 32);
    ((void (*)(char *, char *, uint64_t))v76[0])(v44, v35, v36);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23BB89230();
    swift_release();
    swift_release();
    v53 = v89;
    if (*(_QWORD *)(v89 + 16))
    {
      v54 = v80;
      swift_bridgeObjectRetain();
      v55 = sub_23B984B34(v79, v54);
      if ((v56 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v31, *(_QWORD *)(v53 + 56) + *(_QWORD *)(v37 + 72) * v55, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v31, 0, 1, v36);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v31, 1, 1, v36);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v31, 1, 1, v36);
    }
    swift_bridgeObjectRelease();
    if (v46(v31, 1, v36) == 1)
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v44, v36);
      sub_23B989D60((uint64_t)v31, (uint64_t *)&unk_256A5E6B0);
      goto LABEL_24;
    }
    ((void (*)(char *, char *, uint64_t))v76[0])(v40, v31, v36);
    if ((sub_23BB888DC() & 1) == 0)
    {
      v63 = *(void (**)(char *, uint64_t))(v37 + 8);
      v63(v40, v36);
      v63(v44, v36);
      goto LABEL_24;
    }
    if (qword_256A58E00 != -1)
      swift_once();
    v57 = sub_23BB891C4();
    __swift_project_value_buffer(v57, (uint64_t)qword_256A73E80);
    v58 = sub_23BB891AC();
    v59 = sub_23BB8ABEC();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = swift_slowAlloc();
      v89 = v61;
      *(_DWORD *)v60 = 136315138;
      v90 = sub_23BB7B69C(0xD000000000000041, 0x800000023BB99B40, &v89);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v58, v59, "CompositeAppViewModel: %s - not last message", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v61, -1, -1);
      MEMORY[0x24260D9B4](v60, -1, -1);
    }

    swift_release();
    v62 = *(void (**)(char *, uint64_t))(v37 + 8);
    v62(v40, v36);
    v62(v44, v36);
    type metadata accessor for ShareSentMessageView.ShareState(0);
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v48 = sub_23BB891C4();
    __swift_project_value_buffer(v48, (uint64_t)qword_256A73E80);
    v49 = sub_23BB891AC();
    v50 = sub_23BB8ABEC();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v89 = v52;
      *(_DWORD *)v51 = 136315138;
      v90 = sub_23BB7B69C(0xD000000000000041, 0x800000023BB99B40, &v89);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v49, v50, "CompositeAppViewModel: %s - No Repository", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v52, -1, -1);
      MEMORY[0x24260D9B4](v51, -1, -1);
    }

    type metadata accessor for ShareSentMessageView.ShareState(0);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23B99F5E4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t Action;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  void (*v66)(char *, uint64_t);
  uint64_t inited;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v85;
  _QWORD v86[4];
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99[9];
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  char v105;

  v6 = v5;
  v90 = a4;
  v89 = a3;
  v87 = type metadata accessor for Annotation();
  v86[3] = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v10);
  v86[1] = (char *)v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Action = type metadata accessor for LocateAction();
  MEMORY[0x24BDAC7A8](Action, v13);
  v86[2] = (char *)v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6E0);
  MEMORY[0x24BDAC7A8](v92, v15);
  v94 = (uint64_t)v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v91 = (uint64_t)v86 - v19;
  MEMORY[0x24BDAC7A8](v20, v21);
  v95 = (char *)v86 - v22;
  MEMORY[0x24BDAC7A8](v23, v24);
  v96 = (uint64_t)v86 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v31);
  v33 = (char *)v86 - v32;
  v34 = sub_23BB88984();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v36);
  v88 = (char *)v86 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38, v39);
  v41 = (char *)v86 - v40;
  v42 = a1[1];
  v100 = *a1;
  v101 = v42;
  v102 = a1[2];
  v103 = *((_QWORD *)a1 + 6);
  v86[0] = v6;
  if (!*(_QWORD *)(v6 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v45 = sub_23BB891C4();
    __swift_project_value_buffer(v45, (uint64_t)qword_256A73E80);
    v46 = sub_23BB891AC();
    v47 = sub_23BB8ABEC();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v99[0] = v49;
      *(_DWORD *)v48 = 136315138;
      *(_QWORD *)&v104 = sub_23BB7B69C(0xD00000000000003CLL, 0x800000023BB99AD0, v99);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v46, v47, "CompositeAppViewModel: %s - No Repository", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v49, -1, -1);
      MEMORY[0x24260D9B4](v48, -1, -1);
    }

    v50 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
    v52 = a5;
    goto LABEL_31;
  }
  v93 = a5;
  sub_23B989EFC(a2, (uint64_t)v33, (uint64_t *)&unk_256A5E6B0);
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v43(v33, 1, v34) == 1)
  {
    swift_retain();
    sub_23B989D60((uint64_t)v33, (uint64_t *)&unk_256A5E6B0);
    v44 = (uint64_t)v95;
LABEL_23:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
    v68 = v102;
    v105 = v102;
    v104 = v101;
    *(_OWORD *)(inited + 32) = v101;
    *(_BYTE *)(inited + 48) = v68;
    sub_23B9A14A0((uint64_t)&v100);
    sub_23B9A14A0((uint64_t)&v100);
    sub_23B9A14EC((uint64_t)&v104);
    v69 = swift_bridgeObjectRetain();
    v70 = sub_23BA7CF04(v69, (uint64_t)&v100);
    sub_23B9A1514((uint64_t)&v100);
    swift_bridgeObjectRelease();
    v99[0] = inited;
    sub_23BA78CA0(v70);
    sub_23B9A1514((uint64_t)&v100);
    v71 = v96;
    sub_23BA6E0CC(v99[0], v96);
    swift_bridgeObjectRelease();
    if (qword_256A58E00 != -1)
      swift_once();
    v72 = sub_23BB891C4();
    __swift_project_value_buffer(v72, (uint64_t)qword_256A73E80);
    sub_23B989EFC(v71, v44, (uint64_t *)&unk_256A5E6E0);
    v73 = sub_23BB891AC();
    v74 = sub_23BB8ABEC();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      v99[0] = v76;
      *(_DWORD *)v75 = 136315394;
      v98 = sub_23BB7B69C(0xD00000000000003CLL, 0x800000023BB99AD0, v99);
      sub_23BB8ACB8();
      *(_WORD *)(v75 + 12) = 2080;
      sub_23B989EFC(v44, v91, (uint64_t *)&unk_256A5E6E0);
      v77 = sub_23BB8A7D8();
      v98 = sub_23BB7B69C(v77, v78, v99);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      v71 = v96;
      sub_23B989D60(v44, (uint64_t *)&unk_256A5E6E0);
      _os_log_impl(&dword_23B979000, v73, v74, "CompositeAppViewModel: %s - followingState: %s", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v76, -1, -1);
      MEMORY[0x24260D9B4](v75, -1, -1);
    }
    else
    {
      sub_23B989D60(v44, (uint64_t *)&unk_256A5E6E0);
    }

    v79 = v93;
    v80 = v94;
    sub_23B989EFC(v71, v94, (uint64_t *)&unk_256A5E6E0);
    v81 = type metadata accessor for SessionFollowingState(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 48))(v80, 1, v81) != 1)
    {
      v82 = (char *)&loc_23B99FFEC + 4 * byte_23BB8D0A0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    sub_23B989D60(v71, (uint64_t *)&unk_256A5E6E0);
    swift_release();
    v50 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
    v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
    v52 = v79;
LABEL_31:
    v83 = 1;
    return v51(v52, v83, 3, v50);
  }
  v53 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v53(v41, v33, v34);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23BB89230();
  swift_release();
  swift_release();
  v54 = v99[0];
  v44 = (uint64_t)v95;
  if (*(_QWORD *)(v99[0] + 16))
  {
    v55 = v90;
    swift_bridgeObjectRetain();
    v56 = sub_23B984B34(v89, v55);
    if ((v57 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v29, *(_QWORD *)(v54 + 56) + *(_QWORD *)(v35 + 72) * v56, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v34);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v29, 1, 1, v34);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v29, 1, 1, v34);
  }
  swift_bridgeObjectRelease();
  if (v43(v29, 1, v34) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v41, v34);
    sub_23B989D60((uint64_t)v29, (uint64_t *)&unk_256A5E6B0);
    goto LABEL_23;
  }
  v58 = v88;
  v53(v88, v29, v34);
  if ((sub_23BB888DC() & 1) == 0)
  {
    v66 = *(void (**)(char *, uint64_t))(v35 + 8);
    v66(v58, v34);
    v66(v41, v34);
    goto LABEL_23;
  }
  if (qword_256A58E00 != -1)
    swift_once();
  v59 = sub_23BB891C4();
  __swift_project_value_buffer(v59, (uint64_t)qword_256A73E80);
  v60 = sub_23BB891AC();
  v61 = sub_23BB8ABEC();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = v58;
    v64 = swift_slowAlloc();
    v99[0] = v64;
    *(_DWORD *)v62 = 136315138;
    *(_QWORD *)&v104 = sub_23BB7B69C(0xD00000000000003CLL, 0x800000023BB99AD0, v99);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v60, v61, "CompositeAppViewModel: %s - not last message", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v64, -1, -1);
    MEMORY[0x24260D9B4](v62, -1, -1);

    swift_release();
    v65 = *(void (**)(char *, uint64_t))(v35 + 8);
    v65(v63, v34);
  }
  else
  {

    swift_release();
    v65 = *(void (**)(char *, uint64_t))(v35 + 8);
    v65(v58, v34);
  }
  v65(v41, v34);
  v85 = v93;
  v50 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
  v52 = v85;
  v83 = 3;
  return v51(v52, v83, 3, v50);
}

uint64_t sub_23B9A0640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  unsigned int (*v35)(_BYTE *, uint64_t, uint64_t);
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v42)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t);
  void (*v53)(_BYTE *, uint64_t);
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  char *v65;
  _BYTE v66[12];
  int v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  _BYTE *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  __int128 v83;
  uint64_t v84;

  v72 = a3;
  v73 = a4;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  MEMORY[0x24BDAC7A8](v75, v7);
  v78 = &v66[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9, v10);
  v74 = &v66[-v11];
  MEMORY[0x24BDAC7A8](v12, v13);
  v76 = &v66[-v14];
  MEMORY[0x24BDAC7A8](v15, v16);
  v77 = &v66[-v17];
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = &v66[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = &v66[-v24];
  v26 = sub_23BB88984();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = &v66[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = &v66[-v33];
  if (!*(_QWORD *)(v4 + OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_internalRepository))
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v36 = sub_23BB891C4();
    __swift_project_value_buffer(v36, (uint64_t)qword_256A73E80);
    v37 = sub_23BB891AC();
    v38 = sub_23BB8ABEC();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      *(_QWORD *)&v79 = v40;
      *(_DWORD *)v39 = 136315138;
      v84 = sub_23BB7B69C(0xD00000000000003ELL, 0x800000023BB99B90, (uint64_t *)&v79);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v37, v38, "CompositeAppViewModel: %s - No Repository", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v40, -1, -1);
      MEMORY[0x24260D9B4](v39, -1, -1);
    }

    return 0;
  }
  v71 = *(_OWORD *)a1;
  v69 = *(_QWORD *)(a1 + 16);
  v68 = *(_QWORD *)(a1 + 24);
  v67 = *(unsigned __int8 *)(a1 + 32);
  v70 = *(_OWORD *)(a1 + 40);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23BB89230();
  swift_release();
  swift_release();
  if (v79 != 1)
  {
    swift_release();
    return 3;
  }
  sub_23B989EFC(a2, (uint64_t)v25, (uint64_t *)&unk_256A5E6B0);
  v35 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48);
  if (v35(v25, 1, v26) == 1)
  {
    sub_23B989D60((uint64_t)v25, (uint64_t *)&unk_256A5E6B0);
LABEL_26:
    v79 = v71;
    v80 = v69;
    v81 = v68;
    v82 = v67;
    v83 = v70;
    v54 = v77;
    sub_23BA4CB8C(&v79, (uint64_t)v77);
    v55 = (uint64_t)v76;
    if (qword_256A58E00 != -1)
      swift_once();
    v56 = sub_23BB891C4();
    __swift_project_value_buffer(v56, (uint64_t)qword_256A73E80);
    sub_23B989EFC((uint64_t)v54, v55, &qword_256A59C78);
    v57 = sub_23BB891AC();
    v58 = sub_23BB8ABEC();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = swift_slowAlloc();
      v60 = swift_slowAlloc();
      *(_QWORD *)&v79 = v60;
      *(_DWORD *)v59 = 136315394;
      v84 = sub_23BB7B69C(0xD00000000000003ELL, 0x800000023BB99B90, (uint64_t *)&v79);
      sub_23BB8ACB8();
      *(_WORD *)(v59 + 12) = 2080;
      sub_23B989EFC(v55, (uint64_t)v74, &qword_256A59C78);
      v61 = sub_23BB8A7D8();
      v84 = sub_23BB7B69C(v61, v62, (uint64_t *)&v79);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23B989D60(v55, &qword_256A59C78);
      _os_log_impl(&dword_23B979000, v57, v58, "CompositeAppViewModel: %s - followerState: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v60, -1, -1);
      MEMORY[0x24260D9B4](v59, -1, -1);

      swift_release();
    }
    else
    {
      swift_release();
      sub_23B989D60(v55, &qword_256A59C78);

    }
    v63 = v78;
    sub_23B990D24((uint64_t)v54, (uint64_t)v78, &qword_256A59C78);
    v64 = type metadata accessor for SessionFollowerState(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v63, 1, v64) != 1)
    {
      v65 = (char *)&loc_23B9A0ED4 + 4 * byte_23BB8D0A4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    return 0;
  }
  v42 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 32);
  v42(v34, v25, v26);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  v43 = v79;
  if (*(_QWORD *)(v79 + 16))
  {
    v44 = v73;
    swift_bridgeObjectRetain();
    v45 = sub_23B984B34(v72, v44);
    if ((v46 & 1) != 0)
    {
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v27 + 16))(v21, *(_QWORD *)(v43 + 56) + *(_QWORD *)(v27 + 72) * v45, v26);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v21, 0, 1, v26);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v21, 1, 1, v26);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v21, 1, 1, v26);
  }
  swift_bridgeObjectRelease();
  if (v35(v21, 1, v26) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v34, v26);
    sub_23B989D60((uint64_t)v21, (uint64_t *)&unk_256A5E6B0);
    goto LABEL_26;
  }
  v42(v30, v21, v26);
  if ((sub_23BB888DC() & 1) == 0)
  {
    v53 = *(void (**)(_BYTE *, uint64_t))(v27 + 8);
    v53(v30, v26);
    v53(v34, v26);
    goto LABEL_26;
  }
  if (qword_256A58E00 != -1)
    swift_once();
  v47 = sub_23BB891C4();
  __swift_project_value_buffer(v47, (uint64_t)qword_256A73E80);
  v48 = sub_23BB891AC();
  v49 = sub_23BB8ABEC();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc();
    v51 = swift_slowAlloc();
    *(_DWORD *)v50 = 136315138;
    v78 = v50 + 4;
    *(_QWORD *)&v79 = v51;
    v84 = sub_23BB7B69C(0xD00000000000003ELL, 0x800000023BB99B90, (uint64_t *)&v79);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v48, v49, "CompositeAppViewModel: %s - not last message", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v51, -1, -1);
    MEMORY[0x24260D9B4](v50, -1, -1);
  }

  swift_release();
  v52 = *(void (**)(_BYTE *, uint64_t))(v27 + 8);
  v52(v30, v26);
  v52(v34, v26);
  return 2;
}

double sub_23B9A0FBC@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int16 v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_WORD *)(a1 + 16) = v4;
  return result;
}

void sub_23B9A1040()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23BB8923C();
  sub_23BA5CD98();
}

uint64_t sub_23B9A10CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

void sub_23B9A1148()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23BB8923C();
  sub_23BA5D004();
}

uint64_t sub_23B9A11BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

void sub_23B9A1238()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23BB8923C();
  sub_23BA5D280();
}

uint64_t sub_23B9A12B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_23B9A1300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a7;
  }
  return result;
}

unint64_t sub_23B9A1350()
{
  unint64_t result;

  result = qword_256A59C98;
  if (!qword_256A59C98)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9151C, &type metadata for MessagesFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_256A59C98);
  }
  return result;
}

uint64_t sub_23B9A1394(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 != (void *)2)
    return sub_23B9A13A4(a1, a2, a3);
  return a1;
}

uint64_t sub_23B9A13A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;

  if ((unint64_t)a3 >= 2)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23B9A13D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5E6C0;
  if (!qword_256A5E6C0)
  {
    v1 = sub_23BB88984();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_256A5E6C0);
  }
  return result;
}

uint64_t sub_23B9A141C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B9A1464(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_23B9A14A0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_23B9A14EC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B9A1514(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B9A1564(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 != (void *)2)
    return (uint64_t)sub_23B9894A0(a1, a2, a3);
  return a1;
}

uint64_t sub_23B9A158C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  unsigned int v35;
  unsigned int v36;
  void (*v37)(char *);
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[40];
  char v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v2 = sub_23BB89F80();
  v3 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a1 = 0;
  v39 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v7 = (uint64_t)&a1[*(int *)(v39 + 20)];
  v8 = sub_23BB89FE0();
  v46 = MEMORY[0x24BDF3E48];
  v47 = MEMORY[0x24BDF3E18];
  v9 = MEMORY[0x24BDF3E18];
  v10 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v45 = v8;
  sub_23BB89C08();
  sub_23BB89C20();
  v31 = sub_23BB89C50();
  swift_release();
  v36 = *MEMORY[0x24BDF3C28];
  v37 = *(void (**)(char *))(v3 + 104);
  v37(v6);
  v11 = MEMORY[0x24260BF74](v6, 0.216, 0.643, 1.0, 1.0);
  v41 = v10;
  v42 = v9;
  v12 = v9;
  v40[0] = v11;
  sub_23B9A193C((uint64_t)v40, (uint64_t)v43);
  v44 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v13 = (int *)type metadata accessor for CustomControlStyle(0);
  v14 = v7 + v13[8];
  v35 = *MEMORY[0x24BDEB488];
  v15 = v35;
  v16 = sub_23BB892F0();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104);
  v34(v14, v15, v16);
  v33 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  swift_storeEnumTagMultiPayload();
  v17 = v7 + v13[6];
  v32 = *MEMORY[0x24BDF50D0];
  v18 = v32;
  v19 = sub_23BB8A334();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104);
  v20(v17, v18, v19);
  sub_23B9A1980(&v45, v7);
  *(_QWORD *)(v7 + 40) = v31;
  sub_23B990D24((uint64_t)v43, v7 + v13[7], qword_256A59CC0);
  *(_BYTE *)(v7 + v13[9]) = 2;
  *(_BYTE *)(v7 + v13[10]) = 0;
  v21 = v7 + v13[11];
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  v22 = (uint64_t)&a1[*(int *)(v39 + 24)];
  v23 = sub_23BB89FE0();
  v24 = v12;
  v47 = v12;
  v25 = MEMORY[0x24BDF3E48];
  v46 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v45 = v23;
  sub_23BB89C08();
  sub_23BB89C20();
  v26 = sub_23BB89C50();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v37)(v6, v36, v38);
  v27 = MEMORY[0x24260BF74](v6, 0.216, 0.643, 1.0, 1.0);
  v41 = v25;
  v42 = v24;
  v40[0] = v27;
  sub_23B9A193C((uint64_t)v40, (uint64_t)v43);
  v44 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v34(v22 + v13[8], v35, v16);
  swift_storeEnumTagMultiPayload();
  v20(v22 + v13[6], v32, v19);
  sub_23B9A1980(&v45, v22);
  *(_QWORD *)(v22 + 40) = v26;
  result = sub_23B990D24((uint64_t)v43, v22 + v13[7], qword_256A59CC0);
  *(_BYTE *)(v22 + v13[9]) = 2;
  *(_BYTE *)(v22 + v13[10]) = 0;
  v29 = v22 + v13[11];
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  return result;
}

uint64_t type metadata accessor for RequestReceivedMessageView.Style(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A59D20);
}

uint64_t sub_23B9A193C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23B9A1980(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

char *sub_23B9A1998(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v55;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v23 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = *(_OWORD *)&a2[v7 + 24];
    *(_OWORD *)&a1[v7 + 24] = v10;
    (**(void (***)(char *, char *))(v10 - 8))(&a1[v7], &a2[v7]);
    *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
    v11 = (int *)type metadata accessor for CustomControlStyle(0);
    v12 = v11[6];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = sub_23BB8A334();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_retain();
    v55 = v15;
    v16(v13, v14, v15);
    v17 = v11[7];
    v18 = &v8[v17];
    v19 = &v9[v17];
    v20 = v9[v17 + 40];
    if ((v20 & 1) != 0)
    {
      v21 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *((_QWORD *)v18 + 1) = v21;
      swift_retain();
    }
    else
    {
      v24 = *(_OWORD *)(v19 + 24);
      *(_OWORD *)(v18 + 24) = v24;
      (**(void (***)(char *))(v24 - 8))(v18);
    }
    v18[40] = v20;
    v25 = v11[8];
    v26 = &v8[v25];
    v27 = &v9[v25];
    v28 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    v23 = a1;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v8[v11[9]] = v9[v11[9]];
    v8[v11[10]] = v9[v11[10]];
    v30 = v11[11];
    v31 = &v8[v30];
    v32 = &v9[v30];
    v31[8] = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v33 = *(int *)(a3 + 24);
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = *(_OWORD *)(v35 + 24);
    *(_OWORD *)&a1[v33 + 24] = v36;
    (**(void (***)(char *, char *))(v36 - 8))(&a1[v33], v35);
    *((_QWORD *)v34 + 5) = *((_QWORD *)v35 + 5);
    v37 = v11[6];
    v38 = &v34[v37];
    v39 = &v35[v37];
    swift_retain();
    v16(v38, v39, v55);
    v40 = v11[7];
    v41 = &v34[v40];
    v42 = &v35[v40];
    v43 = v35[v40 + 40];
    if ((v43 & 1) != 0)
    {
      v44 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v44;
      swift_retain();
    }
    else
    {
      v45 = *(_OWORD *)(v42 + 24);
      *(_OWORD *)(v41 + 24) = v45;
      (**(void (***)(char *))(v45 - 8))(v41);
    }
    v41[40] = v43;
    v46 = v11[8];
    v47 = &v34[v46];
    v48 = &v35[v46];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v49 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v34[v11[9]] = v35[v11[9]];
    v34[v11[10]] = v35[v11[10]];
    v50 = v11[11];
    v51 = &v34[v50];
    v52 = &v35[v50];
    v51[8] = v52[8];
    *(_QWORD *)v51 = *(_QWORD *)v52;
  }
  return v23;
}

uint64_t sub_23B9A1CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v4 = a1 + *(int *)(a2 + 20);
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_release();
  v5 = (int *)type metadata accessor for CustomControlStyle(0);
  v6 = v4 + v5[6];
  v7 = sub_23BB8A334();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = v4 + v5[7];
  if ((*(_BYTE *)(v9 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v9);
  v10 = v4 + v5[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + *(int *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(v12);
  swift_release();
  v8(v12 + v5[6], v7);
  v13 = v12 + v5[7];
  if ((*(_BYTE *)(v13 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v13);
  v14 = v12 + v5[8];
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v16 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  return result;
}

_BYTE *sub_23B9A1E3C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  __int128 v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = *(_OWORD *)&a2[v5 + 24];
  *(_OWORD *)&a1[v5 + 24] = v8;
  (**(void (***)(_BYTE *, _BYTE *))(v8 - 8))(&a1[v5], &a2[v5]);
  *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_23BB8A334();
  v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain();
  v14(v11, v12, v13);
  v15 = v9[7];
  v16 = &v6[v15];
  v17 = &v7[v15];
  v18 = v7[v15 + 40];
  if ((v18 & 1) != 0)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v19;
    swift_retain();
  }
  else
  {
    v20 = *(_OWORD *)(v17 + 24);
    *(_OWORD *)(v16 + 24) = v20;
    (**(void (***)(_BYTE *))(v20 - 8))(v16);
  }
  v16[40] = v18;
  v21 = v9[8];
  v22 = &v6[v21];
  v23 = &v7[v21];
  v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v6[v9[9]] = v7[v9[9]];
  v6[v9[10]] = v7[v9[10]];
  v26 = v9[11];
  v27 = &v6[v26];
  v28 = &v7[v26];
  v27[8] = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = *(int *)(a3 + 24);
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_OWORD *)(v31 + 24);
  *(_OWORD *)&a1[v29 + 24] = v32;
  (**(void (***)(_BYTE *, _BYTE *))(v32 - 8))(&a1[v29], v31);
  *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
  v33 = v9[6];
  v34 = &v30[v33];
  v35 = &v31[v33];
  swift_retain();
  v14(v34, v35, v13);
  v36 = v9[7];
  v37 = &v30[v36];
  v38 = &v31[v36];
  v39 = v31[v36 + 40];
  if ((v39 & 1) != 0)
  {
    v40 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v40;
    swift_retain();
  }
  else
  {
    v41 = *(_OWORD *)(v38 + 24);
    *(_OWORD *)(v37 + 24) = v41;
    (**(void (***)(_BYTE *))(v41 - 8))(v37);
  }
  v37[40] = v39;
  v42 = v9[8];
  v43 = &v30[v42];
  v44 = &v31[v42];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v30[v9[9]] = v31[v9[9]];
  v30[v9[10]] = v31[v9[10]];
  v46 = v9[11];
  v47 = &v30[v46];
  v48 = &v31[v46];
  v47[8] = v48[8];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  return a1;
}

_BYTE *sub_23B9A2130(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  void (*v48)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v6], (uint64_t *)&a2[v6]);
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  swift_retain();
  swift_release();
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_23BB8A334();
  v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  if (a1 == a2)
  {
    v19 = v9 + 8;
  }
  else
  {
    v15 = v9[7];
    v16 = &v7[v15];
    v17 = &v8[v15];
    sub_23B989D60((uint64_t)&v7[v15], qword_256A59CC0);
    v48 = v14;
    if ((v17[40] & 1) != 0)
    {
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v16[40] = 1;
      swift_retain();
    }
    else
    {
      v20 = *((_QWORD *)v17 + 3);
      *((_QWORD *)v16 + 3) = v20;
      *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
      (**(void (***)(_BYTE *, _BYTE *))(v20 - 8))(v16, v17);
      v16[40] = 0;
    }
    v21 = v9[8];
    v22 = &v7[v21];
    v23 = &v8[v21];
    sub_23B989D9C((uint64_t)&v7[v21], type metadata accessor for CustomControlStyle.BackgroundSize);
    v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_23BB892F0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    v19 = v9 + 8;
    v14 = v48;
  }
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v26 = v9[11];
  v27 = &v7[v26];
  v28 = &v8[v26];
  v29 = *(_QWORD *)v28;
  v27[8] = v28[8];
  *(_QWORD *)v27 = v29;
  v30 = *(int *)(a3 + 24);
  v31 = &a1[v30];
  v32 = &a2[v30];
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[v30], (uint64_t *)&a2[v30]);
  *((_QWORD *)v31 + 5) = *((_QWORD *)v32 + 5);
  swift_retain();
  swift_release();
  v14(&v31[v9[6]], &v32[v9[6]], v13);
  if (a1 != a2)
  {
    v33 = v9[7];
    v34 = &v31[v33];
    v35 = &v32[v33];
    sub_23B989D60((uint64_t)&v31[v33], qword_256A59CC0);
    if ((v35[40] & 1) != 0)
    {
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v34[40] = 1;
      swift_retain();
    }
    else
    {
      v37 = *((_QWORD *)v35 + 3);
      *((_QWORD *)v34 + 3) = v37;
      *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
      (**(void (***)(_BYTE *, _BYTE *))(v37 - 8))(v34, v35);
      v34[40] = 0;
    }
    v38 = *v19;
    v39 = &v31[v38];
    v40 = &v32[v38];
    sub_23B989D9C((uint64_t)&v31[v38], type metadata accessor for CustomControlStyle.BackgroundSize);
    v41 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v42 = sub_23BB892F0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
  }
  v31[v9[9]] = v32[v9[9]];
  v31[v9[10]] = v32[v9[10]];
  v43 = v9[11];
  v44 = &v31[v43];
  v45 = &v32[v43];
  v46 = *(_QWORD *)v45;
  v44[8] = v45[8];
  *(_QWORD *)v44 = v46;
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_BYTE *sub_23B9A2600(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  __int128 v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = *(_OWORD *)&a2[v5 + 16];
  *(_OWORD *)v6 = *(_OWORD *)&a2[v5];
  *((_OWORD *)v6 + 1) = v8;
  v9 = *(_QWORD *)&a2[v5 + 40];
  *((_QWORD *)v6 + 4) = *(_QWORD *)&a2[v5 + 32];
  *((_QWORD *)v6 + 5) = v9;
  v10 = (int *)type metadata accessor for CustomControlStyle(0);
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = sub_23BB8A334();
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v16 = v10[7];
  v17 = &v6[v16];
  v18 = &v7[v16];
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_OWORD *)((char *)v17 + 25) = *(_OWORD *)((char *)v18 + 25);
  v20 = v10[8];
  v21 = &v6[v20];
  v22 = &v7[v20];
  v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  v25 = v10[11];
  v26 = &v6[v25];
  v27 = &v7[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = *(int *)(a3 + 24);
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *(_OWORD *)&a2[v28 + 16];
  *(_OWORD *)v29 = *(_OWORD *)&a2[v28];
  *((_OWORD *)v29 + 1) = v31;
  v32 = *(_QWORD *)&a2[v28 + 40];
  *((_QWORD *)v29 + 4) = *(_QWORD *)&a2[v28 + 32];
  *((_QWORD *)v29 + 5) = v32;
  v15(&a1[v28 + v10[6]], &a2[v28 + v10[6]], v14);
  v33 = v10[7];
  v34 = &v29[v33];
  v35 = &v30[v33];
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  *(_OWORD *)((char *)v34 + 25) = *(_OWORD *)((char *)v35 + 25);
  v37 = v10[8];
  v38 = &v29[v37];
  v39 = &v30[v37];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v40 = sub_23BB892F0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v29[v10[9]] = v30[v10[9]];
  v29[v10[10]] = v30[v10[10]];
  v41 = v10[11];
  v42 = &v29[v41];
  v43 = &v30[v41];
  v42[8] = v43[8];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  return a1;
}

_BYTE *sub_23B9A2860(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  void (*v47)(_BYTE *, _BYTE *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v6]);
  v9 = *((_OWORD *)v8 + 1);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v9;
  v10 = *((_QWORD *)v8 + 5);
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = v10;
  swift_release();
  v11 = (int *)type metadata accessor for CustomControlStyle(0);
  v12 = v11[6];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = sub_23BB8A334();
  v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  if (a1 != a2)
  {
    v47 = v16;
    v17 = v11[7];
    v18 = &v8[v17];
    v19 = &v7[v17];
    sub_23B989D60((uint64_t)&v7[v17], qword_256A59CC0);
    v20 = v18[1];
    *v19 = *v18;
    v19[1] = v20;
    *(_OWORD *)((char *)v19 + 25) = *(_OWORD *)((char *)v18 + 25);
    v21 = v11[8];
    v22 = &v7[v21];
    v23 = &v8[v21];
    sub_23B989D9C((uint64_t)&v7[v21], type metadata accessor for CustomControlStyle.BackgroundSize);
    v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_23BB892F0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    v16 = v47;
  }
  v7[v11[9]] = v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  v26 = v11[11];
  v27 = &v7[v26];
  v28 = &v8[v26];
  v27[8] = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = *(int *)(a3 + 24);
  v30 = &a1[v29];
  v31 = &a2[v29];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v29]);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = *((_QWORD *)v31 + 5);
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  *((_QWORD *)v30 + 5) = v33;
  swift_release();
  v16(&v30[v11[6]], &v31[v11[6]], v15);
  if (a1 != a2)
  {
    v34 = v11[7];
    v35 = &v31[v34];
    v36 = &v30[v34];
    sub_23B989D60((uint64_t)&v30[v34], qword_256A59CC0);
    v37 = v35[1];
    *v36 = *v35;
    v36[1] = v37;
    *(_OWORD *)((char *)v36 + 25) = *(_OWORD *)((char *)v35 + 25);
    v38 = v11[8];
    v39 = &v30[v38];
    v40 = &v31[v38];
    sub_23B989D9C((uint64_t)&v30[v38], type metadata accessor for CustomControlStyle.BackgroundSize);
    v41 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v42 = sub_23BB892F0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
  }
  v30[v11[9]] = v31[v11[9]];
  v30[v11[10]] = v31[v11[10]];
  v43 = v11[11];
  v44 = &v30[v43];
  v45 = &v31[v43];
  v44[8] = v45[8];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  return a1;
}

uint64_t sub_23B9A2B40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A2B4C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for CustomControlStyle(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t sub_23B9A2BC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_23B9A2BD4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for CustomControlStyle(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23B9A2C44()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CustomControlStyle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23B9A2CB8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v27 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = a3[6];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_BYTE *)(a1 + v7) = *((_BYTE *)a2 + v7);
    v70 = type metadata accessor for RequestReceivedMessageView.Style(0);
    v10 = *(int *)(v70 + 20);
    v72 = v8;
    v11 = v8 + v10;
    v71 = v9;
    v12 = v9 + v10;
    v13 = *(_OWORD *)(v9 + v10 + 24);
    *(_OWORD *)(v8 + v10 + 24) = v13;
    v14 = v13;
    v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
    swift_bridgeObjectRetain();
    v15(v11, v12, v14);
    *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
    v16 = (int *)type metadata accessor for CustomControlStyle(0);
    v17 = v16[6];
    v18 = v11 + v17;
    v19 = v12 + v17;
    v20 = sub_23BB8A334();
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_retain();
    v21(v18, v19, v20);
    v22 = v16[7];
    v23 = v11 + v22;
    v24 = v12 + v22;
    v25 = *(_BYTE *)(v12 + v22 + 40);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD *)(v24 + 8);
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_QWORD *)(v23 + 8) = v26;
      swift_retain();
    }
    else
    {
      v28 = *(_OWORD *)(v24 + 24);
      *(_OWORD *)(v23 + 24) = v28;
      (**(void (***)(uint64_t))(v28 - 8))(v23);
    }
    *(_BYTE *)(v23 + 40) = v25;
    v29 = v16[8];
    v30 = (void *)(v11 + v29);
    v31 = (const void *)(v12 + v29);
    v32 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v33 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    *(_BYTE *)(v11 + v16[9]) = *(_BYTE *)(v12 + v16[9]);
    *(_BYTE *)(v11 + v16[10]) = *(_BYTE *)(v12 + v16[10]);
    v34 = v16[11];
    v35 = v11 + v34;
    v36 = v12 + v34;
    *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    v37 = *(int *)(v70 + 24);
    v38 = v72 + v37;
    v39 = v71 + v37;
    v40 = *(_OWORD *)(v71 + v37 + 24);
    *(_OWORD *)(v72 + v37 + 24) = v40;
    (**(void (***)(uint64_t, uint64_t))(v40 - 8))(v72 + v37, v71 + v37);
    *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
    v41 = v16[6];
    v42 = v38 + v41;
    v43 = v39 + v41;
    swift_retain();
    v21(v42, v43, v20);
    v44 = v16[7];
    v45 = v38 + v44;
    v46 = v39 + v44;
    v47 = *(_BYTE *)(v39 + v44 + 40);
    if ((v47 & 1) != 0)
    {
      v48 = *(_QWORD *)(v46 + 8);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(v45 + 8) = v48;
      swift_retain();
    }
    else
    {
      v49 = *(_OWORD *)(v46 + 24);
      *(_OWORD *)(v45 + 24) = v49;
      (**(void (***)(uint64_t))(v49 - 8))(v45);
    }
    *(_BYTE *)(v45 + 40) = v47;
    v50 = v16[8];
    v51 = (void *)(v38 + v50);
    v52 = (const void *)(v39 + v50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v53 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    *(_BYTE *)(v38 + v16[9]) = *(_BYTE *)(v39 + v16[9]);
    *(_BYTE *)(v38 + v16[10]) = *(_BYTE *)(v39 + v16[10]);
    v54 = v16[11];
    v55 = v38 + v54;
    v56 = v39 + v54;
    *(_BYTE *)(v55 + 8) = *(_BYTE *)(v56 + 8);
    *(_QWORD *)v55 = *(_QWORD *)v56;
    v57 = a3[7];
    v58 = a3[8];
    v59 = v4 + v57;
    v60 = (uint64_t)a2 + v57;
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
    *(_OWORD *)(v59 + 24) = *(_OWORD *)(v60 + 24);
    *(_OWORD *)(v59 + 40) = *(_OWORD *)(v60 + 40);
    *(_OWORD *)(v59 + 56) = *(_OWORD *)(v60 + 56);
    *(_OWORD *)(v59 + 72) = *(_OWORD *)(v60 + 72);
    *(_OWORD *)(v59 + 88) = *(_OWORD *)(v60 + 88);
    *(_OWORD *)(v59 + 104) = *(_OWORD *)(v60 + 104);
    v61 = *(_QWORD *)(v60 + 136);
    *(_OWORD *)(v59 + 120) = *(_OWORD *)(v60 + 120);
    *(_QWORD *)(v59 + 136) = v61;
    v62 = v4 + v58;
    v63 = (uint64_t)a2 + v58;
    *(_BYTE *)v62 = *(_BYTE *)v63;
    *(_QWORD *)(v62 + 8) = *(_QWORD *)(v63 + 8);
    v64 = a3[9];
    v65 = (_QWORD *)(v4 + v64);
    v66 = (uint64_t *)((char *)a2 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23B9A313C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v6 = v4 + *(int *)(v5 + 20);
  __swift_destroy_boxed_opaque_existential_1(v6);
  swift_release();
  v7 = (int *)type metadata accessor for CustomControlStyle(0);
  v8 = v6 + v7[6];
  v9 = sub_23BB8A334();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = v6 + v7[7];
  if ((*(_BYTE *)(v11 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v11);
  v12 = v6 + v7[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = v4 + *(int *)(v5 + 24);
  __swift_destroy_boxed_opaque_existential_1(v14);
  swift_release();
  v10(v14 + v7[6], v9);
  v15 = v14 + v7[7];
  if ((*(_BYTE *)(v15 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v15);
  v16 = v14 + v7[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23B9A3334(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v69 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v9 = *(int *)(v69 + 20);
  v67 = v7;
  v10 = v7 + v9;
  v70 = v8;
  v11 = v8 + v9;
  v12 = *(_OWORD *)(v8 + v9 + 24);
  *(_OWORD *)(v7 + v9 + 24) = v12;
  v13 = v12;
  v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  swift_bridgeObjectRetain();
  v14(v10, v11, v13);
  *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
  v15 = (int *)type metadata accessor for CustomControlStyle(0);
  v16 = v15[6];
  v17 = v10 + v16;
  v18 = v11 + v16;
  v19 = sub_23BB8A334();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_retain();
  v68 = v20;
  v20(v17, v18, v19);
  v21 = v15[7];
  v22 = v10 + v21;
  v23 = v11 + v21;
  v24 = *(_BYTE *)(v11 + v21 + 40);
  if ((v24 & 1) != 0)
  {
    v25 = *(_QWORD *)(v23 + 8);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = v25;
    swift_retain();
  }
  else
  {
    v26 = *(_OWORD *)(v23 + 24);
    *(_OWORD *)(v22 + 24) = v26;
    (**(void (***)(uint64_t))(v26 - 8))(v22);
  }
  *(_BYTE *)(v22 + 40) = v24;
  v27 = v15[8];
  v28 = (void *)(v10 + v27);
  v29 = (const void *)(v11 + v27);
  v30 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  *(_BYTE *)(v10 + v15[9]) = *(_BYTE *)(v11 + v15[9]);
  *(_BYTE *)(v10 + v15[10]) = *(_BYTE *)(v11 + v15[10]);
  v32 = v15[11];
  v33 = v10 + v32;
  v34 = v11 + v32;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v35 = *(int *)(v69 + 24);
  v36 = v67 + v35;
  v37 = v70 + v35;
  v38 = *(_OWORD *)(v70 + v35 + 24);
  *(_OWORD *)(v67 + v35 + 24) = v38;
  (**(void (***)(uint64_t, uint64_t))(v38 - 8))(v67 + v35, v70 + v35);
  *(_QWORD *)(v36 + 40) = *(_QWORD *)(v37 + 40);
  v39 = v15[6];
  v40 = v36 + v39;
  v41 = v37 + v39;
  swift_retain();
  v68(v40, v41, v19);
  v42 = v15[7];
  v43 = v36 + v42;
  v44 = v37 + v42;
  v45 = *(_BYTE *)(v37 + v42 + 40);
  if ((v45 & 1) != 0)
  {
    v46 = *(_QWORD *)(v44 + 8);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *(_QWORD *)(v43 + 8) = v46;
    swift_retain();
  }
  else
  {
    v47 = *(_OWORD *)(v44 + 24);
    *(_OWORD *)(v43 + 24) = v47;
    (**(void (***)(uint64_t))(v47 - 8))(v43);
  }
  *(_BYTE *)(v43 + 40) = v45;
  v48 = v15[8];
  v49 = (void *)(v36 + v48);
  v50 = (const void *)(v37 + v48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  *(_BYTE *)(v36 + v15[9]) = *(_BYTE *)(v37 + v15[9]);
  *(_BYTE *)(v36 + v15[10]) = *(_BYTE *)(v37 + v15[10]);
  v52 = v15[11];
  v53 = v36 + v52;
  v54 = v37 + v52;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v55 = a3[7];
  v56 = a3[8];
  v57 = a1 + v55;
  v58 = a2 + v55;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *(_OWORD *)(v57 + 8) = *(_OWORD *)(v58 + 8);
  *(_OWORD *)(v57 + 24) = *(_OWORD *)(v58 + 24);
  *(_OWORD *)(v57 + 40) = *(_OWORD *)(v58 + 40);
  *(_OWORD *)(v57 + 56) = *(_OWORD *)(v58 + 56);
  *(_OWORD *)(v57 + 72) = *(_OWORD *)(v58 + 72);
  *(_OWORD *)(v57 + 88) = *(_OWORD *)(v58 + 88);
  *(_OWORD *)(v57 + 104) = *(_OWORD *)(v58 + 104);
  v59 = *(_QWORD *)(v58 + 136);
  *(_OWORD *)(v57 + 120) = *(_OWORD *)(v58 + 120);
  *(_QWORD *)(v57 + 136) = v59;
  v60 = a1 + v56;
  v61 = a2 + v56;
  *(_BYTE *)v60 = *(_BYTE *)v61;
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
  v62 = a3[9];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (_QWORD *)(a2 + v62);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23B9A3790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  int *v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_BYTE *)(a1 + v6) = *(_BYTE *)(a2 + v6);
  v71 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v72 = v8;
  v9 = *(int *)(v71 + 20);
  v10 = v7 + v9;
  v11 = v8 + v9;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v7 + v9), (uint64_t *)(v8 + v9));
  *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
  swift_retain();
  swift_release();
  v12 = (int *)type metadata accessor for CustomControlStyle(0);
  v13 = v12[6];
  v14 = v10 + v13;
  v15 = v11 + v13;
  v16 = sub_23BB8A334();
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v70(v14, v15, v16);
  if (a1 == a2)
  {
    v21 = v12 + 8;
  }
  else
  {
    v17 = v12[7];
    v18 = v10 + v17;
    v19 = v11 + v17;
    sub_23B989D60(v10 + v17, qword_256A59CC0);
    v69 = a3;
    if ((*(_BYTE *)(v19 + 40) & 1) != 0)
    {
      v20 = *(_QWORD *)(v19 + 8);
      *(_QWORD *)v18 = *(_QWORD *)v19;
      *(_QWORD *)(v18 + 8) = v20;
      *(_BYTE *)(v18 + 40) = 1;
      swift_retain();
    }
    else
    {
      v22 = *(_QWORD *)(v19 + 24);
      *(_QWORD *)(v18 + 24) = v22;
      *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
      (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v18, v19);
      *(_BYTE *)(v18 + 40) = 0;
    }
    v23 = v12[8];
    v24 = (void *)(v10 + v23);
    v25 = (const void *)(v11 + v23);
    sub_23B989D9C(v10 + v23, type metadata accessor for CustomControlStyle.BackgroundSize);
    v26 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    v21 = v12 + 8;
    a3 = v69;
  }
  *(_BYTE *)(v10 + v12[9]) = *(_BYTE *)(v11 + v12[9]);
  *(_BYTE *)(v10 + v12[10]) = *(_BYTE *)(v11 + v12[10]);
  v28 = v12[11];
  v29 = v10 + v28;
  v30 = (uint64_t *)(v11 + v28);
  v31 = *v30;
  *(_BYTE *)(v29 + 8) = *((_BYTE *)v30 + 8);
  *(_QWORD *)v29 = v31;
  v32 = *(int *)(v71 + 24);
  v33 = (uint64_t *)(v7 + v32);
  v34 = v72 + v32;
  __swift_assign_boxed_opaque_existential_1(v33, (uint64_t *)(v72 + v32));
  v33[5] = *(_QWORD *)(v34 + 40);
  swift_retain();
  swift_release();
  v70((uint64_t)v33 + v12[6], v34 + v12[6], v16);
  if (a1 != a2)
  {
    v35 = v12[7];
    v36 = (char *)v33 + v35;
    v37 = v34 + v35;
    sub_23B989D60((uint64_t)v33 + v35, qword_256A59CC0);
    if ((*(_BYTE *)(v37 + 40) & 1) != 0)
    {
      v38 = *(_QWORD *)(v37 + 8);
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = v38;
      v36[40] = 1;
      swift_retain();
    }
    else
    {
      v39 = *(_QWORD *)(v37 + 24);
      *((_QWORD *)v36 + 3) = v39;
      *((_QWORD *)v36 + 4) = *(_QWORD *)(v37 + 32);
      (**(void (***)(char *, uint64_t))(v39 - 8))(v36, v37);
      v36[40] = 0;
    }
    v40 = *v21;
    v41 = (char *)v33 + v40;
    v42 = (const void *)(v34 + v40);
    sub_23B989D9C((uint64_t)v33 + v40, type metadata accessor for CustomControlStyle.BackgroundSize);
    v43 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = sub_23BB892F0();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
  }
  *((_BYTE *)v33 + v12[9]) = *(_BYTE *)(v34 + v12[9]);
  *((_BYTE *)v33 + v12[10]) = *(_BYTE *)(v34 + v12[10]);
  v45 = v12[11];
  v46 = (char *)v33 + v45;
  v47 = (uint64_t *)(v34 + v45);
  v48 = *v47;
  v46[8] = *((_BYTE *)v47 + 8);
  *(_QWORD *)v46 = v48;
  v49 = a3[7];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = *(_QWORD *)(a2 + v49 + 8);
  *v50 = *(_QWORD *)(a2 + v49);
  v50[1] = v52;
  swift_retain();
  swift_release();
  v53 = v51[3];
  v50[2] = v51[2];
  v50[3] = v53;
  swift_retain();
  swift_release();
  v54 = v51[5];
  v50[4] = v51[4];
  v50[5] = v54;
  swift_retain();
  swift_release();
  v55 = v51[7];
  v50[6] = v51[6];
  v50[7] = v55;
  swift_retain();
  swift_release();
  v56 = v51[9];
  v50[8] = v51[8];
  v50[9] = v56;
  swift_retain();
  swift_release();
  v57 = v51[11];
  v50[10] = v51[10];
  v50[11] = v57;
  swift_retain();
  swift_release();
  v58 = v51[13];
  v50[12] = v51[12];
  v50[13] = v58;
  swift_retain();
  swift_release();
  v59 = v51[15];
  v50[14] = v51[14];
  v50[15] = v59;
  swift_retain();
  swift_release();
  v60 = v51[17];
  v50[16] = v51[16];
  v50[17] = v60;
  swift_retain();
  swift_release();
  v61 = a3[8];
  v62 = a1 + v61;
  v63 = a2 + v61;
  *(_BYTE *)v62 = *(_BYTE *)v63;
  *(_QWORD *)(v62 + 8) = *(_QWORD *)(v63 + 8);
  swift_retain();
  swift_release();
  v64 = a3[9];
  v65 = (_QWORD *)(a1 + v64);
  v66 = (_QWORD *)(a2 + v64);
  v67 = v66[1];
  *v65 = *v66;
  v65[1] = v67;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23B9A3C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = a3[6];
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_BYTE *)(a1 + v4) = *(_BYTE *)(a2 + v4);
  v56 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v7 = *(int *)(v56 + 20);
  v8 = v5 + v7;
  v9 = v6 + v7;
  v10 = *(_OWORD *)(v6 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(v6 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  v11 = *(_QWORD *)(v6 + v7 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v6 + v7 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  v12 = (int *)type metadata accessor for CustomControlStyle(0);
  v13 = v12[6];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_23BB8A334();
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v55(v14, v15, v16);
  v17 = v12[7];
  v18 = (_OWORD *)(v8 + v17);
  v19 = (_OWORD *)(v9 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_OWORD *)((char *)v18 + 25) = *(_OWORD *)((char *)v19 + 25);
  v21 = v12[8];
  v22 = (void *)(v8 + v21);
  v23 = (const void *)(v9 + v21);
  v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  *(_BYTE *)(v8 + v12[9]) = *(_BYTE *)(v9 + v12[9]);
  *(_BYTE *)(v8 + v12[10]) = *(_BYTE *)(v9 + v12[10]);
  v26 = v12[11];
  v27 = v8 + v26;
  v28 = v9 + v26;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = *(int *)(v56 + 24);
  v30 = v5 + v29;
  v31 = v6 + v29;
  v32 = *(_OWORD *)(v6 + v29 + 16);
  *(_OWORD *)v30 = *(_OWORD *)(v6 + v29);
  *(_OWORD *)(v30 + 16) = v32;
  v33 = *(_QWORD *)(v6 + v29 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v6 + v29 + 32);
  *(_QWORD *)(v30 + 40) = v33;
  v55(v30 + v12[6], v6 + v29 + v12[6], v16);
  v34 = v12[7];
  v35 = (_OWORD *)(v30 + v34);
  v36 = (_OWORD *)(v31 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_OWORD *)((char *)v35 + 25) = *(_OWORD *)((char *)v36 + 25);
  v38 = v12[8];
  v39 = (void *)(v30 + v38);
  v40 = (const void *)(v31 + v38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  *(_BYTE *)(v30 + v12[9]) = *(_BYTE *)(v31 + v12[9]);
  *(_BYTE *)(v30 + v12[10]) = *(_BYTE *)(v31 + v12[10]);
  v42 = v12[11];
  v43 = v30 + v42;
  v44 = v31 + v42;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = a3[7];
  v46 = a3[8];
  v47 = (_OWORD *)(a1 + v45);
  v48 = (_OWORD *)(a2 + v45);
  v49 = v48[3];
  v47[2] = v48[2];
  v47[3] = v49;
  v50 = v48[1];
  *v47 = *v48;
  v47[1] = v50;
  v51 = v48[8];
  v52 = v48[6];
  v47[7] = v48[7];
  v47[8] = v51;
  v53 = v48[5];
  v47[4] = v48[4];
  v47[5] = v53;
  v47[6] = v52;
  *(_OWORD *)(a1 + v46) = *(_OWORD *)(a2 + v46);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_23B9A3F50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v58 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v59 = v9;
  v10 = *(int *)(v58 + 20);
  v11 = v8 + v10;
  v12 = v9 + v10;
  __swift_destroy_boxed_opaque_existential_1(v8 + v10);
  v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  v14 = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = v14;
  swift_release();
  v15 = (int *)type metadata accessor for CustomControlStyle(0);
  v16 = v15[6];
  v17 = v11 + v16;
  v18 = v12 + v16;
  v19 = sub_23BB8A334();
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40);
  v57(v17, v18, v19);
  if (a1 != a2)
  {
    v56 = a3;
    v20 = v15[7];
    v21 = (_OWORD *)(v12 + v20);
    v22 = (_OWORD *)(v11 + v20);
    sub_23B989D60(v11 + v20, qword_256A59CC0);
    v23 = v21[1];
    *v22 = *v21;
    v22[1] = v23;
    *(_OWORD *)((char *)v22 + 25) = *(_OWORD *)((char *)v21 + 25);
    v24 = v15[8];
    v25 = (void *)(v11 + v24);
    v26 = (const void *)(v12 + v24);
    sub_23B989D9C(v11 + v24, type metadata accessor for CustomControlStyle.BackgroundSize);
    v27 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    a3 = v56;
  }
  *(_BYTE *)(v11 + v15[9]) = *(_BYTE *)(v12 + v15[9]);
  *(_BYTE *)(v11 + v15[10]) = *(_BYTE *)(v12 + v15[10]);
  v29 = v15[11];
  v30 = v11 + v29;
  v31 = v12 + v29;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v32 = *(int *)(v58 + 24);
  v33 = v8 + v32;
  v34 = v59 + v32;
  __swift_destroy_boxed_opaque_existential_1(v33);
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  v36 = *(_QWORD *)(v34 + 40);
  *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
  *(_QWORD *)(v33 + 40) = v36;
  swift_release();
  v57(v33 + v15[6], v34 + v15[6], v19);
  if (a1 != a2)
  {
    v37 = v15[7];
    v38 = (_OWORD *)(v34 + v37);
    v39 = (_OWORD *)(v33 + v37);
    sub_23B989D60(v33 + v37, qword_256A59CC0);
    v40 = v38[1];
    *v39 = *v38;
    v39[1] = v40;
    *(_OWORD *)((char *)v39 + 25) = *(_OWORD *)((char *)v38 + 25);
    v41 = v15[8];
    v42 = (void *)(v33 + v41);
    v43 = (const void *)(v34 + v41);
    sub_23B989D9C(v33 + v41, type metadata accessor for CustomControlStyle.BackgroundSize);
    v44 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v45 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v42, v43, v45);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
  }
  *(_BYTE *)(v33 + v15[9]) = *(_BYTE *)(v34 + v15[9]);
  *(_BYTE *)(v33 + v15[10]) = *(_BYTE *)(v34 + v15[10]);
  v46 = v15[11];
  v47 = v33 + v46;
  v48 = v34 + v46;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v49 = a3[7];
  v50 = (_OWORD *)(a1 + v49);
  v51 = (_OWORD *)(a2 + v49);
  *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
  swift_release();
  v50[1] = v51[1];
  swift_release();
  v50[2] = v51[2];
  swift_release();
  v50[3] = v51[3];
  swift_release();
  v50[4] = v51[4];
  swift_release();
  v50[5] = v51[5];
  swift_release();
  v50[6] = v51[6];
  swift_release();
  v50[7] = v51[7];
  swift_release();
  v50[8] = v51[8];
  swift_release();
  v52 = a3[8];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_BYTE *)v53 = *(_BYTE *)v54;
  *(_QWORD *)(v53 + 8) = *(_QWORD *)(v54 + 8);
  swift_release();
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_23B9A4344()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A4350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23B9A43D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A43DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for RequestReceivedMessageView.Style(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for RequestReceivedMessageView(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A59DB8);
}

uint64_t sub_23B9A446C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B9A44A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RequestReceivedMessageView.Style(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23B9A4534()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9A4544()
{
  uint64_t *v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;

  v1 = *((unsigned __int8 *)v0 + 16);
  v2 = *((unsigned __int8 *)v0 + *(int *)(type metadata accessor for RequestReceivedMessageView(0) + 24));
  if (v1 == 3 || v2 || (v3 = v0[1]) == 0)
  {
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v15 = (void *)sub_23BB8A784();
    v16 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, 0);

    v17 = sub_23BB8A7B4();
    return v17;
  }
  else
  {
    v4 = *v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_23BB8C510;
    *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v5 + 64) = sub_23B9A5C8C();
    *(_QWORD *)(v5 + 32) = v4;
    *(_QWORD *)(v5 + 40) = v3;
    type metadata accessor for FindMyUICore();
    v6 = swift_getObjCClassFromMetadata();
    v7 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v8 = objc_msgSend(v7, sel_bundleForClass_, v6);
    v9 = (void *)sub_23BB8A784();
    v10 = objc_msgSend(v8, sel_localizedStringForKey_value_table_, v9, 0, 0);

    sub_23BB8A7B4();
    swift_bridgeObjectRetain();
    v11 = sub_23BB8A7CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
}

void sub_23B9A48A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v57 = a2;
  v42 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v42, v3);
  v41 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v38[1] = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E00);
  MEMORY[0x24BDAC7A8](v39, v8);
  v40 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E08);
  v11 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  v47 = v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v38[2] = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E10);
  MEMORY[0x24BDAC7A8](v14, v15);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E18);
  MEMORY[0x24BDAC7A8](v54, v16);
  v56 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E20);
  MEMORY[0x24BDAC7A8](v49, v18);
  v51 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E28);
  MEMORY[0x24BDAC7A8](v55, v20);
  v52 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for CustomMenuStyle(0);
  MEMORY[0x24BDAC7A8](v48, v22);
  v43 = (char *)v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for RequestReceivedMessageView(0);
  MEMORY[0x24BDAC7A8](v24, v25);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E30);
  MEMORY[0x24BDAC7A8](v26, v27);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E38);
  v45 = *(_QWORD *)(v50 - 8);
  v29 = MEMORY[0x24BDAC7A8](v50, v28);
  MEMORY[0x24BDAC7A8](v29, v30);
  v44 = (char *)v38 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E40);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v53 = (char *)v38 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = (char *)sub_23B9A4C50 + 4 * byte_23BB8D190[*(unsigned __int8 *)(a1 + 16)];
  v58 = v37;
  v59 = v34;
  __asm { BR              X10 }
}

uint64_t sub_23B9A4C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_storeEnumTagMultiPayload();
  v2 = sub_23B996E1C(&qword_256A59E68, &qword_256A59E30, (uint64_t)&unk_23BB94700);
  v3 = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
  v4 = *(_QWORD *)(v1 - 224);
  *(_QWORD *)(v1 - 128) = v0;
  *(_QWORD *)(v1 - 120) = v4;
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 104) = v3;
  swift_getOpaqueTypeConformance2();
  v5 = *(_QWORD *)(v1 - 192);
  sub_23BB89944();
  sub_23B989EFC(v5, *(_QWORD *)(v1 - 160), &qword_256A59E28);
  swift_storeEnumTagMultiPayload();
  sub_23B9A5A44();
  sub_23B9A5B34();
  v6 = *(_QWORD *)(v1 - 184);
  sub_23BB89944();
  sub_23B989D60(v5, &qword_256A59E28);
  v7 = *(_QWORD *)(v1 - 152);
  sub_23B990D24(v6, v7, &qword_256A59E40);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 144) + 56))(v7, 0, 1, *(_QWORD *)(v1 - 136));
}

uint64_t sub_23B9A52B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23B9A5320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = v1 + *(int *)(type metadata accessor for RequestReceivedMessageView(0) + 28);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v2 + 48))(0, 0, 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9A5374()
{
  return sub_23BB8A0AC();
}

uint64_t sub_23B9A53B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23BB897D0();
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_23BB89D1C();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_23B9A548C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB8A07C();
  *a1 = result;
  return result;
}

uint64_t sub_23B9A54C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  sub_23BB8A9F4();
  v2[4] = sub_23BB8A9E8();
  v2[5] = sub_23BB8A988();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_23B9A552C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD);

  v1 = v0[3];
  v2 = (_QWORD *)(v1 + *(int *)(type metadata accessor for RequestReceivedMessageView(0) + 36));
  v5 = (uint64_t (*)(_QWORD))(*(int *)*v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_23B9A559C;
  return v5(v0[2]);
}

uint64_t sub_23B9A559C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9A55E8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9A5618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = sub_23B9A4544();
  v9 = v8;
  sub_23B989CE8(v3, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RequestReceivedMessageView);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  result = sub_23B9A56F0((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = v9;
  *(_QWORD *)(a3 + 32) = sub_23B9A5734;
  *(_QWORD *)(a3 + 40) = v11;
  *(_WORD *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 50) = -64;
  return result;
}

uint64_t sub_23B9A56F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RequestReceivedMessageView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23B9A5734(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RequestReceivedMessageView(0) - 8) + 80);
  sub_23B9A48A8(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for RequestReceivedMessageView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 24);
  v4 = type metadata accessor for RequestReceivedMessageView.Style(0);
  v5 = v3 + *(int *)(v4 + 20);
  __swift_destroy_boxed_opaque_existential_1(v5);
  swift_release();
  v6 = (int *)type metadata accessor for CustomControlStyle(0);
  v7 = v5 + v6[6];
  v8 = sub_23BB8A334();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = v5 + v6[7];
  if ((*(_BYTE *)(v10 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v10);
  v11 = v5 + v6[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = v3 + *(int *)(v4 + 24);
  __swift_destroy_boxed_opaque_existential_1(v13);
  swift_release();
  v9(v13 + v6[6], v8);
  v14 = v13 + v6[7];
  if ((*(_BYTE *)(v14 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v14);
  v15 = v13 + v6[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9A59B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RequestReceivedMessageView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B97C964;
  return sub_23B9A52B4(v3);
}

uint64_t sub_23B9A5A18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9A5A3C(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA9ACAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_23B9A5A44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A59E60;
  if (!qword_256A59E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E28);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E30);
    v2[3] = type metadata accessor for CustomMenuStyle(255);
    v2[4] = sub_23B996E1C(&qword_256A59E68, &qword_256A59E30, (uint64_t)&unk_23BB94700);
    v2[5] = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A59E60);
  }
  return result;
}

unint64_t sub_23B9A5B34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[5];

  result = qword_256A59E78;
  if (!qword_256A59E78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E10);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A59E00);
    v2[2] = type metadata accessor for CustomButtonStyle(255);
    v2[3] = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v2[4] = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v1, v2);
    atomic_store(result, &qword_256A59E78);
  }
  return result;
}

uint64_t sub_23B9A5C20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RequestReceivedMessageView(0) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B990D68;
  return sub_23B9A54C0(a1, v5);
}

unint64_t sub_23B9A5C8C()
{
  unint64_t result;

  result = qword_256A59E90;
  if (!qword_256A59E90)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256A59E90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RequestReceivedMessageView.RequestState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestReceivedMessageView.RequestState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B9A5DAC + 4 * byte_23BB8D199[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B9A5DE0 + 4 * byte_23BB8D194[v4]))();
}

uint64_t sub_23B9A5DE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9A5DE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B9A5DF0);
  return result;
}

uint64_t sub_23B9A5DFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B9A5E04);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B9A5E08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9A5E10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestReceivedMessageView.RequestState()
{
  return &type metadata for RequestReceivedMessageView.RequestState;
}

uint64_t sub_23B9A5E2C()
{
  return sub_23B996E1C(&qword_256A59E98, &qword_256A59EA0, (uint64_t)&unk_23BB94DB8);
}

unint64_t sub_23B9A5E5C()
{
  unint64_t result;

  result = qword_256A59EA8;
  if (!qword_256A59EA8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8D2C8, &type metadata for RequestReceivedMessageView.RequestState);
    atomic_store(result, (unint64_t *)&qword_256A59EA8);
  }
  return result;
}

uint64_t *sub_23B9A5EA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t Action;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  char *__dst;
  uint64_t v45;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for Annotation();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 2, v7))
    {
      v9 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v13 = v7[7];
      __dst = (char *)a1 + v13;
      v45 = v8;
      v14 = (char *)a2 + v13;
      v15 = sub_23BB88984();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      v19 = v7[9];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = *(id *)v21;
      v23 = *((_QWORD *)v21 + 1);
      v24 = *((_QWORD *)v21 + 2);
      v25 = *((_QWORD *)v21 + 3);
      v26 = v21[32];
      sub_23B9A618C(*(id *)v21, v23, v24, v25, v26);
      *(_QWORD *)v20 = v22;
      *((_QWORD *)v20 + 1) = v23;
      *((_QWORD *)v20 + 2) = v24;
      *((_QWORD *)v20 + 3) = v25;
      v20[32] = v26;
      v27 = v7[10];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = v29[1];
      if (v30)
      {
        *v28 = *v29;
        v28[1] = v30;
        v31 = v29[3];
        v28[2] = v29[2];
        v28[3] = v31;
        v28[4] = v29[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        v32 = *((_OWORD *)v29 + 1);
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_OWORD *)v28 + 1) = v32;
        v28[4] = v29[4];
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v45 + 56))(a1, 0, 2, v7);
    }
    v33 = *(int *)(a3 + 20);
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for DirectionsState();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v35, 2, v36))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v34 = *v35;
      *(_OWORD *)(v34 + 8) = *(_OWORD *)(v35 + 8);
      v34[24] = v35[24];
      v39 = *(int *)(v36 + 24);
      v40 = &v34[v39];
      v41 = &v35[v39];
      v42 = sub_23BB88984();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 2, v36);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

id sub_23B9A618C(id result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a5 <= 1u)
    return result;
  return result;
}

uint64_t type metadata accessor for ShareReceivedMessageView.State.Active.Location(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A59FB8);
}

uint64_t sub_23B9A61C8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = (int *)type metadata accessor for Annotation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 2, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + v4[7];
    v6 = sub_23BB88984();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    v8 = a1 + v4[9];
    sub_23B9A6310(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
    if (*(_QWORD *)(a1 + v4[10] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = type metadata accessor for DirectionsState();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 2, v10);
  if (!(_DWORD)result)
  {
    v12 = v9 + *(int *)(v10 + 24);
    v13 = sub_23BB88984();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  return result;
}

void sub_23B9A6310(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a5 <= 1u)
  {

  }
}

_QWORD *sub_23B9A6338(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t Action;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  char *__dst;
  uint64_t v43;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 2, v6))
  {
    v8 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    v11 = v6[7];
    __dst = (char *)a1 + v11;
    v43 = a3;
    v12 = (char *)a2 + v11;
    v13 = sub_23BB88984();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    v17 = v6[9];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(id *)v19;
    v21 = *((_QWORD *)v19 + 1);
    v22 = *((_QWORD *)v19 + 2);
    v23 = *((_QWORD *)v19 + 3);
    v24 = v19[32];
    sub_23B9A618C(*(id *)v19, v21, v22, v23, v24);
    *(_QWORD *)v18 = v20;
    *((_QWORD *)v18 + 1) = v21;
    *((_QWORD *)v18 + 2) = v22;
    *((_QWORD *)v18 + 3) = v23;
    v18[32] = v24;
    v25 = v6[10];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    v28 = v27[1];
    if (v28)
    {
      *v26 = *v27;
      v26[1] = v28;
      v29 = v27[3];
      v26[2] = v27[2];
      v26[3] = v29;
      v26[4] = v27[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v30 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v30;
      v26[4] = v27[4];
    }
    a3 = v43;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  }
  v31 = *(int *)(a3 + 20);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for DirectionsState();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v33, 2, v34))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
    v32[24] = v33[24];
    v37 = *(int *)(v34 + 24);
    v38 = &v32[v37];
    v39 = &v33[v37];
    v40 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 2, v34);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_23B9A65F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  int v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t Action;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  char *__dst;
  uint64_t v84;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      goto LABEL_7;
    }
    v18 = a3;
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    v19 = v6[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23BB88984();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v25 = v24(v20, 1, v22);
    v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v20, v21, v22);
LABEL_27:
        *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
        v61 = v6[9];
        v62 = (char *)a1 + v61;
        v63 = (char *)a2 + v61;
        v64 = *(id *)v63;
        v65 = *((_QWORD *)v63 + 1);
        v66 = *((_QWORD *)v63 + 2);
        v67 = *((_QWORD *)v63 + 3);
        v68 = v63[32];
        sub_23B9A618C(*(id *)v63, v65, v66, v67, v68);
        v69 = *(void **)v62;
        v70 = *((_QWORD *)v62 + 1);
        v71 = *((_QWORD *)v62 + 2);
        v72 = *((_QWORD *)v62 + 3);
        *(_QWORD *)v62 = v64;
        *((_QWORD *)v62 + 1) = v65;
        *((_QWORD *)v62 + 2) = v66;
        *((_QWORD *)v62 + 3) = v67;
        v73 = v62[32];
        v62[32] = v68;
        sub_23B9A6310(v69, v70, v71, v72, v73);
        v74 = v6[10];
        v75 = (_QWORD *)((char *)a1 + v74);
        v76 = (_QWORD *)((char *)a2 + v74);
        v77 = *(_QWORD *)((char *)a1 + v74 + 8);
        v78 = *(_QWORD *)((char *)a2 + v74 + 8);
        a3 = v18;
        if (v77)
        {
          if (v78)
          {
            *v75 = *v76;
            v75[1] = v76[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v75[2] = v76[2];
            v75[3] = v76[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v75[4] = v76[4];
            swift_retain();
            swift_release();
          }
          else
          {
            sub_23B9A6BDC((uint64_t)v75);
            v79 = v76[4];
            v80 = *((_OWORD *)v76 + 1);
            *(_OWORD *)v75 = *(_OWORD *)v76;
            *((_OWORD *)v75 + 1) = v80;
            v75[4] = v79;
          }
        }
        else if (v78)
        {
          *v75 = *v76;
          v75[1] = v76[1];
          v75[2] = v76[2];
          v75[3] = v76[3];
          v75[4] = v76[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v81 = *(_OWORD *)v76;
          v82 = *((_OWORD *)v76 + 1);
          v75[4] = v76[4];
          *(_OWORD *)v75 = v81;
          *((_OWORD *)v75 + 1) = v82;
        }
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    }
    v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_27;
  }
  if (v10)
  {
LABEL_7:
    v17 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_16;
  }
  v84 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v11 = v6[7];
  __dst = (char *)a1 + v11;
  v12 = (char *)a2 + v11;
  v13 = sub_23BB88984();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  v27 = v6[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *(id *)v29;
  v31 = *((_QWORD *)v29 + 1);
  v32 = *((_QWORD *)v29 + 2);
  v33 = *((_QWORD *)v29 + 3);
  v34 = v29[32];
  sub_23B9A618C(*(id *)v29, v31, v32, v33, v34);
  *(_QWORD *)v28 = v30;
  *((_QWORD *)v28 + 1) = v31;
  *((_QWORD *)v28 + 2) = v32;
  *((_QWORD *)v28 + 3) = v33;
  v28[32] = v34;
  v35 = v6[10];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  if (v37[1])
  {
    *v36 = *v37;
    v36[1] = v37[1];
    v36[2] = v37[2];
    v36[3] = v37[3];
    v36[4] = v37[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v38 = *(_OWORD *)v37;
    v39 = *((_OWORD *)v37 + 1);
    v36[4] = v37[4];
    *(_OWORD *)v36 = v38;
    *((_OWORD *)v36 + 1) = v39;
  }
  a3 = v84;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
LABEL_16:
  v40 = *(int *)(a3 + 20);
  v41 = (uint64_t)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = type metadata accessor for DirectionsState();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 2, v43);
  v47 = v45((uint64_t)v42, 2, v43);
  if (!v46)
  {
    if (!v47)
    {
      *(_BYTE *)v41 = *v42;
      v55 = *(_OWORD *)(v42 + 8);
      *(_BYTE *)(v41 + 24) = v42[24];
      *(_OWORD *)(v41 + 8) = v55;
      v56 = *(int *)(v43 + 24);
      v57 = v41 + v56;
      v58 = &v42[v56];
      v59 = sub_23BB88984();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v57, v58, v59);
      goto LABEL_22;
    }
    sub_23B989D9C(v41, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    goto LABEL_21;
  }
  if (v47)
  {
LABEL_21:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v41, v42, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_22;
  }
  *(_BYTE *)v41 = *v42;
  v48 = *(_OWORD *)(v42 + 8);
  *(_BYTE *)(v41 + 24) = v42[24];
  *(_OWORD *)(v41 + 8) = v48;
  v49 = *(int *)(v43 + 24);
  v50 = v41 + v49;
  v51 = &v42[v49];
  v52 = sub_23BB88984();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 2, v43);
LABEL_22:
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23B9A6BDC(uint64_t a1)
{
  destroy for Badge();
  return a1;
}

_OWORD *sub_23B9A6C10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Action;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 2, v6))
  {
    v8 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = v6[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23BB88984();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    v16 = v6[9];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    v17[32] = v18[32];
    v20 = v6[10];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v23;
    *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  }
  v24 = *(int *)(a3 + 20);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for DirectionsState();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v28 + 48))(v26, 2, v27))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
    v25[24] = v26[24];
    v30 = *(int *)(v27 + 24);
    v31 = &v25[v30];
    v32 = &v26[v30];
    v33 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 2, v27);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_23B9A6E4C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t Action;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      v12 = v6[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23BB88984();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
      v29 = v6[9];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v32;
      v30[32] = v31[32];
      v33 = v6[10];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v36;
      *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
      goto LABEL_21;
    }
LABEL_7:
    v18 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
    sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
    goto LABEL_7;
  }
  v19 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v19;
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v20;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v21 = v6[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_23BB88984();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_15;
  }
  if (v28)
  {
LABEL_15:
    v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_16:
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  v38 = v6[9];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = v40[32];
  v42 = *(void **)v39;
  v43 = *((_QWORD *)v39 + 1);
  v44 = *((_QWORD *)v39 + 2);
  v45 = *((_QWORD *)v39 + 3);
  v46 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v46;
  v47 = v39[32];
  v39[32] = v41;
  sub_23B9A6310(v42, v43, v44, v45, v47);
  v48 = v6[10];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  if (*(_QWORD *)((char *)a1 + v48 + 8))
  {
    v51 = v50[1];
    if (v51)
    {
      *v49 = *v50;
      v49[1] = v51;
      swift_bridgeObjectRelease();
      v52 = v50[3];
      v49[2] = v50[2];
      v49[3] = v52;
      swift_bridgeObjectRelease();
      v49[4] = v50[4];
      swift_release();
      goto LABEL_21;
    }
    sub_23B9A6BDC((uint64_t)v49);
  }
  v53 = *((_OWORD *)v50 + 1);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *((_OWORD *)v49 + 1) = v53;
  v49[4] = v50[4];
LABEL_21:
  v54 = *(int *)(a3 + 20);
  v55 = (uint64_t)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = type metadata accessor for DirectionsState();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 2, v57);
  v61 = v59((uint64_t)v56, 2, v57);
  if (!v60)
  {
    if (!v61)
    {
      *(_BYTE *)v55 = *v56;
      *(_OWORD *)(v55 + 8) = *(_OWORD *)(v56 + 8);
      *(_BYTE *)(v55 + 24) = v56[24];
      v68 = *(int *)(v57 + 24);
      v69 = v55 + v68;
      v70 = &v56[v68];
      v71 = sub_23BB88984();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 40))(v69, v70, v71);
      goto LABEL_27;
    }
    sub_23B989D9C(v55, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    goto LABEL_26;
  }
  if (v61)
  {
LABEL_26:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_27;
  }
  *(_BYTE *)v55 = *v56;
  *(_OWORD *)(v55 + 8) = *(_OWORD *)(v56 + 8);
  *(_BYTE *)(v55 + 24) = v56[24];
  v62 = *(int *)(v57 + 24);
  v63 = v55 + v62;
  v64 = &v56[v62];
  v65 = sub_23BB88984();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 2, v57);
LABEL_27:
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23B9A72B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A72C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t Action;
  uint64_t v12;
  unsigned int v14;

  v6 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  Action = type metadata accessor for LocateAction();
  v12 = *(_QWORD *)(Action - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = Action;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 3)
    return v14 - 2;
  else
    return 0;
}

uint64_t sub_23B9A7368()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A7374(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for LocateAction();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t type metadata accessor for ShareReceivedMessageView.State.Active(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A59F08);
}

uint64_t sub_23B9A742C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ShareReceivedMessageView.State.Active.Location(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LocateAction();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23B9A74B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for Annotation();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v12 = v7[7];
      __dst = (char *)a1 + v12;
      v13 = (char *)a2 + v12;
      v14 = sub_23BB88984();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      v18 = v7[9];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = *(id *)v20;
      v22 = *((_QWORD *)v20 + 1);
      v23 = *((_QWORD *)v20 + 2);
      v24 = *((_QWORD *)v20 + 3);
      v25 = v20[32];
      sub_23B9A618C(*(id *)v20, v22, v23, v24, v25);
      *(_QWORD *)v19 = v21;
      *((_QWORD *)v19 + 1) = v22;
      *((_QWORD *)v19 + 2) = v23;
      *((_QWORD *)v19 + 3) = v24;
      v19[32] = v25;
      v26 = v7[10];
      v27 = (uint64_t *)((char *)a1 + v26);
      v28 = (uint64_t *)((char *)a2 + v26);
      v29 = v28[1];
      if (v29)
      {
        *v27 = *v28;
        v27[1] = v29;
        v30 = v28[3];
        v27[2] = v28[2];
        v27[3] = v30;
        v27[4] = v28[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        v31 = *((_OWORD *)v28 + 1);
        *(_OWORD *)v27 = *(_OWORD *)v28;
        *((_OWORD *)v27 + 1) = v31;
        v27[4] = v28[4];
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_23B9A76D4(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (int *)type metadata accessor for Annotation();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v2 - 1) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + v2[7];
    v5 = sub_23BB88984();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v7 = a1 + v2[9];
    sub_23B9A6310(*(void **)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_BYTE *)(v7 + 32));
    result = *(_QWORD *)(a1 + v2[10] + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

_QWORD *sub_23B9A77C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char *__dst;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    v10 = v6[7];
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_23BB88984();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    v16 = v6[9];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(id *)v18;
    v20 = *((_QWORD *)v18 + 1);
    v21 = *((_QWORD *)v18 + 2);
    v22 = *((_QWORD *)v18 + 3);
    v23 = v18[32];
    sub_23B9A618C(*(id *)v18, v20, v21, v22, v23);
    *(_QWORD *)v17 = v19;
    *((_QWORD *)v17 + 1) = v20;
    *((_QWORD *)v17 + 2) = v21;
    *((_QWORD *)v17 + 3) = v22;
    v17[32] = v23;
    v24 = v6[10];
    v25 = (_QWORD *)((char *)a1 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    if (v27)
    {
      *v25 = *v26;
      v25[1] = v27;
      v28 = v26[3];
      v25[2] = v26[2];
      v25[3] = v28;
      v25[4] = v26[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      v25[4] = v26[4];
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

_QWORD *sub_23B9A79BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char *__dst;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      goto LABEL_7;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    v17 = v6[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23BB88984();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v23 = v22(v18, 1, v20);
    v24 = v22(v19, 1, v20);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_20:
        *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
        v40 = v6[9];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = *(id *)v42;
        v44 = *((_QWORD *)v42 + 1);
        v45 = *((_QWORD *)v42 + 2);
        v46 = *((_QWORD *)v42 + 3);
        v47 = v42[32];
        sub_23B9A618C(*(id *)v42, v44, v45, v46, v47);
        v48 = *(void **)v41;
        v49 = *((_QWORD *)v41 + 1);
        v50 = *((_QWORD *)v41 + 2);
        v51 = *((_QWORD *)v41 + 3);
        *(_QWORD *)v41 = v43;
        *((_QWORD *)v41 + 1) = v44;
        *((_QWORD *)v41 + 2) = v45;
        *((_QWORD *)v41 + 3) = v46;
        v52 = v41[32];
        v41[32] = v47;
        sub_23B9A6310(v48, v49, v50, v51, v52);
        v53 = v6[10];
        v54 = (_QWORD *)((char *)a1 + v53);
        v55 = (_QWORD *)((char *)a2 + v53);
        v56 = *(_QWORD *)((char *)a1 + v53 + 8);
        v57 = v55[1];
        if (v56)
        {
          if (v57)
          {
            *v54 = *v55;
            v54[1] = v55[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v54[2] = v55[2];
            v54[3] = v55[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v54[4] = v55[4];
            swift_retain();
            swift_release();
          }
          else
          {
            sub_23B9A6BDC((uint64_t)v54);
            v58 = v55[4];
            v59 = *((_OWORD *)v55 + 1);
            *(_OWORD *)v54 = *(_OWORD *)v55;
            *((_OWORD *)v54 + 1) = v59;
            v54[4] = v58;
          }
        }
        else if (v57)
        {
          *v54 = *v55;
          v54[1] = v55[1];
          v54[2] = v55[2];
          v54[3] = v55[3];
          v54[4] = v55[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v60 = *(_OWORD *)v55;
          v61 = *((_OWORD *)v55 + 1);
          v54[4] = v55[4];
          *(_OWORD *)v54 = v60;
          *((_OWORD *)v54 + 1) = v61;
        }
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    }
    v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v11 = v6[7];
  __dst = (char *)a1 + v11;
  v12 = (char *)a2 + v11;
  v13 = sub_23BB88984();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  v25 = v6[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(id *)v27;
  v29 = *((_QWORD *)v27 + 1);
  v30 = *((_QWORD *)v27 + 2);
  v31 = *((_QWORD *)v27 + 3);
  v32 = v27[32];
  sub_23B9A618C(*(id *)v27, v29, v30, v31, v32);
  *(_QWORD *)v26 = v28;
  *((_QWORD *)v26 + 1) = v29;
  *((_QWORD *)v26 + 2) = v30;
  *((_QWORD *)v26 + 3) = v31;
  v26[32] = v32;
  v33 = v6[10];
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  if (v35[1])
  {
    *v34 = *v35;
    v34[1] = v35[1];
    v34[2] = v35[2];
    v34[3] = v35[3];
    v34[4] = v35[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v36 = *(_OWORD *)v35;
    v37 = *((_OWORD *)v35 + 1);
    v34[4] = v35[4];
    *(_OWORD *)v34 = v36;
    *((_OWORD *)v34 + 1) = v37;
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

_OWORD *sub_23B9A7E58(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    v9 = v6[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23BB88984();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
    v15 = v6[9];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v18;
    v16[32] = v17[32];
    v19 = v6[10];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *((_OWORD *)v21 + 1);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v22;
    *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

_OWORD *sub_23B9A7FC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  unsigned __int8 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;

  v6 = (int *)type metadata accessor for Annotation();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      goto LABEL_7;
    }
    v18 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v18;
    swift_bridgeObjectRelease();
    v19 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v19;
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    v20 = v6[7];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23BB88984();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v21, 1, v23);
    v27 = v25(v22, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        goto LABEL_16;
      }
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_16:
        *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
        v37 = v6[9];
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = v39[32];
        v41 = *(void **)v38;
        v42 = *((_QWORD *)v38 + 1);
        v43 = *((_QWORD *)v38 + 2);
        v44 = *((_QWORD *)v38 + 3);
        v45 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *((_OWORD *)v38 + 1) = v45;
        v46 = v38[32];
        v38[32] = v40;
        sub_23B9A6310(v41, v42, v43, v44, v46);
        v47 = v6[10];
        v48 = (_QWORD *)((char *)a1 + v47);
        v49 = (_QWORD *)((char *)a2 + v47);
        if (*(_QWORD *)((char *)a1 + v47 + 8))
        {
          v50 = v49[1];
          if (v50)
          {
            *v48 = *v49;
            v48[1] = v50;
            swift_bridgeObjectRelease();
            v51 = v49[3];
            v48[2] = v49[2];
            v48[3] = v51;
            swift_bridgeObjectRelease();
            v48[4] = v49[4];
            swift_release();
            return a1;
          }
          sub_23B9A6BDC((uint64_t)v48);
        }
        v52 = *((_OWORD *)v49 + 1);
        *(_OWORD *)v48 = *(_OWORD *)v49;
        *((_OWORD *)v48 + 1) = v52;
        v48[4] = v49[4];
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = a2[1];
  *a1 = *a2;
  a1[1] = v11;
  a1[2] = a2[2];
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23BB88984();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  v28 = v6[9];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  v29[32] = v30[32];
  v32 = v6[10];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_23B9A82FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A8308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for Annotation();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_23B9A8354()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A8360(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = type metadata accessor for Annotation();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23B9A83B4(uint64_t a1, uint64_t a2)
{
  return sub_23B9A9F00(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Annotation, 2);
}

uint64_t sub_23B9A83C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B9A9F4C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for Annotation, 2);
}

uint64_t sub_23B9A83D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B9A9FBC(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for Annotation);
}

uint64_t *sub_23B9A83E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t Action;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v45;
  char *__dst;
  uint64_t v47;
  uint64_t v48;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = (int *)type metadata accessor for Annotation();
      v11 = *((_QWORD *)v10 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v11 + 48))(a2, 2, v10))
      {
        v12 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        v14 = a2[3];
        a1[2] = a2[2];
        a1[3] = v14;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v15 = v10[7];
        __dst = (char *)a1 + v15;
        v47 = v11;
        v16 = (char *)a2 + v15;
        v17 = sub_23BB88984();
        v45 = *(_QWORD *)(v17 - 8);
        v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48 = v8;
        if (v18(v16, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v17);
        }
        *(uint64_t *)((char *)a1 + v10[8]) = *(uint64_t *)((char *)a2 + v10[8]);
        v20 = v10[9];
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = *(id *)v22;
        v24 = *((_QWORD *)v22 + 1);
        v25 = *((_QWORD *)v22 + 2);
        v26 = *((_QWORD *)v22 + 3);
        v27 = v22[32];
        sub_23B9A618C(*(id *)v22, v24, v25, v26, v27);
        *(_QWORD *)v21 = v23;
        *((_QWORD *)v21 + 1) = v24;
        *((_QWORD *)v21 + 2) = v25;
        *((_QWORD *)v21 + 3) = v26;
        v21[32] = v27;
        v28 = v10[10];
        v29 = (uint64_t *)((char *)a1 + v28);
        v30 = (uint64_t *)((char *)a2 + v28);
        v31 = v30[1];
        if (v31)
        {
          *v29 = *v30;
          v29[1] = v31;
          v32 = v30[3];
          v29[2] = v30[2];
          v29[3] = v32;
          v29[4] = v30[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v33 = *((_OWORD *)v30 + 1);
          *(_OWORD *)v29 = *(_OWORD *)v30;
          *((_OWORD *)v29 + 1) = v33;
          v29[4] = v30[4];
        }
        v8 = v48;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v47 + 56))(a1, 0, 2, v10);
      }
      v34 = *(int *)(v7 + 20);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = type metadata accessor for DirectionsState();
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48))(v36, 2, v37))
      {
        Action = type metadata accessor for LocateAction();
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
      }
      else
      {
        *v35 = *v36;
        *(_OWORD *)(v35 + 8) = *(_OWORD *)(v36 + 8);
        v35[24] = v36[24];
        v40 = *(int *)(v37 + 24);
        v41 = &v35[v40];
        v42 = &v36[v40];
        v43 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 2, v37);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 24)) = *((_BYTE *)a2 + *(int *)(v7 + 24));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t sub_23B9A872C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = (int *)type metadata accessor for Annotation();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 2, v4))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = a1 + v4[7];
      v6 = sub_23BB88984();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      v8 = a1 + v4[9];
      sub_23B9A6310(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
      if (*(_QWORD *)(a1 + v4[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v9 = a1 + *(int *)(v2 + 20);
    v10 = type metadata accessor for DirectionsState();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 2, v10);
    if (!(_DWORD)result)
    {
      v11 = v9 + *(int *)(v10 + 24);
      v12 = sub_23BB88984();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    }
  }
  return result;
}

_QWORD *sub_23B9A8898(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t Action;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  char *__dst;
  uint64_t v45;
  uint64_t v46;

  v6 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = (int *)type metadata accessor for Annotation();
    v9 = *((_QWORD *)v8 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v9 + 48))(a2, 2, v8))
    {
      v10 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v45 = v9;
      v46 = v7;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v13 = v8[7];
      __dst = (char *)a1 + v13;
      v14 = (char *)a2 + v13;
      v15 = sub_23BB88984();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      *(_QWORD *)((char *)a1 + v8[8]) = *(_QWORD *)((char *)a2 + v8[8]);
      v19 = v8[9];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = *(id *)v21;
      v23 = *((_QWORD *)v21 + 1);
      v24 = *((_QWORD *)v21 + 2);
      v25 = *((_QWORD *)v21 + 3);
      v26 = v21[32];
      sub_23B9A618C(*(id *)v21, v23, v24, v25, v26);
      *(_QWORD *)v20 = v22;
      *((_QWORD *)v20 + 1) = v23;
      *((_QWORD *)v20 + 2) = v24;
      *((_QWORD *)v20 + 3) = v25;
      v20[32] = v26;
      v27 = v8[10];
      v28 = (_QWORD *)((char *)a1 + v27);
      v29 = (_QWORD *)((char *)a2 + v27);
      v30 = v29[1];
      if (v30)
      {
        *v28 = *v29;
        v28[1] = v30;
        v31 = v29[3];
        v28[2] = v29[2];
        v28[3] = v31;
        v28[4] = v29[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        v32 = *((_OWORD *)v29 + 1);
        *(_OWORD *)v28 = *(_OWORD *)v29;
        *((_OWORD *)v28 + 1) = v32;
        v28[4] = v29[4];
      }
      v7 = v46;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v45 + 56))(a1, 0, 2, v8);
    }
    v33 = *(int *)(v6 + 20);
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for DirectionsState();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v35, 2, v36))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v34 = *v35;
      *(_OWORD *)(v34 + 8) = *(_OWORD *)(v35 + 8);
      v34[24] = v35[24];
      v39 = *(int *)(v36 + 24);
      v40 = &v34[v39];
      v41 = &v35[v39];
      v42 = sub_23BB88984();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 2, v36);
    }
    *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

_QWORD *sub_23B9A8BB4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  unsigned int (**v12)(_QWORD *, uint64_t, int *);
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t (*v16)(_QWORD *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t Action;
  __int128 v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  char *__dst;
  void *__dsta;
  uint64_t v122;
  void *v123;
  char *v124;

  v6 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23B989D9C((uint64_t)a1, type metadata accessor for ShareReceivedMessageView.State.Active);
      goto LABEL_7;
    }
    v14 = (int *)type metadata accessor for Annotation();
    v15 = (_QWORD *)*((_QWORD *)v14 - 1);
    v16 = (uint64_t (*)(_QWORD *, uint64_t, int *))v15[6];
    v17 = v16(a1, 2, v14);
    v18 = v16(a2, 2, v14);
    if (v17)
    {
      if (!v18)
      {
        v123 = v15;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v19 = v14[7];
        __dst = (char *)a1 + v19;
        v20 = (char *)a2 + v19;
        v21 = sub_23BB88984();
        v22 = *(_QWORD *)(v21 - 8);
        v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23(v20, 1, v21))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        *(_QWORD *)((char *)a1 + v14[8]) = *(_QWORD *)((char *)a2 + v14[8]);
        v63 = v14[9];
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = *(id *)v65;
        v67 = *((_QWORD *)v65 + 1);
        v68 = *((_QWORD *)v65 + 2);
        v69 = *((_QWORD *)v65 + 3);
        v70 = v65[32];
        sub_23B9A618C(*(id *)v65, v67, v68, v69, v70);
        *(_QWORD *)v64 = v66;
        *((_QWORD *)v64 + 1) = v67;
        *((_QWORD *)v64 + 2) = v68;
        *((_QWORD *)v64 + 3) = v69;
        v64[32] = v70;
        v71 = v14[10];
        v72 = (_QWORD *)((char *)a1 + v71);
        v73 = (_QWORD *)((char *)a2 + v71);
        if (v73[1])
        {
          *v72 = *v73;
          v72[1] = v73[1];
          v72[2] = v73[2];
          v72[3] = v73[3];
          v72[4] = v73[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v74 = *(_OWORD *)v73;
          v75 = *((_OWORD *)v73 + 1);
          v72[4] = v73[4];
          *(_OWORD *)v72 = v74;
          *((_OWORD *)v72 + 1) = v75;
        }
        (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v123 + 7))(a1, 0, 2, v14);
LABEL_34:
        v76 = *(int *)(v6 + 20);
        v77 = (char *)a1 + v76;
        v78 = (char *)a2 + v76;
        v79 = type metadata accessor for DirectionsState();
        v80 = *(_QWORD *)(v79 - 8);
        v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
        v82 = v81(v77, 2, v79);
        v83 = v81(v78, 2, v79);
        if (v82)
        {
          if (!v83)
          {
            *v77 = *v78;
            v84 = *(_OWORD *)(v78 + 8);
            v77[24] = v78[24];
            *(_OWORD *)(v77 + 8) = v84;
            v85 = *(int *)(v79 + 24);
            v86 = &v77[v85];
            v87 = &v78[v85];
            v88 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 2, v79);
LABEL_40:
            *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
            return a1;
          }
        }
        else
        {
          if (!v83)
          {
            *v77 = *v78;
            v91 = *(_OWORD *)(v78 + 8);
            v77[24] = v78[24];
            *(_OWORD *)(v77 + 8) = v91;
            v92 = *(int *)(v79 + 24);
            v93 = &v77[v92];
            v94 = &v78[v92];
            v95 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 24))(v93, v94, v95);
            goto LABEL_40;
          }
          sub_23B989D9C((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        }
        Action = type metadata accessor for LocateAction();
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
        goto LABEL_40;
      }
LABEL_16:
      v30 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      goto LABEL_34;
    }
    if (v18)
    {
      sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      goto LABEL_16;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    v55 = v14[7];
    v56 = (char *)a1 + v55;
    v57 = (char *)a2 + v55;
    v58 = sub_23BB88984();
    v59 = *(_QWORD *)(v58 - 8);
    v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
    v61 = v60(v56, 1, v58);
    v62 = v60(v57, 1, v58);
    if (v61)
    {
      if (!v62)
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
        goto LABEL_46;
      }
    }
    else
    {
      if (!v62)
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v56, v57, v58);
LABEL_46:
        *(_QWORD *)((char *)a1 + v14[8]) = *(_QWORD *)((char *)a2 + v14[8]);
        v97 = v14[9];
        v98 = (char *)a1 + v97;
        v99 = (char *)a2 + v97;
        v100 = *(id *)v99;
        v101 = *((_QWORD *)v99 + 1);
        v102 = *((_QWORD *)v99 + 2);
        v103 = *((_QWORD *)v99 + 3);
        v104 = v99[32];
        sub_23B9A618C(*(id *)v99, v101, v102, v103, v104);
        v105 = *(void **)v98;
        v106 = *((_QWORD *)v98 + 1);
        v107 = *((_QWORD *)v98 + 2);
        v108 = *((_QWORD *)v98 + 3);
        *(_QWORD *)v98 = v100;
        *((_QWORD *)v98 + 1) = v101;
        *((_QWORD *)v98 + 2) = v102;
        *((_QWORD *)v98 + 3) = v103;
        v109 = v98[32];
        v98[32] = v104;
        sub_23B9A6310(v105, v106, v107, v108, v109);
        v110 = v14[10];
        v111 = (_QWORD *)((char *)a1 + v110);
        v112 = (_QWORD *)((char *)a2 + v110);
        v113 = *(_QWORD *)((char *)a1 + v110 + 8);
        v114 = *(_QWORD *)((char *)a2 + v110 + 8);
        if (v113)
        {
          if (v114)
          {
            *v111 = *v112;
            v111[1] = v112[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v111[2] = v112[2];
            v111[3] = v112[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v111[4] = v112[4];
            swift_retain();
            swift_release();
          }
          else
          {
            sub_23B9A6BDC((uint64_t)v111);
            v115 = v112[4];
            v116 = *((_OWORD *)v112 + 1);
            *(_OWORD *)v111 = *(_OWORD *)v112;
            *((_OWORD *)v111 + 1) = v116;
            v111[4] = v115;
          }
        }
        else if (v114)
        {
          *v111 = *v112;
          v111[1] = v112[1];
          v111[2] = v112[2];
          v111[3] = v112[3];
          v111[4] = v112[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v117 = *(_OWORD *)v112;
          v118 = *((_OWORD *)v112 + 1);
          v111[4] = v112[4];
          *(_OWORD *)v111 = v117;
          *((_OWORD *)v111 + 1) = v118;
        }
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
    }
    v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_46;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = (int *)type metadata accessor for Annotation();
  v12 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v11 - 1);
  if (v12[6](a2, 2, v11))
  {
    v13 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    __dsta = v12;
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    v25 = v11[7];
    v124 = (char *)a1 + v25;
    v26 = (char *)a2 + v25;
    v27 = sub_23BB88984();
    v119 = *(_QWORD *)(v27 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v122 = v6;
    if (v28(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v124, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v124, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v124, 0, 1, v27);
    }
    *(_QWORD *)((char *)a1 + v11[8]) = *(_QWORD *)((char *)a2 + v11[8]);
    v31 = v11[9];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = *(id *)v33;
    v35 = *((_QWORD *)v33 + 1);
    v36 = *((_QWORD *)v33 + 2);
    v37 = *((_QWORD *)v33 + 3);
    v38 = v33[32];
    sub_23B9A618C(*(id *)v33, v35, v36, v37, v38);
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v35;
    *((_QWORD *)v32 + 2) = v36;
    *((_QWORD *)v32 + 3) = v37;
    v32[32] = v38;
    v39 = v11[10];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    if (v41[1])
    {
      *v40 = *v41;
      v40[1] = v41[1];
      v40[2] = v41[2];
      v40[3] = v41[3];
      v40[4] = v41[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v42 = *(_OWORD *)v41;
      v43 = *((_OWORD *)v41 + 1);
      v40[4] = v41[4];
      *(_OWORD *)v40 = v42;
      *((_OWORD *)v40 + 1) = v43;
    }
    v6 = v122;
    (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__dsta + 7))(a1, 0, 2, v11);
  }
  v44 = *(int *)(v6 + 20);
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for DirectionsState();
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v48 + 48))(v46, 2, v47))
  {
    v49 = type metadata accessor for LocateAction();
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    *v45 = *v46;
    v50 = *(_OWORD *)(v46 + 8);
    v45[24] = v46[24];
    *(_OWORD *)(v45 + 8) = v50;
    v51 = *(int *)(v47 + 24);
    v52 = &v45[v51];
    v53 = &v46[v51];
    v54 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 2, v47);
  }
  *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

_OWORD *sub_23B9A94BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t Action;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;

  v6 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = (int *)type metadata accessor for Annotation();
    v9 = *((_QWORD *)v8 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v9 + 48))(a2, 2, v8))
    {
      v10 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      a1[2] = a2[2];
      v12 = v8[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23BB88984();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(_QWORD *)((char *)a1 + v8[8]) = *(_QWORD *)((char *)a2 + v8[8]);
      v18 = v8[9];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      v19[32] = v20[32];
      v22 = v8[10];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v9 + 56))(a1, 0, 2, v8);
    }
    v26 = *(int *)(v6 + 20);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = type metadata accessor for DirectionsState();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v28, 2, v29))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v27 = *v28;
      *(_OWORD *)(v27 + 8) = *(_OWORD *)(v28 + 8);
      v27[24] = v28[24];
      v32 = *(int *)(v29 + 24);
      v33 = &v27[v32];
      v34 = &v28[v32];
      v35 = sub_23BB88984();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 2, v29);
    }
    *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

_OWORD *sub_23B9A9750(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t (*v16)(_OWORD *, uint64_t, int *);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  unsigned __int8 v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t Action;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;

  v6 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23B989D9C((uint64_t)a1, type metadata accessor for ShareReceivedMessageView.State.Active);
      goto LABEL_7;
    }
    v14 = (int *)type metadata accessor for Annotation();
    v15 = *((_QWORD *)v14 - 1);
    v16 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v15 + 48);
    v17 = v16(a1, 2, v14);
    v18 = v16(a2, 2, v14);
    if (v17)
    {
      if (!v18)
      {
        v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        a1[2] = a2[2];
        v20 = v14[7];
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_23BB88984();
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        *(_QWORD *)((char *)a1 + v14[8]) = *(_QWORD *)((char *)a2 + v14[8]);
        v62 = v14[9];
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = *((_OWORD *)v64 + 1);
        *(_OWORD *)v63 = *(_OWORD *)v64;
        *((_OWORD *)v63 + 1) = v65;
        v63[32] = v64[32];
        v66 = v14[10];
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = *((_OWORD *)v68 + 1);
        *(_OWORD *)v67 = *(_OWORD *)v68;
        *((_OWORD *)v67 + 1) = v69;
        *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v15 + 56))(a1, 0, 2, v14);
        goto LABEL_36;
      }
LABEL_16:
      v33 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      goto LABEL_36;
    }
    if (v18)
    {
      sub_23B989D9C((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      goto LABEL_16;
    }
    v52 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v52;
    swift_bridgeObjectRelease();
    v53 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v53;
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    v54 = v14[7];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = sub_23BB88984();
    v58 = *(_QWORD *)(v57 - 8);
    v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
    v60 = v59(v55, 1, v57);
    v61 = v59(v56, 1, v57);
    if (v60)
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
LABEL_31:
        *(_QWORD *)((char *)a1 + v14[8]) = *(_QWORD *)((char *)a2 + v14[8]);
        v71 = v14[9];
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = v73[32];
        v75 = *(void **)v72;
        v76 = *((_QWORD *)v72 + 1);
        v77 = *((_QWORD *)v72 + 2);
        v78 = *((_QWORD *)v72 + 3);
        v79 = *((_OWORD *)v73 + 1);
        *(_OWORD *)v72 = *(_OWORD *)v73;
        *((_OWORD *)v72 + 1) = v79;
        v80 = v72[32];
        v72[32] = v74;
        sub_23B9A6310(v75, v76, v77, v78, v80);
        v81 = v14[10];
        v82 = (_QWORD *)((char *)a1 + v81);
        v83 = (_QWORD *)((char *)a2 + v81);
        if (*(_QWORD *)((char *)a1 + v81 + 8))
        {
          v84 = v83[1];
          if (v84)
          {
            *v82 = *v83;
            v82[1] = v84;
            swift_bridgeObjectRelease();
            v85 = v83[3];
            v82[2] = v83[2];
            v82[3] = v85;
            swift_bridgeObjectRelease();
            v82[4] = v83[4];
            swift_release();
            goto LABEL_36;
          }
          sub_23B9A6BDC((uint64_t)v82);
        }
        v86 = *((_OWORD *)v83 + 1);
        *(_OWORD *)v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v86;
        v82[4] = v83[4];
LABEL_36:
        v87 = *(int *)(v6 + 20);
        v88 = (char *)a1 + v87;
        v89 = (char *)a2 + v87;
        v90 = type metadata accessor for DirectionsState();
        v91 = *(_QWORD *)(v90 - 8);
        v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
        v93 = v92(v88, 2, v90);
        v94 = v92(v89, 2, v90);
        if (v93)
        {
          if (!v94)
          {
            *v88 = *v89;
            *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
            v88[24] = v89[24];
            v95 = *(int *)(v90 + 24);
            v96 = &v88[v95];
            v97 = &v89[v95];
            v98 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 2, v90);
LABEL_42:
            *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
            return a1;
          }
        }
        else
        {
          if (!v94)
          {
            *v88 = *v89;
            *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
            v88[24] = v89[24];
            v101 = *(int *)(v90 + 24);
            v102 = &v88[v101];
            v103 = &v89[v101];
            v104 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 40))(v102, v103, v104);
            goto LABEL_42;
          }
          sub_23B989D9C((uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        }
        Action = type metadata accessor for LocateAction();
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
        goto LABEL_42;
      }
    }
    else
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v55, v56, v57);
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
    }
    v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_31;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = (int *)type metadata accessor for Annotation();
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(a2, 2, v11))
  {
    v13 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v26 = a2[1];
    *a1 = *a2;
    a1[1] = v26;
    a1[2] = a2[2];
    v27 = v11[7];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_23BB88984();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    *(_QWORD *)((char *)a1 + v11[8]) = *(_QWORD *)((char *)a2 + v11[8]);
    v34 = v11[9];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v37;
    v35[32] = v36[32];
    v38 = v11[10];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = *((_OWORD *)v40 + 1);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v41;
    *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v12 + 56))(a1, 0, 2, v11);
  }
  v42 = *(int *)(v6 + 20);
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for DirectionsState();
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v46 + 48))(v44, 2, v45))
  {
    v47 = type metadata accessor for LocateAction();
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    *v43 = *v44;
    *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
    v43[24] = v44[24];
    v48 = *(int *)(v45 + 24);
    v49 = &v43[v48];
    v50 = &v44[v48];
    v51 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 2, v45);
  }
  *((_BYTE *)a1 + *(int *)(v6 + 24)) = *((_BYTE *)a2 + *(int *)(v6 + 24));
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t sub_23B9A9E38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A9E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t sub_23B9A9E90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9A9E9C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23B9A9EF0(uint64_t a1, uint64_t a2)
{
  return sub_23B9A9F00(a1, a2, type metadata accessor for ShareReceivedMessageView.State.Active, 3);
}

uint64_t sub_23B9A9F00(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v6;

  v6 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a4, v6);
}

uint64_t sub_23B9A9F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B9A9F4C(a1, a2, a3, type metadata accessor for ShareReceivedMessageView.State.Active, 3);
}

uint64_t sub_23B9A9F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v8;

  v8 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, a2, a5, v8);
}

uint64_t type metadata accessor for ShareReceivedMessageView.State(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5A038);
}

uint64_t sub_23B9A9FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B9A9FBC(a1, a2, a3, type metadata accessor for ShareReceivedMessageView.State.Active);
}

uint64_t sub_23B9A9FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_23B9AA014(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t Action;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  _OWORD *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = (void *)a2[6];
    v9 = a3[5];
    __dst = (_QWORD *)(a1 + v9);
    v10 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v8;
    v11 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v8;
    v15 = v10;
    if (v13(v10, 3, v11))
    {
      v16 = type metadata accessor for ShareReceivedMessageView.State(0);
      memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v75 = v12;
      v74 = v11;
      v18 = (int *)type metadata accessor for Annotation();
      v19 = *((_QWORD *)v18 - 1);
      v76 = v15;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v19 + 48))(v15, 2, v18))
      {
        v20 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
        v21 = __dst;
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v22 = v74;
        v23 = v75;
      }
      else
      {
        v24 = v15[1];
        *__dst = *v15;
        __dst[1] = v24;
        v25 = v15[3];
        __dst[2] = v15[2];
        __dst[3] = v25;
        *((_OWORD *)__dst + 2) = *((_OWORD *)v15 + 2);
        v26 = v18[7];
        v72 = (char *)__dst + v26;
        v27 = (char *)v15 + v26;
        v28 = sub_23BB88984();
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v73 = v19;
        if (v30(v27, 1, v28))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v72, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v72, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v72, 0, 1, v28);
        }
        *(_QWORD *)((char *)__dst + v18[8]) = *(_QWORD *)((char *)v76 + v18[8]);
        v32 = v18[9];
        v33 = (char *)__dst + v32;
        v34 = (char *)v76 + v32;
        v36 = *(id *)v34;
        v35 = *((_QWORD *)v34 + 1);
        v38 = *((_QWORD *)v34 + 2);
        v37 = *((_QWORD *)v34 + 3);
        v39 = v34[32];
        sub_23B9A618C(*(id *)v34, v35, v38, v37, v39);
        *(_QWORD *)v33 = v36;
        *((_QWORD *)v33 + 1) = v35;
        *((_QWORD *)v33 + 2) = v38;
        *((_QWORD *)v33 + 3) = v37;
        v15 = v76;
        v33[32] = v39;
        v40 = v18[10];
        v41 = (_QWORD *)((char *)__dst + v40);
        v42 = (_QWORD *)((char *)v76 + v40);
        v43 = v42[1];
        if (v43)
        {
          *v41 = *v42;
          v41[1] = v43;
          v44 = v42[3];
          v41[2] = v42[2];
          v41[3] = v44;
          v41[4] = v42[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v45 = *((_OWORD *)v42 + 1);
          *(_OWORD *)v41 = *(_OWORD *)v42;
          *((_OWORD *)v41 + 1) = v45;
          v41[4] = v42[4];
        }
        v22 = v74;
        v21 = __dst;
        v23 = v75;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v73 + 56))(__dst, 0, 2, v18);
      }
      v46 = *(int *)(v22 + 20);
      v47 = (char *)v21 + v46;
      v48 = (char *)v15 + v46;
      v49 = type metadata accessor for DirectionsState();
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48))(v48, 2, v49))
      {
        Action = type metadata accessor for LocateAction();
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
      }
      else
      {
        *v47 = *v48;
        *(_OWORD *)(v47 + 8) = *(_OWORD *)(v48 + 8);
        v47[24] = v48[24];
        v52 = *(int *)(v49 + 24);
        v53 = &v47[v52];
        v54 = &v48[v52];
        v55 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 2, v49);
      }
      *((_BYTE *)v21 + *(int *)(v22 + 24)) = *((_BYTE *)v76 + *(int *)(v22 + 24));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 3, v22);
    }
    v56 = a3[6];
    v57 = a3[7];
    v58 = v4 + v56;
    v59 = (uint64_t)a2 + v56;
    *(_QWORD *)v58 = *(_QWORD *)v59;
    *(_OWORD *)(v58 + 8) = *(_OWORD *)(v59 + 8);
    *(_OWORD *)(v58 + 24) = *(_OWORD *)(v59 + 24);
    *(_OWORD *)(v58 + 40) = *(_OWORD *)(v59 + 40);
    *(_OWORD *)(v58 + 56) = *(_OWORD *)(v59 + 56);
    *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
    *(_OWORD *)(v58 + 88) = *(_OWORD *)(v59 + 88);
    *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
    v60 = *(_QWORD *)(v59 + 136);
    *(_OWORD *)(v58 + 120) = *(_OWORD *)(v59 + 120);
    *(_QWORD *)(v58 + 136) = v60;
    v61 = (_QWORD *)(v4 + v57);
    v62 = (uint64_t *)((char *)a2 + v57);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = a3[8];
    v65 = a3[9];
    v66 = (_OWORD *)(v4 + v64);
    v67 = (_OWORD *)((char *)a2 + v64);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v66[2] = v67[2];
    v69 = v4 + v65;
    v70 = (uint64_t)a2 + v65;
    *(_BYTE *)v69 = *(_BYTE *)v70;
    *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23B9AA528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 3, v5))
  {
    v6 = (int *)type metadata accessor for Annotation();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v4, 2, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v4 + v6[7];
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      v10 = v4 + v6[9];
      sub_23B9A6310(*(void **)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_BYTE *)(v10 + 32));
      if (*(_QWORD *)(v4 + v6[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = type metadata accessor for DirectionsState();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 2, v12))
    {
      v13 = v11 + *(int *)(v12 + 24);
      v14 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23B9AA724(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t Action;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  unsigned __int8 v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *__dst;
  _BYTE *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(void **)(a2 + 48);
  v8 = a3[5];
  __dst = (_QWORD *)(a1 + v8);
  v9 = (_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v10 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v7;
  if (v12(v9, 3, v10))
  {
    v14 = type metadata accessor for ShareReceivedMessageView.State(0);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v73 = v11;
    v72 = v10;
    v15 = type metadata accessor for Annotation();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = v9;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v9, 2, v15))
    {
      v18 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      v19 = __dst;
      memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      v20 = v72;
      v21 = v73;
    }
    else
    {
      v22 = v9[1];
      *__dst = *v9;
      __dst[1] = v22;
      v23 = v9[3];
      __dst[2] = v9[2];
      __dst[3] = v23;
      *((_OWORD *)__dst + 2) = *((_OWORD *)v9 + 2);
      v70 = (int *)v15;
      v24 = *(int *)(v15 + 28);
      v68 = (char *)__dst + v24;
      v25 = (char *)v9 + v24;
      v26 = sub_23BB88984();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71 = v16;
      if (v28(v25, 1, v26))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v68, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v68, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v68, 0, 1, v26);
      }
      *(_QWORD *)((char *)__dst + v70[8]) = *(_QWORD *)((char *)v17 + v70[8]);
      v30 = v70[9];
      v31 = (char *)__dst + v30;
      v32 = (char *)v17 + v30;
      v33 = *(id *)v32;
      v34 = *((_QWORD *)v32 + 1);
      v36 = *((_QWORD *)v32 + 2);
      v35 = *((_QWORD *)v32 + 3);
      v69 = v32[32];
      sub_23B9A618C(*(id *)v32, v34, v36, v35, v69);
      *(_QWORD *)v31 = v33;
      *((_QWORD *)v31 + 1) = v34;
      *((_QWORD *)v31 + 2) = v36;
      *((_QWORD *)v31 + 3) = v35;
      v31[32] = v69;
      v37 = v70[10];
      v38 = (_QWORD *)((char *)__dst + v37);
      v39 = (_QWORD *)((char *)v17 + v37);
      v40 = v39[1];
      if (v40)
      {
        *v38 = *v39;
        v38[1] = v40;
        v41 = v39[3];
        v38[2] = v39[2];
        v38[3] = v41;
        v38[4] = v39[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        v42 = *((_OWORD *)v39 + 1);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        *((_OWORD *)v38 + 1) = v42;
        v38[4] = v39[4];
      }
      v20 = v72;
      v21 = v73;
      v19 = __dst;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v71 + 56))(__dst, 0, 2, v70);
    }
    v43 = *(int *)(v20 + 20);
    v44 = (char *)v19 + v43;
    v45 = (char *)v17 + v43;
    v46 = type metadata accessor for DirectionsState();
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48))(v45, 2, v46))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v44 = *v45;
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
      v44[24] = v45[24];
      v49 = *(int *)(v46 + 24);
      __dsta = &v44[v49];
      v50 = &v45[v49];
      v51 = sub_23BB88984();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(__dsta, v50, v51);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 2, v46);
    }
    *((_BYTE *)v19 + *(int *)(v20 + 24)) = *((_BYTE *)v17 + *(int *)(v20 + 24));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v19, 0, 3, v20);
  }
  v52 = a3[6];
  v53 = a3[7];
  v54 = a1 + v52;
  v55 = a2 + v52;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_OWORD *)(v54 + 8) = *(_OWORD *)(v55 + 8);
  *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 24);
  *(_OWORD *)(v54 + 40) = *(_OWORD *)(v55 + 40);
  *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
  *(_OWORD *)(v54 + 72) = *(_OWORD *)(v55 + 72);
  *(_OWORD *)(v54 + 88) = *(_OWORD *)(v55 + 88);
  *(_OWORD *)(v54 + 104) = *(_OWORD *)(v55 + 104);
  v56 = *(_QWORD *)(v55 + 136);
  *(_OWORD *)(v54 + 120) = *(_OWORD *)(v55 + 120);
  *(_QWORD *)(v54 + 136) = v56;
  v57 = (_QWORD *)(a1 + v53);
  v58 = (_QWORD *)(a2 + v53);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  v60 = a3[8];
  v61 = a3[9];
  v62 = (_OWORD *)(a1 + v60);
  v63 = (_OWORD *)(a2 + v60);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  v62[2] = v63[2];
  v65 = a1 + v61;
  v66 = a2 + v61;
  *(_BYTE *)v65 = *(_BYTE *)v66;
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23B9AAC0C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, uint64_t);
  int v15;
  int v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD *, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  _BYTE *v60;
  int *v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  int v71;
  int v72;
  uint64_t v73;
  char *v74;
  char *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  int v92;
  int v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t Action;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  int *v153;
  int *v154;
  int *v155;
  int *v156;
  uint64_t v157;
  _QWORD *__dst;
  char *__dsta;
  _QWORD *__dstb;
  _QWORD *__dstc;
  unsigned __int8 __dstd;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a2 + 48);
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  v8 = v6;

  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 3, v12);
  v16 = v14(v11, 3, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_23B989D9C((uint64_t)v10, type metadata accessor for ShareReceivedMessageView.State.Active);
      goto LABEL_7;
    }
    v21 = (int *)type metadata accessor for Annotation();
    v22 = *((_QWORD *)v21 - 1);
    v23 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v22 + 48);
    v24 = v23(v10, 2, v21);
    v25 = v23(v11, 2, v21);
    v164 = v12;
    v166 = v11;
    if (v24)
    {
      if (!v25)
      {
        v149 = v22;
        v155 = a3;
        __dst = v10;
        *v10 = *v11;
        v10[1] = v11[1];
        v10[2] = v11[2];
        v10[3] = v11[3];
        *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
        v26 = v21[7];
        v27 = (char *)v10 + v26;
        v28 = (char *)v11 + v26;
        v29 = sub_23BB88984();
        v30 = *(_QWORD *)(v29 - 8);
        v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31(v28, 1, v29))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v11 = v166;
        *(_QWORD *)((char *)__dst + v21[8]) = *(_QWORD *)((char *)v166 + v21[8]);
        v73 = v21[9];
        v74 = (char *)__dst + v73;
        v75 = (char *)v166 + v73;
        v76 = *(id *)v75;
        v77 = *((_QWORD *)v75 + 1);
        v154 = v21;
        v78 = *((_QWORD *)v75 + 2);
        v79 = *((_QWORD *)v75 + 3);
        v80 = v75[32];
        sub_23B9A618C(*(id *)v75, v77, v78, v79, v80);
        *(_QWORD *)v74 = v76;
        *((_QWORD *)v74 + 1) = v77;
        *((_QWORD *)v74 + 2) = v78;
        *((_QWORD *)v74 + 3) = v79;
        v74[32] = v80;
        v81 = v154[10];
        v82 = (_QWORD *)((char *)__dst + v81);
        v83 = (_QWORD *)((char *)v166 + v81);
        a3 = v155;
        if (v83[1])
        {
          *v82 = *v83;
          v82[1] = v83[1];
          v82[2] = v83[2];
          v82[3] = v83[3];
          v82[4] = v83[4];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          v84 = *(_OWORD *)v83;
          v85 = *((_OWORD *)v83 + 1);
          v82[4] = v83[4];
          *(_OWORD *)v82 = v84;
          *((_OWORD *)v82 + 1) = v85;
        }
        v10 = __dst;
        v12 = v164;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v149 + 56))(__dst, 0, 2, v154);
        goto LABEL_34;
      }
LABEL_16:
      v38 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      goto LABEL_34;
    }
    if (v25)
    {
      sub_23B989D9C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      goto LABEL_16;
    }
    *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v10[2] = v11[2];
    v10[3] = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v10[4] = v11[4];
    v10[5] = v11[5];
    v153 = v21;
    v65 = v21[7];
    v66 = (char *)v10 + v65;
    v67 = (char *)v11 + v65;
    v68 = sub_23BB88984();
    v69 = *(_QWORD *)(v68 - 8);
    v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
    v71 = v70(v66, 1, v68);
    v72 = v70(v67, 1, v68);
    if (v71)
    {
      if (!v72)
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        goto LABEL_46;
      }
    }
    else
    {
      if (!v72)
      {
        (*(void (**)(char *, char *, uint64_t))(v69 + 24))(v66, v67, v68);
LABEL_46:
        *(_QWORD *)((char *)v10 + v153[8]) = *(_QWORD *)((char *)v166 + v153[8]);
        v129 = v153[9];
        v130 = (char *)v10 + v129;
        v131 = (char *)v166 + v129;
        v132 = *(id *)v131;
        v133 = *((_QWORD *)v131 + 1);
        v134 = *((_QWORD *)v131 + 2);
        v157 = *((_QWORD *)v131 + 3);
        __dstd = v131[32];
        sub_23B9A618C(*(id *)v131, v133, v134, v157, __dstd);
        v135 = *(void **)v130;
        v136 = *((_QWORD *)v130 + 1);
        v137 = *((_QWORD *)v130 + 2);
        v138 = *((_QWORD *)v130 + 3);
        *(_QWORD *)v130 = v132;
        *((_QWORD *)v130 + 1) = v133;
        *((_QWORD *)v130 + 2) = v134;
        v11 = v166;
        *((_QWORD *)v130 + 3) = v157;
        v139 = v130[32];
        v130[32] = __dstd;
        sub_23B9A6310(v135, v136, v137, v138, v139);
        v140 = v153[10];
        v141 = (_QWORD *)((char *)v10 + v140);
        v142 = (_QWORD *)((char *)v166 + v140);
        v143 = *(_QWORD *)((char *)v10 + v140 + 8);
        v144 = *(_QWORD *)((char *)v166 + v140 + 8);
        if (v143)
        {
          if (v144)
          {
            *v141 = *v142;
            v141[1] = v142[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v141[2] = v142[2];
            v141[3] = v142[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v141[4] = v142[4];
            swift_retain();
            swift_release();
          }
          else
          {
            sub_23B9A6BDC((uint64_t)v141);
            v145 = v142[4];
            v146 = *((_OWORD *)v142 + 1);
            *(_OWORD *)v141 = *(_OWORD *)v142;
            *((_OWORD *)v141 + 1) = v146;
            v141[4] = v145;
          }
          v12 = v164;
        }
        else
        {
          if (v144)
          {
            *v141 = *v142;
            v141[1] = v142[1];
            v141[2] = v142[2];
            v141[3] = v142[3];
            v141[4] = v142[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
          }
          else
          {
            v147 = *(_OWORD *)v142;
            v148 = *((_OWORD *)v142 + 1);
            v141[4] = v142[4];
            *(_OWORD *)v141 = v147;
            *((_OWORD *)v141 + 1) = v148;
          }
          v12 = v164;
        }
LABEL_34:
        v86 = *(int *)(v12 + 20);
        v87 = (char *)v10 + v86;
        v88 = (char *)v11 + v86;
        v89 = type metadata accessor for DirectionsState();
        v90 = *(_QWORD *)(v89 - 8);
        v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
        v92 = v91(v87, 2, v89);
        v93 = v91(v88, 2, v89);
        if (v92)
        {
          if (!v93)
          {
            *v87 = *v88;
            v94 = *(_OWORD *)(v88 + 8);
            v87[24] = v88[24];
            *(_OWORD *)(v87 + 8) = v94;
            v95 = *(int *)(v89 + 24);
            v96 = &v87[v95];
            v97 = &v88[v95];
            v98 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 2, v89);
LABEL_40:
            *((_BYTE *)v10 + *(int *)(v164 + 24)) = *((_BYTE *)v166 + *(int *)(v164 + 24));
            goto LABEL_41;
          }
        }
        else
        {
          if (!v93)
          {
            *v87 = *v88;
            v123 = *(_OWORD *)(v88 + 8);
            v87[24] = v88[24];
            *(_OWORD *)(v87 + 8) = v123;
            v124 = *(int *)(v89 + 24);
            v125 = &v87[v124];
            v126 = &v88[v124];
            v127 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 24))(v125, v126, v127);
            goto LABEL_40;
          }
          sub_23B989D9C((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        }
        Action = type metadata accessor for LocateAction();
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v66, v68);
    }
    v128 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    goto LABEL_46;
  }
  if (v16)
  {
LABEL_7:
    v20 = type metadata accessor for ShareReceivedMessageView.State(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_41;
  }
  v17 = (int *)type metadata accessor for Annotation();
  v18 = *((_QWORD *)v17 - 1);
  v163 = v12;
  v165 = v11;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v18 + 48))(v11, 2, v17))
  {
    v19 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v150 = v18;
    *v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    v10[3] = v11[3];
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    v33 = v17[7];
    v156 = a3;
    __dsta = (char *)v10 + v33;
    v34 = (char *)v11 + v33;
    v35 = sub_23BB88984();
    v151 = *(_QWORD *)(v35 - 8);
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dsta, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v151 + 16))(__dsta, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v151 + 56))(__dsta, 0, 1, v35);
    }
    v11 = v165;
    *(_QWORD *)((char *)v10 + v17[8]) = *(_QWORD *)((char *)v165 + v17[8]);
    v39 = v17[9];
    __dstb = v10;
    v40 = (char *)v10 + v39;
    v41 = (char *)v165 + v39;
    v42 = *(id *)v41;
    v43 = *((_QWORD *)v41 + 1);
    v152 = v17;
    v45 = *((_QWORD *)v41 + 2);
    v44 = *((_QWORD *)v41 + 3);
    v46 = v41[32];
    sub_23B9A618C(*(id *)v41, v43, v45, v44, v46);
    *(_QWORD *)v40 = v42;
    *((_QWORD *)v40 + 1) = v43;
    *((_QWORD *)v40 + 2) = v45;
    *((_QWORD *)v40 + 3) = v44;
    v40[32] = v46;
    v10 = __dstb;
    v47 = v152[10];
    v48 = (_QWORD *)((char *)__dstb + v47);
    v49 = (_QWORD *)((char *)v165 + v47);
    if (v49[1])
    {
      *v48 = *v49;
      v48[1] = v49[1];
      v48[2] = v49[2];
      v48[3] = v49[3];
      v48[4] = v49[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v50 = *(_OWORD *)v49;
      v51 = *((_OWORD *)v49 + 1);
      v48[4] = v49[4];
      *(_OWORD *)v48 = v50;
      *((_OWORD *)v48 + 1) = v51;
    }
    a3 = v156;
    v12 = v163;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v150 + 56))(__dstb, 0, 2, v152);
  }
  v52 = *(int *)(v12 + 20);
  v53 = (char *)v10 + v52;
  v54 = (char *)v11 + v52;
  v55 = type metadata accessor for DirectionsState();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v56 + 48))(v54, 2, v55))
  {
    v57 = type metadata accessor for LocateAction();
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    *v53 = *v54;
    v58 = *(_OWORD *)(v54 + 8);
    v53[24] = v54[24];
    *(_OWORD *)(v53 + 8) = v58;
    v59 = *(int *)(v55 + 24);
    v60 = &v53[v59];
    __dstc = v10;
    v61 = a3;
    v62 = &v54[v59];
    v63 = sub_23BB88984();
    v64 = v62;
    a3 = v61;
    v10 = __dstc;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v60, v64, v63);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 2, v55);
  }
  *((_BYTE *)v10 + *(int *)(v163 + 24)) = *((_BYTE *)v165 + *(int *)(v163 + 24));
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 56))(v10, 0, 3);
LABEL_41:
  v100 = a3[6];
  v101 = (_QWORD *)(a1 + v100);
  v102 = (_QWORD *)(a2 + v100);
  v103 = *(_QWORD *)(a2 + v100 + 8);
  *v101 = *(_QWORD *)(a2 + v100);
  v101[1] = v103;
  swift_retain();
  swift_release();
  v104 = v102[3];
  v101[2] = v102[2];
  v101[3] = v104;
  swift_retain();
  swift_release();
  v105 = v102[5];
  v101[4] = v102[4];
  v101[5] = v105;
  swift_retain();
  swift_release();
  v106 = v102[7];
  v101[6] = v102[6];
  v101[7] = v106;
  swift_retain();
  swift_release();
  v107 = v102[9];
  v101[8] = v102[8];
  v101[9] = v107;
  swift_retain();
  swift_release();
  v108 = v102[11];
  v101[10] = v102[10];
  v101[11] = v108;
  swift_retain();
  swift_release();
  v109 = v102[13];
  v101[12] = v102[12];
  v101[13] = v109;
  swift_retain();
  swift_release();
  v110 = v102[15];
  v101[14] = v102[14];
  v101[15] = v110;
  swift_retain();
  swift_release();
  v111 = v102[17];
  v101[16] = v102[16];
  v101[17] = v111;
  swift_retain();
  swift_release();
  v112 = a3[7];
  v113 = (_QWORD *)(a1 + v112);
  v114 = (_QWORD *)(a2 + v112);
  v115 = v114[1];
  *v113 = *v114;
  v113[1] = v115;
  swift_retain();
  swift_release();
  v116 = a3[8];
  v117 = a1 + v116;
  v118 = a2 + v116;
  *(_BYTE *)v117 = *(_BYTE *)v118;
  *(_QWORD *)(v117 + 8) = *(_QWORD *)(v118 + 8);
  *(_QWORD *)(v117 + 16) = *(_QWORD *)(v118 + 16);
  *(_QWORD *)(v117 + 24) = *(_QWORD *)(v118 + 24);
  *(_QWORD *)(v117 + 32) = *(_QWORD *)(v118 + 32);
  *(_QWORD *)(v117 + 40) = *(_QWORD *)(v118 + 40);
  v119 = a3[9];
  v120 = a1 + v119;
  v121 = a2 + v119;
  *(_BYTE *)v120 = *(_BYTE *)v121;
  *(_QWORD *)(v120 + 8) = *(_QWORD *)(v121 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23B9AB788(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Action;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  __int128 v54;
  uint64_t v56;
  char *v57;
  _BYTE *v58;
  uint64_t v59;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[5];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 3, v10))
  {
    v12 = type metadata accessor for ShareReceivedMessageView.State(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v59 = v11;
    v13 = (int *)type metadata accessor for Annotation();
    v14 = *((_QWORD *)v13 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v14 + 48))(v9, 2, v13))
    {
      v15 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v56 = v14;
      v16 = v9[1];
      *v8 = *v9;
      v8[1] = v16;
      v8[2] = v9[2];
      v17 = v13[7];
      v57 = (char *)v8 + v17;
      v18 = (char *)v9 + v17;
      v19 = sub_23BB88984();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v57, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v57, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v57, 0, 1, v19);
      }
      *(_QWORD *)((char *)v8 + v13[8]) = *(_QWORD *)((char *)v9 + v13[8]);
      v22 = v13[9];
      v23 = (char *)v8 + v22;
      v24 = (char *)v9 + v22;
      v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      v23[32] = v24[32];
      v26 = v13[10];
      v27 = (char *)v8 + v26;
      v28 = (char *)v9 + v26;
      v29 = *((_OWORD *)v28 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v29;
      *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v56 + 56))(v8, 0, 2, v13);
    }
    v30 = *(int *)(v10 + 20);
    v31 = (char *)v8 + v30;
    v32 = (char *)v9 + v30;
    v33 = type metadata accessor for DirectionsState();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v32, 2, v33))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v31 = *v32;
      *(_OWORD *)(v31 + 8) = *(_OWORD *)(v32 + 8);
      v31[24] = v32[24];
      v36 = *(int *)(v33 + 24);
      v58 = &v31[v36];
      v37 = &v32[v36];
      v38 = sub_23BB88984();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v58, v37, v38);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 2, v33);
    }
    *((_BYTE *)v8 + *(int *)(v10 + 24)) = *((_BYTE *)v9 + *(int *)(v10 + 24));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v8, 0, 3, v10);
  }
  v39 = a3[6];
  v40 = a3[7];
  v41 = (_OWORD *)(a1 + v39);
  v42 = (__int128 *)(a2 + v39);
  v43 = v42[3];
  v41[2] = v42[2];
  v41[3] = v43;
  v44 = v42[8];
  v45 = v42[6];
  v41[7] = v42[7];
  v41[8] = v44;
  v46 = v42[5];
  v48 = *v42;
  v47 = v42[1];
  v41[4] = v42[4];
  v41[5] = v46;
  v41[6] = v45;
  v49 = *(_OWORD *)(a2 + v40);
  *v41 = v48;
  v41[1] = v47;
  *(_OWORD *)(a1 + v40) = v49;
  v50 = a3[8];
  v51 = a3[9];
  v52 = (_OWORD *)(a1 + v50);
  v53 = (_OWORD *)(a2 + v50);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v52[2] = v53[2];
  *(_OWORD *)(a1 + v51) = *(_OWORD *)(a2 + v51);
  return a1;
}

uint64_t sub_23B9ABAC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_OWORD *, uint64_t, uint64_t);
  int v15;
  int v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(_OWORD *, uint64_t, int *);
  int v24;
  _OWORD *v25;
  int v26;
  int v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  size_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  char *v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  unsigned __int8 v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t (*v97)(char *, uint64_t, uint64_t);
  int v98;
  int v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t Action;
  uint64_t v105;
  _OWORD *v106;
  _OWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *__dst;
  char *__dsta;
  _BYTE *__dstd;
  void *__dstb;
  _QWORD *__dstc;
  _OWORD *__src;
  _OWORD *__srca;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v9 = a3[5];
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 3, v12);
  v16 = v14(v11, 3, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_23B989D9C((uint64_t)v10, type metadata accessor for ShareReceivedMessageView.State.Active);
      goto LABEL_7;
    }
    v21 = (int *)type metadata accessor for Annotation();
    v22 = *((_QWORD *)v21 - 1);
    v23 = *(uint64_t (**)(_OWORD *, uint64_t, int *))(v22 + 48);
    v24 = v23(v10, 2, v21);
    v25 = v11;
    v26 = v24;
    __srca = v25;
    v27 = v23(v25, 2, v21);
    if (v26)
    {
      if (!v27)
      {
        v28 = __srca[1];
        *v10 = *__srca;
        v10[1] = v28;
        v10[2] = __srca[2];
        v29 = v21[7];
        __dst = (char *)v10 + v29;
        v30 = (char *)__srca + v29;
        v31 = sub_23BB88984();
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 32))(__dst, v30, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
        }
        v41 = __srca;
        *(_QWORD *)((char *)v10 + v21[8]) = *(_QWORD *)((char *)__srca + v21[8]);
        v69 = v21[9];
        v70 = (char *)v10 + v69;
        v71 = (char *)__srca + v69;
        v72 = *((_OWORD *)v71 + 1);
        *(_OWORD *)v70 = *(_OWORD *)v71;
        *((_OWORD *)v70 + 1) = v72;
        v70[32] = v71[32];
        v73 = v21[10];
        v74 = (char *)v10 + v73;
        v75 = (char *)__srca + v73;
        v76 = *((_OWORD *)v75 + 1);
        *(_OWORD *)v74 = *(_OWORD *)v75;
        *((_OWORD *)v74 + 1) = v76;
        *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v22 + 56))(v10, 0, 2, v21);
LABEL_39:
        v93 = *(int *)(v12 + 20);
        v94 = (char *)v10 + v93;
        v95 = (char *)v41 + v93;
        v96 = type metadata accessor for DirectionsState();
        __dstc = *(_QWORD **)(v96 - 8);
        v97 = (uint64_t (*)(char *, uint64_t, uint64_t))__dstc[6];
        v98 = v97(v94, 2, v96);
        v99 = v97(v95, 2, v96);
        if (v98)
        {
          if (!v99)
          {
            *v94 = *v95;
            *(_OWORD *)(v94 + 8) = *(_OWORD *)(v95 + 8);
            v94[24] = v95[24];
            v100 = *(int *)(v96 + 24);
            v101 = &v94[v100];
            v102 = &v95[v100];
            v103 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v94, 0, 2, v96);
LABEL_45:
            *((_BYTE *)v10 + *(int *)(v12 + 24)) = *((_BYTE *)__srca + *(int *)(v12 + 24));
            goto LABEL_46;
          }
        }
        else
        {
          if (!v99)
          {
            *v94 = *v95;
            *(_OWORD *)(v94 + 8) = *(_OWORD *)(v95 + 8);
            v94[24] = v95[24];
            v115 = *(int *)(v96 + 24);
            v116 = &v94[v115];
            v117 = &v95[v115];
            v118 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 40))(v116, v117, v118);
            goto LABEL_45;
          }
          sub_23B989D9C((uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        }
        Action = type metadata accessor for LocateAction();
        memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
        goto LABEL_45;
      }
LABEL_16:
      v40 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
      v41 = __srca;
      memcpy(v10, __srca, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      goto LABEL_39;
    }
    if (v27)
    {
      sub_23B989D9C((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
      goto LABEL_16;
    }
    v59 = *((_QWORD *)__srca + 1);
    *(_QWORD *)v10 = *(_QWORD *)__srca;
    *((_QWORD *)v10 + 1) = v59;
    swift_bridgeObjectRelease();
    v60 = *((_QWORD *)__srca + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)__srca + 2);
    *((_QWORD *)v10 + 3) = v60;
    swift_bridgeObjectRelease();
    v10[2] = __srca[2];
    v61 = v21[7];
    v62 = (char *)v10 + v61;
    v63 = (char *)__srca + v61;
    v64 = sub_23BB88984();
    v120 = *(_QWORD *)(v64 - 8);
    v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
    __dstb = v62;
    LODWORD(v62) = v65(v62, 1, v64);
    v66 = v65(v63, 1, v64);
    if ((_DWORD)v62)
    {
      if (v66)
      {
        v67 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0) - 8)
                        + 64);
        v68 = __dstb;
LABEL_30:
        memcpy(v68, v63, v67);
        goto LABEL_33;
      }
      (*(void (**)(void *, char *, uint64_t))(v120 + 32))(__dstb, v63, v64);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v120 + 56))(__dstb, 0, 1, v64);
    }
    else
    {
      if (v66)
      {
        (*(void (**)(void *, uint64_t))(v120 + 8))(__dstb, v64);
        v67 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0) - 8)
                        + 64);
        v68 = __dstb;
        goto LABEL_30;
      }
      (*(void (**)(void *, char *, uint64_t))(v120 + 40))(__dstb, v63, v64);
    }
LABEL_33:
    *(_QWORD *)((char *)v10 + v21[8]) = *(_QWORD *)((char *)__srca + v21[8]);
    v77 = v21[9];
    v78 = (char *)v10 + v77;
    v79 = (char *)__srca + v77;
    v80 = v79[32];
    v81 = *(void **)v78;
    v82 = *((_QWORD *)v78 + 1);
    v83 = *((_QWORD *)v78 + 2);
    v84 = *((_QWORD *)v78 + 3);
    v85 = *((_OWORD *)v79 + 1);
    *(_OWORD *)v78 = *(_OWORD *)v79;
    *((_OWORD *)v78 + 1) = v85;
    v86 = v78[32];
    v78[32] = v80;
    sub_23B9A6310(v81, v82, v83, v84, v86);
    v87 = v21[10];
    v88 = (_QWORD *)((char *)v10 + v87);
    v89 = (_QWORD *)((char *)__srca + v87);
    if (*(_QWORD *)((char *)v10 + v87 + 8))
    {
      v90 = v89[1];
      if (v90)
      {
        *v88 = *v89;
        v88[1] = v90;
        swift_bridgeObjectRelease();
        v91 = v89[3];
        v88[2] = v89[2];
        v88[3] = v91;
        swift_bridgeObjectRelease();
        v88[4] = v89[4];
        swift_release();
LABEL_38:
        v41 = __srca;
        goto LABEL_39;
      }
      sub_23B9A6BDC((uint64_t)v88);
    }
    v92 = *((_OWORD *)v89 + 1);
    *(_OWORD *)v88 = *(_OWORD *)v89;
    *((_OWORD *)v88 + 1) = v92;
    v88[4] = v89[4];
    goto LABEL_38;
  }
  if (v16)
  {
LABEL_7:
    v20 = type metadata accessor for ShareReceivedMessageView.State(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_46;
  }
  v17 = (int *)type metadata accessor for Annotation();
  v18 = *((_QWORD *)v17 - 1);
  __src = v11;
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v11, 2, v17))
  {
    v19 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v119 = v18;
    v34 = v11[1];
    *v10 = *v11;
    v10[1] = v34;
    v10[2] = v11[2];
    v35 = v17[7];
    __dsta = (char *)v10 + v35;
    v36 = (char *)v11 + v35;
    v37 = sub_23BB88984();
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dsta, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(__dsta, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(__dsta, 0, 1, v37);
    }
    v11 = __src;
    *(_QWORD *)((char *)v10 + v17[8]) = *(_QWORD *)((char *)__src + v17[8]);
    v42 = v17[9];
    v43 = (char *)v10 + v42;
    v44 = (char *)__src + v42;
    v45 = *((_OWORD *)v44 + 1);
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_OWORD *)v43 + 1) = v45;
    v43[32] = v44[32];
    v46 = v17[10];
    v47 = (char *)v10 + v46;
    v48 = (char *)__src + v46;
    v49 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v49;
    *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v119 + 56))(v10, 0, 2, v17);
  }
  v50 = *(int *)(v12 + 20);
  v51 = (char *)v10 + v50;
  v52 = (char *)v11 + v50;
  v53 = type metadata accessor for DirectionsState();
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v54 + 48))(v52, 2, v53))
  {
    v55 = type metadata accessor for LocateAction();
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    *v51 = *v52;
    *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
    v51[24] = v52[24];
    v56 = *(int *)(v53 + 24);
    __dstd = &v51[v56];
    v57 = &v52[v56];
    v58 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(__dstd, v57, v58);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 2, v53);
  }
  *((_BYTE *)v10 + *(int *)(v12 + 24)) = *((_BYTE *)__src + *(int *)(v12 + 24));
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 3, v12);
LABEL_46:
  v105 = a3[6];
  v106 = (_OWORD *)(a1 + v105);
  v107 = (_OWORD *)(a2 + v105);
  *(_OWORD *)(a1 + v105) = *(_OWORD *)(a2 + v105);
  swift_release();
  v106[1] = v107[1];
  swift_release();
  v106[2] = v107[2];
  swift_release();
  v106[3] = v107[3];
  swift_release();
  v106[4] = v107[4];
  swift_release();
  v106[5] = v107[5];
  swift_release();
  v106[6] = v107[6];
  swift_release();
  v106[7] = v107[7];
  swift_release();
  v106[8] = v107[8];
  swift_release();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_release();
  v108 = a3[8];
  v109 = a3[9];
  v110 = a1 + v108;
  v111 = a2 + v108;
  *(_BYTE *)v110 = *(_BYTE *)v111;
  *(_OWORD *)(v110 + 8) = *(_OWORD *)(v111 + 8);
  *(_OWORD *)(v110 + 24) = *(_OWORD *)(v111 + 24);
  *(_QWORD *)(v110 + 40) = *(_QWORD *)(v111 + 40);
  v112 = a1 + v109;
  v113 = a2 + v109;
  *(_BYTE *)v112 = *(_BYTE *)v113;
  *(_QWORD *)(v112 + 8) = *(_QWORD *)(v113 + 8);
  swift_release();
  return a1;
}

uint64_t sub_23B9AC394()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9AC3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ShareReceivedMessageView.State(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_23B9AC41C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9AC428(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ShareReceivedMessageView.State(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ShareReceivedMessageView(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5A0A0);
}

uint64_t sub_23B9AC4B0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ShareReceivedMessageView.State(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23B9AC550()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_23B9AC560(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t (*v51)(_QWORD);
  char *v52;
  _QWORD v53[6];
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v81 = a1;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A108);
  MEMORY[0x24BDAC7A8](v67, v2);
  v66 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A110);
  MEMORY[0x24BDAC7A8](v80, v4);
  v68 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A118);
  v7 = MEMORY[0x24BDAC7A8](v64, v6);
  v53[4] = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v53[5] = (char *)v53 - v10;
  v59 = type metadata accessor for Annotation();
  v65 = *(_QWORD *)(v59 - 8);
  v12 = MEMORY[0x24BDAC7A8](v59, v11);
  v53[3] = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53[2] = v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v56 = (char *)v53 - v15;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A120);
  MEMORY[0x24BDAC7A8](v60, v16);
  v62 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A128);
  MEMORY[0x24BDAC7A8](v54, v18);
  v55 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A130);
  MEMORY[0x24BDAC7A8](v61, v20);
  v57 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ShareReceivedMessageView.State.Active.Location(0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v58 = (char *)v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A138);
  MEMORY[0x24BDAC7A8](v73, v25);
  v63 = (char *)v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  v31 = MEMORY[0x24BDAC7A8](v27, v30);
  v53[1] = (char *)v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v70 = (char *)v53 - v33;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A140);
  MEMORY[0x24BDAC7A8](v77, v34);
  v79 = (char *)v53 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A148);
  MEMORY[0x24BDAC7A8](v69, v36);
  v71 = (char *)v53 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A150);
  MEMORY[0x24BDAC7A8](v78, v38);
  v72 = (char *)v53 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for ShareReceivedMessageView(0);
  v41 = *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64);
  MEMORY[0x24BDAC7A8](v40, v42);
  v75 = (char *)v53 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A158);
  v44 = MEMORY[0x24BDAC7A8](v76, v43);
  MEMORY[0x24BDAC7A8](v44, v45);
  v74 = (char *)v53 - v46;
  v47 = type metadata accessor for ShareReceivedMessageView.State(0);
  MEMORY[0x24BDAC7A8](v47, v48);
  v50 = (char *)v53 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v1 + *(int *)(v40 + 20), (uint64_t)v50, v51);
  v52 = (char *)sub_23B9ACA70
      + 4 * word_23BB8D2F0[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v50, 3, v27)];
  __asm { BR              X10 }
}

uint64_t sub_23B9ACA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v7 = v5;
  v8 = *(_QWORD *)(v6 - 208);
  sub_23B989CA4(v7, v8, type metadata accessor for ShareReceivedMessageView.State.Active);
  v9 = *(_QWORD *)(v6 - 304);
  sub_23B989CE8(v8, v9, type metadata accessor for ShareReceivedMessageView.State.Active.Location);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 248) + 48))(v9, 2, *(_QWORD *)(v6 - 296));
  if (v10)
  {
    v11 = *(_QWORD *)(v6 - 168);
    if (v10 == 1)
    {
      sub_23B989CE8(v2, *(_QWORD *)(v6 - 168), type metadata accessor for ShareReceivedMessageView);
      v12 = (*(unsigned __int8 *)(v0 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
      v13 = swift_allocObject();
      sub_23B989CA4(v11, v13 + v12, type metadata accessor for ShareReceivedMessageView);
      KeyPath = swift_getKeyPath();
      *(_QWORD *)v3 = sub_23B9AF188;
    }
    else
    {
      sub_23B989CE8(v2, *(_QWORD *)(v6 - 168), type metadata accessor for ShareReceivedMessageView);
      v40 = (*(unsigned __int8 *)(v0 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
      v13 = swift_allocObject();
      sub_23B989CA4(v11, v13 + v40, type metadata accessor for ShareReceivedMessageView);
      KeyPath = swift_getKeyPath();
      *(_QWORD *)v3 = sub_23B9AF5E4;
    }
    *(_QWORD *)(v3 + 8) = v13;
    *(_QWORD *)(v3 + 16) = nullsub_1;
    *(_QWORD *)(v3 + 24) = 0;
    *(_BYTE *)(v3 + 32) = 0;
    v15 = *(_QWORD *)(v6 - 160);
    v16 = (uint64_t *)(v3 + *(int *)(v15 + 60));
    *v16 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    swift_storeEnumTagMultiPayload();
    v17 = v3 + *(int *)(v15 + 64);
    *(_QWORD *)v17 = KeyPath;
    *(_BYTE *)(v17 + 8) = 0;
    v18 = v3;
    v19 = *(_QWORD *)(v6 - 176);
    sub_23B990D24(v18, v19, &qword_256A5A158);
    sub_23B989EFC(v19, *(_QWORD *)(v6 - 328), &qword_256A5A158);
    swift_storeEnumTagMultiPayload();
    sub_23B996E1C(&qword_256A5A168, &qword_256A5A158, (uint64_t)&unk_23BB93810);
    v41 = *(_QWORD *)(v6 - 312);
    sub_23BB89944();
    sub_23B989EFC(v41, *(_QWORD *)(v6 - 272), &qword_256A5A130);
    swift_storeEnumTagMultiPayload();
    sub_23B9AEE20();
    sub_23B996E1C(&qword_256A5A190, &qword_256A5A118, (uint64_t)&unk_23BB93810);
    v39 = *(_QWORD *)(v6 - 264);
    sub_23BB89944();
    sub_23B989D60(v41, &qword_256A5A130);
    sub_23B989D60(v19, &qword_256A5A158);
  }
  else
  {
    sub_23B989CA4(v9, *(_QWORD *)(v6 - 320), (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
    v20 = *(_QWORD *)(v6 - 168);
    sub_23B989CE8(v2, v20, type metadata accessor for ShareReceivedMessageView);
    v21 = *(_QWORD *)(v6 - 376);
    sub_23B989CE8(v8, v21, type metadata accessor for ShareReceivedMessageView.State.Active);
    v22 = *(unsigned __int8 *)(v0 + 80);
    v23 = v2;
    v24 = (v22 + 16) & ~v22;
    v25 = (v1 + *(unsigned __int8 *)(v4 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v26 = swift_allocObject();
    sub_23B989CA4(v20, v26 + v24, type metadata accessor for ShareReceivedMessageView);
    sub_23B989CA4(v21, v26 + v25, type metadata accessor for ShareReceivedMessageView.State.Active);
    v27 = *(_QWORD *)(v6 - 320);
    v28 = *(_QWORD *)(v6 - 360);
    sub_23B989CE8(v27, v28, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
    sub_23B989CE8(v23, v20, type metadata accessor for ShareReceivedMessageView);
    v29 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 248) + 80);
    v30 = (v29 + 16) & ~v29;
    v31 = (*(_QWORD *)(v6 - 368) + v22 + v30) & ~v22;
    v32 = swift_allocObject();
    sub_23B989CA4(v28, v32 + v30, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
    sub_23B989CA4(v20, v32 + v31, type metadata accessor for ShareReceivedMessageView);
    v33 = swift_getKeyPath();
    v34 = *(_QWORD *)(v6 - 352);
    *(_QWORD *)v34 = sub_23B9AF50C;
    *(_QWORD *)(v34 + 8) = v26;
    *(_QWORD *)(v34 + 16) = sub_23B9AF578;
    *(_QWORD *)(v34 + 24) = v32;
    *(_BYTE *)(v34 + 32) = 0;
    v35 = *(_QWORD *)(v6 - 256);
    v36 = (uint64_t *)(v34 + *(int *)(v35 + 60));
    *v36 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
    swift_storeEnumTagMultiPayload();
    v37 = v34 + *(int *)(v35 + 64);
    *(_QWORD *)v37 = v33;
    *(_BYTE *)(v37 + 8) = 0;
    v38 = *(_QWORD *)(v6 - 344);
    sub_23B990D24(v34, v38, &qword_256A5A118);
    sub_23B989EFC(v38, *(_QWORD *)(v6 - 272), &qword_256A5A118);
    swift_storeEnumTagMultiPayload();
    sub_23B9AEE20();
    sub_23B996E1C(&qword_256A5A190, &qword_256A5A118, (uint64_t)&unk_23BB93810);
    v39 = *(_QWORD *)(v6 - 264);
    sub_23BB89944();
    sub_23B989D60(v38, &qword_256A5A118);
    sub_23B989D9C(v27, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
  }
  sub_23B989EFC(v39, *(_QWORD *)(v6 - 200), &qword_256A5A138);
  swift_storeEnumTagMultiPayload();
  sub_23B996E1C(&qword_256A5A168, &qword_256A5A158, (uint64_t)&unk_23BB93810);
  sub_23B9AED9C();
  v42 = *(_QWORD *)(v6 - 192);
  sub_23BB89944();
  sub_23B989EFC(v42, *(_QWORD *)(v6 - 136), &qword_256A5A150);
  swift_storeEnumTagMultiPayload();
  sub_23B9AED18();
  sub_23B9AEE9C();
  sub_23BB89944();
  sub_23B989D60(v42, &qword_256A5A150);
  sub_23B989D60(v39, &qword_256A5A138);
  return sub_23B989D9C(*(_QWORD *)(v6 - 208), type metadata accessor for ShareReceivedMessageView.State.Active);
}

uint64_t sub_23B9AD604(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[4] = a1;
  v2 = sub_23BB8AF1C();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[8] = sub_23BB8A9E8();
  v1[9] = sub_23BB8A988();
  v1[10] = v3;
  return swift_task_switch();
}

uint64_t sub_23B9AD698()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_23B9AD718;
  return v3(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23B9AD718()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[6];
  v3 = v2[7];
  v5 = v2[5];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[7], v2[5]);
  }
  return swift_task_switch();
}

uint64_t sub_23B9AD7B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  v2 = (char *)(v1 + *(int *)(type metadata accessor for ShareReceivedMessageView(0) + 36));
  v3 = *v2;
  v4 = *((_QWORD *)v2 + 1);
  *(_BYTE *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v4;
  *(_BYTE *)(v0 + 96) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0DC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23B9AD840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v16;

  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, 0);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23BB8C510;
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v16 = *(id *)(a1 + 48);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)a1;
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v11 + 56) = v12;
  *(_BYTE *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 80) = v16;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 40) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v16;
}

uint64_t sub_23B9AD994@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_23BB8983C();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1D0);
  return sub_23B9AD9EC(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_23B9AD9EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1D8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v21 - v10;
  type metadata accessor for ShareReceivedMessageView(0);
  sub_23BB8A2F8();
  sub_23BB8953C();
  v28 = v36;
  v27 = v38;
  v26 = v40;
  v25 = v42;
  v24 = v44;
  v23 = v46;
  v22 = v48;
  v21 = v49;
  v35 = 1;
  v34 = v37;
  v33 = v39;
  v32 = v41;
  v31 = v43;
  v30 = v45;
  v29 = v47;
  sub_23B9ADC84(a1, (uint64_t)v11);
  v12 = v35;
  v13 = v34;
  LOBYTE(a1) = v33;
  v14 = v32;
  v15 = v31;
  v16 = v30;
  v17 = v29;
  sub_23B989EFC((uint64_t)v11, (uint64_t)v8, &qword_256A5A1D8);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v28;
  *(_BYTE *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v27;
  *(_BYTE *)(a2 + 40) = a1;
  *(_QWORD *)(a2 + 48) = v26;
  *(_BYTE *)(a2 + 56) = v14;
  *(_QWORD *)(a2 + 64) = v25;
  *(_BYTE *)(a2 + 72) = v15;
  *(_QWORD *)(a2 + 80) = v24;
  *(_BYTE *)(a2 + 88) = v16;
  *(_QWORD *)(a2 + 96) = v23;
  *(_BYTE *)(a2 + 104) = v17;
  v18 = v21;
  *(_QWORD *)(a2 + 112) = v22;
  *(_QWORD *)(a2 + 120) = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1E0);
  sub_23B989EFC((uint64_t)v8, a2 + *(int *)(v19 + 48), &qword_256A5A1D8);
  sub_23B989D60((uint64_t)v11, &qword_256A5A1D8);
  return sub_23B989D60((uint64_t)v8, &qword_256A5A1D8);
}

uint64_t sub_23B9ADC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Action;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char *v43;
  uint64_t (**v44)();
  uint64_t v45;
  uint64_t (**v46)();
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;

  v83 = (char *)a1;
  v4 = type metadata accessor for ShareReceivedMessageView(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v74 - v11;
  Action = type metadata accessor for LocateAction();
  MEMORY[0x24BDAC7A8](Action, v14);
  v85 = (uint64_t)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for ShareReceivedMessageViewActionsModule(0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1E8);
  MEMORY[0x24BDAC7A8](v84, v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1F0);
  MEMORY[0x24BDAC7A8](v23, v24);
  v28 = (_BYTE *)(v2 + *(int *)(v4 + 32));
  if ((*v28 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 56))(a2, 1, 1);
  v79 = (uint64_t)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v25;
  v82 = v27;
  v78 = v28;
  v30 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v81 = a2;
  v31 = v30;
  v32 = *(int *)(v30 + 20);
  v75 = v4;
  v33 = v5;
  v34 = (uint64_t)v83;
  sub_23B989CE8((uint64_t)&v83[v32], v85, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  v77 = *(unsigned __int8 *)(v34 + *(int *)(v31 + 24));
  sub_23B989CE8(v2, (uint64_t)v12, type metadata accessor for ShareReceivedMessageView);
  v35 = *(unsigned __int8 *)(v33 + 80);
  v83 = v22;
  v36 = (v35 + 16) & ~v35;
  v76 = swift_allocObject();
  sub_23B989CA4((uint64_t)v12, v76 + v36, type metadata accessor for ShareReceivedMessageView);
  sub_23B989CE8(v2, (uint64_t)v9, type metadata accessor for ShareReceivedMessageView);
  v37 = swift_allocObject();
  sub_23B989CA4((uint64_t)v9, v37 + v36, type metadata accessor for ShareReceivedMessageView);
  v38 = (__int128 *)(v2 + *(int *)(v75 + 24));
  v39 = v38[7];
  v92 = v38[6];
  v93 = v39;
  v94 = v38[8];
  v40 = v38[3];
  v88 = v38[2];
  v89 = v40;
  v41 = v38[5];
  v90 = v38[4];
  v91 = v41;
  v42 = *v38;
  v87 = v38[1];
  v86 = v42;
  sub_23B989CA4(v85, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  v19[v16[5]] = v77;
  v43 = &v19[v16[6]];
  sub_23B9AFAB8((uint64_t)&v86);
  sub_23BB0CA90(v43);
  v44 = (uint64_t (**)())&v19[v16[7]];
  v45 = v76;
  *v44 = sub_23B9AFA60;
  v44[1] = (uint64_t (*)())v45;
  v46 = (uint64_t (**)())&v19[v16[8]];
  *v46 = sub_23B9AFA70;
  v46[1] = (uint64_t (*)())v37;
  v47 = &v19[v16[9]];
  v48 = v93;
  *((_OWORD *)v47 + 6) = v92;
  *((_OWORD *)v47 + 7) = v48;
  *((_OWORD *)v47 + 8) = v94;
  v49 = v89;
  *((_OWORD *)v47 + 2) = v88;
  *((_OWORD *)v47 + 3) = v49;
  v50 = v91;
  *((_OWORD *)v47 + 4) = v90;
  *((_OWORD *)v47 + 5) = v50;
  v51 = v87;
  *(_OWORD *)v47 = v86;
  *((_OWORD *)v47 + 1) = v51;
  LOBYTE(v43) = sub_23BB89B9C();
  sub_23BB892A8();
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v59 = v58;
  v60 = (uint64_t)v83;
  sub_23B989CE8((uint64_t)v19, (uint64_t)v83, type metadata accessor for ShareReceivedMessageViewActionsModule);
  v61 = v60 + *(int *)(v84 + 36);
  *(_BYTE *)v61 = (_BYTE)v43;
  *(_QWORD *)(v61 + 8) = v53;
  *(_QWORD *)(v61 + 16) = v55;
  *(_QWORD *)(v61 + 24) = v57;
  *(_QWORD *)(v61 + 32) = v59;
  *(_BYTE *)(v61 + 40) = 0;
  sub_23B989D9C((uint64_t)v19, type metadata accessor for ShareReceivedMessageViewActionsModule);
  LOBYTE(v43) = sub_23BB89BC0();
  sub_23BB892A8();
  v63 = v62;
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v70 = v79;
  sub_23B989EFC(v60, v79, &qword_256A5A1E8);
  v71 = v80;
  v72 = v70 + *(int *)(v80 + 36);
  *(_BYTE *)v72 = (_BYTE)v43;
  *(_QWORD *)(v72 + 8) = v63;
  *(_QWORD *)(v72 + 16) = v65;
  *(_QWORD *)(v72 + 24) = v67;
  *(_QWORD *)(v72 + 32) = v69;
  *(_BYTE *)(v72 + 40) = 0;
  sub_23B989D60(v60, &qword_256A5A1E8);
  v73 = v81;
  sub_23B990D24(v70, v81, &qword_256A5A1F0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v73, 0, 1, v71);
}

uint64_t sub_23B9AE17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v6 = type metadata accessor for ShareReceivedMessageView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6, v9);
  v10 = type metadata accessor for Annotation();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10, v13);
  sub_23B989CE8(a1, (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  sub_23B989CE8(a2, (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareReceivedMessageView);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (v12 + *(unsigned __int8 *)(v7 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = swift_allocObject();
  sub_23B989CA4((uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v15, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
  result = sub_23B989CA4((uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for ShareReceivedMessageView);
  *a3 = sub_23B9AF958;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v17;
  return result;
}

uint64_t sub_23B9AE2C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a3;
  v25 = type metadata accessor for ShareReceivedMessageView(0);
  v5 = *(_QWORD *)(v25 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v25, v7);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B0);
  MEMORY[0x24BDAC7A8](v26, v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CA0);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Annotation() - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23BB8C510;
  sub_23B989CE8(a1, v13 + v12, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
  v30 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  sub_23BB8A0C4();
  v14 = *(_OWORD *)v28;
  *(_QWORD *)v28 = v13;
  *(_OWORD *)&v28[8] = v14;
  sub_23B989CE8(a2, (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareReceivedMessageView);
  v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = swift_allocObject();
  sub_23B989CA4((uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for ShareReceivedMessageView);
  sub_23B9AFA18();
  sub_23BB89DAC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23BB89BC0();
  sub_23BB893C8();
  sub_23BB892A8();
  v30 = v17;
  v31 = v18;
  v32 = v19;
  v33 = v20;
  v34 = 0;
  sub_23BB89A4C();
  sub_23BB893C8();
  sub_23BB893C8();
  sub_23BB8A2F8();
  sub_23BB8938C();
  v21 = v27;
  sub_23B989EFC((uint64_t)v10, v27, &qword_256A5A1B0);
  v22 = (_OWORD *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1C8) + 36));
  v23 = *(_OWORD *)&v28[16];
  *v22 = *(_OWORD *)v28;
  v22[1] = v23;
  v22[2] = v29;
  return sub_23B989D60((uint64_t)v10, &qword_256A5A1B0);
}

id sub_23B9AE590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v16;

  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v5, sel_localizedStringForKey_value_table_, v6, 0, 0);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23BB8C510;
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v16 = *(id *)(a1 + 48);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)a1;
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v11 + 56) = v12;
  *(_BYTE *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 80) = v16;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 16) = xmmword_23BB8D460;
  *(_QWORD *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 40) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v16;
}

uint64_t sub_23B9AE6EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;

  if (*((_BYTE *)v0 + *(int *)(type metadata accessor for ShareReceivedMessageView(0) + 32)) == 1
    || (v1 = v0[1]) == 0)
  {
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v13 = (void *)sub_23BB8A784();
    v14 = objc_msgSend(v12, sel_localizedStringForKey_value_table_, v13, 0, 0);

    v15 = sub_23BB8A7B4();
    return v15;
  }
  else
  {
    v2 = *v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_23BB8C510;
    *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v3 + 64) = sub_23B9A5C8C();
    *(_QWORD *)(v3 + 32) = v2;
    *(_QWORD *)(v3 + 40) = v1;
    type metadata accessor for FindMyUICore();
    v4 = swift_getObjCClassFromMetadata();
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v6 = objc_msgSend(v5, sel_bundleForClass_, v4);
    v7 = (void *)sub_23BB8A784();
    v8 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, 0);

    sub_23BB8A7B4();
    swift_bridgeObjectRetain();
    v9 = sub_23BB8A7CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
}

uint64_t sub_23B9AE984(uint64_t *a1)
{
  void (*v2)(uint64_t *);
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;

  v2 = *(void (**)(uint64_t *))((char *)a1
                                        + *(int *)(type metadata accessor for ShareReceivedMessageView(0) + 24)
                                        + 16);
  v3 = a1[3];
  v4 = *((_BYTE *)a1 + 32);
  v5 = a1[5];
  v6 = (void *)a1[6];
  v9 = *a1;
  v10 = *(_OWORD *)(a1 + 1);
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  v2(&v9);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B9AEA38(uint64_t a1)
{
  void (*v2)(uint64_t, _QWORD, _QWORD);
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = *(void (**)(uint64_t, _QWORD, _QWORD))(a1
                                                      + *(int *)(type metadata accessor for ShareReceivedMessageView(0)
                                                               + 24)
                                                      + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23BB8C510;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)a1;
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v3 + 56) = v4;
  *(_BYTE *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 72) = v6;
  *(_QWORD *)(v3 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = v7;
  v2(v3, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B9AEB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v5 = sub_23BB8AA18();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v8, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A0E8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B9AC560((uint64_t)v17);
  sub_23B989CE8(v2, (uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ShareReceivedMessageView);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = swift_allocObject();
  sub_23B989CA4((uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for ShareReceivedMessageView);
  sub_23BB8AA00();
  v20 = (char *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A100) + 36));
  v21 = sub_23BB893E0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v20[*(int *)(v21 + 20)], v10, v5);
  *(_QWORD *)v20 = &unk_256A5A0F8;
  *((_QWORD *)v20 + 1) = v19;
  sub_23B989EFC((uint64_t)v17, a2, &qword_256A5A0E8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  return sub_23B989D60((uint64_t)v17, &qword_256A5A0E8);
}

uint64_t sub_23B9AECB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B97C964;
  return sub_23B9AD604(v3);
}

unint64_t sub_23B9AED18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A178;
  if (!qword_256A5A178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A150);
    v2[0] = sub_23B996E1C(&qword_256A5A168, &qword_256A5A158, (uint64_t)&unk_23BB93810);
    v2[1] = sub_23B9AED9C();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A178);
  }
  return result;
}

unint64_t sub_23B9AED9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A180;
  if (!qword_256A5A180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A138);
    v2[0] = sub_23B9AEE20();
    v2[1] = sub_23B996E1C(&qword_256A5A190, &qword_256A5A118, (uint64_t)&unk_23BB93810);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A180);
  }
  return result;
}

unint64_t sub_23B9AEE20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A188;
  if (!qword_256A5A188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A130);
    v2[0] = sub_23B996E1C(&qword_256A5A168, &qword_256A5A158, (uint64_t)&unk_23BB93810);
    v2[1] = v2[0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A188);
  }
  return result;
}

unint64_t sub_23B9AEE9C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A198;
  if (!qword_256A5A198)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A110);
    v2[0] = sub_23B996E1C(&qword_256A5A168, &qword_256A5A158, (uint64_t)&unk_23BB93810);
    v2[1] = sub_23B996E1C((unint64_t *)&qword_256A5A170, &qword_256A5A160, (uint64_t)&unk_23BB94DB8);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A198);
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for ShareReceivedMessageView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v3 = v2 + *(int *)(v1 + 20);
  v4 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 3, v4))
  {
    v5 = (int *)type metadata accessor for Annotation();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v3, 2, v5))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v3 + v5[7];
      v7 = sub_23BB88984();
      v14 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v6, v7);
      v8 = v3 + v5[9];
      sub_23B9A6310(*(void **)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
      if (*(_QWORD *)(v3 + v5[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v9 = v3 + *(int *)(v4 + 20);
    v10 = type metadata accessor for DirectionsState();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 2, v10))
    {
      v11 = v9 + *(int *)(v10 + 24);
      v12 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9AF19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;

  v1 = type metadata accessor for ShareReceivedMessageView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9 = v0 + v3 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8 + *(int *)(v1 + 20), 3, v5))
  {
    v10 = (int *)type metadata accessor for Annotation();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 2, v10))
    {
      v30 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v9 + v10[7];
      v12 = sub_23BB88984();
      v29 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v29 + 48))(v11, 1, v12))
        (*(void (**)(unint64_t, uint64_t))(v29 + 8))(v11, v12);
      v13 = v9 + v10[9];
      sub_23B9A6310(*(void **)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_BYTE *)(v13 + 32));
      v7 = v30;
      if (*(_QWORD *)(v9 + v10[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v14 = v9 + *(int *)(v5 + 20);
    v15 = type metadata accessor for DirectionsState();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 2, v15))
    {
      v16 = v14 + *(int *)(v15 + 24);
      v17 = sub_23BB88984();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v18 = v0 + v7;
  v19 = (int *)type metadata accessor for Annotation();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v19 - 1) + 48))(v0 + v7, 2, v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v18 + v19[7];
    v21 = sub_23BB88984();
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    v23 = v18 + v19[9];
    sub_23B9A6310(*(void **)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(_QWORD *)(v23 + 24), *(_BYTE *)(v23 + 32));
    if (*(_QWORD *)(v18 + v19[10] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  v24 = v18 + *(int *)(v5 + 20);
  v25 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 2, v25))
  {
    v26 = v24 + *(int *)(v25 + 24);
    v27 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  return swift_deallocObject();
}

uint64_t sub_23B9AF50C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ShareReceivedMessageView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageView.State.Active(0) - 8) + 80);
  return sub_23B9AD994(v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_23B9AF578@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Annotation() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageView(0) - 8) + 80);
  return sub_23B9AE17C(v1 + v4, v1 + ((v4 + v5 + v6) & ~v6), a1);
}

id sub_23B9AF5E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageView(0) - 8) + 80);
  return sub_23B9AD840(v1 + ((v3 + 16) & ~v3), a1);
}

id sub_23B9AF624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageView(0) - 8) + 80);
  return sub_23B9AE590(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t objectdestroy_20Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int (*v21)(unint64_t, uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for Annotation();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for ShareReceivedMessageView(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v3 + v4 + v6;
  v8 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v0 + v3 + v1[7];
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v21 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v21(v9, 1, v10))
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v7 & ~v6;
  v13 = v8 + v1[9];
  sub_23B9A6310(*(void **)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_BYTE *)(v13 + 32));
  if (*(_QWORD *)(v8 + v1[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v14 = v0 + v12 + *(int *)(v5 + 20);
  v15 = type metadata accessor for ShareReceivedMessageView.State.Active(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 3, v15))
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(v2 + 48))(v14, 2, v1))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v14 + v1[7];
      if (!v21(v16, 1, v10))
        (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v16, v10);
      v17 = v14 + v1[9];
      sub_23B9A6310(*(void **)v17, *(_QWORD *)(v17 + 8), *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), *(_BYTE *)(v17 + 32));
      if (*(_QWORD *)(v14 + v1[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    v18 = v14 + *(int *)(v15 + 20);
    v19 = type metadata accessor for DirectionsState();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 2, v19))(*(void (**)(unint64_t, uint64_t))(v11 + 8))(v18 + *(int *)(v19 + 24), v10);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9AF958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Annotation() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageView(0) - 8) + 80);
  return sub_23B9AE2C0(v1 + v4, v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_23B9AF9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ShareReceivedMessageView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + *(int *)(v1 + 28) + ((v2 + 16) & ~v2)))();
}

unint64_t sub_23B9AFA18()
{
  unint64_t result;

  result = qword_256A5A1C0;
  if (!qword_256A5A1C0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9537C, &type metadata for ShareReceivedMessageMapView);
    atomic_store(result, (unint64_t *)&qword_256A5A1C0);
  }
  return result;
}

uint64_t sub_23B9AFA60()
{
  return sub_23B9AFA7C((uint64_t (*)(uint64_t))sub_23B9AE984);
}

uint64_t sub_23B9AFA70()
{
  return sub_23B9AFA7C(sub_23B9AEA38);
}

uint64_t sub_23B9AFA7C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShareReceivedMessageView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_23B9AFAB8(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ShareReceivedMessageView.Style(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[48])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareReceivedMessageView.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareReceivedMessageView.Style()
{
  return &type metadata for ShareReceivedMessageView.Style;
}

unint64_t sub_23B9AFC2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A1F8;
  if (!qword_256A5A1F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A100);
    v2[0] = sub_23B9AFC98();
    v2[1] = sub_23B9AFD04();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A1F8);
  }
  return result;
}

unint64_t sub_23B9AFC98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A200;
  if (!qword_256A5A200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A0E8);
    v2[0] = sub_23B9AED18();
    v2[1] = sub_23B9AEE9C();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A200);
  }
  return result;
}

unint64_t sub_23B9AFD04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5A208;
  if (!qword_256A5A208)
  {
    v1 = sub_23BB893E0();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEC4C8], v1);
    atomic_store(result, (unint64_t *)&qword_256A5A208);
  }
  return result;
}

id sub_23B9AFD50(void *a1)
{
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.055, 0.149, 0.239, 1.0);
  else
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.925, 0.969, 0.996, 1.0);
}

void sub_23B9AFDD8()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;

  v0 = sub_23BB8A2B0();
  __swift_allocate_value_buffer(v0, qword_256A5A210);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A5A210);
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23BB8A280();

}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_23B9AFEB4()
{
  return 0xD000000000000019;
}

uint64_t *sub_23B9AFED0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(_BYTE *, uint64_t, uint64_t);
  uint64_t Action;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v61;
  int *v62;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = *a2;
    if ((unint64_t)*a2 >= 2)
      v6 = swift_bridgeObjectRetain();
    *a1 = v6;
    v7 = (int *)type metadata accessor for DetailsAppView.State(0);
    v8 = v7[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for SessionLocation.Description(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = *(int *)(v11 + 20);
      v17 = (_QWORD *)((char *)v9 + v16);
      v18 = (_QWORD *)((char *)v10 + v16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23BB88984();
        (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        v20 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v21 = (char *)v17 + v20;
        v22 = (char *)v18 + v20;
        *(_OWORD *)v21 = *(_OWORD *)v22;
        v23 = *((_QWORD *)v22 + 3);
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        *((_QWORD *)v21 + 3) = v23;
        v24 = *((_QWORD *)v22 + 5);
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
        *((_QWORD *)v21 + 5) = v24;
        v25 = *((_QWORD *)v22 + 7);
        *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
        *((_QWORD *)v21 + 7) = v25;
        v26 = *((_QWORD *)v22 + 9);
        *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
        *((_QWORD *)v21 + 9) = v26;
        v27 = *((_QWORD *)v22 + 11);
        *((_QWORD *)v21 + 10) = *((_QWORD *)v22 + 10);
        *((_QWORD *)v21 + 11) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v28 = *v18;
        v29 = v18[1];
        *v17 = v28;
        v17[1] = v29;
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      v30 = *(int *)(v11 + 24);
      v31 = (_QWORD *)((char *)v9 + v30);
      v32 = (_QWORD *)((char *)v10 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56);
      swift_bridgeObjectRetain();
      v34(v9, 0, 1, v11);
    }
    v35 = v7[6];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = sub_23BB88984();
    v39 = *(_QWORD *)(v38 - 8);
    v61 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
    v41 = v7[8];
    v42 = (uint64_t *)((char *)a1 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
    *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
    v62 = v7;
    v45 = v7[11];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = type metadata accessor for DirectionsState();
    v49 = *(_QWORD *)(v48 - 8);
    v50 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50(v47, 2, v48))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v46 = *v47;
      *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
      v46[24] = v47[24];
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v61 + 16))(&v46[*(int *)(v48 + 24)], &v47[*(int *)(v48 + 24)], v38);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 2, v48);
    }
    *((_BYTE *)a1 + v62[12]) = *((_BYTE *)a2 + v62[12]);
    v52 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *(_OWORD *)(v53 + 8) = *(_OWORD *)(v54 + 8);
    *(_OWORD *)(v53 + 24) = *(_OWORD *)(v54 + 24);
    *(_OWORD *)(v53 + 40) = *(_OWORD *)(v54 + 40);
    *(_OWORD *)(v53 + 56) = *(_OWORD *)(v54 + 56);
    *(_OWORD *)(v53 + 72) = *(_OWORD *)(v54 + 72);
    *(_OWORD *)(v53 + 88) = *(_OWORD *)(v54 + 88);
    *(_OWORD *)(v53 + 104) = *(_OWORD *)(v54 + 104);
    v55 = *((_QWORD *)v54 + 17);
    *(_OWORD *)(v53 + 120) = *(_OWORD *)(v54 + 120);
    v56 = a3[7];
    v57 = (uint64_t *)((char *)a1 + v56);
    v58 = (uint64_t *)((char *)a2 + v56);
    *((_QWORD *)v53 + 17) = v55;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v59 = sub_23BB893B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    }
    else
    {
      *v57 = *v58;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23B9B03D8(_QWORD *a1, uint64_t a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  if (*a1 >= 2uLL)
    swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for DetailsAppView.State(0);
  v5 = (char *)a1 + v4[5];
  v6 = type metadata accessor for SessionLocation.Description(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = &v5[*(int *)(v6 + 20)];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23BB88984();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      type metadata accessor for FindMyRelativeDate();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = (char *)a1 + v4[6];
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (char *)a1 + v4[11];
  v13 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 2, v13))
    (*(void (**)(char *, uint64_t))(v11 + 8))(&v12[*(int *)(v13 + 24)], v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v14 = (char *)a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v15 = sub_23BB893B0();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

uint64_t *sub_23B9B0648(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(_BYTE *, uint64_t, uint64_t);
  uint64_t Action;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  int *v59;

  v5 = *a2;
  if ((unint64_t)*a2 >= 2)
    v5 = swift_bridgeObjectRetain();
  *a1 = v5;
  v6 = (int *)type metadata accessor for DetailsAppView.State(0);
  v7 = v6[5];
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  v10 = type metadata accessor for SessionLocation.Description(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = *(int *)(v10 + 20);
    v15 = (_QWORD *)((char *)v8 + v14);
    v16 = (_QWORD *)((char *)v9 + v14);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23BB88984();
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v18 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v19 = (char *)v15 + v18;
      v20 = (char *)v16 + v18;
      *(_OWORD *)v19 = *(_OWORD *)v20;
      v21 = *((_QWORD *)v20 + 3);
      *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
      *((_QWORD *)v19 + 3) = v21;
      v22 = *((_QWORD *)v20 + 5);
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 5) = v22;
      v23 = *((_QWORD *)v20 + 7);
      *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
      *((_QWORD *)v19 + 7) = v23;
      v24 = *((_QWORD *)v20 + 9);
      *((_QWORD *)v19 + 8) = *((_QWORD *)v20 + 8);
      *((_QWORD *)v19 + 9) = v24;
      v25 = *((_QWORD *)v20 + 11);
      *((_QWORD *)v19 + 10) = *((_QWORD *)v20 + 10);
      *((_QWORD *)v19 + 11) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *v16;
      v27 = v16[1];
      *v15 = v26;
      v15[1] = v27;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v28 = *(int *)(v10 + 24);
    v29 = (_QWORD *)((char *)v8 + v28);
    v30 = (_QWORD *)((char *)v9 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56);
    swift_bridgeObjectRetain();
    v32(v8, 0, 1, v10);
  }
  v33 = v6[6];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_23BB88984();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  *(uint64_t *)((char *)a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
  v39 = v6[8];
  v40 = (uint64_t *)((char *)a1 + v39);
  v41 = (uint64_t *)((char *)a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v59 = v6;
  v43 = v6[11];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for DirectionsState();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48(v45, 2, v46))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v44 = *v45;
    *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
    v44[24] = v45[24];
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16))(&v44[*(int *)(v46 + 24)], &v45[*(int *)(v46 + 24)], v36);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 2, v46);
  }
  *((_BYTE *)a1 + v59[12]) = *((_BYTE *)a2 + v59[12]);
  v50 = a3[6];
  *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
  *(_OWORD *)(v51 + 24) = *(_OWORD *)(v52 + 24);
  *(_OWORD *)(v51 + 40) = *(_OWORD *)(v52 + 40);
  *(_OWORD *)(v51 + 56) = *(_OWORD *)(v52 + 56);
  *(_OWORD *)(v51 + 72) = *(_OWORD *)(v52 + 72);
  *(_OWORD *)(v51 + 88) = *(_OWORD *)(v52 + 88);
  *(_OWORD *)(v51 + 104) = *(_OWORD *)(v52 + 104);
  v53 = *((_QWORD *)v52 + 17);
  *(_OWORD *)(v51 + 120) = *(_OWORD *)(v52 + 120);
  v54 = a3[7];
  v55 = (uint64_t *)((char *)a1 + v54);
  v56 = (uint64_t *)((char *)a2 + v54);
  *((_QWORD *)v51 + 17) = v53;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v57 = sub_23BB893B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
  }
  else
  {
    *v55 = *v56;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unint64_t *sub_23B9B0B20(unint64_t *a1, unint64_t *a2, int *a3)
{
  unint64_t v5;
  unint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  void (*v34)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  int v57;
  __int128 v58;
  uint64_t Action;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  __int128 v77;
  int *v78;

  v5 = *a1;
  v6 = *a2;
  if (v5 >= 2)
  {
    if (v6 >= 2)
    {
      *a1 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B989D60((uint64_t)a1, &qword_256A5A1B8);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v6;
    if (v6 >= 2)
      swift_bridgeObjectRetain();
  }
  v7 = (int *)type metadata accessor for DetailsAppView.State(0);
  v8 = v7[5];
  v9 = (unint64_t *)((char *)a1 + v8);
  v10 = (unint64_t *)((char *)a2 + v8);
  v11 = type metadata accessor for SessionLocation.Description(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *v9 = *v10;
      v9[1] = v10[1];
      v16 = *(int *)(v11 + 20);
      v17 = (_QWORD *)((char *)v9 + v16);
      v18 = (_QWORD *)((char *)v10 + v16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23BB88984();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        v20 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v21 = (char *)v17 + v20;
        v22 = (char *)v18 + v20;
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
        *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
        *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
        *((_QWORD *)v21 + 7) = *((_QWORD *)v22 + 7);
        *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
        *((_QWORD *)v21 + 9) = *((_QWORD *)v22 + 9);
        *((_QWORD *)v21 + 10) = *((_QWORD *)v22 + 10);
        *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *v17 = *v18;
        v17[1] = v18[1];
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      v31 = *(int *)(v11 + 24);
      v32 = (_QWORD *)((char *)v9 + v31);
      v33 = (_QWORD *)((char *)v10 + v31);
      *v32 = *v33;
      v32[1] = v33[1];
      v34 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56);
      swift_bridgeObjectRetain();
      v34(v9, 0, 1, v11);
      goto LABEL_23;
    }
LABEL_14:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_23;
  }
  if (v15)
  {
    sub_23B989D9C((uint64_t)v9, type metadata accessor for SessionLocation.Description);
    goto LABEL_14;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v24 = *(int *)(v11 + 20);
    v25 = (_QWORD *)((char *)v9 + v24);
    v26 = (_QWORD *)((char *)v10 + v24);
    sub_23B989D60((uint64_t)v9 + v24, &qword_256A59C88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_23BB88984();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      v28 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v29 = (char *)v25 + v28;
      v30 = (char *)v26 + v28;
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
      *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
      *((_QWORD *)v29 + 7) = *((_QWORD *)v30 + 7);
      *((_QWORD *)v29 + 8) = *((_QWORD *)v30 + 8);
      *((_QWORD *)v29 + 9) = *((_QWORD *)v30 + 9);
      *((_QWORD *)v29 + 10) = *((_QWORD *)v30 + 10);
      *((_QWORD *)v29 + 11) = *((_QWORD *)v30 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *v25 = *v26;
      v25[1] = v26[1];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  v35 = *(int *)(v11 + 24);
  v36 = (_QWORD *)((char *)v9 + v35);
  v37 = (_QWORD *)((char *)v10 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_23:
  v38 = v7[6];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_23BB88984();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
LABEL_28:
    v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
LABEL_29:
  *(unint64_t *)((char *)a1 + v7[7]) = *(unint64_t *)((char *)a2 + v7[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = v7[8];
  v48 = (unint64_t *)((char *)a1 + v47);
  v49 = (unint64_t *)((char *)a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v78 = v7;
  v50 = v7[11];
  v51 = (uint64_t)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = type metadata accessor for DirectionsState();
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 2, v53);
  v57 = v55((uint64_t)v52, 2, v53);
  if (v56)
  {
    if (!v57)
    {
      *(_BYTE *)v51 = *v52;
      v58 = *(_OWORD *)(v52 + 8);
      *(_BYTE *)(v51 + 24) = v52[24];
      *(_OWORD *)(v51 + 8) = v58;
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v51 + *(int *)(v53 + 24), &v52[*(int *)(v53 + 24)], v41);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 2, v53);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v57)
  {
    sub_23B989D9C(v51, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_34:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v51, v52, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_35;
  }
  *(_BYTE *)v51 = *v52;
  v77 = *(_OWORD *)(v52 + 8);
  *(_BYTE *)(v51 + 24) = v52[24];
  *(_OWORD *)(v51 + 8) = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 24))(v51 + *(int *)(v53 + 24), &v52[*(int *)(v53 + 24)], v41);
LABEL_35:
  *((_BYTE *)a1 + v78[12]) = *((_BYTE *)a2 + v78[12]);
  *(unint64_t *)((char *)a1 + a3[5]) = *(unint64_t *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60 = a3[6];
  v61 = (unint64_t *)((char *)a1 + v60);
  v62 = (unint64_t *)((char *)a2 + v60);
  v63 = *(unint64_t *)((char *)a2 + v60 + 8);
  *v61 = *(unint64_t *)((char *)a2 + v60);
  v61[1] = v63;
  swift_retain();
  swift_release();
  v64 = v62[3];
  v61[2] = v62[2];
  v61[3] = v64;
  swift_retain();
  swift_release();
  v65 = v62[5];
  v61[4] = v62[4];
  v61[5] = v65;
  swift_retain();
  swift_release();
  v66 = v62[7];
  v61[6] = v62[6];
  v61[7] = v66;
  swift_retain();
  swift_release();
  v67 = v62[9];
  v61[8] = v62[8];
  v61[9] = v67;
  swift_retain();
  swift_release();
  v68 = v62[11];
  v61[10] = v62[10];
  v61[11] = v68;
  swift_retain();
  swift_release();
  v69 = v62[13];
  v61[12] = v62[12];
  v61[13] = v69;
  swift_retain();
  swift_release();
  v70 = v62[15];
  v61[14] = v62[14];
  v61[15] = v70;
  swift_retain();
  swift_release();
  v71 = v62[17];
  v61[16] = v62[16];
  v61[17] = v71;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v72 = a3[7];
    v73 = (unint64_t *)((char *)a1 + v72);
    v74 = (unint64_t *)((char *)a2 + v72);
    sub_23B989D60((uint64_t)a1 + v72, &qword_256A5A228);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v75 = sub_23BB893B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    }
    else
    {
      *v73 = *v74;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_23B9B1308(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t Action;
  uint64_t v36;
  _OWORD *v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int *v50;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for DetailsAppView.State(0);
  v7 = v6[5];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for SessionLocation.Description(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v50 = a3;
    *v8 = *v9;
    v13 = *(int *)(v10 + 20);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      v18 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v19 = &v14[v18];
      v20 = &v15[v18];
      v21 = *((_OWORD *)v20 + 3);
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
      *((_OWORD *)v19 + 3) = v21;
      v22 = *((_OWORD *)v20 + 5);
      *((_OWORD *)v19 + 4) = *((_OWORD *)v20 + 4);
      *((_OWORD *)v19 + 5) = v22;
      v23 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v23;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    *(_OWORD *)((char *)v8 + *(int *)(v10 + 24)) = *(_OWORD *)((char *)v9 + *(int *)(v10 + 24));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    a3 = v50;
  }
  v24 = v6[6];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_23BB88984();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
  *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v30 = v6[11];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for DirectionsState();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v32, 2, v33))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v31 = *v32;
    *(_OWORD *)(v31 + 8) = *(_OWORD *)(v32 + 8);
    v31[24] = v32[24];
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 32))(&v31[*(int *)(v33 + 24)], &v32[*(int *)(v33 + 24)], v27);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 2, v33);
  }
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  v36 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  v37 = (_OWORD *)((char *)a1 + v36);
  v38 = (__int128 *)((char *)a2 + v36);
  v39 = v38[7];
  v37[6] = v38[6];
  v37[7] = v39;
  v37[8] = v38[8];
  v40 = v38[3];
  v37[2] = v38[2];
  v37[3] = v40;
  v41 = v38[5];
  v37[4] = v38[4];
  v37[5] = v41;
  v43 = *v38;
  v42 = v38[1];
  v44 = a3[7];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  *v37 = v43;
  v37[1] = v42;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v48 = sub_23BB893B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v45, v46, v48);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  return a1;
}

unint64_t *sub_23B9B16AC(unint64_t *a1, unint64_t *a2, int *a3)
{
  unint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t Action;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;

  v5 = *a2;
  if (*a1 < 2)
    goto LABEL_4;
  if (v5 < 2)
  {
    sub_23B989D60((uint64_t)a1, &qword_256A5A1B8);
    v5 = *a2;
LABEL_4:
    *a1 = v5;
    goto LABEL_6;
  }
  *a1 = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  v6 = (int *)type metadata accessor for DetailsAppView.State(0);
  v7 = v6[5];
  v8 = (unint64_t *)((char *)a1 + v7);
  v9 = (unint64_t *)((char *)a2 + v7);
  v10 = type metadata accessor for SessionLocation.Description(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v15 = *(int *)(v10 + 20);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
        v20 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v21 = &v16[v20];
        v22 = &v17[v20];
        v23 = *((_OWORD *)v22 + 3);
        *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
        *((_OWORD *)v21 + 3) = v23;
        v24 = *((_OWORD *)v22 + 5);
        *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
        *((_OWORD *)v21 + 5) = v24;
        v25 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v25;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      *(_OWORD *)((char *)v8 + *(int *)(v10 + 24)) = *(_OWORD *)((char *)v9 + *(int *)(v10 + 24));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_20;
    }
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_20;
  }
  if (v14)
  {
    sub_23B989D9C((uint64_t)v8, type metadata accessor for SessionLocation.Description);
    goto LABEL_12;
  }
  v27 = v9[1];
  *v8 = *v9;
  v8[1] = v27;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v28 = *(int *)(v10 + 20);
    v29 = (char *)v8 + v28;
    v30 = (char *)v9 + v28;
    sub_23B989D60((uint64_t)v8 + v28, &qword_256A59C88);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
      v33 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v34 = &v29[v33];
      v35 = &v30[v33];
      v36 = *((_OWORD *)v35 + 3);
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *((_OWORD *)v34 + 3) = v36;
      v37 = *((_OWORD *)v35 + 5);
      *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
      *((_OWORD *)v34 + 5) = v37;
      v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
  }
  v39 = *(int *)(v10 + 24);
  v40 = (_QWORD *)((char *)v8 + v39);
  v41 = (_QWORD *)((char *)v9 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
LABEL_20:
  v44 = v6[6];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = sub_23BB88984();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  v76 = v48;
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
LABEL_25:
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v48 + 40))(v45, v46, v47);
LABEL_26:
  *(unint64_t *)((char *)a1 + v6[7]) = *(unint64_t *)((char *)a2 + v6[7]);
  swift_bridgeObjectRelease();
  v53 = v6[8];
  v54 = (unint64_t *)((char *)a1 + v53);
  v55 = (uint64_t *)((char *)a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v58 = v6[11];
  v59 = (uint64_t)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = type metadata accessor for DirectionsState();
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  v64 = v63(v59, 2, v61);
  v65 = v63((uint64_t)v60, 2, v61);
  if (v64)
  {
    if (!v65)
    {
      *(_BYTE *)v59 = *v60;
      *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
      *(_BYTE *)(v59 + 24) = v60[24];
      (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v59 + *(int *)(v61 + 24), &v60[*(int *)(v61 + 24)], v47);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 2, v61);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v65)
  {
    sub_23B989D9C(v59, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_31:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v59, v60, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_32;
  }
  *(_BYTE *)v59 = *v60;
  *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
  *(_BYTE *)(v59 + 24) = v60[24];
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 40))(v59 + *(int *)(v61 + 24), &v60[*(int *)(v61 + 24)], v47);
LABEL_32:
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  *(unint64_t *)((char *)a1 + a3[5]) = *(unint64_t *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  v67 = a3[6];
  v68 = (_OWORD *)((char *)a1 + v67);
  v69 = (_OWORD *)((char *)a2 + v67);
  *(_OWORD *)((char *)a1 + v67) = *(_OWORD *)((char *)a2 + v67);
  swift_release();
  v68[1] = v69[1];
  swift_release();
  v68[2] = v69[2];
  swift_release();
  v68[3] = v69[3];
  swift_release();
  v68[4] = v69[4];
  swift_release();
  v68[5] = v69[5];
  swift_release();
  v68[6] = v69[6];
  swift_release();
  v68[7] = v69[7];
  swift_release();
  v68[8] = v69[8];
  swift_release();
  if (a1 != a2)
  {
    v70 = a3[7];
    v71 = (char *)a1 + v70;
    v72 = (char *)a2 + v70;
    sub_23B989D60((uint64_t)a1 + v70, &qword_256A5A228);
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v74 = sub_23BB893B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v71, v72, v74);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23B9B1CEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9B1CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for DetailsAppView.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23B9B1DA4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9B1DB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for DetailsAppView.State(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FullScreenLocationDetailView(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A5A290);
}

void sub_23B9B1E6C()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for DetailsAppView.State(319);
  if (v0 <= 0x3F)
  {
    sub_23B9B1F04();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23B9B1F04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A5A2A0)
  {
    sub_23BB893B0();
    v0 = sub_23BB892FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A5A2A0);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for FullScreenLocationDetailView.SelectionType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FullScreenLocationDetailView.SelectionType()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for FullScreenLocationDetailView.SelectionType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for FullScreenLocationDetailView.SelectionType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16DeviceImageStateOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s16DeviceImageStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_23B9B20A4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23B9B20BC(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FullScreenLocationDetailView.SelectionType()
{
  return &type metadata for FullScreenLocationDetailView.SelectionType;
}

uint64_t sub_23B9B20EC()
{
  return MEMORY[0x24BEE1778];
}

uint64_t sub_23B9B20F8@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t result;
  char *v35;
  uint64_t v36;
  int *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjCClassFromMetadata;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;

  v2 = v1;
  v67 = a1;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v63, v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A530);
  MEMORY[0x24BDAC7A8](v68, v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A538);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A540);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A548);
  v61 = *(_QWORD *)(v18 - 8);
  v62 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v60 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A550);
  MEMORY[0x24BDAC7A8](v58, v21);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A558);
  MEMORY[0x24BDAC7A8](v59, v24);
  v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A560);
  MEMORY[0x24BDAC7A8](v64, v27);
  v65 = (uint64_t)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v2;
  sub_23B9B26F4(v2);
  sub_23B9B933C();
  sub_23B9B99E0();
  sub_23BB89D88();
  sub_23B989D60((uint64_t)v8, &qword_256A5A530);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v13, v9);
  v30 = &v17[*(int *)(v14 + 36)];
  *(_QWORD *)v30 = KeyPath;
  *((_QWORD *)v30 + 1) = 1;
  v30[16] = 0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v31 = *MEMORY[0x24BDECF38];
  v32 = sub_23BB894A0();
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v5, v31, v32);
  sub_23B97D0C8((unint64_t *)&qword_256A59A20, v33, MEMORY[0x24BDECF78]);
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    sub_23B9B9A2C();
    sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    v35 = v60;
    sub_23BB89DF4();
    sub_23B989D60((uint64_t)v5, &qword_256A599C0);
    sub_23B989D60((uint64_t)v17, &qword_256A5A540);
    v36 = sub_23BB8A328();
    v37 = (int *)type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
    v38 = v66;
    v39 = (uint64_t)&v66[v37[5]];
    v40 = (uint64_t *)&v23[*(int *)(v58 + 36)];
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A680);
    sub_23B989CE8(v39, (uint64_t)v40 + *(int *)(v41 + 36), (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
    *v40 = v36;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v23, v35, v62);
    v42 = sub_23BB8A328();
    LOBYTE(v40) = v38[v37[6]];
    sub_23B989EFC((uint64_t)v23, (uint64_t)v26, &qword_256A5A550);
    v43 = &v26[*(int *)(v59 + 36)];
    *(_QWORD *)v43 = v42;
    v43[8] = (char)v40;
    sub_23B989D60((uint64_t)v23, &qword_256A5A550);
    v44 = sub_23BB8A328();
    LOBYTE(v40) = v38[v37[7]];
    v45 = v65;
    sub_23B989EFC((uint64_t)v26, v65, &qword_256A5A558);
    v46 = v45 + *(int *)(v64 + 36);
    *(_QWORD *)v46 = v44;
    *(_BYTE *)(v46 + 8) = (_BYTE)v40;
    sub_23B989D60((uint64_t)v26, &qword_256A5A558);
    sub_23BB897D0();
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v48 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v49 = sub_23BB89D1C();
    v51 = v50;
    v52 = &v38[v37[9]];
    v53 = *v52;
    v54 = *((_QWORD *)v52 + 1);
    v56 = v55 & 1;
    v69 = v53;
    v70 = v54;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
    sub_23BB8A0E8();
    sub_23B9B9AF4();
    sub_23BB89E9C();
    swift_release();
    swift_release();
    sub_23B9967D0(v49, v51, v56);
    swift_bridgeObjectRelease();
    return sub_23B989D60(v45, &qword_256A5A560);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B9B26F4(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A628);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6C8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A588);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    sub_23B9B28B4((uint64_t)v13);
    v14 = &qword_256A5A588;
    sub_23B989EFC((uint64_t)v13, (uint64_t)v9, &qword_256A5A588);
    swift_storeEnumTagMultiPayload();
    sub_23B9B9430();
    sub_23B9B9860();
    sub_23BB89944();
    v15 = (uint64_t)v13;
  }
  else
  {
    sub_23B9B3064((uint64_t)v5);
    v14 = &qword_256A5A628;
    sub_23B989EFC((uint64_t)v5, (uint64_t)v9, &qword_256A5A628);
    swift_storeEnumTagMultiPayload();
    sub_23B9B9430();
    sub_23B9B9860();
    sub_23BB89944();
    v15 = (uint64_t)v5;
  }
  return sub_23B989D60(v15, v14);
}

uint64_t sub_23B9B28B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  __int128 v82;

  v73 = a1;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6D0);
  MEMORY[0x24BDAC7A8](v62, v2);
  v64 = (uint64_t *)((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5E8);
  MEMORY[0x24BDAC7A8](v75, v4);
  v65 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6D8);
  v69 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72, v6);
  v66 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DirectionsState();
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v63 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6E0);
  MEMORY[0x24BDAC7A8](v70, v11);
  v71 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6E8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A598);
  MEMORY[0x24BDAC7A8](v74, v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6F0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A6F8);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v30 = *(unsigned __int8 *)(v1 + *(int *)(v29 + 24));
  v31 = v1 + *(int *)(v29 + 20);
  v32 = (uint64_t)&v28[*(int *)(v25 + 48)];
  *v28 = v30;
  sub_23B989CE8(v31, v32, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  if (v30 == 1)
  {
    sub_23B9B388C((uint64_t)v24);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v16, v24, v20);
    swift_storeEnumTagMultiPayload();
    v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5A0);
    v34 = sub_23B9B9518();
    v78 = v33;
    v79 = v34;
    swift_getOpaqueTypeConformance2();
    v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5D0);
    v36 = sub_23B9B95B4();
    v78 = v35;
    v79 = v36;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    sub_23B989EFC((uint64_t)v19, v71, &qword_256A5A598);
    swift_storeEnumTagMultiPayload();
    sub_23B9B9454();
    sub_23B9B9650();
    sub_23BB89944();
    sub_23B989D60((uint64_t)v19, &qword_256A5A598);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    return sub_23B989D9C(v32, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  }
  else
  {
    v38 = v16;
    v61 = v20;
    v39 = v71;
    v40 = v72;
    v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v32, 2, v68);
    if (v41)
    {
      v42 = v40;
      v43 = v39;
      if (v41 == 1)
      {
        sub_23BB8A2F8();
        sub_23BB8938C();
        v44 = v79;
        v45 = v80;
        v46 = v81;
        v47 = v64;
        *v64 = v78;
        *((_BYTE *)v47 + 8) = v44;
        v47[2] = v45;
        *((_BYTE *)v47 + 24) = v46;
        *((_OWORD *)v47 + 2) = v82;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
        v48 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5D0);
        v49 = sub_23B9B95B4();
        v76 = v48;
        v77 = v49;
        swift_getOpaqueTypeConformance2();
        sub_23B9B96E4();
        v50 = (uint64_t)v65;
        sub_23BB89944();
        sub_23B989EFC(v50, v43, &qword_256A5A5E8);
        swift_storeEnumTagMultiPayload();
        sub_23B9B9454();
        sub_23B9B9650();
        sub_23BB89944();
        return sub_23B989D60(v50, &qword_256A5A5E8);
      }
      else
      {
        v57 = v66;
        sub_23B9B4078(v66);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v69 + 16))(v64, v57, v42);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
        v58 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5D0);
        v59 = sub_23B9B95B4();
        v78 = v58;
        v79 = v59;
        swift_getOpaqueTypeConformance2();
        sub_23B9B96E4();
        v60 = (uint64_t)v65;
        sub_23BB89944();
        sub_23B989EFC(v60, v39, &qword_256A5A5E8);
        swift_storeEnumTagMultiPayload();
        sub_23B9B9454();
        sub_23B9B9650();
        sub_23BB89944();
        sub_23B989D60(v60, &qword_256A5A5E8);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v57, v42);
      }
    }
    else
    {
      v51 = v63;
      sub_23B989CA4(v32, v63, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      v52 = v66;
      sub_23B9B3C3C(v51, v66);
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v38, v52, v40);
      swift_storeEnumTagMultiPayload();
      v53 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5A0);
      v54 = sub_23B9B9518();
      v78 = v53;
      v79 = v54;
      swift_getOpaqueTypeConformance2();
      v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5D0);
      v56 = sub_23B9B95B4();
      v78 = v55;
      v79 = v56;
      swift_getOpaqueTypeConformance2();
      sub_23BB89944();
      sub_23B989EFC((uint64_t)v19, v39, &qword_256A5A598);
      swift_storeEnumTagMultiPayload();
      sub_23B9B9454();
      sub_23B9B9650();
      sub_23BB89944();
      sub_23B989D60((uint64_t)v19, &qword_256A5A598);
      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v66, v40);
      return sub_23B989D9C(v63, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    }
  }
}

uint64_t sub_23B9B3064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  double (**v68)@<D0>(uint64_t@<X8>);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  __int128 v95;

  v89 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v76 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5B8);
  MEMORY[0x24BDAC7A8](v77, v5);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A658);
  v9 = MEMORY[0x24BDAC7A8](v88, v8);
  v78 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v79 = (uint64_t)&v74 - v12;
  v13 = sub_23BB89F80();
  v82 = *(_QWORD *)(v13 - 8);
  v83 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v84 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16, v19);
  v20 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E30);
  MEMORY[0x24BDAC7A8](v74, v21);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A648);
  v25 = MEMORY[0x24BDAC7A8](v81, v24);
  v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v75 = (uint64_t)&v74 - v29;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A738);
  MEMORY[0x24BDAC7A8](v85, v30);
  v87 = (uint64_t)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A740);
  MEMORY[0x24BDAC7A8](v80, v32);
  v34 = (char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A638);
  MEMORY[0x24BDAC7A8](v86, v35);
  if (*(_BYTE *)(v1 + *(int *)(v16 + 28)))
  {
    if (*(_BYTE *)(v1 + *(int *)(v16 + 28)) == 1)
    {
      v37 = (char *)&v74 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_23B989CE8(v1, (uint64_t)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FullScreenLocationDetailViewActionsModule);
      v38 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v39 = swift_allocObject();
      sub_23B989CA4((uint64_t)v20, v39 + v38, type metadata accessor for FullScreenLocationDetailViewActionsModule);
      v40 = sub_23BB897D0();
      v42 = v41;
      LOBYTE(v38) = v43;
      v45 = v44;
      sub_23BB8986C();
      *(_QWORD *)v23 = &unk_256A5A760;
      *((_QWORD *)v23 + 1) = v39;
      *((_QWORD *)v23 + 2) = v40;
      *((_QWORD *)v23 + 3) = v42;
      v23[32] = v38 & 1;
      *((_QWORD *)v23 + 5) = v45;
      v46 = v84;
      (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v84, *MEMORY[0x24BDF3C28], v83);
      v47 = MEMORY[0x24260BF74](v46, 0.0, 0.627, 0.992, 1.0);
      KeyPath = swift_getKeyPath();
      sub_23B989EFC((uint64_t)v23, (uint64_t)v27, &qword_256A59E30);
      v49 = (uint64_t *)&v27[*(int *)(v81 + 36)];
      *v49 = KeyPath;
      v49[1] = v47;
      sub_23B989D60((uint64_t)v23, &qword_256A59E30);
      v50 = &qword_256A5A648;
      v51 = v75;
      sub_23B990D24((uint64_t)v27, v75, &qword_256A5A648);
      sub_23B989EFC(v51, (uint64_t)v34, &qword_256A5A648);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
      sub_23B9B96E4();
      sub_23B9B98A8();
      sub_23BB89944();
      sub_23B989EFC((uint64_t)v37, v87, &qword_256A5A638);
      swift_storeEnumTagMultiPayload();
      sub_23B9B9884();
      sub_23B9B9944();
      sub_23BB89944();
      sub_23B989D60((uint64_t)v37, &qword_256A5A638);
      v52 = v51;
    }
    else
    {
      v57 = sub_23BB8929C();
      v58 = (uint64_t)v76;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v76, 1, 1, v57);
      sub_23B989CE8(v1, (uint64_t)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FullScreenLocationDetailViewActionsModule);
      v59 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v60 = swift_allocObject();
      sub_23B989CA4((uint64_t)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v60 + v59, type metadata accessor for FullScreenLocationDetailViewActionsModule);
      v61 = (int *)v77;
      v62 = &v7[*(int *)(v77 + 48)];
      v90 = 0;
      sub_23BB8A0C4();
      v63 = v92;
      *v62 = v91;
      *((_QWORD *)v62 + 1) = v63;
      v64 = &v7[v61[13]];
      v90 = 0;
      sub_23BB8A0C4();
      v65 = v92;
      *v64 = v91;
      *((_QWORD *)v64 + 1) = v65;
      sub_23B990D24(v58, (uint64_t)v7, &qword_256A599A0);
      v66 = &v7[v61[9]];
      *(_QWORD *)v66 = &unk_256A5A750;
      *((_QWORD *)v66 + 1) = v60;
      v67 = swift_allocObject();
      *(_QWORD *)(v67 + 16) = sub_23B9B4CE0;
      *(_QWORD *)(v67 + 24) = 0;
      v68 = (double (**)@<D0>(uint64_t@<X8>))&v7[v61[10]];
      *v68 = sub_23B9B9DC0;
      v68[1] = (double (*)@<D0>(uint64_t@<X8>))v67;
      v7[v61[11]] = 0;
      v69 = v84;
      (*(void (**)(char *, _QWORD, uint64_t))(v82 + 104))(v84, *MEMORY[0x24BDF3C28], v83);
      v70 = MEMORY[0x24260BF74](v69, 0.953, 0.427, 0.427, 1.0);
      v71 = v78;
      sub_23B989EFC((uint64_t)v7, v78, &qword_256A5A5B8);
      *(_QWORD *)(v71 + *(int *)(v88 + 36)) = v70;
      sub_23B989D60((uint64_t)v7, &qword_256A5A5B8);
      v50 = &qword_256A5A658;
      v72 = v79;
      sub_23B990D24(v71, v79, &qword_256A5A658);
      sub_23B989EFC(v72, v87, &qword_256A5A658);
      swift_storeEnumTagMultiPayload();
      sub_23B9B9884();
      sub_23B9B9944();
      sub_23BB89944();
      v52 = v72;
    }
  }
  else
  {
    v53 = (char *)&v74 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_23BB8A2F8();
    sub_23BB8938C();
    v54 = v92;
    v55 = v93;
    v56 = v94;
    *(_QWORD *)v34 = v91;
    v34[8] = v54;
    *((_QWORD *)v34 + 2) = v55;
    v34[24] = v56;
    *((_OWORD *)v34 + 2) = v95;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5F8);
    sub_23B9B96E4();
    sub_23B9B98A8();
    sub_23BB89944();
    v50 = &qword_256A5A638;
    sub_23B989EFC((uint64_t)v53, v87, &qword_256A5A638);
    swift_storeEnumTagMultiPayload();
    sub_23B9B9884();
    sub_23B9B9944();
    sub_23BB89944();
    v52 = (uint64_t)v53;
  }
  return sub_23B989D60(v52, v50);
}

uint64_t sub_23B9B388C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double (**v33)@<D0>(uint64_t@<X8>);
  char *v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t *v37;
  char *v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;

  v2 = v1;
  v45 = a1;
  v46 = sub_23BB8944C();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v3);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB89F80();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v40 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5B8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5A0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23BB8929C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  sub_23B989CE8(v2, (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FullScreenLocationDetailViewActionsModule);
  v25 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v26 = swift_allocObject();
  sub_23B989CA4((uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, type metadata accessor for FullScreenLocationDetailViewActionsModule);
  v27 = &v19[v16[12]];
  v47 = 0;
  sub_23BB8A0C4();
  v28 = v49;
  *v27 = v48;
  *((_QWORD *)v27 + 1) = v28;
  v29 = &v19[v16[13]];
  v47 = 0;
  sub_23BB8A0C4();
  v30 = v49;
  *v29 = v48;
  *((_QWORD *)v29 + 1) = v30;
  sub_23B990D24((uint64_t)v15, (uint64_t)v19, &qword_256A599A0);
  v31 = &v19[v16[9]];
  *(_QWORD *)v31 = &unk_256A5A708;
  *((_QWORD *)v31 + 1) = v26;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_23B9B45F0;
  *(_QWORD *)(v32 + 24) = 0;
  v33 = (double (**)@<D0>(uint64_t@<X8>))&v19[v16[10]];
  *v33 = sub_23B9B9DC0;
  v33[1] = (double (*)@<D0>(uint64_t@<X8>))v32;
  v19[v16[11]] = 1;
  v34 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x24BDF3C28], v42);
  v35 = MEMORY[0x24260BF74](v34, 0.0, 0.627, 0.992, 1.0);
  KeyPath = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v19, (uint64_t)v23, &qword_256A5A5B8);
  v37 = (uint64_t *)&v23[*(int *)(v20 + 36)];
  *v37 = KeyPath;
  v37[1] = v35;
  sub_23B989D60((uint64_t)v19, &qword_256A5A5B8);
  v38 = v43;
  sub_23BB89428();
  sub_23B9B9518();
  sub_23BB89DC4();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v46);
  return sub_23B989D60((uint64_t)v23, &qword_256A5A5A0);
}

uint64_t sub_23B9B3C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t (**v37)(uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t *v41;
  char *v42;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;

  v45 = a1;
  v52 = a2;
  v53 = sub_23BB8944C();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v2);
  v50 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB89F80();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v47 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DirectionsState();
  v44[0] = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v44[0] + 64);
  MEMORY[0x24BDAC7A8](v7, v9);
  v10 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10, v13);
  v14 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A59E00);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5D0);
  MEMORY[0x24BDAC7A8](v46, v23);
  v25 = (char *)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23BB8929C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v18, 1, 1, v26);
  sub_23B989CE8(v44[1], (uint64_t)v14, type metadata accessor for FullScreenLocationDetailViewActionsModule);
  v27 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v28 = swift_allocObject();
  sub_23B989CA4((uint64_t)v14, v28 + v27, type metadata accessor for FullScreenLocationDetailViewActionsModule);
  sub_23B989CE8(v45, (uint64_t)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
  v29 = (*(unsigned __int8 *)(v44[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44[0] + 80);
  v30 = swift_allocObject();
  sub_23B989CA4((uint64_t)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
  v31 = &v22[v19[12]];
  v54 = 0;
  sub_23BB8A0C4();
  v32 = v56;
  *v31 = v55;
  *((_QWORD *)v31 + 1) = v32;
  v33 = &v22[v19[13]];
  v54 = 0;
  sub_23BB8A0C4();
  v34 = v56;
  *v33 = v55;
  *((_QWORD *)v33 + 1) = v34;
  sub_23B990D24((uint64_t)v18, (uint64_t)v22, &qword_256A599A0);
  v35 = &v22[v19[9]];
  *(_QWORD *)v35 = &unk_256A5A718;
  *((_QWORD *)v35 + 1) = v28;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_23B9BA010;
  *(_QWORD *)(v36 + 24) = v30;
  v37 = (uint64_t (**)(uint64_t))&v22[v19[10]];
  *v37 = sub_23B9A5A3C;
  v37[1] = (uint64_t (*)(uint64_t))v36;
  v22[v19[11]] = 1;
  v38 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x24BDF3C28], v49);
  v39 = MEMORY[0x24260BF74](v38, 0.0, 0.627, 0.992, 1.0);
  KeyPath = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v22, (uint64_t)v25, &qword_256A59E00);
  v41 = (uint64_t *)&v25[*(int *)(v46 + 36)];
  *v41 = KeyPath;
  v41[1] = v39;
  sub_23B989D60((uint64_t)v22, &qword_256A59E00);
  v42 = v50;
  sub_23BB89428();
  sub_23B9B95B4();
  sub_23BB89DC4();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v53);
  return sub_23B989D60((uint64_t)v25, &qword_256A5A5D0);
}

uint64_t sub_23B9B4078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (**v33)(uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t *v37;
  char *v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;

  v2 = v1;
  v45 = a1;
  v46 = sub_23BB8944C();
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v3);
  v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB89F80();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v40 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A59E00);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5D0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_23BB8929C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
  sub_23B989CE8(v2, (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FullScreenLocationDetailViewActionsModule);
  v25 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v26 = swift_allocObject();
  sub_23B989CA4((uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, type metadata accessor for FullScreenLocationDetailViewActionsModule);
  v27 = &v19[v16[12]];
  v47 = 0;
  sub_23BB8A0C4();
  v28 = v49;
  *v27 = v48;
  *((_QWORD *)v27 + 1) = v28;
  v29 = &v19[v16[13]];
  v47 = 0;
  sub_23BB8A0C4();
  v30 = v49;
  *v29 = v48;
  *((_QWORD *)v29 + 1) = v30;
  sub_23B990D24((uint64_t)v15, (uint64_t)v19, &qword_256A599A0);
  v31 = &v19[v16[9]];
  *(_QWORD *)v31 = &unk_256A5A730;
  *((_QWORD *)v31 + 1) = v26;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_23B9B4860;
  *(_QWORD *)(v32 + 24) = 0;
  v33 = (uint64_t (**)(uint64_t))&v19[v16[10]];
  *v33 = sub_23B9BA300;
  v33[1] = (uint64_t (*)(uint64_t))v32;
  v19[v16[11]] = 1;
  v34 = v40;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v40, *MEMORY[0x24BDF3C28], v42);
  v35 = MEMORY[0x24260BF74](v34, 0.0, 0.627, 0.992, 1.0);
  KeyPath = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v19, (uint64_t)v23, &qword_256A59E00);
  v37 = (uint64_t *)&v23[*(int *)(v20 + 36)];
  *v37 = KeyPath;
  v37[1] = v35;
  sub_23B989D60((uint64_t)v19, &qword_256A59E00);
  v38 = v43;
  sub_23BB89428();
  sub_23B9B95B4();
  sub_23BB89DC4();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v46);
  return sub_23B989D60((uint64_t)v23, &qword_256A5A5D0);
}

uint64_t sub_23B9B4428(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = a1;
  v2 = sub_23BB893B0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[6] = sub_23BB8A9E8();
  v1[7] = sub_23BB8A988();
  v1[8] = v3;
  return swift_task_switch();
}

uint64_t sub_23B9B44BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = v0[2];
  v2 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v0[9] = v2;
  v5 = (uint64_t (*)(void))(**(int **)(v1 + *(int *)(v2 + 32)) + *(_QWORD *)(v1 + *(int *)(v2 + 32)));
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = sub_23B9B4528;
  return v5();
}

uint64_t sub_23B9B4528()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9B4574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_23BA83AFC(v1);
  sub_23BB893A4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9B45F0@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23B9B460C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23B9B4678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = v1 + *(int *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) + 32);
  (*(void (**)(void))(v2 + 32))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9B46C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A720);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = sub_23BB42E60();
  v9[1] = v7;
  sub_23B9967E0();
  sub_23BB8A0B8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v6, v2);
}

uint64_t sub_23B9B47AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23B9B4818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = v1 + *(int *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) + 32);
  (*(void (**)(void))(v2 + 64))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9B4860()
{
  return sub_23BB8A0AC();
}

uint64_t sub_23B9B489C@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23B9B48B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_23BB893B0();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_23BB8A9F4();
  v2[7] = sub_23BB8A9E8();
  v2[8] = sub_23BB8A988();
  v2[9] = v4;
  return swift_task_switch();
}

uint64_t sub_23B9B494C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD);

  v1 = v0[3];
  v2 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v0[10] = v2;
  v5 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v1 + *(int *)(v2 + 32) + 80)
                                              + *(_QWORD *)(v1 + *(int *)(v2 + 32) + 80));
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = v3;
  *v3 = v0;
  v3[1] = sub_23B9B49C4;
  return v5(v0[2], 0);
}

uint64_t sub_23B9B49C4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9B4A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  sub_23BA83AFC(v1);
  sub_23BB893A4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9B4A8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[4] = a1;
  v2 = sub_23BB893B0();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[8] = sub_23BB8A9E8();
  v1[9] = sub_23BB8A988();
  v1[10] = v3;
  return swift_task_switch();
}

uint64_t sub_23B9B4B20()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);

  sub_23BB88D8C();
  if ((sub_23BB88D44() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 32);
    swift_release();
    v2 = (char *)(v1 + *(int *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) + 36));
    v3 = *v2;
    v4 = *((_QWORD *)v2 + 1);
    *(_BYTE *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 24) = v4;
    *(_BYTE *)(v0 + 104) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
    sub_23BB8A0DC();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 32);
    v7 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
    *(_QWORD *)(v0 + 88) = v7;
    v9 = (uint64_t (*)(void))(**(int **)(v6 + *(int *)(v7 + 32) + 112) + *(_QWORD *)(v6 + *(int *)(v7 + 32) + 112));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v8;
    *v8 = v0;
    v8[1] = sub_23B9B4C18;
    return v9();
  }
}

uint64_t sub_23B9B4C18()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9B4C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_23BA83AFC(v1);
  sub_23BB893A4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9B4CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

_QWORD *sub_23B9B4D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  if (qword_256A58CF0 != -1)
    swift_once();
  v12 = qword_256A73D88;
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B9B7598(a3);
  sub_23B9B7598(a5);
  return sub_23BB0ABC8(v12, a1, a2, a3, a4, 0, 0, a5, a6);
}

uint64_t sub_23B9B4DEC@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t (**v21)();
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  uint64_t v36;

  v29 = a1;
  v2 = type metadata accessor for DetailsAppView.State(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for FullScreenLocationDetailView(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A4E8);
  MEMORY[0x24BDAC7A8](v28, v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1[1];
  v30 = *v1;
  v31 = v13;
  v14 = v1[3];
  v32 = v1[2];
  v33 = v14;
  v34 = v1[4];
  v35 = *((_BYTE *)v1 + 80);
  type metadata accessor for CompositeAppViewModel();
  sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
  sub_23BB89308();
  sub_23B99AE00((int64_t)v5);
  swift_release();
  sub_23B9B9098((_QWORD *)&v31 + 1, &v36);
  sub_23B9B90A8((uint64_t)&v36);
  v15 = sub_23BB89308();
  swift_retain();
  sub_23B989CA4((uint64_t)v5, (uint64_t)v9, type metadata accessor for DetailsAppView.State);
  sub_23B9B9098(&v36, &v9[v6[5]]);
  v16 = &v9[v6[6]];
  *(_QWORD *)v16 = &unk_256A5A4F8;
  *((_QWORD *)v16 + 1) = v15;
  *((_QWORD *)v16 + 2) = sub_23B9B9118;
  *((_QWORD *)v16 + 3) = v15;
  *((_QWORD *)v16 + 4) = sub_23B9B9120;
  *((_QWORD *)v16 + 5) = v15;
  *((_QWORD *)v16 + 6) = sub_23BB75EDC;
  *((_QWORD *)v16 + 7) = 0;
  *((_QWORD *)v16 + 8) = sub_23B9B9128;
  *((_QWORD *)v16 + 9) = v15;
  *((_QWORD *)v16 + 10) = &unk_256A5A500;
  *((_QWORD *)v16 + 11) = v15;
  *((_QWORD *)v16 + 12) = &unk_256A5A508;
  *((_QWORD *)v16 + 13) = v15;
  *((_QWORD *)v16 + 14) = &unk_256A5A510;
  *((_QWORD *)v16 + 15) = v15;
  *((_QWORD *)v16 + 16) = sub_23B9B9268;
  *((_QWORD *)v16 + 17) = v15;
  v17 = (uint64_t *)&v9[v6[7]];
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  swift_storeEnumTagMultiPayload();
  v18 = swift_allocObject();
  v19 = v33;
  *(_OWORD *)(v18 + 48) = v32;
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 80) = v34;
  *(_BYTE *)(v18 + 96) = v35;
  v20 = v31;
  *(_OWORD *)(v18 + 16) = v30;
  *(_OWORD *)(v18 + 32) = v20;
  sub_23B989CE8((uint64_t)v9, (uint64_t)v12, type metadata accessor for FullScreenLocationDetailView);
  v21 = (uint64_t (**)())&v12[*(int *)(v28 + 36)];
  *v21 = sub_23B9B9274;
  v21[1] = (uint64_t (*)())v18;
  v21[2] = 0;
  v21[3] = 0;
  swift_retain_n();
  sub_23B9B927C((uint64_t)&v30);
  sub_23B989D9C((uint64_t)v9, type metadata accessor for FullScreenLocationDetailView);
  v22 = swift_allocObject();
  v23 = v33;
  *(_OWORD *)(v22 + 48) = v32;
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 80) = v34;
  *(_BYTE *)(v22 + 96) = v35;
  v24 = v31;
  *(_OWORD *)(v22 + 16) = v30;
  *(_OWORD *)(v22 + 32) = v24;
  v25 = v29;
  sub_23B989EFC((uint64_t)v12, v29, &qword_256A5A4E8);
  v26 = (_QWORD *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A518) + 36));
  *v26 = 0;
  v26[1] = 0;
  v26[2] = sub_23B9B9334;
  v26[3] = v22;
  sub_23B9B927C((uint64_t)&v30);
  return sub_23B989D60((uint64_t)v12, &qword_256A5A4E8);
}

uint64_t sub_23B9B5174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v7;
  _BYTE v8[16];
  _BYTE v9[24];

  v2 = type metadata accessor for CompositeAppViewInitialInfo();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for CompositeAppViewModel();
  sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
  sub_23BB89308();
  sub_23B990D24(a1 + 32, (uint64_t)v9, &qword_256A5A520);
  sub_23B990D24(a1 + 56, (uint64_t)v8, &qword_256A5A528);
  v7 = *(_QWORD *)(a1 + 72);
  type metadata accessor for CompositeAppViewState(0);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a1) = *(_BYTE *)(a1 + 80);
  sub_23B990D24((uint64_t)v9, (uint64_t)v5, &qword_256A5A520);
  sub_23B990D24((uint64_t)v8, (uint64_t)(v5 + 24), &qword_256A5A528);
  *((_QWORD *)v5 + 5) = v7;
  v5[*(int *)(v2 + 32)] = a1;
  sub_23B9A14EC((uint64_t)v9);
  sub_23B9A14EC((uint64_t)v8);
  sub_23B9B90A8((uint64_t)&v7);
  sub_23BB07280((uint64_t)v5);
  swift_release();
  return sub_23B989D9C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CompositeAppViewInitialInfo);
}

uint64_t sub_23B9B5300()
{
  type metadata accessor for CompositeAppViewModel();
  sub_23B97D0C8(&qword_256A5A4F0, (uint64_t (*)(uint64_t))type metadata accessor for CompositeAppViewModel, (uint64_t)&unk_23BB95510);
  sub_23BB89308();
  sub_23BB077BC();
  return swift_release();
}

uint64_t sub_23B9B5378@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;

  v81 = a1;
  v2 = sub_23BB89764();
  v79 = *(_QWORD *)(v2 - 8);
  v80 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v78 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_23BB8A2B0();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72, v5);
  v69 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A2D8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A2E0);
  MEMORY[0x24BDAC7A8](v66, v11);
  v67 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23BB88F9C();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64, v13);
  v62 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for CustomMapCameraPosition();
  MEMORY[0x24BDAC7A8](v65, v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for InteractiveMap();
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A2E8);
  MEMORY[0x24BDAC7A8](v82, v22);
  v68 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A2F0);
  v76 = *(_QWORD *)(v24 - 8);
  v77 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v75 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A2F8);
  v73 = *(_QWORD *)(v27 - 8);
  v74 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v71 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BEE4AF8];
  v31 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)v1 >= 2uLL)
    v31 = swift_bridgeObjectRetain();
  v32 = *(int *)(type metadata accessor for FullScreenLocationDetailView(0) + 20);
  v83 = v1;
  v84 = v30;
  v33 = *(_QWORD *)&v1[v32];
  *((_QWORD *)v21 + 2) = 0;
  v34 = &v21[v18[8]];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  sub_23BB8A0C4();
  v35 = v86;
  *(_QWORD *)v34 = v85;
  *((_QWORD *)v34 + 1) = v35;
  v36 = &v21[v18[9]];
  *(_QWORD *)v36 = sub_23BB25F68;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 0;
  *(_QWORD *)v21 = v31;
  v21[8] = v33 == 0;
  if (v33)
  {
    sub_23BB88F90();
  }
  else
  {
    v37 = v62;
    sub_23BB88F90();
    sub_23BB88F48();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v64);
  }
  swift_storeEnumTagMultiPayload();
  v38 = (uint64_t)&v21[v18[7]];
  sub_23B989CA4((uint64_t)v17, v38, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapCameraPosition);
  *(_QWORD *)(v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A300) + 28)) = 0;
  v65 = sub_23BB8983C();
  v39 = (uint64_t)v68;
  v40 = (uint64_t)&v68[*(int *)(v82 + 36)];
  *(_QWORD *)v10 = sub_23BB8983C();
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 0;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A308);
  sub_23B9B59BC((uint64_t)v83, &v10[*(int *)(v41 + 44)]);
  v42 = v69;
  sub_23BB8A28C();
  v43 = sub_23BB89BA8();
  v44 = (uint64_t)v67;
  v45 = &v67[*(int *)(v66 + 36)];
  v46 = v70;
  v47 = v72;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v45, v42, v72);
  v45[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A310) + 36)] = v43;
  sub_23B989EFC((uint64_t)v10, v44, &qword_256A5A2D8);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v47);
  sub_23B989D60((uint64_t)v10, &qword_256A5A2D8);
  sub_23B990D24(v44, v40, &qword_256A5A2E0);
  v48 = sub_23BB89368();
  LOBYTE(v47) = MEMORY[0x24260BB48]((2 * v48));
  v49 = sub_23BB894DC();
  v50 = v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A318) + 36);
  *(_QWORD *)v50 = v49;
  *(_QWORD *)(v50 + 8) = 0;
  *(_BYTE *)(v50 + 16) = 0;
  *(_BYTE *)(v50 + 17) = v47;
  *(_QWORD *)(v50 + 24) = v65;
  sub_23B989CA4((uint64_t)v21, v39, (uint64_t (*)(_QWORD))type metadata accessor for InteractiveMap);
  v52 = v78;
  v51 = v79;
  v53 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v79 + 104))(v78, *MEMORY[0x24BDEE5F0], v80);
  v54 = sub_23B9B75A8();
  v55 = v75;
  v56 = v82;
  sub_23BB89E78();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
  v57 = sub_23B989D60(v39, &qword_256A5A2E8);
  MEMORY[0x24BDAC7A8](v57, v58);
  *(&v62 - 2) = v83;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A338);
  v85 = v56;
  v86 = v54;
  swift_getOpaqueTypeConformance2();
  sub_23B996E1C(&qword_256A5A340, &qword_256A5A338, MEMORY[0x24BDEF170]);
  v59 = v71;
  v60 = v77;
  sub_23BB89EFC();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v60);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v73 + 32))(v81, v59, v74);
}

uint64_t sub_23B9B59BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  BOOL *v42;
  BOOL *v43;
  uint64_t v44;
  uint64_t *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  BOOL v63;
  uint64_t v64;
  _OWORD v65[2];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v61 = a2;
  v3 = (int *)type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (BOOL *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A428);
  MEMORY[0x24BDAC7A8](v57, v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A430);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v60 = (uint64_t)&v57 - v16;
  v17 = sub_23BB8A1E4();
  v59 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v58 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v57 - v22;
  sub_23BB8A1D8();
  v24 = type metadata accessor for FullScreenLocationDetailView(0);
  v25 = *(_QWORD *)(a1 + *(int *)(v24 + 20)) != 0;
  v26 = (int *)type metadata accessor for DetailsAppView.State(0);
  sub_23B989CE8(a1 + v26[11], (uint64_t)&v6[v3[5]], (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  v28 = v26[9];
  v27 = v26[10];
  v29 = (_OWORD *)(a1 + *(int *)(v24 + 24));
  v30 = v29[1];
  v31 = v29[3];
  v66 = v29[2];
  v32 = v66;
  v67 = v31;
  v33 = v29[6];
  v34 = v29[8];
  v71 = v29[7];
  v35 = v71;
  v72 = v34;
  v36 = v29[5];
  v70 = v29[6];
  v37 = v29[3];
  v38 = v29[5];
  v68 = v29[4];
  v39 = v68;
  v69 = v38;
  v40 = v29[1];
  v65[0] = *v29;
  v41 = v65[0];
  v65[1] = v40;
  LOBYTE(v27) = *(_BYTE *)(a1 + v27);
  LOBYTE(v28) = *(_BYTE *)(a1 + v28);
  *v6 = v25;
  v6[v3[6]] = v27;
  v6[v3[7]] = v28;
  v42 = &v6[v3[8]];
  *((_OWORD *)v42 + 6) = v33;
  *((_OWORD *)v42 + 7) = v35;
  *((_OWORD *)v42 + 8) = v29[8];
  *((_OWORD *)v42 + 2) = v32;
  *((_OWORD *)v42 + 3) = v37;
  *((_OWORD *)v42 + 4) = v39;
  *((_OWORD *)v42 + 5) = v36;
  *(_OWORD *)v42 = v41;
  *((_OWORD *)v42 + 1) = v30;
  v43 = &v6[v3[9]];
  v62 = 0;
  sub_23B9AFAB8((uint64_t)v65);
  sub_23BB8A0C4();
  v44 = v64;
  *v43 = v63;
  *((_QWORD *)v43 + 1) = v44;
  v45 = (uint64_t *)&v6[v3[10]];
  *v45 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v45) = sub_23BB89BF0();
  sub_23B989CE8((uint64_t)v6, (uint64_t)v9, type metadata accessor for FullScreenLocationDetailViewActionsModule);
  v46 = &v9[*(int *)(v57 + 36)];
  *v46 = (char)v45;
  *(_OWORD *)(v46 + 8) = 0u;
  *(_OWORD *)(v46 + 24) = 0u;
  v46[40] = 1;
  sub_23B989D9C((uint64_t)v6, type metadata accessor for FullScreenLocationDetailViewActionsModule);
  v47 = sub_23BB8A2F8();
  sub_23BA29698(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1, v47, v48);
  sub_23B989D60((uint64_t)v9, &qword_256A5A428);
  v49 = v60;
  sub_23B990D24((uint64_t)v14, v60, &qword_256A5A430);
  v50 = v59;
  v51 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v52 = v58;
  v51(v58, v23, v17);
  sub_23B989EFC(v49, (uint64_t)v14, &qword_256A5A430);
  v53 = v61;
  v51(v61, v52, v17);
  v54 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5A438);
  sub_23B989EFC((uint64_t)v14, (uint64_t)&v53[*(int *)(v54 + 48)], &qword_256A5A430);
  sub_23B989D60(v49, &qword_256A5A430);
  v55 = *(void (**)(char *, uint64_t))(v50 + 8);
  v55(v23, v17);
  sub_23B989D60((uint64_t)v14, &qword_256A5A430);
  return ((uint64_t (*)(char *, uint64_t))v55)(v52, v17);
}

uint64_t sub_23B9B5DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A348);
  MEMORY[0x24BDAC7A8](v23, v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A350);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB89998();
  MEMORY[0x24BDAC7A8](v10, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A358);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB89974();
  v26 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59998);
  sub_23B996E1C((unint64_t *)&qword_256A5A360, &qword_256A59998, MEMORY[0x24BDF43B0]);
  sub_23BB8932C();
  sub_23BB8998C();
  v25 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A368);
  sub_23B996E1C(&qword_256A5A370, &qword_256A5A368, MEMORY[0x24BDF4700]);
  sub_23BB8932C();
  v17 = &v5[*(int *)(v23 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v5, v16, v12);
  v18 = v17;
  v19 = v22;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v18, v9, v22);
  sub_23BB89878();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_23B9B6038(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for FullScreenLocationDetailView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_23B989CE8(a1, (uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FullScreenLocationDetailView);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  sub_23B989CA4((uint64_t)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for FullScreenLocationDetailView);
  return sub_23BB8A10C();
}

uint64_t sub_23B9B611C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_23BB893B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FullScreenLocationDetailView(0);
  sub_23BA83AFC((uint64_t)v4);
  sub_23BB893A4();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_23B9B61B4@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23B9B61D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_23BB8983C();
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A378);
  return sub_23B9B621C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_23B9B621C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;
  uint64_t KeyPath;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  _QWORD v39[4];
  unsigned __int16 v40;
  unsigned __int8 v41;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A380);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A388);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A390);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v30 - v18;
  sub_23B9B64F4(a1, (uint64_t)v39);
  v36 = v39[1];
  v37 = v39[0];
  v34 = v39[3];
  v35 = v39[2];
  v38 = v41;
  v33 = v40;
  v32 = sub_23BB89C8C();
  KeyPath = swift_getKeyPath();
  sub_23B9B68FC(a1, v7);
  v20 = sub_23BB89C08();
  v21 = swift_getKeyPath();
  sub_23B989EFC((uint64_t)v7, (uint64_t)v11, &qword_256A5A380);
  v22 = (uint64_t *)&v11[*(int *)(v8 + 36)];
  *v22 = v21;
  v22[1] = v20;
  sub_23B989D60((uint64_t)v7, &qword_256A5A380);
  LODWORD(v21) = sub_23BB899C8();
  sub_23B989EFC((uint64_t)v11, (uint64_t)v16, &qword_256A5A388);
  *(_DWORD *)&v16[*(int *)(v12 + 36)] = v21;
  sub_23B989D60((uint64_t)v11, &qword_256A5A388);
  v30 = v19;
  sub_23B990D24((uint64_t)v16, (uint64_t)v19, &qword_256A5A390);
  sub_23B989EFC((uint64_t)v19, (uint64_t)v16, &qword_256A5A390);
  v24 = v36;
  v23 = v37;
  *(_QWORD *)a2 = v37;
  *(_QWORD *)(a2 + 8) = v24;
  v25 = v34;
  LOBYTE(v12) = v35;
  *(_QWORD *)(a2 + 16) = v35;
  *(_QWORD *)(a2 + 24) = v25;
  v26 = v33;
  *(_WORD *)(a2 + 32) = v33;
  LOBYTE(v7) = v38;
  *(_BYTE *)(a2 + 34) = v38;
  v27 = v32;
  *(_QWORD *)(a2 + 40) = KeyPath;
  *(_QWORD *)(a2 + 48) = v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A398);
  sub_23B989EFC((uint64_t)v16, a2 + *(int *)(v28 + 48), &qword_256A5A390);
  sub_23B9B7664(v23, v24, v12, v25, v26, (char)v7);
  swift_retain();
  swift_retain();
  sub_23B989D60((uint64_t)v30, &qword_256A5A390);
  sub_23B989D60((uint64_t)v16, &qword_256A5A390);
  sub_23B9B770C(v23, v24, v12, v25, v26, (char)v7);
  swift_release();
  return swift_release();
}

double sub_23B9B64F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  double result;
  __int128 v21;
  __int128 v22;
  __int16 v23;
  char v24;

  v4 = *(_QWORD **)(a1 + *(int *)(type metadata accessor for FullScreenLocationDetailView(0) + 20));
  if (v4)
  {
    if (v4[2] == 1)
    {
      v5 = v4[7];
      v6 = (void *)v4[10];
      if (v4[5])
      {
        v7 = v4[4];
        v8 = v4[5];
      }
      else
      {
        v7 = v4[6];
        swift_bridgeObjectRetain();
        v8 = v5;
      }
      *(_QWORD *)&v21 = v7;
      *((_QWORD *)&v21 + 1) = v8;
      sub_23B9967E0();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = v6;
      v13 = sub_23BB89D28();
      v15 = v14;
      v17 = v16 & 1;
      sub_23B996E5C(v13, v14, v16 & 1);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
      sub_23B9B789C();
      sub_23BB89944();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B9967D0(v13, v15, v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = (__int128 *)(a1 + *(int *)(type metadata accessor for DetailsAppView.State(0) + 32));
      if (*((_QWORD *)v11 + 1))
      {
        v21 = *v11;
        sub_23B9967E0();
        swift_bridgeObjectRetain();
        sub_23BB89D28();
      }
      else
      {
        sub_23BB897D0();
        type metadata accessor for FindMyUICore();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
        sub_23BB89D1C();
      }
      sub_23BB89944();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
      sub_23B9B789C();
      sub_23BB89944();
    }
  }
  else
  {
    sub_23BB897D0();
    type metadata accessor for FindMyUICore();
    v9 = swift_getObjCClassFromMetadata();
    v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v9);
    sub_23BB89D1C();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A418);
  sub_23B9B78F8();
  sub_23BB89944();
  result = *(double *)&v21;
  *(_OWORD *)a2 = v21;
  *(_OWORD *)(a2 + 16) = v22;
  *(_WORD *)(a2 + 32) = v23;
  *(_BYTE *)(a2 + 34) = v24;
  return result;
}

uint64_t sub_23B9B68FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  id v38[8];

  v4 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3A0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3A8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3B0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3B8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FullScreenLocationDetailView(0) + 20));
  if (v20)
  {
    v38[5] = v4;
    v21 = *(_QWORD *)(v20 + 16);
    if (v21 == 1)
    {
      sub_23B9B6D48((uint64_t)v11);
      sub_23B989EFC((uint64_t)v11, (uint64_t)v7, &qword_256A5A3A8);
      swift_storeEnumTagMultiPayload();
      sub_23B9B77B4();
      sub_23BB89944();
      sub_23B989D60((uint64_t)v11, &qword_256A5A3A8);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_23BB8C510;
      v24 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v23 + 64) = v24;
      *(_QWORD *)(v23 + 32) = v21;
      if (qword_256A58DD8 != -1)
        swift_once();
      v38[1] = (id)qword_256A73E30;
      v38[2] = v8;
      v25 = (void *)qword_256A73E40;
      v38[3] = v12;
      v38[4] = a2;
      if (qword_256A73E40)
      {
        swift_bridgeObjectRetain();
        v26 = v25;
        v27 = v26;
      }
      else
      {
        v28 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v27 = objc_msgSend(v28, sel_mainBundle);
        v26 = 0;
      }
      v38[0] = v26;
      v29 = (void *)sub_23BB8A784();
      v30 = (void *)sub_23BB8A784();
      v31 = objc_msgSend(v27, sel_localizedStringForKey_value_table_, v29, 0, v30);

      sub_23BB8A7B4();
      v32 = (void *)sub_23BB8A7C0();
      v34 = v33;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v38[6] = v32;
      v38[7] = v34;
      sub_23B9967E0();
      *(_QWORD *)v7 = sub_23BB89D28();
      *((_QWORD *)v7 + 1) = v35;
      v7[16] = v36 & 1;
      *((_QWORD *)v7 + 3) = v37;
      swift_storeEnumTagMultiPayload();
      sub_23B9B77B4();
      sub_23BB89944();
    }
    sub_23B989EFC((uint64_t)v15, (uint64_t)v19, &qword_256A5A3B0);
    swift_storeEnumTagMultiPayload();
    sub_23B9B7830();
    sub_23BB89944();
    return sub_23B989D60((uint64_t)v15, &qword_256A5A3B0);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_23B9B7830();
    return sub_23BB89944();
  }
}

uint64_t sub_23B9B6D48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SessionLocation.Description(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for DetailsAppView.State(0);
  sub_23B989EFC(v1 + *(int *)(v12 + 20), (uint64_t)v6, &qword_256A59C90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23B989D60((uint64_t)v6, &qword_256A59C90);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    sub_23B989CA4((uint64_t)v6, (uint64_t)v11, type metadata accessor for SessionLocation.Description);
    *(_QWORD *)a1 = sub_23BB89788();
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3E0);
    sub_23B9B6EDC(v11, (uint64_t *)(a1 + *(int *)(v15 + 44)));
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3D0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
    return sub_23B989D9C((uint64_t)v11, type metadata accessor for SessionLocation.Description);
  }
}

uint64_t sub_23B9B6EDC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t MyRelativeDate;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _QWORD *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE v84[12];
  int v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  int v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;

  v98 = a2;
  v3 = sub_23BB88984();
  v92 = *(_QWORD *)(v3 - 8);
  v93 = v3;
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v87 = &v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5, v7);
  v88 = &v84[-v8];
  v9 = sub_23BB8881C();
  v90 = *(_QWORD *)(v9 - 8);
  v91 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v89 = &v84[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v106 = type metadata accessor for RelativeDateText();
  v13 = MEMORY[0x24BDAC7A8](v106, v12);
  v15 = &v84[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13, v16);
  v94 = &v84[-v17];
  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  v20 = MEMORY[0x24BDAC7A8](MyRelativeDate, v19);
  v22 = &v84[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v86 = &v84[-v25];
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v29 = &v84[-v28];
  MEMORY[0x24BDAC7A8](v27, v30);
  v95 = &v84[-v31];
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3E8);
  MEMORY[0x24BDAC7A8](v97, v32);
  v34 = &v84[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (uint64_t *)&v84[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A3F0);
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v105 = &v84[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v41, v43);
  v107 = &v84[-v44];
  v48 = a1[1];
  v108 = *a1;
  v109 = v48;
  sub_23B9967E0();
  swift_bridgeObjectRetain();
  v45 = sub_23BB89D28();
  v102 = v46;
  v103 = v45;
  LODWORD(v48) = v47;
  v104 = v49;
  sub_23BB897D0();
  v50 = sub_23BB89D1C();
  v99 = v51;
  v100 = v50;
  v96 = v52;
  v101 = v53;
  v54 = type metadata accessor for SessionLocation.Description(0);
  sub_23B989EFC((uint64_t)a1 + *(int *)(v54 + 20), (uint64_t)v38, &qword_256A59C88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v55 = v95;
    sub_23B989CA4((uint64_t)v38, (uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
    sub_23B989CE8((uint64_t)v55, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
    v56 = v89;
    sub_23BB887EC();
    v57 = v88;
    sub_23BB88978();
    sub_23B989CE8((uint64_t)v29, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
    v58 = sub_23BB888E8();
    v85 = v48;
    v60 = v92;
    v59 = v93;
    if ((v58 & 1) != 0)
      v61 = v22;
    else
      v61 = v57;
    v62 = v87;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v92 + 16))(v87, v61, v93);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 40))(v22, v62, v59);
    v63 = (uint64_t)v22;
    v64 = v86;
    sub_23B989CA4(v63, (uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
    sub_23B989D9C((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v57, v59);
    sub_23B989CA4((uint64_t)v64, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
    v65 = v106;
    v15[*(int *)(v106 + 20)] = 0;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v90 + 32))(&v15[*(int *)(v65 + 24)], v56, v91);
    v66 = &v15[*(int *)(v65 + 28)];
    *v66 = 0;
    v66[1] = 0;
    v48 = (uint64_t)v94;
    sub_23B989CA4((uint64_t)v15, (uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
    sub_23B989CE8(v48, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
    swift_storeEnumTagMultiPayload();
    sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
    v67 = v107;
    sub_23BB89944();
    v68 = v48;
    LOBYTE(v48) = v85;
    sub_23B989D9C(v68, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
    sub_23B989D9C((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  }
  else
  {
    v69 = v38[1];
    v108 = *v38;
    v109 = v69;
    *(_QWORD *)v34 = sub_23BB89D28();
    *((_QWORD *)v34 + 1) = v70;
    v34[16] = v71 & 1;
    *((_QWORD *)v34 + 3) = v72;
    swift_storeEnumTagMultiPayload();
    sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
    v67 = v107;
    sub_23BB89944();
  }
  v73 = v96 & 1;
  v74 = v48 & 1;
  LOBYTE(v108) = v48 & 1;
  v75 = v105;
  sub_23B989EFC((uint64_t)v67, (uint64_t)v105, &qword_256A5A3F0);
  v77 = v102;
  v76 = v103;
  v78 = v98;
  v79 = v99;
  *v98 = v103;
  v78[1] = v77;
  *((_BYTE *)v78 + 16) = v48 & 1;
  v80 = v100;
  v81 = v101;
  v78[3] = v104;
  v78[4] = v80;
  v78[5] = v79;
  *((_BYTE *)v78 + 48) = v73;
  v78[7] = v81;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A400);
  sub_23B989EFC((uint64_t)v75, (uint64_t)v78 + *(int *)(v82 + 64), &qword_256A5A3F0);
  sub_23B996E5C(v76, v77, v74);
  swift_bridgeObjectRetain();
  sub_23B996E5C(v80, v79, v73);
  swift_bridgeObjectRetain();
  sub_23B989D60((uint64_t)v107, &qword_256A5A3F0);
  sub_23B989D60((uint64_t)v75, &qword_256A5A3F0);
  sub_23B9967D0(v80, v79, v73);
  swift_bridgeObjectRelease();
  sub_23B9967D0(v76, v77, v108);
  return swift_bridgeObjectRelease();
}

void sub_23B9B756C(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

uint64_t sub_23B9B7584()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9B7598(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

unint64_t sub_23B9B75A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A320;
  if (!qword_256A5A320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A2E8);
    v2[0] = sub_23B97D0C8(&qword_256A5A328, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveMap, (uint64_t)&protocol conformance descriptor for InteractiveMap);
    v2[1] = sub_23B996E1C(&qword_256A5A330, &qword_256A5A318, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A320);
  }
  return result;
}

uint64_t sub_23B9B7644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B9B5DF0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23B9B764C()
{
  uint64_t v0;

  return sub_23B9B6038(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23B9B7654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B9B61D0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23B9B7664(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_23B9B76A4(a1, a2, a3, a4, a5, BYTE1(a5) & 1);
  sub_23B996E5C(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9B76A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_23B9B76E4(a1, a2, a3);
  sub_23B996E5C(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9B76E4(uint64_t a1, uint64_t a2, char a3)
{
  sub_23B996E5C(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9B770C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_23B9B774C(a1, a2, a3, a4, a5, BYTE1(a5) & 1);
  sub_23B9967D0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B9B774C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_23B9B778C(a1, a2, a3);
  sub_23B9967D0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B9B778C(uint64_t a1, uint64_t a2, char a3)
{
  sub_23B9967D0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_23B9B77B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A5A3C0;
  if (!qword_256A5A3C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A3A8);
    v2 = sub_23B996E1C(&qword_256A5A3C8, &qword_256A5A3D0, MEMORY[0x24BDF4498]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A5A3C0);
  }
  return result;
}

unint64_t sub_23B9B7830()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A3D8;
  if (!qword_256A5A3D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A3B0);
    v2[0] = sub_23B9B77B4();
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A3D8);
  }
  return result;
}

unint64_t sub_23B9B789C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A410;
  if (!qword_256A5A410)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A408);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A410);
  }
  return result;
}

unint64_t sub_23B9B78F8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256A5A420;
  if (!qword_256A5A420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A418);
    v2 = sub_23B9B789C();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A5A420);
  }
  return result;
}

uint64_t sub_23B9B7964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v1 = type metadata accessor for FullScreenLocationDetailView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (_QWORD *)(v0 + ((v2 + 16) & ~v2));
  if (*v3 >= 2uLL)
    swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for DetailsAppView.State(0);
  v5 = (char *)v3 + v4[5];
  v6 = type metadata accessor for SessionLocation.Description(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = &v5[*(int *)(v6 + 20)];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_23BB88984();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      type metadata accessor for FindMyRelativeDate();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = (char *)v3 + v4[6];
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (char *)v3 + v4[11];
  v13 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 2, v13))
    (*(void (**)(char *, uint64_t))(v11 + 8))(&v12[*(int *)(v13 + 24)], v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v14 = (char *)v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_23BB893B0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_23B9B7C04()
{
  type metadata accessor for FullScreenLocationDetailView(0);
  return sub_23B9B611C();
}

uint64_t type metadata accessor for FullScreenLocationDetailViewActionsModule(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5A498);
}

uint64_t sub_23B9B7C48()
{
  return swift_retain();
}

uint64_t destroy for FullScreenLocationDetailViewStandalone()
{
  sub_23B9B7C98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B9B7C98()
{
  return swift_release();
}

uint64_t initializeWithCopy for FullScreenLocationDetailViewStandalone(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23B9B7C48();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  v8 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = a2[9];
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FullScreenLocationDetailViewStandalone(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23B9B7C48();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23B9B7C98();
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FullScreenLocationDetailViewStandalone(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23B9B7C98();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FullScreenLocationDetailViewStandalone(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FullScreenLocationDetailViewStandalone(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 72) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FullScreenLocationDetailViewStandalone()
{
  return &type metadata for FullScreenLocationDetailViewStandalone;
}

_QWORD *sub_23B9B7F88(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Action;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for DirectionsState();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
      v8[24] = v9[24];
      v14 = *(int *)(v10 + 24);
      v15 = &v8[v14];
      v16 = &v9[v14];
      v17 = sub_23BB88984();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 2, v10);
    }
    v18 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v18) = *((_BYTE *)a2 + v18);
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v4 + v19;
    v22 = (char *)a2 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_OWORD *)(v21 + 8) = *(_OWORD *)(v22 + 8);
    *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
    *(_OWORD *)(v21 + 40) = *(_OWORD *)(v22 + 40);
    *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
    *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
    *(_OWORD *)(v21 + 88) = *(_OWORD *)(v22 + 88);
    *(_OWORD *)(v21 + 104) = *(_OWORD *)(v22 + 104);
    v23 = *((_QWORD *)v22 + 17);
    *(_OWORD *)(v21 + 120) = *(_OWORD *)(v22 + 120);
    *((_QWORD *)v21 + 17) = v23;
    v24 = (char *)v4 + v20;
    v25 = (char *)a2 + v20;
    *v24 = *v25;
    v26 = *((_QWORD *)v25 + 1);
    v27 = a3[10];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    *((_QWORD *)v24 + 1) = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_23BB893B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_23B9B8240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 2, v5))
  {
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = a1 + *(int *)(a2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v9 = sub_23BB893B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_BYTE *sub_23B9B8370(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Action;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for DirectionsState();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    v7[24] = v8[24];
    v12 = *(int *)(v9 + 24);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
  }
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v16] = a2[v16];
  v17 = a3[8];
  v18 = a3[9];
  v19 = &a1[v17];
  v20 = &a2[v17];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  *(_OWORD *)(v19 + 24) = *(_OWORD *)(v20 + 24);
  *(_OWORD *)(v19 + 40) = *(_OWORD *)(v20 + 40);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
  *(_OWORD *)(v19 + 104) = *(_OWORD *)(v20 + 104);
  v21 = *((_QWORD *)v20 + 17);
  *(_OWORD *)(v19 + 120) = *(_OWORD *)(v20 + 120);
  *((_QWORD *)v19 + 17) = v21;
  v22 = &a1[v18];
  v23 = &a2[v18];
  *v22 = *v23;
  v24 = *((_QWORD *)v23 + 1);
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *((_QWORD *)v22 + 1) = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = sub_23BB893B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *sub_23B9B85F4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t Action;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (uint64_t)&a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for DirectionsState();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11((uint64_t)v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_BYTE *)v7 = *v8;
      v14 = *(_OWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 24) = v8[24];
      *(_OWORD *)(v7 + 8) = v14;
      v15 = *(int *)(v9 + 24);
      v16 = v7 + v15;
      v17 = &v8[v15];
      v18 = sub_23BB88984();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_23B989D9C(v7, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_6:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)v7 = *v8;
  v40 = *(_OWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 24) = v8[24];
  *(_OWORD *)(v7 + 8) = v40;
  v41 = *(int *)(v9 + 24);
  v42 = v7 + v41;
  v43 = &v8[v41];
  v44 = sub_23BB88984();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
LABEL_7:
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)&a2[v20 + 8];
  *v21 = *(_QWORD *)&a2[v20];
  v21[1] = v23;
  swift_retain();
  swift_release();
  v24 = v22[3];
  v21[2] = v22[2];
  v21[3] = v24;
  swift_retain();
  swift_release();
  v25 = v22[5];
  v21[4] = v22[4];
  v21[5] = v25;
  swift_retain();
  swift_release();
  v26 = v22[7];
  v21[6] = v22[6];
  v21[7] = v26;
  swift_retain();
  swift_release();
  v27 = v22[9];
  v21[8] = v22[8];
  v21[9] = v27;
  swift_retain();
  swift_release();
  v28 = v22[11];
  v21[10] = v22[10];
  v21[11] = v28;
  swift_retain();
  swift_release();
  v29 = v22[13];
  v21[12] = v22[12];
  v21[13] = v29;
  swift_retain();
  swift_release();
  v30 = v22[15];
  v21[14] = v22[14];
  v21[15] = v30;
  swift_retain();
  swift_release();
  v31 = v22[17];
  v21[16] = v22[16];
  v21[17] = v31;
  swift_retain();
  swift_release();
  v32 = a3[9];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *v33 = *v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v35 = a3[10];
    v36 = &a1[v35];
    v37 = &a2[v35];
    sub_23B989D60((uint64_t)&a1[v35], &qword_256A5A228);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = sub_23BB893B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    }
    else
    {
      *v36 = *v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *sub_23B9B891C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Action;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for DirectionsState();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    v7[24] = v8[24];
    v12 = *(int *)(v9 + 24);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
  }
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v16] = a2[v16];
  v17 = a3[8];
  v18 = a3[9];
  v19 = &a1[v17];
  v20 = &a2[v17];
  v21 = v20[3];
  v19[2] = v20[2];
  v19[3] = v21;
  v22 = v20[1];
  *v19 = *v20;
  v19[1] = v22;
  v23 = v20[8];
  v24 = v20[6];
  v19[7] = v20[7];
  v19[8] = v23;
  v25 = v20[5];
  v19[4] = v20[4];
  v19[5] = v25;
  v19[6] = v24;
  v26 = a3[10];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_23BB893B0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_23B9B8ADC(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t Action;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (uint64_t)&a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for DirectionsState();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11((uint64_t)v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_BYTE *)v7 = *v8;
      *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 24) = v8[24];
      v14 = *(int *)(v9 + 24);
      v15 = v7 + v14;
      v16 = &v8[v14];
      v17 = sub_23BB88984();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_23B989D9C(v7, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
LABEL_6:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)v7 = *v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 24) = v8[24];
  v32 = *(int *)(v9 + 24);
  v33 = v7 + v32;
  v34 = &v8[v32];
  v35 = sub_23BB88984();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
LABEL_7:
  v19 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v19] = a2[v19];
  v20 = a3[8];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  swift_release();
  v21[1] = v22[1];
  swift_release();
  v21[2] = v22[2];
  swift_release();
  v21[3] = v22[3];
  swift_release();
  v21[4] = v22[4];
  swift_release();
  v21[5] = v22[5];
  swift_release();
  v21[6] = v22[6];
  swift_release();
  v21[7] = v22[7];
  swift_release();
  v21[8] = v22[8];
  swift_release();
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *v24 = *v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_release();
  if (a1 != a2)
  {
    v26 = a3[10];
    v27 = &a1[v26];
    v28 = &a2[v26];
    sub_23B989D60((uint64_t)&a1[v26], &qword_256A5A228);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_23BB893B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23B9B8DB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9B8DC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t Action;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  Action = type metadata accessor for LocateAction();
  v7 = *(_QWORD *)(Action - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = Action;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[8]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_23B9B8E68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9B8E74(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = type metadata accessor for LocateAction();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[10];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_23B9B8F18()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for LocateAction();
  if (v0 <= 0x3F)
  {
    sub_23B9B1F04();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23B9B8FC8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A2F0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A338);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A2E8);
  sub_23B9B75A8();
  swift_getOpaqueTypeConformance2();
  sub_23B996E1C(&qword_256A5A340, &qword_256A5A338, MEMORY[0x24BDEF170]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9B9078()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9B9088()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_23B9B9098(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t sub_23B9B90A8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B9B90D0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BB747B4();
}

void sub_23B9B9118(__int128 *a1)
{
  sub_23BB74FD4(a1);
}

void sub_23B9B9120()
{
  sub_23BB7593C();
}

void sub_23B9B9128()
{
  sub_23BB75EE0();
}

uint64_t sub_23B9B9130(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B97C964;
  return sub_23BB76288(a1, a2);
}

uint64_t sub_23B9B9190(double a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23B990D68;
  return sub_23BB762E8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23B9B9220()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23BB76A90();
}

void sub_23B9B9268()
{
  sub_23BB77594();
}

uint64_t sub_23B9B9274()
{
  uint64_t v0;

  return sub_23B9B5174(v0 + 16);
}

uint64_t sub_23B9B927C(uint64_t a1)
{
  sub_23B9B7C48();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t objectdestroy_12Tm()
{
  sub_23B9B7C98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B9B9334()
{
  return sub_23B9B5300();
}

unint64_t sub_23B9B933C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A5A568;
  if (!qword_256A5A568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A530);
    v2 = sub_23B9B93C0(&qword_256A5A570, &qword_256A5A578, sub_23B9B9430, sub_23B9B9860);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A5A568);
  }
  return result;
}

uint64_t sub_23B9B93C0(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23B9B9430()
{
  return sub_23B9B93C0(&qword_256A5A580, &qword_256A5A588, (uint64_t (*)(void))sub_23B9B9454, (uint64_t (*)(void))sub_23B9B9650);
}

unint64_t sub_23B9B9454()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  _QWORD v3[4];

  result = qword_256A5A590;
  if (!qword_256A5A590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A598);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5A0);
    sub_23B9B9518();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v3[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5D0);
    v3[3] = sub_23B9B95B4();
    v3[0] = OpaqueTypeConformance2;
    v3[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A5A590);
  }
  return result;
}

unint64_t sub_23B9B9518()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A5A8;
  if (!qword_256A5A5A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5A0);
    v2[0] = sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A5A8);
  }
  return result;
}

unint64_t sub_23B9B95B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A5D8;
  if (!qword_256A5A5D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5D0);
    v2[0] = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A5D8);
  }
  return result;
}

unint64_t sub_23B9B9650()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A5A5E0;
  if (!qword_256A5A5E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5E8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5D0);
    v2[3] = sub_23B9B95B4();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B9B96E4();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A5E0);
  }
  return result;
}

unint64_t sub_23B9B96E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A5F0;
  if (!qword_256A5A5F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A5F8);
    v2[0] = sub_23B9B9770(&qword_256A5A600, &qword_256A5A608, (uint64_t (*)(void))sub_23B9B97D8, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_23B9B981C();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A5F0);
  }
  return result;
}

uint64_t sub_23B9B9770(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B9B97D8()
{
  unint64_t result;

  result = qword_256A5A610;
  if (!qword_256A5A610)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_256A5A610);
  }
  return result;
}

unint64_t sub_23B9B981C()
{
  unint64_t result;

  result = qword_256A5A618;
  if (!qword_256A5A618)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED590], MEMORY[0x24BDED5B8]);
    atomic_store(result, (unint64_t *)&qword_256A5A618);
  }
  return result;
}

uint64_t sub_23B9B9860()
{
  return sub_23B9B93C0(&qword_256A5A620, &qword_256A5A628, sub_23B9B9884, (uint64_t (*)(void))sub_23B9B9944);
}

uint64_t sub_23B9B9884()
{
  return sub_23B9B93C0(&qword_256A5A630, &qword_256A5A638, (uint64_t (*)(void))sub_23B9B96E4, (uint64_t (*)(void))sub_23B9B98A8);
}

unint64_t sub_23B9B98A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A640;
  if (!qword_256A5A640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A648);
    v2[0] = sub_23B996E1C(&qword_256A59E68, &qword_256A59E30, (uint64_t)&unk_23BB94700);
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A640);
  }
  return result;
}

unint64_t sub_23B9B9944()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A650;
  if (!qword_256A5A650)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A658);
    v2[0] = sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v2[1] = sub_23B996E1C(&qword_256A5A660, &qword_256A5A668, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A650);
  }
  return result;
}

unint64_t sub_23B9B99E0()
{
  unint64_t result;

  result = qword_256A5A670;
  if (!qword_256A5A670)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB97580, &type metadata for CustomLabelAndIconLabelStyle);
    atomic_store(result, (unint64_t *)&qword_256A5A670);
  }
  return result;
}

unint64_t sub_23B9B9A2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A5A678;
  if (!qword_256A5A678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A540);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A530);
    v2[3] = &type metadata for CustomLabelAndIconLabelStyle;
    v2[4] = sub_23B9B933C();
    v2[5] = sub_23B9B99E0();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A59A30, &qword_256A59A38, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A678);
  }
  return result;
}

unint64_t sub_23B9B9AF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A688;
  if (!qword_256A5A688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A560);
    v2[0] = sub_23B9B9B78();
    v2[1] = sub_23B996E1C(&qword_256A5A6B8, &qword_256A5A6C0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A688);
  }
  return result;
}

unint64_t sub_23B9B9B78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A690;
  if (!qword_256A5A690)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A558);
    v2[0] = sub_23B9B9BFC();
    v2[1] = sub_23B996E1C(&qword_256A5A6A8, &qword_256A5A6B0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A690);
  }
  return result;
}

unint64_t sub_23B9B9BFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256A5A698;
  if (!qword_256A5A698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A550);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A540);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
    v2[4] = sub_23B9B9A2C();
    v2[5] = sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A5A6A0, &qword_256A5A680, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A698);
  }
  return result;
}

uint64_t sub_23B9B9CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) - 8)
                          + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23B9B4428(v3);
}

double sub_23B9B9D54@<D0>(void (*a1)(__int128 *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  double result;
  __int128 v6;
  char v7;
  uint64_t v8;

  a1(&v6);
  v3 = v7;
  v4 = v8;
  result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(_BYTE *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  return result;
}

uint64_t sub_23B9B9D9C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for FullScreenLocationDetailViewActionsModule(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = v3 + *(int *)(v1 + 20);
  v5 = type metadata accessor for DirectionsState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 2, v5))
  {
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = v3 + *(int *)(v1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_23BB893B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_23B9B9F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) - 8)
                          + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23B9B460C(v3);
}

uint64_t sub_23B9B9F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for DirectionsState();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + *(int *)(v1 + 24) + ((v2 + 16) & ~v2);
  v4 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocObject();
}

uint64_t sub_23B9BA010@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for DirectionsState();
  return sub_23B9B46C0(a1);
}

uint64_t sub_23B9BA050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) - 8)
                          + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23B9B47AC(v3);
}

uint64_t sub_23B9BA0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) - 8)
                          + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23B9B4A8C(v3);
}

double sub_23B9BA11C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  double result;
  __int128 v6;
  char v7;
  uint64_t v8;

  (*(void (**)(__int128 *__return_ptr))(v1 + 16))(&v6);
  v3 = v7;
  v4 = v8;
  result = *(double *)&v6;
  *(_OWORD *)a1 = v6;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  return result;
}

uint64_t sub_23B9BA168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FullScreenLocationDetailViewActionsModule(0) - 8)
                          + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B990D68;
  return sub_23B9B48B8(a1, v5);
}

uint64_t sub_23B9BA1D4()
{
  return sub_23B9B9770(&qword_256A5A768, &qword_256A5A518, (uint64_t (*)(void))sub_23B9BA208, MEMORY[0x24BDF0910]);
}

unint64_t sub_23B9BA208()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5A770;
  if (!qword_256A5A770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A4E8);
    v2[0] = sub_23B97D0C8(&qword_256A5A778, type metadata accessor for FullScreenLocationDetailView, (uint64_t)&unk_23BB8D558);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5A770);
  }
  return result;
}

uint64_t sub_23B9BA28C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A560);
  sub_23B9B9AF4();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for RequestSentMessageView()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RequestSentMessageView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RequestSentMessageView(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RequestSentMessageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestSentMessageView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestSentMessageView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestSentMessageView()
{
  return &type metadata for RequestSentMessageView;
}

uint64_t sub_23B9BA4C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9BA4D0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[4];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A780);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23B9BA6AC(a1, a2, a3, a4);
  v16 = v15;
  v35[2] = v14;
  v35[3] = v15;
  v35[0] = 10;
  v35[1] = 0xE100000000000000;
  v17 = sub_23BB889E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
  sub_23B9967E0();
  sub_23BB8AD00();
  v19 = v18;
  v21 = v20;
  sub_23B9BAB0C((uint64_t)v13);
  result = swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
    v24 = 0;
    v26 = 0;
  }
  else
  {
    v23 = sub_23BB8A88C();
    v24 = MEMORY[0x24260C73C](v23);
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = sub_23BABEBF4(v19, v14, v16);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24260C73C](v27, v29, v31, v33);
    v16 = v34;
    result = swift_bridgeObjectRelease();
  }
  *(_QWORD *)a5 = v24;
  *(_QWORD *)(a5 + 8) = v26;
  *(_QWORD *)(a5 + 16) = v14;
  *(_QWORD *)(a5 + 24) = v16;
  *(_QWORD *)(a5 + 32) = sub_23B997724;
  *(_QWORD *)(a5 + 40) = 0;
  *(_WORD *)(a5 + 48) = 1;
  *(_BYTE *)(a5 + 50) = -63;
  return result;
}

uint64_t sub_23B9BA6AC(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;

  if ((a4 & 1) != 0)
  {
    if ((a1 & 1) == 0 && a3)
    {
LABEL_9:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_23BB8C510;
      *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v6 + 64) = sub_23B9A5C8C();
      *(_QWORD *)(v6 + 32) = a2;
      *(_QWORD *)(v6 + 40) = a3;
      type metadata accessor for FindMyUICore();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v8 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
      v10 = (void *)sub_23BB8A784();
      v11 = objc_msgSend(v9, sel_localizedStringForKey_value_table_, v10, 0, 0);

      sub_23BB8A7B4();
      swift_bridgeObjectRetain();
      v12 = sub_23BB8A7CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  else if ((a1 & 1) == 0 && a3)
  {
    goto LABEL_9;
  }
  type metadata accessor for FindMyUICore();
  v14 = swift_getObjCClassFromMetadata();
  v15 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v14);
  v16 = (void *)sub_23BB8A784();
  v17 = objc_msgSend(v15, sel_localizedStringForKey_value_table_, v16, 0, 0);

  v18 = sub_23BB8A7B4();
  return v18;
}

uint64_t sub_23B9BAAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B9BA4D0(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_23B9BAB0C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A780);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestSentMessageView.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestSentMessageView.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B9BAC38 + 4 * byte_23BB8D7C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B9BAC6C + 4 * byte_23BB8D7C0[v4]))();
}

uint64_t sub_23B9BAC6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9BAC74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B9BAC7CLL);
  return result;
}

uint64_t sub_23B9BAC88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B9BAC90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B9BAC94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9BAC9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestSentMessageView.Style()
{
  return &type metadata for RequestSentMessageView.Style;
}

unint64_t sub_23B9BACBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5A170;
  if (!qword_256A5A170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A160);
    result = MEMORY[0x24260D8DC](&unk_23BB94DB8, v1);
    atomic_store(result, (unint64_t *)&qword_256A5A170);
  }
  return result;
}

uint64_t sub_23B9BAD08(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  void (*v25)(char *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char v41[32];
  uint64_t v42;

  v30 = a5;
  v31 = a8;
  v36 = a1;
  v37 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v38 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v12);
  v34 = (char *)&v27 - v14;
  v39 = a4;
  MEMORY[0x24BDAC7A8](v13, v15);
  v33 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v27 - v19;
  v21 = sub_23BB8AB68();
  if (!v21)
    return sub_23BB8A934();
  v22 = v21;
  v28 = v17;
  v42 = sub_23BB8AEEC();
  v35 = sub_23BB8AEF8();
  sub_23BB8AEB0();
  v39 = v20;
  result = sub_23BB8AB5C();
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v24 = v34;
    while (1)
    {
      v25 = (void (*)(char *, _QWORD))sub_23BB8AB8C();
      (*(void (**)(char *))(v11 + 16))(v24);
      v25(v41, 0);
      v26 = v40;
      v36(v24, v38);
      if (v26)
        break;
      v40 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v24, AssociatedTypeWitness);
      sub_23BB8AEE0();
      sub_23BB8AB74();
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v28);
        return v42;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v28);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v38, v30);
  }
  return result;
}

uint64_t AlertInfo.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlertInfo.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AlertInfo.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AlertInfo.init(title:message:actions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t AlertInfo.resolved(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v8 = *v5;
  v7 = v5[1];
  v10 = v5[2];
  v9 = v5[3];
  v20 = v5[4];
  v18 = *(_QWORD *)(a2 + 16);
  v19 = a1;
  type metadata accessor for AlertInfo.ActionInfo(255, v18, a3, a4);
  v11 = sub_23BB8A97C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (char *)__swift_instantiateConcreteTypeFromMangledName(qword_256A5A7D0);
  v13 = MEMORY[0x24260D8DC](MEMORY[0x24BEE12E0], v11);
  v15 = sub_23B9BAD08((void (*)(char *, char *))sub_23B9BB2FC, (uint64_t)&v17, v11, v12, MEMORY[0x24BEE4078], v13, MEMORY[0x24BEE40A8], v14);
  result = swift_bridgeObjectRelease();
  *a5 = v8;
  a5[1] = v7;
  a5[2] = v10;
  a5[3] = v9;
  a5[4] = v15;
  return result;
}

uint64_t sub_23B9BB144@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a2;
  v31 = a3;
  v29 = type metadata accessor for AlertInfo.ActionInfo(0, a3, a3, a4);
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v8);
  v10 = (char *)&v27 - v9;
  v28 = (char *)&v27 - v9;
  v11 = sub_23BB8A9AC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v27 - v15;
  v17 = *a1;
  v33 = a1[1];
  v34 = v17;
  v18 = *((unsigned __int8 *)a1 + 16);
  if (v18 == 2)
    v19 = 2;
  else
    v19 = v18 & 1;
  v32 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v16, v30, v11);
  v20 = v10;
  v21 = v29;
  (*(void (**)(char *, uint64_t *, uint64_t))(v7 + 16))(v20, a1, v29);
  v22 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v23 = (v13 + *(unsigned __int8 *)(v7 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24 + v22, v16, v11);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v23, v28, v21);
  *(_QWORD *)(a5 + 24) = sub_23B9BC9AC;
  *(_QWORD *)(a5 + 32) = v24;
  v25 = v33;
  *(_QWORD *)a5 = v34;
  *(_QWORD *)(a5 + 8) = v25;
  *(_BYTE *)(a5 + 16) = v32;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9BB2FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23B9BB144(a1, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 16), a2, a3);
}

uint64_t type metadata accessor for AlertInfo.ActionInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AlertInfo.ActionInfo);
}

uint64_t sub_23B9BB324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for AlertInfo.ActionInfo(0, v8, v8, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2 + *(int *)(v10 + 32), a3);
  sub_23BB8A9AC();
  return sub_23BB8A9A0();
}

uint64_t AlertInfo.ActionInfo.init(title:style:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9;
  uint64_t v10;

  v9 = *a3;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = v9;
  v10 = a6 + *(int *)(type metadata accessor for AlertInfo.ActionInfo(0, a5, (uint64_t)a3, a4) + 32);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v10, a4, a5);
}

uint64_t AlertInfo.ActionInfo.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void AlertInfo.ActionInfo.style.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t AlertInfo.ActionInfo.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t AlertInfo.ActionInfo.Style.role.getter@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;

  if ((*v1 & 1) != 0)
    sub_23BB89284();
  else
    sub_23BB89290();
  v3 = sub_23BB8929C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);
}

uint64_t AlertInfo.ActionInfo.Style.hash(into:)()
{
  return sub_23BB8B24C();
}

BOOL static AlertInfo.ActionInfo.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AlertInfo.ActionInfo.Style.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23B9BB56C()
{
  sub_23BB8B240();
  AlertInfo.ActionInfo.Style.hash(into:)();
  return sub_23BB8B270();
}

void sub_23B9BB5A8()
{
  sub_23B9BB5B4((uint64_t)&qword_256A5A788);
}

void sub_23B9BB5B4(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_256A58D30 != -1)
    swift_once();
  v2 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v3 = v2;
    v4 = v3;
  }
  else
  {
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
  }
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  v10 = sub_23BB8A7B4();
  v12 = v11;

  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_BYTE *)(a1 + 16) = 2;
}

uint64_t static AlertInfo.ActionInfo.okAction(withValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58D30 != -1)
    swift_once();
  v8 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v9 = v8;
    v10 = v9;
  }
  else
  {
    v11 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v11, sel_mainBundle);
    v9 = 0;
  }
  v12 = v9;
  v13 = (void *)sub_23BB8A784();
  v14 = (void *)sub_23BB8A784();
  v15 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v13, 0, v14);

  v16 = sub_23BB8A7B4();
  v18 = v17;

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, a2);
  *(_QWORD *)a3 = v16;
  *(_QWORD *)(a3 + 8) = v18;
  *(_BYTE *)(a3 + 16) = 2;
  v21 = type metadata accessor for AlertInfo.ActionInfo(0, a2, v19, v20);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3 + *(int *)(v21 + 32), v7, a2);
}

uint64_t static AlertInfo.ActionInfo<A>.okAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  if (qword_256A58C98 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_256A5A790;
  v3 = byte_256A5A798;
  *(_QWORD *)a1 = qword_256A5A788;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t static AlertInfo.ActionInfo<A>.okAction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  if (qword_256A58C98 != -1)
    swift_once();
  swift_beginAccess();
  qword_256A5A788 = v1;
  qword_256A5A790 = v2;
  byte_256A5A798 = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AlertInfo.ActionInfo<A>.okAction.modify())()
{
  if (qword_256A58C98 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_23B9BBA44()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_256A58D30 != -1)
    swift_once();
  v0 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  qword_256A5A7A0 = v8;
  qword_256A5A7A8 = v10;
  word_256A5A7B0 = 0;
}

uint64_t static AlertInfo.ActionInfo<A>.cancelAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  if (qword_256A58CA0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_256A5A7A8;
  v3 = word_256A5A7B0;
  v4 = HIBYTE(word_256A5A7B0);
  *(_QWORD *)a1 = qword_256A5A7A0;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t static AlertInfo.ActionInfo<A>.cancelAction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 17);
  if (qword_256A58CA0 != -1)
    swift_once();
  swift_beginAccess();
  qword_256A5A7A0 = v1;
  qword_256A5A7A8 = v2;
  LOBYTE(word_256A5A7B0) = v3;
  HIBYTE(word_256A5A7B0) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AlertInfo.ActionInfo<A>.cancelAction.modify())()
{
  if (qword_256A58CA0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_23B9BBD18()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_256A58D30 != -1)
    swift_once();
  v0 = (void *)qword_256A61B50;
  if (qword_256A61B50)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  v10 = v9;

  swift_bridgeObjectRelease();
  qword_256A5A7B8 = v8;
  qword_256A5A7C0 = v10;
  word_256A5A7C8 = 258;
}

uint64_t static AlertInfo.ActionInfo<A>.continueAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  if (qword_256A58CA8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_256A5A7C0;
  v3 = word_256A5A7C8;
  v4 = HIBYTE(word_256A5A7C8);
  *(_QWORD *)a1 = qword_256A5A7B8;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 17) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t static AlertInfo.ActionInfo<A>.continueAction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 17);
  if (qword_256A58CA8 != -1)
    swift_once();
  swift_beginAccess();
  qword_256A5A7B8 = v1;
  qword_256A5A7C0 = v2;
  LOBYTE(word_256A5A7C8) = v3;
  HIBYTE(word_256A5A7C8) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AlertInfo.ActionInfo<A>.continueAction.modify())()
{
  if (qword_256A58CA8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_23B9BBFEC()
{
  JUMPOUT(0x24260D8DCLL);
}

uint64_t sub_23B9BBFFC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t destroy for AvatarTextTemplate()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23B9BC034(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23B9BC088(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B9BC10C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for AlertInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AlertInfo);
}

uint64_t sub_23B9BC16C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23B9BC1EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 17) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v11 = (a1 + v6 + 17) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 17) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_23B9BC2B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_23B9BC2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 17 + a1) & ~v7;
  v9 = (v7 + 17 + a2) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  return a1;
}

uint64_t sub_23B9BC374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))((*(unsigned __int8 *)(v6 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_23B9BC3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_23B9BC44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23B9BC4BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 17) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 17) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23B9BC590 + 4 * byte_23BB8D840[(v9 - 1)]))();
}

void sub_23B9BC600(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_23B9BC7F8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B9BC800(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23B9BC84C + 4 * byte_23BB8D853[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23B9BC880 + 4 * byte_23BB8D84E[v4]))();
}

uint64_t sub_23B9BC880(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9BC888(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B9BC890);
  return result;
}

uint64_t sub_23B9BC89C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B9BC8A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23B9BC8A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9BC8B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for AlertInfo.ActionInfo.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AlertInfo.ActionInfo.Style);
}

uint64_t sub_23B9BC8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_23BB8A9AC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v8 = type metadata accessor for AlertInfo.ActionInfo(0, v1, v6, v7);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v4 + v5 + v9) & ~v9;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v10 + *(int *)(v8 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_23B9BC9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_23BB8A9AC() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AlertInfo.ActionInfo(0, v1, v5, v6) - 8) + 80);
  return sub_23B9BB324(v0 + v3, v0 + ((v3 + v4 + v7) & ~v7), v1);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24260D81C](a1, v6, a5);
}

uint64_t sub_23B9BCA6C()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23B9BD6F4();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23B9BCAE8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B9BD6F4();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9BCB60()
{
  swift_getKeyPath();
  sub_23B9BD6F4();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B9BCC04()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23B9BD6F4();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 88);
  sub_23B9B7598(v1);
  return v1;
}

uint64_t sub_23B9BCC84@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  v3 = *a1;
  swift_getKeyPath();
  sub_23B9BD6F4();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 88);
  v5 = *(_QWORD *)(v3 + 96);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23B9BD7CC;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *, uint64_t))v6;
  return sub_23B9B7598(v4);
}

uint64_t sub_23B9BCD34(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a4(*a1, *a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16));
}

uint64_t sub_23B9BCD6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char, char, uint64_t, uint64_t, char);
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23B9BD784;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23B9B7598(v2);
  sub_23B9BD6F4();
  sub_23BB88A14();
  sub_23B9BD73C((uint64_t)v4);
  return swift_release();
}

uint64_t sub_23B9BCE78(char a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(char *, char *, _QWORD *))
{
  _QWORD v7[2];
  char v8;
  char v9;
  char v10;

  v10 = a1;
  v9 = a2;
  v7[0] = a3;
  v7[1] = a4;
  v8 = a5 & 1;
  return a6(&v10, &v9, v7);
}

uint64_t sub_23B9BCEC0()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      result = sub_23BB8B1C8();
      __break(1u);
      return result;
    }
    if (qword_256A58DB0 != -1)
      swift_once();
    v2 = (void *)qword_256A73DF8;
    if (qword_256A73DF8)
      goto LABEL_11;
LABEL_12:
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
    goto LABEL_13;
  }
  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (!qword_256A73DE0)
    goto LABEL_12;
LABEL_11:
  swift_bridgeObjectRetain();
  v3 = v2;
  v4 = v3;
LABEL_13:
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  v10 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_23B9BD100()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      result = sub_23BB8B1C8();
      __break(1u);
      return result;
    }
    if (qword_256A58DB0 != -1)
      swift_once();
    v2 = (void *)qword_256A73DF8;
    if (qword_256A73DF8)
      goto LABEL_11;
LABEL_12:
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
    goto LABEL_13;
  }
  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (!qword_256A73DE0)
    goto LABEL_12;
LABEL_11:
  swift_bridgeObjectRetain();
  v3 = v2;
  v4 = v3;
LABEL_13:
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  v10 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_23B9BD340()
{
  uint64_t v0;
  uint64_t result;
  void (*v2)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);

  swift_getKeyPath();
  sub_23B9BD6F4();
  sub_23BB88A20();
  result = swift_release();
  v2 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(v0 + 88);
  if (v2)
  {
    swift_retain();
    v2(2, 2, 0, 0, 1);
    return sub_23B9BD73C((uint64_t)v2);
  }
  return result;
}

uint64_t sub_23B9BD3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  sub_23B9BD73C(*(_QWORD *)(v0 + 88));
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore28AccessoryLockedToMeViewModel___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23B9BD450()
{
  return type metadata accessor for AccessoryLockedToMeViewModel();
}

uint64_t type metadata accessor for AccessoryLockedToMeViewModel()
{
  uint64_t result;

  result = qword_256A5A988;
  if (!qword_256A5A988)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B9BD494()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88A50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23B9BD538()
{
  return sub_23B9BCEC0();
}

uint64_t sub_23B9BD558()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_getKeyPath();
  sub_23B9BD6F4();
  sub_23BB88A20();
  swift_release();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23B9BD5D4()
{
  return sub_23B9BD100();
}

uint64_t sub_23B9BD5F4()
{
  return 0x6E6F6349707041;
}

uint64_t sub_23B9BD610()
{
  return 0;
}

uint64_t sub_23B9BD618(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B9B7598(a1);
  sub_23B9BD6F4();
  sub_23BB88A14();
  sub_23B9BD73C(a1);
  return swift_release();
}

uint64_t sub_23B9BD6CC()
{
  return sub_23B9BD340();
}

unint64_t sub_23B9BD6F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5AA40;
  if (!qword_256A5AA40)
  {
    v1 = type metadata accessor for AccessoryLockedToMeViewModel();
    result = MEMORY[0x24260D8DC](&unk_23BB8DA40, v1);
    atomic_store(result, (unint64_t *)&qword_256A5AA40);
  }
  return result;
}

uint64_t sub_23B9BD73C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23B9BD74C()
{
  return sub_23B9BD800();
}

uint64_t sub_23B9BD760()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9BD784(char a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t (*v6)(char *, char *, _QWORD *);
  _QWORD v8[2];
  char v9;
  char v10;
  char v11;

  v6 = *(uint64_t (**)(char *, char *, _QWORD *))(v5 + 16);
  v11 = a1;
  v10 = a2;
  v8[0] = a3;
  v8[1] = a4;
  v9 = a5 & 1;
  return v6(&v11, &v10, v8);
}

uint64_t sub_23B9BD7CC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v3 + 16))(*a1, *a2, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16));
}

uint64_t sub_23B9BD800()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 88) = v1;
  *(_QWORD *)(v2 + 96) = v3;
  sub_23B9B7598(v1);
  return sub_23B9BD73C(v4);
}

uint64_t sub_23B9BD848()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58DA8 != -1)
    swift_once();
  v0 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_23B9BD998()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = v0[4];
  *(_QWORD *)(v1 + 16) = v0[3];
  *(_QWORD *)(v1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t NSUserDefaults.set<A>(codableValue:forKey:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  void *v6;
  void *v7;

  sub_23BB88660();
  swift_allocObject();
  sub_23BB88654();
  v2 = sub_23BB88648();
  v4 = v3;
  result = swift_release();
  if (!v1)
  {
    v6 = (void *)sub_23BB88858();
    v7 = (void *)sub_23BB8A784();
    objc_msgSend(v0, sel_setValue_forKey_, v6, v7);

    return sub_23B9BDAD0(v2, v4);
  }
  return result;
}

uint64_t sub_23B9BDAD0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t NSUserDefaults.codable<A>(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)sub_23BB8A784();
  v12 = objc_msgSend(v4, sel_dataForKey_, v11);

  if (!v12)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a4, 1, 1, a3);
  v13 = sub_23BB88864();
  v15 = v14;

  sub_23BB8863C();
  swift_allocObject();
  sub_23BB88630();
  sub_23BB88624();
  sub_23B9BDAD0(v13, v15);
  result = swift_release();
  if (!v5)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v10, a3);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a4, 0, 1, a3);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OnboardingState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 2)
      v7 = v6 - 1;
    else
      v7 = 0;
    if (v7 >= 5)
      return v7 - 4;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23B9BDCBC + 4 * byte_23BB8DAC0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for OnboardingState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23B9BDD68 + 4 * byte_23BB8DACA[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23B9BDD9C + 4 * byte_23BB8DAC5[v5]))();
}

uint64_t sub_23B9BDD9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9BDDA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B9BDDACLL);
  return result;
}

uint64_t sub_23B9BDDB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B9BDDC0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23B9BDDC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9BDDCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B9BDDD8(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_23B9BDDEC(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingState()
{
  return &type metadata for OnboardingState;
}

uint64_t PersonInfo.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t PersonInfo.init(identifier:relationshipState:locationState:userLocation:contactState:mapsDirectionsState:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  int *v16;
  _BYTE v18[136];

  v12 = *a1;
  v13 = a1[1];
  v14 = *((_BYTE *)a1 + 16);
  sub_23B990D24(a3, (uint64_t)v18, &qword_256A5AA48);
  v15 = *a4;
  *(_QWORD *)a7 = v12;
  *(_QWORD *)(a7 + 8) = v13;
  *(_BYTE *)(a7 + 16) = v14;
  v16 = (int *)type metadata accessor for PersonInfo();
  sub_23B989CA4(a2, a7 + v16[5], type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  sub_23B990D24((uint64_t)v18, a7 + v16[6], &qword_256A5AA48);
  *(_QWORD *)(a7 + v16[7]) = v15;
  *(_QWORD *)(a7 + v16[8]) = a5;
  return sub_23B990D24(a6, a7 + v16[9], &qword_256A593D8);
}

uint64_t type metadata accessor for PersonInfo()
{
  uint64_t result;

  result = qword_256A5AAC0;
  if (!qword_256A5AAC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PersonInfo.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for PersonInfo();
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + *(int *)(v3 + 32));
  if (!v6)
    goto LABEL_8;
  v7 = objc_msgSend(v6, sel_givenName);
  v8 = sub_23BB8A7B4();
  v10 = v9;

  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    sub_23B989CE8(v0, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
LABEL_9:
    v8 = *v5;
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  sub_23B989CE8(v0, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
  if (!v10)
    goto LABEL_9;
LABEL_10:
  sub_23B989D9C((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
  return v8;
}

void *PersonInfo.contact.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for PersonInfo() + 32));
  v2 = v1;
  return v1;
}

_QWORD *PersonInfo.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  _OWORD v6[8];
  _QWORD v7[17];
  _BYTE v8[8];
  uint64_t v9;

  v3 = type metadata accessor for PersonInfo();
  sub_23B990D24(v1 + *(int *)(v3 + 24), (uint64_t)v7, &qword_256A5AA48);
  sub_23B990D24((uint64_t)v7, (uint64_t)v8, &qword_256A5AA48);
  if (sub_23B9BE120((uint64_t)v8) == 1)
  {
    sub_23B9BE144(v6);
    v4 = (uint64_t *)v6;
  }
  else
  {
    v4 = &v9;
  }
  sub_23B990D24((uint64_t)v4, a1, &qword_256A5AA50);
  return sub_23B9BE3C8(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE15C);
}

uint64_t sub_23B9BE120(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

double sub_23B9BE144(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_23B9BE15C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return sub_23B989540(a2);
  return result;
}

uint64_t PersonInfo.isLoadingLocation.getter()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  _BYTE v4[136];
  _BYTE v5[144];

  v1 = type metadata accessor for PersonInfo();
  sub_23B990D24(v0 + *(int *)(v1 + 24), (uint64_t)v4, &qword_256A5AA48);
  sub_23B990D24((uint64_t)v4, (uint64_t)v5, &qword_256A5AA48);
  v2 = sub_23B9BE120((uint64_t)v5) != 1;
  return v2 & v5[0];
}

_QWORD *PersonInfo.distanceFromUserLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _OWORD v11[8];
  uint64_t v12[16];
  _OWORD v13[8];
  _QWORD v14[17];
  _BYTE v15[8];
  _BYTE v16[128];

  v3 = type metadata accessor for PersonInfo();
  sub_23B990D24(v1 + *(int *)(v3 + 24), (uint64_t)v14, &qword_256A5AA48);
  sub_23B990D24((uint64_t)v14, (uint64_t)v15, &qword_256A5AA48);
  if (sub_23B9BE120((uint64_t)v15) == 1)
    goto LABEL_2;
  sub_23B990D24((uint64_t)v16, (uint64_t)v12, &qword_256A5AA50);
  if (sub_23B9B20A4(v12) == 1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
  }
  else
  {
    sub_23B990D24((uint64_t)v16, (uint64_t)v11, &qword_256A5AA50);
    v13[2] = v11[2];
    v13[3] = v11[3];
    v13[6] = v11[6];
    v13[7] = v11[7];
    v13[4] = v11[4];
    v13[5] = v11[5];
    v13[0] = v11[0];
    v13[1] = v11[1];
    v7 = *(void **)(v1 + *(int *)(v3 + 28));
    if (!v7)
    {
LABEL_2:
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
      return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
    }
    v10 = v7;
    sub_23B9BE3C8(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE15C);
    v8 = v7;
    sub_23B9BE478(&v10, (void **)v13, a1);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);

  }
  return sub_23B9BE3C8(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE424);
}

_QWORD *sub_23B9BE3C8(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

void *sub_23B9BE424(uint64_t a1, void *a2)
{
  void *result;

  if (a2 != (void *)1)
    return sub_23B990B20(a2);
  return result;
}

uint64_t sub_23B9BE478@<X0>(void **a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  double v19;
  double v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t result;
  double v23;
  id v24;
  _QWORD v25[2];
  id v26;

  v25[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)v25 - v12;
  v14 = *a1;
  v15 = *a2;
  v26 = v15;
  sub_23B9C3134(&v26);
  objc_msgSend(v14, sel_distanceFromLocation_, v15);
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_meters);
  sub_23B97CD2C();
  sub_23BB88678();
  sub_23B9C315C(&v26);
  v18 = objc_msgSend(v16, sel_meters);
  sub_23BB88690();

  sub_23BB88684();
  v20 = v19;
  v21 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  result = v21(v10, v5);
  v23 = v20 / 30.0;
  if ((~COERCE__INT64(v20 / 30.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v23 < 9.22337204e18)
  {
    v24 = objc_msgSend(v16, sel_meters);
    sub_23BB88678();
    return v21(v13, v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t PersonInfo.mapsDirections.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PersonInfo() + 36);
  return sub_23B9BE6A8(v3, a1);
}

uint64_t sub_23B9BE6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PersonInfo.isNearby.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char v17;
  id v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v22;
  _OWORD v23[8];
  uint64_t v24[16];
  _OWORD v25[8];
  _QWORD v26[17];
  _BYTE v27[8];
  _BYTE v28[136];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA58);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for PersonInfo();
  sub_23B990D24(v0 + *(int *)(v14 + 24), (uint64_t)v26, &qword_256A5AA48);
  sub_23B990D24((uint64_t)v26, (uint64_t)v27, &qword_256A5AA48);
  if (sub_23B9BE120((uint64_t)v27) == 1)
    goto LABEL_2;
  sub_23B990D24((uint64_t)v28, (uint64_t)v24, &qword_256A5AA50);
  if (sub_23B9B20A4(v24) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  else
  {
    sub_23B990D24((uint64_t)v28, (uint64_t)v23, &qword_256A5AA50);
    v25[2] = v23[2];
    v25[3] = v23[3];
    v25[6] = v23[6];
    v25[7] = v23[7];
    v25[4] = v23[4];
    v25[5] = v23[5];
    v25[0] = v23[0];
    v25[1] = v23[1];
    v15 = *(void **)(v0 + *(int *)(v14 + 28));
    if (!v15)
    {
LABEL_2:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      goto LABEL_8;
    }
    v22 = v15;
    sub_23B9BE3C8(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE15C);
    v16 = v15;
    sub_23B9BE478(&v22, (void **)v25, (uint64_t)v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);

  }
  sub_23B9BE3C8(v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE424);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v4, v5);
    v19 = objc_msgSend((id)objc_opt_self(), sel_kilometers);
    sub_23B97CD2C();
    sub_23BB88678();
    v17 = sub_23BB8866C();
    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20(v9, v5);
    v20(v13, v5);
    return v17 & 1;
  }
LABEL_8:
  sub_23B989D60((uint64_t)v4, &qword_256A5AA58);
  v17 = 0;
  return v17 & 1;
}

BOOL PersonInfo.isFavorite.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17;

  v1 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v17 - v11;
  v13 = type metadata accessor for PersonInfo();
  sub_23B989CE8(v0 + *(int *)(v13 + 20), (uint64_t)v4, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23B989CA4((uint64_t)v4, (uint64_t)v9, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  }
  else
  {
    v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  sub_23B990D24((uint64_t)v9, (uint64_t)v12, &qword_256A5AA60);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14) == 1)
  {
    sub_23B989D60((uint64_t)v12, &qword_256A5AA60);
    return 0;
  }
  v15 = v12[*(int *)(v14 + 28) + 8];
  sub_23B989D9C((uint64_t)v12, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
  return v15 != 1;
}

uint64_t PersonInfo.hasLocation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3[16];
  _QWORD v4[17];
  _BYTE v5[8];
  uint64_t v6;

  v1 = type metadata accessor for PersonInfo();
  sub_23B990D24(v0 + *(int *)(v1 + 24), (uint64_t)v4, &qword_256A5AA48);
  sub_23B990D24((uint64_t)v4, (uint64_t)v5, &qword_256A5AA48);
  if (sub_23B9BE120((uint64_t)v5) == 1)
    return 0;
  sub_23B990D24((uint64_t)&v6, (uint64_t)v3, &qword_256A5AA50);
  if (sub_23B9B20A4(v3) != 1)
    return 1;
  sub_23B9BE3C8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE424);
  return 0;
}

Swift::Bool __swiftcall PersonInfo.isIncluded(search:)(Swift::String search)
{
  uint64_t v1;
  char v2;
  char v3;

  v1 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0)
    v1 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v1)
  {
    PersonInfo.displayName.getter();
    sub_23B9967E0();
    v2 = sub_23BB8ACF4();
    swift_bridgeObjectRelease();
    v3 = v2 | sub_23BB8ACF4();
  }
  else
  {
    v3 = 1;
  }
  return v3 & 1;
}

uint64_t PersonInfo.pendingActionsSortOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;

  v1 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v26 - v15;
  v17 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for PersonInfo();
  sub_23B989CE8(v0 + *(int *)(v22 + 20), (uint64_t)v8, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23B989CA4((uint64_t)v8, (uint64_t)v12, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v12, v23, 1, v17);
  sub_23B990D24((uint64_t)v12, (uint64_t)v16, &qword_256A5AA60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    sub_23B989CA4((uint64_t)v16, (uint64_t)v21, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    sub_23B989CE8((uint64_t)&v21[*(int *)(v17 + 20)], (uint64_t)v4, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
    sub_23B989D9C((uint64_t)v21, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    v25 = (char *)&loc_23B9BEEF4 + 4 * a5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23B989D60((uint64_t)v16, &qword_256A5AA60);
  return 2;
}

void sub_23B9BEF80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
  sub_23B989D60(v0 + *(int *)(v1 + 48), (uint64_t *)&unk_256A5E6B0);
  JUMPOUT(0x23B9BEEECLL);
}

void sub_23B9BEFB0()
{
  uint64_t v0;

  sub_23B989D60(v0, (uint64_t *)&unk_256A5E6B0);
  JUMPOUT(0x23B9BEEF4);
}

void sub_23B9BEFC8()
{
  uint64_t v0;

  sub_23B989D60(v0, (uint64_t *)&unk_256A5E6B0);
  JUMPOUT(0x23B9BEEF4);
}

uint64_t PersonInfo.relationshipSortOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;

  v33 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  MEMORY[0x24BDAC7A8](v33, v1);
  v34 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v33 - v17;
  v19 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PersonInfo();
  sub_23B989CE8(v0 + *(int *)(v24 + 20), (uint64_t)v10, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23B989CA4((uint64_t)v10, (uint64_t)v14, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v14, v25, 1, v19);
  sub_23B990D24((uint64_t)v14, (uint64_t)v18, &qword_256A5AA60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_23B989D60((uint64_t)v18, &qword_256A5AA60);
    return 2;
  }
  sub_23B989CA4((uint64_t)v18, (uint64_t)v23, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
  sub_23B989CE8((uint64_t)&v23[*(int *)(v19 + 20)], (uint64_t)v6, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v26 = 0;
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    v28 = (uint64_t)v34;
    if (EnumCaseMultiPayload)
      goto LABEL_11;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
    sub_23B989D60((uint64_t)&v6[*(int *)(v29 + 48)], (uint64_t *)&unk_256A5E6B0);
    v26 = 1;
  }
  else
  {
    v28 = (uint64_t)v34;
  }
  sub_23B989D60((uint64_t)v6, (uint64_t *)&unk_256A5E6B0);
LABEL_11:
  sub_23B989CE8((uint64_t)&v23[*(int *)(v19 + 24)], v28, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
  v30 = swift_getEnumCaseMultiPayload();
  if (v30)
  {
    if (v30 == 1)
      sub_23B989D60(v28, (uint64_t *)&unk_256A5E6B0);
    sub_23B989D9C((uint64_t)v23, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
  }
  else
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
    sub_23B989D60(v28 + *(int *)(v31 + 48), (uint64_t *)&unk_256A5E6B0);
    sub_23B989D60(v28, (uint64_t *)&unk_256A5E6B0);
    sub_23B989D9C((uint64_t)v23, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    return 0;
  }
  return v26;
}

uint64_t PersonInfo.nonOptionalFavoriteOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v19;

  v1 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v19 - v11;
  v13 = type metadata accessor for PersonInfo();
  sub_23B989CE8(v0 + *(int *)(v13 + 20), (uint64_t)v4, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23B989CA4((uint64_t)v4, (uint64_t)v8, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
    v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  }
  else
  {
    v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  sub_23B990D24((uint64_t)v8, (uint64_t)v12, &qword_256A5AA60);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14) == 1)
  {
    sub_23B989D60((uint64_t)v12, &qword_256A5AA60);
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  v15 = &v12[*(int *)(v14 + 28)];
  v16 = *(_QWORD *)v15;
  v17 = v15[8];
  sub_23B989D9C((uint64_t)v12, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
  if (v17 == 1)
    return 0x7FFFFFFFFFFFFFFFLL;
  return v16;
}

uint64_t PersonInfo.nonOptionalDistanceFromUserLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v17;
  void *v18;
  _OWORD v19[8];
  uint64_t v20[16];
  _OWORD v21[8];
  _QWORD v22[17];
  _BYTE v23[8];
  _BYTE v24[128];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA58);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PersonInfo();
  sub_23B990D24(v1 + *(int *)(v7 + 24), (uint64_t)v22, &qword_256A5AA48);
  sub_23B990D24((uint64_t)v22, (uint64_t)v23, &qword_256A5AA48);
  if (sub_23B9BE120((uint64_t)v23) == 1)
    goto LABEL_2;
  sub_23B990D24((uint64_t)v24, (uint64_t)v20, &qword_256A5AA50);
  if (sub_23B9B20A4(v20) == 1)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  else
  {
    sub_23B990D24((uint64_t)v24, (uint64_t)v19, &qword_256A5AA50);
    v21[2] = v19[2];
    v21[3] = v19[3];
    v21[6] = v19[6];
    v21[7] = v19[7];
    v21[4] = v19[4];
    v21[5] = v19[5];
    v21[0] = v19[0];
    v21[1] = v19[1];
    v10 = *(void **)(v1 + *(int *)(v7 + 28));
    if (!v10)
    {
LABEL_2:
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
LABEL_8:
      v15 = objc_msgSend((id)objc_opt_self(), sel_lightyears);
      sub_23B97CD2C();
      sub_23BB88678();
      return sub_23B989D60((uint64_t)v6, &qword_256A5AA58);
    }
    v18 = v10;
    sub_23B9BE3C8(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE15C);
    v11 = v10;
    sub_23B9BE478(&v18, (void **)v21, (uint64_t)v6);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);

  }
  sub_23B9BE3C8(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE424);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
    goto LABEL_8;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v6, v13);
}

_QWORD *initializeBufferWithCopyOfBuffer for PersonInfo(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  id v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void *v93;
  void (*v94)(char *, _QWORD, uint64_t, uint64_t);
  id v95;
  id v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, _QWORD, uint64_t, uint64_t);
  id v114;
  id v115;
  uint64_t v117;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v122;
  void *v123;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  v7 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = v10[1];
    *v9 = *v10;
    v9[1] = v12;
    *((_BYTE *)v9 + 16) = *((_BYTE *)v10 + 16);
    v13 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v14 = v13[5];
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v122 = v13;
    if (EnumCaseMultiPayload == 2)
    {
      v23 = sub_23BB88984();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v16, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v15, v16, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v15, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload();
      v13 = v122;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v26 = sub_23BB88984();
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v26))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v15, v16, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v15, 0, 1, v26);
        }
        v13 = v122;
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_25;
        }
        v19 = sub_23BB88984();
        v20 = *(_QWORD *)(v19 - 8);
        v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        v117 = v20;
        if (v118(v16, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v15, v16, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
        }
        v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        __dst = &v15[v29];
        v30 = &v16[v29];
        if (v118(&v16[v29], 1, v19))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
          memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v117 + 16))(__dst, v30, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(__dst, 0, 1, v19);
        }
        v13 = v122;
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_25:
    v32 = v13[6];
    v33 = (char *)v9 + v32;
    v34 = (char *)v10 + v32;
    v35 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v36 = swift_getEnumCaseMultiPayload();
    if (v36 == 1)
    {
      v40 = sub_23BB88984();
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v34, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v33, v34, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v33, 0, 1, v40);
      }
      v13 = v122;
    }
    else
    {
      if (v36)
      {
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_40:
        v47 = v13[7];
        v48 = (char *)v9 + v47;
        v49 = (char *)v10 + v47;
        *(_QWORD *)v48 = *(_QWORD *)v49;
        v48[8] = v49[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_41;
      }
      v37 = sub_23BB88984();
      v38 = *(_QWORD *)(v37 - 8);
      __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      v119 = v38;
      if (__dsta(v34, 1, v37))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v33, v34, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v37);
      }
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v44 = &v33[v43];
      v45 = &v34[v43];
      if (__dsta(v45, 1, v37))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v44, v45, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v44, 0, 1, v37);
      }
      v13 = v122;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_40;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_41:
  v50 = a3[6];
  v51 = (char *)v4 + v50;
  v52 = (char *)a2 + v50;
  v53 = (void *)*((_QWORD *)v52 + 1);
  if (v53 == (void *)1)
  {
    v54 = *((_OWORD *)v52 + 7);
    *((_OWORD *)v51 + 6) = *((_OWORD *)v52 + 6);
    *((_OWORD *)v51 + 7) = v54;
    *((_QWORD *)v51 + 16) = *((_QWORD *)v52 + 16);
    v55 = *((_OWORD *)v52 + 3);
    *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
    *((_OWORD *)v51 + 3) = v55;
    v56 = *((_OWORD *)v52 + 5);
    *((_OWORD *)v51 + 4) = *((_OWORD *)v52 + 4);
    *((_OWORD *)v51 + 5) = v56;
    v57 = *((_OWORD *)v52 + 1);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *((_OWORD *)v51 + 1) = v57;
  }
  else
  {
    *v51 = *v52;
    if (v53)
    {
      *((_QWORD *)v51 + 1) = v53;
      v51[16] = v52[16];
      v58 = *((_QWORD *)v52 + 4);
      *((_QWORD *)v51 + 3) = *((_QWORD *)v52 + 3);
      *((_QWORD *)v51 + 4) = v58;
      v59 = *((_QWORD *)v52 + 6);
      *((_QWORD *)v51 + 5) = *((_QWORD *)v52 + 5);
      *((_QWORD *)v51 + 6) = v59;
      v60 = *((_QWORD *)v52 + 8);
      *((_QWORD *)v51 + 7) = *((_QWORD *)v52 + 7);
      *((_QWORD *)v51 + 8) = v60;
      v61 = *((_QWORD *)v52 + 10);
      *((_QWORD *)v51 + 9) = *((_QWORD *)v52 + 9);
      *((_QWORD *)v51 + 10) = v61;
      v62 = *((_QWORD *)v52 + 12);
      *((_QWORD *)v51 + 11) = *((_QWORD *)v52 + 11);
      *((_QWORD *)v51 + 12) = v62;
      v63 = *((_QWORD *)v52 + 14);
      *((_QWORD *)v51 + 13) = *((_QWORD *)v52 + 13);
      *((_QWORD *)v51 + 14) = v63;
      v64 = *((_QWORD *)v52 + 16);
      *((_QWORD *)v51 + 15) = *((_QWORD *)v52 + 15);
      *((_QWORD *)v51 + 16) = v64;
      v65 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v66 = *(_OWORD *)(v52 + 88);
      *(_OWORD *)(v51 + 72) = *(_OWORD *)(v52 + 72);
      *(_OWORD *)(v51 + 88) = v66;
      v67 = *(_OWORD *)(v52 + 120);
      *(_OWORD *)(v51 + 104) = *(_OWORD *)(v52 + 104);
      *(_OWORD *)(v51 + 120) = v67;
      v68 = *(_OWORD *)(v52 + 24);
      *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
      *(_OWORD *)(v51 + 24) = v68;
      v69 = *(_OWORD *)(v52 + 56);
      *(_OWORD *)(v51 + 40) = *(_OWORD *)(v52 + 40);
      *(_OWORD *)(v51 + 56) = v69;
    }
  }
  v70 = a3[7];
  v71 = a3[8];
  v72 = *(void **)((char *)a2 + v70);
  *(_QWORD *)((char *)v4 + v70) = v72;
  v73 = *(void **)((char *)a2 + v71);
  *(_QWORD *)((char *)v4 + v71) = v73;
  v74 = a3[9];
  v75 = (char *)v4 + v74;
  v76 = (char *)a2 + v74;
  v77 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
  v80 = v72;
  v81 = v73;
  if (v79(v76, 1, v77))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    v83 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v76, 1, v83))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v86 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v75, v76, v86);
      v87 = *(int *)(v83 + 20);
      v88 = *(void **)&v76[v87];
      *(_QWORD *)&v75[v87] = v88;
      v89 = *(int *)(v83 + 24);
      v90 = &v75[v89];
      v91 = &v76[v89];
      v92 = *((_QWORD *)v91 + 1);
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *((_QWORD *)v90 + 1) = v92;
      v93 = (void *)*((_QWORD *)v91 + 2);
      *((_QWORD *)v90 + 2) = v93;
      v94 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56);
      v95 = v88;
      swift_bridgeObjectRetain();
      v96 = v93;
      v94(v75, 0, 1, v83);
    }
    v97 = *(int *)(v77 + 20);
    v98 = &v75[v97];
    v99 = &v76[v97];
    v100 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v101 = *(_QWORD *)(v100 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      v103 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v98, v99, v103);
      v104 = *(int *)(v83 + 20);
      v105 = *(void **)&v99[v104];
      *(_QWORD *)&v98[v104] = v105;
      v106 = *(int *)(v83 + 24);
      v107 = &v98[v106];
      v108 = &v99[v106];
      v109 = *((_QWORD *)v108 + 1);
      *(_QWORD *)v107 = *(_QWORD *)v108;
      *((_QWORD *)v107 + 1) = v109;
      v123 = (void *)*((_QWORD *)v108 + 2);
      *((_QWORD *)v107 + 2) = v123;
      v110 = *(int *)(v100 + 20);
      v111 = &v98[v110];
      v112 = &v99[v110];
      *(_OWORD *)v111 = *(_OWORD *)v112;
      *((_QWORD *)v111 + 2) = *((_QWORD *)v112 + 2);
      v113 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56);
      v114 = v105;
      swift_bridgeObjectRetain();
      v115 = v123;
      v113(v98, 0, 1, v100);
    }
    v75[*(int *)(v77 + 24)] = v76[*(int *)(v77 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  return v4;
}

void destroy for PersonInfo(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    goto LABEL_19;
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v6 = v4 + *(int *)(v5 + 20);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
      goto LABEL_11;
    v8 = sub_23BB88984();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v6, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (v10(v6, 1, v8))
      goto LABEL_11;
    goto LABEL_10;
  }
  v8 = sub_23BB88984();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
LABEL_10:
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
LABEL_11:
  v11 = v4 + *(int *)(v5 + 24);
  type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v12 = swift_getEnumCaseMultiPayload();
  if (v12 == 1)
  {
    v13 = sub_23BB88984();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      goto LABEL_19;
    goto LABEL_18;
  }
  if (!v12)
  {
    v13 = sub_23BB88984();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v11, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    v11 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    if (!v15(v11, 1, v13))
LABEL_18:
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
  }
LABEL_19:
  v16 = *(void **)(a1 + a2[6] + 8);
  if ((unint64_t)v16 >= 2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v17 = a1 + a2[9];
  v18 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
  {
    v19 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v17, 1, v19))
    {
      v20 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v17, v20);

      v21 = v17 + *(int *)(v19 + 24);
      swift_bridgeObjectRelease();

    }
    v22 = v17 + *(int *)(v18 + 20);
    v23 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
    {
      v24 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);

      v25 = v22 + *(int *)(v19 + 24);
      swift_bridgeObjectRelease();

    }
  }
}

uint64_t initializeWithCopy for PersonInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void *v91;
  void (*v92)(char *, _QWORD, uint64_t, uint64_t);
  id v93;
  id v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void (*v111)(char *, _QWORD, uint64_t, uint64_t);
  id v112;
  id v113;
  uint64_t v115;
  unsigned int (*v116)(char *, uint64_t, uint64_t);
  uint64_t v117;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v120;
  void *v121;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_39;
  }
  v11 = v9[1];
  *v8 = *v9;
  v8[1] = v11;
  *((_BYTE *)v8 + 16) = *((_BYTE *)v9 + 16);
  v12 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v13 = v12[5];
  v14 = (char *)v8 + v13;
  v15 = (char *)v9 + v13;
  v16 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v120 = v12;
  if (EnumCaseMultiPayload == 2)
  {
    v21 = sub_23BB88984();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v14, v15, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v14, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
    v12 = v120;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v24 = sub_23BB88984();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v14, v15, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v24);
      }
      v12 = v120;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        goto LABEL_23;
      }
      v18 = sub_23BB88984();
      v19 = *(_QWORD *)(v18 - 8);
      v116 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      v115 = v19;
      if (v116(v15, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v15, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
      }
      v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      __dst = &v14[v27];
      v28 = &v15[v27];
      if (v116(&v15[v27], 1, v18))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(__dst, v28, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(__dst, 0, 1, v18);
      }
      v12 = v120;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  v30 = v12[6];
  v31 = (char *)v8 + v30;
  v32 = (char *)v9 + v30;
  v33 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v34 = swift_getEnumCaseMultiPayload();
  if (v34 == 1)
  {
    v38 = sub_23BB88984();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
    }
    v12 = v120;
    goto LABEL_37;
  }
  if (!v34)
  {
    v35 = sub_23BB88984();
    v36 = *(_QWORD *)(v35 - 8);
    __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    v117 = v36;
    if (__dsta(v32, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v31, v32, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v35);
    }
    v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v42 = &v31[v41];
    v43 = &v32[v41];
    if (__dsta(v43, 1, v35))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v42, v43, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v42, 0, 1, v35);
    }
    v12 = v120;
LABEL_37:
    swift_storeEnumTagMultiPayload();
    goto LABEL_38;
  }
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_38:
  v45 = v12[7];
  v46 = (char *)v8 + v45;
  v47 = (char *)v9 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  swift_storeEnumTagMultiPayload();
LABEL_39:
  v48 = a3[6];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(void **)(v50 + 8);
  if (v51 == (void *)1)
  {
    v52 = *(_OWORD *)(v50 + 112);
    *(_OWORD *)(v49 + 96) = *(_OWORD *)(v50 + 96);
    *(_OWORD *)(v49 + 112) = v52;
    *(_QWORD *)(v49 + 128) = *(_QWORD *)(v50 + 128);
    v53 = *(_OWORD *)(v50 + 48);
    *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
    *(_OWORD *)(v49 + 48) = v53;
    v54 = *(_OWORD *)(v50 + 80);
    *(_OWORD *)(v49 + 64) = *(_OWORD *)(v50 + 64);
    *(_OWORD *)(v49 + 80) = v54;
    v55 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v55;
  }
  else
  {
    *(_BYTE *)v49 = *(_BYTE *)v50;
    if (v51)
    {
      *(_QWORD *)(v49 + 8) = v51;
      *(_BYTE *)(v49 + 16) = *(_BYTE *)(v50 + 16);
      v56 = *(_QWORD *)(v50 + 32);
      *(_QWORD *)(v49 + 24) = *(_QWORD *)(v50 + 24);
      *(_QWORD *)(v49 + 32) = v56;
      v57 = *(_QWORD *)(v50 + 48);
      *(_QWORD *)(v49 + 40) = *(_QWORD *)(v50 + 40);
      *(_QWORD *)(v49 + 48) = v57;
      v58 = *(_QWORD *)(v50 + 64);
      *(_QWORD *)(v49 + 56) = *(_QWORD *)(v50 + 56);
      *(_QWORD *)(v49 + 64) = v58;
      v59 = *(_QWORD *)(v50 + 80);
      *(_QWORD *)(v49 + 72) = *(_QWORD *)(v50 + 72);
      *(_QWORD *)(v49 + 80) = v59;
      v60 = *(_QWORD *)(v50 + 96);
      *(_QWORD *)(v49 + 88) = *(_QWORD *)(v50 + 88);
      *(_QWORD *)(v49 + 96) = v60;
      v61 = *(_QWORD *)(v50 + 112);
      *(_QWORD *)(v49 + 104) = *(_QWORD *)(v50 + 104);
      *(_QWORD *)(v49 + 112) = v61;
      v62 = *(_QWORD *)(v50 + 128);
      *(_QWORD *)(v49 + 120) = *(_QWORD *)(v50 + 120);
      *(_QWORD *)(v49 + 128) = v62;
      v63 = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v64 = *(_OWORD *)(v50 + 88);
      *(_OWORD *)(v49 + 72) = *(_OWORD *)(v50 + 72);
      *(_OWORD *)(v49 + 88) = v64;
      v65 = *(_OWORD *)(v50 + 120);
      *(_OWORD *)(v49 + 104) = *(_OWORD *)(v50 + 104);
      *(_OWORD *)(v49 + 120) = v65;
      v66 = *(_OWORD *)(v50 + 24);
      *(_OWORD *)(v49 + 8) = *(_OWORD *)(v50 + 8);
      *(_OWORD *)(v49 + 24) = v66;
      v67 = *(_OWORD *)(v50 + 56);
      *(_OWORD *)(v49 + 40) = *(_OWORD *)(v50 + 40);
      *(_OWORD *)(v49 + 56) = v67;
    }
  }
  v68 = a3[7];
  v69 = a3[8];
  v70 = *(void **)(a2 + v68);
  *(_QWORD *)(a1 + v68) = v70;
  v71 = *(void **)(a2 + v69);
  *(_QWORD *)(a1 + v69) = v71;
  v72 = a3[9];
  v73 = (char *)(a1 + v72);
  v74 = (char *)(a2 + v72);
  v75 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v76 = *(_QWORD *)(v75 - 8);
  v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
  v78 = v70;
  v79 = v71;
  if (v77(v74, 1, v75))
  {
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    v81 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v82 = *(_QWORD *)(v81 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v74, 1, v81))
    {
      v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      v84 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v73, v74, v84);
      v85 = *(int *)(v81 + 20);
      v86 = *(void **)&v74[v85];
      *(_QWORD *)&v73[v85] = v86;
      v87 = *(int *)(v81 + 24);
      v88 = &v73[v87];
      v89 = &v74[v87];
      v90 = *((_QWORD *)v89 + 1);
      *(_QWORD *)v88 = *(_QWORD *)v89;
      *((_QWORD *)v88 + 1) = v90;
      v91 = (void *)*((_QWORD *)v89 + 2);
      *((_QWORD *)v88 + 2) = v91;
      v92 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56);
      v93 = v86;
      swift_bridgeObjectRetain();
      v94 = v91;
      v92(v73, 0, 1, v81);
    }
    v95 = *(int *)(v75 + 20);
    v96 = &v73[v95];
    v97 = &v74[v95];
    v98 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v99 = *(_QWORD *)(v98 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
    {
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      v101 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v96, v97, v101);
      v102 = *(int *)(v81 + 20);
      v103 = *(void **)&v97[v102];
      *(_QWORD *)&v96[v102] = v103;
      v104 = *(int *)(v81 + 24);
      v105 = &v96[v104];
      v106 = &v97[v104];
      v107 = *((_QWORD *)v106 + 1);
      *(_QWORD *)v105 = *(_QWORD *)v106;
      *((_QWORD *)v105 + 1) = v107;
      v121 = (void *)*((_QWORD *)v106 + 2);
      *((_QWORD *)v105 + 2) = v121;
      v108 = *(int *)(v98 + 20);
      v109 = &v96[v108];
      v110 = &v97[v108];
      *(_OWORD *)v109 = *(_OWORD *)v110;
      *((_QWORD *)v109 + 2) = *((_QWORD *)v110 + 2);
      v111 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56);
      v112 = v103;
      swift_bridgeObjectRetain();
      v113 = v121;
      v111(v96, 0, 1, v98);
    }
    v73[*(int *)(v75 + 24)] = v74[*(int *)(v75 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  return a1;
}

uint64_t assignWithCopy for PersonInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  void *v68;
  id v69;
  id v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  void *v84;
  void *v85;
  id v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(_BYTE *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(_BYTE *, uint64_t, uint64_t);
  int v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  void *v114;
  void (*v115)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  void *v124;
  void (*v125)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v126;
  id v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, _QWORD, uint64_t, uint64_t);
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(char *, uint64_t, uint64_t);
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  void *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  void (*v167)(char *, _QWORD, uint64_t, uint64_t);
  id v168;
  id v169;
  uint64_t v170;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  void *v175;
  id v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  void *v180;
  void *v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  void *v186;
  id v187;
  uint64_t v188;
  char *v189;
  char *v190;
  void *v191;
  void *v192;
  id v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  unsigned int (*v198)(char *, uint64_t, uint64_t);
  uint64_t v199;
  int *v200;
  int *v201;
  uint64_t v202;
  void *v203;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_23B989D9C(a1 + v6, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      goto LABEL_40;
    }
    v201 = a3;
    *v7 = *v8;
    v7[1] = v8[1];
    *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
    v10 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v200 = v10;
    if (EnumCaseMultiPayload == 2)
    {
      v19 = sub_23BB88984();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v12, v13, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
      }
      v10 = v200;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v22 = sub_23BB88984();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v12, v13, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
      }
      v10 = v200;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        goto LABEL_24;
      }
      v16 = sub_23BB88984();
      v17 = *(_QWORD *)(v16 - 8);
      v197 = v17;
      v198 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      if (v198(v13, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v13, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      }
      v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v26 = &v12[v25];
      v27 = &v13[v25];
      if (v198(&v13[v25], 1, v16))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v26, v27, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v26, 0, 1, v16);
      }
      v10 = v200;
    }
    swift_storeEnumTagMultiPayload();
LABEL_24:
    v29 = v10[6];
    v30 = (char *)v7 + v29;
    v31 = (char *)v8 + v29;
    v32 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v33 = swift_getEnumCaseMultiPayload();
    if (v33 == 1)
    {
      v38 = sub_23BB88984();
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v31, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v30, v31, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v30, 0, 1, v38);
      }
      v10 = v200;
      a3 = v201;
    }
    else
    {
      if (v33)
      {
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        a3 = v201;
LABEL_39:
        v45 = v10[7];
        v46 = (char *)v7 + v45;
        v47 = (char *)v8 + v45;
        v48 = *(_QWORD *)v47;
        v46[8] = v47[8];
        *(_QWORD *)v46 = v48;
        swift_storeEnumTagMultiPayload();
        goto LABEL_40;
      }
      v34 = sub_23BB88984();
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      v199 = v35;
      if (v36(v31, 1, v34))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v30, v31, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
      }
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v42 = &v30[v41];
      v43 = &v31[v41];
      if (v36(v43, 1, v34))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v199 + 16))(v42, v43, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v42, 0, 1, v34);
      }
      v10 = v200;
      a3 = v201;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
LABEL_40:
  v49 = a3[6];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = a1 + v49 + 8;
  v53 = *(id *)v52;
  v55 = a2 + v49 + 8;
  v54 = *(_QWORD *)v55;
  if (*(_QWORD *)v52 == 1)
  {
    if (v54 == 1)
    {
      *(_OWORD *)v50 = *(_OWORD *)v51;
      v56 = *(_OWORD *)(v51 + 16);
      v57 = *(_OWORD *)(v51 + 32);
      v58 = *(_OWORD *)(v51 + 64);
      *(_OWORD *)(v50 + 48) = *(_OWORD *)(v51 + 48);
      *(_OWORD *)(v50 + 64) = v58;
      *(_OWORD *)(v50 + 16) = v56;
      *(_OWORD *)(v50 + 32) = v57;
      v59 = *(_OWORD *)(v51 + 80);
      v60 = *(_OWORD *)(v51 + 96);
      v61 = *(_OWORD *)(v51 + 112);
      *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
      *(_OWORD *)(v50 + 96) = v60;
      *(_OWORD *)(v50 + 112) = v61;
      *(_OWORD *)(v50 + 80) = v59;
      goto LABEL_53;
    }
    *(_BYTE *)v50 = *(_BYTE *)v51;
    v68 = *(void **)(v51 + 8);
    if (v68)
      goto LABEL_46;
LABEL_51:
    v71 = *(_OWORD *)v55;
    v72 = *(_OWORD *)(v55 + 16);
    v73 = *(_OWORD *)(v55 + 48);
    *(_OWORD *)(v52 + 32) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v52 + 48) = v73;
    *(_OWORD *)v52 = v71;
    *(_OWORD *)(v52 + 16) = v72;
    v74 = *(_OWORD *)(v55 + 64);
    v75 = *(_OWORD *)(v55 + 80);
    v76 = *(_OWORD *)(v55 + 112);
    *(_OWORD *)(v52 + 96) = *(_OWORD *)(v55 + 96);
    *(_OWORD *)(v52 + 112) = v76;
    *(_OWORD *)(v52 + 64) = v74;
    *(_OWORD *)(v52 + 80) = v75;
    goto LABEL_53;
  }
  if (v54 == 1)
  {
    sub_23B9C1B2C(v50);
    *(_OWORD *)v50 = *(_OWORD *)v51;
    v62 = *(_OWORD *)(v51 + 64);
    v64 = *(_OWORD *)(v51 + 16);
    v63 = *(_OWORD *)(v51 + 32);
    *(_OWORD *)(v50 + 48) = *(_OWORD *)(v51 + 48);
    *(_OWORD *)(v50 + 64) = v62;
    *(_OWORD *)(v50 + 16) = v64;
    *(_OWORD *)(v50 + 32) = v63;
    v66 = *(_OWORD *)(v51 + 96);
    v65 = *(_OWORD *)(v51 + 112);
    v67 = *(_OWORD *)(v51 + 80);
    *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
    *(_OWORD *)(v50 + 96) = v66;
    *(_OWORD *)(v50 + 112) = v65;
    *(_OWORD *)(v50 + 80) = v67;
    goto LABEL_53;
  }
  *(_BYTE *)v50 = *(_BYTE *)v51;
  v68 = *(void **)(v51 + 8);
  if (!v53)
  {
    if (v68)
    {
LABEL_46:
      *(_QWORD *)(v50 + 8) = v68;
      *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
      *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
      *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
      *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
      *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
      *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
      *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
      *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
      *(_QWORD *)(v50 + 80) = *(_QWORD *)(v51 + 80);
      *(_QWORD *)(v50 + 88) = *(_QWORD *)(v51 + 88);
      *(_QWORD *)(v50 + 96) = *(_QWORD *)(v51 + 96);
      *(_QWORD *)(v50 + 104) = *(_QWORD *)(v51 + 104);
      *(_QWORD *)(v50 + 112) = *(_QWORD *)(v51 + 112);
      *(_QWORD *)(v50 + 120) = *(_QWORD *)(v51 + 120);
      *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
      v69 = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v68)
  {
    *(_QWORD *)(v50 + 8) = v68;
    v70 = v68;

    *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
    *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
    *(_QWORD *)(v50 + 32) = *(_QWORD *)(v51 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 40) = *(_QWORD *)(v51 + 40);
    *(_QWORD *)(v50 + 48) = *(_QWORD *)(v51 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 56) = *(_QWORD *)(v51 + 56);
    *(_QWORD *)(v50 + 64) = *(_QWORD *)(v51 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 72) = *(_QWORD *)(v51 + 72);
    *(_QWORD *)(v50 + 80) = *(_QWORD *)(v51 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 88) = *(_QWORD *)(v51 + 88);
    *(_QWORD *)(v50 + 96) = *(_QWORD *)(v51 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 104) = *(_QWORD *)(v51 + 104);
    *(_QWORD *)(v50 + 112) = *(_QWORD *)(v51 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 120) = *(_QWORD *)(v51 + 120);
    *(_QWORD *)(v50 + 128) = *(_QWORD *)(v51 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23B9C1AF8((id *)v52);
    v77 = *(_OWORD *)(v55 + 48);
    v79 = *(_OWORD *)v55;
    v78 = *(_OWORD *)(v55 + 16);
    *(_OWORD *)(v52 + 32) = *(_OWORD *)(v55 + 32);
    *(_OWORD *)(v52 + 48) = v77;
    *(_OWORD *)v52 = v79;
    *(_OWORD *)(v52 + 16) = v78;
    v80 = *(_OWORD *)(v55 + 112);
    v82 = *(_OWORD *)(v55 + 64);
    v81 = *(_OWORD *)(v55 + 80);
    *(_OWORD *)(v52 + 96) = *(_OWORD *)(v55 + 96);
    *(_OWORD *)(v52 + 112) = v80;
    *(_OWORD *)(v52 + 64) = v82;
    *(_OWORD *)(v52 + 80) = v81;
  }
LABEL_53:
  v83 = a3[7];
  v84 = *(void **)(a1 + v83);
  v85 = *(void **)(a2 + v83);
  *(_QWORD *)(a1 + v83) = v85;
  v86 = v85;

  v87 = a3[8];
  v88 = *(void **)(a1 + v87);
  v89 = *(void **)(a2 + v87);
  *(_QWORD *)(a1 + v87) = v89;
  v90 = v89;

  v91 = a3[9];
  v92 = (_BYTE *)(a1 + v91);
  v93 = (_BYTE *)(a2 + v91);
  v94 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (!v97)
  {
    if (v98)
    {
      sub_23B989D9C((uint64_t)v92, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_59;
    }
    v103 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v104 = *(_QWORD *)(v103 - 8);
    v105 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v104 + 48);
    v106 = v105(v92, 1, v103);
    v107 = v105(v93, 1, v103);
    v202 = v103;
    if (v106)
    {
      if (!v107)
      {
        v108 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v92, v93, v108);
        v109 = *(int *)(v103 + 20);
        v110 = *(void **)&v93[v109];
        *(_QWORD *)&v92[v109] = v110;
        v111 = *(int *)(v103 + 24);
        v112 = &v92[v111];
        v113 = &v93[v111];
        *v112 = *v113;
        v112[1] = v113[1];
        v114 = (void *)v113[2];
        v112[2] = v114;
        v115 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v104 + 56);
        v116 = v110;
        swift_bridgeObjectRetain();
        v117 = v114;
        v115(v92, 0, 1, v103);
        goto LABEL_71;
      }
    }
    else
    {
      if (!v107)
      {
        v172 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v172 - 8) + 24))(v92, v93, v172);
        v173 = *(int *)(v103 + 20);
        v174 = *(void **)&v93[v173];
        v175 = *(void **)&v92[v173];
        *(_QWORD *)&v92[v173] = v174;
        v176 = v174;

        v177 = *(int *)(v103 + 24);
        v178 = &v92[v177];
        v179 = &v93[v177];
        *v178 = *(_QWORD *)&v93[v177];
        v178[1] = *(_QWORD *)&v93[v177 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v180 = (void *)*((_QWORD *)v179 + 2);
        v181 = (void *)v178[2];
        v178[2] = v180;
        v182 = v180;

LABEL_71:
        v148 = *(int *)(v94 + 20);
        v149 = &v92[v148];
        v150 = &v93[v148];
        v151 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v152 = *(_QWORD *)(v151 - 8);
        v153 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v152 + 48);
        v154 = v153(v149, 1, v151);
        v155 = v153(v150, 1, v151);
        if (v154)
        {
          if (!v155)
          {
            v156 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v149, v150, v156);
            v157 = *(int *)(v202 + 20);
            v158 = *(void **)&v150[v157];
            *(_QWORD *)&v149[v157] = v158;
            v159 = *(int *)(v202 + 24);
            v160 = &v149[v159];
            v161 = &v150[v159];
            *(_QWORD *)v160 = *(_QWORD *)v161;
            *((_QWORD *)v160 + 1) = *((_QWORD *)v161 + 1);
            v162 = (void *)*((_QWORD *)v161 + 2);
            *((_QWORD *)v160 + 2) = v162;
            v163 = *(int *)(v151 + 20);
            v164 = &v149[v163];
            v165 = &v150[v163];
            v166 = *((_QWORD *)v165 + 2);
            *(_OWORD *)v164 = *(_OWORD *)v165;
            *((_QWORD *)v164 + 2) = v166;
            v167 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v152 + 56);
            v168 = v158;
            swift_bridgeObjectRetain();
            v169 = v162;
            v167(v149, 0, 1, v151);
LABEL_77:
            v92[*(int *)(v94 + 24)] = v93[*(int *)(v94 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v155)
          {
            v183 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 24))(v149, v150, v183);
            v184 = *(int *)(v202 + 20);
            v185 = *(void **)&v150[v184];
            v186 = *(void **)&v149[v184];
            *(_QWORD *)&v149[v184] = v185;
            v187 = v185;

            v188 = *(int *)(v202 + 24);
            v189 = &v149[v188];
            v190 = &v150[v188];
            *(_QWORD *)v189 = *(_QWORD *)&v150[v188];
            *((_QWORD *)v189 + 1) = *(_QWORD *)&v150[v188 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v191 = (void *)*((_QWORD *)v190 + 2);
            v192 = (void *)*((_QWORD *)v189 + 2);
            *((_QWORD *)v189 + 2) = v191;
            v193 = v191;

            v194 = *(int *)(v151 + 20);
            v195 = &v149[v194];
            v196 = &v150[v194];
            *v195 = *v196;
            *((_QWORD *)v195 + 1) = *((_QWORD *)v196 + 1);
            *((_QWORD *)v195 + 2) = *((_QWORD *)v196 + 2);
            goto LABEL_77;
          }
          sub_23B989D9C((uint64_t)v149, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
        goto LABEL_77;
      }
      sub_23B989D9C((uint64_t)v92, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    goto LABEL_71;
  }
  if (v98)
  {
LABEL_59:
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    return a1;
  }
  v99 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v100 = *(_QWORD *)(v99 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v100 + 48))(v93, 1, v99))
  {
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
  }
  else
  {
    v118 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v118 - 8) + 16))(v92, v93, v118);
    v119 = *(int *)(v99 + 20);
    v120 = *(void **)&v93[v119];
    *(_QWORD *)&v92[v119] = v120;
    v121 = *(int *)(v99 + 24);
    v122 = &v92[v121];
    v123 = &v93[v121];
    *v122 = *v123;
    v122[1] = v123[1];
    v124 = (void *)v123[2];
    v122[2] = v124;
    v125 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v100 + 56);
    v126 = v120;
    swift_bridgeObjectRetain();
    v127 = v124;
    v125(v92, 0, 1, v99);
  }
  v128 = *(int *)(v94 + 20);
  v129 = &v92[v128];
  v130 = &v93[v128];
  v131 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v132 = *(_QWORD *)(v131 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v130, 1, v131))
  {
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    v134 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16))(v129, v130, v134);
    v135 = *(int *)(v99 + 20);
    v136 = *(void **)&v130[v135];
    *(_QWORD *)&v129[v135] = v136;
    v137 = *(int *)(v99 + 24);
    v138 = &v129[v137];
    v139 = &v130[v137];
    *(_QWORD *)v138 = *(_QWORD *)v139;
    *((_QWORD *)v138 + 1) = *((_QWORD *)v139 + 1);
    v203 = (void *)*((_QWORD *)v139 + 2);
    *((_QWORD *)v138 + 2) = v203;
    v140 = *(int *)(v131 + 20);
    v141 = &v129[v140];
    v142 = &v130[v140];
    v143 = *((_QWORD *)v142 + 2);
    *(_OWORD *)v141 = *(_OWORD *)v142;
    *((_QWORD *)v141 + 2) = v143;
    v144 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56);
    v145 = v136;
    swift_bridgeObjectRetain();
    v146 = v203;
    v144(v129, 0, 1, v131);
  }
  v92[*(int *)(v94 + 24)] = v93[*(int *)(v94 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
  return a1;
}

id *sub_23B9C1AF8(id *a1)
{
  destroy for PublishedLocation(a1);
  return a1;
}

uint64_t sub_23B9C1B2C(uint64_t a1)
{
  _s13LocationStateVwxx(a1);
  return a1;
}

uint64_t initializeWithTake for PersonInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v87;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_39;
  }
  *(_OWORD *)v7 = *(_OWORD *)v8;
  v7[16] = v8[16];
  v10 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v87 = v10;
  if (EnumCaseMultiPayload == 2)
  {
    v19 = sub_23BB88984();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v12, v13, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload();
    v10 = v87;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v22 = sub_23BB88984();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v12, v13, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
      }
      v10 = v87;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        goto LABEL_23;
      }
      v16 = sub_23BB88984();
      v17 = *(_QWORD *)(v16 - 8);
      v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      v82 = v17;
      if (v83(v13, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v13, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      }
      v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      __dst = &v12[v25];
      v26 = &v13[v25];
      if (v83(&v13[v25], 1, v16))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 32))(__dst, v26, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v16);
      }
      v10 = v87;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  v28 = v10[6];
  v29 = &v7[v28];
  v30 = &v8[v28];
  v31 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v32 = swift_getEnumCaseMultiPayload();
  if (v32 == 1)
  {
    v36 = sub_23BB88984();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v30, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v29, v30, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v29, 0, 1, v36);
    }
    v10 = v87;
    goto LABEL_37;
  }
  if (!v32)
  {
    v33 = sub_23BB88984();
    v34 = *(_QWORD *)(v33 - 8);
    __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v84 = v34;
    if (__dsta(v30, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v29, v30, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v29, 0, 1, v33);
    }
    v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v40 = &v29[v39];
    v41 = &v30[v39];
    if (__dsta(v41, 1, v33))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v40, v41, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v40, 0, 1, v33);
    }
    v10 = v87;
LABEL_37:
    swift_storeEnumTagMultiPayload();
    goto LABEL_38;
  }
  memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_38:
  v43 = v10[7];
  v44 = &v7[v43];
  v45 = &v8[v43];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v44[8] = v45[8];
  swift_storeEnumTagMultiPayload();
LABEL_39:
  v46 = a3[6];
  v47 = a3[7];
  v48 = a1 + v46;
  v49 = a2 + v46;
  *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
  v50 = *(_OWORD *)(v49 + 48);
  *(_OWORD *)(v48 + 32) = *(_OWORD *)(v49 + 32);
  *(_OWORD *)(v48 + 48) = v50;
  v51 = *(_OWORD *)(v49 + 112);
  *(_OWORD *)(v48 + 96) = *(_OWORD *)(v49 + 96);
  *(_OWORD *)(v48 + 112) = v51;
  v52 = *(_OWORD *)(v49 + 80);
  *(_OWORD *)(v48 + 64) = *(_OWORD *)(v49 + 64);
  *(_OWORD *)(v48 + 80) = v52;
  v53 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v53;
  *(_QWORD *)(a1 + v47) = *(_QWORD *)(a2 + v47);
  v54 = a3[8];
  v55 = a3[9];
  v56 = (char *)(a1 + v55);
  v57 = (char *)(a2 + v55);
  *(_QWORD *)(a1 + v54) = *(_QWORD *)(a2 + v54);
  v58 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v61 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v62 = *(_QWORD *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v57, 1, v61))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      v64 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v56, v57, v64);
      *(_QWORD *)&v56[*(int *)(v61 + 20)] = *(_QWORD *)&v57[*(int *)(v61 + 20)];
      v65 = *(int *)(v61 + 24);
      v66 = &v56[v65];
      v67 = &v57[v65];
      *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
      *(_OWORD *)v66 = *(_OWORD *)v67;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v56, 0, 1, v61);
    }
    v68 = *(int *)(v58 + 20);
    v69 = &v56[v68];
    v70 = &v57[v68];
    v71 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v72 = *(_QWORD *)(v71 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
    {
      v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      v74 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v69, v70, v74);
      *(_QWORD *)&v69[*(int *)(v61 + 20)] = *(_QWORD *)&v70[*(int *)(v61 + 20)];
      v75 = *(int *)(v61 + 24);
      v76 = &v69[v75];
      v77 = &v70[v75];
      *((_QWORD *)v76 + 2) = *((_QWORD *)v77 + 2);
      *(_OWORD *)v76 = *(_OWORD *)v77;
      v78 = *(int *)(v71 + 20);
      v79 = &v69[v78];
      v80 = &v70[v78];
      *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
      *(_OWORD *)v79 = *(_OWORD *)v80;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    v56[*(int *)(v58 + 24)] = v57[*(int *)(v58 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  return a1;
}

uint64_t assignWithTake for PersonInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_BYTE *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_BYTE *, uint64_t, uint64_t);
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(char *, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  unsigned int (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  int *v152;
  uint64_t v153;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (_BYTE *)(a1 + v7);
    v9 = (_BYTE *)(a2 + v7);
    sub_23B989D9C(a1 + v7, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_40;
    }
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[16] = v9[16];
    v11 = (int *)type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
    v12 = v11[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowerState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v152 = v11;
    if (EnumCaseMultiPayload == 2)
    {
      v20 = sub_23BB88984();
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v13, v14, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
      }
      v11 = v152;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v23 = sub_23BB88984();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v13, v14, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
      }
      v11 = v152;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_24;
      }
      v17 = sub_23BB88984();
      v18 = *(_QWORD *)(v17 - 8);
      v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      v147 = v18;
      if (v148(v14, 1, v17))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v14, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
      }
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      __dst = &v13[v26];
      v27 = &v14[v26];
      if (v148(&v14[v26], 1, v17))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v147 + 32))(__dst, v27, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v147 + 56))(__dst, 0, 1, v17);
      }
      v11 = v152;
    }
    swift_storeEnumTagMultiPayload();
LABEL_24:
    v29 = v11[6];
    v30 = &v8[v29];
    v31 = &v9[v29];
    v32 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
    v33 = swift_getEnumCaseMultiPayload();
    if (v33 == 1)
    {
      v37 = sub_23BB88984();
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, v37))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v30, v31, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v30, 0, 1, v37);
      }
      v11 = v152;
    }
    else
    {
      if (v33)
      {
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_39:
        v44 = v11[7];
        v45 = &v8[v44];
        v46 = &v9[v44];
        *(_QWORD *)v45 = *(_QWORD *)v46;
        v45[8] = v46[8];
        swift_storeEnumTagMultiPayload();
        goto LABEL_40;
      }
      v34 = sub_23BB88984();
      v35 = *(_QWORD *)(v34 - 8);
      __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      v149 = v35;
      if (__dsta(v31, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v30, v31, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v30, 0, 1, v34);
      }
      v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v41 = &v30[v40];
      v42 = &v31[v40];
      if (__dsta(v42, 1, v34))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v41, v42, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v41, 0, 1, v34);
      }
      v11 = v152;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
LABEL_40:
  v47 = a3[6];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v51 = a1 + v47 + 8;
  v50 = *(id *)v51;
  if (*(_QWORD *)v51 == 1)
  {
LABEL_43:
    v53 = *(_OWORD *)(v49 + 112);
    *(_OWORD *)(v48 + 96) = *(_OWORD *)(v49 + 96);
    *(_OWORD *)(v48 + 112) = v53;
    *(_QWORD *)(v48 + 128) = *(_QWORD *)(v49 + 128);
    v54 = *(_OWORD *)(v49 + 48);
    *(_OWORD *)(v48 + 32) = *(_OWORD *)(v49 + 32);
    *(_OWORD *)(v48 + 48) = v54;
    v55 = *(_OWORD *)(v49 + 80);
    *(_OWORD *)(v48 + 64) = *(_OWORD *)(v49 + 64);
    *(_OWORD *)(v48 + 80) = v55;
    v56 = *(_OWORD *)(v49 + 16);
    *(_OWORD *)v48 = *(_OWORD *)v49;
    *(_OWORD *)(v48 + 16) = v56;
    goto LABEL_44;
  }
  v52 = *(_QWORD *)(v49 + 8);
  if (v52 == 1)
  {
    sub_23B9C1B2C(v48);
    goto LABEL_43;
  }
  *(_BYTE *)v48 = *(_BYTE *)v49;
  if (v50)
  {
    if (v52)
    {
      *(_QWORD *)(v48 + 8) = v52;

      *(_BYTE *)(v48 + 16) = *(_BYTE *)(v49 + 16);
      v73 = *(_QWORD *)(v49 + 32);
      *(_QWORD *)(v48 + 24) = *(_QWORD *)(v49 + 24);
      *(_QWORD *)(v48 + 32) = v73;
      swift_bridgeObjectRelease();
      v74 = *(_QWORD *)(v49 + 48);
      *(_QWORD *)(v48 + 40) = *(_QWORD *)(v49 + 40);
      *(_QWORD *)(v48 + 48) = v74;
      swift_bridgeObjectRelease();
      v75 = *(_QWORD *)(v49 + 64);
      *(_QWORD *)(v48 + 56) = *(_QWORD *)(v49 + 56);
      *(_QWORD *)(v48 + 64) = v75;
      swift_bridgeObjectRelease();
      v76 = *(_QWORD *)(v49 + 80);
      *(_QWORD *)(v48 + 72) = *(_QWORD *)(v49 + 72);
      *(_QWORD *)(v48 + 80) = v76;
      swift_bridgeObjectRelease();
      v77 = *(_QWORD *)(v49 + 96);
      *(_QWORD *)(v48 + 88) = *(_QWORD *)(v49 + 88);
      *(_QWORD *)(v48 + 96) = v77;
      swift_bridgeObjectRelease();
      v78 = *(_QWORD *)(v49 + 112);
      *(_QWORD *)(v48 + 104) = *(_QWORD *)(v49 + 104);
      *(_QWORD *)(v48 + 112) = v78;
      swift_bridgeObjectRelease();
      v79 = *(_QWORD *)(v49 + 128);
      *(_QWORD *)(v48 + 120) = *(_QWORD *)(v49 + 120);
      *(_QWORD *)(v48 + 128) = v79;
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    sub_23B9C1AF8((id *)v51);
  }
  v106 = *(_OWORD *)(v49 + 88);
  *(_OWORD *)(v51 + 64) = *(_OWORD *)(v49 + 72);
  *(_OWORD *)(v51 + 80) = v106;
  v107 = *(_OWORD *)(v49 + 120);
  *(_OWORD *)(v51 + 96) = *(_OWORD *)(v49 + 104);
  *(_OWORD *)(v51 + 112) = v107;
  v108 = *(_OWORD *)(v49 + 24);
  *(_OWORD *)v51 = *(_OWORD *)(v49 + 8);
  *(_OWORD *)(v51 + 16) = v108;
  v109 = *(_OWORD *)(v49 + 56);
  *(_OWORD *)(v51 + 32) = *(_OWORD *)(v49 + 40);
  *(_OWORD *)(v51 + 48) = v109;
LABEL_44:
  v57 = a3[7];
  v58 = *(void **)(a1 + v57);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);

  v59 = a3[8];
  v60 = *(void **)(a1 + v59);
  *(_QWORD *)(a1 + v59) = *(_QWORD *)(a2 + v59);

  v61 = a3[9];
  v62 = (_BYTE *)(a1 + v61);
  v63 = (_BYTE *)(a2 + v61);
  v64 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (v68)
    {
      sub_23B989D9C((uint64_t)v62, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_50;
    }
    v80 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v81 = *(_QWORD *)(v80 - 8);
    v82 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v81 + 48);
    v83 = v82(v62, 1, v80);
    v84 = v82(v63, 1, v80);
    v153 = v80;
    if (v83)
    {
      if (!v84)
      {
        v85 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v62, v63, v85);
        *(_QWORD *)&v62[*(int *)(v80 + 20)] = *(_QWORD *)&v63[*(int *)(v80 + 20)];
        v86 = *(int *)(v80 + 24);
        v87 = &v62[v86];
        v88 = &v63[v86];
        *((_QWORD *)v87 + 2) = *((_QWORD *)v88 + 2);
        *(_OWORD *)v87 = *(_OWORD *)v88;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v62, 0, 1, v80);
        goto LABEL_67;
      }
    }
    else
    {
      if (!v84)
      {
        v128 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v128 - 8) + 40))(v62, v63, v128);
        v129 = *(int *)(v80 + 20);
        v130 = *(void **)&v62[v129];
        *(_QWORD *)&v62[v129] = *(_QWORD *)&v63[v129];

        v131 = *(int *)(v80 + 24);
        v132 = &v62[v131];
        v133 = &v63[v131];
        v134 = *(_QWORD *)&v63[v131 + 8];
        *v132 = *(_QWORD *)&v63[v131];
        v132[1] = v134;
        swift_bridgeObjectRelease();
        v135 = (void *)v132[2];
        v132[2] = *((_QWORD *)v133 + 2);

LABEL_67:
        v111 = *(int *)(v64 + 20);
        v112 = &v62[v111];
        v113 = &v63[v111];
        v114 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v115 = *(_QWORD *)(v114 - 8);
        v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
        v117 = v116(v112, 1, v114);
        v118 = v116(v113, 1, v114);
        if (v117)
        {
          if (!v118)
          {
            v119 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v112, v113, v119);
            *(_QWORD *)&v112[*(int *)(v153 + 20)] = *(_QWORD *)&v113[*(int *)(v153 + 20)];
            v120 = *(int *)(v153 + 24);
            v121 = &v112[v120];
            v122 = &v113[v120];
            *((_QWORD *)v121 + 2) = *((_QWORD *)v122 + 2);
            *(_OWORD *)v121 = *(_OWORD *)v122;
            v123 = *(int *)(v114 + 20);
            v124 = &v112[v123];
            v125 = &v113[v123];
            *((_QWORD *)v124 + 2) = *((_QWORD *)v125 + 2);
            *(_OWORD *)v124 = *(_OWORD *)v125;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
LABEL_73:
            v62[*(int *)(v64 + 24)] = v63[*(int *)(v64 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v118)
          {
            v136 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 40))(v112, v113, v136);
            v137 = *(int *)(v153 + 20);
            v138 = *(void **)&v112[v137];
            *(_QWORD *)&v112[v137] = *(_QWORD *)&v113[v137];

            v139 = *(int *)(v153 + 24);
            v140 = &v112[v139];
            v141 = &v113[v139];
            v142 = *(_QWORD *)&v113[v139 + 8];
            *(_QWORD *)v140 = *(_QWORD *)&v113[v139];
            *((_QWORD *)v140 + 1) = v142;
            swift_bridgeObjectRelease();
            v143 = (void *)*((_QWORD *)v140 + 2);
            *((_QWORD *)v140 + 2) = *((_QWORD *)v141 + 2);

            v144 = *(int *)(v114 + 20);
            v145 = &v112[v144];
            v146 = &v113[v144];
            *v145 = *v146;
            *(_OWORD *)(v145 + 8) = *(_OWORD *)(v146 + 8);
            goto LABEL_73;
          }
          sub_23B989D9C((uint64_t)v112, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        goto LABEL_73;
      }
      sub_23B989D9C((uint64_t)v62, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_67;
  }
  if (v68)
  {
LABEL_50:
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    return a1;
  }
  v69 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v70 = *(_QWORD *)(v69 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v70 + 48))(v63, 1, v69))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    v89 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v62, v63, v89);
    *(_QWORD *)&v62[*(int *)(v69 + 20)] = *(_QWORD *)&v63[*(int *)(v69 + 20)];
    v90 = *(int *)(v69 + 24);
    v91 = &v62[v90];
    v92 = &v63[v90];
    *((_QWORD *)v91 + 2) = *((_QWORD *)v92 + 2);
    *(_OWORD *)v91 = *(_OWORD *)v92;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v62, 0, 1, v69);
  }
  v93 = *(int *)(v64 + 20);
  v94 = &v62[v93];
  v95 = &v63[v93];
  v96 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v97 = *(_QWORD *)(v96 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    v99 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v94, v95, v99);
    *(_QWORD *)&v94[*(int *)(v69 + 20)] = *(_QWORD *)&v95[*(int *)(v69 + 20)];
    v100 = *(int *)(v69 + 24);
    v101 = &v94[v100];
    v102 = &v95[v100];
    *((_QWORD *)v101 + 2) = *((_QWORD *)v102 + 2);
    *(_OWORD *)v101 = *(_OWORD *)v102;
    v103 = *(int *)(v96 + 20);
    v104 = &v94[v103];
    v105 = &v95[v103];
    *((_QWORD *)v104 + 2) = *((_QWORD *)v105 + 2);
    *(_OWORD *)v104 = *(_OWORD *)v105;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
  }
  v62[*(int *)(v64 + 24)] = v63[*(int *)(v64 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9C2EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PersonInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9C2F9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_23B9C303C()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for PeopleRelationshipsProvider.RelationshipState(319);
  if (v0 <= 0x3F)
  {
    sub_23B9C30E0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23B9C30E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A5AAD0)
  {
    type metadata accessor for MapsDirectionsProvider.DirectionsState(255);
    v0 = sub_23BB8ACA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A5AAD0);
  }
}

id *sub_23B9C3134(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_23B9C315C(id *a1)
{

  return a1;
}

__n128 PlatterWithIcon.init(icon:style:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v3;
  __n128 result;
  __n128 v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v3;
  result = a2[1];
  v5 = a2[2];
  *(__n128 *)(a3 + 56) = result;
  v6 = a2->n128_u64[0];
  v7 = a2->n128_i8[8];
  v8 = a2[3].n128_i64[0];
  *(_BYTE *)(a3 + 32) = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a3 + 40) = v6;
  *(_BYTE *)(a3 + 48) = v7;
  *(__n128 *)(a3 + 72) = v5;
  *(_QWORD *)(a3 + 88) = v8;
  return result;
}

uint64_t PlatterWithIcon.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB10);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB18);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)v41 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB20);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB28);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v1[1];
  v25 = v1[2];
  v24 = v1[3];
  v26 = *((_BYTE *)v1 + 32);
  v27 = v1[5];
  v29 = v1[7];
  v28 = v1[8];
  v31 = v1[9];
  v30 = v1[10];
  v32 = v1[11];
  if (*((_BYTE *)v1 + 48) == 1)
  {
    v42 = *v1;
    v43 = v23;
    v44 = v25;
    v45 = v24;
    v46 = v26;
    v47 = v27;
    v48 = 1;
    v49 = v29;
    v50 = v28;
    v51 = v31;
    v52 = v30;
    v53 = v32;
    sub_23B9C34F0((uint64_t)v22);
    sub_23B989EFC((uint64_t)v22, (uint64_t)v18, &qword_256A5AB28);
    swift_storeEnumTagMultiPayload();
    sub_23B9C3954();
    sub_23B9C3B7C();
    sub_23BB89944();
    v33 = (uint64_t)v22;
    v34 = &qword_256A5AB28;
  }
  else
  {
    v42 = *v1;
    v43 = v23;
    v44 = v25;
    v45 = v24;
    v46 = v26;
    v47 = v27;
    v48 = 0;
    v49 = v29;
    v50 = v28;
    v51 = v31;
    v52 = v30;
    v53 = v32;
    sub_23B9C34F0((uint64_t)v22);
    KeyPath = swift_getKeyPath();
    v36 = sub_23BB8A2B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v6, 1, 1, v36);
    v37 = *(int *)(v7 + 36);
    v41[1] = v7;
    v38 = (uint64_t *)&v11[v37];
    v39 = (uint64_t)&v11[v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB30) + 28)];
    v41[0] = a1;
    sub_23B989EFC((uint64_t)v6, v39, &qword_256A5AB10);
    *v38 = KeyPath;
    sub_23B989EFC((uint64_t)v22, (uint64_t)v11, &qword_256A5AB28);
    sub_23B989D60((uint64_t)v6, &qword_256A5AB10);
    sub_23B989D60((uint64_t)v22, &qword_256A5AB28);
    sub_23B990D24((uint64_t)v11, (uint64_t)v14, &qword_256A5AB18);
    sub_23B989EFC((uint64_t)v14, (uint64_t)v18, &qword_256A5AB18);
    swift_storeEnumTagMultiPayload();
    sub_23B9C3954();
    sub_23B9C3B7C();
    sub_23BB89944();
    v33 = (uint64_t)v14;
    v34 = &qword_256A5AB18;
  }
  return sub_23B989D60(v33, v34);
}

uint64_t sub_23B9C34F0@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _OWORD v74[2];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _OWORD v79[2];
  __int128 v80;
  __int128 v81;
  _BYTE v82[64];
  _BYTE v83[16];
  uint64_t v84;

  v55 = a1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB98);
  MEMORY[0x24BDAC7A8](v54, v2);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB48);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v53 = (uint64_t)&v48 - v11;
  v12 = v1[3];
  v13 = v1[1];
  *(_OWORD *)v82 = v1[2];
  *(_OWORD *)&v82[16] = v12;
  v14 = v1[3];
  v15 = v1[5];
  *(_OWORD *)&v82[32] = v1[4];
  *(_OWORD *)&v82[48] = v15;
  v16 = v1[1];
  v80 = *v1;
  v81 = v16;
  v77 = *(_OWORD *)v82;
  v78 = v14;
  v17 = v1[5];
  v79[0] = *(_OWORD *)&v82[32];
  v79[1] = v17;
  v75 = v80;
  v76 = v13;
  sub_23B9C60EC((uint64_t)&v80);
  sub_23B9C4180((uint64_t)&v57);
  v48 = v57;
  v49 = v58;
  v50 = v59;
  v51 = v60;
  v52 = v61;
  v18 = v62;
  v19 = v63;
  v20 = sub_23BB8A2F8();
  v22 = v21;
  sub_23B9C4370((uint64_t)&v80, (uint64_t)v4);
  v23 = (uint64_t *)&v4[*(int *)(v54 + 36)];
  *v23 = v20;
  v23[1] = v22;
  sub_23B989EFC((uint64_t)v4, (uint64_t)&v9[*(int *)(v5 + 36)], &qword_256A5AB98);
  v24 = v49;
  *(_OWORD *)v9 = v48;
  *((_OWORD *)v9 + 1) = v24;
  v25 = v51;
  *((_OWORD *)v9 + 2) = v50;
  *((_OWORD *)v9 + 3) = v25;
  *((_OWORD *)v9 + 4) = v52;
  *((_OWORD *)v9 + 5) = v18;
  v9[96] = v19;
  sub_23B989D60((uint64_t)v4, &qword_256A5AB98);
  v26 = v53;
  sub_23B990D24((uint64_t)v9, v53, &qword_256A5AB48);
  sub_23B9C614C((uint64_t)&v80);
  v59 = *(_OWORD *)v82;
  v60 = *(_OWORD *)&v82[16];
  v61 = *(_OWORD *)&v82[32];
  v62 = *(_OWORD *)&v82[48];
  v57 = v80;
  v58 = v81;
  sub_23B9C3C00((uint64_t)&v70);
  v77 = v72;
  v78 = v73;
  v79[0] = v74[0];
  *(_OWORD *)((char *)v79 + 10) = *(_OWORD *)((char *)v74 + 10);
  v75 = v70;
  v76 = v71;
  sub_23BB8A2F8();
  sub_23BA296F0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v57, 0.0, 1, INFINITY, 0);
  sub_23B9C61AC((uint64_t)&v75);
  v70 = *(_OWORD *)&v82[8];
  v71 = *(_OWORD *)&v82[24];
  v72 = *(_OWORD *)&v82[40];
  *(_QWORD *)&v73 = *(_QWORD *)&v82[56];
  sub_23B990D24((uint64_t)&v71, (uint64_t)v83, &qword_256A5AC00);
  sub_23B990D24((uint64_t)v83, (uint64_t)&v84, &qword_256A5AC00);
  LOBYTE(v20) = sub_23BB89BA8();
  sub_23BB892A8();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v56 = 0;
  v35 = sub_23BB8A2F8();
  v37 = v36;
  v38 = v56;
  v39 = v55;
  sub_23B989EFC(v26, v55, &qword_256A5AB48);
  v40 = v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB28) + 36);
  v41 = v68;
  *(_OWORD *)(v40 + 160) = v67;
  *(_OWORD *)(v40 + 176) = v41;
  *(_OWORD *)(v40 + 192) = v69;
  v42 = v64;
  *(_OWORD *)(v40 + 96) = v63;
  *(_OWORD *)(v40 + 112) = v42;
  v43 = v66;
  *(_OWORD *)(v40 + 128) = v65;
  *(_OWORD *)(v40 + 144) = v43;
  v44 = v60;
  *(_OWORD *)(v40 + 32) = v59;
  *(_OWORD *)(v40 + 48) = v44;
  v45 = v62;
  *(_OWORD *)(v40 + 64) = v61;
  *(_OWORD *)(v40 + 80) = v45;
  v46 = v58;
  *(_OWORD *)v40 = v57;
  *(_OWORD *)(v40 + 16) = v46;
  *(_BYTE *)(v40 + 208) = v20;
  *(_QWORD *)(v40 + 216) = v28;
  *(_QWORD *)(v40 + 224) = v30;
  *(_QWORD *)(v40 + 232) = v32;
  *(_QWORD *)(v40 + 240) = v34;
  *(_BYTE *)(v40 + 248) = v38;
  *(_QWORD *)(v40 + 256) = v35;
  *(_QWORD *)(v40 + 264) = v37;
  return sub_23B989D60(v26, &qword_256A5AB48);
}

uint64_t sub_23B9C38B0()
{
  return sub_23BB89638();
}

uint64_t sub_23B9C38D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB10);
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23B989EFC(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5AB10);
  return sub_23BB89644();
}

unint64_t sub_23B9C3954()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AB38;
  if (!qword_256A5AB38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AB28);
    v2[0] = sub_23B9C39D8();
    v2[1] = sub_23B996E1C(&qword_256A5ABA0, &qword_256A5ABA8, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AB38);
  }
  return result;
}

unint64_t sub_23B9C39D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AB40;
  if (!qword_256A5AB40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AB48);
    v2[0] = sub_23B9C3A5C();
    v2[1] = sub_23B996E1C(&qword_256A5AB90, &qword_256A5AB98, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AB40);
  }
  return result;
}

unint64_t sub_23B9C3A5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AB50;
  if (!qword_256A5AB50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AB58);
    v2[0] = sub_23B9C3AE0();
    v2[1] = sub_23B996E1C(&qword_256A5AB70, &qword_256A5AB78, MEMORY[0x24BDEB358]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AB50);
  }
  return result;
}

unint64_t sub_23B9C3AE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AB60;
  if (!qword_256A5AB60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AB68);
    v2[0] = sub_23B996E1C(&qword_256A5AB70, &qword_256A5AB78, MEMORY[0x24BDEB358]);
    v2[1] = sub_23B996E1C(&qword_256A5AB80, &qword_256A5AB88, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AB60);
  }
  return result;
}

unint64_t sub_23B9C3B7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5ABB0;
  if (!qword_256A5ABB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AB18);
    v2[0] = sub_23B9C3954();
    v2[1] = sub_23B996E1C(&qword_256A5ABB8, &qword_256A5AB30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5ABB0);
  }
  return result;
}

double sub_23B9C3C00@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  unsigned __int16 v40;
  char v41;
  __int128 v42;
  unint64_t v43;
  _OWORD v44[3];
  __int128 v45;
  __int16 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char v53;
  char v54;

  v3 = sub_23BB8A070();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)v1;
  v9 = *(_QWORD *)(v1 + 8);
  v11 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  if (*(_BYTE *)(v1 + 32))
  {
    if (*(_BYTE *)(v1 + 32) == 1)
    {
      v38 = *(_QWORD *)(v1 + 24);
      v37 = v11;
      v36 = v9;
      v35 = v8;
      if (v8)
      {
        v12 = v8;
        sub_23BB8A04C();
        (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BDF3FD0], v3);
        v13 = sub_23BB8A094();
        swift_release();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
        v14 = 1;
      }
      else
      {
        v13 = 0;
        v14 = 0;
      }
      v47 = (unint64_t)v13;
      LOWORD(v48) = v14;
      BYTE2(v48) = 1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC30);
      sub_23B9C6364();
      sub_23B9C640C(&qword_256A5AC28, &qword_256A5AC30, (uint64_t (*)(void))sub_23B9C63A8);
      sub_23BB89944();
      v21 = v39;
      v22 = v41;
      v23 = v40;
      v24 = 0x10000;
      if (!v41)
        v24 = 0;
      v42 = v39;
      v43 = v24 & 0xFFFFFFFFFFFF0000 | v40;
      memset(v44, 0, sizeof(v44));
      v45 = 0u;
      v46 = 0;
      sub_23B9C64C0((void *)v39, *((uint64_t *)&v39 + 1), v40, v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC08);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC10);
      sub_23B9C62E0();
      sub_23B9C640C(&qword_256A5AC48, &qword_256A5AC10, (uint64_t (*)(void))sub_23B9C6470);
      sub_23BB89944();
      sub_23B9A6310(v35, v36, v37, v38, 1u);
      swift_release();
      sub_23B9C6238((void *)v21, *((uint64_t *)&v21 + 1), v23, v22);
    }
    else
    {
      if (v9)
      {
        *(_QWORD *)&v42 = 0;
        sub_23B9A618C(v8, v9, v11, v10, 2u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC58);
        sub_23BB8A0C4();
        v34 = v47;
        *(_QWORD *)&v42 = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC60);
        sub_23BB8A0C4();
        v33 = v47;
        KeyPath = swift_getKeyPath();
        v18 = swift_getKeyPath();
        v19 = v33;
        v20 = v34;
      }
      else
      {
        v8 = 0;
        v11 = 0;
        v10 = 0;
        KeyPath = 0;
        v18 = 0;
        v20 = 0uLL;
        v19 = 0uLL;
      }
      *(_QWORD *)&v42 = v8;
      *((_QWORD *)&v42 + 1) = v9;
      v43 = v11;
      *(_QWORD *)&v44[0] = v10;
      *(_OWORD *)((char *)v44 + 8) = v20;
      *(_OWORD *)((char *)&v44[1] + 8) = v19;
      *((_QWORD *)&v44[2] + 1) = KeyPath;
      *(_QWORD *)&v45 = 0;
      *((_QWORD *)&v45 + 1) = v18;
      v46 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC08);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC10);
      sub_23B9C62E0();
      sub_23B9C640C(&qword_256A5AC48, &qword_256A5AC10, (uint64_t (*)(void))sub_23B9C6470);
      sub_23BB89944();
    }
  }
  else
  {
    v47 = (unint64_t)v8;
    LOWORD(v48) = 0;
    BYTE2(v48) = 0;
    v15 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC30);
    sub_23B9C6364();
    sub_23B9C640C(&qword_256A5AC28, &qword_256A5AC30, (uint64_t (*)(void))sub_23B9C63A8);
    sub_23BB89944();
    v16 = 0x10000;
    if (!v41)
      v16 = 0;
    v42 = v39;
    v43 = v16 | v40;
    memset(v44, 0, sizeof(v44));
    v45 = 0u;
    v46 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC08);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC10);
    sub_23B9C62E0();
    sub_23B9C640C(&qword_256A5AC48, &qword_256A5AC10, (uint64_t (*)(void))sub_23B9C6470);
    sub_23BB89944();
    sub_23B9A6310(v8, v9, v11, v10, 0);
  }
  result = *(double *)&v47;
  v26 = v48;
  v27 = v49;
  v28 = v50;
  v29 = v51;
  v30 = v52;
  v31 = v53;
  v32 = v54;
  *(_OWORD *)a1 = v47;
  *(_OWORD *)(a1 + 16) = v26;
  *(_OWORD *)(a1 + 32) = v27;
  *(_OWORD *)(a1 + 48) = v28;
  *(_OWORD *)(a1 + 64) = v29;
  *(_QWORD *)(a1 + 80) = v30;
  *(_BYTE *)(a1 + 88) = v31;
  *(_BYTE *)(a1 + 89) = v32;
  return result;
}

double sub_23B9C4180@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;

  if (*(_QWORD *)(v1 + 56))
  {
    swift_retain_n();
    sub_23BB8A2F8();
    swift_retain();
    sub_23BB89BA8();
    sub_23BB892A8();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB78);
    sub_23B9C3AE0();
    sub_23B996E1C(&qword_256A5AB70, &qword_256A5AB78, MEMORY[0x24BDEB358]);
    sub_23BB89944();
    swift_release();
    swift_release_n();
  }
  else
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB78);
    sub_23B9C3AE0();
    sub_23B996E1C(&qword_256A5AB70, &qword_256A5AB78, MEMORY[0x24BDEB358]);
    sub_23BB89944();
  }
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 96) = v10;
  return result;
}

uint64_t sub_23B9C4370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  _BYTE v69[16];
  uint64_t v70;

  v64 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB10);
  MEMORY[0x24BDAC7A8](v3, v4);
  v63 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB89530();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB8A334();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC68);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (uint64_t *)((char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC70);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC78);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v32 = *(_OWORD *)(a1 + 72);
  v33 = *(_OWORD *)(a1 + 56);
  v65 = *(_OWORD *)(a1 + 40);
  v66 = v33;
  v67 = v32;
  v68 = *(_QWORD *)(a1 + 88);
  v34 = v32;
  if (!(_QWORD)v32)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 56))(v64, 1, 1);
  v36 = *((_QWORD *)&v67 + 1);
  v35 = v68;
  v37 = *MEMORY[0x24BDF5080];
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v60 = v29;
  v61 = (uint64_t)&v59 - v30;
  v62 = v31;
  v38(v14, v37, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v14, v10);
  sub_23B9C64CC((uint64_t)v9, (uint64_t)v18 + *(int *)(v15 + 36));
  *v18 = v34;
  v18[1] = v36;
  v18[2] = 0;
  v18[3] = v35;
  swift_retain_n();
  sub_23B9C6510((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_23B990D24((uint64_t)&v66, (uint64_t)v69, &qword_256A5AC00);
  sub_23B990D24((uint64_t)v69, (uint64_t)&v70, &qword_256A5AC00);
  v39 = sub_23BB89BA8();
  sub_23BB892A8();
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_23B989EFC((uint64_t)v18, (uint64_t)v22, &qword_256A5AC68);
  v48 = &v22[*(int *)(v19 + 36)];
  *v48 = v39;
  *((_QWORD *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  sub_23B989D60((uint64_t)v18, &qword_256A5AC68);
  KeyPath = swift_getKeyPath();
  v50 = sub_23BB8A2B0();
  v51 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v63, 1, 1, v50);
  v52 = v60;
  v53 = (uint64_t *)&v27[*(int *)(v60 + 36)];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AB30);
  sub_23B989EFC(v51, (uint64_t)v53 + *(int *)(v54 + 28), &qword_256A5AB10);
  *v53 = KeyPath;
  sub_23B989EFC((uint64_t)v22, (uint64_t)v27, &qword_256A5AC70);
  swift_release();
  sub_23B989D60(v51, &qword_256A5AB10);
  sub_23B989D60((uint64_t)v22, &qword_256A5AC70);
  v55 = v61;
  sub_23B990D24((uint64_t)v27, v61, &qword_256A5AC78);
  v56 = v55;
  v57 = v64;
  sub_23B990D24(v56, v64, &qword_256A5AC78);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v57, 0, 1, v52);
}

void PlatterWithIcon.Icon.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  if (!*(_BYTE *)(v0 + 32))
  {
    sub_23BB8B24C();
    sub_23BB8B258();
    if (v2)
    {
      v7 = v2;
      sub_23BB8AC7C();
      v6 = v2;
    }
    else
    {
      v6 = 0;
    }
    v8 = v1;
    v9 = v4;
    v10 = v3;
    v11 = 0;
    goto LABEL_13;
  }
  if (*(_BYTE *)(v0 + 32) == 1)
  {
    sub_23BB8B24C();
    sub_23BB8B258();
    if (v2)
    {
      v5 = v2;
      sub_23BB8AC7C();
      v6 = v2;
    }
    else
    {
      v6 = 0;
    }
    v8 = v1;
    v9 = v4;
    v10 = v3;
    v11 = 1;
LABEL_13:
    sub_23B9A6310(v6, v8, v9, v10, v11);
    return;
  }
  sub_23BB8B24C();
  sub_23BB8B258();
  if (v1)
    EmojiView.Info.hash(into:)();
}

uint64_t PlatterWithIcon.Icon.hashValue.getter()
{
  sub_23BB8B240();
  PlatterWithIcon.Icon.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23B9C4954()
{
  sub_23BB8B240();
  PlatterWithIcon.Icon.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23B9C49A8()
{
  sub_23BB8B240();
  PlatterWithIcon.Icon.hash(into:)();
  return sub_23BB8B270();
}

uint64_t static PlatterWithIcon.Style.isWatchOS.getter()
{
  return 0;
}

uint64_t static PlatterWithIcon.Style.listLeadingIcon()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ABC0);
  v2 = MEMORY[0x24BDF0F90];
  sub_23B996E1C(&qword_256A5ABC8, &qword_256A5ABC0, MEMORY[0x24BDF0F90]);
  v3 = sub_23BB89398();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ABD0);
  sub_23B996E1C(&qword_256A5ABD8, &qword_256A5ABD0, v2);
  result = sub_23BB89398();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 24) = 0x4000000000000000;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  return result;
}

uint64_t static PlatterWithIcon.Style.mapAnnotationView(includeShadow:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ABC0);
  v4 = MEMORY[0x24BDF0F90];
  sub_23B996E1C(&qword_256A5ABC8, &qword_256A5ABC0, MEMORY[0x24BDF0F90]);
  v5 = sub_23BB89398();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ABD0);
  sub_23B996E1C(&qword_256A5ABD8, &qword_256A5ABD0, v4);
  result = sub_23BB89398();
  v7 = result;
  if ((a1 & 1) != 0)
  {
    sub_23BB89FBC();
    v8 = sub_23BB8A004();
    result = swift_release();
    __asm { FMOV            V0.2D, #16.0 }
    *(_QWORD *)&_Q0 = v8;
    v14 = 0x4014000000000000;
  }
  else
  {
    v14 = 0;
    _Q0 = 0uLL;
  }
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = 0x4010000000000000;
  *(_OWORD *)(a2 + 32) = _Q0;
  *(_QWORD *)(a2 + 48) = v14;
  return result;
}

uint64_t static PlatterWithIcon.Style.legacyMapAnnotationView(isWatchOS:includeShadow:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_23BB89F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
  v23 = MEMORY[0x24260BF80](v11);
  v12 = sub_23BB89398();
  if ((a1 & 1) == 0)
  {
    v23 = sub_23BB89FE0();
    result = sub_23BB89398();
    v14 = result;
    if ((a2 & 1) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BDF3C28], v6);
      result = MEMORY[0x24260BF74](v10, 0.882, 0.882, 0.882, 1.0);
      v15 = result;
      goto LABEL_6;
    }
LABEL_7:
    v21 = 0;
    _Q0 = 0uLL;
    goto LABEL_8;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BDF3C28], v6);
  v23 = MEMORY[0x24260BF74](v10, 0.949, 0.957, 0.988, 0.14);
  result = sub_23BB89398();
  v14 = result;
  if ((a2 & 1) == 0)
    goto LABEL_7;
  sub_23BB89FBC();
  v15 = sub_23BB8A004();
  result = swift_release();
LABEL_6:
  __asm { FMOV            V0.2D, #16.0 }
  *(_QWORD *)&_Q0 = v15;
  v21 = 0x4014000000000000;
LABEL_8:
  *(_QWORD *)a3 = v12;
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = v14;
  *(_QWORD *)(a3 + 24) = 0x4010000000000000;
  *(_OWORD *)(a3 + 32) = _Q0;
  *(_QWORD *)(a3 + 48) = v21;
  return result;
}

uint64_t _s12FindMyUICore15PlatterWithIconV0F0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  id v21;
  id v22;
  char v23;

  v3 = *(id *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(uint64_t *)(a1 + 16);
  v4 = *(uint64_t *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v8 = *(id *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v10 = *(uint64_t *)(a2 + 16);
  v9 = *(uint64_t *)(a2 + 24);
  v11 = *(unsigned __int8 *)(a2 + 32);
  if (!*(_BYTE *)(a1 + 32))
  {
    if (!*(_BYTE *)(a2 + 32))
    {
      if (v3)
      {
        if (v8)
        {
          sub_23B9C60B4(0, (unint64_t *)&qword_256A61440);
          sub_23B9A618C(v3, v2, v5, v4, 0);
          sub_23B9A618C(v8, v7, v10, v9, 0);
          sub_23B9A618C(v3, v2, v5, v4, 0);
          sub_23B9A618C(v8, v7, v10, v9, 0);
          sub_23B9A618C(v3, v2, v5, v4, 0);
          v14 = sub_23BB8AC70();
          sub_23B9A6310(v3, v2, v5, v4, 0);
          sub_23B9A6310(v8, v7, v10, v9, 0);
          sub_23B9A6310(v8, v7, v10, v9, 0);
          sub_23B9A6310(v3, v2, v5, v4, 0);
          sub_23B9A6310(v3, v2, v5, v4, 0);
          return (v14 & 1) != 0;
        }
        sub_23B9A618C(0, *(_QWORD *)(a2 + 8), v10, v9, 0);
        sub_23B9A618C(v3, v2, v5, v4, 0);
      }
      else
      {
        v22 = v8;
        sub_23B9A618C(v8, v7, v10, v9, 0);
        sub_23B9A618C(0, v2, v5, v4, 0);
        sub_23B9A6310(0, v2, v5, v4, 0);
        sub_23B9A6310(v8, v7, v10, v9, 0);
        if (!v8)
          return 1;
      }
      sub_23B9A6310(v3, v2, v5, v4, 0);
      v15 = v8;
      v16 = v7;
      v17 = v10;
      v18 = v9;
      v19 = 0;
      goto LABEL_21;
    }
LABEL_20:
    sub_23B9A618C(*(id *)a2, *(_QWORD *)(a2 + 8), v10, v9, v11);
    sub_23B9A618C(v3, v2, v5, v4, v6);
    sub_23B9A6310(v3, v2, v5, v4, v6);
    v15 = v8;
    v16 = v7;
    v17 = v10;
    v18 = v9;
    v19 = v11;
LABEL_21:
    sub_23B9A6310(v15, v16, v17, v18, v19);
    return 0;
  }
  if (v6 == 1)
  {
    if (v11 == 1)
    {
      if (v3)
      {
        if (v8)
        {
          sub_23B9C60B4(0, (unint64_t *)&qword_256A5ABF8);
          v12 = 1;
          sub_23B9A618C(v3, v2, v5, v4, 1u);
          sub_23B9A618C(v8, v7, v10, v9, 1u);
          sub_23B9A618C(v3, v2, v5, v4, 1u);
          sub_23B9A618C(v8, v7, v10, v9, 1u);
          sub_23B9A618C(v3, v2, v5, v4, 1u);
          v13 = sub_23BB8AC70();
          sub_23B9A6310(v3, v2, v5, v4, 1u);
          sub_23B9A6310(v8, v7, v10, v9, 1u);
          sub_23B9A6310(v8, v7, v10, v9, 1u);
          sub_23B9A6310(v3, v2, v5, v4, 1u);
          sub_23B9A6310(v3, v2, v5, v4, 1u);
          if ((v13 & 1) != 0)
            return v12;
          return 0;
        }
        sub_23B9A618C(0, *(_QWORD *)(a2 + 8), v10, v9, 1u);
        sub_23B9A618C(v3, v2, v5, v4, 1u);
      }
      else
      {
        v21 = v8;
        v12 = 1;
        sub_23B9A618C(v8, v7, v10, v9, 1u);
        sub_23B9A618C(0, v2, v5, v4, 1u);
        sub_23B9A6310(0, v2, v5, v4, 1u);
        sub_23B9A6310(v8, v7, v10, v9, 1u);
        if (!v8)
          return v12;
      }
      sub_23B9A6310(v3, v2, v5, v4, 1u);
      v15 = v8;
      v16 = v7;
      v17 = v10;
      v18 = v9;
      v19 = 1;
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v11 != 2)
    goto LABEL_20;
  if (!v2)
  {
    swift_bridgeObjectRetain();
    sub_23B9A618C(v8, v7, v10, v9, 2u);
    sub_23B9A618C(v3, 0, v5, v4, 2u);
    sub_23B9A6310(v3, 0, v5, v4, 2u);
    sub_23B9A6310(v8, v7, v10, v9, 2u);
    if (v7)
      goto LABEL_33;
    return 1;
  }
  if (!v7)
  {
    sub_23B9A618C(*(id *)a1, v2, v5, v4, 2u);
    sub_23B9A618C(v8, 0, v10, v9, 2u);
    sub_23B9A618C(v3, v2, v5, v4, 2u);
    sub_23B9A618C(v8, 0, v10, v9, 2u);
    sub_23B9A618C(v3, v2, v5, v4, 2u);
    sub_23B9A6310(v3, v2, v5, v4, 2u);
    sub_23B9A6310(v8, 0, v10, v9, 2u);
    swift_bridgeObjectRelease();
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 == v8 && v2 == v7)
  {
    sub_23B9A618C(*(id *)a1, v2, v5, v4, 2u);
    sub_23B9A618C(v3, v2, v5, v4, 2u);
    sub_23B9A618C(v3, v2, v10, v9, 2u);
    sub_23B9A618C(v3, v2, v5, v4, 2u);
    sub_23B9A6310(v3, v2, v5, v4, 2u);
    sub_23B9A6310(v3, v2, v10, v9, 2u);
    swift_bridgeObjectRelease();
    sub_23B9A6310(v3, v2, v5, v4, 2u);
    if (*(double *)&v5 != *(double *)&v10)
      return 0;
    return *(double *)&v4 == *(double *)&v9;
  }
  v23 = sub_23BB8B1A4();
  sub_23B9A618C(v3, v2, v5, v4, 2u);
  sub_23B9A618C(v3, v2, v5, v4, 2u);
  sub_23B9A618C(v8, v7, v10, v9, 2u);
  sub_23B9A618C(v3, v2, v5, v4, 2u);
  sub_23B9A6310(v3, v2, v5, v4, 2u);
  sub_23B9A6310(v8, v7, v10, v9, 2u);
  swift_bridgeObjectRelease();
  sub_23B9A6310(v3, v2, v5, v4, 2u);
  v12 = 0;
  if ((v23 & 1) != 0 && *(double *)&v5 == *(double *)&v10)
    return *(double *)&v4 == *(double *)&v9;
  return v12;
}

unint64_t sub_23B9C55C0()
{
  unint64_t result;

  result = qword_256A5ABE0;
  if (!qword_256A5ABE0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PlatterWithIcon.Icon, &type metadata for PlatterWithIcon.Icon);
    atomic_store(result, (unint64_t *)&qword_256A5ABE0);
  }
  return result;
}

uint64_t sub_23B9C5604()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PlatterWithIcon(uint64_t a1)
{
  sub_23B9A6310(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PlatterWithIcon(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_23B9A618C(*(id *)a2, v5, v6, v7, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PlatterWithIcon(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_23B9A618C(*(id *)a2, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v13 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  sub_23B9A6310(v9, v10, v11, v12, v13);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for PlatterWithIcon(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  unsigned __int8 v10;

  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_23B9A6310(v5, v6, v7, v8, v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlatterWithIcon(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterWithIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatterWithIcon()
{
  return &type metadata for PlatterWithIcon;
}

void destroy for PlatterWithIcon.Icon(uint64_t a1)
{
  sub_23B9A6310(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PlatterWithIcon.Icon(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23B9A618C(*(id *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlatterWithIcon.Icon(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23B9A618C(*(id *)a2, v4, v5, v6, v7);
  v8 = *(void **)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_23B9A6310(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PlatterWithIcon.Icon(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_23B9A6310(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlatterWithIcon.Icon(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterWithIcon.Icon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_23B9C5B10(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_23B9C5B18(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlatterWithIcon.Icon()
{
  return &type metadata for PlatterWithIcon.Icon;
}

uint64_t destroy for PlatterWithIcon.Style()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PlatterWithIcon.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PlatterWithIcon.Style(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PlatterWithIcon.Style(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlatterWithIcon.Style(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterWithIcon.Style(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatterWithIcon.Style()
{
  return &type metadata for PlatterWithIcon.Style;
}

_QWORD *initializeBufferWithCopyOfBuffer for PlatterWithIcon.Style.Border(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for PlatterWithIcon.Style.Border()
{
  return swift_release();
}

_QWORD *assignWithCopy for PlatterWithIcon.Style.Border(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for PlatterWithIcon.Style.Border(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t _s12DependenciesVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12DependenciesVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatterWithIcon.Style.Border()
{
  return &type metadata for PlatterWithIcon.Style.Border;
}

uint64_t initializeBufferWithCopyOfBuffer for PlatterWithIcon.Style.Shadow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for PlatterWithIcon.Style.Shadow(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PlatterWithIcon.Style.Shadow(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlatterWithIcon.Style.Shadow(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterWithIcon.Style.Shadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlatterWithIcon.Style.Shadow()
{
  return &type metadata for PlatterWithIcon.Style.Shadow;
}

unint64_t sub_23B9C6048()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5ABE8;
  if (!qword_256A5ABE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ABF0);
    v2[0] = sub_23B9C3954();
    v2[1] = sub_23B9C3B7C();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5ABE8);
  }
  return result;
}

uint64_t sub_23B9C60B4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_23B9C60EC(uint64_t a1)
{
  sub_23B9A618C(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23B9C614C(uint64_t a1)
{
  sub_23B9A6310(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_23B9C61AC(uint64_t a1)
{
  sub_23B9C620C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  return a1;
}

void sub_23B9C620C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, char a13)
{
  if ((a13 & 1) != 0)
    sub_23B9C6244((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  else
    sub_23B9C6238(a1, a2, a3, BYTE2(a3) & 1);
}

void sub_23B9C6238(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    swift_release();
  else

}

uint64_t sub_23B9C6244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    sub_23B9C62D4(a9, a10 & 1);
    return sub_23B9C62D4(a11, a12 & 1);
  }
  return result;
}

uint64_t sub_23B9C62D4(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

unint64_t sub_23B9C62E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AC18;
  if (!qword_256A5AC18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AC08);
    v2[0] = sub_23B9C6364();
    v2[1] = sub_23B9C640C(&qword_256A5AC28, &qword_256A5AC30, (uint64_t (*)(void))sub_23B9C63A8);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AC18);
  }
  return result;
}

unint64_t sub_23B9C6364()
{
  unint64_t result;

  result = qword_256A5AC20;
  if (!qword_256A5AC20)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for AvatarView, &type metadata for AvatarView);
    atomic_store(result, (unint64_t *)&qword_256A5AC20);
  }
  return result;
}

unint64_t sub_23B9C63A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AC38;
  if (!qword_256A5AC38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AC40);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AC38);
  }
  return result;
}

uint64_t sub_23B9C640C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23B9C6470()
{
  unint64_t result;

  result = qword_256A5AC50;
  if (!qword_256A5AC50)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for EmojiView, &type metadata for EmojiView);
    atomic_store(result, (unint64_t *)&qword_256A5AC50);
  }
  return result;
}

id sub_23B9C64C0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return (id)swift_retain();
  else
    return a1;
}

uint64_t sub_23B9C64CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB89530();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B9C6510(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB89530();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithCopy for AvatarTextTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AvatarTextTemplate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AvatarTextTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AvatarTextTemplate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvatarTextTemplate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvatarTextTemplate()
{
  return &type metadata for AvatarTextTemplate;
}

uint64_t sub_23B9C6754()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9C6764(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_23BB8AEBC();
    v4 = (void **)(a1 + 80);
    do
    {
      v5 = *v4;
      v4 += 7;
      v6 = v5;
      sub_23BB8AE98();
      sub_23BB8AEC8();
      sub_23BB8AED4();
      sub_23BB8AEA4();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_23B9C6810@<X0>(unint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD20);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_23BB8AFD0();
    swift_bridgeObjectRetain();
    v23 = sub_23BB8AFD0();
    swift_bridgeObjectRelease();
    if (v23 < 0)
      __break(1u);
    if (v22 >= 5)
      v24 = 5;
    else
      v24 = v22;
    if (v22 >= 0)
      v11 = v24;
    else
      v11 = 5;
    swift_bridgeObjectRetain();
    v25 = sub_23BB8AFD0();
    result = swift_bridgeObjectRelease();
    if (v25 < v11)
    {
      __break(1u);
      return result;
    }
  }
  else
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 5)
      v11 = 5;
    else
      v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if ((a1 & 0xC000000000000001) != 0 && v11)
  {
    sub_23B9C7670();
    v12 = 0;
    do
    {
      v13 = v12 + 1;
      sub_23BB8AE38();
      v12 = v13;
    }
    while (v11 != v13);
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_23BB8AFDC();
    v16 = v18;
    v14 = v19;
    v17 = v20;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = 0;
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
    v16 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    v17 = (2 * v11) | 1;
  }
  v26[0] = v15;
  v26[1] = v16;
  v26[2] = v14;
  v26[3] = v17;
  *(_BYTE *)(swift_allocObject() + 16) = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD28);
  sub_23BB889CC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD30);
  sub_23B996E1C(&qword_256A5AD38, &qword_256A5AD28, MEMORY[0x24BEE2188]);
  sub_23B9C76C4();
  sub_23B97D0C8(&qword_256A5AD50, (uint64_t (*)(uint64_t))sub_23B9C7670, MEMORY[0x24BDBA1F8]);
  sub_23BB8A208();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, v6);
}

double sub_23B9C6AB0@<D0>(id *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  double result;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v5 = *a1;
  v6 = *a1;
  static PlatterWithIcon.Style.legacyMapAnnotationView(isWatchOS:includeShadow:)(0, a2, (uint64_t)&v17);
  v7 = v17;
  v8 = v18;
  v15 = v20;
  v16 = v19;
  v9 = v21;
  sub_23BB8A2F8();
  sub_23BB8938C();
  v10 = v17;
  v11 = v18;
  v12 = v19;
  v13 = BYTE8(v19);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = v7;
  *(_BYTE *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 56) = v16;
  *(_OWORD *)(a3 + 72) = v15;
  *(_QWORD *)(a3 + 88) = v9;
  *(_QWORD *)(a3 + 96) = v10;
  *(_BYTE *)(a3 + 104) = v11;
  *(_QWORD *)(a3 + 112) = v12;
  *(_BYTE *)(a3 + 120) = v13;
  result = *(double *)&v20;
  *(_OWORD *)(a3 + 128) = v20;
  return result;
}

uint64_t sub_23B9C6B90()
{
  uint64_t v0;

  v0 = sub_23BB89788();
  return MEMORY[0x24260B3C8](v0);
}

uint64_t sub_23B9C6BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v63 = a2;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACA0);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v3);
  v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACA8);
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v59 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACB0);
  MEMORY[0x24BDAC7A8](v55, v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACB8);
  v12 = MEMORY[0x24BDAC7A8](v57, v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v62 = (uint64_t)&v52 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACC0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACC8);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v52 - v27;
  v29 = swift_bridgeObjectRetain();
  v30 = sub_23B9C6764(v29);
  swift_bridgeObjectRelease();
  v31 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)v20 = sub_23BB89788();
  *((_QWORD *)v20 + 1) = 0xC038000000000000;
  v20[16] = 0;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACD0);
  sub_23B9C6810(v30, v31, (uint64_t)&v20[*(int *)(v32 + 44)]);
  if (qword_256A58CB0 != -1)
    swift_once();
  v33 = qword_256A73D00;
  sub_23B989EFC((uint64_t)v20, (uint64_t)v25, &qword_256A5ACC0);
  v34 = (uint64_t *)&v25[*(int *)(v21 + 36)];
  *v34 = v33;
  v34[1] = (uint64_t)sub_23B9C6B90;
  v34[2] = 0;
  sub_23B989D60((uint64_t)v20, &qword_256A5ACC0);
  swift_bridgeObjectRelease();
  v35 = sub_23B990D24((uint64_t)v25, (uint64_t)v28, &qword_256A5ACC8);
  v53 = v28;
  v37 = MEMORY[0x24BDAC7A8](v35, v36);
  *(&v52 - 2) = a1;
  MEMORY[0x24BDAC7A8](v37, v38);
  *(&v52 - 2) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACE0);
  sub_23B9C7554();
  sub_23B9C75D8();
  v39 = v54;
  sub_23BB8A0AC();
  sub_23B996E1C(&qword_256A5AD08, &qword_256A5ACA0, MEMORY[0x24BDF41A8]);
  sub_23B9B99E0();
  v40 = v58;
  v41 = v59;
  sub_23BB89D88();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v40);
  sub_23BB89C08();
  sub_23BB89C2C();
  v42 = sub_23BB89C50();
  swift_release();
  KeyPath = swift_getKeyPath();
  v45 = v60;
  v44 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v10, v41, v61);
  v46 = (uint64_t *)&v10[*(int *)(v55 + 36)];
  *v46 = KeyPath;
  v46[1] = v42;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v44);
  LODWORD(KeyPath) = sub_23BB899C8();
  sub_23B989EFC((uint64_t)v10, (uint64_t)v14, &qword_256A5ACB0);
  *(_DWORD *)&v14[*(int *)(v57 + 36)] = KeyPath;
  sub_23B989D60((uint64_t)v10, &qword_256A5ACB0);
  v47 = v62;
  sub_23B990D24((uint64_t)v14, v62, &qword_256A5ACB8);
  v48 = (uint64_t)v53;
  sub_23B989EFC((uint64_t)v53, (uint64_t)v25, &qword_256A5ACC8);
  sub_23B989EFC(v47, (uint64_t)v14, &qword_256A5ACB8);
  v49 = v63;
  sub_23B989EFC((uint64_t)v25, v63, &qword_256A5ACC8);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD10);
  sub_23B989EFC((uint64_t)v14, v49 + *(int *)(v50 + 48), &qword_256A5ACB8);
  sub_23B989D60(v47, &qword_256A5ACB8);
  sub_23B989D60(v48, &qword_256A5ACC8);
  sub_23B989D60((uint64_t)v14, &qword_256A5ACB8);
  return sub_23B989D60((uint64_t)v25, &qword_256A5ACC8);
}

uint64_t sub_23B9C70D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_23B9967E0();
  swift_bridgeObjectRetain();
  v2 = sub_23BB89D28();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 40) = 1;
  return result;
}

uint64_t sub_23B9C716C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v4 = sub_23BB8944C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ACE0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRetain_n();
    v16[1] = sub_23BB8A064();
    sub_23BB89428();
    sub_23BB89DC4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_release();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AD18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  }
  return sub_23B990D24((uint64_t)v12, a2, &qword_256A5ACE0);
}

uint64_t sub_23B9C72F4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t result;
  __int128 v15;
  _OWORD v16[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC88);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0[1];
  v15 = *v0;
  v16[0] = v9;
  *(_OWORD *)((char *)v16 + 9) = *(__int128 *)((char *)v0 + 25);
  *(_QWORD *)v8 = sub_23BB8983C();
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AC90);
  sub_23B9C6BB4((uint64_t)&v15, (uint64_t)&v8[*(int *)(v10 + 44)]);
  v11 = *MEMORY[0x24BDECEC0];
  v12 = sub_23BB894A0();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v4, v11, v12);
  sub_23B97D0C8((unint64_t *)&qword_256A59A20, v13, MEMORY[0x24BDECF78]);
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    sub_23B996E1C(&qword_256A5AC98, &qword_256A5AC88, MEMORY[0x24BDF4700]);
    sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    sub_23BB89DF4();
    sub_23B989D60((uint64_t)v4, &qword_256A599C0);
    return sub_23B989D60((uint64_t)v8, &qword_256A5AC88);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B9C74D4()
{
  uint64_t result;

  sub_23B9C7500();
  result = sub_23BB89794();
  qword_256A73D00 = result;
  return result;
}

unint64_t sub_23B9C7500()
{
  unint64_t result;

  result = qword_256A5AC80;
  if (!qword_256A5AC80)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8DE1C, &_s41AvatarTextTemplateCenterOfAvatarAlignmentON);
    atomic_store(result, (unint64_t *)&qword_256A5AC80);
  }
  return result;
}

uint64_t sub_23B9C7544@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9C70D8(a1);
}

uint64_t sub_23B9C754C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B9C716C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23B9C7554()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256A5ACE8;
  if (!qword_256A5ACE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ACD8);
    v2 = sub_23B996E1C(&qword_256A5ACF0, &qword_256A5ACF8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A5ACE8);
  }
  return result;
}

unint64_t sub_23B9C75D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256A5AD00;
  if (!qword_256A5AD00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ACE0);
    v2[1] = MEMORY[0x24BDF4108];
    v2[2] = MEMORY[0x24BDF40E8];
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AD00);
  }
  return result;
}

unint64_t sub_23B9C7670()
{
  unint64_t result;

  result = qword_256A61440;
  if (!qword_256A61440)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A61440);
  }
  return result;
}

uint64_t sub_23B9C76AC()
{
  return swift_deallocObject();
}

double sub_23B9C76BC@<D0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B9C6AB0(a1, *(_BYTE *)(v2 + 16), a2);
}

unint64_t sub_23B9C76C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AD40;
  if (!qword_256A5AD40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AD30);
    v2[0] = sub_23B9C7730();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AD40);
  }
  return result;
}

unint64_t sub_23B9C7730()
{
  unint64_t result;

  result = qword_256A5AD48;
  if (!qword_256A5AD48)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for PlatterWithIcon, &type metadata for PlatterWithIcon);
    atomic_store(result, (unint64_t *)&qword_256A5AD48);
  }
  return result;
}

ValueMetadata *_s41AvatarTextTemplateCenterOfAvatarAlignmentOMa()
{
  return &_s41AvatarTextTemplateCenterOfAvatarAlignmentON;
}

uint64_t sub_23B9C7784()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AC88);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A599C0);
  sub_23B996E1C(&qword_256A5AC98, &qword_256A5AC88, MEMORY[0x24BDF4700]);
  sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9C7824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEB0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v47 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BB889CC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SerialTaskQueue.WorkItem(0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_23BB889C0();
  v22 = &v21[*(int *)(v18 + 20)];
  *(_QWORD *)v22 = a1;
  *((_QWORD *)v22 + 1) = a2;
  if (qword_256A58CB8 != -1)
    swift_once();
  v23 = sub_23BB891C4();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_256A73D08);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v21, v13);
  v46 = v24;
  v25 = sub_23BB891AC();
  v26 = sub_23BB8ABC8();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v44 = v21;
    v28 = v27;
    v43 = swift_slowAlloc();
    v49[0] = v43;
    *(_DWORD *)v28 = 136315394;
    v48 = sub_23BB7B69C(0x2865756575716E65, 0xEB00000000293A5FLL, v49);
    v45 = v9;
    sub_23BB8ACB8();
    *(_WORD *)(v28 + 12) = 2080;
    sub_23B9C92A0();
    v29 = sub_23BB8B150();
    v48 = sub_23BB7B69C(v29, v30, v49);
    v9 = v45;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    _os_log_impl(&dword_23B979000, v25, v26, "SerialTaskQueue:  %s called for item %s", (uint8_t *)v28, 0x16u);
    v31 = v43;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v31, -1, -1);
    v32 = v28;
    v21 = v44;
    MEMORY[0x24260D9B4](v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }

  v33 = v3 + OBJC_IVAR____TtC12FindMyUICore15SerialTaskQueue_queue;
  swift_beginAccess();
  v34 = *(_QWORD *)(*(_QWORD *)v33 + 16);
  swift_beginAccess();
  v35 = v47;
  sub_23B9C918C((uint64_t)v21, v47);
  sub_23BAB04F4(0, 0, v35);
  swift_endAccess();
  if (!v34)
  {
    v36 = sub_23BB891AC();
    v37 = sub_23BB8ABC8();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_23B979000, v36, v37, "SerialTaskQueue: Queue was empty -- calling initial process()", v38, 2u);
      MEMORY[0x24260D9B4](v38, -1, -1);
    }

    v39 = sub_23BB8AA18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v9, 1, 1, v39);
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = 0;
    v40[3] = 0;
    v40[4] = v3;
    swift_retain();
    sub_23B989F54((uint64_t)v9, (uint64_t)&unk_256A5AEC0, (uint64_t)v40);
    swift_release();
  }
  return sub_23B9C91D0((uint64_t)v21);
}

uint64_t sub_23B9C7C90()
{
  uint64_t v0;

  v0 = sub_23BB891C4();
  __swift_allocate_value_buffer(v0, qword_256A73D08);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73D08);
  return sub_23BB891B8();
}

uint64_t sub_23B9C7D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC12FindMyUICore15SerialTaskQueue_queue) = MEMORY[0x24BEE4AF8];
  v8 = v4 + OBJC_IVAR____TtC12FindMyUICore15SerialTaskQueue_id;
  v9 = sub_23BB889CC();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, a3, v9);
  v11 = (_QWORD *)(v4 + OBJC_IVAR____TtC12FindMyUICore15SerialTaskQueue_name);
  *v11 = a1;
  v11[1] = a2;
  if (qword_256A58CB8 != -1)
    swift_once();
  v12 = sub_23BB891C4();
  __swift_project_value_buffer(v12, (uint64_t)qword_256A73D08);
  swift_retain_n();
  v13 = sub_23BB891AC();
  v14 = sub_23BB8ABC8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v20 = a3;
    v16 = swift_slowAlloc();
    v21 = v16;
    *(_DWORD *)v15 = 136315138;
    swift_retain();
    v17 = sub_23BB8A7D8();
    sub_23BB7B69C(v17, v18, &v21);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v13, v14, "SerialTaskQueue: init %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v16, -1, -1);
    MEMORY[0x24260D9B4](v15, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v9);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, v9);
  }
  return v4;
}

uint64_t sub_23B9C7F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  if (qword_256A58CB8 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73D08);
  swift_retain_n();
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABC8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_retain();
    v7 = sub_23BB8A7D8();
    sub_23BB7B69C(v7, v8, &v12);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v3, v4, "SerialTaskQueue: deinit %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v9 = v1 + OBJC_IVAR____TtC12FindMyUICore15SerialTaskQueue_id;
  v10 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23B9C814C()
{
  sub_23B9C7F48();
  return swift_deallocClassInstance();
}

uint64_t sub_23B9C8170()
{
  return type metadata accessor for SerialTaskQueue(0);
}

uint64_t type metadata accessor for SerialTaskQueue(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5AD88);
}

uint64_t sub_23B9C818C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB889CC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_23B9C8210(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23BB889CC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_23B9C82A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_23B9C82E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_23B9C8350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23B9C83C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23B9C8420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_23B9C8488()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9C8494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23BB889CC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23B9C8510()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9C851C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BB889CC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SerialTaskQueue.WorkItem(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5AE78);
}

uint64_t sub_23B9C85A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB889CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23B9C861C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B990D68;
  return sub_23B9C8664();
}

uint64_t sub_23B9C8664()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[11] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AED8);
  v1[12] = swift_task_alloc();
  v2 = type metadata accessor for SerialTaskQueue.WorkItem(0);
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9C8704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  int **v22;
  int *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = OBJC_IVAR____TtC12FindMyUICore15SerialTaskQueue_queue;
  *(_QWORD *)(v0 + 144) = OBJC_IVAR____TtC12FindMyUICore15SerialTaskQueue_queue;
  v3 = v1 + v2;
  swift_beginAccess();
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v4)
  {
    sub_23B9C918C(*(_QWORD *)v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 112) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 112) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 112) + 72) * (v4 - 1), *(_QWORD *)(v0 + 136));
    if (qword_256A58CB8 != -1)
      swift_once();
    v6 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    v7 = sub_23BB891C4();
    *(_QWORD *)(v0 + 152) = __swift_project_value_buffer(v7, (uint64_t)qword_256A73D08);
    sub_23B9C918C(v5, v6);
    v8 = sub_23BB891AC();
    v9 = sub_23BB8ABC8();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 128);
    if (v10)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v28 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_23BB889CC();
      sub_23B9C92A0();
      v14 = sub_23BB8B150();
      *(_QWORD *)(v0 + 72) = sub_23BB7B69C(v14, v15, &v28);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23B9C91D0(v11);
      _os_log_impl(&dword_23B979000, v8, v9, "SerialTaskQueue: Start processing workItem: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v13, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
    }
    else
    {
      sub_23B9C91D0(*(_QWORD *)(v0 + 128));
    }

    v22 = (int **)(*(_QWORD *)(v0 + 136) + *(int *)(*(_QWORD *)(v0 + 104) + 20));
    v23 = *v22;
    *(_QWORD *)(v0 + 160) = v22[1];
    v27 = (uint64_t (*)(void))((char *)v23 + *v23);
    swift_retain();
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v24;
    *v24 = v0;
    v24[1] = sub_23B9C8B50;
    return v27();
  }
  else
  {
    if (qword_256A58CB8 != -1)
      swift_once();
    v16 = sub_23BB891C4();
    __swift_project_value_buffer(v16, (uint64_t)qword_256A73D08);
    swift_retain_n();
    v17 = sub_23BB891AC();
    v18 = sub_23BB8ABEC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v28 = v26;
      *(_DWORD *)v19 = 136446210;
      sub_23BB889CC();
      sub_23B9C92A0();
      v20 = sub_23BB8B150();
      *(_QWORD *)(v0 + 80) = sub_23BB7B69C(v20, v21, &v28);
      sub_23BB8ACB8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v17, v18, "SerialTaskQueue: process queue for %{public}s -- no more WorkItems", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v26, -1, -1);
      MEMORY[0x24260D9B4](v19, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B9C8B50()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23B9C8BAC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  _QWORD *v15;
  uint8_t *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;

  sub_23B9C918C(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABC8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 120);
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v22 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_23BB889CC();
    sub_23B9C92A0();
    v6 = sub_23BB8B150();
    *(_QWORD *)(v0 + 64) = sub_23BB7B69C(v6, v7, &v22);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23B9C91D0(v3);
    _os_log_impl(&dword_23B979000, v1, v2, "SerialTaskQueue: Done processing workItem: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }
  else
  {
    sub_23B9C91D0(*(_QWORD *)(v0 + 120));
  }

  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 144);
  swift_beginAccess();
  sub_23B9C903C(v8);
  swift_endAccess();
  sub_23B9C92E8(v8);
  v10 = *(_QWORD *)(*(_QWORD *)v9 + 16);
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABC8();
  v13 = os_log_type_enabled(v11, v12);
  if (v10)
  {
    if (v13)
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_23B979000, v11, v12, "SerialTaskQueue: Recursing process() since queue is not yet empty", v14, 2u);
      MEMORY[0x24260D9B4](v14, -1, -1);
    }

    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v15;
    *v15 = v0;
    v15[1] = sub_23B9C8F14;
    return sub_23B9C8664();
  }
  else
  {
    if (v13)
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_23B979000, v11, v12, "SerialTaskQueue: Queue is empty", v17, 2u);
      MEMORY[0x24260D9B4](v17, -1, -1);
    }

    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABC8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_23B979000, v18, v19, "SerialTaskQueue: Returning from process()", v20, 2u);
      MEMORY[0x24260D9B4](v20, -1, -1);
    }
    v21 = *(_QWORD *)(v0 + 136);

    sub_23B9C91D0(v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23B9C8F14()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9C8F68()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABC8();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "SerialTaskQueue: Returning from process()", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 136);

  sub_23B9C91D0(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9C903C@<X0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = type metadata accessor for SerialTaskQueue.WorkItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v16 - v10;
  v12 = *v1;
  if (!*(_QWORD *)(*v1 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    v14 = *(_QWORD *)(v12 + 16);
    if (v14)
    {
LABEL_4:
      v15 = v14 - 1;
      sub_23B9C933C(v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * (v14 - 1), (uint64_t)v8);
      *(_QWORD *)(v12 + 16) = v15;
      *v1 = v12;
      sub_23B9C933C((uint64_t)v8, (uint64_t)v11);
      sub_23B9C933C((uint64_t)v11, a1);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  else
  {
    result = sub_23B9C9328(v12);
    v12 = result;
    v14 = *(_QWORD *)(result + 16);
    if (v14)
      goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B9C918C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SerialTaskQueue.WorkItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23B9C91D0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SerialTaskQueue.WorkItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B9C920C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9C9238()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B97C964;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23B990D68;
  return sub_23B9C8664();
}

unint64_t sub_23B9C92A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5AEC8;
  if (!qword_256A5AEC8)
  {
    v1 = sub_23BB889CC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, &qword_256A5AEC8);
  }
  return result;
}

uint64_t sub_23B9C92E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AED8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B9C9328(unint64_t a1)
{
  return sub_23BB631E8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23B9C933C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SerialTaskQueue.WorkItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static DeviceImageProvider.live()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEE0);
  swift_allocObject();
  result = sub_23BB8A5B0();
  *a1 = &unk_256A5AEF0;
  a1[1] = result;
  return result;
}

void sub_23B9C93D4(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;
  id v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  id v12;

  v6 = (void *)objc_opt_self();
  sub_23B9C9BA0(a1, a2);
  v7 = objc_msgSend(v6, sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  v9 = v8;

  v10 = objc_allocWithZone(MEMORY[0x24BEBD640]);
  v11 = (void *)sub_23BB88858();
  v12 = objc_msgSend(v10, sel_initWithData_scale_, v11, v9);
  sub_23B9BDAD0(a1, a2);

  *a3 = v12;
}

uint64_t sub_23B9C94AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 96) = a2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v2 + 64) = v3;
  *(_BYTE *)(v2 + 80) = *(_BYTE *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 104) = sub_23BB8A9F4();
  *(_QWORD *)(v2 + 112) = sub_23BB8A9E8();
  *(_QWORD *)(v2 + 120) = sub_23BB8A988();
  *(_QWORD *)(v2 + 128) = v5;
  return swift_task_switch();
}

uint64_t sub_23B9C9534()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[12];
  v0[17] = sub_23BB8A9E8();
  v2 = swift_task_alloc();
  v0[18] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[19] = v3;
  sub_23B9C9AC0();
  *v3 = v0;
  v3[1] = sub_23B9C95F4;
  return sub_23BB8B1BC();
}

uint64_t sub_23B9C95F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23B9C9668()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
}

uint64_t sub_23B9C96A0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9C96E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B9C9738;
  return sub_23B9C94AC(a1, v1);
}

uint64_t sub_23B9C9738(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_23B9C9788(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[4];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;

  v41 = a1;
  v42 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEF8);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  v40 = *(_QWORD *)(v38 + 64);
  MEMORY[0x24BDAC7A8](v4, v5);
  v37 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB8A5D4();
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v32 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB8A4C0();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)v31 - v17;
  v19 = sub_23BB8A664();
  v35 = *(_QWORD *)(v19 - 8);
  v36 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)a3 + 64))
    v23 = (unsigned int *)MEMORY[0x24BE2FFD8];
  else
    v23 = (unsigned int *)MEMORY[0x24BE2FFD0];
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v15, *v23, v10);
  v24 = *a3;
  v31[2] = a3[2];
  v31[3] = v24;
  v31[1] = a3[4];
  v25 = *((char *)a3 + 48);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v32, **((unsigned int **)&unk_250CABEB0 + v25), v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB8A61C();
  v27 = v37;
  v26 = v38;
  v28 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v41, v39);
  v29 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v30 + v29, v27, v28);
  sub_23BB8A478();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v36);

}

uint64_t sub_23B9C9A40(uint64_t a1)
{
  void *v2;
  id v3;
  id v5;

  v2 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEF8);
    return sub_23BB8A994();
  }
  else
  {
    v5 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEF8);
    return sub_23BB8A9A0();
  }
}

void sub_23B9C9AB8(uint64_t a1)
{
  uint64_t v1;

  sub_23B9C9788(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

unint64_t sub_23B9C9AC0()
{
  unint64_t result;

  result = qword_256A5ABF8;
  if (!qword_256A5ABF8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A5ABF8);
  }
  return result;
}

uint64_t sub_23B9C9AFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEF8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23B9C9B60(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AEF8);
  return sub_23B9C9A40(a1);
}

uint64_t sub_23B9C9BA0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t destroy for AccessoryOnboardingOverview(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t initializeWithCopy for AccessoryOnboardingOverview(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for AccessoryOnboardingOverview(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AccessoryOnboardingOverview(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryOnboardingOverview(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryOnboardingOverview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryOnboardingOverview()
{
  return &type metadata for AccessoryOnboardingOverview;
}

uint64_t sub_23B9C9D7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9C9D8C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AF00);
  sub_23BB8A0D0();
  a1[8] = &type metadata for AccessoryOnboardingContentView;
  a1[9] = sub_23B9C9E4C();
  v2 = swift_allocObject();
  a1[5] = v2;
  sub_23BB8A0D0();
  *(_QWORD *)(v2 + 56) = 0x4058000000000000;
  sub_23BB89B9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AF10);
  return sub_23BB89A4C();
}

unint64_t sub_23B9C9E4C()
{
  unint64_t result;

  result = qword_256A5AF08;
  if (!qword_256A5AF08)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98F60, &type metadata for AccessoryOnboardingContentView);
    atomic_store(result, (unint64_t *)&qword_256A5AF08);
  }
  return result;
}

uint64_t sub_23B9C9E90()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_23B9C9EB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5AF18;
  if (!qword_256A5AF18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AF10);
    v2[0] = sub_23B9C9F24();
    v2[1] = sub_23B9C9F68();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5AF18);
  }
  return result;
}

unint64_t sub_23B9C9F24()
{
  unint64_t result;

  result = qword_256A5AF20;
  if (!qword_256A5AF20)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8E09C, &type metadata for AccessoryOBKWrapper);
    atomic_store(result, (unint64_t *)&qword_256A5AF20);
  }
  return result;
}

unint64_t sub_23B9C9F68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5AF28;
  if (!qword_256A5AF28)
  {
    v1 = sub_23BB89A58();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF02F0], v1);
    atomic_store(result, (unint64_t *)&qword_256A5AF28);
  }
  return result;
}

uint64_t OnboardingSessionMock.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t OnboardingSessionMock.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t OnboardingSessionMock.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t OnboardingSessionMock.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_23B9C9FE0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_23BB8AF1C();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9CA03C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23B9CA0BC;
  return v3(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23B9CA0BC()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  swift_task_dealloc();
  v4 = *(_QWORD *)(v2 + 24);
  v3 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 16);
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16));
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v2 + 8))(0);
  }
}

uint64_t sub_23B9CA178()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t type metadata accessor for OnboardingSessionMock()
{
  return objc_opt_self();
}

uint64_t method lookup function for OnboardingSessionMock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OnboardingSessionMock.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_23B9CA1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_23BB8AF04();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_23B9CA288()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_23BB8AF1C();
  sub_23B97D0C8(&qword_256A5AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_23BB8B1EC();
  sub_23B97D0C8((unint64_t *)&unk_256A5E9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_23BB8AF28();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_23B9CA3A0;
  return sub_23BB8B1F8();
}

uint64_t sub_23B9CA3A0()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_23B9CA44C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ViewModel.hash(into:)()
{
  return sub_23BB8B24C();
}

BOOL static ViewModel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t DevicesListController.Dependencies.beaconsInfoProvider.getter()
{
  return swift_retain();
}

uint64_t DevicesListController.Dependencies.userLocationProvider.getter()
{
  return swift_retain();
}

uint64_t DevicesListController.Dependencies.deviceImageProvider.getter()
{
  return swift_retain();
}

uint64_t DevicesListController.Dependencies.init(beaconsInfoProvider:userLocationProvider:deviceImageProvider:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _s12DependenciesVwxx_1()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s12DependenciesVwCP_0_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s12DependenciesVwca_1(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s12DependenciesVwta_1(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DevicesListController.Dependencies()
{
  return &type metadata for DevicesListController.Dependencies;
}

uint64_t DeviceInfo.identifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t DeviceInfo.beaconState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[224];

  sub_23B990D24(v1 + 16, (uint64_t)v4, &qword_256A59668);
  sub_23B990D24((uint64_t)v4, a1, &qword_256A59668);
  return sub_23B990954((uint64_t)v4, sub_23B9CA6A0);
}

void sub_23B9CA6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  if ((a21 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (a28 & 0x70) != 0)
    sub_23B989738(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28);
}

id DeviceInfo.iconState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  unsigned __int8 v4;

  v2 = *(void **)(v1 + 240);
  v3 = *(void **)(v1 + 248);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 256);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23B9CA790(v2, v3, v4);
}

id sub_23B9CA790(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_23B9CA7A8(result, a2, a3 & 1);
  return result;
}

id sub_23B9CA7A8(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    return (id)swift_bridgeObjectRetain();
  else
    return a1;
}

id DeviceInfo.userLocationState.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 264);
  *a1 = v2;
  return v2;
}

uint64_t DeviceInfo.mapsDirections.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DeviceInfo() + 32);
  return sub_23B9BE6A8(v3, a1);
}

uint64_t type metadata accessor for DeviceInfo()
{
  uint64_t result;

  result = qword_256A5B040;
  if (!qword_256A5B040)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DeviceInfo.displayName.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[224];
  _BYTE v6[224];
  _BYTE v7[224];

  sub_23B990D24(v0 + 16, (uint64_t)v6, &qword_256A59668);
  sub_23B990D24((uint64_t)v6, (uint64_t)v7, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v7) == 1)
    return 0;
  sub_23B989684((uint64_t)v7, (uint64_t)v5);
  v1 = sub_23B990938((uint64_t)v5);
  v2 = sub_23B990944((uint64_t)v5);
  if (v1 != 1)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_23B9CA8D8(uint64_t a1)
{
  unsigned int v1;

  v1 = (*(_QWORD *)(a1 + 160) >> 2) & 0xFFFFFF80 | (*(_QWORD *)(a1 + 160) >> 1);
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

_QWORD *DeviceInfo.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  _OWORD v7[14];
  _BYTE v8[224];
  _BYTE v9[224];

  sub_23B990D24(v1 + 16, (uint64_t)v8, &qword_256A59668);
  sub_23B990D24((uint64_t)v8, (uint64_t)v9, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v9) == 1
    || (sub_23B989684((uint64_t)v9, (uint64_t)v7),
        v3 = sub_23B990938((uint64_t)v7),
        v4 = sub_23B990944((uint64_t)v7),
        v3 != 1))
  {
    sub_23B9BE144(v7);
    return (_QWORD *)sub_23B990D24((uint64_t)v7, a1, &qword_256A5AA50);
  }
  else
  {
    v5 = (_QWORD *)(v4 + 32);
    sub_23B990D24(v4 + 32, a1, &qword_256A5AA50);
    return sub_23B9CAF00(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
  }
}

uint64_t DeviceInfo.isThisDevice.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _BYTE v4[224];
  _BYTE v5[224];
  _BYTE v6[232];

  sub_23B990D24(v0 + 16, (uint64_t)v5, &qword_256A59668);
  sub_23B990D24((uint64_t)v5, (uint64_t)v6, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v6) == 1)
    return 0;
  sub_23B989684((uint64_t)v6, (uint64_t)v4);
  v1 = sub_23B990938((uint64_t)v4);
  v2 = sub_23B990944((uint64_t)v4);
  if (v1 != 1)
    return 0;
  else
    return *(unsigned __int8 *)(v2 + 160);
}

uint64_t DeviceInfo.isBTConnected.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _BYTE v4[224];
  _BYTE v5[224];
  _BYTE v6[232];

  sub_23B990D24(v0 + 16, (uint64_t)v5, &qword_256A59668);
  sub_23B990D24((uint64_t)v5, (uint64_t)v6, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v6) == 1)
    return 0;
  sub_23B989684((uint64_t)v6, (uint64_t)v4);
  v1 = sub_23B990938((uint64_t)v4);
  v2 = sub_23B990944((uint64_t)v4);
  if (v1 != 1)
    return 0;
  else
    return *(unsigned __int8 *)(v2 + 161);
}

BOOL DeviceInfo.hasLocation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3[16];
  _BYTE v4[224];
  _BYTE v5[224];
  _BYTE v6[232];

  sub_23B990D24(v0 + 16, (uint64_t)v5, &qword_256A59668);
  sub_23B990D24((uint64_t)v5, (uint64_t)v6, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v6) != 1)
  {
    sub_23B989684((uint64_t)v6, (uint64_t)v4);
    if (sub_23B990938((uint64_t)v4) == 1)
    {
      v1 = sub_23B990944((uint64_t)v4);
      sub_23B990D24(v1 + 32, (uint64_t)v3, &qword_256A5AA50);
      return sub_23B9B20A4(v3) != 1;
    }
    sub_23B990944((uint64_t)v4);
  }
  return 0;
}

uint64_t DeviceInfo.isLoadingLocation.getter()
{
  uint64_t v0;
  int v1;
  unsigned __int8 *v2;
  uint64_t v3;
  _BYTE v5[224];
  _BYTE v6[224];
  _BYTE v7[232];

  sub_23B990D24(v0 + 16, (uint64_t)v6, &qword_256A59668);
  sub_23B990D24((uint64_t)v6, (uint64_t)v7, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v7) == 1)
    return 0;
  sub_23B989684((uint64_t)v7, (uint64_t)v5);
  v1 = sub_23B990938((uint64_t)v5);
  v2 = (unsigned __int8 *)sub_23B990944((uint64_t)v5);
  if (v1 == 1)
    return 0;
  v3 = *v2;
  sub_23B990954((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9CAC30);
  return v3;
}

uint64_t sub_23B9CAC30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  if ((a21 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (a28 & 0x70) != 0)
    return sub_23B9909D0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  return result;
}

_QWORD *DeviceInfo.distanceFromUserLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _OWORD v13[8];
  uint64_t v14[16];
  _OWORD v15[14];
  _OWORD v16[8];
  _BYTE v17[224];
  _BYTE v18[224];

  sub_23B990D24(v1 + 16, (uint64_t)v17, &qword_256A59668);
  sub_23B990D24((uint64_t)v17, (uint64_t)v18, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v18) == 1)
    goto LABEL_6;
  sub_23B989684((uint64_t)v18, (uint64_t)v15);
  if (sub_23B990938((uint64_t)v15) != 1)
  {
    sub_23B990944((uint64_t)v15);
LABEL_6:
    sub_23B9BE144(v15);
    v4 = v15;
    goto LABEL_7;
  }
  v3 = (_QWORD *)(sub_23B990944((uint64_t)v15) + 32);
  sub_23B990D24((uint64_t)v3, (uint64_t)v14, &qword_256A5AA50);
  if (sub_23B9B20A4(v14) == 1)
  {
    v4 = v3;
LABEL_7:
    sub_23B990D24((uint64_t)v4, (uint64_t)v16, &qword_256A5AA50);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
    v6 = v16;
    return sub_23B9CAF00(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
  }
  sub_23B990D24((uint64_t)v3, (uint64_t)v13, &qword_256A5AA50);
  v16[4] = v13[4];
  v16[5] = v13[5];
  v16[6] = v13[6];
  v16[7] = v13[7];
  v16[0] = v13[0];
  v16[1] = v13[1];
  v16[2] = v13[2];
  v16[3] = v13[3];
  v8 = *(void **)(v1 + 264);
  if (!v8)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    return (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  v12 = v8;
  sub_23B9CAF00(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
  v9 = v8;
  sub_23B9BE478(&v12, (void **)v16, a1);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);

  v6 = v3;
  return sub_23B9CAF00(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
}

_QWORD *sub_23B9CAF00(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

Swift::Bool __swiftcall DeviceInfo.isIncluded(search:)(Swift::String search)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  void *object;
  uint64_t countAndFlagsBits;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  _BYTE v18[224];
  _BYTE v19[224];

  v2 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0)
    v2 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    v3 = v1;
    object = search._object;
    countAndFlagsBits = search._countAndFlagsBits;
    sub_23B990D24((uint64_t)(v1 + 2), (uint64_t)v18, &qword_256A59668);
    sub_23B990D24((uint64_t)v18, (uint64_t)v19, &qword_256A59668);
    if (sub_23B9CA8D8((uint64_t)v19) == 1
      || (sub_23B989684((uint64_t)v19, (uint64_t)&v14),
          v6 = sub_23B990938((uint64_t)&v14),
          v7 = sub_23B990944((uint64_t)&v14),
          v6 != 1))
    {
      v8 = 0;
      v9 = 0xE000000000000000;
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      swift_bridgeObjectRetain();
    }
    v14 = v8;
    v15 = v9;
    v16 = countAndFlagsBits;
    v17 = object;
    sub_23B9967E0();
    v10 = sub_23BB8ACF4();
    swift_bridgeObjectRelease();
    v11 = v3[1];
    v14 = *v3;
    v15 = v11;
    v16 = countAndFlagsBits;
    v17 = object;
    v12 = v10 | sub_23BB8ACF4();
  }
  else
  {
    v12 = 1;
  }
  return v12 & 1;
}

uint64_t DeviceInfo.statusSortOrder.getter()
{
  return 2;
}

uint64_t DeviceInfo.nonOptionalDistanceFromUserLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _OWORD v21[8];
  uint64_t v22[16];
  _OWORD v23[14];
  _OWORD v24[8];
  _BYTE v25[224];
  _BYTE v26[224];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA58);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B990D24(v1 + 16, (uint64_t)v25, &qword_256A59668);
  sub_23B990D24((uint64_t)v25, (uint64_t)v26, &qword_256A59668);
  if (sub_23B9CA8D8((uint64_t)v26) == 1)
    goto LABEL_6;
  sub_23B989684((uint64_t)v26, (uint64_t)v23);
  if (sub_23B990938((uint64_t)v23) != 1)
  {
    sub_23B990944((uint64_t)v23);
LABEL_6:
    sub_23B9BE144(v23);
    v8 = v23;
    goto LABEL_7;
  }
  v7 = (_QWORD *)(sub_23B990944((uint64_t)v23) + 32);
  sub_23B990D24((uint64_t)v7, (uint64_t)v22, &qword_256A5AA50);
  if (sub_23B9B20A4(v22) == 1)
  {
    v8 = v7;
LABEL_7:
    sub_23B990D24((uint64_t)v8, (uint64_t)v24, &qword_256A5AA50);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    v10 = v24;
    goto LABEL_8;
  }
  sub_23B990D24((uint64_t)v7, (uint64_t)v21, &qword_256A5AA50);
  v24[4] = v21[4];
  v24[5] = v21[5];
  v24[6] = v21[6];
  v24[7] = v21[7];
  v24[0] = v21[0];
  v24[1] = v21[1];
  v24[2] = v21[2];
  v24[3] = v21[3];
  v15 = *(void **)(v1 + 264);
  if (!v15)
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
    goto LABEL_9;
  }
  v20 = v15;
  sub_23B9CAF00(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B989540);
  v16 = v15;
  sub_23B9BE478(&v20, (void **)v24, (uint64_t)v6);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 0, 1, v17);

  v10 = v7;
LABEL_8:
  sub_23B9CAF00(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B990B20);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
LABEL_9:
    v13 = objc_msgSend((id)objc_opt_self(), sel_lightyears);
    sub_23B97CD2C();
    sub_23BB88678();
    return sub_23B989D60((uint64_t)v6, &qword_256A5AA58);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v6, v11);
}

uint64_t initializeBufferWithCopyOfBuffer for DeviceInfo(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  char v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  id v69;
  id v70;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[22];
    v9 = *((_BYTE *)a2 + 232);
    swift_bridgeObjectRetain();
    if ((v8 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (v9 & 0x70) == 0)
    {
      v19 = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 192) = v19;
      *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 217) = *(_OWORD *)((char *)a2 + 217);
      v20 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v20;
      v21 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v21;
      v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v22;
      v23 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v23;
      v24 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v24;
    }
    else
    {
      v92 = a2[3];
      v93 = a2[9];
      v73 = a2[10];
      v74 = a2[11];
      v75 = a2[12];
      v76 = a2[13];
      v77 = a2[14];
      v78 = a2[15];
      v79 = a2[16];
      v80 = a2[17];
      v81 = a2[18];
      v82 = a2[19];
      v83 = a2[20];
      v84 = a2[21];
      v85 = a2[23];
      v86 = a2[24];
      v87 = a2[25];
      v88 = a2[26];
      v89 = a2[27];
      v90 = a2[28];
      v72 = v9;
      v11 = a2[2];
      v12 = a2[4];
      v13 = a2[5];
      v14 = a2[6];
      v15 = v9;
      v16 = a2[7];
      v91 = v6;
      v17 = a2[8];
      sub_23B989738(v11, v92, v12, v13, v14, v16, v17, v93, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83,
        v84,
        v8,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v72);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v92;
      *(_QWORD *)(a1 + 32) = v12;
      *(_QWORD *)(a1 + 40) = v13;
      *(_QWORD *)(a1 + 48) = v14;
      *(_QWORD *)(a1 + 56) = v16;
      *(_QWORD *)(a1 + 64) = v17;
      v6 = v91;
      *(_QWORD *)(a1 + 72) = v93;
      *(_QWORD *)(a1 + 80) = v73;
      *(_QWORD *)(a1 + 88) = v74;
      *(_QWORD *)(a1 + 96) = v75;
      *(_QWORD *)(a1 + 104) = v76;
      *(_QWORD *)(a1 + 112) = v77;
      *(_QWORD *)(a1 + 120) = v78;
      *(_QWORD *)(a1 + 128) = v79;
      *(_QWORD *)(a1 + 136) = v80;
      *(_QWORD *)(a1 + 144) = v81;
      *(_QWORD *)(a1 + 152) = v82;
      *(_QWORD *)(a1 + 160) = v83;
      *(_QWORD *)(a1 + 168) = v84;
      *(_QWORD *)(a1 + 176) = v8;
      *(_QWORD *)(a1 + 184) = v85;
      *(_QWORD *)(a1 + 192) = v86;
      *(_QWORD *)(a1 + 200) = v87;
      *(_QWORD *)(a1 + 208) = v88;
      *(_QWORD *)(a1 + 216) = v89;
      *(_QWORD *)(a1 + 224) = v90;
      *(_BYTE *)(a1 + 232) = v15;
    }
    v25 = *((unsigned __int8 *)a2 + 256);
    if (v25 == 255)
    {
      *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
      *(_BYTE *)(a1 + 256) = *((_BYTE *)a2 + 256);
    }
    else
    {
      v26 = v25 & 1;
      v27 = (void *)a2[30];
      v28 = (void *)a2[31];
      sub_23B9CA7A8(v27, v28, v25 & 1);
      *(_QWORD *)(a1 + 240) = v27;
      *(_QWORD *)(a1 + 248) = v28;
      *(_BYTE *)(a1 + 256) = v26;
    }
    v29 = (void *)a2[33];
    *(_QWORD *)(a1 + 264) = v29;
    v30 = *(int *)(v6 + 32);
    v31 = (char *)(a1 + v30);
    v32 = (char *)a2 + v30;
    v33 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v29;
    if (v35(v32, 1, v33))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v41 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v31, v32, v41);
        v42 = *(int *)(v38 + 20);
        v43 = *(void **)&v32[v42];
        *(_QWORD *)&v31[v42] = v43;
        v44 = *(int *)(v38 + 24);
        v45 = &v31[v44];
        v46 = &v32[v44];
        v47 = *((_QWORD *)v46 + 1);
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = v47;
        v48 = (void *)*((_QWORD *)v46 + 2);
        *((_QWORD *)v45 + 2) = v48;
        v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
        v50 = v43;
        swift_bridgeObjectRetain();
        v51 = v48;
        v49(v31, 0, 1, v38);
      }
      v52 = *(int *)(v33 + 20);
      v53 = &v31[v52];
      v54 = &v32[v52];
      v55 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        v58 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v53, v54, v58);
        v59 = *(int *)(v38 + 20);
        v60 = *(void **)&v54[v59];
        *(_QWORD *)&v53[v59] = v60;
        v61 = *(int *)(v38 + 24);
        v62 = &v53[v61];
        v63 = &v54[v61];
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = v64;
        v94 = (void *)*((_QWORD *)v63 + 2);
        *((_QWORD *)v62 + 2) = v94;
        v65 = *(int *)(v55 + 20);
        v66 = &v53[v65];
        v67 = &v54[v65];
        *(_OWORD *)v66 = *(_OWORD *)v67;
        *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
        v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56);
        v69 = v60;
        swift_bridgeObjectRetain();
        v70 = v94;
        v68(v53, 0, 1, v55);
      }
      v31[*(int *)(v33 + 24)] = v32[*(int *)(v33 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
  }
  return a1;
}

void destroy for DeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 176);
  v5 = *(_BYTE *)(a1 + 232);
  if ((v4 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v5 & 0x70) != 0)
    sub_23B9909D0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      v4,
      *(_QWORD *)(a1 + 184),
      *(_QWORD *)(a1 + 192),
      *(_QWORD *)(a1 + 200),
      *(_QWORD *)(a1 + 208),
      *(_QWORD *)(a1 + 216),
      *(_QWORD *)(a1 + 224),
      v5);
  v7 = *(unsigned __int8 *)(a1 + 256);
  if (v7 != 255)
    sub_23B9CBA50(*(void **)(a1 + 240), *(id *)(a1 + 248), v7 & 1);

  v8 = a1 + *(int *)(a2 + 32);
  v9 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10))
    {
      v11 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);

      v12 = v8 + *(int *)(v10 + 24);
      swift_bridgeObjectRelease();

    }
    v13 = v8 + *(int *)(v9 + 20);
    v14 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v15 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);

      v16 = v13 + *(int *)(v10 + 24);
      swift_bridgeObjectRelease();

    }
  }
}

void sub_23B9CBA50(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_bridgeObjectRelease();
  else

}

uint64_t initializeWithCopy for DeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int v24;
  char v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  id v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  id v68;
  id v69;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 176);
  v8 = *(_BYTE *)(a2 + 232);
  swift_bridgeObjectRetain();
  if ((v7 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (v8 & 0x70) == 0)
  {
    v18 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v18;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
    v19 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v19;
    v20 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v20;
    v21 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v21;
    v22 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v22;
    v23 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v23;
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v93 = a3;
    v73 = *(_QWORD *)(a2 + 80);
    v74 = *(_QWORD *)(a2 + 88);
    v75 = *(_QWORD *)(a2 + 96);
    v77 = *(_QWORD *)(a2 + 104);
    v78 = *(_QWORD *)(a2 + 112);
    v79 = *(_QWORD *)(a2 + 120);
    v80 = *(_QWORD *)(a2 + 128);
    v82 = *(_QWORD *)(a2 + 136);
    v83 = *(_QWORD *)(a2 + 144);
    v84 = *(_QWORD *)(a2 + 152);
    v85 = *(_QWORD *)(a2 + 160);
    v86 = *(_QWORD *)(a2 + 168);
    v87 = *(_QWORD *)(a2 + 184);
    v88 = *(_QWORD *)(a2 + 192);
    v89 = *(_QWORD *)(a2 + 200);
    v90 = *(_QWORD *)(a2 + 208);
    v91 = *(_QWORD *)(a2 + 216);
    v92 = *(_QWORD *)(a2 + 224);
    v72 = v8;
    v71 = v7;
    v12 = *(_QWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    v15 = *(_QWORD *)(a2 + 56);
    v81 = v8;
    v16 = *(_QWORD *)(a2 + 64);
    v76 = v7;
    v17 = *(_QWORD *)(a2 + 72);
    sub_23B989738(v10, v11, v12, v13, v14, v15, v16, v17, v73, v74, v75, v77, v78, v79, v80, v82, v83, v84, v85,
      v86,
      v71,
      v87,
      v88,
      v89,
      v90,
      v91,
      v92,
      v72);
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v13;
    a3 = v93;
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v15;
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v17;
    *(_QWORD *)(a1 + 80) = v73;
    *(_QWORD *)(a1 + 88) = v74;
    *(_QWORD *)(a1 + 96) = v75;
    *(_QWORD *)(a1 + 104) = v77;
    *(_QWORD *)(a1 + 112) = v78;
    *(_QWORD *)(a1 + 120) = v79;
    *(_QWORD *)(a1 + 128) = v80;
    *(_QWORD *)(a1 + 136) = v82;
    *(_QWORD *)(a1 + 144) = v83;
    *(_QWORD *)(a1 + 152) = v84;
    *(_QWORD *)(a1 + 160) = v85;
    *(_QWORD *)(a1 + 168) = v86;
    *(_QWORD *)(a1 + 176) = v76;
    *(_QWORD *)(a1 + 184) = v87;
    *(_QWORD *)(a1 + 192) = v88;
    *(_QWORD *)(a1 + 200) = v89;
    *(_QWORD *)(a1 + 208) = v90;
    *(_QWORD *)(a1 + 216) = v91;
    *(_QWORD *)(a1 + 224) = v92;
    *(_BYTE *)(a1 + 232) = v81;
  }
  v24 = *(unsigned __int8 *)(a2 + 256);
  if (v24 == 255)
  {
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  }
  else
  {
    v25 = v24 & 1;
    v26 = *(void **)(a2 + 240);
    v27 = *(void **)(a2 + 248);
    sub_23B9CA7A8(v26, v27, v24 & 1);
    *(_QWORD *)(a1 + 240) = v26;
    *(_QWORD *)(a1 + 248) = v27;
    *(_BYTE *)(a1 + 256) = v25;
  }
  v28 = *(void **)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v28;
  v29 = *(int *)(a3 + 32);
  v30 = (char *)(a1 + v29);
  v31 = (char *)(a2 + v29);
  v32 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v28;
  if (v34(v31, 1, v32))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v40 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v30, v31, v40);
      v41 = *(int *)(v37 + 20);
      v42 = *(void **)&v31[v41];
      *(_QWORD *)&v30[v41] = v42;
      v43 = *(int *)(v37 + 24);
      v44 = &v30[v43];
      v45 = &v31[v43];
      v46 = *((_QWORD *)v45 + 1);
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *((_QWORD *)v44 + 1) = v46;
      v47 = (void *)*((_QWORD *)v45 + 2);
      *((_QWORD *)v44 + 2) = v47;
      v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56);
      v49 = v42;
      swift_bridgeObjectRetain();
      v50 = v47;
      v48(v30, 0, 1, v37);
    }
    v51 = *(int *)(v32 + 20);
    v52 = &v30[v51];
    v53 = &v31[v51];
    v54 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v52, v53, v57);
      v58 = *(int *)(v37 + 20);
      v59 = *(void **)&v53[v58];
      *(_QWORD *)&v52[v58] = v59;
      v60 = *(int *)(v37 + 24);
      v61 = &v52[v60];
      v62 = &v53[v60];
      v63 = *((_QWORD *)v62 + 1);
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_QWORD *)v61 + 1) = v63;
      v94 = (void *)*((_QWORD *)v62 + 2);
      *((_QWORD *)v61 + 2) = v94;
      v64 = *(int *)(v54 + 20);
      v65 = &v52[v64];
      v66 = &v53[v64];
      *(_OWORD *)v65 = *(_OWORD *)v66;
      *((_QWORD *)v65 + 2) = *((_QWORD *)v66 + 2);
      v67 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56);
      v68 = v59;
      swift_bridgeObjectRetain();
      v69 = v94;
      v67(v52, 0, 1, v54);
    }
    v30[*(int *)(v32 + 24)] = v31[*(int *)(v32 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  return a1;
}

uint64_t assignWithCopy for DeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  char v9;
  BOOL v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;
  __int128 *v67;
  char *v68;
  int v69;
  char v70;
  __int128 v71;
  char v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  char v77;
  char v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  id v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(_BYTE *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(_BYTE *, uint64_t, uint64_t);
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  void *v107;
  void (*v108)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  void *v117;
  void (*v118)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v119;
  id v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, _QWORD, uint64_t, uint64_t);
  id v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(char *, uint64_t, uint64_t);
  int v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  void *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v160)(char *, _QWORD, uint64_t, uint64_t);
  id v161;
  id v162;
  uint64_t v163;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  void *v168;
  id v169;
  uint64_t v170;
  _QWORD *v171;
  char *v172;
  void *v173;
  void *v174;
  id v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  void *v179;
  id v180;
  uint64_t v181;
  char *v182;
  char *v183;
  void *v184;
  void *v185;
  id v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 16);
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 176);
  v9 = *(_BYTE *)(a2 + 232);
  v11 = (v9 & 0x70) == 0 && (v8 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL;
  if ((*(_QWORD *)(a1 + 176) & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (*(_BYTE *)(a1 + 232) & 0x70) == 0)
  {
    if (v11)
    {
      v23 = *(_OWORD *)(a2 + 32);
      *v6 = *v7;
      *(_OWORD *)(a1 + 32) = v23;
      v24 = *(_OWORD *)(a2 + 48);
      v25 = *(_OWORD *)(a2 + 64);
      v26 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v26;
      *(_OWORD *)(a1 + 48) = v24;
      *(_OWORD *)(a1 + 64) = v25;
      v27 = *(_OWORD *)(a2 + 112);
      v28 = *(_OWORD *)(a2 + 128);
      v29 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v29;
      *(_OWORD *)(a1 + 112) = v27;
      *(_OWORD *)(a1 + 128) = v28;
      v30 = *(_OWORD *)(a2 + 176);
      v31 = *(_OWORD *)(a2 + 192);
      v32 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
      *(_OWORD *)(a1 + 192) = v31;
      *(_OWORD *)(a1 + 208) = v32;
      *(_OWORD *)(a1 + 176) = v30;
    }
    else
    {
      v58 = *(_QWORD *)(a2 + 16);
      v59 = *(_QWORD *)(a2 + 24);
      v231 = a3;
      v190 = *(_QWORD *)(a2 + 80);
      v192 = *(_QWORD *)(a2 + 88);
      v194 = *(_QWORD *)(a2 + 96);
      v198 = *(_QWORD *)(a2 + 104);
      v200 = *(_QWORD *)(a2 + 112);
      v202 = *(_QWORD *)(a2 + 120);
      v204 = *(_QWORD *)(a2 + 128);
      v208 = *(_QWORD *)(a2 + 136);
      v210 = *(_QWORD *)(a2 + 144);
      v212 = *(_QWORD *)(a2 + 152);
      v214 = *(_QWORD *)(a2 + 160);
      v216 = *(_QWORD *)(a2 + 168);
      v218 = *(_QWORD *)(a2 + 184);
      v220 = *(_QWORD *)(a2 + 192);
      v223 = *(_QWORD *)(a2 + 200);
      v225 = *(_QWORD *)(a2 + 208);
      v227 = *(_QWORD *)(a2 + 216);
      v229 = *(_QWORD *)(a2 + 224);
      v60 = *(_QWORD *)(a2 + 32);
      v61 = *(_QWORD *)(a2 + 40);
      v62 = *(_QWORD *)(a2 + 48);
      v63 = *(_QWORD *)(a2 + 56);
      v206 = *(_BYTE *)(a2 + 232);
      v64 = *(_QWORD *)(a2 + 64);
      v196 = *(_QWORD *)(a2 + 176);
      v65 = *(_QWORD *)(a2 + 72);
      sub_23B989738(v58, v59, v60, v61, v62, v63, v64, v65, v190, v192, v194, v198, v200, v202, v204, v208, v210, v212, v214,
        v216,
        v196,
        v218,
        v220,
        v223,
        v225,
        v227,
        v229,
        v206);
      *(_QWORD *)(a1 + 16) = v58;
      *(_QWORD *)(a1 + 24) = v59;
      *(_QWORD *)(a1 + 32) = v60;
      *(_QWORD *)(a1 + 40) = v61;
      *(_QWORD *)(a1 + 48) = v62;
      *(_QWORD *)(a1 + 56) = v63;
      a3 = v231;
      *(_QWORD *)(a1 + 64) = v64;
      *(_QWORD *)(a1 + 72) = v65;
      *(_QWORD *)(a1 + 80) = v190;
      *(_QWORD *)(a1 + 88) = v192;
      *(_QWORD *)(a1 + 96) = v194;
      *(_QWORD *)(a1 + 104) = v198;
      *(_QWORD *)(a1 + 112) = v200;
      *(_QWORD *)(a1 + 120) = v202;
      *(_QWORD *)(a1 + 128) = v204;
      *(_QWORD *)(a1 + 136) = v208;
      *(_QWORD *)(a1 + 144) = v210;
      *(_QWORD *)(a1 + 152) = v212;
      *(_QWORD *)(a1 + 160) = v214;
      *(_QWORD *)(a1 + 168) = v216;
      *(_QWORD *)(a1 + 176) = v196;
      *(_QWORD *)(a1 + 184) = v218;
      *(_QWORD *)(a1 + 192) = v220;
      *(_QWORD *)(a1 + 200) = v223;
      *(_QWORD *)(a1 + 208) = v225;
      *(_QWORD *)(a1 + 216) = v227;
      *(_QWORD *)(a1 + 224) = v229;
      *(_BYTE *)(a1 + 232) = v206;
    }
  }
  else if (v11)
  {
    sub_23B9CC9F4(a1 + 16);
    v13 = *(_OWORD *)(a2 + 32);
    *v6 = *v7;
    *(_OWORD *)(a1 + 32) = v13;
    v14 = *(_OWORD *)(a2 + 96);
    v16 = *(_OWORD *)(a2 + 48);
    v15 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
    *(_OWORD *)(a1 + 48) = v16;
    *(_OWORD *)(a1 + 64) = v15;
    v17 = *(_OWORD *)(a2 + 160);
    v19 = *(_OWORD *)(a2 + 112);
    v18 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v17;
    *(_OWORD *)(a1 + 112) = v19;
    *(_OWORD *)(a1 + 128) = v18;
    v21 = *(_OWORD *)(a2 + 192);
    v20 = *(_OWORD *)(a2 + 208);
    v22 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
    *(_OWORD *)(a1 + 192) = v21;
    *(_OWORD *)(a1 + 208) = v20;
    *(_OWORD *)(a1 + 176) = v22;
  }
  else
  {
    v228 = *(_QWORD *)(a2 + 16);
    v230 = a3;
    v191 = *(_QWORD *)(a2 + 64);
    v193 = *(_QWORD *)(a2 + 48);
    v195 = *(_QWORD *)(a2 + 80);
    v197 = *(_QWORD *)(a2 + 88);
    v199 = *(_QWORD *)(a2 + 96);
    v201 = *(_QWORD *)(a2 + 104);
    v33 = *(_QWORD *)(a2 + 120);
    v203 = *(_QWORD *)(a2 + 112);
    v205 = *(_QWORD *)(a2 + 128);
    v207 = *(_QWORD *)(a2 + 136);
    v209 = *(_QWORD *)(a2 + 144);
    v211 = *(_QWORD *)(a2 + 152);
    v213 = *(_QWORD *)(a2 + 160);
    v215 = *(_QWORD *)(a2 + 168);
    v217 = *(_QWORD *)(a2 + 184);
    v219 = *(_QWORD *)(a2 + 192);
    v221 = *(_QWORD *)(a2 + 200);
    v222 = *(_QWORD *)(a2 + 208);
    v224 = *(_QWORD *)(a2 + 216);
    v226 = *(_QWORD *)(a2 + 224);
    v34 = *(_QWORD *)(a2 + 24);
    v35 = *(_QWORD *)(a2 + 32);
    v36 = *(_QWORD *)(a2 + 40);
    v37 = *(_QWORD *)(a2 + 56);
    v38 = *(_QWORD *)(a2 + 72);
    sub_23B989738(v228, v34, v35, v36, v193, v37, v191, v38, v195, v197, v199, v201, v203, v33, v205, v207, v209, v211, v213,
      v215,
      v8,
      v217,
      v219,
      v221,
      v222,
      v224,
      v226,
      v9);
    v39 = *(_QWORD *)(a1 + 16);
    v40 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v228;
    *(_QWORD *)(a1 + 24) = v34;
    v41 = *(_QWORD *)(a1 + 32);
    v42 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v35;
    *(_QWORD *)(a1 + 40) = v36;
    a3 = v230;
    v43 = *(void **)(a1 + 48);
    v44 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 48) = v193;
    *(_QWORD *)(a1 + 56) = v37;
    v45 = *(_QWORD *)(a1 + 64);
    v46 = *(_QWORD *)(a1 + 72);
    *(_QWORD *)(a1 + 64) = v191;
    *(_QWORD *)(a1 + 72) = v38;
    v47 = *(_OWORD *)(a1 + 80);
    v48 = *(_OWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 80) = v195;
    *(_QWORD *)(a1 + 88) = v197;
    *(_QWORD *)(a1 + 96) = v199;
    *(_QWORD *)(a1 + 104) = v201;
    v49 = *(_OWORD *)(a1 + 112);
    v50 = *(_OWORD *)(a1 + 128);
    *(_QWORD *)(a1 + 112) = v203;
    *(_QWORD *)(a1 + 120) = v33;
    *(_QWORD *)(a1 + 128) = v205;
    *(_QWORD *)(a1 + 136) = v207;
    v51 = *(_OWORD *)(a1 + 144);
    v52 = *(_OWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 144) = v209;
    *(_QWORD *)(a1 + 152) = v211;
    *(_QWORD *)(a1 + 160) = v213;
    v53 = *(_OWORD *)(a1 + 176);
    v54 = *(_OWORD *)(a1 + 192);
    *(_QWORD *)(a1 + 168) = v215;
    *(_QWORD *)(a1 + 176) = v8;
    *(_QWORD *)(a1 + 184) = v217;
    *(_QWORD *)(a1 + 192) = v219;
    *(_QWORD *)(a1 + 200) = v221;
    v55 = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(a1 + 208) = v222;
    *(_QWORD *)(a1 + 216) = v224;
    v56 = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 224) = v226;
    v57 = *(_BYTE *)(a1 + 232);
    *(_BYTE *)(a1 + 232) = v9;
    sub_23B9909D0(v39, v40, v41, v42, v43, v44, v45, v46, v47, *((uint64_t *)&v47 + 1), v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52,
      *((uint64_t *)&v52 + 1),
      v53,
      *((uint64_t *)&v53 + 1),
      v54,
      *((uint64_t *)&v54 + 1),
      v55,
      *((uint64_t *)&v55 + 1),
      v56,
      v57);
  }
  v66 = (__int128 *)(a1 + 240);
  v67 = (__int128 *)(a2 + 240);
  v68 = (char *)(a1 + 256);
  v69 = *(unsigned __int8 *)(a2 + 256);
  if (*(unsigned __int8 *)(a1 + 256) == 255)
  {
    if (v69 == 255)
    {
      v71 = *v67;
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *v66 = v71;
    }
    else
    {
      v78 = v69 & 1;
      v79 = *(void **)(a2 + 240);
      v80 = *(void **)(a2 + 248);
      sub_23B9CA7A8(v79, v80, v69 & 1);
      *(_QWORD *)(a1 + 240) = v79;
      *(_QWORD *)(a1 + 248) = v80;
      *v68 = v78;
    }
  }
  else if (v69 == 255)
  {
    sub_23B989D60(a1 + 240, &qword_256A5AFE0);
    v70 = *(_BYTE *)(a2 + 256);
    *v66 = *v67;
    *(_BYTE *)(a1 + 256) = v70;
  }
  else
  {
    v72 = v69 & 1;
    v73 = *(void **)(a2 + 240);
    v74 = *(void **)(a2 + 248);
    sub_23B9CA7A8(v73, v74, v69 & 1);
    v75 = *(void **)(a1 + 240);
    v76 = *(void **)(a1 + 248);
    v77 = *v68;
    *(_QWORD *)(a1 + 240) = v73;
    *(_QWORD *)(a1 + 248) = v74;
    *v68 = v72;
    sub_23B9CBA50(v75, v76, v77);
  }
  v81 = *(void **)(a1 + 264);
  v82 = *(void **)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v82;
  v83 = v82;

  v84 = *(int *)(a3 + 32);
  v85 = (_BYTE *)(a1 + v84);
  v86 = (_BYTE *)(a2 + v84);
  v87 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v88 + 48);
  v90 = v89(v85, 1, v87);
  v91 = v89(v86, 1, v87);
  if (!v90)
  {
    if (v91)
    {
      sub_23B989D9C((uint64_t)v85, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_30;
    }
    v96 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v97 = *(_QWORD *)(v96 - 8);
    v98 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v97 + 48);
    v99 = v98(v85, 1, v96);
    v100 = v98(v86, 1, v96);
    v232 = v96;
    if (v99)
    {
      if (!v100)
      {
        v101 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v85, v86, v101);
        v102 = *(int *)(v96 + 20);
        v103 = *(void **)&v86[v102];
        *(_QWORD *)&v85[v102] = v103;
        v104 = *(int *)(v96 + 24);
        v105 = &v85[v104];
        v106 = &v86[v104];
        *v105 = *v106;
        v105[1] = v106[1];
        v107 = (void *)v106[2];
        v105[2] = v107;
        v108 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v97 + 56);
        v109 = v103;
        swift_bridgeObjectRetain();
        v110 = v107;
        v108(v85, 0, 1, v96);
        goto LABEL_42;
      }
    }
    else
    {
      if (!v100)
      {
        v165 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v165 - 8) + 24))(v85, v86, v165);
        v166 = *(int *)(v96 + 20);
        v167 = *(void **)&v86[v166];
        v168 = *(void **)&v85[v166];
        *(_QWORD *)&v85[v166] = v167;
        v169 = v167;

        v170 = *(int *)(v96 + 24);
        v171 = &v85[v170];
        v172 = &v86[v170];
        *v171 = *(_QWORD *)&v86[v170];
        v171[1] = *(_QWORD *)&v86[v170 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v173 = (void *)*((_QWORD *)v172 + 2);
        v174 = (void *)v171[2];
        v171[2] = v173;
        v175 = v173;

LABEL_42:
        v141 = *(int *)(v87 + 20);
        v142 = &v85[v141];
        v143 = &v86[v141];
        v144 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v145 = *(_QWORD *)(v144 - 8);
        v146 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 48);
        v147 = v146(v142, 1, v144);
        v148 = v146(v143, 1, v144);
        if (v147)
        {
          if (!v148)
          {
            v149 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v142, v143, v149);
            v150 = *(int *)(v232 + 20);
            v151 = *(void **)&v143[v150];
            *(_QWORD *)&v142[v150] = v151;
            v152 = *(int *)(v232 + 24);
            v153 = &v142[v152];
            v154 = &v143[v152];
            *(_QWORD *)v153 = *(_QWORD *)v154;
            *((_QWORD *)v153 + 1) = *((_QWORD *)v154 + 1);
            v155 = (void *)*((_QWORD *)v154 + 2);
            *((_QWORD *)v153 + 2) = v155;
            v156 = *(int *)(v144 + 20);
            v157 = &v142[v156];
            v158 = &v143[v156];
            v159 = *((_QWORD *)v158 + 2);
            *(_OWORD *)v157 = *(_OWORD *)v158;
            *((_QWORD *)v157 + 2) = v159;
            v160 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56);
            v161 = v151;
            swift_bridgeObjectRetain();
            v162 = v155;
            v160(v142, 0, 1, v144);
LABEL_48:
            v85[*(int *)(v87 + 24)] = v86[*(int *)(v87 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v148)
          {
            v176 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 24))(v142, v143, v176);
            v177 = *(int *)(v232 + 20);
            v178 = *(void **)&v143[v177];
            v179 = *(void **)&v142[v177];
            *(_QWORD *)&v142[v177] = v178;
            v180 = v178;

            v181 = *(int *)(v232 + 24);
            v182 = &v142[v181];
            v183 = &v143[v181];
            *(_QWORD *)v182 = *(_QWORD *)&v143[v181];
            *((_QWORD *)v182 + 1) = *(_QWORD *)&v143[v181 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v184 = (void *)*((_QWORD *)v183 + 2);
            v185 = (void *)*((_QWORD *)v182 + 2);
            *((_QWORD *)v182 + 2) = v184;
            v186 = v184;

            v187 = *(int *)(v144 + 20);
            v188 = &v142[v187];
            v189 = &v143[v187];
            *v188 = *v189;
            *((_QWORD *)v188 + 1) = *((_QWORD *)v189 + 1);
            *((_QWORD *)v188 + 2) = *((_QWORD *)v189 + 2);
            goto LABEL_48;
          }
          sub_23B989D9C((uint64_t)v142, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
        goto LABEL_48;
      }
      sub_23B989D9C((uint64_t)v85, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
    goto LABEL_42;
  }
  if (v91)
  {
LABEL_30:
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    return a1;
  }
  v92 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v93 = *(_QWORD *)(v92 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v93 + 48))(v86, 1, v92))
  {
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    v111 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v111 - 8) + 16))(v85, v86, v111);
    v112 = *(int *)(v92 + 20);
    v113 = *(void **)&v86[v112];
    *(_QWORD *)&v85[v112] = v113;
    v114 = *(int *)(v92 + 24);
    v115 = &v85[v114];
    v116 = &v86[v114];
    *v115 = *v116;
    v115[1] = v116[1];
    v117 = (void *)v116[2];
    v115[2] = v117;
    v118 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v93 + 56);
    v119 = v113;
    swift_bridgeObjectRetain();
    v120 = v117;
    v118(v85, 0, 1, v92);
  }
  v121 = *(int *)(v87 + 20);
  v122 = &v85[v121];
  v123 = &v86[v121];
  v124 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v125 = *(_QWORD *)(v124 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124))
  {
    v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    v127 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v122, v123, v127);
    v128 = *(int *)(v92 + 20);
    v129 = *(void **)&v123[v128];
    *(_QWORD *)&v122[v128] = v129;
    v130 = *(int *)(v92 + 24);
    v131 = &v122[v130];
    v132 = &v123[v130];
    *(_QWORD *)v131 = *(_QWORD *)v132;
    *((_QWORD *)v131 + 1) = *((_QWORD *)v132 + 1);
    v233 = (void *)*((_QWORD *)v132 + 2);
    *((_QWORD *)v131 + 2) = v233;
    v133 = *(int *)(v124 + 20);
    v134 = &v122[v133];
    v135 = &v123[v133];
    v136 = *((_QWORD *)v135 + 2);
    *(_OWORD *)v134 = *(_OWORD *)v135;
    *((_QWORD *)v134 + 2) = v136;
    v137 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56);
    v138 = v129;
    swift_bridgeObjectRetain();
    v139 = v233;
    v137(v122, 0, 1, v124);
  }
  v85[*(int *)(v87 + 24)] = v86[*(int *)(v87 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
  return a1;
}

uint64_t sub_23B9CC9F4(uint64_t a1)
{
  _s11BeaconStateOwxx(a1);
  return a1;
}

uint64_t initializeWithTake for DeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v4 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v4;
  *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
  v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v11 = *(int *)(a3 + 32);
  v12 = (char *)(a2 + v11);
  v13 = (char *)(a1 + v11);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v14 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v13, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v13, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v12, v20);
      *(_QWORD *)&v13[*(int *)(v17 + 20)] = *(_QWORD *)&v12[*(int *)(v17 + 20)];
      v21 = *(int *)(v17 + 24);
      v22 = &v13[v21];
      v23 = &v12[v21];
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
    v24 = *(int *)(v14 + 20);
    v25 = &v13[v24];
    v26 = &v12[v24];
    v27 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v25, v26, v30);
      *(_QWORD *)&v25[*(int *)(v17 + 20)] = *(_QWORD *)&v26[*(int *)(v17 + 20)];
      v31 = *(int *)(v17 + 24);
      v32 = &v25[v31];
      v33 = &v26[v31];
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v34 = *(int *)(v27 + 20);
      v35 = &v25[v34];
      v36 = &v26[v34];
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v13[*(int *)(v14 + 24)] = v12[*(int *)(v14 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  }
  return a1;
}

uint64_t assignWithTake for DeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  int v44;
  int v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(_BYTE *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(_BYTE *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_BYTE *)(a1 + 232);
  if ((v7 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v8 & 0x70) != 0)
  {
    v10 = *(_QWORD *)(a2 + 176);
    v11 = *(_BYTE *)(a2 + 232);
    if ((v10 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v11 & 0x70) != 0)
    {
      v13 = *(_QWORD *)(a1 + 16);
      v14 = *(_QWORD *)(a1 + 24);
      v15 = *(_QWORD *)(a1 + 32);
      v16 = *(_QWORD *)(a1 + 40);
      v17 = *(void **)(a1 + 48);
      v18 = *(_QWORD *)(a1 + 56);
      v19 = *(_QWORD *)(a1 + 64);
      v20 = *(_QWORD *)(a1 + 72);
      v21 = *(_OWORD *)(a1 + 80);
      v22 = *(_OWORD *)(a1 + 96);
      v23 = *(_OWORD *)(a1 + 112);
      v24 = *(_OWORD *)(a1 + 128);
      v25 = *(_OWORD *)(a1 + 144);
      v26 = *(_QWORD *)(a1 + 160);
      v27 = *(_QWORD *)(a1 + 168);
      v28 = *(_OWORD *)(a1 + 184);
      v29 = *(_OWORD *)(a1 + 200);
      v30 = *(_QWORD *)(a1 + 216);
      v31 = *(_QWORD *)(a1 + 224);
      v32 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v32;
      v33 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v33;
      v34 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v34;
      v35 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v35;
      v36 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v36;
      *(_QWORD *)(a1 + 176) = v10;
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 232) = v11;
      sub_23B9909D0(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26,
        v27,
        v7,
        v28,
        *((uint64_t *)&v28 + 1),
        v29,
        *((uint64_t *)&v29 + 1),
        v30,
        v31,
        v8);
      goto LABEL_12;
    }
    sub_23B9CC9F4(a1 + 16);
  }
  v37 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v37;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
  v38 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v38;
  v39 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v39;
  v40 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v40;
  v41 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v41;
  v42 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v42;
LABEL_12:
  v43 = (_OWORD *)(a2 + 240);
  v44 = *(unsigned __int8 *)(a1 + 256);
  if (v44 == 255)
  {
LABEL_15:
    *(_OWORD *)(a1 + 240) = *v43;
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    goto LABEL_17;
  }
  v45 = *(unsigned __int8 *)(a2 + 256);
  if (v45 == 255)
  {
    sub_23B989D60(a1 + 240, &qword_256A5AFE0);
    goto LABEL_15;
  }
  v46 = *(void **)(a1 + 240);
  v47 = *(void **)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *v43;
  *(_BYTE *)(a1 + 256) = v45 & 1;
  sub_23B9CBA50(v46, v47, v44 & 1);
LABEL_17:
  v48 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  v49 = *(int *)(a3 + 32);
  v50 = (_BYTE *)(a1 + v49);
  v51 = (_BYTE *)(a2 + v49);
  v52 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (v56)
    {
      sub_23B989D9C((uint64_t)v50, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_23;
    }
    v61 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v62 = *(_QWORD *)(v61 - 8);
    v63 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48);
    v64 = v63(v50, 1, v61);
    v65 = v63(v51, 1, v61);
    v124 = v61;
    if (v64)
    {
      if (!v65)
      {
        v66 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v50, v51, v66);
        *(_QWORD *)&v50[*(int *)(v61 + 20)] = *(_QWORD *)&v51[*(int *)(v61 + 20)];
        v67 = *(int *)(v61 + 24);
        v68 = &v50[v67];
        v69 = &v51[v67];
        *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
        *(_OWORD *)v68 = *(_OWORD *)v69;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v50, 0, 1, v61);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v65)
      {
        v105 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v105 - 8) + 40))(v50, v51, v105);
        v106 = *(int *)(v61 + 20);
        v107 = *(void **)&v50[v106];
        *(_QWORD *)&v50[v106] = *(_QWORD *)&v51[v106];

        v108 = *(int *)(v61 + 24);
        v109 = &v50[v108];
        v110 = &v51[v108];
        v111 = *(_QWORD *)&v51[v108 + 8];
        *v109 = *(_QWORD *)&v51[v108];
        v109[1] = v111;
        swift_bridgeObjectRelease();
        v112 = (void *)v109[2];
        v109[2] = *((_QWORD *)v110 + 2);

LABEL_35:
        v88 = *(int *)(v52 + 20);
        v89 = &v50[v88];
        v90 = &v51[v88];
        v91 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v92 = *(_QWORD *)(v91 - 8);
        v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
        v94 = v93(v89, 1, v91);
        v95 = v93(v90, 1, v91);
        if (v94)
        {
          if (!v95)
          {
            v96 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v89, v90, v96);
            *(_QWORD *)&v89[*(int *)(v124 + 20)] = *(_QWORD *)&v90[*(int *)(v124 + 20)];
            v97 = *(int *)(v124 + 24);
            v98 = &v89[v97];
            v99 = &v90[v97];
            *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
            *(_OWORD *)v98 = *(_OWORD *)v99;
            v100 = *(int *)(v91 + 20);
            v101 = &v89[v100];
            v102 = &v90[v100];
            *((_QWORD *)v101 + 2) = *((_QWORD *)v102 + 2);
            *(_OWORD *)v101 = *(_OWORD *)v102;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
LABEL_41:
            v50[*(int *)(v52 + 24)] = v51[*(int *)(v52 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v95)
          {
            v113 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 40))(v89, v90, v113);
            v114 = *(int *)(v124 + 20);
            v115 = *(void **)&v89[v114];
            *(_QWORD *)&v89[v114] = *(_QWORD *)&v90[v114];

            v116 = *(int *)(v124 + 24);
            v117 = &v89[v116];
            v118 = &v90[v116];
            v119 = *(_QWORD *)&v90[v116 + 8];
            *(_QWORD *)v117 = *(_QWORD *)&v90[v116];
            *((_QWORD *)v117 + 1) = v119;
            swift_bridgeObjectRelease();
            v120 = (void *)*((_QWORD *)v117 + 2);
            *((_QWORD *)v117 + 2) = *((_QWORD *)v118 + 2);

            v121 = *(int *)(v91 + 20);
            v122 = &v89[v121];
            v123 = &v90[v121];
            *v122 = *v123;
            *(_OWORD *)(v122 + 8) = *(_OWORD *)(v123 + 8);
            goto LABEL_41;
          }
          sub_23B989D9C((uint64_t)v89, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        goto LABEL_41;
      }
      sub_23B989D9C((uint64_t)v50, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_35;
  }
  if (v56)
  {
LABEL_23:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    return a1;
  }
  v57 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v58 + 48))(v51, 1, v57))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    v70 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v50, v51, v70);
    *(_QWORD *)&v50[*(int *)(v57 + 20)] = *(_QWORD *)&v51[*(int *)(v57 + 20)];
    v71 = *(int *)(v57 + 24);
    v72 = &v50[v71];
    v73 = &v51[v71];
    *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
    *(_OWORD *)v72 = *(_OWORD *)v73;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v50, 0, 1, v57);
  }
  v74 = *(int *)(v52 + 20);
  v75 = &v50[v74];
  v76 = &v51[v74];
  v77 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v78 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    v80 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v75, v76, v80);
    *(_QWORD *)&v75[*(int *)(v57 + 20)] = *(_QWORD *)&v76[*(int *)(v57 + 20)];
    v81 = *(int *)(v57 + 24);
    v82 = &v75[v81];
    v83 = &v76[v81];
    *((_QWORD *)v82 + 2) = *((_QWORD *)v83 + 2);
    *(_OWORD *)v82 = *(_OWORD *)v83;
    v84 = *(int *)(v77 + 20);
    v85 = &v75[v84];
    v86 = &v76[v84];
    *((_QWORD *)v85 + 2) = *((_QWORD *)v86 + 2);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  v50[*(int *)(v52 + 24)] = v51[*(int *)(v52 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9CD3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for DeviceInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B9CD45C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_23B9CD4D4()
{
  unint64_t v0;

  sub_23B9C30E0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t destroy for AccessoryOBKWrapper(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for AccessoryOBKWrapper(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for AccessoryOBKWrapper(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for AccessoryOBKWrapper(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryOBKWrapper(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryOBKWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryOBKWrapper()
{
  return &type metadata for AccessoryOBKWrapper;
}

void sub_23B9CD73C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;

  v3 = sub_23BB89B30();
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 64));
  MEMORY[0x24BDAC7A8](v5, v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = sub_23BB8A184();
  v8 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5B098));
  v9 = (void *)sub_23BB8989C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B0A0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23BB8C510;
  sub_23BB89B24();
  v44 = v10;
  sub_23B9CE370();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B0B0);
  sub_23B9CE3B8();
  sub_23BB8AD84();
  sub_23BB89884();
  objc_msgSend(a1, sel_addChildViewController_, v9);
  v11 = objc_msgSend(a1, sel_contentView);
  v12 = objc_msgSend(v9, sel_view);
  if (!v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v12;
  objc_msgSend(v11, sel_addSubview_, v12);

  v14 = objc_msgSend(v9, sel_view);
  if (!v14)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = v14;
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_23BB8E000;
  v17 = objc_msgSend(v9, sel_view);
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_topAnchor);

  v20 = objc_msgSend(a1, sel_contentView);
  v21 = objc_msgSend(v20, sel_topAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v16 + 32) = v22;
  v23 = objc_msgSend(v9, sel_view);
  if (!v23)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, sel_bottomAnchor);

  v26 = objc_msgSend(a1, sel_contentView);
  v27 = objc_msgSend(v26, sel_bottomAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(_QWORD *)(v16 + 40) = v28;
  v29 = objc_msgSend(v9, sel_view);
  if (!v29)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, sel_leadingAnchor);

  v32 = objc_msgSend(a1, sel_contentView);
  v33 = objc_msgSend(v32, sel_leadingAnchor);

  v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(_QWORD *)(v16 + 48) = v34;
  v35 = objc_msgSend(v9, sel_view);
  if (v35)
  {
    v36 = v35;
    v37 = (void *)objc_opt_self();
    v38 = objc_msgSend(v36, sel_trailingAnchor);

    v39 = objc_msgSend(a1, sel_contentView);
    v40 = objc_msgSend(v39, sel_trailingAnchor);

    v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v40);
    *(_QWORD *)(v16 + 56) = v41;
    v44 = v16;
    sub_23BB8A904();
    sub_23B9C60B4(0, &qword_256A5B0C0);
    v42 = (void *)sub_23BB8A8E0();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_activateConstraints_, v42);

    objc_msgSend(v9, sel_didMoveToParentViewController_, a1);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_23B9CDC6C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_buttonTray);
  objc_msgSend(v4, sel_removeAllButtons);

  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_boldButton);
  sub_23B9C60B4(0, &qword_256A5B090);
  sub_23B9CE250((uint64_t)v2, (uint64_t)&v26);
  v7 = (_OWORD *)swift_allocObject();
  v8 = v29;
  v7[3] = v28;
  v7[4] = v8;
  v7[5] = v30;
  v9 = v27;
  v7[1] = v26;
  v7[2] = v9;
  v24 = v7;
  v10 = (void *)sub_23BB8AC88();
  objc_msgSend(v6, sel_addAction_forControlEvents_, v10, 64, 0, 0, 0, sub_23B9CE2B8, v24);

  v11 = v2[3];
  v12 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
  v13 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_forState_, v13, 0);

  v14 = objc_msgSend((id)objc_opt_self(), sel_linkButton);
  sub_23B9CE250((uint64_t)v2, (uint64_t)&v26);
  v15 = (_OWORD *)swift_allocObject();
  v16 = v29;
  v15[3] = v28;
  v15[4] = v16;
  v15[5] = v30;
  v17 = v27;
  v15[1] = v26;
  v15[2] = v17;
  v25 = v15;
  v18 = (void *)sub_23BB8AC88();
  objc_msgSend(v14, sel_addAction_forControlEvents_, v18, 64, 0, 0, 0, sub_23B9CE32C, v25);

  v19 = v2[3];
  v20 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v19);
  (*(void (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
  v21 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setTitle_forState_, v21, 0);

  v22 = objc_msgSend(a1, sel_buttonTray);
  objc_msgSend(v22, sel_addButton_, v6);

  v23 = objc_msgSend(a1, sel_buttonTray);
  objc_msgSend(v23, sel_addButton_, v14);

}

id sub_23B9CDF80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v3 = objc_allocWithZone(MEMORY[0x24BE6E458]);
  v4 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithTitle_detailText_icon_contentLayout_, v4, 0, 0, 3);

  sub_23B9CD73C(v5);
  sub_23B9CDC6C(v5);
  return v5;
}

void sub_23B9CE038(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  id v7;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
  v6 = objc_msgSend(a1, sel_buttonTray);
  v7 = v6;
  if ((v5 & 1) != 0)
  {
    objc_msgSend(v6, sel_showButtonsBusy);

  }
  else
  {
    objc_msgSend(v6, sel_showButtonsAvailable);

    sub_23B9CDC6C(a1);
  }
}

uint64_t sub_23B9CE104()
{
  return sub_23BB89AD0();
}

uint64_t sub_23B9CE13C()
{
  return MEMORY[0x24BDF5560];
}

uint64_t sub_23B9CE148()
{
  sub_23B9CE20C();
  return sub_23BB89B0C();
}

uint64_t sub_23B9CE198()
{
  sub_23B9CE20C();
  return sub_23BB89ADC();
}

void sub_23B9CE1E8()
{
  sub_23B9CE20C();
  sub_23BB89B00();
  __break(1u);
}

unint64_t sub_23B9CE20C()
{
  unint64_t result;

  result = qword_256A5B088;
  if (!qword_256A5B088)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8E024, &type metadata for AccessoryOBKWrapper);
    atomic_store(result, (unint64_t *)&qword_256A5B088);
  }
  return result;
}

uint64_t sub_23B9CE250(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  v5 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a2 + 40, a1 + 40);
  return a2;
}

uint64_t sub_23B9CE2B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v2);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocObject();
}

uint64_t sub_23B9CE32C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2);
}

unint64_t sub_23B9CE370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5B0A8;
  if (!qword_256A5B0A8)
  {
    v1 = sub_23BB89B30();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF1210], v1);
    atomic_store(result, (unint64_t *)&qword_256A5B0A8);
  }
  return result;
}

unint64_t sub_23B9CE3B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5B0B8;
  if (!qword_256A5B0B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5B0B0);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256A5B0B8);
  }
  return result;
}

uint64_t sub_23B9CE404()
{
  uint64_t result;
  uint64_t v1;

  result = sub_23BB8A7B4();
  qword_256A73D30 = result;
  *(_QWORD *)algn_256A73D38 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryPairedOverview()
{
  return &type metadata for AccessoryPairedOverview;
}

uint64_t sub_23B9CE440()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23B9CE450()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  char v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AF10);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (_QWORD *)((char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *v0;
  v4[3] = type metadata accessor for AccessoryPairedViewModel();
  v4[4] = &off_250CB79C8;
  *v4 = v5;
  v4[8] = &type metadata for AccessoryPairedContentView;
  v4[9] = sub_23B9CE590();
  v6 = swift_allocObject();
  v4[5] = v6;
  *(_OWORD *)(v6 + 16) = xmmword_23BB8E0F0;
  *(_OWORD *)(v6 + 32) = xmmword_23BB8E100;
  *(_OWORD *)(v6 + 48) = xmmword_23BB8E110;
  *(_OWORD *)(v6 + 64) = xmmword_23BB8E120;
  *(_OWORD *)(v6 + 80) = xmmword_23BB8E130;
  *(_QWORD *)(v6 + 104) = 0;
  *(_QWORD *)(v6 + 112) = 0;
  *(_QWORD *)(v6 + 96) = v5;
  swift_retain_n();
  sub_23BB89B9C();
  memset(v8, 0, sizeof(v8));
  v9 = 1;
  sub_23BB89A4C();
  sub_23B9C9EB8();
  sub_23BB89E6C();
  return sub_23B9CE5F8((uint64_t)v4);
}

unint64_t sub_23B9CE590()
{
  unint64_t result;

  result = qword_256A5B0C8;
  if (!qword_256A5B0C8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9486C, &type metadata for AccessoryPairedContentView);
    atomic_store(result, (unint64_t *)&qword_256A5B0C8);
  }
  return result;
}

uint64_t sub_23B9CE5D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9CE5F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AF10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23B9CE638()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5AF10);
  sub_23B9C9EB8();
  return swift_getOpaqueTypeConformance2();
}

void sub_23B9CE684()
{
  type metadata accessor for AsyncThrottleSequence.Iterator();
}

uint64_t sub_23B9CE6DC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = v2 + a1[15];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  v8 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v2, v4, v8);
  v9 = v2 + a1[16];
  v10 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v3, v10);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2 + a1[17], v13, v1);
  v12 = (_QWORD *)(v2 + a1[18]);
  *v12 = v14;
  v12[1] = v15;
  return result;
}

uint64_t sub_23B9CE7EC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = a2[6];
  v3[6] = a2[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  v6 = a2[4];
  v3[10] = v6;
  v3[11] = *(_QWORD *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = a2[5];
  v3[14] = a2[2];
  v7 = swift_getAssociatedTypeWitness();
  v3[15] = v7;
  v8 = sub_23BB8ACA0();
  v3[16] = v8;
  v3[17] = *(_QWORD *)(v8 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = *(_QWORD *)(v7 - 8);
  v3[20] = swift_task_alloc();
  v9 = swift_getAssociatedTypeWitness();
  v3[21] = v9;
  v10 = sub_23BB8ACA0();
  v3[22] = v10;
  v3[23] = *(_QWORD *)(v10 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = *(_QWORD *)(v9 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v11 = sub_23BB8ACA0();
  v3[29] = v11;
  v3[30] = *(_QWORD *)(v11 - 8);
  v3[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9CE9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 56);
  *(_QWORD *)(v0 + 256) = v10;
  v10(v1, 1, 1, v7);
  v11 = *(int *)(v9 + 60);
  *(_DWORD *)(v0 + 304) = v11;
  v12 = v8 + v11;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(_QWORD *)(v0 + 264) = v13;
  v13(v2, v12, v4);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 272) = v14;
  if (v14(v2, 1, v6) == 1)
  {
    v15 = *(_QWORD *)(v0 + 200);
    v16 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 184);
    sub_23BB8B1EC();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 168));
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v18;
  *v18 = v0;
  v18[1] = sub_23B9CEB60;
  return sub_23BB8A9C4();
}

uint64_t sub_23B9CEB60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9CEBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 248);
    v6 = *(_QWORD *)(v0 + 232);
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 256))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 160), v1, v3);
    v13 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v10 + *(int *)(v11 + 72))
                                                         + *(_QWORD *)(v10 + *(int *)(v11 + 72)));
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v12;
    *v12 = v0;
    v12[1] = sub_23B9CED64;
    return v13(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 160));
  }
}

uint64_t sub_23B9CED64()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9CEDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void (*v18)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 240);
  v27 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  sub_23BB8B1EC();
  swift_getAssociatedConformanceWitness();
  sub_23BB8AF34();
  swift_getAssociatedConformanceWitness();
  v3 = sub_23BB8A748();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  if ((v3 & 1) != 0)
    goto LABEL_4;
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 264))(v5, *(_QWORD *)(v0 + 32) + *(int *)(v0 + 304), *(_QWORD *)(v0 + 176));
  if (v4(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
LABEL_4:
    v7 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 184);
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 88);
    v33 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 16);
    v15 = *(_QWORD *)(v0 + 32) + *(int *)(v0 + 304);
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v0 + 224), v11);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v15, v7, v11);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v33, v13);
    (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(v0 + 256))(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v17 = *(_QWORD *)(v0 + 248);
  v18 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 256);
  v20 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 168);
  v23 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v24 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v17, v22, v24);
  v18(v17, 0, 1, v24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v25;
  *v25 = v0;
  v25[1] = sub_23B9CEB60;
  return sub_23BB8A9C4();
}

uint64_t sub_23B9CF150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 240);
  v1 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 168));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9CF224(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B990D68;
  return sub_23B9CE7EC(a1, a2);
}

uint64_t sub_23B9CF284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_23BA070C8;
  return sub_23BB8A9DC();
}

void sub_23B9CF35C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = v3;
  v26 = a3;
  v6 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(MEMORY[0x24BDAC7A8](a1, a2) + 48);
  v23 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v10);
  v13 = (char *)&v21 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v11, v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v19, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v4, v14);
  sub_23BB8AAD8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v4 + *(int *)(a1 + 60), AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v4 + *(int *)(a1 + 64), v6);
  sub_23B9CE684();
}

uint64_t sub_23B9CF51C()
{
  return swift_retain();
}

void sub_23B9CF548(uint64_t a1, uint64_t a2)
{
  sub_23B9E38E0(a1, a2, (void (*)(void))sub_23B9CF35C);
}

uint64_t combineLatest<A, B>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_23B9E1EA0(a1, a2, a3, a4, a5, a6, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for AsyncCombineLatest2Sequence, a7);
}

void AsyncCombineLatest2Sequence.makeAsyncIterator()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for CombineLatestStorage();
}

void sub_23B9CF5E0()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 56))(v1, 1, 1, v0);
  swift_allocObject();
  sub_23B9E4D94();
}

void sub_23B9CF630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_23B9CF678();
}

void type metadata accessor for CombineLatestStorage()
{
  JUMPOUT(0x24260D81CLL);
}

void sub_23B9CF678()
{
  type metadata accessor for AsyncCombineLatest2Sequence.Iterator.InternalClass();
}

uint64_t sub_23B9CF6AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  *v1 = result;
  return result;
}

void sub_23B9CF6D0()
{
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9CF8B0()
{
  sub_23B9E1CB8((void (*)(void))sub_23B9CF6D0);
}

uint64_t sub_23B9CF8BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t TupleTypeMetadata3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = swift_getAssociatedTypeWitness();
  v2[5] = swift_getAssociatedTypeWitness();
  v2[6] = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v2[7] = TupleTypeMetadata3;
  v4 = sub_23BB8ACA0();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9CF9E8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = *(_QWORD **)(v0[3] + 16);
  v2 = (_QWORD *)swift_task_alloc();
  v0[15] = v2;
  *v2 = v0;
  v2[1] = sub_23B9CFA58;
  v2[2] = v0[10];
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B9CFA58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9CFABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 88) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v3, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 16);
    v10 = *(int *)(v2 + 48);
    v11 = v6 + v10;
    v12 = *(int *)(v2 + 64);
    v22 = v6 + v12;
    v13 = v1 + v10;
    v30 = v1 + v12;
    v31 = *(_QWORD *)(v0 + 48);
    v35 = *(_QWORD *)(v8 - 8);
    v25 = *(void (**)(void))(v35 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v6, v1, v8);
    v14 = v7;
    v32 = *(_QWORD *)(v7 - 8);
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
    v15 = v11;
    v29(v11, v13, v14);
    v34 = *(_QWORD *)(v31 - 8);
    v28 = *(void (**)(uint64_t, uint64_t))(v34 + 32);
    v28(v22, v30);
    v23 = v14;
    v26 = swift_getTupleTypeMetadata2();
    v24 = v9 + *(int *)(v26 + 48);
    v16 = v5 + *(int *)(v2 + 48);
    v27 = v5 + *(int *)(v2 + 64);
    (*(void (**)(void))(v35 + 16))();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v16, v15, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v27, v22, v31);
    v17 = v9;
    ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v9, v5, v8);
    v18 = v33 + *(int *)(v2 + 48);
    v19 = v33 + *(int *)(v2 + 64);
    v25();
    v29(v18, v15, v23);
    ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v19, v22, v31);
    v29(v24, v18, v23);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 0, 1);
    v20 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v20(v19, v31);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v8);
    v20(v27, v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v16, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9CFDB4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9CFE10(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B9CFE30()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  *v1 = v0;
  v1[1] = sub_23B9CFF48;
  return sub_23BB8B1B0();
}

uint64_t sub_23B9CFF48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t AsyncCombineLatest2Sequence.Iterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B9CFFCC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23BA070B0;
  return sub_23B9CF8BC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23B9D0020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B990D68;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_23B9D0080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_23BA070C8;
  return sub_23BB8A9DC();
}

void sub_23B9D0158()
{
  AsyncCombineLatest2Sequence.makeAsyncIterator()();
}

uint64_t sub_23B9D016C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void sub_23B9D0188(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

uint64_t sub_23B9D01D4(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = v3 + *(int *)(a1 + 76);
  v6 = sub_23BB8ACA0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v2, v6);
  *(_BYTE *)(v3 + *(int *)(a1 + 80)) = v1;
  return result;
}

void sub_23B9D0224()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D02A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 144) = v5;
  *(_QWORD *)(v6 - 136) = v1;
  *(_QWORD *)(v6 - 128) = v0;
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 224) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v3;
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D02DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 144) = v5;
  *(_QWORD *)(v6 - 136) = v1;
  *(_QWORD *)(v6 - 128) = v0;
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v3;
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D0318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v17 - 184) = v15;
  *(_QWORD *)(v17 - 176) = v14;
  *(_QWORD *)(v17 - 200) = a1;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v17 - 168) = TupleTypeMetadata3;
  *(_QWORD *)(v17 - 232) = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v20 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v19);
  *(_QWORD *)(v17 - 208) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  *(_QWORD *)(v17 - 192) = (char *)&a9 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  MEMORY[0x24BDAC7A8](v26, v27);
  *(_QWORD *)(v17 - 160) = (char *)&a9 - v28;
  *(_QWORD *)(v17 - 144) = v16;
  *(_QWORD *)(v17 - 136) = v10;
  *(_QWORD *)(v17 - 128) = v9;
  *(_QWORD *)(v17 - 120) = v12;
  *(_QWORD *)(v17 - 112) = v13;
  *(_QWORD *)(v17 - 104) = v11;
  type metadata accessor for CombineLatestStateMachine.State();
}

uint64_t sub_23B9D03EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9D0448 + dword_23B9D09C4[EnumCaseMultiPayload]))();
}

uint64_t sub_23B9D045C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata3;
  uint64_t v5;

  v3 = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v5 = v1 + *(int *)(TupleTypeMetadata3 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1 + *(int *)(TupleTypeMetadata3 + 64), v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v5, v0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return 0;
}

void sub_23B9D09E0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[20];
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v18[13] = a2;
  v18[18] = a1;
  v4 = a3[7];
  v5 = a3[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v19, v6);
  v18[12] = (char *)v18 - v7;
  v8 = a3[6];
  v9 = a3[3];
  v20 = swift_getAssociatedTypeWitness();
  v10 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v10, v11);
  v18[11] = (char *)v18 - v12;
  v13 = a3[5];
  v14 = a3[2];
  swift_getAssociatedTypeWitness();
  v15 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v15, v16);
  v18[10] = (char *)v18 - v17;
  v22 = v14;
  v23 = v9;
  v24 = v5;
  v25 = v13;
  v26 = v8;
  v27 = v4;
  type metadata accessor for CombineLatestStateMachine.State();
}

void sub_23B9D0B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  _BYTE v20[80];

  v11 = MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)(v9 - 296) = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = &v20[-v14];
  *(_QWORD *)(v9 - 240) = v16;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 16))(&v20[-v14], *(_QWORD *)(v9 - 200), a1);
  *(_QWORD *)(v9 - 232) = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)(v9 - 256) = v2;
  *(_QWORD *)(v9 - 248) = v15;
  *(_QWORD *)(v9 - 216) = v4;
  if (!EnumCaseMultiPayload)
  {
    *(_QWORD *)(v9 - 312) = sub_23BB8ACA0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    *(_QWORD *)(v9 - 328) = v20;
    *(_QWORD *)(v9 - 304) = &v15[*(int *)(TupleTypeMetadata3 + 48)];
    *(_QWORD *)(v9 - 320) = &v15[*(int *)(TupleTypeMetadata3 + 64)];
    MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v19);
    *(_QWORD *)(v9 - 336) = &v20[-64];
    strcpy(&v20[-64], "task upstreams downstreamContinuation buffer ");
    *(_QWORD *)(v9 - 176) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5B840);
    *(_QWORD *)(v9 - 144) = v2;
    *(_QWORD *)(v9 - 136) = v5;
    *(_QWORD *)(v9 - 128) = v7;
    *(_QWORD *)(v9 - 120) = v4;
    *(_QWORD *)(v9 - 112) = v3;
    *(_QWORD *)(v9 - 104) = v6;
    *(_QWORD *)(v9 - 96) = v8;
    type metadata accessor for CombineLatestStateMachine.State.Upstream();
  }
  __asm { BR              X10 }
}

void sub_23B9D1140()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 8))(v0);
  __break(1u);
  JUMPOUT(0x23B9D14C8);
}

void sub_23B9D14E4()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D1564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 136) = v4;
  *(_QWORD *)(v6 - 128) = v5;
  *(_QWORD *)(v6 - 120) = v2;
  *(_QWORD *)(v6 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 192) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 104) = v3;
  *(_QWORD *)(v6 - 96) = v0;
  *(_QWORD *)(v6 - 88) = v1;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D15A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 136) = v4;
  *(_QWORD *)(v6 - 128) = v5;
  *(_QWORD *)(v6 - 120) = v2;
  *(_QWORD *)(v6 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 104) = v3;
  *(_QWORD *)(v6 - 96) = v0;
  *(_QWORD *)(v6 - 88) = v1;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D15DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata3;
  uint64_t v10;

  *(_QWORD *)(v8 - 176) = v4;
  *(_QWORD *)(v8 - 168) = v2;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v8 - 160) = TupleTypeMetadata3;
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v10);
  *(_QWORD *)(v8 - 136) = v6;
  *(_QWORD *)(v8 - 128) = v7;
  *(_QWORD *)(v8 - 120) = v3;
  *(_QWORD *)(v8 - 112) = v5;
  *(_QWORD *)(v8 - 104) = v0;
  *(_QWORD *)(v8 - 96) = v1;
  type metadata accessor for CombineLatestStateMachine.State();
}

uint64_t sub_23B9D1648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))((char *)&a9 - v12, *(_QWORD *)(v9 - 144), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9D16A0 + *((int *)qword_23B9D1AA0 + EnumCaseMultiPayload)))();
}

unint64_t sub_23B9D16B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  void (*v15)(_QWORD *);
  void (*v16)(_QWORD *, char *);
  _QWORD *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(_QWORD *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(void);
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  *(_QWORD *)(v5 - 208) = *v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5B840);
  sub_23BB8ACA0();
  swift_getTupleTypeMetadata3();
  sub_23BB89194();
  v6 = *(_QWORD *)(v5 - 160);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = (char *)v4 + *(int *)(TupleTypeMetadata3 + 48);
  *(_QWORD *)(v5 - 192) = *(_QWORD *)((char *)v4 + *(int *)(TupleTypeMetadata3 + 64));
  v9 = *(int *)(v6 + 48);
  v10 = (_QWORD *)((char *)v0 + v9);
  v11 = *(int *)(v6 + 64);
  v12 = (char *)v0 + v11;
  v13 = &v8[v9];
  v14 = &v8[v11];
  v15 = *(void (**)(_QWORD *))(*(_QWORD *)(*(_QWORD *)(v5 - 168) - 8) + 32);
  *(_QWORD *)(v5 - 216) = v15;
  v15(v0);
  v16 = *(void (**)(_QWORD *, char *))(*(_QWORD *)(*(_QWORD *)(v5 - 176) - 8) + 32);
  v17 = v10;
  *(_QWORD *)(v5 - 224) = v16;
  v16(v10, v13);
  v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  *(_QWORD *)(v5 - 184) = v12;
  v18(v12, v14, v2);
  v19 = *(void (**)(_QWORD *, uint64_t))(v1 + 8);
  v19(*(_QWORD **)(v5 - 144), v3);
  swift_storeEnumTagMultiPayload();
  v20 = *(_QWORD *)(v5 - 200);
  if (v20 == 2)
  {
    v23 = v2;
    **(_QWORD **)(v5 - 184) = *(_QWORD *)(v5 - 152);
    v21 = *(_QWORD *)(v5 - 208);
    v22 = v17;
  }
  else if (v20 == 1)
  {
    v23 = v2;
    v22 = v17;
    *v17 = *(_QWORD *)(v5 - 152);
    v21 = *(_QWORD *)(v5 - 208);
  }
  else
  {
    v21 = *(_QWORD *)(v5 - 208);
    if (v20)
    {
      swift_release();
      swift_release();
      __break(1u);
      JUMPOUT(0x23B9D1AA0);
    }
    v22 = v17;
    v23 = v2;
    *v0 = *(_QWORD *)(v5 - 152);
  }
  v24 = *(void (**)(void))(v5 - 216);
  v25 = *(_QWORD **)(v5 - 144);
  v19(v25, v3);
  v26 = (char *)v25 + *(int *)(TupleTypeMetadata3 + 48);
  v27 = *(int *)(TupleTypeMetadata3 + 64);
  *v25 = v21;
  v28 = *(_QWORD *)(v5 - 160);
  v29 = &v26[*(int *)(v28 + 48)];
  v30 = &v26[*(int *)(v28 + 64)];
  v24();
  (*(void (**)(char *, _QWORD *, _QWORD))(v5 - 224))(v29, v22, *(_QWORD *)(v5 - 176));
  v18(v30, *(char **)(v5 - 184), v23);
  *(_QWORD *)((char *)v25 + v27) = *(_QWORD *)(v5 - 192);
  swift_storeEnumTagMultiPayload();
  return 0xF00000000000000FLL;
}

void sub_23B9D1ABC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[37];
  uint64_t TupleTypeMetadata3;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v95 = a3;
  v99 = a2;
  v98 = a1;
  v94 = a5;
  v103 = a4[7];
  v6 = a4[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v102 = AssociatedTypeWitness;
  v8 = sub_23BB8ACA0();
  v97 = *(_QWORD *)(v8 - 8);
  v104 = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v90[6] = (char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v90[31] = (char *)v90 - v14;
  v90[36] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v90[4] = (char *)v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v90[15] = (char *)v90 - v19;
  v20 = a4[6];
  v21 = a4[3];
  v22 = swift_getAssociatedTypeWitness();
  v92 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v90[11] = (char *)v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v90[12] = (char *)v90 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v90[18] = (char *)v90 - v30;
  v31 = a4[5];
  v90[5] = a4;
  v32 = a4[2];
  v33 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v90[32] = *(_QWORD *)(TupleTypeMetadata3 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v34);
  v90[29] = (char *)v90 - v35;
  v36 = sub_23BB8ACA0();
  v101 = *(_QWORD *)(v36 - 8);
  v38 = MEMORY[0x24BDAC7A8](v36, v37);
  v90[23] = (char *)v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v90[25] = (char *)v90 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v90[13] = (char *)v90 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v90[7] = (char *)v90 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47, v49);
  v90[9] = (char *)v90 - v51;
  v53 = MEMORY[0x24BDAC7A8](v50, v52);
  v90[10] = (char *)v90 - v54;
  v56 = MEMORY[0x24BDAC7A8](v53, v55);
  v90[17] = (char *)v90 - v57;
  v96 = *(_QWORD *)(v33 - 8);
  v59 = MEMORY[0x24BDAC7A8](v56, v58);
  v90[20] = (char *)v90 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v90[21] = (char *)v90 - v63;
  v65 = MEMORY[0x24BDAC7A8](v62, v64);
  v90[16] = (char *)v90 - v66;
  MEMORY[0x24BDAC7A8](v65, v67);
  v90[30] = (char *)v90 - v68;
  v69 = sub_23BB8ACA0();
  v100 = *(_QWORD *)(v69 - 8);
  v71 = MEMORY[0x24BDAC7A8](v69, v70);
  v90[22] = (char *)v90 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = MEMORY[0x24BDAC7A8](v71, v73);
  v90[24] = (char *)v90 - v75;
  v77 = MEMORY[0x24BDAC7A8](v74, v76);
  v90[27] = (char *)v90 - v78;
  v80 = MEMORY[0x24BDAC7A8](v77, v79);
  v90[28] = (char *)v90 - v81;
  v83 = MEMORY[0x24BDAC7A8](v80, v82);
  v90[14] = (char *)v90 - v84;
  v86 = MEMORY[0x24BDAC7A8](v83, v85);
  v90[8] = (char *)v90 - v87;
  MEMORY[0x24BDAC7A8](v86, v88);
  v90[19] = (char *)v90 - v89;
  v105 = v32;
  v106 = v21;
  v107 = v6;
  v108 = v33;
  v93 = v33;
  v109 = v31;
  v110 = v20;
  v111 = v103;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D2048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v5;
  *(_QWORD *)(v7 - 136) = v3;
  *(_QWORD *)(v7 - 128) = v1;
  *(_QWORD *)(v7 - 120) = v6;
  *(_QWORD *)(v7 - 288) = v6;
  *(_QWORD *)(v7 - 112) = v4;
  *(_QWORD *)(v7 - 104) = v2;
  *(_QWORD *)(v7 - 96) = v0;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D2074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = v2;
  v7 = *(_QWORD *)(v6 - 184);
  *(_QWORD *)(v6 - 128) = v0;
  *(_QWORD *)(v6 - 120) = v7;
  *(_QWORD *)(v6 - 112) = v3;
  *(_QWORD *)(v6 - 104) = v1;
  *(_QWORD *)(v6 - 96) = v5;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D2098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v17 - 240) = a1;
  *(_QWORD *)(v17 - 232) = v12;
  *(_QWORD *)(v17 - 192) = v9;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v17 - 264) = TupleTypeMetadata3;
  *(_QWORD *)(v17 - 424) = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v20 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v19);
  *(_QWORD *)(v17 - 360) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  *(_QWORD *)(v17 - 408) = (char *)&a9 - v23;
  *(_QWORD *)(v17 - 344) = v15;
  *(_QWORD *)(v17 - 144) = v15;
  *(_QWORD *)(v17 - 136) = v13;
  *(_QWORD *)(v17 - 328) = v13;
  *(_QWORD *)(v17 - 312) = v10;
  *(_QWORD *)(v17 - 128) = v10;
  *(_QWORD *)(v17 - 120) = v14;
  *(_QWORD *)(v17 - 336) = v14;
  *(_QWORD *)(v17 - 320) = v11;
  *(_QWORD *)(v17 - 112) = v11;
  *(_QWORD *)(v17 - 104) = v16;
  type metadata accessor for CombineLatestStateMachine.State();
}

uint64_t sub_23B9D2164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int EnumCaseMultiPayload;

  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v15 = (char *)&a9 - v14;
  v16 = *(_QWORD *)(v11 - 168);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v11 - 352) = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v19 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v18);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  *(_QWORD *)(v11 - 416) = (char *)&a9 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&a9 - v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 208) + 16);
  v27 = *(_QWORD *)(v11 - 248);
  *(_QWORD *)(v11 - 256) = v9;
  v26((char *)&a9 - v24, v27, v9);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 200) + 16);
  v29 = &v25[*(int *)(TupleTypeMetadata3 + 48)];
  v30 = *(_QWORD *)(v11 - 224);
  *(_QWORD *)(v11 - 224) = v10;
  *(_QWORD *)(v11 - 248) = v28;
  v28(v29, v30, v10);
  v31 = *(int *)(TupleTypeMetadata3 + 64);
  *(_QWORD *)(v11 - 216) = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 272) + 16))(&v25[v31], *(_QWORD *)(v11 - 296), v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 16))(v15, *(_QWORD *)(v11 - 160), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9D22C8 + dword_23B9D3F8C[EnumCaseMultiPayload]))();
}

void sub_23B9D22D8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  int v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  *(_QWORD *)(v8 - 464) = *v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5B840);
  *(_QWORD *)(v8 - 296) = v0;
  *(_QWORD *)(v8 - 664) = v1;
  v9 = v3;
  v10 = sub_23BB89194();
  v11 = *(_QWORD *)(v8 - 264);
  *(_QWORD *)(v8 - 584) = v10;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v13 = (char *)v4 + *(int *)(TupleTypeMetadata3 + 48);
  *(_QWORD *)(v8 - 488) = TupleTypeMetadata3;
  v14 = *(int *)(TupleTypeMetadata3 + 64);
  *(_QWORD *)(v8 - 392) = v5;
  v15 = *(_QWORD *)((char *)v4 + v14);
  v16 = *(int *)(v11 + 48);
  v17 = *(_QWORD *)(v8 - 408);
  v18 = v17 + v16;
  v19 = *(int *)(v11 + 64);
  v20 = v17 + v19;
  v21 = &v13[v16];
  v22 = &v13[v19];
  v23 = *(_QWORD *)(*(_QWORD *)(v8 - 232) - 8);
  *(_QWORD *)(v8 - 496) = v23;
  (*(void (**)(void))(v23 + 32))();
  v24 = *(_QWORD *)(*(_QWORD *)(v8 - 192) - 8);
  *(_QWORD *)(v8 - 504) = v24;
  v25 = *(void (**)(uint64_t, char *))(v24 + 32);
  *(_QWORD *)(v8 - 360) = v18;
  v26 = *(_QWORD *)(v8 - 216);
  v25(v18, v21);
  v27 = *(_QWORD *)(v8 - 240);
  v28 = *(_QWORD *)(v27 - 8);
  *(_QWORD *)(v8 - 512) = v28;
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  *(_QWORD *)(v8 - 472) = v20;
  v29(v20, v22, v27);
  *(_QWORD *)(v8 - 152) = v15;
  v30 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v31 = *(_QWORD *)(v8 - 160);
  v32 = *(_QWORD *)(v8 - 392);
  *(_QWORD *)(v8 - 520) = v30;
  v30(v31, v32);
  swift_storeEnumTagMultiPayload();
  v33 = *(_QWORD *)(v8 - 416);
  v34 = v33 + *(int *)(v9 + 48);
  *(_QWORD *)(v8 - 480) = v9;
  v35 = v33 + *(int *)(v9 + 64);
  v36 = v26;
  v37 = *(_QWORD *)(v8 - 256);
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 296);
  v38(v33, v36, v37);
  v39 = *(_QWORD *)(v8 - 224);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 - 248))(v34, *(_QWORD *)(v8 - 664), v39);
  v40 = v33;
  v41 = *(_QWORD *)(v8 - 168);
  *(_QWORD *)(v8 - 664) = v2;
  v2(v35, v7, v41);
  v42 = *(_QWORD *)(v8 - 280);
  v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v40, 1, *(_QWORD *)(v8 - 368));
  *(_QWORD *)(v8 - 528) = v34;
  if (v44 == 1)
  {
    v45 = v34;
    v46 = v38;
    v47 = *(_QWORD *)(v8 - 376);
    v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
    v49 = *(_QWORD *)(v8 - 288);
    if (v48(v45, 1, v49) == 1)
    {
      v50 = *(_QWORD *)(v8 - 400);
      v51 = *(_QWORD *)(v8 - 184);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v35, 1, v51) == 1)
      {
        swift_release();
        __break(1u);
      }
      else
      {
        v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
        v53 = *(_QWORD *)(v8 - 568);
        *(_QWORD *)(v8 - 448) = v52;
        v52(v53, v35, v51);
        v54 = *(_QWORD *)(v8 - 576);
        v46(v54, *(_QWORD *)(v8 - 408) + *(int *)(*(_QWORD *)(v8 - 232) + 76), *(_QWORD *)(v8 - 256));
        v55 = v43(v54, 1, *(_QWORD *)(v8 - 368));
        v56 = *(_QWORD *)(v8 - 616);
        if (v55 != 1)
        {
          (*(void (**)(_QWORD, _QWORD, uint64_t))(v8 - 248))(*(_QWORD *)(v8 - 616), *(_QWORD *)(v8 - 360) + *(int *)(*(_QWORD *)(v8 - 192) + 76), v39);
          if (v48(v56, 1, v49) != 1)
          {
            v57 = *(_QWORD *)(v8 - 400);
            v58 = *(_QWORD *)(v8 - 440);
            v59 = *(_QWORD *)(v8 - 568);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v58, v59, v51);
            v60 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56);
            *(_QWORD *)(v8 - 248) = v60;
            v60(v58, 0, 1, v51);
            v61 = *(_QWORD *)(v8 - 384);
            v62 = *(_QWORD *)(v8 - 456);
            v63 = v62 + *(int *)(v61 + 48);
            v64 = v62 + *(int *)(v61 + 64);
            (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v8 - 280) + 32))(v62, *(_QWORD *)(v8 - 576), *(_QWORD *)(v8 - 368));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 376) + 32))(v63, v56, v49);
            v65 = *(_QWORD *)(v8 - 272);
            v66 = v64;
            v67 = *(_QWORD *)(v8 - 168);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v66, v58, v67);
            sub_23BB89164();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 432) + 8))(v62, v61);
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 - 352) + 8))(*(_QWORD *)(v8 - 216), *(_QWORD *)(v8 - 480));
            v68 = *(_QWORD *)(v8 - 472);
            v69 = v68 + *(int *)(*(_QWORD *)(v8 - 240) + 76);
            (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v69, v67);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 448))(v69, v59, v51);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 - 248))(v69, 0, 1, v51);
            v70 = *(_QWORD *)(v8 - 224);
            v71 = *(_QWORD *)(v8 - 256);
            v73 = *(_QWORD *)(v8 - 208);
            v72 = *(_QWORD *)(v8 - 200);
            v74 = *(_QWORD *)(v8 - 392);
            goto LABEL_14;
          }
LABEL_20:
          swift_release();
          __break(1u);
          JUMPOUT(0x23B9D3F04);
        }
      }
      swift_release();
      __break(1u);
      goto LABEL_20;
    }
    v94 = *(_QWORD *)(v8 - 608);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 248))(v94, v45, v39);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 - 400) + 48))(v35, 1, *(_QWORD *)(v8 - 184)) == 1)
    {
      v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32);
      v96 = *(_QWORD *)(v8 - 544);
      v97 = *(_QWORD *)(v8 - 288);
      *(_QWORD *)(v8 - 184) = v95;
      v95(v96, v94, v97);
      v98 = *(_QWORD *)(v8 - 624);
      v46(v98, *(_QWORD *)(v8 - 408) + *(int *)(*(_QWORD *)(v8 - 232) + 76), *(_QWORD *)(v8 - 256));
      v99 = *(_QWORD *)(v8 - 368);
      if (v43(v98, 1, v99) != 1)
      {
        v100 = *(_QWORD *)(v8 - 472);
        v101 = v100 + *(int *)(*(_QWORD *)(v8 - 240) + 76);
        v102 = *(_QWORD *)(v8 - 384);
        v103 = *(_QWORD *)(v8 - 456);
        v104 = v103 + *(int *)(v102 + 48);
        v105 = v103 + *(int *)(v102 + 64);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 280) + 32))(v103, v98, v99);
        v106 = *(_QWORD *)(v8 - 376);
        v107 = v104;
        v108 = *(_QWORD *)(v8 - 544);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v107, v108, v97);
        (*(void (**)(uint64_t, uint64_t, _QWORD))(v8 - 664))(v105, v101, *(_QWORD *)(v8 - 168));
        sub_23BB89164();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 432) + 8))(v103, v102);
        v68 = v100;
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 - 352) + 8))(*(_QWORD *)(v8 - 216), *(_QWORD *)(v8 - 480));
        v72 = *(_QWORD *)(v8 - 200);
        v109 = *(_QWORD *)(v8 - 360) + *(int *)(*(_QWORD *)(v8 - 192) + 76);
        v70 = *(_QWORD *)(v8 - 224);
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v109, v70);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 184))(v109, v108, v97);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v109, 0, 1, v97);
        v71 = *(_QWORD *)(v8 - 256);
        v73 = *(_QWORD *)(v8 - 208);
        v74 = *(_QWORD *)(v8 - 392);
LABEL_14:
        (*(void (**)(_QWORD, uint64_t))(v72 + 8))(*(_QWORD *)(v8 - 528), v70);
        (*(void (**)(_QWORD, uint64_t))(v73 + 8))(*(_QWORD *)(v8 - 416), v71);
        v110 = *(_QWORD **)(v8 - 160);
        (*(void (**)(_QWORD *, uint64_t))(v8 - 520))(v110, v74);
        v111 = *(_QWORD *)(v8 - 488);
        v112 = (char *)v110 + *(int *)(v111 + 48);
        v113 = *(int *)(v111 + 64);
        *v110 = *(_QWORD *)(v8 - 464);
        v114 = *(_QWORD *)(v8 - 264);
        v115 = &v112[*(int *)(v114 + 48)];
        v116 = &v112[*(int *)(v114 + 64)];
        (*(void (**)(void))(*(_QWORD *)(v8 - 496) + 16))();
        (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v8 - 504) + 16))(v115, *(_QWORD *)(v8 - 360), *(_QWORD *)(v8 - 192));
        (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v8 - 512) + 16))(v116, v68, *(_QWORD *)(v8 - 240));
        *(_QWORD *)((char *)v110 + v113) = *(_QWORD *)(v8 - 152);
        swift_storeEnumTagMultiPayload();
        v117 = *(_QWORD *)(v8 - 328);
        *(_QWORD *)(v8 - 144) = *(_QWORD *)(v8 - 344);
        *(_QWORD *)(v8 - 136) = v117;
        v118 = *(_QWORD *)(v8 - 336);
        *(_QWORD *)(v8 - 128) = *(_QWORD *)(v8 - 312);
        *(_QWORD *)(v8 - 120) = v118;
        v119 = *(_QWORD *)(v8 - 176);
        *(_QWORD *)(v8 - 112) = *(_QWORD *)(v8 - 320);
        *(_QWORD *)(v8 - 104) = v119;
        type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
      }
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, _QWORD))(v47 + 8))(v94, *(_QWORD *)(v8 - 288));
      __break(1u);
    }
    swift_release();
    __break(1u);
    JUMPOUT(0x23B9D3F54);
  }
  v75 = *(_QWORD *)(v8 - 536);
  v38(v75, v40, v37);
  v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 376) + 48);
  v77 = *(_QWORD *)(v8 - 288);
  if (v76(v34, 1, v77) == 1)
  {
    v78 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 - 400) + 48))(v35, 1, *(_QWORD *)(v8 - 184));
    v79 = *(_QWORD *)(v8 - 448);
    v80 = *(_QWORD *)(v8 - 552);
    v81 = *(_QWORD *)(v8 - 560);
    if (v78 == 1)
    {
      v82 = v42;
      v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
      v84 = *(_QWORD *)(v8 - 368);
      v83(*(_QWORD *)(v8 - 448), v75, v84);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v81, v79, v84);
      (*(void (**)(uint64_t, _QWORD, _QWORD))(v8 - 248))(v80, *(_QWORD *)(v8 - 360) + *(int *)(*(_QWORD *)(v8 - 192) + 76), *(_QWORD *)(v8 - 224));
      if (v76(v80, 1, v77) != 1)
      {
        v85 = v80;
        v86 = v81;
        v87 = *(_QWORD *)(v8 - 472);
        v88 = v87 + *(int *)(v27 + 76);
        v89 = *(_QWORD *)(v8 - 384);
        v90 = *(_QWORD *)(v8 - 456);
        v91 = v90 + *(int *)(v89 + 48);
        v92 = v90 + *(int *)(v89 + 64);
        v83(v90, v86, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 376) + 32))(v91, v85, v77);
        (*(void (**)(uint64_t, uint64_t, _QWORD))(v8 - 664))(v92, v88, *(_QWORD *)(v8 - 168));
        sub_23BB89164();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 432) + 8))(v90, v89);
        v68 = v87;
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 - 352) + 8))(*(_QWORD *)(v8 - 216), *(_QWORD *)(v8 - 480));
        v93 = *(_QWORD *)(v8 - 408) + *(int *)(*(_QWORD *)(v8 - 232) + 76);
        v73 = *(_QWORD *)(v8 - 208);
        v71 = *(_QWORD *)(v8 - 256);
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v93, v71);
        v83(v93, *(_QWORD *)(v8 - 448), v84);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 280) + 56))(v93, 0, 1, v84);
        v70 = *(_QWORD *)(v8 - 224);
        v74 = *(_QWORD *)(v8 - 392);
        v72 = *(_QWORD *)(v8 - 200);
        goto LABEL_14;
      }
LABEL_17:
      swift_release();
      __break(1u);
      JUMPOUT(0x23B9D3E64);
    }
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, _QWORD))(v42 + 8))(v75, *(_QWORD *)(v8 - 368));
    __break(1u);
  }
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(v42 + 8))(v75, *(_QWORD *)(v8 - 368));
  __break(1u);
  goto LABEL_17;
}

void sub_23B9D3FA8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[10];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v24 = a1;
  v3 = a2[7];
  v4 = a2[4];
  swift_getAssociatedTypeWitness();
  v23 = sub_23BB8ACA0();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v5);
  v21 = (char *)v16 - v6;
  v7 = a2[6];
  v8 = a2[3];
  swift_getAssociatedTypeWitness();
  v20 = sub_23BB8ACA0();
  v19 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v9);
  v18 = (char *)v16 - v10;
  v11 = a2[5];
  v16[7] = a2;
  v12 = a2[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = sub_23BB8ACA0();
  v16[9] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v14);
  v16[8] = (char *)v16 - v15;
  v26 = v12;
  v27 = v8;
  v28 = v4;
  v29 = AssociatedTypeWitness;
  v25 = AssociatedTypeWitness;
  v30 = v11;
  v31 = v7;
  v32 = v3;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D4150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v5;
  *(_QWORD *)(v7 - 136) = v0;
  *(_QWORD *)(v7 - 128) = v4;
  *(_QWORD *)(v7 - 120) = v3;
  *(_QWORD *)(v7 - 232) = v3;
  *(_QWORD *)(v7 - 112) = v2;
  *(_QWORD *)(v7 - 104) = v6;
  *(_QWORD *)(v7 - 96) = v1;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D4174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v5;
  *(_QWORD *)(v7 - 136) = v0;
  *(_QWORD *)(v7 - 128) = v4;
  *(_QWORD *)(v7 - 120) = v3;
  *(_QWORD *)(v7 - 240) = v3;
  *(_QWORD *)(v7 - 112) = v2;
  *(_QWORD *)(v7 - 104) = v6;
  *(_QWORD *)(v7 - 96) = v1;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D4198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v17 - 168) = v13;
  *(_QWORD *)(v17 - 160) = v12;
  *(_QWORD *)(v17 - 176) = a1;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v17 - 184) = TupleTypeMetadata3;
  v20 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v19);
  *(_QWORD *)(v17 - 200) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  *(_QWORD *)(v17 - 144) = v15;
  *(_QWORD *)(v17 - 136) = v9;
  *(_QWORD *)(v17 - 128) = v14;
  *(_QWORD *)(v17 - 120) = v11;
  *(_QWORD *)(v17 - 112) = v16;
  *(_QWORD *)(v17 - 104) = v10;
  type metadata accessor for CombineLatestStateMachine.State();
}

uint64_t sub_23B9D4228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))((char *)&a9 - v12, *(_QWORD *)(v9 - 152), a1);
  *(_QWORD *)(v9 - 208) = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9D428C + *((int *)qword_23B9D50C0 + EnumCaseMultiPayload)))();
}

unint64_t sub_23B9D42A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(_QWORD *);
  void (*v19)(char *, char *);
  void (*v20)(_QWORD *, char *);
  void (*v21)(_QWORD *, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;

  *(_QWORD *)(v4 - 320) = v1;
  *(_QWORD *)(v4 - 200) = *v3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5B840);
  swift_getTupleTypeMetadata3();
  v5 = sub_23BB89194();
  v6 = *(_QWORD *)(v4 - 184);
  *(_QWORD *)(v4 - 240) = v5;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = (char *)v3 + *(int *)(TupleTypeMetadata3 + 48);
  v9 = *(_QWORD *)((char *)v3 + *(int *)(TupleTypeMetadata3 + 64));
  v10 = *(int *)(v6 + 48);
  v11 = v0;
  v12 = (char *)v0 + v10;
  v13 = *(int *)(v6 + 64);
  v14 = (_QWORD *)((char *)v0 + v13);
  v15 = &v8[v10];
  v16 = &v8[v13];
  v17 = *(_QWORD *)(v4 - 160);
  v18 = *(void (**)(_QWORD *))(*(_QWORD *)(v17 - 8) + 32);
  *(_QWORD *)(v4 - 232) = v18;
  *(_QWORD *)(v4 - 224) = v9;
  v18(v0);
  v19 = *(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v4 - 168) - 8) + 32);
  *(_QWORD *)(v4 - 192) = v12;
  v19(v12, v15);
  v20 = *(void (**)(_QWORD *, char *))(*(_QWORD *)(*(_QWORD *)(v4 - 176) - 8) + 32);
  v20(v14, v16);
  v21 = *(void (**)(_QWORD *, uint64_t))(v2 + 8);
  v22 = *(_QWORD **)(v4 - 152);
  v23 = *(_QWORD *)(v4 - 208);
  v21(v22, v23);
  swift_storeEnumTagMultiPayload();
  v24 = v11;
  v25 = *(_QWORD *)(v4 - 216);
  if (v25)
  {
    v17 = *(_QWORD *)(v4 - 176);
    v24 = v14;
    if (v25 != 2)
    {
      v17 = *(_QWORD *)(v4 - 168);
      v24 = *(_QWORD **)(v4 - 192);
      if (v25 != 1)
      {
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x23B9D50A4);
      }
    }
  }
  *((_BYTE *)v24 + *(int *)(v17 + 80)) = 1;
  if (*((_BYTE *)v11 + *(int *)(*(_QWORD *)(v4 - 160) + 80)) == 1
    && *(_BYTE *)(*(_QWORD *)(v4 - 192) + *(int *)(*(_QWORD *)(v4 - 168) + 80)) == 1)
  {
    if (*((_BYTE *)v14 + *(int *)(*(_QWORD *)(v4 - 176) + 80)) == 1)
    {
      v26 = v14;
      v27 = *(_QWORD *)(v4 - 224);
      *(_QWORD *)(v4 - 144) = v27;
      MEMORY[0x24260D8DC](MEMORY[0x24BE18D68], *(_QWORD *)(v4 - 240));
      v28 = sub_23BB8AB80();
      v21(v22, v23);
      if ((v28 & 1) != 0)
      {
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        *v22 = v27;
        swift_storeEnumTagMultiPayload();
        swift_retain();
      }
      v37 = *(_QWORD *)(v4 - 320);
      v38 = *v11;
      v39 = **(_QWORD **)(v4 - 192);
      v40 = *v26;
      v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (*v11)
      {
        v41 = sub_23BB63864(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v43 = v41[2];
        v42 = v41[3];
        if (v43 >= v42 >> 1)
          v41 = sub_23BB63864((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
        v41[2] = v43 + 1;
        v41[v43 + 4] = v38;
        v37 = *(_QWORD *)(v4 - 320);
      }
      if (v39)
      {
        v44 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v44 = sub_23BB63864(0, v44[2] + 1, 1, v44);
        v41 = v44;
        v46 = v44[2];
        v45 = v44[3];
        if (v46 >= v45 >> 1)
          v41 = sub_23BB63864((_QWORD *)(v45 > 1), v46 + 1, 1, v44);
        v41[2] = v46 + 1;
        v41[v46 + 4] = v39;
      }
      if (!v40)
        goto LABEL_43;
      goto LABEL_25;
    }
    if (*(_QWORD *)((char *)v22 + *(int *)(*(_QWORD *)(v4 - 312) + 68)) == 2)
    {
      v29 = v14;
      v30 = *(_QWORD *)(v4 - 224);
      *(_QWORD *)(v4 - 144) = v30;
      MEMORY[0x24260D8DC](MEMORY[0x24BE18D68], *(_QWORD *)(v4 - 240));
      v31 = sub_23BB8AB80();
      v21(v22, v23);
      if ((v31 & 1) != 0)
      {
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        *v22 = v30;
        swift_storeEnumTagMultiPayload();
        swift_retain();
      }
      v37 = *(_QWORD *)(v4 - 320);
      v53 = *v11;
      v54 = **(_QWORD **)(v4 - 192);
      v40 = *v29;
      v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (*v11)
      {
        v41 = sub_23BB63864(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v56 = v41[2];
        v55 = v41[3];
        if (v56 >= v55 >> 1)
          v41 = sub_23BB63864((_QWORD *)(v55 > 1), v56 + 1, 1, v41);
        v41[2] = v56 + 1;
        v41[v56 + 4] = v53;
        v37 = *(_QWORD *)(v4 - 320);
      }
      if (v54)
      {
        v57 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v57 = sub_23BB63864(0, v57[2] + 1, 1, v57);
        v41 = v57;
        v59 = v57[2];
        v58 = v57[3];
        if (v59 >= v58 >> 1)
          v41 = sub_23BB63864((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
        v41[2] = v59 + 1;
        v41[v59 + 4] = v54;
      }
      if (!v40)
        goto LABEL_43;
LABEL_25:
      v47 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v47 = sub_23BB63864(0, v47[2] + 1, 1, v47);
      v48 = v47;
      v50 = v47[2];
      v49 = v47[3];
      if (v50 >= v49 >> 1)
        v48 = sub_23BB63864((_QWORD *)(v49 > 1), v50 + 1, 1, v47);
      v48[2] = v50 + 1;
      v48[v50 + 4] = v40;
LABEL_43:
      swift_release();
      (*(void (**)(_QWORD *, _QWORD))(v37 + 8))(v11, *(_QWORD *)(v4 - 184));
      return *(_QWORD *)(v4 - 200);
    }
  }
  v21(v22, v23);
  v32 = (char *)v22 + *(int *)(TupleTypeMetadata3 + 48);
  v33 = *(int *)(TupleTypeMetadata3 + 64);
  *v22 = *(_QWORD *)(v4 - 200);
  v34 = *(_QWORD *)(v4 - 184);
  v35 = &v32[*(int *)(v34 + 48)];
  v36 = &v32[*(int *)(v34 + 64)];
  (*(void (**)(void))(v4 - 232))();
  ((void (*)(char *, _QWORD, _QWORD))v19)(v35, *(_QWORD *)(v4 - 192), *(_QWORD *)(v4 - 168));
  ((void (*)(char *, _QWORD *, _QWORD))v20)(v36, v14, *(_QWORD *)(v4 - 176));
  *(_QWORD *)((char *)v22 + v33) = *(_QWORD *)(v4 - 224);
  swift_storeEnumTagMultiPayload();
  return 0xF000000000000007;
}

void sub_23B9D50DC()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D515C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 144) = v0;
  *(_QWORD *)(v6 - 136) = v3;
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 232) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v1;
  *(_QWORD *)(v6 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D5198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 144) = v0;
  *(_QWORD *)(v6 - 136) = v3;
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v1;
  *(_QWORD *)(v6 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D51D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)(v17 - 176) = v14;
  *(_QWORD *)(v17 - 168) = v9;
  *(_QWORD *)(v17 - 208) = a1;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v17 - 160) = TupleTypeMetadata3;
  *(_QWORD *)(v17 - 240) = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v20 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v19);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  *(_QWORD *)(v17 - 216) = (char *)&a9 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  *(_QWORD *)(v17 - 192) = (char *)&a9 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  MEMORY[0x24BDAC7A8](v28, v29);
  *(_QWORD *)(v17 - 184) = (char *)&a9 - v30;
  *(_QWORD *)(v17 - 144) = v10;
  *(_QWORD *)(v17 - 136) = v13;
  *(_QWORD *)(v17 - 128) = v15;
  *(_QWORD *)(v17 - 120) = v16;
  *(_QWORD *)(v17 - 112) = v11;
  *(_QWORD *)(v17 - 104) = v12;
  type metadata accessor for CombineLatestStateMachine.State();
}

uint64_t sub_23B9D52C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))((char *)&a9 - v12, *(_QWORD *)(v9 - 152), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9D5320 + *((int *)qword_23B9D5E00 + EnumCaseMultiPayload)))();
}

uint64_t sub_23B9D5338()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(_QWORD *, _QWORD, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  id v30;
  void (*v31)(_QWORD *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD *, uint64_t, uint64_t);
  void (*v40)(uint64_t, uint64_t, uint64_t);
  void (*v41)(_QWORD *, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *, uint64_t);
  _QWORD *v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  *(_QWORD *)(v4 - 248) = *v3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5B840);
  sub_23BB8ACA0();
  swift_getTupleTypeMetadata3();
  sub_23BB89194();
  v5 = *(_QWORD *)(v4 - 160);
  v6 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata3() + 48);
  swift_release();
  v7 = *(int *)(v5 + 48);
  v8 = *(_QWORD *)(v4 - 184);
  v9 = v8 + v7;
  *(_QWORD *)(v4 - 256) = v8 + v7;
  v10 = *(int *)(v5 + 64);
  v11 = v8 + v10;
  *(_QWORD *)(v4 - 264) = v8 + v10;
  v12 = &v6[v7];
  v13 = &v6[v10];
  v14 = *(_QWORD *)(v4 - 168);
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 - 296) = v15;
  (*(void (**)(void))(v15 + 32))();
  v16 = *(_QWORD *)(v4 - 176);
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v4 - 232) = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v9, v12, v16);
  v18 = *(_QWORD *)(v4 - 208);
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v4 - 224) = v19;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v11, v13, v18);
  v20 = *(_QWORD **)(v4 - 152);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v20, v2);
  *v20 = *(_QWORD *)(v4 - 200);
  swift_storeEnumTagMultiPayload();
  v21 = (char *)v0 + *(int *)(v5 + 48);
  *(_QWORD *)(v4 - 272) = v21;
  v22 = (char *)v0 + *(int *)(v5 + 64);
  *(_QWORD *)(v4 - 280) = v22;
  v23 = *(_QWORD *)(v4 - 296);
  v24 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 16);
  *(_QWORD *)(v4 - 304) = v24;
  v24(v0, *(_QWORD *)(v4 - 184), v14);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 232) + 16);
  *(_QWORD *)(v4 - 312) = v25;
  v26 = *(_QWORD *)(v4 - 256);
  v25(v21, v26, v16);
  v27 = *(_QWORD *)(v4 - 192);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 224) + 16);
  *(_QWORD *)(v4 - 320) = v28;
  v29 = *(_QWORD *)(v4 - 264);
  v28(v22, v29, v18);
  *(_QWORD *)(v4 - 288) = *v0;
  v30 = *(id *)(v4 - 200);
  v31 = *(void (**)(_QWORD *, uint64_t))(v23 + 8);
  *(_QWORD *)(v4 - 200) = v31;
  v31(v0, v14);
  v32 = v27;
  v33 = (_QWORD *)(v27 + *(int *)(v5 + 48));
  v34 = v27 + *(int *)(v5 + 64);
  *(_QWORD *)(v4 - 296) = v34;
  v35 = *(_QWORD *)(v4 - 184);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 304);
  v36(v32, v35, v14);
  v37 = v26;
  v38 = *(_QWORD *)(v4 - 176);
  v39 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v4 - 312);
  v39(v33, v37, v38);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 320);
  v40(v34, v29, v18);
  *(_QWORD *)(v4 - 152) = *v33;
  v41 = *(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 232) + 8);
  *(_QWORD *)(v4 - 232) = v41;
  v41(v33, v38);
  v42 = *(_QWORD *)(v4 - 216);
  v43 = (_QWORD *)(v42 + *(int *)(v5 + 48));
  v44 = (uint64_t *)(v42 + *(int *)(v5 + 64));
  v45 = *(_QWORD *)(v4 - 168);
  v36(v42, v35, v45);
  v39(v43, *(_QWORD *)(v4 - 256), v38);
  v40((uint64_t)v44, *(_QWORD *)(v4 - 264), v18);
  v46 = *v44;
  v47 = *(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v4 - 224) + 8);
  v47(v44, v18);
  v48 = v43;
  v49 = *(_QWORD *)(v4 - 288);
  v50 = *(void (**)(uint64_t, uint64_t))(v4 - 232);
  v50((uint64_t)v48, v38);
  v51 = v42;
  v52 = v45;
  v53 = v45;
  v54 = *(void (**)(uint64_t, uint64_t))(v4 - 200);
  v54(v51, v53);
  v47(*(uint64_t **)(v4 - 296), v18);
  v54(*(_QWORD *)(v4 - 192), v52);
  v47(*(uint64_t **)(v4 - 280), v18);
  v50(*(_QWORD *)(v4 - 272), v38);
  if (!v49)
  {
    v55 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v58 = *(_QWORD *)(v4 - 240);
    v59 = *(_QWORD *)(v4 - 152);
    if (!v59)
      goto LABEL_12;
    goto LABEL_7;
  }
  v55 = sub_23BB63864(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v57 = v55[2];
  v56 = v55[3];
  v58 = *(_QWORD *)(v4 - 240);
  if (v57 >= v56 >> 1)
    v55 = sub_23BB63864((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
  v59 = *(_QWORD *)(v4 - 152);
  v55[2] = v57 + 1;
  v55[v57 + 4] = v49;
  if (v59)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v55 = sub_23BB63864(0, v55[2] + 1, 1, v55);
    v61 = v55[2];
    v60 = v55[3];
    if (v61 >= v60 >> 1)
      v55 = sub_23BB63864((_QWORD *)(v60 > 1), v61 + 1, 1, v55);
    v55[2] = v61 + 1;
    v55[v61 + 4] = v59;
  }
LABEL_12:
  if (v46)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v55 = sub_23BB63864(0, v55[2] + 1, 1, v55);
    v63 = v55[2];
    v62 = v55[3];
    if (v63 >= v62 >> 1)
      v55 = sub_23BB63864((_QWORD *)(v62 > 1), v63 + 1, 1, v55);
    v55[2] = v63 + 1;
    v55[v63 + 4] = v46;
  }
  (*(void (**)(_QWORD, _QWORD))(v58 + 8))(*(_QWORD *)(v4 - 184), *(_QWORD *)(v4 - 160));
  return *(_QWORD *)(v4 - 248);
}

void sub_23B9D5E1C()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D5E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 144) = v3;
  *(_QWORD *)(v6 - 136) = v5;
  *(_QWORD *)(v6 - 128) = v1;
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 232) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v0;
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 96) = v4;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D5ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 144) = v3;
  *(_QWORD *)(v6 - 136) = v5;
  *(_QWORD *)(v6 - 128) = v1;
  *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 112) = v0;
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 96) = v4;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D5F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)(v17 - 192) = v11;
  *(_QWORD *)(v17 - 184) = v9;
  *(_QWORD *)(v17 - 208) = a1;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v17 - 160) = TupleTypeMetadata3;
  *(_QWORD *)(v17 - 200) = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v20 = MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v19);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  *(_QWORD *)(v17 - 216) = (char *)&a9 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  *(_QWORD *)(v17 - 168) = (char *)&a9 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  MEMORY[0x24BDAC7A8](v28, v29);
  *(_QWORD *)(v17 - 176) = (char *)&a9 - v30;
  *(_QWORD *)(v17 - 144) = v14;
  *(_QWORD *)(v17 - 136) = v16;
  *(_QWORD *)(v17 - 128) = v12;
  *(_QWORD *)(v17 - 120) = v10;
  *(_QWORD *)(v17 - 112) = v13;
  *(_QWORD *)(v17 - 104) = v15;
  type metadata accessor for CombineLatestStateMachine.State();
}

uint64_t sub_23B9D5FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 16))((char *)&a9 - v12, *(_QWORD *)(v9 - 152), a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9D605C + dword_23B9D6B9C[EnumCaseMultiPayload]))();
}

unint64_t sub_23B9D6070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = v3 + *(int *)(TupleTypeMetadata3 + 48);
  v9 = v3 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v5 - 152), v1);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v3, v2);
  return 0xF000000000000007;
}

void sub_23B9D6BB8(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[25];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v26 = a3;
  v25 = a1;
  v4 = a2[5];
  v5 = a2[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = a2[6];
  v27 = a2[3];
  swift_getAssociatedTypeWitness();
  v8 = a2[7];
  v9 = a2[4];
  swift_getAssociatedTypeWitness();
  v23[16] = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v24 = sub_23BB8ACA0();
  v23[12] = *(_QWORD *)(v24 - 8);
  v12 = MEMORY[0x24BDAC7A8](v24, v11);
  v23[14] = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v23[15] = (char *)v23 - v16;
  v17 = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v23[23] = TupleTypeMetadata3;
  v23[24] = v17;
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v23[11] = (char *)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23[13] = (char *)v23 - v22;
  v28 = v5;
  v29 = v27;
  v30 = v9;
  v31 = AssociatedTypeWitness;
  v23[19] = AssociatedTypeWitness;
  v32 = v4;
  v33 = v7;
  v34 = v8;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D6D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 136) = v1;
  *(_QWORD *)(v7 - 128) = v6;
  *(_QWORD *)(v7 - 120) = v0;
  *(_QWORD *)(v7 - 280) = v0;
  *(_QWORD *)(v7 - 112) = v4;
  *(_QWORD *)(v7 - 104) = v5;
  *(_QWORD *)(v7 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D6DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 144) = v3;
  *(_QWORD *)(v7 - 136) = v1;
  *(_QWORD *)(v7 - 128) = v6;
  *(_QWORD *)(v7 - 120) = v0;
  *(_QWORD *)(v7 - 112) = v4;
  *(_QWORD *)(v7 - 104) = v5;
  *(_QWORD *)(v7 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine.State.Upstream();
}

void sub_23B9D6DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v16 - 256) = a1;
  *(_QWORD *)(v16 - 248) = v9;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v16 - 240) = TupleTypeMetadata3;
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3, v18);
  *(_QWORD *)(v16 - 272) = (char *)&a9 - v19;
  *(_QWORD *)(v16 - 200) = v12;
  *(_QWORD *)(v16 - 192) = v14;
  *(_QWORD *)(v16 - 144) = v12;
  *(_QWORD *)(v16 - 136) = v10;
  *(_QWORD *)(v16 - 128) = v15;
  *(_QWORD *)(v16 - 120) = v13;
  *(_QWORD *)(v16 - 184) = v13;
  *(_QWORD *)(v16 - 112) = v14;
  *(_QWORD *)(v16 - 104) = v11;
  type metadata accessor for CombineLatestStateMachine.State();
}

uint64_t sub_23B9D6E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9D6EA0 + dword_23B9D7B7C[EnumCaseMultiPayload]))();
}

void sub_23B9D6EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_23BB8ACA0();
  v5 = *(_QWORD *)(v3 - 160);
  v6 = *(_QWORD *)(v3 - 200);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = v0 + *(int *)(TupleTypeMetadata3 + 48);
  v9 = v0 + *(int *)(TupleTypeMetadata3 + 64);
  v10 = *(_QWORD *)(v3 - 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v10, v0, v6);
  v11 = swift_getTupleTypeMetadata3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v10 + *(int *)(v11 + 48), v8, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v10 + *(int *)(v11 + 64), v9, v4);
  *(_QWORD *)(v3 - 144) = v6;
  *(_QWORD *)(v3 - 136) = v5;
  v12 = *(_QWORD *)(v3 - 184);
  *(_QWORD *)(v3 - 128) = v2;
  *(_QWORD *)(v3 - 120) = v12;
  *(_QWORD *)(v3 - 112) = *(_QWORD *)(v3 - 192);
  *(_QWORD *)(v3 - 104) = v1;
  type metadata accessor for CombineLatestStateMachine.NextAction();
}

uint64_t sub_23B9D6F8C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23B9D7B98(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v3 = sub_23BB8B27C();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9D7CC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256A5B860 + dword_256A5B860);
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_23B9D7D34;
  return v3(v0[6], 0, 0, (uint64_t)sub_23B9F4D00, v0[3]);
}

uint64_t sub_23B9D7D34()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9D7D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = MEMORY[0x24260D8DC](&unk_23BB8E5C0, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9D7E1C()
{
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9D7E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v2 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + ((*(unsigned int *)(*(_QWORD *)v2 + 48) + 3) & 0x1FFFFFFFCLL)));
  sub_23B9D7EBC(v3, v1, v0);
}

void sub_23B9D7EA4()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void sub_23B9D7EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[9];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a2;
  v36 = a1;
  v23[5] = a3;
  v3 = *(_QWORD **)a3;
  v28 = *(_QWORD *)(*(_QWORD *)a3 + 104);
  v4 = v3[10];
  swift_getAssociatedTypeWitness();
  v5 = v3[14];
  v6 = v3[11];
  swift_getAssociatedTypeWitness();
  v7 = v3[15];
  v8 = v3[12];
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  v23[3] = swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v9 = sub_23BB8B27C();
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v23[4] = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v25 = (char *)v23 - v14;
  v24 = sub_23BB8ACA0();
  v23[2] = *(_QWORD *)(v24 - 8);
  v16 = MEMORY[0x24BDAC7A8](v24, v15);
  v23[1] = (char *)v23 - v17;
  v23[8] = *(_QWORD *)(v6 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v23[0] = (char *)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[7] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23[6] = (char *)v23 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v4;
  v31 = v6;
  v32 = v8;
  v33 = v28;
  v34 = v5;
  v35 = v7;
  type metadata accessor for CombineLatestStateMachine.NextAction();
}

void sub_23B9D80E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = MEMORY[0x24BDAC7A8](a1, a2);
  MEMORY[0x24BDAC7A8](v9, v10);
  *(_QWORD *)(v8 - 168) = v4;
  *(_QWORD *)(v8 - 136) = v4;
  *(_QWORD *)(v8 - 128) = v6;
  *(_QWORD *)(v8 - 120) = v2;
  *(_QWORD *)(v8 - 112) = v7;
  *(_QWORD *)(v8 - 104) = v3;
  *(_QWORD *)(v8 - 96) = v5;
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9D8154(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23B9D6BB8(v1, a1, v2);
}

uint64_t sub_23B9D8168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;

  *(_QWORD *)(v4 - 152) = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v2, v0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_23B9D81AC + 4 * byte_23BB8E1B0[EnumCaseMultiPayload]))();
}

void sub_23B9D81AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v3 - 168);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v6 = v2 + *(int *)(TupleTypeMetadata3 + 48);
  v7 = v2 + *(int *)(TupleTypeMetadata3 + 64);
  v8 = *(_QWORD *)(v3 - 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 32))(v8, v2, v4);
  v9 = *(_QWORD *)(v3 - 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 208) + 32))(v9, v6, v1);
  v10 = *(_QWORD *)(v3 - 264);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 256) + 32))(v10, v7, *(_QWORD *)(v3 - 200));
  sub_23B9D841C(*(_QWORD *)(v3 - 72), v8, v9, v10, v0);
}

uint64_t sub_23B9D8254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v6, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 208) + 8))(v1, v4);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 216) + 8))(*(_QWORD *)(v7 - 224), *(_QWORD *)(v7 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 152) + 8))(v5, v3);
}

void sub_23B9D841C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v51 = a1;
  v52 = a5;
  v47 = a3;
  v48 = a4;
  v46 = a2;
  v6 = *(_QWORD **)v5;
  v56 = *(_QWORD *)(*(_QWORD *)v5 + 96);
  v7 = sub_23BB8ACA0();
  v54 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v40 - v10;
  v45 = (char *)&v40 - v10;
  v12 = v6[11];
  v53 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  v13 = *(_QWORD *)(v53 + 64);
  v15 = MEMORY[0x24BDAC7A8](v9, v14);
  v44 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v6[10];
  v16 = *(_QWORD *)(v42 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15, v18);
  v43 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = v22;
  v23 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v42);
  v25 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v12);
  v26 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v11, v48, v55);
  v27 = (*(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v28 = (v17 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (*(unsigned __int8 *)(v25 + 80) + v28 + 8) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v30 = (v13 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v31 = (char *)swift_allocObject();
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  v32 = v24;
  *((_QWORD *)v31 + 4) = v24;
  v33 = v41;
  v34 = v56;
  *((_QWORD *)v31 + 5) = v41;
  *((_QWORD *)v31 + 6) = v34;
  v35 = v6[13];
  *((_QWORD *)v31 + 7) = v35;
  v36 = v6[14];
  *((_QWORD *)v31 + 8) = v36;
  v37 = v6[15];
  *((_QWORD *)v31 + 9) = v37;
  v38 = &v31[v27];
  v39 = v32;
  (*(void (**)(char *, char *))(v16 + 32))(v38, v43);
  *(_QWORD *)&v31[v28] = v50;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v31[v29], v44, v33);
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v31[v30], v45, v55);
  swift_retain();
  sub_23B989F54((uint64_t)v49, (uint64_t)&unk_256A5B870, (uint64_t)v31);
  v57 = v39;
  v58 = v33;
  v59 = v56;
  v60 = v35;
  v61 = v36;
  v62 = v37;
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9D86C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23B9D09E0(v1, *(_QWORD *)(v2 - 176), a1);
}

uint64_t sub_23B9D86D0()
{
  return swift_release();
}

uint64_t sub_23B9D86F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_23BB8A988();
  }
  return swift_task_switch();
}

uint64_t sub_23B9D8760()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_23B9D87BC;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_23B9D87BC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  return (*(uint64_t (**)(void))(*v0 + 8))();
}

void sub_23B9D87FC()
{
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9D8844()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(v0 + ((*(unsigned int *)(*(_QWORD *)v0 + 48) + 3) & 0x1FFFFFFFCLL)));
  sub_23B9D88BC();
}

void sub_23B9D889C()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void sub_23B9D88BC()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v0 = sub_23BB8B27C();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for CombineLatestStateMachine();
}

uint64_t sub_23B9D8CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B9D8CD0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_23BA070C4;
  return sub_23BB8B030();
}

uint64_t sub_23B9D8D68(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6[11] = a5;
  v6[12] = a6;
  v6[9] = a3;
  v6[10] = a4;
  v6[8] = a2;
  v7 = (_QWORD *)*a4;
  v6[13] = *a4;
  v8 = v7[12];
  v6[14] = v8;
  v9 = sub_23BB8ACA0();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = swift_task_alloc();
  v10 = *(_QWORD *)(v8 - 8);
  v6[18] = v10;
  v6[19] = *(_QWORD *)(v10 + 64);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  v11 = v7[11];
  v6[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[23] = v12;
  v6[24] = *(_QWORD *)(v12 + 64);
  v6[25] = swift_task_alloc();
  v13 = v7[10];
  v6[26] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[27] = v14;
  v6[28] = *(_QWORD *)(v14 + 64);
  v6[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v6[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9D8E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v49 = v1;
  v3 = *(_QWORD *)(v0 + 216);
  v32 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v39 = *(_QWORD *)(v0 + 200);
  v40 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 176);
  v31 = v5;
  v43 = *(_QWORD *)(v0 + 128);
  v44 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 112);
  v45 = *(_QWORD *)(v0 + 120);
  v46 = *(_QWORD *)(v0 + 144);
  v35 = v6;
  v7 = *(_QWORD **)(v0 + 104);
  v42 = *(_QWORD *)(v0 + 96);
  v36 = *(_QWORD *)(v0 + 88);
  v38 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 72);
  v51 = *(_QWORD *)(v0 + 80);
  v9 = sub_23BB8AA18();
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v48(v1, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v4);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0;
  v12 = v4;
  v33 = v4;
  *((_QWORD *)v11 + 4) = v4;
  *((_QWORD *)v11 + 5) = v5;
  *((_QWORD *)v11 + 6) = v6;
  v13 = v7[13];
  *(_QWORD *)(v0 + 248) = v13;
  *((_QWORD *)v11 + 7) = v13;
  v14 = v7[14];
  *(_QWORD *)(v0 + 256) = v14;
  *((_QWORD *)v11 + 8) = v14;
  v15 = v7[15];
  *(_QWORD *)(v0 + 264) = v15;
  *((_QWORD *)v11 + 9) = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v11[v10], v2, v12);
  *(_QWORD *)&v11[(v32 + v10 + 7) & 0xFFFFFFFFFFFFFFF8] = v51;
  swift_retain();
  sub_23B9DA570(v49, (uint64_t)&unk_256A5B890, (uint64_t)v11);
  sub_23B9907F8(v49);
  v48(v49, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v39, v36, v31);
  v16 = (*(unsigned __int8 *)(v38 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v17 = (v40 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = v33;
  *((_QWORD *)v18 + 5) = v31;
  *((_QWORD *)v18 + 6) = v35;
  *((_QWORD *)v18 + 7) = v13;
  v37 = v13;
  v41 = v14;
  *((_QWORD *)v18 + 8) = v14;
  *((_QWORD *)v18 + 9) = v15;
  v34 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(&v18[v16], v39, v31);
  *(_QWORD *)&v18[v17] = v51;
  swift_retain();
  sub_23B9DA570(v49, (uint64_t)&unk_256A5B8A0, (uint64_t)v18);
  sub_23B9907F8(v49);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v44, v42, v45);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v35) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 240);
    v50 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 168);
    v47 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 112);
    v52 = *(_QWORD *)(v0 + 80);
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
    v25(v20, *(_QWORD *)(v0 + 136), v24);
    v48(v19, 1, 1, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v20, v24);
    v26 = (*(unsigned __int8 *)(v23 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v27 = (v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v50;
    v28[5] = v47;
    v28[6] = v24;
    v28[7] = v37;
    v28[8] = v41;
    v28[9] = v34;
    v25((uint64_t)v28 + v26, v22, v24);
    *(_QWORD *)((char *)v28 + v27) = v52;
    swift_retain();
    sub_23B9DA570(v19, (uint64_t)&unk_256A5B8B0, (uint64_t)v28);
    sub_23B9907F8(v19);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v20, v24);
  }
  *(_QWORD *)(v0 + 272) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v30 = v0;
    v30[1] = sub_23B9D9328;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23B9D9328()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9D938C()
{
  uint64_t v0;
  _QWORD *v2;

  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v2 = v0;
    v2[1] = sub_23B9D9328;
    return sub_23BB8AAB4();
  }
}

void sub_23B9D9490()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[36];
  v2 = v0[33];
  v4 = v0[31];
  v3 = v0[32];
  v5 = v0[26];
  v6 = v0[22];
  v7 = v0[14];
  v8 = (_QWORD *)swift_task_alloc();
  v8[2] = v5;
  v8[3] = v6;
  v8[4] = v7;
  v8[5] = v4;
  v8[6] = v3;
  v8[7] = v2;
  v8[8] = v1;
  v0[2] = v5;
  v0[3] = v6;
  v0[4] = v7;
  v0[5] = v4;
  v0[6] = v3;
  v0[7] = v2;
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9D9518()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(v0 + ((*(unsigned int *)(*(_QWORD *)v0 + 48) + 3) & 0x1FFFFFFFCLL)));
  sub_23B9DC620();
}

uint64_t sub_23B9D9568(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  os_unfair_lock_s *v25;
  _QWORD *v27;
  void *v28;

  os_unfair_lock_unlock(v25);
  swift_task_dealloc();
  sub_23BB8AACC();

  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v24 + 8))();
  }
  else
  {
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v24 + 280) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v27 = v24;
    v27[1] = sub_23B9D9328;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23B9D9694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[34] = a4;
  v5[35] = a5;
  v6 = *(_QWORD **)a5;
  v5[36] = *(_QWORD *)(*(_QWORD *)a5 + 104);
  v7 = v6[10];
  v5[37] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[38] = AssociatedTypeWitness;
  v5[39] = v6[14];
  v5[40] = v6[11];
  swift_getAssociatedTypeWitness();
  v5[41] = v6[15];
  v5[42] = v6[12];
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  v5[43] = swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  v5[44] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v9 = sub_23BB8B27C();
  v5[45] = v9;
  v5[46] = *(_QWORD *)(v9 - 8);
  v5[47] = swift_task_alloc();
  v10 = sub_23BB8ACA0();
  v5[48] = v10;
  v5[49] = *(_QWORD *)(v10 - 8);
  v5[50] = swift_task_alloc();
  v5[51] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[52] = swift_task_alloc();
  v5[53] = *(_QWORD *)(v7 - 8);
  v5[54] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v5[55] = v11;
  v5[56] = *(_QWORD *)(v11 - 8);
  v5[57] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9D9890()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[53] + 16))(v0[54], v0[34], v0[37]);
  sub_23BB8AAD8();
  return swift_task_switch();
}

void sub_23B9D9900()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23B9D9954;
  swift_continuation_init();
  sub_23B9DB100();
}

uint64_t sub_23B9D9940()
{
  return swift_continuation_await();
}

uint64_t sub_23B9D9954()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[58] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v4 = (_QWORD *)swift_task_alloc();
    v1[59] = v4;
    *v4 = v1;
    v4[1] = sub_23B9D9A2C;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23B9D9A2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23B9D9A90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = v0[50];
  v1 = v0[51];
  v3 = v0[38];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    v4 = v0[41];
    v5 = v0[42];
    v7 = v0[39];
    v6 = v0[40];
    v9 = v0[36];
    v8 = v0[37];
    (*(void (**)(uint64_t, _QWORD))(v0[49] + 8))(v2, v0[48]);
    v10 = (_QWORD *)swift_task_alloc();
    v10[2] = v8;
    v10[3] = v6;
    v10[4] = v5;
    v10[5] = v9;
    v10[6] = v7;
    v10[7] = v4;
    v0[16] = v8;
    v0[17] = v6;
    v0[18] = v5;
    v0[19] = v9;
    v0[20] = v7;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine();
  }
  v11 = v0[52];
  v12 = v0[41];
  v13 = v0[42];
  v15 = v0[39];
  v14 = v0[40];
  v16 = v3;
  v18 = v0[36];
  v17 = v0[37];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v11, v2, v16);
  v19 = (_QWORD *)swift_task_alloc();
  v19[2] = v17;
  v19[3] = v14;
  v19[4] = v13;
  v19[5] = v18;
  v19[6] = v15;
  v19[7] = v12;
  v19[8] = v11;
  v0[28] = v17;
  v0[29] = v14;
  v0[30] = v13;
  v0[31] = v18;
  v0[32] = v15;
  v0[33] = v12;
  type metadata accessor for CombineLatestStateMachine();
}

uint64_t sub_23B9D9F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_23BB8A988();
  }
  return swift_task_switch();
}

uint64_t sub_23B9DA004()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_23B9DA060;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_23B9DA060()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_23B9DA0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a3;
  v28 = a8;
  v39 = a7;
  v46 = a6;
  v36 = a2;
  v37 = a1;
  swift_getAssociatedTypeWitness();
  v25 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = a5;
  v35 = swift_getAssociatedTypeWitness();
  v27 = AssociatedTypeWitness;
  v11 = sub_23BB8ACA0();
  v34 = v11;
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v24 = sub_23BB8B27C();
  v23[3] = *(_QWORD *)(v24 - 8);
  v13 = MEMORY[0x24BDAC7A8](v24, v12);
  v23[1] = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v23[2] = (char *)v23 - v17;
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v19 = sub_23BB8ACA0();
  v31 = *(_QWORD *)(v19 - 8);
  v32 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v21 = sub_23BB8ACA0();
  v29 = *(_QWORD *)(v21 - 8);
  v30 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v40 = v38;
  v41 = a4;
  v42 = a5;
  v43 = v46;
  v44 = v39;
  v45 = v28;
  type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
}

void sub_23B9DA304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v6 - 248) = a1;
  v7 = sub_23BB8ACA0();
  *(_QWORD *)(v6 - 256) = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v5, *(_QWORD *)(v6 - 176), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 264) - 8) + 56))(v3, 1, 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 184) - 8) + 56))(v1, 1, 1);
  v12 = *(_QWORD *)(v6 - 280);
  *(_QWORD *)(v6 - 136) = *(_QWORD *)(v6 - 152);
  *(_QWORD *)(v6 - 128) = v12;
  v13 = *(_QWORD *)(v6 - 72);
  *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 272);
  *(_QWORD *)(v6 - 112) = v13;
  *(_QWORD *)(v6 - 104) = *(_QWORD *)(v6 - 144);
  *(_QWORD *)(v6 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9DA404(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23B9D1ABC(v3, v2, v1, a1, v4);
}

uint64_t sub_23B9DA420()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  char *v15;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 200) + 8))(v1, *(_QWORD *)(v6 - 192));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 216) + 8))(v2, *(_QWORD *)(v6 - 208));
  v7 = v4;
  v8 = *(_QWORD *)(v6 - 256);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(v7, *(_QWORD *)(v6 - 224));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v0, v5, v3);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 248) - 8) + 48))(v0, 1) != 1)
  {
    v9 = *v0;
    v10 = *(_QWORD *)(v6 - 288);
    sub_23BB8AAA8();
    v11 = (char *)v0 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v12 = *(_QWORD *)(v6 - 296);
    v13 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
    v14 = *(_QWORD *)(v6 - 304);
    v13(v14, v11, v10);
    v15 = *(char **)(v6 - 312);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v14, v10);
    v13(*(_QWORD *)(*(_QWORD *)(v9 + 64) + 40), v15, v10);
    swift_continuation_resume();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v10);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v5, v3);
}

uint64_t sub_23B9DA570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];
  _QWORD v20[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B9F4BA4(a1, (uint64_t)v10);
  v11 = sub_23BB8AA18();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_23B9907F8((uint64_t)v10);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_23BB8A988();
      v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23BB8AA0C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v16 = *v4;
  v17 = (_QWORD *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v17 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23B9DA6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[34] = a4;
  v5[35] = a5;
  v6 = *(_QWORD **)a5;
  v5[36] = *(_QWORD *)(*(_QWORD *)a5 + 104);
  v5[37] = v6[10];
  swift_getAssociatedTypeWitness();
  v5[38] = v6[14];
  v7 = v6[11];
  v5[39] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[40] = AssociatedTypeWitness;
  v5[41] = v6[15];
  v5[42] = v6[12];
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  v5[43] = swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  v5[44] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v9 = sub_23BB8B27C();
  v5[45] = v9;
  v5[46] = *(_QWORD *)(v9 - 8);
  v5[47] = swift_task_alloc();
  v10 = sub_23BB8ACA0();
  v5[48] = v10;
  v5[49] = *(_QWORD *)(v10 - 8);
  v5[50] = swift_task_alloc();
  v5[51] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[52] = swift_task_alloc();
  v5[53] = *(_QWORD *)(v7 - 8);
  v5[54] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v5[55] = v11;
  v5[56] = *(_QWORD *)(v11 - 8);
  v5[57] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9DA8EC()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[53] + 16))(v0[54], v0[34], v0[39]);
  sub_23BB8AAD8();
  return swift_task_switch();
}

void sub_23B9DA95C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23B9DA9B0;
  swift_continuation_init();
  sub_23B9DB100();
}

uint64_t sub_23B9DA99C()
{
  return swift_continuation_await();
}

uint64_t sub_23B9DA9B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[58] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v4 = (_QWORD *)swift_task_alloc();
    v1[59] = v4;
    *v4 = v1;
    v4[1] = sub_23B9DAA88;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23B9DAA88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9DAAEC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9DAB70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = v0[50];
  v1 = v0[51];
  v3 = v0[40];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    v4 = v0[41];
    v5 = v0[42];
    v7 = v0[38];
    v6 = v0[39];
    v9 = v0[36];
    v8 = v0[37];
    (*(void (**)(uint64_t, _QWORD))(v0[49] + 8))(v2, v0[48]);
    v10 = (_QWORD *)swift_task_alloc();
    v10[2] = v8;
    v10[3] = v6;
    v10[4] = v5;
    v10[5] = v9;
    v10[6] = v7;
    v10[7] = v4;
    v0[16] = v8;
    v0[17] = v6;
    v0[18] = v5;
    v0[19] = v9;
    v0[20] = v7;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine();
  }
  v11 = v0[52];
  v12 = v0[41];
  v13 = v0[42];
  v15 = v0[38];
  v14 = v0[39];
  v16 = v3;
  v18 = v0[36];
  v17 = v0[37];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v11, v2, v16);
  v19 = (_QWORD *)swift_task_alloc();
  v19[2] = v17;
  v19[3] = v14;
  v19[4] = v13;
  v19[5] = v18;
  v19[6] = v15;
  v19[7] = v12;
  v19[8] = v11;
  v0[28] = v17;
  v0[29] = v14;
  v0[30] = v13;
  v0[31] = v18;
  v0[32] = v15;
  v0[33] = v12;
  type metadata accessor for CombineLatestStateMachine();
}

uint64_t sub_23B9DB07C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9DB100()
{
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9DB154()
{
  uint64_t v0;

  os_unfair_lock_lock((os_unfair_lock_t)(v0 + ((*(unsigned int *)(*(_QWORD *)v0 + 48) + 3) & 0x1FFFFFFFCLL)));
  sub_23B9DC098();
}

void sub_23B9DB1B4()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void sub_23B9DB1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedTypeWitness;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36 = a3;
  v26 = a8;
  v37 = a7;
  v44 = a6;
  v34 = a2;
  v35 = a1;
  swift_getAssociatedTypeWitness();
  v24 = a4;
  swift_getAssociatedTypeWitness();
  v25 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_23BB8ACA0();
  v32 = v10;
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v23 = sub_23BB8B27C();
  v22[2] = *(_QWORD *)(v23 - 8);
  v12 = MEMORY[0x24BDAC7A8](v23, v11);
  v22[0] = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v22[1] = (char *)v22 - v16;
  v31 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v18 = sub_23BB8ACA0();
  v29 = *(_QWORD *)(v18 - 8);
  v30 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v20 = sub_23BB8ACA0();
  v27 = *(_QWORD *)(v20 - 8);
  v28 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v38 = v36;
  v39 = a4;
  v40 = a5;
  v41 = v44;
  v42 = v37;
  v43 = v26;
  type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
}

void sub_23B9DB420(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v7 - 248) = a1;
  v8 = sub_23BB8ACA0();
  *(_QWORD *)(v7 - 256) = v8;
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  MEMORY[0x24BDAC7A8](v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v12 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v3, *(_QWORD *)(v7 - 176), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v3, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 - 184) - 8) + 56))(v1, 1, 1);
  v13 = *(_QWORD *)(v7 - 272);
  *(_QWORD *)(v7 - 136) = *(_QWORD *)(v7 - 152);
  *(_QWORD *)(v7 - 128) = v13;
  v14 = *(_QWORD *)(v7 - 72);
  *(_QWORD *)(v7 - 120) = *(_QWORD *)(v7 - 264);
  *(_QWORD *)(v7 - 112) = v14;
  *(_QWORD *)(v7 - 104) = *(_QWORD *)(v7 - 144);
  *(_QWORD *)(v7 - 96) = v2;
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9DB51C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23B9D1ABC(v4, v3, v2, a1, v1);
}

uint64_t sub_23B9DB538()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  char *v15;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 200) + 8))(v1, *(_QWORD *)(v6 - 192));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 216) + 8))(v2, *(_QWORD *)(v6 - 208));
  v7 = v3;
  v8 = *(_QWORD *)(v6 - 256);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(v7, *(_QWORD *)(v6 - 224));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v0, v5, v8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 248) - 8) + 48))(v0, 1) != 1)
  {
    v9 = *v0;
    v10 = *(_QWORD *)(v6 - 280);
    sub_23BB8AAA8();
    v11 = (char *)v0 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v12 = *(_QWORD *)(v6 - 288);
    v13 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
    v14 = *(_QWORD *)(v6 - 296);
    v13(v14, v11, v10);
    v15 = *(char **)(v6 - 304);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v14, v10);
    v13(*(_QWORD *)(*(_QWORD *)(v9 + 64) + 40), v15, v10);
    swift_continuation_resume();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v10);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v8);
}

uint64_t sub_23B9DB688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[34] = a4;
  v5[35] = a5;
  v6 = *(_QWORD **)a5;
  v5[36] = *(_QWORD *)(*(_QWORD *)a5 + 104);
  v5[37] = v6[10];
  swift_getAssociatedTypeWitness();
  v5[38] = v6[14];
  v5[39] = v6[11];
  swift_getAssociatedTypeWitness();
  v5[40] = v6[15];
  v7 = v6[12];
  v5[41] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[42] = AssociatedTypeWitness;
  v9 = sub_23BB8ACA0();
  v5[43] = v9;
  v5[44] = swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  v5[45] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v10 = sub_23BB8B27C();
  v5[46] = v10;
  v5[47] = *(_QWORD *)(v10 - 8);
  v5[48] = swift_task_alloc();
  v5[49] = *(_QWORD *)(v9 - 8);
  v5[50] = swift_task_alloc();
  v5[51] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[52] = swift_task_alloc();
  v5[53] = *(_QWORD *)(v7 - 8);
  v5[54] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v5[55] = v11;
  v5[56] = *(_QWORD *)(v11 - 8);
  v5[57] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9DB880()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[53] + 16))(v0[54], v0[34], v0[41]);
  sub_23BB8AAD8();
  return swift_task_switch();
}

void sub_23B9DB8F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23B9DB944;
  swift_continuation_init();
  sub_23B9DB100();
}

uint64_t sub_23B9DB930()
{
  return swift_continuation_await();
}

uint64_t sub_23B9DB944()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[58] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v4 = (_QWORD *)swift_task_alloc();
    v1[59] = v4;
    *v4 = v1;
    v4[1] = sub_23B9DBA1C;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23B9DBA1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9DBA80()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9DBB04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = v0[50];
  v1 = v0[51];
  v3 = v0[42];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1)
  {
    v4 = v0[40];
    v5 = v0[41];
    v7 = v0[38];
    v6 = v0[39];
    v9 = v0[36];
    v8 = v0[37];
    (*(void (**)(uint64_t, _QWORD))(v0[49] + 8))(v2, v0[43]);
    v10 = (_QWORD *)swift_task_alloc();
    v10[2] = v8;
    v10[3] = v6;
    v10[4] = v5;
    v10[5] = v9;
    v10[6] = v7;
    v10[7] = v4;
    v0[16] = v8;
    v0[17] = v6;
    v0[18] = v5;
    v0[19] = v9;
    v0[20] = v7;
    v0[21] = v4;
    type metadata accessor for CombineLatestStateMachine();
  }
  v11 = v0[52];
  v12 = v0[40];
  v13 = v0[41];
  v15 = v0[38];
  v14 = v0[39];
  v16 = v3;
  v18 = v0[36];
  v17 = v0[37];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v11, v2, v16);
  v19 = (_QWORD *)swift_task_alloc();
  v19[2] = v17;
  v19[3] = v14;
  v19[4] = v13;
  v19[5] = v18;
  v19[6] = v15;
  v19[7] = v12;
  v19[8] = v11;
  v0[28] = v17;
  v0[29] = v14;
  v0[30] = v13;
  v0[31] = v18;
  v0[32] = v15;
  v0[33] = v12;
  type metadata accessor for CombineLatestStateMachine();
}

uint64_t sub_23B9DC014()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 456), *(_QWORD *)(v0 + 440));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9DC098()
{
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9DC0D4()
{
  sub_23B9D14E4();
}

void sub_23B9DC0E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v5;

  if ((~a1 & 0xF00000000000000FLL) != 0 || (a2 & 0xF000000000000007) != 0xF000000000000007)
  {
    if (a2 < 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
      swift_allocError();
      *v5 = a2 & 0x7FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
    else
    {
      swift_continuation_throwingResume();
      sub_23B9F5378(a1, a2);
    }
  }
}

void sub_23B9DC178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t AssociatedTypeWitness;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v35 = a8;
  v44 = a6;
  v36 = a4;
  v37 = a3;
  v33 = a2;
  v34 = a1;
  swift_getAssociatedTypeWitness();
  v24 = a7;
  swift_getAssociatedTypeWitness();
  v25 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_23BB8ACA0();
  v31 = v10;
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v23 = sub_23BB8B27C();
  v22[3] = *(_QWORD *)(v23 - 8);
  v12 = MEMORY[0x24BDAC7A8](v23, v11);
  v22[1] = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v22[2] = (char *)v22 - v16;
  v30 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v18 = sub_23BB8ACA0();
  v28 = *(_QWORD *)(v18 - 8);
  v29 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v20 = sub_23BB8ACA0();
  v26 = *(_QWORD *)(v20 - 8);
  v27 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v38 = v37;
  v39 = v36;
  v40 = a5;
  v41 = v44;
  v42 = a7;
  v43 = v35;
  type metadata accessor for CombineLatestStateMachine.ElementProducedAction();
}

void sub_23B9DC3BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v6 - 248) = a1;
  v7 = sub_23BB8ACA0();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  MEMORY[0x24BDAC7A8](v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v3, 1, 1, v2);
  v11 = *(_QWORD *)(v6 - 192);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v1, *(_QWORD *)(v6 - 184), v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v1, 0, 1, v11);
  v13 = *(_QWORD *)(v6 - 152);
  *(_QWORD *)(v6 - 136) = *(_QWORD *)(v6 - 144);
  *(_QWORD *)(v6 - 128) = v13;
  v14 = *(_QWORD *)(v6 - 72);
  *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 256);
  *(_QWORD *)(v6 - 112) = v14;
  v15 = *(_QWORD *)(v6 - 160);
  *(_QWORD *)(v6 - 104) = *(_QWORD *)(v6 - 264);
  *(_QWORD *)(v6 - 96) = v15;
  type metadata accessor for CombineLatestStateMachine();
}

void sub_23B9DC4B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23B9D1ABC(v3, v2, v1, a1, v4);
}

uint64_t sub_23B9DC4D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t, char *, uint64_t);
  uint64_t v13;
  char *v14;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 208) + 8))(v1, *(_QWORD *)(v7 - 200));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 224) + 8))(v2, *(_QWORD *)(v7 - 216));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 240) + 8))(v3, *(_QWORD *)(v7 - 232));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v0, v6, v4);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 - 248) - 8) + 48))(v0, 1) != 1)
  {
    v8 = *v0;
    v9 = *(_QWORD *)(v7 - 272);
    sub_23BB8AAA8();
    v10 = (char *)v0 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v11 = *(_QWORD *)(v7 - 280);
    v12 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v13 = *(_QWORD *)(v7 - 288);
    v12(v13, v10, v9);
    v14 = *(char **)(v7 - 296);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v13, v9);
    v12(*(_QWORD *)(*(_QWORD *)(v8 + 64) + 40), v14, v9);
    swift_continuation_resume();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v9);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
}

void sub_23B9DC620()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v0 = sub_23BB8B27C();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for CombineLatestStateMachine();
}

uint64_t sub_23B9DCA28()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23B9DCA4C()
{
  MEMORY[0x24260CDCC]();
  return swift_deallocClassInstance();
}

uint64_t sub_23B9DCA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v5 = v2;
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1, v5);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)&v22 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  (*(void (**)(char *))(v18 + 16))((char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_23B9DCBC8(a1, (uint64_t)v15, a2);
  if (v3)
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v20(v11, v15, v7);
    if (sub_23BB8B174())
    {
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      swift_allocError();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v21, v11, v7);
    }
  }
  return result;
}

uint64_t sub_23B9DCBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_23B9DCC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_23B9DCCDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v8(a2, 1, 1, AssociatedTypeWitness);
  v6 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a2, a1, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v8)(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_23B9DCDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a1;
  v3[3] = v2;
  v3[4] = *(_QWORD *)(a2 + 24);
  v3[5] = *(_QWORD *)(a2 + 16);
  v3[6] = swift_getAssociatedTypeWitness();
  v4 = sub_23BB8ACA0();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9DCE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if ((sub_23BB8AA90() & 1) == 0)
  {
    v1 = *(_QWORD *)(v0 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v1, 1, AssociatedTypeWitness);
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_QWORD *)(v0 + 48);
    if (v3)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 8) + 56))(*(_QWORD *)(v0 + 72), 1, 1, *(_QWORD *)(v0 + 48));
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      sub_23BB8ACAC();
      v6 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v13 = *(_QWORD *)(v0 + 48);
        v14 = *(_QWORD *)(v0 + 16);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v14, *(_QWORD *)(v0 + 72), v13);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v13);
        goto LABEL_7;
      }
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  }
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v9, 1, 1, v7);
LABEL_7:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9DCFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B9DD058;
  return sub_23B9DCDA0(a1, a2);
}

uint64_t sub_23B9DD058()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B9DD0A4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23B9DD128;
  return sub_23BB8A9DC();
}

uint64_t sub_23B9DD128()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B9DD178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, v5);
  sub_23BB8A8A4();
  return sub_23B9DCCDC((uint64_t)v12, a3);
}

void sub_23B9DD268(uint64_t a1, uint64_t a2)
{
  sub_23B9E38E0(a1, a2, (void (*)(void))sub_23B9DD178);
}

uint64_t sub_23B9DD274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void (*a11)(_QWORD, uint64_t *), uint64_t (*a12)(_QWORD, uint64_t *))
{
  uint64_t v18;
  uint64_t TupleTypeMetadata3;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v18 = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v20 = a9 + *(int *)(TupleTypeMetadata3 + 48);
  v21 = a9 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a9, a1, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v20, a2, a5);
  v22 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, a3, v18);
  v28 = a4;
  v29 = a5;
  v30 = a6;
  v31 = a7;
  v32 = a8;
  v33 = a10;
  a11(0, &v28);
  swift_storeEnumTagMultiPayload();
  LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 48))(a3, 1, a6);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a3, v18);
  v28 = a4;
  v29 = a5;
  v30 = a6;
  v31 = a7;
  v32 = a8;
  v33 = a10;
  result = a12(0, &v28);
  if ((_DWORD)v20 == 1)
    v24 = 2;
  else
    v24 = 3;
  *(_QWORD *)(a9 + *(int *)(result + 68)) = v24;
  return result;
}

void sub_23B9DD434()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DD470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9DD4CC + *((int *)qword_23B9DD5F8 + EnumCaseMultiPayload)))();
}

uint64_t sub_23B9DD4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata3;
  uint64_t v5;

  v3 = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v5 = v2 + *(int *)(TupleTypeMetadata3 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + *(int *)(TupleTypeMetadata3 + 64), v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v2, v0);
  return 0;
}

void sub_23B9DD60C()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DD664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[96];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1, a2);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = &v23[-v12];
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  *(_QWORD *)(v5 - 136) = v4;
  v14(&v23[-v12], v4, a1);
  if (swift_getEnumCaseMultiPayload())
    __asm { BR              X10 }
  v16 = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  *(_QWORD *)(v5 - 168) = &v13[*(int *)(TupleTypeMetadata3 + 48)];
  v18 = &v13[*(int *)(TupleTypeMetadata3 + 64)];
  swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v5 - 144);
  swift_retain();
  v20 = sub_23BB89188();
  *v10 = v19;
  v10[1] = v20;
  v21 = MEMORY[0x24BEE4AF8];
  v10[3] = 0;
  v10[4] = 0;
  v10[2] = v21;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD, _QWORD *, uint64_t))(v7 + 40))(*(_QWORD *)(v5 - 136), v10, a1);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v18, v16);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(*(_QWORD *)(v5 - 168), v3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v13, v2);
}

void sub_23B9DD808()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __break(1u);
}

void sub_23B9DD828()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 8);
  swift_release();

  __break(1u);
  JUMPOUT(0x23B9DD83CLL);
}

void sub_23B9DD850()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DD890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9DD8E8 + *((int *)qword_23B9DDA60 + EnumCaseMultiPayload)))();
}

uint64_t sub_23B9DD8F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t);
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  _QWORD *v16;

  v6 = *v3;
  v5 = v3[1];
  v7 = (_QWORD *)v3[2];
  if (v3[4])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = v3[3];
    v10 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
    v10(v1, v2);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_23BB63864(0, v7[2] + 1, 1, v7);
    v11 = v7[2];
    v12 = v7[3];
    v13 = v11 + 1;
    if (v11 >= v12 >> 1)
    {
      v14 = v7;
      v15 = v7[2];
      v16 = sub_23BB63864((_QWORD *)(v12 > 1), v11 + 1, 1, v14);
      v11 = v15;
      v7 = v16;
    }
    v7[2] = v13;
    v7[v11 + 4] = v0;
    v10(v1, v2);
    *v1 = v6;
    v1[1] = v5;
    v1[2] = v7;
    v1[3] = v9;
    v1[4] = 0;
    swift_storeEnumTagMultiPayload();
    return 0;
  }
  return v0;
}

void sub_23B9DDA74()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DDAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9DDB28 + *((int *)qword_23B9DDE30 + EnumCaseMultiPayload)))();
}

uint64_t sub_23B9DDB38()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  char *v16;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t);
  uint64_t v20;

  *(_QWORD *)(v6 - 168) = v2;
  v7 = *v1;
  v8 = v1[1];
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  if (v11)
  {
    *(_QWORD *)(v6 - 184) = v7;
    *(_QWORD *)(v6 - 176) = v10;
    *(_QWORD *)(v6 - 128) = v8;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v13 = sub_23BB89194();
    MEMORY[0x24260D8DC](MEMORY[0x24BE18D68], v13);
    if ((sub_23BB8AB80() & 1) == 0)
    {
      __break(1u);
      JUMPOUT(0x23B9DDE28);
    }
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v3, v4);
    *v3 = *(_QWORD *)(v6 - 184);
    v3[1] = v8;
    v14 = *(_QWORD *)(v6 - 176);
    v3[2] = v9;
    v3[3] = v14;
    v3[4] = 0;
    swift_storeEnumTagMultiPayload();
    sub_23BB8ACA0();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
    sub_23BB8AAA8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v16 = (char *)v0 + *(int *)(TupleTypeMetadata2 + 48);
    *v0 = v11;
    (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v16, *(_QWORD *)(v6 - 168), AssociatedTypeWitness);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v0, 0, 1, TupleTypeMetadata2);
  }
  else
  {
    *(_QWORD *)(v6 - 128) = v8;
    v19 = *(void (**)(_QWORD *, uint64_t))(v5 + 8);
    v19(v3, v4);
    swift_storeEnumTagMultiPayload();
    swift_getAssociatedTypeWitness();
    sub_23BB89194();
    sub_23BB89164();
    v19(v3, v4);
    v20 = *(_QWORD *)(v6 - 128);
    *v3 = v7;
    v3[1] = v20;
    v3[2] = v9;
    v3[3] = v10;
    v3[4] = 0;
    swift_storeEnumTagMultiPayload();
    sub_23BB8ACA0();
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
    sub_23BB8AAA8();
    v18 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v0, 1, 1, v18);
  }
}

void sub_23B9DDE44()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DDE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(unint64_t))((char *)&loc_23B9DDF00 + dword_23B9DE0C4[EnumCaseMultiPayload]))(0x8000000000000000);
}

uint64_t sub_23B9DDF14()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *v0;
  v7 = v0[1];
  v8 = v0[2];
  v9 = v0[3];
  v10 = v0[4];
  if (v10)
  {
    *(_QWORD *)(v5 - 168) = v10;
    *(_QWORD *)(v5 - 128) = v7;
    swift_getAssociatedTypeWitness();
    v11 = sub_23BB89194();
    MEMORY[0x24260D8DC](MEMORY[0x24BE18D68], v11);
    if ((sub_23BB8AB80() & 1) != 0)
    {
      v12 = v9 + 1;
      if (!__OFADD__(v9, 1))
      {
        if (v12 == *(_QWORD *)((char *)v1 + *(int *)(v3 + 68)))
        {
          swift_release();
          (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
          swift_storeEnumTagMultiPayload();
          return *(_QWORD *)(v5 - 168) | 0x4000000000000000;
        }
        (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
        *v1 = v6;
        v1[1] = v7;
        v1[2] = v8;
        v1[3] = v12;
        v1[4] = *(_QWORD *)(v5 - 168);
        swift_storeEnumTagMultiPayload();
        return 0x8000000000000000;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    JUMPOUT(0x23B9DE0BCLL);
  }
  v14 = v9 + 1;
  if (__OFADD__(v9, 1))
    goto LABEL_13;
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
  *v1 = v6;
  v1[1] = v7;
  v1[2] = v8;
  v1[3] = v14;
  v1[4] = 0;
  swift_storeEnumTagMultiPayload();
  if (v14 == *(_QWORD *)((char *)v1 + *(int *)(v3 + 68)))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return v6;
  }
  return 0x8000000000000000;
}

void sub_23B9DE0D8()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DE130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9DE190 + *((int *)qword_23B9DE2E8 + EnumCaseMultiPayload)))();
}

uint64_t sub_23B9DE1A8()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;

  v7 = *v3;
  v6 = v3[1];
  v8 = v3[4];
  if (v8)
  {
    *(_QWORD *)(v5 - 128) = v6;
    swift_getAssociatedTypeWitness();
    v9 = sub_23BB89194();
    MEMORY[0x24260D8DC](MEMORY[0x24BE18D68], v9);
    v10 = sub_23BB8AB80();
    swift_release();
    if ((v10 & 1) == 0)
    {
      __break(1u);
      JUMPOUT(0x23B9DE2E0);
    }
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
    swift_storeEnumTagMultiPayload();
    v11 = v0;
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v1, v2);
    *v1 = v6;
    v1[1] = v0;
    swift_storeEnumTagMultiPayload();
    v12 = v0;
    return v7;
  }
  return v8;
}

void sub_23B9DE2FC()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DE33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9DE394 + *((int *)qword_23B9DE508 + EnumCaseMultiPayload)))();
}

unint64_t sub_23B9DE3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23BB8ACA0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v8 = v4 + *(int *)(TupleTypeMetadata3 + 48);
  v9 = v4 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v8, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v4, v2);
  return 0x8000000000000000;
}

void sub_23B9DE4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23B9DE494);
}

void sub_23B9DE51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getAssociatedTypeWitness();
  v0 = sub_23BB8ACA0();
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  MEMORY[0x24BDAC7A8](v6, v7);
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DE640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - v12, v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23B9DE698 + *((int *)qword_23B9DEAE8 + EnumCaseMultiPayload)))();
}

void sub_23B9DE6A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v1 - 184);
  v3 = sub_23BB8ACA0();
  v4 = *(_QWORD *)(v1 - 160);
  v5 = *(_QWORD *)(v1 - 192);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v7 = v0 + *(int *)(TupleTypeMetadata3 + 48);
  v8 = v0 + *(int *)(TupleTypeMetadata3 + 64);
  v9 = *(_QWORD *)(v1 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v9, v0, v4);
  v10 = swift_getTupleTypeMetadata3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v9 + *(int *)(v10 + 48), v7, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v9 + *(int *)(v10 + 64), v8, v3);
  *(_QWORD *)(v1 - 128) = v4;
  *(_QWORD *)(v1 - 120) = v5;
  v11 = *(_QWORD *)(v1 - 152);
  *(_QWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 104) = v11;
  v12 = *(_QWORD *)(v1 - 168);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v1 - 176);
  *(_QWORD *)(v1 - 88) = v12;
  type metadata accessor for MergeStateMachine.NextAction();
}

uint64_t sub_23B9DE78C()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23B9DEAFC()
{
  type metadata accessor for MergeStateMachine.State();
}

uint64_t sub_23B9DEB40(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[80];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (uint64_t *)&v14[-v6];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v5 + 16))(&v14[-v6], v2, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
    __asm { BR              X10 }
  v10 = *v7;
  v9 = v7[1];
  v11 = v7[2];
  if (v7[4])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x23B9DECCCLL);
  }
  v12 = v7[3];
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v2, a1);
  *v2 = v10;
  v2[1] = v9;
  v2[2] = MEMORY[0x24BEE4AF8];
  v2[3] = v12;
  v2[4] = v3;
  swift_storeEnumTagMultiPayload();
  return v11;
}

void sub_23B9DECE0()
{
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_23B9DED18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v2;
}

void sub_23B9DED40()
{
  sub_23B9DECE0();
}

uint64_t sub_23B9DED4C()
{
  return swift_deallocClassInstance();
}

void sub_23B9DED64()
{
  type metadata accessor for MergeStateMachine.IteratorDeinitializedAction();
}

void sub_23B9DEEFC()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_23B9DEF58(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t sub_23B9DEF74(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B9DEF94()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  *v1 = v0;
  v1[1] = sub_23B9DF034;
  return sub_23BB8B1B0();
}

uint64_t sub_23B9DF034()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B9DF0A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9DF0AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[20] = a1;
  v2[21] = a2;
  v3 = *(_QWORD **)a2;
  v4 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v2[22] = v4;
  v5 = v3[10];
  v2[23] = v5;
  v2[24] = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  v6 = sub_23BB8B27C();
  v2[25] = v6;
  v2[26] = *(_QWORD *)(v6 - 8);
  v2[27] = swift_task_alloc();
  v7 = v3[12];
  v2[28] = v7;
  v8 = sub_23BB8ACA0();
  v2[29] = v8;
  v2[30] = *(_QWORD *)(v8 - 8);
  v2[31] = swift_task_alloc();
  v9 = v3[11];
  v2[32] = v9;
  v2[33] = *(_QWORD *)(v9 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = *(_QWORD *)(v5 - 8);
  v2[36] = swift_task_alloc();
  v10 = v3[14];
  v2[37] = v10;
  v11 = v3[15];
  v2[2] = v5;
  v2[38] = v11;
  v2[3] = v9;
  v2[4] = v7;
  v2[5] = v4;
  v2[6] = v10;
  v2[7] = v11;
  type metadata accessor for MergeStateMachine.NextAction();
}

uint64_t sub_23B9DF1EC(uint64_t a1)
{
  _QWORD *v1;

  v1[39] = a1;
  v1[40] = *(_QWORD *)(a1 - 8);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23B9DF244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_OWORD *)(v0 + 296);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v0 + 168) + 16));
  swift_beginAccess();
  *(_QWORD *)(v0 + 64) = v3;
  *(_QWORD *)(v0 + 72) = v1;
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v4;
  *(_OWORD *)(v0 + 96) = v5;
  type metadata accessor for MergeStateMachine();
}

void sub_23B9DF2DC()
{
  sub_23B9DE51C();
}

uint64_t sub_23B9DF2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;

  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a18 + 16))(v18, v20, v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_23B9DF330 + 4 * byte_23BB8E1B4[EnumCaseMultiPayload]))();
}

void sub_23B9DF330()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata3;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v0[41];
  v3 = v0[35];
  v4 = v0[36];
  v12 = v0[33];
  v13 = v0[34];
  v5 = v1;
  v6 = v0[32];
  v7 = v0[29];
  v14 = v0[30];
  v15 = v0[31];
  v8 = v0[23];
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v10 = v2 + *(int *)(TupleTypeMetadata3 + 48);
  v11 = v2 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v2, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v10, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v15, v11, v7);
  swift_beginAccess();
  sub_23B9DFA64(v5, v4, v13, v15);
}

uint64_t sub_23B9DF408(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_unfair_lock_t lock, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _QWORD *v30;
  _QWORD *v31;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_endAccess();
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256A5B7F8 + dword_256A5B7F8);
  v31 = (_QWORD *)swift_task_alloc();
  v30[43] = v31;
  sub_23BB8ACA0();
  *v31 = v30;
  v31[1] = sub_23B9DF6C4;
  return v33(v30[20], 0, 0, (uint64_t)sub_23B9F4754, v30[21]);
}

uint64_t sub_23B9DF6C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 352) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9DF728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 272);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9DF808()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9DF86C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9DF8F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  v6 = *(_QWORD *)(v0 + 184);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9DF9CC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9DFA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v50 = a4;
  v46 = a2;
  v47 = a3;
  v52 = a1;
  v5 = *(_QWORD **)v4;
  v55 = *(_QWORD *)(*(_QWORD *)v4 + 96);
  v6 = sub_23BB8ACA0();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  v49 = *(_QWORD *)(v53 + 64);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v41 - v9;
  v45 = (char *)&v41 - v9;
  v11 = v5[11];
  v42 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v42 + 64);
  v14 = MEMORY[0x24BDAC7A8](v8, v13);
  v44 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v5[10];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v14, v18);
  v43 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v22;
  v23 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v41 = v16;
  v25 = v15;
  v24((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v15);
  v26 = v42;
  v27 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v11);
  v28 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v10, v50, v54);
  v29 = (*(unsigned __int8 *)(v16 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v30 = (v17 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v31 = (v12 + *(unsigned __int8 *)(v28 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v32 = (char *)swift_allocObject();
  *((_QWORD *)v32 + 2) = 0;
  *((_QWORD *)v32 + 3) = 0;
  v33 = v25;
  *((_QWORD *)v32 + 4) = v25;
  *((_QWORD *)v32 + 5) = v27;
  v34 = v27;
  *((_QWORD *)v32 + 6) = v55;
  v35 = v5[13];
  *((_QWORD *)v32 + 7) = v35;
  v36 = v5[14];
  *((_QWORD *)v32 + 8) = v36;
  v37 = v5[15];
  v38 = v51;
  *((_QWORD *)v32 + 9) = v37;
  *((_QWORD *)v32 + 10) = v38;
  v39 = &v32[v29];
  v40 = v33;
  (*(void (**)(char *, char *))(v41 + 32))(v39, v43);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v32[v30], v44, v34);
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v32[v31], v45, v54);
  swift_retain();
  sub_23B989F54((uint64_t)v48, (uint64_t)&unk_256A5B808, (uint64_t)v32);
  v56 = v40;
  v57 = v34;
  v58 = v55;
  v59 = v35;
  v60 = v36;
  v61 = v37;
  type metadata accessor for MergeStateMachine();
}

void sub_23B9DFCF0()
{
  sub_23B9DD60C();
}

uint64_t sub_23B9DFD00()
{
  return swift_release();
}

void sub_23B9DFD28()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_23B9DFDE8()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  v0 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for MergeStateMachine.CancelledAction();
}

void sub_23B9E0154()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_23B9E01B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  *v3 = result;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

uint64_t sub_23B9E01D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B9E01F0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_23B9E0288;
  return sub_23BB8B030();
}

uint64_t sub_23B9E0288()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B9E02D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[13] = a2;
  v7 = *a3;
  v6[18] = *a3;
  v8 = *(_QWORD *)(v7 + 96);
  v6[19] = v8;
  v9 = sub_23BB8ACA0();
  v6[20] = v9;
  v6[21] = *(_QWORD *)(v9 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = *(_QWORD *)(v8 - 8);
  v6[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9E0370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD **)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = v5[10];
  *(_QWORD *)(v0 + 200) = v10;
  v11 = v5[13];
  *(_QWORD *)(v0 + 208) = v11;
  sub_23B9E0AE8(v8, v9, v10, v11);
  v12 = v5[11];
  *(_QWORD *)(v0 + 216) = v12;
  v13 = v5[14];
  *(_QWORD *)(v0 + 224) = v13;
  sub_23B9E0AE8(v7, v9, v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v21) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 192);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 32))(v14, *(_QWORD *)(v0 + 176), v16);
    sub_23B9E0AE8(v14, v18, v16, *(_QWORD *)(v17 + 120));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  *(_QWORD *)(v0 + 232) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v20 = v0;
    v20[1] = sub_23B9E054C;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23B9E054C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9E05B0()
{
  uint64_t v0;
  _QWORD *v2;

  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v2 = v0;
    v2[1] = sub_23B9E054C;
    return sub_23BB8AAB4();
  }
}

void sub_23B9E0680()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[31];
  v2 = v0[27];
  v10 = v0[28];
  v3 = v0[25];
  v4 = v0[26];
  v6 = v0[18];
  v5 = v0[19];
  v7 = v0[14];
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v1;
  v0[2] = v3;
  v9 = *(_QWORD *)(v6 + 120);
  v0[3] = v2;
  v0[4] = v5;
  v0[5] = v4;
  v0[6] = v10;
  v0[7] = v9;
  type metadata accessor for MergeStateMachine.UpstreamThrewAction();
}

uint64_t sub_23B9E0AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v5 = v4;
  v20[1] = a2;
  v9 = *v4;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v9 + 80);
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(v9 + 96);
  *(_QWORD *)(v18 + 56) = a3;
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v9 + 104);
  *(_QWORD *)(v18 + 80) = *(_QWORD *)(v9 + 120);
  *(_QWORD *)(v18 + 88) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(_QWORD *)(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_retain();
  sub_23B9DA570((uint64_t)v15, (uint64_t)&unk_256A5B830, v18);
  return sub_23B9907F8((uint64_t)v15);
}

void sub_23B9E0C70()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_23B9E0CD0()
{
  sub_23B9DE0D8();
}

uint64_t sub_23B9E0CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t result;

  result = swift_endAccess();
  *v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return result;
}

void sub_23B9E0D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v8 = *(_QWORD **)a5;
  v9 = *(_QWORD *)(*(_QWORD *)a5 + 80);
  v7[26] = v9;
  v10 = v8[11];
  v7[27] = v10;
  v11 = v8[12];
  v7[28] = v11;
  v12 = v8[13];
  v7[29] = v12;
  v13 = v8[14];
  v7[30] = v13;
  v14 = v8[15];
  v7[10] = v9;
  v7[31] = v14;
  v7[11] = v10;
  v7[12] = v11;
  v7[13] = v12;
  v7[14] = v13;
  v7[15] = v14;
  type metadata accessor for MergeStateMachine.ElementProducedAction();
}

uint64_t sub_23B9E0D98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  v2[32] = a1;
  v2[33] = *(_QWORD *)(a1 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[36] = AssociatedTypeWitness;
  v4 = sub_23BB8ACA0();
  v2[37] = v4;
  v2[38] = *(_QWORD *)(v4 - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = *(_QWORD *)(v1 - 8);
  v2[45] = swift_task_alloc();
  v5 = swift_getAssociatedTypeWitness();
  v2[46] = v5;
  v2[47] = *(_QWORD *)(v5 - 8);
  v2[48] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9E0EDC()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[44] + 16))(v0[45], v0[22], v0[24]);
  sub_23BB8AAD8();
  return swift_task_switch();
}

void sub_23B9E0F4C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23B9E0FB0;
  swift_continuation_init();
  sub_23B9E1800();
}

uint64_t sub_23B9E0F98()
{
  return swift_continuation_await();
}

uint64_t sub_23B9E0FB0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[49] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v4 = (_QWORD *)swift_task_alloc();
    v1[50] = v4;
    *v4 = v1;
    v4[1] = sub_23B9E1088;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23B9E1088()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9E10EC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9E1198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 288);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 184);
    v13 = *(_OWORD *)(v0 + 224);
    v14 = *(_OWORD *)(v0 + 208);
    v10 = *(_OWORD *)(v0 + 192);
    v11 = *(_OWORD *)(v0 + 240);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(v1, *(_QWORD *)(v0 + 296));
    v5 = swift_task_alloc();
    *(_OWORD *)(v5 + 16) = v10;
    *(_QWORD *)(v5 + 32) = v4;
    *(_OWORD *)(v0 + 128) = v14;
    *(_OWORD *)(v0 + 144) = v13;
    *(_OWORD *)(v0 + 160) = v11;
    type metadata accessor for MergeStateMachine.UpstreamFinishedAction();
  }
  v6 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 184);
  v12 = *(_OWORD *)(v0 + 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v1, v3);
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  v9 = swift_task_alloc();
  *(_OWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v6;
  os_unfair_lock_lock(v8);
  sub_23B9E19AC();
}

uint64_t sub_23B9E1754()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9E1800()
{
  type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction();
}

void sub_23B9E184C()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
  sub_23B9E190C();
}

void sub_23B9E1870(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  os_unfair_lock_s *v24;
  uint64_t *v25;
  unint64_t v26;

  os_unfair_lock_unlock(v24);
  if (v26 >> 62)
  {
    if (v26 >> 62 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
      swift_allocError();
      *v25 = v26 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
}

void sub_23B9E190C()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_23B9E196C()
{
  sub_23B9DD850();
}

uint64_t sub_23B9E197C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_endAccess();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

void sub_23B9E19AC()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

void sub_23B9E1A0C()
{
  sub_23B9DDA74();
}

uint64_t sub_23B9E1A20()
{
  return swift_endAccess();
}

void sub_23B9E1A44()
{
  swift_beginAccess();
  type metadata accessor for MergeStateMachine();
}

uint64_t sub_23B9E1AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t result;

  result = swift_endAccess();
  *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

void sub_23B9E1ADC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for MergeStorage();
}

void sub_23B9E1B5C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 56))(v1, 1, 1, v0);
  swift_allocObject();
  sub_23B9E4B40();
}

void sub_23B9E1BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  sub_23B9E1BE4();
}

void sub_23B9E1BE4()
{
  type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass();
}

uint64_t sub_23B9E1C14()
{
  uint64_t v0;
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  return result;
}

void sub_23B9E1C34()
{
  sub_23B9E1ADC();
}

uint64_t sub_23B9E1C50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2, v1);
  *v3 = a1;
  return result;
}

uint64_t sub_23B9E1C7C(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

void sub_23B9E1CAC()
{
  sub_23B9E1CB8((void (*)(void))sub_23B9DED64);
}

void sub_23B9E1CB8(void (*a1)(void))
{
  a1();
  JUMPOUT(0x23B9E1CD0);
}

uint64_t sub_23B9E1CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B9E1D08()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = *(_QWORD **)(v0[3] + 16);
  v2 = (_QWORD *)swift_task_alloc();
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_23B9E1D78;
  v2[2] = v0[2];
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23B9E1D78()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B9E1DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23B9E1DD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = **(_QWORD **)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_23BA070B0;
  v2[2] = *(_QWORD *)(v0 + 16);
  v2[3] = v1;
  return swift_task_switch();
}

uint64_t sub_23B9E1E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B990D68;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_23B9E1EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(_QWORD, _QWORD *)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, _QWORD *);
  _QWORD v27[4];

  v26 = a7;
  v14 = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1, a1);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v15, v20);
  v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, a4);
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a8, v22, a3);
  v27[0] = a3;
  v27[1] = a4;
  v27[2] = a5;
  v27[3] = a6;
  v23 = v26(0, v27);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a8 + *(int *)(v23 + 52), v17, a4);
}

void sub_23B9E1FBC(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  type metadata accessor for AsyncChain2Sequence.Iterator();
}

uint64_t sub_23B9E204C(uint64_t a1)
{
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v5 = v2 + *(int *)(a1 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v8(v5, 1, 1, AssociatedTypeWitness);
  v9 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v2, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v12, v4);
  v1(v2, 0, 1, v4);
  v10 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v13, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v8)(v5, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_23B9E213C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(_QWORD *)(a2 + 32);
  v3[6] = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v5 = sub_23BB8ACA0();
  v3[8] = v5;
  v3[9] = *(_QWORD *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9E21F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 104) = AssociatedTypeWitness;
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v0 + 112) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, AssociatedTypeWitness))
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 56));
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    v8 = sub_23BB8ACA0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
    v9 = v6 + *(int *)(v7 + 52);
    v10 = swift_getAssociatedTypeWitness();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 56));
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    swift_getAssociatedConformanceWitness();
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v13;
    *v13 = v0;
    v13[1] = sub_23B9E2658;
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v12;
    *v12 = v0;
    v12[1] = sub_23B9E2420;
  }
  return sub_23BB8A9C4();
}

uint64_t sub_23B9E2420()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9E2484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    v8 = sub_23BB8ACA0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v10 = 1;
    v9(v6, 1, 1, v4);
    v11 = v6 + *(int *)(v7 + 52);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v11, 1, AssociatedTypeWitness))
    {
      swift_getAssociatedConformanceWitness();
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 136) = v13;
      *v13 = v0;
      v13[1] = sub_23B9E2658;
      return sub_23BB8A9C4();
    }
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 96);
    v16 = *(_QWORD *)(v0 + 16);
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v17(v15, v1, v3);
    v17(v16, v15, v3);
    v10 = 0;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 16), v10, 1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9E2658()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23B9E26DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  v6 = v3 + *(int *)(v4 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9E27E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  v6 = v3 + *(int *)(v4 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9E28F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B97C964;
  return sub_23B9E213C(a1, a2);
}

uint64_t sub_23B9E2954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;

  v4[2] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[3] = AssociatedTypeWitness;
  v4[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[5] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_23B9E2A2C;
  return sub_23BB8A9DC();
}

uint64_t sub_23B9E2A2C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  v2 = (_QWORD *)*v1;
  v3 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[4] + 32))(v2[2], v2[5], v2[3]);
  swift_task_dealloc();
  return ((uint64_t (*)(void))v3[1])();
}

void sub_23B9E2AA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a3;
  v4 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18 = v20;
  v17(v14, v20, v10);
  sub_23BB8AAD8();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v6, v18 + *(int *)(a1 + 52), v4);
  sub_23BB8AAD8();
  sub_23B9E1FBC(v22);
}

void sub_23B9E2C60(uint64_t a1, uint64_t a2)
{
  sub_23B9E38E0(a1, a2, (void (*)(void))sub_23B9E2AA4);
}

uint64_t sub_23B9E2C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v11 = *(_QWORD *)(a4 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(a6, 1, 1);
  v14 = (int *)type metadata accessor for AsyncTimerSequence.Iterator(0, a4, a5, v13);
  v15 = a6 + v14[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v15, 1, 1, AssociatedTypeWitness);
  v17 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a6, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a6, a3, a4);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v12)(a6, 0, 1, a4);
  v18 = a6 + v14[9];
  v19 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a1, v19);
  v20 = a6 + v14[10];
  v21 = sub_23BB8ACA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
}

uint64_t sub_23B9E2DE8@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  double v43;
  double v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t result;
  double v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t AssociatedConformanceWitness;
  char *v64;
  char *v65;

  v60 = a2;
  v65 = a1;
  v3 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v58 = AssociatedTypeWitness;
  v6 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v5);
  v56 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v59 = (char *)&v54 - v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  v55 = (char *)&v54 - v12;
  v13 = swift_getAssociatedTypeWitness();
  v14 = sub_23BB8ACA0();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v54 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v64 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v26 = (char *)&v54 - v25;
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v30 = (char *)&v54 - v29;
  MEMORY[0x24BDAC7A8](v28, v31);
  v33 = (char *)&v54 - v32;
  v62 = v3;
  AssociatedConformanceWitness = v2;
  v35 = v34;
  sub_23BB8B1EC();
  v36 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v19, v61 + *((int *)v65 + 11), v14);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v26, v33, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v19, 1, v13) == 1)
  {
    v37 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v37(v30, v26, v13);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v13);
    v37 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v37(v30, v19, v13);
  }
  v38 = v36 + *((int *)v65 + 9);
  swift_getAssociatedConformanceWitness();
  v39 = v64;
  sub_23BB8AF28();
  if ((sub_23BB8A73C() & 1) == 0)
  {
    v53 = *(void (**)(char *, uint64_t))(v35 + 8);
    v53(v30, v13);
    v53(v33, v13);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v37)(v60, v39, v13);
  }
  v65 = v30;
  v41 = v57;
  v40 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v59, v38, v58);
  v42 = v56;
  sub_23BB8AF34();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_23BB8AFA0();
  v44 = v43;
  v45 = *(uint64_t (**)(char *, uint64_t))(v41 + 8);
  result = v45(v42, v40);
  v47 = ceil(v44);
  if ((~*(_QWORD *)&v47 & 0x7FF0000000000000) != 0)
  {
    if (v47 > -9.22337204e18)
    {
      if (v47 < 9.22337204e18)
      {
        v48 = v39;
        v49 = v55;
        v50 = v59;
        sub_23BB8AFAC();
        v45(v50, v40);
        v51 = v65;
        sub_23BB8AF28();
        v45(v49, v40);
        v52 = *(void (**)(char *, uint64_t))(v35 + 8);
        v52(v48, v13);
        v52(v51, v13);
        return ((uint64_t (*)(char *, uint64_t))v52)(v33, v13);
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23B9E3248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v3[6] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[7] = AssociatedTypeWitness;
  v3[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[9] = swift_task_alloc();
  v6 = sub_23BB8ACA0();
  v3[10] = v6;
  v3[11] = *(_QWORD *)(v6 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9E331C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(v1, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 80));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v4 + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(char **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 48));
    sub_23B9E2DE8(v7, v6);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v8;
    *v8 = v0;
    v8[1] = sub_23B9E3458;
    return sub_23BB8B1F8();
  }
}

uint64_t sub_23B9E3458()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9E34BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 24);
  sub_23BB8B1EC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  v9 = v7 + *(int *)(v8 + 44);
  v10 = sub_23BB8ACA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v3, v5);
  v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v11(v9, 0, 1, v5);
  v11(*(_QWORD *)(v0 + 16), 0, 1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9E35B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v7);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v7);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v6 + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9E3690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23BA070B4;
  return sub_23B9E3248(a1, a2);
}

uint64_t sub_23B9E36F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23BA070AC;
  return sub_23BB8A9DC();
}

uint64_t sub_23B9E3774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v24 = a3;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v8 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_23BB8ACA0();
  v13 = *(_QWORD *)(v12 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v23 - v16;
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v23 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v23 - v19, v4 + *(int *)(a1 + 36), AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, v4 + *(int *)(a1 + 40), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v4, v6);
  return sub_23B9E2C6C((uint64_t)v20, (uint64_t)v17, (uint64_t)v10, v6, v23, v24);
}

void sub_23B9E38D4(uint64_t a1, uint64_t a2)
{
  sub_23B9E38E0(a1, a2, (void (*)(void))sub_23B9E3774);
}

void sub_23B9E38E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  JUMPOUT(0x23B9E38F4);
}

void sub_23B9E3910(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[16] = a1;
  v3[17] = v2;
  v5 = a2[3];
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 - 8);
  v3[20] = swift_task_alloc();
  v6 = a2[5];
  v3[21] = v6;
  v7 = a2[2];
  v3[22] = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[23] = AssociatedTypeWitness;
  v3[24] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v9 = a2[4];
  v3[27] = v9;
  v10 = a2[6];
  v3[28] = v10;
  v11 = a2[7];
  v3[2] = v7;
  v3[29] = v11;
  v3[3] = v5;
  v3[4] = v9;
  v3[5] = v6;
  v3[6] = v10;
  v3[7] = v11;
  type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
}

uint64_t sub_23B9E39EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v1[30] = a1;
  v3 = sub_23BB8ACA0();
  v1[31] = v3;
  v1[32] = *(_QWORD *)(v3 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = *(_QWORD *)(a1 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v4 = sub_23BB8ACA0();
  v1[37] = v4;
  v1[38] = *(_QWORD *)(v4 - 8);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23B9E3AC8()
{
  uint64_t v0;
  char v1;
  void (*v2)(_QWORD, uint64_t, uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_BYTE *)(*(_QWORD *)(v0 + 136) + 24);
  v2 = *(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 152) + 56);
  *(_QWORD *)(v0 + 344) = v2;
  if ((v1 & 1) == 0)
  {
    v2(*(_QWORD *)(v0 + 336), 1, 1, *(_QWORD *)(v0 + 144));
    *(_QWORD *)(v0 + 352) = swift_task_alloc();
    v4 = sub_23BB8AF88();
    v5 = sub_23BB8A97C();
    v6 = MEMORY[0x24260D8DC](MEMORY[0x24BEE12C8], v5);
    v8 = type metadata accessor for AsyncSyncSequence(255, v5, v6, v7);
    v9 = MEMORY[0x24260D8DC](MEMORY[0x24BEE6F08], v4);
    v10 = MEMORY[0x24260D8DC](&unk_23BB8EE48, v8);
    *(_QWORD *)(v0 + 64) = v4;
    *(_QWORD *)(v0 + 72) = v8;
    *(_QWORD *)(v0 + 80) = v9;
    *(_QWORD *)(v0 + 88) = v10;
    type metadata accessor for AsyncChain2Sequence();
  }
  v2(*(_QWORD *)(v0 + 128), 1, 1, *(_QWORD *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9E3C68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23BB8AF88();
  v5 = MEMORY[0x24260D8DC](&unk_23BB8E924, a1);
  v6 = MEMORY[0x24260D8DC](v2, v4);
  v1[12] = a1;
  v1[13] = v4;
  v1[14] = v5;
  v1[15] = v6;
  type metadata accessor for AsyncMerge2Sequence.Iterator();
}

uint64_t sub_23B9E3CBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = v1;
  v0[1] = sub_23B9E3D08;
  v0[2] = *(_QWORD *)(v1 + 264);
  v0[3] = v2 + 16;
  return swift_task_switch();
}

uint64_t sub_23B9E3D08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23B9E3D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 336);
    v5 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 304);
    v7 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(v1, *(_QWORD *)(v0 + 248));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v4, v5);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD *)(v0 + 280);
  v8 = *(_QWORD *)(v0 + 288);
  v10 = *(_QWORD *)(v0 + 184);
  v11 = *(_QWORD *)(v0 + 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v8, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v3);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10);
  if (v12)
  {
    if (v12 == 1)
    {
      v13 = *(_QWORD *)(v0 + 336);
      v14 = *(_QWORD *)(v0 + 296);
      v15 = *(_QWORD *)(v0 + 304);
      v16 = *(_QWORD *)(v0 + 128);
      v17 = *(_QWORD *)(v0 + 136);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
      *(_BYTE *)(v17 + 24) = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v13, v14);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      goto LABEL_18;
    }
    v42 = *(_QWORD *)(v0 + 336);
    v44 = *(_QWORD *)(v0 + 304);
    v43 = *(_QWORD *)(v0 + 312);
    v45 = *(_QWORD *)(v0 + 296);
    v46 = *(_QWORD *)(v0 + 144);
    v47 = *(_QWORD *)(v0 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
    v48(v43, v42, v45);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v43, 1, v46) != 1)
    {
      v49 = *(_QWORD *)(v0 + 336);
      v50 = *(_QWORD *)(v0 + 296);
      v51 = *(_QWORD *)(v0 + 128);
      v52 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
      v52(*(_QWORD *)(v0 + 312), v50);
      v48(v51, v49, v50);
      v52(v49, v50);
      goto LABEL_18;
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
LABEL_19:
    *(_QWORD *)(v0 + 352) = swift_task_alloc();
    v65 = sub_23BB8AF88();
    v66 = sub_23BB8A97C();
    v67 = MEMORY[0x24260D8DC](MEMORY[0x24BEE12C8], v66);
    v69 = type metadata accessor for AsyncSyncSequence(255, v66, v67, v68);
    v70 = MEMORY[0x24260D8DC](MEMORY[0x24BEE6F08], v65);
    v71 = MEMORY[0x24260D8DC](&unk_23BB8EE48, v69);
    *(_QWORD *)(v0 + 64) = v65;
    *(_QWORD *)(v0 + 72) = v69;
    *(_QWORD *)(v0 + 80) = v70;
    *(_QWORD *)(v0 + 88) = v71;
    type metadata accessor for AsyncChain2Sequence();
  }
  v18 = *(_QWORD *)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  v22 = *(_QWORD *)(v0 + 144);
  v23 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 184));
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v24(v18, v19, v20);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v19) = v25(v18, 1, v22);
  v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v26(v18, v20);
  if ((_DWORD)v19 == 1)
  {
    v27 = *(_QWORD *)(v0 + 336);
    v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 344);
    v29 = *(_QWORD *)(v0 + 320);
    v30 = *(_QWORD *)(v0 + 296);
    v31 = *(_QWORD *)(v0 + 304);
    v32 = *(_QWORD *)(v0 + 144);
    sub_23BB8ABA4();
    v28(v29, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))(v27, v29, v30);
  }
  v33 = *(_QWORD *)(v0 + 336);
  v34 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 16))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
  result = v25(v33, 1, v34);
  if ((_DWORD)result != 1)
  {
    v36 = *(_QWORD *)(v0 + 336);
    v37 = *(_QWORD *)(v0 + 144);
    sub_23BB8AB98();
    if (v25(v36, 1, v37))
    {
      v38 = *(_QWORD *)(v0 + 288);
      v39 = *(_QWORD *)(v0 + 272);
      v40 = *(_QWORD *)(v0 + 240);
      v41 = *(_QWORD *)(v0 + 136);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      if ((*(_BYTE *)(v41 + 8) & 1) == 0)
        goto LABEL_19;
    }
    else
    {
      v74 = *(_QWORD *)(v0 + 288);
      v75 = v24;
      v72 = *(_QWORD *)(v0 + 272);
      v73 = *(_QWORD *)(v0 + 240);
      v53 = *(_QWORD *)(v0 + 208);
      v55 = *(_QWORD *)(v0 + 184);
      v54 = *(_QWORD *)(v0 + 192);
      v56 = v26;
      v58 = *(_QWORD *)(v0 + 152);
      v57 = *(_QWORD *)(v0 + 160);
      v59 = *(_QWORD *)(v0 + 136);
      v60 = *(_QWORD *)(v0 + 144);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 16))(v57, *(_QWORD *)(v0 + 336), v60);
      v61 = sub_23BB8AB68();
      v62 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v26 = v56;
      v62(v57, v60);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v55);
      v24 = v75;
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v73);
      if ((*(_BYTE *)(v59 + 8) & 1) != 0 || v61 != **(_QWORD **)(v0 + 136))
        goto LABEL_19;
    }
    v63 = *(_QWORD *)(v0 + 336);
    v64 = *(_QWORD *)(v0 + 296);
    v24(*(_QWORD *)(v0 + 128), v63, v64);
    v26(v63, v64);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B9E4310()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 296));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9E43D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B990D68;
  sub_23B9E3910(a1, a2);
}

void sub_23B9E4438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[21];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 32);
  v9[17] = *(_QWORD *)(v2 - 8);
  v3 = (_QWORD *)MEMORY[0x24BDAC7A8](a1, a2);
  v9[16] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[12] = v3;
  v5 = v3[2];
  v7 = v3[5];
  v6 = v3[6];
  v10 = v3[3];
  v11 = v6;
  v8 = v3[7];
  v12 = v5;
  v13 = v10;
  v14 = v2;
  v15 = v7;
  v16 = v6;
  v17 = v8;
  v9[20] = v8;
  type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either();
}

void sub_23B9E44C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = sub_23BB8AF88();
  *(_QWORD *)(v9 - 208) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 - 200) = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  *(_QWORD *)(v9 - 232) = (char *)&a9 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v15 = sub_23BB8AF88();
  *(_QWORD *)(v9 - 248) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  *(_QWORD *)(v9 - 344) = (char *)&a9 - v17;
  v18 = sub_23BB8A97C();
  *(_QWORD *)(v9 - 296) = v18;
  v19 = MEMORY[0x24260D8DC](MEMORY[0x24BEE12C8], v18);
  v21 = type metadata accessor for AsyncSyncSequence(255, v18, v19, v20);
  *(_QWORD *)(v9 - 304) = v21;
  v22 = MEMORY[0x24260D8DC](MEMORY[0x24BEE6F08], v15);
  *(_QWORD *)(v9 - 312) = v22;
  v23 = MEMORY[0x24260D8DC](&unk_23BB8EE48, v21);
  *(_QWORD *)(v9 - 320) = v23;
  *(_QWORD *)(v9 - 144) = v15;
  *(_QWORD *)(v9 - 136) = v21;
  *(_QWORD *)(v9 - 128) = v22;
  *(_QWORD *)(v9 - 120) = v23;
  type metadata accessor for AsyncChain2Sequence();
}

void sub_23B9E4614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v10 - 240) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)(v10 - 336) = (char *)&a9 - v12;
  v13 = MEMORY[0x24260D8DC](&unk_23BB8E924, a1);
  *(_QWORD *)(v10 - 280) = v13;
  v14 = v9;
  v15 = *(_QWORD *)(v10 - 200);
  v16 = MEMORY[0x24260D8DC](v14, v15);
  *(_QWORD *)(v10 - 288) = v16;
  *(_QWORD *)(v10 - 144) = a1;
  *(_QWORD *)(v10 - 136) = v15;
  *(_QWORD *)(v10 - 128) = v13;
  *(_QWORD *)(v10 - 120) = v16;
  type metadata accessor for AsyncMerge2Sequence();
}

void sub_23B9E4694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)(v16 - 272) = a1;
  *(_QWORD *)(v16 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)(v16 - 328) = (char *)&a9 - v17;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v9, *(_QWORD *)(v16 - 168), v14);
  v18 = (_QWORD *)swift_allocObject();
  v19 = *(_QWORD *)(v16 - 184);
  v18[2] = v14;
  v18[3] = v19;
  v18[4] = v10;
  v18[5] = v13;
  v20 = v13;
  v21 = *(_QWORD *)(v16 - 192);
  v18[6] = *(_QWORD *)(v16 - 176);
  v18[7] = v21;
  v22 = *(_QWORD *)(v16 - 344);
  *(_QWORD *)(v16 - 352) = v20;
  sub_23BB8AAE4();
  swift_release();
  sub_23BB8B15C();
  swift_allocObject();
  v23 = sub_23BB8A910();
  v25 = v24;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v25, 1, 2, AssociatedTypeWitness);
  *(_QWORD *)(v16 - 152) = sub_23BB78BA8(v23);
  sub_23B9DCC5C(*(_QWORD *)(v16 - 296), v16 - 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 - 152) = *(_QWORD *)(v16 - 144);
  v27 = *(_QWORD *)(v16 - 336);
  sub_23B9E1EA0(v22, v16 - 152, v15, *(_QWORD *)(v16 - 304), *(_QWORD *)(v16 - 312), *(_QWORD *)(v16 - 320), (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for AsyncChain2Sequence, v27);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 248) + 8))(v22, v15);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v16 - 216) + 16))(*(_QWORD *)(v16 - 224), *(_QWORD *)(v16 - 168) + *(int *)(*(_QWORD *)(v16 - 256) + 68), v10);
  v28 = (_QWORD *)swift_allocObject();
  v29 = *(_QWORD *)(v16 - 192);
  v30 = *(_QWORD *)(v16 - 184);
  v28[2] = v14;
  v28[3] = v30;
  v31 = *(_QWORD *)(v16 - 352);
  v28[4] = v10;
  v28[5] = v31;
  v28[6] = *(_QWORD *)(v16 - 176);
  v28[7] = v29;
  v32 = *(_QWORD *)(v16 - 232);
  sub_23BB8AAE4();
  swift_release();
  v33 = *(_QWORD *)(v16 - 200);
  sub_23B9E1EA0(v27, v32, v11, v33, *(_QWORD *)(v16 - 280), *(_QWORD *)(v16 - 288), (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for AsyncMerge2Sequence, *(_QWORD *)(v16 - 328));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 208) + 8))(v32, v33);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 240) + 8))(v27, v11);
  sub_23B9E1ADC();
}

uint64_t sub_23B9E4954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 264) + 8))(v0, v1);
  return *(_QWORD *)(v3 + *(int *)(v2 + 72));
}

uint64_t sub_23B9E49A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a3;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_23B9E49C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, AssociatedTypeWitness);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v1, 0, 2, AssociatedTypeWitness);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23B9E4A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a3;
  v6[4] = a6;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B9E4A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = *(_QWORD *)(v0 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v1, 2, 2, AssociatedTypeWitness);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23B9E4AC8(uint64_t a1, uint64_t a2)
{
  sub_23B9E4438(a1, a2);
}

uint64_t sub_23B9E4AEC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  *(_QWORD *)(v6 + 16) = a3;
  *(_BYTE *)(v6 + 24) = a4 & 1;
  return result;
}

void sub_23B9E4B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23BB8ACA0();
  v1 = MEMORY[0x24BDAC7A8](v5, v0);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  MEMORY[0x24BDAC7A8](v3, v4);
  type metadata accessor for MergeStateMachine();
}

char *sub_23B9E4C38(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _DWORD *v14;
  uint64_t v16;

  *(_QWORD *)(v10 - 208) = a1;
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v13 = (char *)&v16 - v12;
  v14 = (_DWORD *)swift_slowAlloc();
  *v14 = 0;
  *((_QWORD *)v2 + 2) = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 16))(v7, *(_QWORD *)(v10 - 160), v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 176) + 16))(v8, *(_QWORD *)(v10 - 144), v5);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v10 - 168) + 16))(v3, *(_QWORD *)(v10 - 136), *(_QWORD *)(v10 - 152));
  sub_23B9DD274(v7, v8, v3, v9, v5, *(_QWORD *)(v10 - 184), *(_QWORD *)(v10 - 192), *(_QWORD *)(v10 - 200), (uint64_t)v13, v4, (void (*)(_QWORD, uint64_t *))type metadata accessor for MergeStateMachine.State, (uint64_t (*)(_QWORD, uint64_t *))type metadata accessor for MergeStateMachine);
  (*(void (**)(char *, char *, _QWORD))(v11 + 32))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 136)], v13, *(_QWORD *)(v10 - 208));
  return v2;
}

uint64_t sub_23B9E4D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ManagedCriticalState.LockedBuffer(0, a2, a3, a4);
  return sub_23BB8AE74();
}

void sub_23B9E4D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23BB8ACA0();
  v1 = MEMORY[0x24BDAC7A8](v5, v0);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  MEMORY[0x24BDAC7A8](v3, v4);
  type metadata accessor for CombineLatestStateMachine();
}

uint64_t sub_23B9E4E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v13 = (char *)&v18 - v12;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v3, *(_QWORD *)(v9 - 168), v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 184) + 16))(v7, *(_QWORD *)(v9 - 152), v6);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v9 - 176) + 16))(v2, *(_QWORD *)(v9 - 144), *(_QWORD *)(v9 - 160));
  sub_23B9DD274(v3, v7, v2, v8, v6, *(_QWORD *)(v9 - 192), *(_QWORD *)(v9 - 200), *(_QWORD *)(v9 - 208), (uint64_t)v13, v5, (void (*)(_QWORD, uint64_t *))type metadata accessor for CombineLatestStateMachine.State, (uint64_t (*)(_QWORD, uint64_t *))type metadata accessor for CombineLatestStateMachine);
  v16 = sub_23B9E4D40((uint64_t)v13, a1, v14, v15);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
  result = *(_QWORD *)(v9 - 136);
  *(_QWORD *)(result + 16) = v16;
  return result;
}

void sub_23B9E4F90()
{
  JUMPOUT(0x24260D8DCLL);
}

uint64_t sub_23B9E4FA0()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for AsyncCombineLatest2Sequence()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for AsyncCombineLatest2Sequence.Iterator()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for AsyncCombineLatest2Sequence.Iterator.InternalClass()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9E4FF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23B9E503C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ManagedCriticalState.LockedBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState.LockedBuffer);
}

void sub_23B9E5088()
{
  type metadata accessor for MergeStateMachine();
}

void type metadata accessor for MergeStorage()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for MergeStateMachine()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9E5130()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for AsyncMerge2Sequence.Iterator.InternalClass()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t getEnumTagSinglePayload for Lock(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Lock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lock()
{
  return &type metadata for Lock;
}

uint64_t sub_23B9E5210()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23B9E5218(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_23B9E95E4(a1, a2, a3, (void (*)(uint64_t, _OWORD *))type metadata accessor for MergeStateMachine.State);
}

_QWORD *sub_23B9E5224(char *__dst, char *__src, _QWORD *a3)
{
  char *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  void *v29;
  id v30;
  unsigned int v31;
  char v32;
  uint64_t v33;
  int v34;
  unsigned int v35;
  uint64_t v36;
  BOOL v37;
  size_t __n;
  char *v40;
  uint64_t v41;

  v3 = __src;
  v4 = __dst;
  v5 = a3[3];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(a3[4] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  if (*(_DWORD *)(v11 + 84))
    v13 = *(_QWORD *)(v11 + 64);
  else
    v13 = *(_QWORD *)(v11 + 64) + 1;
  if (v13 + ((v10 + v12 + (v9 & ~v8)) & (unint64_t)~v12) <= 0x28)
    v14 = 40;
  else
    v14 = v13 + ((v10 + v12 + (v9 & ~v8)) & ~v12);
  if (v14 > 3)
    goto LABEL_11;
  v15 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  v16 = 2;
  if (v15 > 0xFFFC)
    v16 = 4;
  if (v15 <= 0xFC)
LABEL_11:
    v16 = 1;
  v17 = *(_DWORD *)(v7 + 80) | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v11 + 80);
  if (((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18 && (v17 & 0x1000F8) == 0)
  {
    if (v14 <= 3)
    {
      v20 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v20 > 0xFFFC)
      {
        v21 = *(_DWORD *)&__src[v14];
        if (v21 < 3)
        {
LABEL_29:
          if (v21 != 2)
          {
            if (v21 != 1)
            {
              __n = v13;
              v23 = ~v8;
              v41 = a3[4];
              (*(void (**)(char *, char *))(v6 + 16))(__dst, __src);
              v24 = v3;
              v25 = ((unint64_t)v4 + v9) & v23;
              v40 = v24;
              v26 = (unint64_t)&v24[v9] & v23;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v25, v26, v5);
              v27 = (void *)((v25 + v10 + v12) & ~v12);
              v28 = (const void *)((v26 + v10 + v12) & ~v12);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v28, 1, v41))
              {
                memcpy(v27, v28, __n);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v27, v28, v41);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v41);
              }
              v3 = v40;
              if (v14 > 3)
              {
LABEL_45:
                *((_BYTE *)v4 + v14) = 0;
                if (v14 <= 3)
                {
LABEL_46:
                  v35 = ((1 << (8 * v14)) + 1) >> (8 * v14);
                  v36 = 2;
                  if (v35 > 0xFFFC)
                    v36 = 4;
                  if (v35 > 0xFC)
                    goto LABEL_60;
                }
LABEL_49:
                v36 = 1;
LABEL_60:
                *(_QWORD *)(((unint64_t)v4 + v36 + v14 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&v3[v36 + 7 + v14] & 0xFFFFFFFFFFFFF8);
                return v4;
              }
              v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
              if (v31 > 0xFFFC)
              {
                *(_DWORD *)((char *)v4 + v14) = 0;
              }
              else
              {
                if (v31 <= 0xFC)
                  goto LABEL_45;
                *(_WORD *)((char *)v4 + v14) = 0;
              }
LABEL_58:
              v37 = v31 > 0xFFFC;
              v36 = 2;
              if (v37)
                v36 = 4;
              goto LABEL_60;
            }
            v33 = *((_QWORD *)__src + 1);
            *(_QWORD *)__dst = *(_QWORD *)__src;
            *((_QWORD *)__dst + 1) = v33;
            *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
            *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            if (v14 > 3)
              goto LABEL_40;
            v34 = 1;
            v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
            if (v31 <= 0xFFFC)
            {
              if (v31 <= 0xFC)
              {
LABEL_40:
                v32 = 1;
LABEL_41:
                *((_BYTE *)v4 + v14) = v32;
                if (v14 <= 3)
                  goto LABEL_46;
                goto LABEL_49;
              }
LABEL_57:
              *(_WORD *)((char *)v4 + v14) = v34;
              goto LABEL_58;
            }
LABEL_54:
            *(_DWORD *)((char *)v4 + v14) = v34;
            goto LABEL_58;
          }
          v29 = (void *)*((_QWORD *)__src + 1);
          *(_QWORD *)__dst = *(_QWORD *)__src;
          swift_retain();
          v30 = v29;
          v4[1] = v29;
          if (v14 <= 3)
          {
            v31 = ((1 << (8 * v14)) + 1) >> (8 * v14);
            if (v31 > 0xFFFC)
            {
              v34 = 2;
              goto LABEL_54;
            }
            if (v31 > 0xFC)
            {
              LOWORD(v34) = 2;
              goto LABEL_57;
            }
          }
          v32 = 2;
          goto LABEL_41;
        }
LABEL_25:
        if (v14 <= 3)
          v22 = v14;
        else
          v22 = 4;
        __asm { BR              X14 }
      }
      if (v20 > 0xFC)
      {
        v21 = *(unsigned __int16 *)&__src[v14];
        if (v21 < 3)
          goto LABEL_29;
        goto LABEL_25;
      }
    }
    v21 = __src[v14];
    if (v21 < 3)
      goto LABEL_29;
    goto LABEL_25;
  }
  v19 = *(_QWORD *)__src;
  *v4 = *(_QWORD *)__src;
  v4 = (_QWORD *)(v19 + (((v17 & 0xF8 | 7u) + 16) & ~(unint64_t)(v17 & 0xF8 | 7u)));
  swift_retain();
  return v4;
}

char *sub_23B9E56F4(char *__dst, char *__src, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  const void *v21;
  void *v22;
  id v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;
  BOOL v30;
  size_t __n;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)&__src[v13];
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = __src[v13];
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)&__src[v13];
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    v22 = (void *)*((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    swift_retain();
    v23 = v22;
    *((_QWORD *)__dst + 1) = v22;
    if (v13 <= 3)
    {
      v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v24 > 0xFFFC)
      {
        v27 = 2;
        goto LABEL_43;
      }
      if (v24 > 0xFC)
      {
        LOWORD(v27) = 2;
        goto LABEL_46;
      }
    }
    v25 = 2;
    goto LABEL_32;
  }
  if (v15 == 1)
  {
    v26 = *((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    *((_QWORD *)__dst + 1) = v26;
    *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
    *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v13 > 3)
    {
LABEL_31:
      v25 = 1;
LABEL_32:
      __dst[v13] = v25;
      if (v13 <= 3)
        goto LABEL_38;
LABEL_41:
      v29 = 1;
      goto LABEL_50;
    }
    v27 = 1;
    v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v24 <= 0xFFFC)
    {
      if (v24 <= 0xFC)
        goto LABEL_31;
LABEL_46:
      *(_WORD *)&__dst[v13] = v27;
      goto LABEL_48;
    }
LABEL_43:
    *(_DWORD *)&__dst[v13] = v27;
    goto LABEL_48;
  }
  __n = v12;
  v33 = a3[3];
  v17 = ~v7;
  v34 = *(_QWORD *)(v6 + 64);
  v35 = a3[4];
  (*(void (**)(char *, char *))(v5 + 16))(__dst, __src);
  v18 = (unint64_t)&__dst[v8] & v17;
  v19 = (unint64_t)&__src[v8] & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v18, v19, v33);
  v20 = (void *)((v18 + v34 + v11) & ~v11);
  v21 = (const void *)((v19 + v34 + v11) & ~v11);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v21, 1, v35))
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v20, v21, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v35);
    if (v13 > 3)
      goto LABEL_37;
LABEL_35:
    v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v24 > 0xFFFC)
    {
      *(_DWORD *)&__dst[v13] = 0;
    }
    else
    {
      if (v24 <= 0xFC)
        goto LABEL_37;
      *(_WORD *)&__dst[v13] = 0;
    }
LABEL_48:
    v30 = v24 > 0xFFFC;
    v29 = 2;
    if (v30)
      v29 = 4;
    goto LABEL_50;
  }
  memcpy(v20, v21, __n);
  if (v13 <= 3)
    goto LABEL_35;
LABEL_37:
  __dst[v13] = 0;
  if (v13 > 3)
    goto LABEL_41;
LABEL_38:
  v28 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  v29 = 2;
  if (v28 > 0xFFFC)
    v29 = 4;
  if (v28 <= 0xFC)
    goto LABEL_41;
LABEL_50:
  *(_QWORD *)((unint64_t)&__dst[v29 + 7 + v13] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v29 + 7 + v13] & 0xFFFFFFFFFFFFF8);
  return __dst;
}

uint64_t sub_23B9E5B28(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  void *v33;
  id v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  uint64_t v42;
  size_t __n;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  if ((_QWORD *)a1 == a2)
  {
    v20 = *(_QWORD *)(v9 + 64);
    v21 = *(_QWORD *)(a3[4] - 8);
    v14 = *(unsigned __int8 *)(v21 + 80);
    v22 = *(_DWORD *)(v21 + 84);
    v23 = *(_QWORD *)(v21 + 64);
    v24 = (v8 + v10) & ~v10;
    v25 = ~v14;
    goto LABEL_64;
  }
  v46 = v8 + *(unsigned __int8 *)(v9 + 80);
  v12 = a3[4];
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v53 = *(_QWORD *)(v9 + 64);
  if (*(_DWORD *)(v13 + 84))
    v15 = *(_QWORD *)(v13 + 64);
  else
    v15 = *(_QWORD *)(v13 + 64) + 1;
  v11 = v46 & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  if (v15 + ((v53 + v14 + v11) & ~v14) <= 0x28)
    v16 = 40;
  else
    v16 = v15 + ((v53 + v14 + v11) & ~v14);
  v17 = 8 * v16;
  if (v16 > 3)
    goto LABEL_11;
  v18 = ((1 << v17) + 1) >> v17;
  if (v18 <= 0xFFFC)
  {
    if (v18 > 0xFC)
    {
      v19 = *(unsigned __int16 *)(a1 + v16);
      if (v19 < 3)
        goto LABEL_21;
      goto LABEL_17;
    }
LABEL_11:
    v19 = *(unsigned __int8 *)(a1 + v16);
    if (v19 < 3)
      goto LABEL_21;
LABEL_17:
    if (v16 <= 3)
      v26 = v16;
    else
      v26 = 4;
    __asm { BR              X13 }
  }
  v19 = *(_DWORD *)(a1 + v16);
  if (v19 >= 3)
    goto LABEL_17;
LABEL_21:
  v51 = v46 & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v52 = ~v14;
  __n = v15;
  v45 = ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v50 = *(_DWORD *)(v13 + 84);
  v48 = v12;
  v49 = *(_QWORD *)(v13 + 64);
  v47 = v5;
  if (v19 == 2)
  {
    swift_release();

  }
  else
  {
    if (v19 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v16 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))((v46 + a1) & v45, v47);
    v27 = (((v46 + a1) & v45) + v53 + v14) & v52;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v27, 1, v48))
    {
      (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v27, v48);
      if (v16 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
  }
  if (v16 > 3)
    goto LABEL_32;
LABEL_30:
  v28 = ((1 << v17) + 1) >> v17;
  if (v28 <= 0xFFFC)
  {
    if (v28 > 0xFC)
    {
      v29 = *(unsigned __int16 *)((char *)a2 + v16);
      if (v29 < 3)
        goto LABEL_41;
      goto LABEL_37;
    }
LABEL_32:
    v29 = *((unsigned __int8 *)a2 + v16);
    if (v29 < 3)
      goto LABEL_41;
LABEL_37:
    if (v16 <= 3)
      v30 = v16;
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  v29 = *(_DWORD *)((char *)a2 + v16);
  if (v29 >= 3)
    goto LABEL_37;
LABEL_41:
  if (v29 == 2)
  {
    *(_QWORD *)a1 = *a2;
    v33 = (void *)a2[1];
    swift_retain();
    v34 = v33;
    *(_QWORD *)(a1 + 8) = v33;
    v25 = ~v14;
    v20 = v53;
    v24 = v51;
    v22 = v50;
    v23 = v49;
    if (v16 <= 3)
    {
      v35 = ((1 << v17) + 1) >> v17;
      if (v35 > 0xFFFC)
      {
        v36 = 2;
        goto LABEL_60;
      }
      if (v35 > 0xFC)
      {
        LOWORD(v36) = 2;
        goto LABEL_63;
      }
    }
    *(_BYTE *)(a1 + v16) = 2;
    goto LABEL_64;
  }
  if (v29 == 1)
  {
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v25 = ~v14;
    v20 = v53;
    v24 = v51;
    v22 = v50;
    v23 = v49;
    if (v16 > 3)
    {
LABEL_52:
      *(_BYTE *)(a1 + v16) = 1;
      goto LABEL_64;
    }
    v36 = 1;
    v37 = ((1 << v17) + 1) >> v17;
    if (v37 <= 0xFFFC)
    {
      if (v37 <= 0xFC)
        goto LABEL_52;
LABEL_63:
      *(_WORD *)(a1 + v16) = v36;
      goto LABEL_64;
    }
LABEL_60:
    *(_DWORD *)(a1 + v16) = v36;
    goto LABEL_64;
  }
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((v46 + a1) & v45, ((unint64_t)a2 + v46) & v45, v47);
  v25 = ~v14;
  v20 = v53;
  v31 = (void *)((((v46 + a1) & v45) + v53 + v14) & v52);
  v32 = (const void *)(((((unint64_t)a2 + v46) & v45) + v53 + v14) & v52);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v32, 1, v48))
  {
    memcpy(v31, v32, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v31, v32, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v31, 0, 1, v48);
  }
  v24 = v51;
  v22 = v50;
  v23 = v49;
  if (v16 > 3)
    goto LABEL_55;
  v38 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  if (v38 > 0xFFFC)
  {
    *(_DWORD *)(a1 + v16) = 0;
  }
  else
  {
    if (v38 <= 0xFC)
    {
LABEL_55:
      *(_BYTE *)(a1 + v16) = 0;
      goto LABEL_64;
    }
    *(_WORD *)(a1 + v16) = 0;
  }
LABEL_64:
  if (v22)
    v39 = v23;
  else
    v39 = v23 + 1;
  v40 = v39 + ((v24 + v20 + v14) & v25);
  if (v40 <= 0x28)
    v40 = 40;
  if (v40 > 3)
    goto LABEL_73;
  v41 = ((1 << (8 * v40)) + 1) >> (8 * v40);
  v42 = 2;
  if (v41 > 0xFFFC)
    v42 = 4;
  if (v41 <= 0xFC)
LABEL_73:
    v42 = 1;
  *(_QWORD *)((v42 + v40 + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v42 + v40 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_23B9E616C(_OWORD *__dst, _OWORD *__src, _QWORD *a3)
{
  _OWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  const void *v22;
  unsigned int v23;
  char v24;
  __int128 v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  BOOL v29;
  size_t __n;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v3 = __src;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)((char *)__src + v13);
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = *((unsigned __int8 *)__src + v13);
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)((char *)__src + v13);
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    *__dst = *__src;
    if (v13 <= 3)
    {
      v23 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v23 > 0xFFFC)
      {
        v26 = 2;
        goto LABEL_44;
      }
      if (v23 > 0xFC)
      {
        LOWORD(v26) = 2;
        goto LABEL_47;
      }
    }
    v24 = 2;
    goto LABEL_31;
  }
  if (v15 == 1)
  {
    v25 = __src[1];
    *__dst = *__src;
    __dst[1] = v25;
    *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
    if (v13 > 3)
    {
LABEL_30:
      v24 = 1;
LABEL_31:
      *((_BYTE *)__dst + v13) = v24;
      if (v13 <= 3)
        goto LABEL_36;
LABEL_39:
      v28 = 1;
      goto LABEL_50;
    }
    v26 = 1;
    v23 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v23 <= 0xFFFC)
    {
      if (v23 <= 0xFC)
        goto LABEL_30;
LABEL_47:
      *(_WORD *)((char *)__dst + v13) = v26;
      goto LABEL_48;
    }
LABEL_44:
    *(_DWORD *)((char *)__dst + v13) = v26;
    goto LABEL_48;
  }
  __n = v12;
  v17 = ~v7;
  v33 = a3[3];
  v34 = a3[4];
  (*(void (**)(_OWORD *, _OWORD *))(v5 + 32))(__dst, __src);
  v18 = v3;
  v19 = ((unint64_t)__dst + v8) & v17;
  v32 = v18;
  v20 = ((unint64_t)v18 + v8) & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v19, v20, v33);
  v21 = (void *)((v19 + v9 + v11) & ~v11);
  v22 = (const void *)((v20 + v9 + v11) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v22, 1, v34))
  {
    memcpy(v21, v22, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v21, v22, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v34);
  }
  v3 = v32;
  if (v13 <= 3)
  {
    v23 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v23 > 0xFFFC)
    {
      *(_DWORD *)((char *)__dst + v13) = 0;
    }
    else
    {
      if (v23 <= 0xFC)
        goto LABEL_35;
      *(_WORD *)((char *)__dst + v13) = 0;
    }
LABEL_48:
    v29 = v23 > 0xFFFC;
    v28 = 2;
    if (v29)
      v28 = 4;
    goto LABEL_50;
  }
LABEL_35:
  *((_BYTE *)__dst + v13) = 0;
  if (v13 > 3)
    goto LABEL_39;
LABEL_36:
  v27 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  v28 = 2;
  if (v27 > 0xFFFC)
    v28 = 4;
  if (v27 <= 0xFC)
    goto LABEL_39;
LABEL_50:
  *(_QWORD *)(((unint64_t)__dst + v28 + v13 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v3
                                                                                           + v28
                                                                                           + v13
                                                                                           + 7) & 0xFFFFFFFFFFFFF8);
  return __dst;
}

uint64_t sub_23B9E6574(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int v30;
  char v31;
  __int128 v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  size_t __n;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3[3] - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  if (a1 == a2)
  {
    v17 = *(_QWORD *)(v8 + 64);
    v18 = *(_QWORD *)(a3[4] - 8);
    v11 = *(unsigned __int8 *)(v18 + 80);
    v19 = *(_DWORD *)(v18 + 84);
    v20 = *(_QWORD *)(v18 + 64);
    v21 = (v7 + v9) & ~v9;
    v22 = ~v11;
    goto LABEL_66;
  }
  v43 = v7 + *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v49 = *(_QWORD *)(v8 + 64);
  v46 = v43 & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v48 = *(_DWORD *)(v10 + 84);
  v47 = *(_QWORD *)(v10 + 64);
  if (v48)
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v49 + v11 + v46) & ~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v49 + v11 + v46) & ~v11);
  v14 = 8 * v13;
  if (v13 > 3)
    goto LABEL_11;
  v15 = ((1 << v14) + 1) >> v14;
  if (v15 <= 0xFFFC)
  {
    if (v15 > 0xFC)
    {
      v16 = *(unsigned __int16 *)(a1 + v13);
      if (v16 < 3)
        goto LABEL_21;
      goto LABEL_17;
    }
LABEL_11:
    v16 = *(unsigned __int8 *)(a1 + v13);
    if (v16 < 3)
      goto LABEL_21;
LABEL_17:
    if (v13 <= 3)
      v23 = v13;
    else
      v23 = 4;
    __asm { BR              X13 }
  }
  v16 = *(_DWORD *)(a1 + v13);
  if (v16 >= 3)
    goto LABEL_17;
LABEL_21:
  v50 = ~v11;
  __n = v12;
  v42 = ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v44 = a3[3];
  v45 = a3[4];
  if (v16 == 2)
  {
    swift_release();

  }
  else
  {
    if (v16 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v13 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))((v43 + a1) & v42, v44);
    v24 = (((v43 + a1) & v42) + v49 + v11) & v50;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v24, 1, v45))
    {
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v24, v45);
      if (v13 > 3)
        goto LABEL_32;
      goto LABEL_30;
    }
  }
  if (v13 > 3)
    goto LABEL_32;
LABEL_30:
  v25 = ((1 << v14) + 1) >> v14;
  if (v25 <= 0xFFFC)
  {
    if (v25 > 0xFC)
    {
      v26 = *(unsigned __int16 *)(a2 + v13);
      if (v26 < 3)
        goto LABEL_41;
      goto LABEL_37;
    }
LABEL_32:
    v26 = *(unsigned __int8 *)(a2 + v13);
    if (v26 < 3)
      goto LABEL_41;
LABEL_37:
    if (v13 <= 3)
      v27 = v13;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  v26 = *(_DWORD *)(a2 + v13);
  if (v26 >= 3)
    goto LABEL_37;
LABEL_41:
  if (v26 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v17 = v49;
    v22 = ~v11;
    if (v13 <= 3)
    {
      v30 = ((1 << v14) + 1) >> v14;
      if (v30 > 0xFFFC)
      {
        v33 = 2;
        goto LABEL_61;
      }
      if (v30 > 0xFC)
      {
        LOWORD(v33) = 2;
        goto LABEL_64;
      }
    }
    v31 = 2;
LABEL_53:
    *(_BYTE *)(a1 + v13) = v31;
    goto LABEL_65;
  }
  if (v26 == 1)
  {
    v32 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v32;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v17 = v49;
    v22 = ~v11;
    if (v13 > 3)
    {
LABEL_52:
      v31 = 1;
      goto LABEL_53;
    }
    v33 = 1;
    v34 = ((1 << v14) + 1) >> v14;
    if (v34 <= 0xFFFC)
    {
      if (v34 <= 0xFC)
        goto LABEL_52;
LABEL_64:
      *(_WORD *)(a1 + v13) = v33;
      goto LABEL_65;
    }
LABEL_61:
    *(_DWORD *)(a1 + v13) = v33;
    goto LABEL_65;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v43 + a1) & v42, (v43 + a2) & v42, v44);
  v17 = v49;
  v28 = (void *)((((v43 + a1) & v42) + v49 + v11) & v50);
  v29 = (const void *)((((v43 + a2) & v42) + v49 + v11) & v50);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v29, 1, v45))
  {
    memcpy(v28, v29, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v28, v29, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v45);
  }
  v22 = ~v11;
  if (v13 > 3)
    goto LABEL_56;
  v35 = ((1 << v14) + 1) >> v14;
  if (v35 > 0xFFFC)
  {
    *(_DWORD *)(a1 + v13) = 0;
    goto LABEL_65;
  }
  if (v35 <= 0xFC)
LABEL_56:
    *(_BYTE *)(a1 + v13) = 0;
  else
    *(_WORD *)(a1 + v13) = 0;
LABEL_65:
  v21 = v46;
  v19 = v48;
  v20 = v47;
LABEL_66:
  if (v19)
    v36 = v20;
  else
    v36 = v20 + 1;
  v37 = v36 + ((v21 + v17 + v11) & v22);
  if (v37 <= 0x28)
    v37 = 40;
  if (v37 > 3)
    goto LABEL_75;
  v38 = ((1 << (8 * v37)) + 1) >> (8 * v37);
  v39 = 2;
  if (v38 > 0xFFFC)
    v39 = 4;
  if (v38 <= 0xFC)
LABEL_75:
    v39 = 1;
  *(_QWORD *)((v39 + v37 + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v39 + v37 + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23B9E6B54(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v20;
  char v21;
  unsigned int v22;
  int v23;
  char v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  char v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  char v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  char v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7
     + ((((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
       + v4) & ~v4);
  if (v8 <= 0x28)
    v8 = 40;
  v9 = 8 * v8;
  if (v8 > 3)
  {
    v10 = 4;
LABEL_8:
    v11 = 8;
    goto LABEL_9;
  }
  v13 = ((1 << v9) + 1) >> v9;
  if (v13 > 0xFFFC)
    goto LABEL_15;
  v10 = v13 + 3;
  if (v13 <= 0xFC)
    goto LABEL_8;
  v11 = 16;
LABEL_9:
  v12 = (1 << v11) - v10;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3)
      goto LABEL_19;
LABEL_16:
    v14 = ((1 << v9) + 1) >> v9;
    v15 = 2;
    if (v14 > 0xFFFC)
      v15 = 4;
    if (v14 > 0xFC)
      goto LABEL_20;
    goto LABEL_19;
  }
LABEL_15:
  v12 = 0x7FFFFFFF;
  if (v8 <= 3)
    goto LABEL_16;
LABEL_19:
  v15 = 1;
LABEL_20:
  if (!a2)
    return 0;
  if (v12 < a2)
  {
    if (((((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v12 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23B9E6CA8 + 4 * byte_23BB8E1DC[v18]))();
  }
  if (!v12)
    return 0;
  if (v8 > 3)
  {
    v20 = 4;
LABEL_37:
    v21 = 8;
    goto LABEL_38;
  }
  v26 = ((1 << v9) + 1) >> v9;
  if (v26 > 0xFFFC)
  {
LABEL_48:
    v22 = 0x7FFFFFFF;
    if (v8 > 3)
      goto LABEL_40;
    goto LABEL_49;
  }
  v20 = v26 + 3;
  if (v26 <= 0xFC)
    goto LABEL_37;
  v21 = 16;
LABEL_38:
  v22 = (1 << v21) - v20;
  if ((v22 & 0x80000000) != 0)
    goto LABEL_48;
  if (v8 > 3)
  {
LABEL_40:
    v23 = 4;
LABEL_41:
    v24 = 8;
    goto LABEL_42;
  }
LABEL_49:
  v27 = ((1 << v9) + 1) >> v9;
  if (v27 > 0xFFFC)
  {
LABEL_52:
    if (v22 != 0x7FFFFFFF)
      return 0;
    goto LABEL_53;
  }
  v23 = v27 + 3;
  if (v27 <= 0xFC)
    goto LABEL_41;
  v24 = 16;
LABEL_42:
  v25 = (1 << v24) - v23;
  if (v25 < 0)
    goto LABEL_52;
  if (v25 != v22)
    return 0;
LABEL_53:
  if (v8 > 3)
  {
    v28 = 4;
LABEL_55:
    v29 = 8;
    goto LABEL_56;
  }
  v31 = ((1 << v9) + 1) >> v9;
  if (v31 > 0xFFFC)
    goto LABEL_62;
  v28 = v31 + 3;
  if (v31 <= 0xFC)
    goto LABEL_55;
  v29 = 16;
LABEL_56:
  v30 = (1 << v29) - v28;
  if ((v30 & 0x80000000) == 0)
  {
    if (v8 > 3)
      goto LABEL_66;
    goto LABEL_63;
  }
LABEL_62:
  v30 = 0x7FFFFFFF;
  if (v8 > 3)
  {
LABEL_66:
    v33 = 1;
    goto LABEL_67;
  }
LABEL_63:
  v32 = ((1 << v9) + 1) >> v9;
  v33 = 2;
  if (v32 > 0xFFFC)
    v33 = 4;
  if (v32 <= 0xFC)
    goto LABEL_66;
LABEL_67:
  if (!v22)
    return 0;
  v34 = v22 - v30;
  if (v22 <= v30)
    goto LABEL_85;
  v35 = v33 + v8;
  v36 = 8 * (v33 + v8);
  if (v35 > 3)
  {
LABEL_70:
    v37 = *(unsigned __int8 *)(a1 + v35);
    goto LABEL_77;
  }
  v38 = ((v34 + ~(-1 << v36)) >> v36) + 1;
  if (HIWORD(v38))
  {
    v37 = *(_DWORD *)(a1 + v35);
  }
  else
  {
    if (v38 <= 0xFF)
    {
      if (v38 < 2)
      {
LABEL_85:
        if (v30)
        {
          if (v8 <= 3)
          {
            v47 = ((1 << v9) + 1) >> v9;
            if (v47 > 0xFFFC)
            {
              v42 = *(_DWORD *)(a1 + v8);
              v43 = ~v42;
LABEL_95:
              v46 = 0x7FFFFFFF;
LABEL_96:
              if (v46 > v43)
                return -v42;
              else
                return 0;
            }
            v45 = v47 + 3;
            if (v47 > 0xFC)
            {
              v49 = *(unsigned __int16 *)(a1 + v8);
              v42 = v49 | 0xFFFF0000;
              v43 = v49 ^ 0xFFFF;
              v44 = 16;
            }
            else
            {
              v48 = *(unsigned __int8 *)(a1 + v8);
              v42 = v48 | 0xFFFFFF00;
              v43 = v48 ^ 0xFF;
              v44 = 8;
            }
          }
          else
          {
            v41 = *(unsigned __int8 *)(a1 + v8);
            v42 = v41 | 0xFFFFFF00;
            v43 = v41 ^ 0xFF;
            v44 = 8;
            v45 = 4;
          }
          v46 = (1 << v44) - v45;
          if ((v46 & 0x80000000) == 0)
            goto LABEL_96;
          goto LABEL_95;
        }
        return 0;
      }
      goto LABEL_70;
    }
    v37 = *(unsigned __int16 *)(a1 + v35);
  }
LABEL_77:
  if (!v37)
    goto LABEL_85;
  v39 = (v37 - 1) << v36;
  if (v35 > 3)
    v39 = 0;
  if (!(_DWORD)v35)
    return v30 + v39 + 1;
  if (v35 <= 3)
    v40 = v35;
  else
    v40 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23B9E6EF4 + 4 * byte_23BB8E1E1[v40 - 1]))();
}

void sub_23B9E6FD8(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  size_t v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;

  v5 = *(_QWORD *)(a4[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  if (v10 <= 0x28)
    v10 = 40;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v15 = ((1 << v11) + 1) >> v11;
    if (v15 > 0xFFFC)
      goto LABEL_15;
    v12 = v15 + 3;
    if (v15 > 0xFC)
    {
      v13 = 16;
LABEL_9:
      v14 = (1 << v13) - v12;
      if ((v14 & 0x80000000) == 0)
      {
        if (v10 > 3)
          goto LABEL_19;
LABEL_16:
        v16 = ((1 << v11) + 1) >> v11;
        v17 = 2;
        if (v16 > 0xFFFC)
          v17 = 4;
        if (v16 > 0xFC)
        {
LABEL_20:
          v18 = ((v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
          if (v14 >= a3)
          {
            v21 = 0;
            if (a2 <= v14)
              goto LABEL_33;
          }
          else
          {
            if ((((_DWORD)v10 + (_DWORD)v17 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
              v19 = a3 - v14 + 1;
            else
              v19 = 2;
            if (v19 >= 0x10000)
              v20 = 4;
            else
              v20 = 2;
            if (v19 < 0x100)
              v20 = 1;
            if (v19 >= 2)
              v21 = v20;
            else
              v21 = 0;
            if (a2 <= v14)
LABEL_33:
              __asm { BR              X12 }
          }
          if ((_DWORD)v18)
          {
            v22 = ~v14 + a2;
            bzero(a1, v18);
            *a1 = v22;
          }
          __asm { BR              X10 }
        }
LABEL_19:
        v17 = 1;
        goto LABEL_20;
      }
LABEL_15:
      v14 = 0x7FFFFFFF;
      if (v10 > 3)
        goto LABEL_19;
      goto LABEL_16;
    }
  }
  else
  {
    v12 = 4;
  }
  v13 = 8;
  goto LABEL_9;
}

void sub_23B9E71A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23B9E71AC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23B9E71B4);
}

void sub_23B9E72F4(int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  int v4;
  int v5;
  char v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_WORD *)(v13 + v14) = 0;
  if (!a1)
    return;
  if (a2 > 3)
  {
    v2 = 4;
LABEL_4:
    v3 = 8;
    goto LABEL_5;
  }
  v8 = ((1 << v12) + 1) >> v12;
  if (v8 > 0xFFFC)
  {
LABEL_16:
    v4 = 0x7FFFFFFF;
    if (a2 > 3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v2 = v8 + 3;
  if (v8 <= 0xFC)
    goto LABEL_4;
  v3 = 16;
LABEL_5:
  v4 = (1 << v3) - v2;
  if (v4 < 0)
    goto LABEL_16;
  if (a2 > 3)
  {
LABEL_7:
    v5 = 4;
LABEL_8:
    v6 = 8;
    goto LABEL_9;
  }
LABEL_17:
  v9 = ((1 << v12) + 1) >> v12;
  if (v9 > 0xFFFC)
  {
LABEL_20:
    if (v4 == 0x7FFFFFFF)
    {
LABEL_11:
      if (a2 > 3)
        JUMPOUT(0x23B9E7368);
      JUMPOUT(0x23B9E7300);
    }
    goto LABEL_21;
  }
  v5 = v9 + 3;
  if (v9 <= 0xFC)
    goto LABEL_8;
  v6 = 16;
LABEL_9:
  v7 = (1 << v6) - v5;
  if (v7 < 0)
    goto LABEL_20;
  if (v7 == v4)
    goto LABEL_11;
LABEL_21:
  if (a2 > 3)
    goto LABEL_25;
  v10 = ((1 << v12) + 1) >> v12;
  v11 = 2;
  if (v10 > 0xFFFC)
    v11 = 4;
  if (v10 <= 0xFC)
LABEL_25:
    v11 = 1;
  *(_QWORD *)((v13 + a2 + v11 + 7) & 0xFFFFFFFFFFFFF8) = (a1 - 1);
}

void sub_23B9E745C(int a1@<W1>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  *(_WORD *)(v3 + v4) = 0;
  v5 = -a1;
  if (a2 > 3)
    goto LABEL_4;
  v6 = ((1 << v2) + 1) >> v2;
  if (v6 > 0xFFFC)
  {
    *(_DWORD *)(v3 + a2) = v5;
  }
  else
  {
    if (v6 <= 0xFC)
    {
LABEL_4:
      *(_BYTE *)(v3 + a2) = v5;
      goto LABEL_7;
    }
    *(_WORD *)(v3 + a2) = v5;
  }
LABEL_7:
  JUMPOUT(0x23B9E74F4);
}

void sub_23B9E74E8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void type metadata accessor for MergeStateMachine.State()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9E7518()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v6;
  char *v7;
  const char *v8;
  void *v9;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      v3 = sub_23BB8ACA0();
      if (v4 > 0x3F)
      {
        return v3;
      }
      else
      {
        swift_getTupleTypeLayout3();
        v7 = &v6;
        v8 = "(";
        v9 = &unk_23BB8E7E8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

_QWORD *sub_23B9E75F8(char *__dst, char *__src, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  void *v29;
  id v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  size_t __n;
  uint64_t v37;
  uint64_t v38;

  v4 = __dst;
  v5 = a3[3];
  v6 = a3[4];
  v7 = *(_QWORD *)(a3[2] - 8);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v6 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  if (*(_DWORD *)(v12 + 84))
    v14 = *(_QWORD *)(v12 + 64);
  else
    v14 = *(_QWORD *)(v12 + 64) + 1;
  if (v14 + ((v11 + v13 + (v10 & ~v9)) & (unint64_t)~v13) <= 0x28)
    v15 = 40;
  else
    v15 = v14 + ((v11 + v13 + (v10 & ~v9)) & ~v13);
  if (v15 > 3)
    goto LABEL_11;
  v16 = ((1 << (8 * v15)) + 1) >> (8 * v15);
  v17 = 2;
  if (v16 > 0xFFFC)
    v17 = 4;
  if (v16 <= 0xFC)
LABEL_11:
    v17 = 1;
  v18 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v12 + 80);
  if ((unint64_t)(v17 + v15) <= 0x18 && (v18 & 0x1000F8) == 0)
  {
    if (v15 <= 3)
    {
      v22 = ((1 << (8 * v15)) + 1) >> (8 * v15);
      if (v22 > 0xFFFC)
      {
        v23 = *(_DWORD *)&__src[v15];
        if (v23 < 3)
        {
LABEL_30:
          if (v23 != 2)
          {
            if (v23 != 1)
            {
              __n = v14;
              v37 = ~v9;
              (*(void (**)(char *, char *))(v7 + 16))(__dst, __src);
              v38 = v6;
              v25 = ((unint64_t)v4 + v10) & v37;
              v26 = (unint64_t)&__src[v10] & v37;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v25, v26, v5);
              v27 = (void *)((v25 + v11 + v13) & ~v13);
              v28 = (const void *)((v26 + v11 + v13) & ~v13);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v28, 1, v38))
              {
                memcpy(v27, v28, __n);
                if (v15 > 3)
                  goto LABEL_46;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v27, v28, v38);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v38);
                if (v15 > 3)
                {
LABEL_46:
                  *((_BYTE *)v4 + v15) = 0;
                  return v4;
                }
              }
              v35 = ((1 << (8 * v15)) + 1) >> (8 * v15);
              if (v35 > 0xFFFC)
              {
                *(_DWORD *)((char *)v4 + v15) = 0;
                return v4;
              }
              if (v35 > 0xFC)
              {
                *(_WORD *)((char *)v4 + v15) = 0;
                return v4;
              }
              goto LABEL_46;
            }
            v32 = *((_QWORD *)__src + 1);
            *(_QWORD *)__dst = *(_QWORD *)__src;
            *((_QWORD *)__dst + 1) = v32;
            *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
            *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            if (v15 > 3)
            {
LABEL_42:
              *((_BYTE *)v4 + v15) = 1;
              return v4;
            }
            v33 = 1;
            v34 = ((1 << (8 * v15)) + 1) >> (8 * v15);
            if (v34 <= 0xFFFC)
            {
              if (v34 <= 0xFC)
                goto LABEL_42;
LABEL_51:
              *(_WORD *)((char *)v4 + v15) = v33;
              return v4;
            }
LABEL_48:
            *(_DWORD *)((char *)v4 + v15) = v33;
            return v4;
          }
          v29 = (void *)*((_QWORD *)__src + 1);
          *(_QWORD *)__dst = *(_QWORD *)__src;
          swift_retain();
          v30 = v29;
          v4[1] = v29;
          if (v15 <= 3)
          {
            v31 = ((1 << (8 * v15)) + 1) >> (8 * v15);
            if (v31 > 0xFFFC)
            {
              v33 = 2;
              goto LABEL_48;
            }
            if (v31 > 0xFC)
            {
              LOWORD(v33) = 2;
              goto LABEL_51;
            }
          }
          *((_BYTE *)v4 + v15) = 2;
          return v4;
        }
LABEL_26:
        if (v15 <= 3)
          v24 = v15;
        else
          v24 = 4;
        __asm { BR              X14 }
      }
      if (v22 > 0xFC)
      {
        v23 = *(unsigned __int16 *)&__src[v15];
        if (v23 < 3)
          goto LABEL_30;
        goto LABEL_26;
      }
    }
    v23 = __src[v15];
    if (v23 < 3)
      goto LABEL_30;
    goto LABEL_26;
  }
  v20 = *(_QWORD *)__src;
  *v4 = *(_QWORD *)__src;
  v4 = (_QWORD *)(v20 + (((v18 & 0xF8 | 7u) + 16) & ~(unint64_t)(v18 & 0xF8 | 7u)));
  swift_retain();
  return v4;
}

void sub_23B9E7A3C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a2[3];
  v3 = a2[4];
  v5 = *(_QWORD *)(a2[2] - 8);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(v3 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 <= 0x28)
    v13 = 40;
  if (v13 > 3)
    goto LABEL_7;
  v15 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v15 > 0xFFFC)
  {
    v14 = *(_DWORD *)(a1 + v13);
  }
  else
  {
    if (v15 <= 0xFC)
    {
LABEL_7:
      v14 = *(unsigned __int8 *)(a1 + v13);
      goto LABEL_12;
    }
    v14 = *(unsigned __int16 *)(a1 + v13);
  }
LABEL_12:
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X15 }
  }
  if (v14 == 2)
  {
    swift_release();

  }
  else if (v14 == 1)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = ~v7;
    (*(void (**)(uint64_t))(v5 + 8))(a1);
    v18 = (v8 + a1) & v17;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v4);
    v19 = (v18 + v9 + v11) & ~v11;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v19, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v19, v3);
  }
}

char *sub_23B9E7C68(char *__dst, char *__src, _QWORD *a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  const void *v21;
  void *v22;
  id v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  size_t __n;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = __dst;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)&__src[v13];
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = __src[v13];
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)&__src[v13];
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    v22 = (void *)*((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    swift_retain();
    v23 = v22;
    *((_QWORD *)v4 + 1) = v22;
    if (v13 <= 3)
    {
      v24 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v24 > 0xFFFC)
      {
        v26 = 2;
        goto LABEL_38;
      }
      if (v24 > 0xFC)
      {
        LOWORD(v26) = 2;
        goto LABEL_41;
      }
    }
    v4[v13] = 2;
    return v4;
  }
  if (v15 == 1)
  {
    v25 = *((_QWORD *)__src + 1);
    *(_QWORD *)__dst = *(_QWORD *)__src;
    *((_QWORD *)__dst + 1) = v25;
    *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
    *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v13 > 3)
    {
LABEL_30:
      v4[v13] = 1;
      return v4;
    }
    v26 = 1;
    v27 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v27 <= 0xFFFC)
    {
      if (v27 <= 0xFC)
        goto LABEL_30;
LABEL_41:
      *(_WORD *)&v4[v13] = v26;
      return v4;
    }
LABEL_38:
    *(_DWORD *)&v4[v13] = v26;
    return v4;
  }
  __n = v12;
  v32 = a3[3];
  v33 = a3[4];
  v17 = ~v7;
  (*(void (**)(char *, char *))(v5 + 16))(__dst, __src);
  v31 = v4;
  v18 = (unint64_t)&v4[v8] & v17;
  v19 = (unint64_t)&__src[v8] & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v18, v19, v32);
  v20 = (void *)((v18 + v9 + v11) & ~v11);
  v21 = (const void *)((v19 + v9 + v11) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v21, 1, v33))
  {
    memcpy(v20, v21, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v20, v21, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v33);
  }
  v4 = v31;
  if (v13 > 3)
    goto LABEL_33;
  v28 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v28 > 0xFFFC)
  {
    *(_DWORD *)&v31[v13] = 0;
    return v4;
  }
  if (v28 <= 0xFC)
LABEL_33:
    v31[v13] = 0;
  else
    *(_WORD *)&v31[v13] = 0;
  return v4;
}

uint64_t sub_23B9E8004(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  const void *v26;
  void *v27;
  id v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  size_t __n;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if ((_QWORD *)a1 == a2)
    return a1;
  v37 = a3[2];
  v5 = *(_QWORD *)(v37 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v39 = a3[3];
  v7 = *(_QWORD *)(v39 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v38 = *(_QWORD *)(v7 + 64);
  v12 = (v38 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  v14 = v13 + v12;
  if (v14 <= 0x28)
    v15 = 40;
  else
    v15 = v14;
  v16 = 8 * v15;
  if (v15 > 3)
    goto LABEL_11;
  v17 = ((1 << v16) + 1) >> v16;
  if (v17 <= 0xFFFC)
  {
    if (v17 > 0xFC)
    {
      v18 = *(unsigned __int16 *)(a1 + v15);
      if (v18 < 3)
        goto LABEL_20;
      goto LABEL_16;
    }
LABEL_11:
    v18 = *(unsigned __int8 *)(a1 + v15);
    if (v18 < 3)
      goto LABEL_20;
LABEL_16:
    if (v15 <= 3)
      v19 = v15;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v18 = *(_DWORD *)(a1 + v15);
  if (v18 >= 3)
    goto LABEL_16;
LABEL_20:
  __n = v13;
  v35 = ~v8;
  v36 = ~v11;
  v40 = a3[4];
  if (v18 == 2)
  {
    swift_release();

  }
  else
  {
    if (v18 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v37);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))((v9 + a1) & v35, v39);
    v20 = (((v9 + a1) & v35) + v38 + v11) & v36;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v20, 1, v40))
    {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v40);
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
  }
  if (v15 > 3)
    goto LABEL_31;
LABEL_29:
  v21 = ((1 << v16) + 1) >> v16;
  if (v21 > 0xFFFC)
  {
    v22 = *(_DWORD *)((char *)a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
    goto LABEL_36;
  }
  if (v21 <= 0xFC)
  {
LABEL_31:
    v22 = *((unsigned __int8 *)a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
LABEL_36:
    if (v15 <= 3)
      v23 = v15;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  v22 = *(unsigned __int16 *)((char *)a2 + v15);
  if (v22 >= 3)
    goto LABEL_36;
LABEL_40:
  if (v22 != 2)
  {
    if (v22 != 1)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v5 + 16))(a1, a2, v37);
      v24 = ((unint64_t)a2 + v9) & v35;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))((v9 + a1) & v35, v24, v39);
      v25 = (void *)((((v9 + a1) & v35) + v38 + v11) & v36);
      v26 = (const void *)((v24 + v38 + v11) & v36);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v26, 1, v40))
      {
        memcpy(v25, v26, __n);
        if (v15 > 3)
          goto LABEL_56;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v25, v26, v40);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v40);
        if (v15 > 3)
        {
LABEL_56:
          *(_BYTE *)(a1 + v15) = 0;
          return a1;
        }
      }
      v32 = ((1 << v16) + 1) >> v16;
      if (v32 > 0xFFFC)
      {
        *(_DWORD *)(a1 + v15) = 0;
        return a1;
      }
      if (v32 > 0xFC)
      {
        *(_WORD *)(a1 + v15) = 0;
        return a1;
      }
      goto LABEL_56;
    }
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v15 > 3)
      goto LABEL_52;
    v30 = 1;
    v31 = ((1 << v16) + 1) >> v16;
    if (v31 <= 0xFFFC)
    {
      if (v31 <= 0xFC)
      {
LABEL_52:
        *(_BYTE *)(a1 + v15) = 1;
        return a1;
      }
LABEL_61:
      *(_WORD *)(a1 + v15) = v30;
      return a1;
    }
LABEL_58:
    *(_DWORD *)(a1 + v15) = v30;
    return a1;
  }
  *(_QWORD *)a1 = *a2;
  v27 = (void *)a2[1];
  swift_retain();
  v28 = v27;
  *(_QWORD *)(a1 + 8) = v27;
  if (v15 <= 3)
  {
    v29 = ((1 << v16) + 1) >> v16;
    if (v29 > 0xFFFC)
    {
      v30 = 2;
      goto LABEL_58;
    }
    if (v29 > 0xFC)
    {
      LOWORD(v30) = 2;
      goto LABEL_61;
    }
  }
  *(_BYTE *)(a1 + v15) = 2;
  return a1;
}

char *sub_23B9E8564(char *__dst, _OWORD *__src, _QWORD *a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  const void *v21;
  unsigned int v22;
  __int128 v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  size_t __n;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = __dst;
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  if (*(_DWORD *)(v10 + 84))
    v12 = *(_QWORD *)(v10 + 64);
  else
    v12 = *(_QWORD *)(v10 + 64) + 1;
  if (v12 + ((v9 + v11 + (v8 & ~v7)) & (unint64_t)~v11) <= 0x28)
    v13 = 40;
  else
    v13 = v12 + ((v9 + v11 + (v8 & ~v7)) & ~v11);
  if (v13 > 3)
    goto LABEL_10;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v14 <= 0xFFFC)
  {
    if (v14 > 0xFC)
    {
      v15 = *(unsigned __int16 *)((char *)__src + v13);
      if (v15 < 3)
        goto LABEL_19;
      goto LABEL_15;
    }
LABEL_10:
    v15 = *((unsigned __int8 *)__src + v13);
    if (v15 < 3)
      goto LABEL_19;
LABEL_15:
    if (v13 <= 3)
      v16 = v13;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  v15 = *(_DWORD *)((char *)__src + v13);
  if (v15 >= 3)
    goto LABEL_15;
LABEL_19:
  if (v15 == 2)
  {
    *(_OWORD *)__dst = *__src;
    if (v13 <= 3)
    {
      v22 = ((1 << (8 * v13)) + 1) >> (8 * v13);
      if (v22 > 0xFFFC)
      {
        v24 = 2;
        goto LABEL_38;
      }
      if (v22 > 0xFC)
      {
        LOWORD(v24) = 2;
        goto LABEL_41;
      }
    }
    __dst[v13] = 2;
    return v4;
  }
  if (v15 == 1)
  {
    v23 = __src[1];
    *(_OWORD *)__dst = *__src;
    *((_OWORD *)__dst + 1) = v23;
    *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
    if (v13 > 3)
    {
LABEL_30:
      __dst[v13] = 1;
      return v4;
    }
    v24 = 1;
    v25 = ((1 << (8 * v13)) + 1) >> (8 * v13);
    if (v25 <= 0xFFFC)
    {
      if (v25 <= 0xFC)
        goto LABEL_30;
LABEL_41:
      *(_WORD *)&__dst[v13] = v24;
      return v4;
    }
LABEL_38:
    *(_DWORD *)&__dst[v13] = v24;
    return v4;
  }
  __n = v12;
  v30 = a3[3];
  v31 = a3[4];
  v17 = ~v7;
  (*(void (**)(char *, _OWORD *))(v5 + 32))(__dst, __src);
  v29 = v4;
  v18 = (unint64_t)&v4[v8] & v17;
  v19 = ((unint64_t)__src + v8) & v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v18, v19, v30);
  v20 = (void *)((v18 + v9 + v11) & ~v11);
  v21 = (const void *)((v19 + v9 + v11) & ~v11);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v21, 1, v31))
  {
    memcpy(v20, v21, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v20, v21, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v31);
  }
  v4 = v29;
  if (v13 > 3)
    goto LABEL_33;
  v26 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  if (v26 > 0xFFFC)
  {
    *(_DWORD *)&v29[v13] = 0;
    return v4;
  }
  if (v26 <= 0xFC)
LABEL_33:
    v29[v13] = 0;
  else
    *(_WORD *)&v29[v13] = 0;
  return v4;
}

uint64_t sub_23B9E88D4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  unsigned int v27;
  __int128 v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  size_t __n;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (a1 == a2)
    return a1;
  v36 = a3[2];
  v5 = *(_QWORD *)(v36 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v38 = a3[3];
  v7 = *(_QWORD *)(v38 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v37 = *(_QWORD *)(v7 + 64);
  v12 = (v37 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  v14 = v13 + v12;
  if (v14 <= 0x28)
    v15 = 40;
  else
    v15 = v14;
  v16 = 8 * v15;
  if (v15 > 3)
    goto LABEL_11;
  v17 = ((1 << v16) + 1) >> v16;
  if (v17 <= 0xFFFC)
  {
    if (v17 > 0xFC)
    {
      v18 = *(unsigned __int16 *)(a1 + v15);
      if (v18 < 3)
        goto LABEL_20;
      goto LABEL_16;
    }
LABEL_11:
    v18 = *(unsigned __int8 *)(a1 + v15);
    if (v18 < 3)
      goto LABEL_20;
LABEL_16:
    if (v15 <= 3)
      v19 = v15;
    else
      v19 = 4;
    __asm { BR              X13 }
  }
  v18 = *(_DWORD *)(a1 + v15);
  if (v18 >= 3)
    goto LABEL_16;
LABEL_20:
  __n = v13;
  v34 = ~v8;
  v35 = ~v11;
  v39 = a3[4];
  if (v18 == 2)
  {
    swift_release();

  }
  else
  {
    if (v18 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v36);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))((v9 + a1) & v34, v38);
    v20 = (((v9 + a1) & v34) + v37 + v11) & v35;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v20, 1, v39))
    {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v39);
      if (v15 > 3)
        goto LABEL_31;
      goto LABEL_29;
    }
  }
  if (v15 > 3)
    goto LABEL_31;
LABEL_29:
  v21 = ((1 << v16) + 1) >> v16;
  if (v21 > 0xFFFC)
  {
    v22 = *(_DWORD *)(a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
    goto LABEL_36;
  }
  if (v21 <= 0xFC)
  {
LABEL_31:
    v22 = *(unsigned __int8 *)(a2 + v15);
    if (v22 < 3)
      goto LABEL_40;
LABEL_36:
    if (v15 <= 3)
      v23 = v15;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  v22 = *(unsigned __int16 *)(a2 + v15);
  if (v22 >= 3)
    goto LABEL_36;
LABEL_40:
  if (v22 != 2)
  {
    if (v22 != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, v36);
      v24 = (v9 + a2) & v34;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))((v9 + a1) & v34, v24, v38);
      v25 = (void *)((((v9 + a1) & v34) + v37 + v11) & v35);
      v26 = (const void *)((v24 + v37 + v11) & v35);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v26, 1, v39))
      {
        memcpy(v25, v26, __n);
        if (v15 > 3)
          goto LABEL_56;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v25, v26, v39);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v39);
        if (v15 > 3)
        {
LABEL_56:
          *(_BYTE *)(a1 + v15) = 0;
          return a1;
        }
      }
      v31 = ((1 << v16) + 1) >> v16;
      if (v31 > 0xFFFC)
      {
        *(_DWORD *)(a1 + v15) = 0;
        return a1;
      }
      if (v31 > 0xFC)
      {
        *(_WORD *)(a1 + v15) = 0;
        return a1;
      }
      goto LABEL_56;
    }
    v28 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v28;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    if (v15 > 3)
      goto LABEL_52;
    v29 = 1;
    v30 = ((1 << v16) + 1) >> v16;
    if (v30 <= 0xFFFC)
    {
      if (v30 <= 0xFC)
      {
LABEL_52:
        *(_BYTE *)(a1 + v15) = 1;
        return a1;
      }
LABEL_61:
      *(_WORD *)(a1 + v15) = v29;
      return a1;
    }
LABEL_58:
    *(_DWORD *)(a1 + v15) = v29;
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (v15 <= 3)
  {
    v27 = ((1 << v16) + 1) >> v16;
    if (v27 > 0xFFFC)
    {
      v29 = 2;
      goto LABEL_58;
    }
    if (v27 > 0xFC)
    {
      LOWORD(v29) = 2;
      goto LABEL_61;
    }
  }
  *(_BYTE *)(a1 + v15) = 2;
  return a1;
}

uint64_t sub_23B9E8DF4(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v21;
  unsigned int v22;
  unsigned int v23;
  char v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7
     + ((((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
       + v4) & ~v4);
  if (v8 <= 0x28)
    v8 = 40;
  if (v8 > 3)
  {
    v9 = 4;
LABEL_10:
    v11 = 8;
    goto LABEL_11;
  }
  v10 = ((1 << (8 * v8)) + 1) >> (8 * v8);
  if (v10 > 0xFFFC)
    goto LABEL_14;
  v9 = v10 + 3;
  if (v10 <= 0xFC)
    goto LABEL_10;
  v11 = 16;
LABEL_11:
  v12 = (1 << v11) - v9;
  if ((v12 & 0x80000000) == 0)
  {
    if (v8 > 3)
      goto LABEL_18;
LABEL_15:
    v13 = ((1 << (8 * v8)) + 1) >> (8 * v8);
    v14 = 2;
    if (v13 > 0xFFFC)
      v14 = 4;
    if (v13 > 0xFC)
      goto LABEL_19;
    goto LABEL_18;
  }
LABEL_14:
  v12 = 0x7FFFFFFF;
  if (v8 <= 3)
    goto LABEL_15;
LABEL_18:
  v14 = 1;
LABEL_19:
  if (!a2)
    return 0;
  if (a2 <= v12)
    goto LABEL_37;
  v15 = v14 + v8;
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v18 < 2)
    {
LABEL_37:
      if (v12)
      {
        if (v8 <= 3)
        {
          v26 = ((1 << (8 * v8)) + 1) >> (8 * v8);
          if (v26 > 0xFFFC)
          {
            v22 = *(_DWORD *)(a1 + v8);
            v23 = ~v22;
LABEL_47:
            v29 = 0x7FFFFFFF;
LABEL_48:
            if (v29 > v23)
              return -v22;
            else
              return 0;
          }
          v25 = v26 + 3;
          if (v26 > 0xFC)
          {
            v28 = *(unsigned __int16 *)(a1 + v8);
            v22 = v28 | 0xFFFF0000;
            v23 = v28 ^ 0xFFFF;
            v24 = 16;
          }
          else
          {
            v27 = *(unsigned __int8 *)(a1 + v8);
            v22 = v27 | 0xFFFFFF00;
            v23 = v27 ^ 0xFF;
            v24 = 8;
          }
        }
        else
        {
          v21 = *(unsigned __int8 *)(a1 + v8);
          v22 = v21 | 0xFFFFFF00;
          v23 = v21 ^ 0xFF;
          v24 = 8;
          v25 = 4;
        }
        v29 = (1 << v24) - v25;
        if ((v29 & 0x80000000) == 0)
          goto LABEL_48;
        goto LABEL_47;
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_37;
LABEL_30:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if (!(_DWORD)v15)
    return v12 + v19 + 1;
  if (v15 > 3)
    LODWORD(v15) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23B9E8F90 + 4 * byte_23BB8E221[(v15 - 1)]))();
}

void sub_23B9E9074(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  size_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  int v22;

  v5 = *(_QWORD *)(a4[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  if (v10 <= 0x28)
    v10 = 40;
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v15 = ((1 << v11) + 1) >> v11;
    if (v15 > 0xFFFC)
      goto LABEL_15;
    v12 = v15 + 3;
    if (v15 > 0xFC)
    {
      v13 = 16;
LABEL_9:
      v14 = (1 << v13) - v12;
      if ((v14 & 0x80000000) == 0)
      {
        if (v10 > 3)
          goto LABEL_19;
LABEL_16:
        v16 = ((1 << v11) + 1) >> v11;
        v17 = 2;
        if (v16 > 0xFFFC)
          v17 = 4;
        if (v16 > 0xFC)
        {
LABEL_20:
          v18 = v17 + v10;
          if (a3 <= v14)
          {
            v19 = 0;
          }
          else if (v18 <= 3)
          {
            v21 = ((a3 - v14 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
            if (HIWORD(v21))
            {
              v19 = 4u;
            }
            else if (v21 >= 0x100)
            {
              v19 = 2;
            }
            else
            {
              v19 = v21 > 1;
            }
          }
          else
          {
            v19 = 1u;
          }
          if (v14 < a2)
          {
            v20 = ~v14 + a2;
            if (v18 < 4)
            {
              if ((_DWORD)v18)
              {
                v22 = v20 & ~(-1 << (8 * v18));
                bzero(a1, v18);
                if ((_DWORD)v18 == 3)
                {
                  *a1 = v22;
                  *((_BYTE *)a1 + 2) = BYTE2(v22);
                }
                else if ((_DWORD)v18 == 2)
                {
                  *a1 = v22;
                }
                else
                {
                  *(_BYTE *)a1 = v22;
                }
              }
            }
            else
            {
              bzero(a1, v18);
              *(_DWORD *)a1 = v20;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_19:
        v17 = 1;
        goto LABEL_20;
      }
LABEL_15:
      v14 = 0x7FFFFFFF;
      if (v10 > 3)
        goto LABEL_19;
      goto LABEL_16;
    }
  }
  else
  {
    v12 = 4;
  }
  v13 = 8;
  goto LABEL_9;
}

uint64_t sub_23B9E9334(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a2[4] - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_DWORD *)(v2 + 84);
  v5 = *(_QWORD *)(v2 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v7 = v6
     + ((((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
       + v3) & ~v3);
  v8 = 40;
  if (v7 > 0x28)
    v8 = v7;
  if (v8 > 3)
    goto LABEL_7;
  v10 = ((1 << (8 * v8)) + 1) >> (8 * v8);
  if (v10 > 0xFFFC)
  {
    v9 = *(unsigned int *)(a1 + v8);
  }
  else
  {
    if (v10 <= 0xFC)
    {
LABEL_7:
      v9 = *(unsigned __int8 *)(a1 + v8);
      goto LABEL_12;
    }
    v9 = *(unsigned __int16 *)(a1 + v8);
  }
LABEL_12:
  if (v9 < 3)
    return v9;
  if (v8 <= 3)
    v11 = v8;
  else
    v11 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23B9E93FC + 4 * byte_23BB8E22F[v11]))();
}

_BYTE *sub_23B9E9444(_BYTE *result, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  int v15;

  v4 = *(_QWORD *)(a3[4] - 8);
  v5 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  v9 = v8 + v5;
  if (v9 <= 0x28)
    v10 = 40;
  else
    v10 = v9;
  if (a2 > 2)
  {
    if (v10 < 4)
    {
      v12 = ((a2 - 3) >> (8 * v10)) + 3;
      v13 = (unsigned int *)&result[v10];
      v14 = ((1 << (8 * v10)) + 1) >> (8 * v10);
      if (v14 > 0xFFFC)
      {
        *v13 = v12;
      }
      else if (v14 > 0xFC)
      {
        *(_WORD *)v13 = v12;
      }
      else
      {
        *(_BYTE *)v13 = v12;
      }
    }
    else
    {
      result[v10] = 3;
    }
    if (v10 >= 4)
      v15 = 4;
    else
      v15 = v10;
    bzero(result, v10);
    __asm { BR              X10 }
  }
  if (v10 > 3)
    goto LABEL_9;
  v11 = ((1 << (8 * v10)) + 1) >> (8 * v10);
  if (v11 > 0xFFFC)
  {
    *(_DWORD *)&result[v10] = a2;
  }
  else
  {
    if (v11 <= 0xFC)
    {
LABEL_9:
      result[v10] = a2;
      return result;
    }
    *(_WORD *)&result[v10] = a2;
  }
  return result;
}

void sub_23B9E95D8(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_23B9E95E4(a1, a2, a3, (void (*)(uint64_t, _OWORD *))type metadata accessor for CombineLatestStateMachine.State);
}

void sub_23B9E95E4(_OWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _OWORD *))
{
  __int128 v4;
  _OWORD v5[3];

  v4 = a1[2];
  v5[0] = a1[1];
  v5[1] = v4;
  v5[2] = a1[3];
  a4(319, v5);
  JUMPOUT(0x23B9E9614);
}

id *sub_23B9E966C(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  size_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  char *v43;
  id *v44;
  id *v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void *v53;
  const void *v54;
  _QWORD *v55;
  _QWORD *v56;
  void *v57;
  const void *v58;
  unsigned int (*v59)(const void *, uint64_t, uint64_t);
  unsigned int v60;
  char v61;
  id v62;
  id v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  const void *v69;
  unsigned int (*v70)(const void *, uint64_t, uint64_t);
  _QWORD *v71;
  _QWORD *v72;
  void *v73;
  const void *v74;
  size_t v75;
  _QWORD *v76;
  _QWORD *v77;
  void *v78;
  const void *v79;
  size_t v80;
  _QWORD *v81;
  _QWORD *v82;
  void *v83;
  const void *v84;
  size_t v85;
  _QWORD *v86;
  _QWORD *v87;
  void *v88;
  const void *v89;
  size_t v90;
  _QWORD *v91;
  _QWORD *v92;
  int v93;
  unsigned int v94;
  uint64_t v95;
  BOOL v96;
  size_t __n;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  size_t v120;
  size_t v121;
  size_t v122;
  uint64_t AssociatedTypeWitness;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  size_t v129;
  size_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v4 = a3[2];
  v6 = a3[3];
  v5 = a3[4];
  v139 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v139 + 64);
  v8 = *(_QWORD *)(v6 - 8);
  v137 = *(_DWORD *)(v8 + 80);
  v104 = v7 + v137;
  v99 = v137;
  v113 = v8;
  v9 = *(_QWORD *)(v5 - 8);
  v134 = *(_DWORD *)(v9 + 80);
  v110 = *(_QWORD *)(v8 + 64);
  v10 = (v110 + v134 + ((v7 + v99) & ~v99)) & ~(unint64_t)v134;
  v117 = v9;
  v11 = *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v11;
  __n = v11;
  v125 = v11 + v10;
  v107 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v131 = *(_DWORD *)(v12 + 80);
  v114 = v6;
  v124 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v124 - 8);
  v128 = *(_DWORD *)(v13 + 80);
  v14 = v128 | (unint64_t)v131;
  v120 = v5;
  v15 = swift_getAssociatedTypeWitness();
  v16 = v128 | 7;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18 | 7;
  v20 = v13;
  v21 = v12;
  v22 = v14 | v18 | 7;
  v23 = v131 + 8;
  v24 = v23 & ~(unint64_t)v131;
  if (*(_DWORD *)(v12 + 84))
    v25 = *(_QWORD *)(v12 + 64);
  else
    v25 = *(_QWORD *)(v12 + 64) + 1;
  v26 = v24 + 1;
  v27 = (v24 + 1 + v16 + v25) & ~v16;
  v28 = v128 + 8;
  v29 = v28 & ~(unint64_t)v128;
  if (*(_DWORD *)(v20 + 84))
    v30 = *(_QWORD *)(v20 + 64);
  else
    v30 = *(_QWORD *)(v20 + 64) + 1;
  v31 = (v29 + 1 + v19 + v30 + v27) & ~v19;
  if (*(_DWORD *)(v17 + 84))
    v32 = *(_QWORD *)(v17 + 64);
  else
    v32 = *(_QWORD *)(v17 + 64) + 1;
  v33 = (((v18 + 8) & ~v18) + v32 + v31 + 1 + (((v14 | v18) + 8) & ~v22) + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = v33 + 8;
  if (v33 + 8 <= v125)
    v34 = v125;
  v35 = ((v33 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v35 <= v34)
    v35 = v34;
  if (v35 <= 8)
    v36 = 8;
  else
    v36 = v35;
  if (v36 > 3)
    goto LABEL_23;
  v37 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  v38 = 2;
  if (v37 > 0xFFFA)
    v38 = 4;
  if (v37 <= 0xFA)
LABEL_23:
    v38 = 1;
  v39 = *(_DWORD *)(v139 + 80);
  v40 = v14 | v18 | ((v134 | v137) | v39) & 0xF8 | 7u;
  if (((v36 + v38 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18
    && ((v134 | v137 | v131 | v128 | *(_DWORD *)(v17 + 80) | v39) & 0x100000) == 0
    && v40 == 7)
  {
    v45 = a2;
    if (v36 > 3)
      goto LABEL_35;
    v46 = ((1 << (8 * v36)) + 1) >> (8 * v36);
    if (v46 > 0xFFFA)
    {
      v47 = *(_DWORD *)((char *)a2 + v36);
      if (v47 < 5)
        goto LABEL_44;
      goto LABEL_40;
    }
    if (v46 > 0xFA)
    {
      v47 = *(unsigned __int16 *)((char *)a2 + v36);
      if (v47 < 5)
      {
LABEL_44:
        v138 = v20;
        v49 = ~v22;
        v50 = ~(unint64_t)v131;
        v51 = ~v16;
        v52 = ~(unint64_t)v128;
        switch(v47)
        {
          case 0u:
            v44 = a1;
            (*(void (**)(id *, id *, uint64_t))(v139 + 16))(a1, a2, v107);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 16))(((unint64_t)a1 + v104) & ~v99, ((unint64_t)a2 + v104) & ~v99, v114);
            v53 = (void *)(((((unint64_t)a1 + v104) & ~v99) + v110 + v134) & ~(unint64_t)v134);
            v54 = (const void *)(((((unint64_t)a2 + v104) & ~v99) + v110 + v134) & ~(unint64_t)v134);
            if ((*(unsigned int (**)(const void *, uint64_t, size_t))(v117 + 48))(v54, 1, v120))
            {
              memcpy(v53, v54, __n);
              if (v36 > 3)
              {
LABEL_70:
                *((_BYTE *)a1 + v36) = 0;
                if (v36 <= 3)
                  goto LABEL_95;
                goto LABEL_98;
              }
            }
            else
            {
              (*(void (**)(void *, const void *, size_t))(v117 + 16))(v53, v54, v120);
              (*(void (**)(void *, _QWORD, uint64_t, size_t))(v117 + 56))(v53, 0, 1, v120);
              if (v36 > 3)
                goto LABEL_70;
            }
            v60 = ((1 << (8 * v36)) + 1) >> (8 * v36);
            if (v60 > 0xFFFA)
            {
              *(_DWORD *)((char *)a1 + v36) = 0;
              goto LABEL_109;
            }
            if (v60 > 0xFA)
            {
              *(_WORD *)((char *)a1 + v36) = 0;
              goto LABEL_109;
            }
            goto LABEL_70;
          case 1u:
            v106 = ~v19;
            v109 = ~v18;
            v112 = v26;
            v116 = v128 | 7;
            v119 = v29 + 1;
            v122 = v30;
            v127 = v18 + 8;
            v130 = v32;
            v133 = ((v18 + 8) & ~v18) + v32 + v31 + 1;
            v136 = *(_QWORD *)(v15 - 8);
            v141 = v15;
            *a1 = *a2;
            v66 = (_QWORD *)(((unint64_t)a1 + v22 + 8) & v49);
            v67 = (_QWORD *)(((unint64_t)a2 + v22 + 8) & v49);
            *v66 = *v67;
            v101 = (unint64_t)v67;
            v103 = (unint64_t)v66;
            v68 = (void *)(((unint64_t)v66 + v23) & v50);
            v69 = (const void *)(((unint64_t)v67 + v23) & v50);
            v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
            swift_retain();
            if (v70(v69, 1, AssociatedTypeWitness))
            {
              memcpy(v68, v69, v25);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v68, v69, AssociatedTypeWitness);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v68, 0, 1, AssociatedTypeWitness);
            }
            *((_BYTE *)v68 + v25) = *((_BYTE *)v69 + v25);
            v76 = (_QWORD *)((v103 + v116 + v112 + v25) & v51);
            v77 = (_QWORD *)((v101 + v116 + v112 + v25) & v51);
            *v76 = *v77;
            v78 = (void *)(((unint64_t)v76 + v28) & v52);
            v79 = (const void *)(((unint64_t)v77 + v28) & v52);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v138 + 48))(v79, 1, v124))
            {
              v80 = v122;
              memcpy(v78, v79, v122);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v138 + 16))(v78, v79, v124);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v78, 0, 1, v124);
              v80 = v122;
            }
            *((_BYTE *)v78 + v80) = *((_BYTE *)v79 + v80);
            v86 = (_QWORD *)(((unint64_t)v76 + v19 + v119 + v80) & v106);
            v87 = (_QWORD *)(((unint64_t)v77 + v19 + v119 + v80) & v106);
            *v86 = *v87;
            v88 = (void *)(((unint64_t)v86 + v127) & v109);
            v89 = (const void *)(((unint64_t)v87 + v127) & v109);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v89, 1, v141))
            {
              v90 = v130;
              memcpy(v88, v89, v130);
              v44 = a1;
              v45 = a2;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v136 + 16))(v88, v89, v141);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v88, 0, 1, v141);
              v44 = a1;
              v45 = a2;
              v90 = v130;
            }
            *((_BYTE *)v88 + v90) = *((_BYTE *)v89 + v90);
            *(_QWORD *)(((v103 | 7) + v133) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v101 | 7) + v133) & 0xFFFFFFFFFFFFF8);
            swift_retain();
            if (v36 > 3)
              goto LABEL_93;
            v93 = 1;
            v60 = ((1 << (8 * v36)) + 1) >> (8 * v36);
            if (v60 > 0xFFFA)
              goto LABEL_103;
            if (v60 > 0xFA)
              goto LABEL_108;
LABEL_93:
            v61 = 1;
            goto LABEL_94;
          case 2u:
            v105 = ~v19;
            v108 = ~v18;
            v111 = v26;
            v115 = v128 | 7;
            v118 = v29 + 1;
            v121 = v30;
            v126 = v18 + 8;
            v129 = v32;
            v132 = ((v18 + 8) & ~v18) + v32 + v31 + 1;
            v135 = *(_QWORD *)(v15 - 8);
            v140 = v15;
            *a1 = *a2;
            v55 = (_QWORD *)(((unint64_t)a1 + v22 + 8) & v49);
            v56 = (_QWORD *)(((unint64_t)a2 + v22 + 8) & v49);
            *v55 = *v56;
            v100 = (unint64_t)v56;
            v102 = (unint64_t)v55;
            v57 = (void *)(((unint64_t)v55 + v23) & v50);
            v58 = (const void *)(((unint64_t)v56 + v23) & v50);
            v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
            swift_retain();
            if (v59(v58, 1, AssociatedTypeWitness))
            {
              memcpy(v57, v58, v25);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v57, v58, AssociatedTypeWitness);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v57, 0, 1, AssociatedTypeWitness);
            }
            *((_BYTE *)v57 + v25) = *((_BYTE *)v58 + v25);
            v71 = (_QWORD *)((v102 + v115 + v111 + v25) & v51);
            v72 = (_QWORD *)((v100 + v115 + v111 + v25) & v51);
            *v71 = *v72;
            v73 = (void *)(((unint64_t)v71 + v28) & v52);
            v74 = (const void *)(((unint64_t)v72 + v28) & v52);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v138 + 48))(v74, 1, v124))
            {
              v75 = v121;
              memcpy(v73, v74, v121);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v138 + 16))(v73, v74, v124);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v73, 0, 1, v124);
              v75 = v121;
            }
            *((_BYTE *)v73 + v75) = *((_BYTE *)v74 + v75);
            v81 = (_QWORD *)(((unint64_t)v71 + v19 + v118 + v75) & v105);
            v82 = (_QWORD *)(((unint64_t)v72 + v19 + v118 + v75) & v105);
            *v81 = *v82;
            v83 = (void *)(((unint64_t)v81 + v126) & v108);
            v84 = (const void *)(((unint64_t)v82 + v126) & v108);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48))(v84, 1, v140))
            {
              v85 = v129;
              memcpy(v83, v84, v129);
              v44 = a1;
              v45 = a2;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v83, v84, v140);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v83, 0, 1, v140);
              v44 = a1;
              v45 = a2;
              v85 = v129;
            }
            *((_BYTE *)v83 + v85) = *((_BYTE *)v84 + v85);
            v91 = (_QWORD *)(((v102 | 7) + v132) & 0xFFFFFFFFFFFFF8);
            v92 = (_QWORD *)(((v100 | 7) + v132) & 0xFFFFFFFFFFFFFFF8);
            *v91 = *v92;
            *(_QWORD *)(((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFF8);
            swift_retain();
            if (v36 > 3)
              goto LABEL_88;
            v60 = ((1 << (8 * v36)) + 1) >> (8 * v36);
            if (v60 > 0xFFFA)
            {
              v93 = 2;
LABEL_103:
              *(_DWORD *)((char *)v44 + v36) = v93;
              goto LABEL_109;
            }
            if (v60 <= 0xFA)
            {
LABEL_88:
              v61 = 2;
              goto LABEL_94;
            }
            LOWORD(v93) = 2;
            goto LABEL_108;
          case 3u:
            v44 = a1;
            *a1 = *a2;
            swift_retain();
            if (v36 > 3)
              goto LABEL_53;
            v60 = ((1 << (8 * v36)) + 1) >> (8 * v36);
            if (v60 > 0xFFFA)
            {
              *(_DWORD *)((char *)a1 + v36) = 3;
              goto LABEL_109;
            }
            if (v60 <= 0xFA)
            {
LABEL_53:
              v61 = 3;
              goto LABEL_94;
            }
            LOWORD(v93) = 3;
            goto LABEL_108;
          case 4u:
            v62 = *a2;
            v63 = *a2;
            v44 = a1;
            *a1 = v62;
            if (v36 > 3)
              goto LABEL_57;
            v60 = ((1 << (8 * v36)) + 1) >> (8 * v36);
            if (v60 > 0xFFFA)
            {
              *(_DWORD *)((char *)a1 + v36) = 4;
            }
            else
            {
              if (v60 <= 0xFA)
              {
LABEL_57:
                v61 = 4;
LABEL_94:
                *((_BYTE *)v44 + v36) = v61;
                if (v36 > 3)
                  goto LABEL_98;
LABEL_95:
                v94 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                v95 = 2;
                if (v94 > 0xFFFA)
                  v95 = 4;
                if (v94 <= 0xFA)
LABEL_98:
                  v95 = 1;
LABEL_111:
                *(_QWORD *)(((unint64_t)v44 + v95 + v36 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v45 + v95 + v36 + 7) & 0xFFFFFFFFFFFFF8);
                return v44;
              }
              LOWORD(v93) = 4;
LABEL_108:
              *(_WORD *)((char *)v44 + v36) = v93;
            }
LABEL_109:
            v96 = v60 > 0xFFFA;
            v95 = 2;
            if (v96)
              v95 = 4;
            goto LABEL_111;
          default:
            if (v36 > 3)
              goto LABEL_62;
            v64 = ((1 << (8 * v36)) + 1) >> (8 * v36);
            v65 = 2;
            if (v64 > 0xFFFA)
              v65 = 4;
            if (v64 <= 0xFA)
LABEL_62:
              v65 = 1;
            v44 = a1;
            memcpy(a1, a2, v65 + v36);
            if (v36 > 3)
              goto LABEL_98;
            goto LABEL_95;
        }
      }
    }
    else
    {
LABEL_35:
      v47 = *((unsigned __int8 *)a2 + v36);
      if (v47 < 5)
        goto LABEL_44;
    }
LABEL_40:
    if (v36 <= 3)
      v48 = v36;
    else
      v48 = 4;
    __asm { BR              X15 }
  }
  v43 = (char *)*a2;
  *a1 = *a2;
  v44 = (id *)&v43[(v40 + 16) & ~v40];
  swift_retain();
  return v44;
}

id *sub_23B9EA278(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  id *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id *v46;
  void *v47;
  const void *v48;
  _QWORD *v49;
  _QWORD *v50;
  void *v51;
  const void *v52;
  unsigned int (*v53)(const void *, uint64_t, uint64_t);
  unsigned int v54;
  char v55;
  id v56;
  id v57;
  unsigned int v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  void *v62;
  const void *v63;
  unsigned int (*v64)(const void *, uint64_t, uint64_t);
  _QWORD *v65;
  _QWORD *v66;
  void *v67;
  const void *v68;
  size_t v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  const void *v73;
  size_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  unint64_t v78;
  _QWORD *v79;
  void *v80;
  const void *v81;
  size_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  void *v87;
  const void *v88;
  uint64_t v89;
  size_t v90;
  unsigned int v91;
  uint64_t v92;
  BOOL v93;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  size_t __n;
  size_t __na;
  size_t __nb;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  size_t v108;
  size_t v109;
  size_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  size_t v117;
  size_t v118;
  size_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t AssociatedTypeWitness;
  unint64_t v136;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v108 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v111 = *(_QWORD *)(v108 + 64) + v8;
  v102 = v8;
  v9 = v111 & ~v8;
  v117 = v7;
  v10 = *(_QWORD *)(v6 - 8);
  v120 = *(_QWORD *)(v7 + 64);
  v105 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v120 + v105 + v9) & ~v105;
  v126 = v10;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  __n = v12;
  v133 = v12 + v11;
  v114 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v123 = v5;
  v132 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v132 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = swift_getAssociatedTypeWitness();
  v18 = v13;
  v19 = v16 | 7;
  v20 = *(_QWORD *)(v17 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v21 | 7;
  v23 = v16 | v14 | v21 | 7;
  v24 = v14 + 8;
  v25 = (v14 + 8) & ~v14;
  if (*(_DWORD *)(v13 + 84))
    v26 = *(_QWORD *)(v13 + 64);
  else
    v26 = *(_QWORD *)(v13 + 64) + 1;
  v27 = v25 + 1;
  v28 = (v25 + 1 + v19 + v26) & ~v19;
  v29 = (v16 + 8) & ~v16;
  v131 = v15;
  if (*(_DWORD *)(v15 + 84))
    v30 = *(_QWORD *)(v15 + 64);
  else
    v30 = *(_QWORD *)(v15 + 64) + 1;
  v31 = v29 + 1;
  v32 = (v29 + 1 + v22 + v30 + v28) & ~v22;
  if (*(_DWORD *)(v20 + 84))
    v33 = *(_QWORD *)(v20 + 64);
  else
    v33 = *(_QWORD *)(v20 + 64) + 1;
  v34 = ((v21 + 8) & ~v21) + v33 + v32 + 1;
  v35 = (v34 + (((v16 | v14 | v21) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = v35 + 8;
  if (v35 + 8 <= v133)
    v36 = v133;
  v37 = ((v35 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v37 <= v36)
    v37 = v36;
  if (v37 <= 8)
    v38 = 8;
  else
    v38 = v37;
  if (v38 > 3)
    goto LABEL_22;
  v39 = ((1 << (8 * v38)) + 1) >> (8 * v38);
  if (v39 <= 0xFFFA)
  {
    if (v39 > 0xFA)
    {
      v40 = *(unsigned __int16 *)((char *)a2 + v38);
      goto LABEL_23;
    }
LABEL_22:
    v40 = *((unsigned __int8 *)a2 + v38);
LABEL_23:
    v41 = a2;
    goto LABEL_25;
  }
  v41 = a2;
  v40 = *(_DWORD *)((char *)a2 + v38);
LABEL_25:
  if (v40 >= 5)
  {
    if (v38 <= 3)
      v42 = v38;
    else
      v42 = 4;
    __asm { BR              X15 }
  }
  v134 = v27;
  v43 = ~v23;
  v44 = ~v14;
  v45 = ~v19;
  switch(v40)
  {
    case 0u:
      v46 = a1;
      (*(void (**)(id *, id *, uint64_t))(v108 + 16))(a1, v41, v114);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v117 + 16))(((unint64_t)a1 + v111) & ~v102, ((unint64_t)v41 + v111) & ~v102, v123);
      v47 = (void *)(((((unint64_t)a1 + v111) & ~v102) + v120 + v105) & ~v105);
      v48 = (const void *)(((((unint64_t)v41 + v111) & ~v102) + v120 + v105) & ~v105);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v126 + 48))(v48, 1, v6))
      {
        memcpy(v47, v48, __n);
        if (v38 > 3)
        {
LABEL_68:
          *((_BYTE *)a1 + v38) = 0;
          if (v38 <= 3)
            goto LABEL_80;
          goto LABEL_83;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v126 + 16))(v47, v48, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v47, 0, 1, v6);
        if (v38 > 3)
          goto LABEL_68;
      }
      v54 = ((1 << (8 * v38)) + 1) >> (8 * v38);
      if (v54 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v38) = 0;
        goto LABEL_96;
      }
      if (v54 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v38) = 0;
        goto LABEL_96;
      }
      goto LABEL_68;
    case 1u:
      v125 = ~v16;
      v128 = ~v22;
      v98 = ~v21;
      __nb = v16 + 8;
      v104 = v16 | 7;
      v107 = v31;
      v110 = v30;
      v113 = v21 + 8;
      v116 = *(_QWORD *)(v17 - 8);
      v119 = v33;
      v122 = v34;
      v130 = v17;
      *a1 = *v41;
      v60 = (_QWORD *)(((unint64_t)a1 + v23 + 8) & v43);
      v61 = (_QWORD *)(((unint64_t)v41 + v23 + 8) & v43);
      *v60 = *v61;
      v96 = (unint64_t)v60;
      v62 = (void *)(((unint64_t)v60 + v24) & v44);
      v63 = (const void *)(((unint64_t)v61 + v24) & v44);
      v64 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
      swift_retain();
      if (v64(v63, 1, AssociatedTypeWitness))
      {
        memcpy(v62, v63, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v62, v63, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v62, 0, 1, AssociatedTypeWitness);
      }
      v41 = a2;
      *((_BYTE *)v62 + v26) = *((_BYTE *)v63 + v26);
      v77 = (_QWORD *)((v96 + v104 + v134 + v26) & v45);
      v78 = (unint64_t)v61;
      v79 = (_QWORD *)(((unint64_t)v61 + v104 + v134 + v26) & v45);
      *v77 = *v79;
      v80 = (void *)(((unint64_t)v77 + __nb) & v125);
      v81 = (const void *)(((unint64_t)v79 + __nb) & v125);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48))(v81, 1, v132))
      {
        v82 = v110;
        memcpy(v80, v81, v110);
        v84 = v113;
        v83 = v116;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v80, v81, v132);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v80, 0, 1, v132);
        v84 = v113;
        v83 = v116;
        v82 = v110;
      }
      *((_BYTE *)v80 + v82) = *((_BYTE *)v81 + v82);
      v85 = (_QWORD *)(((unint64_t)v77 + v22 + v107 + v82) & v128);
      v86 = (_QWORD *)(((unint64_t)v79 + v22 + v107 + v82) & v128);
      *v85 = *v86;
      v87 = (void *)(((unint64_t)v85 + v84) & v98);
      v88 = (const void *)(((unint64_t)v86 + v84) & v98);
      v89 = v83;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v88, 1, v130))
      {
        v90 = v119;
        memcpy(v87, v88, v119);
        v46 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v89 + 16))(v87, v88, v130);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v87, 0, 1, v130);
        v46 = a1;
        v90 = v119;
      }
      *((_BYTE *)v87 + v90) = *((_BYTE *)v88 + v90);
      *(_QWORD *)(((v96 | 7) + v122) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v78 | 7) + v122) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v38 > 3)
        goto LABEL_78;
      v54 = ((1 << (8 * v38)) + 1) >> (8 * v38);
      if (v54 > 0xFFFA)
      {
        *(_DWORD *)((char *)v46 + v38) = 1;
      }
      else
      {
        if (v54 <= 0xFA)
        {
LABEL_78:
          v55 = 1;
          goto LABEL_79;
        }
        *(_WORD *)((char *)v46 + v38) = 1;
      }
      goto LABEL_96;
    case 2u:
      v124 = ~v16;
      v127 = ~v22;
      v97 = ~v21;
      __na = v16 + 8;
      v103 = v16 | 7;
      v106 = v31;
      v109 = v30;
      v112 = v21 + 8;
      v115 = *(_QWORD *)(v17 - 8);
      v118 = v33;
      v121 = v34;
      v129 = v17;
      *a1 = *v41;
      v49 = (_QWORD *)(((unint64_t)a1 + v23 + 8) & v43);
      v50 = (_QWORD *)(((unint64_t)v41 + v23 + 8) & v43);
      *v49 = *v50;
      v51 = (void *)(((unint64_t)v49 + v24) & v44);
      v95 = (unint64_t)v50;
      v52 = (const void *)(((unint64_t)v50 + v24) & v44);
      v53 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
      swift_retain();
      if (v53(v52, 1, AssociatedTypeWitness))
      {
        memcpy(v51, v52, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v51, v52, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v51, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v51 + v26) = *((_BYTE *)v52 + v26);
      v136 = (unint64_t)v49;
      v65 = (_QWORD *)(((unint64_t)v49 + v103 + v134 + v26) & v45);
      v66 = (_QWORD *)((v95 + v103 + v134 + v26) & v45);
      *v65 = *v66;
      v67 = (void *)(((unint64_t)v65 + __na) & v124);
      v68 = (const void *)(((unint64_t)v66 + __na) & v124);
      v41 = a2;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48))(v68, 1, v132))
      {
        v69 = v109;
        memcpy(v67, v68, v109);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v67, v68, v132);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v67, 0, 1, v132);
        v69 = v109;
      }
      *((_BYTE *)v67 + v69) = *((_BYTE *)v68 + v69);
      v70 = (_QWORD *)(((unint64_t)v65 + v22 + v106 + v69) & v127);
      v71 = (_QWORD *)(((unint64_t)v66 + v22 + v106 + v69) & v127);
      *v70 = *v71;
      v72 = (void *)(((unint64_t)v70 + v112) & v97);
      v73 = (const void *)(((unint64_t)v71 + v112) & v97);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48))(v73, 1, v129))
      {
        v74 = v118;
        memcpy(v72, v73, v118);
        v46 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v115 + 16))(v72, v73, v129);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v72, 0, 1, v129);
        v46 = a1;
        v74 = v118;
      }
      *((_BYTE *)v72 + v74) = *((_BYTE *)v73 + v74);
      v75 = (_QWORD *)(((v136 | 7) + v121) & 0xFFFFFFFFFFFFF8);
      v76 = (_QWORD *)(((v95 | 7) + v121) & 0xFFFFFFFFFFFFFFF8);
      *v75 = *v76;
      *(_QWORD *)(((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v38 > 3)
        goto LABEL_64;
      v54 = ((1 << (8 * v38)) + 1) >> (8 * v38);
      if (v54 > 0xFFFA)
      {
        *(_DWORD *)((char *)v46 + v38) = 2;
      }
      else
      {
        if (v54 <= 0xFA)
        {
LABEL_64:
          v55 = 2;
          goto LABEL_79;
        }
        *(_WORD *)((char *)v46 + v38) = 2;
      }
      goto LABEL_96;
    case 3u:
      v46 = a1;
      *a1 = *v41;
      swift_retain();
      if (v38 > 3)
        goto LABEL_40;
      v54 = ((1 << (8 * v38)) + 1) >> (8 * v38);
      if (v54 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v38) = 3;
      }
      else
      {
        if (v54 <= 0xFA)
        {
LABEL_40:
          v55 = 3;
          goto LABEL_79;
        }
        *(_WORD *)((char *)a1 + v38) = 3;
      }
      goto LABEL_96;
    case 4u:
      v56 = *v41;
      v57 = *v41;
      v46 = a1;
      *a1 = v56;
      if (v38 > 3)
        goto LABEL_44;
      v54 = ((1 << (8 * v38)) + 1) >> (8 * v38);
      if (v54 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v38) = 4;
        goto LABEL_96;
      }
      if (v54 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v38) = 4;
LABEL_96:
        v93 = v54 > 0xFFFA;
        v92 = 2;
        if (v93)
          v92 = 4;
        goto LABEL_98;
      }
LABEL_44:
      v55 = 4;
LABEL_79:
      *((_BYTE *)v46 + v38) = v55;
      if (v38 > 3)
        goto LABEL_83;
LABEL_80:
      v91 = ((1 << (8 * v38)) + 1) >> (8 * v38);
      v92 = 2;
      if (v91 > 0xFFFA)
        v92 = 4;
      if (v91 <= 0xFA)
LABEL_83:
        v92 = 1;
LABEL_98:
      *(_QWORD *)(((unint64_t)v46 + v92 + v38 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v41
                                                                                             + v92
                                                                                             + v38
                                                                                             + 7) & 0xFFFFFFFFFFFFF8);
      return v46;
    default:
      if (v38 > 3)
        goto LABEL_49;
      v58 = ((1 << (8 * v38)) + 1) >> (8 * v38);
      v59 = 2;
      if (v58 > 0xFFFA)
        v59 = 4;
      if (v58 <= 0xFA)
LABEL_49:
        v59 = 1;
      v46 = a1;
      memcpy(a1, v41, v59 + v38);
      if (v38 > 3)
        goto LABEL_83;
      goto LABEL_80;
  }
}

id *sub_23B9EADD0(id *a1, id *a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  _QWORD *v51;
  _QWORD *v52;
  void *v53;
  const void *v54;
  unsigned int (*v55)(const void *, uint64_t, uint64_t);
  size_t v56;
  uint64_t v57;
  unsigned int v58;
  id v59;
  id v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  const void *v67;
  unsigned int (*v68)(const void *, uint64_t, uint64_t);
  size_t v69;
  uint64_t v70;
  unsigned int v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  const void *v75;
  size_t v76;
  _QWORD *v77;
  _QWORD *v78;
  void *v79;
  const void *v80;
  size_t v81;
  _QWORD *v82;
  _QWORD *v83;
  void *v84;
  const void *v85;
  size_t v86;
  _QWORD *v87;
  _QWORD *v88;
  void *v89;
  const void *v90;
  size_t v91;
  _QWORD *v92;
  _QWORD *v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  uint64_t v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unsigned int v119;
  uint64_t v120;
  id *result;
  uint64_t v122;
  size_t __n;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  size_t v135;
  uint64_t v136;
  size_t v137;
  uint64_t v138;
  uint64_t v139;
  size_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t AssociatedTypeWitness;
  unint64_t v158;
  char v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v3 = a3;
  if (a1 == a2)
    goto LABEL_123;
  v4 = a3[2];
  v5 = v3[3];
  v129 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v130 = *(_QWORD *)(v129 + 64) + v7;
  v155 = v7;
  v8 = v130 & ~v7;
  v132 = v6;
  v9 = v3[4];
  v10 = *(_QWORD *)(v9 - 8);
  v133 = *(_QWORD *)(v6 + 64);
  v160 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v133 + v160 + v8) & ~v160;
  v141 = v10;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  __n = v12;
  v158 = v12 + v11;
  v131 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v134 = v5;
  v164 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v164 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v16 | 7;
  v154 = v3;
  v142 = v9;
  v153 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v153 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v19 | 7;
  v21 = v16 | v14 | v19 | 7;
  v148 = v14 + 8;
  v152 = v13;
  if (*(_DWORD *)(v13 + 84))
    v22 = *(_QWORD *)(v13 + 64);
  else
    v22 = *(_QWORD *)(v13 + 64) + 1;
  v135 = v22;
  v136 = ((v14 + 8) & ~v14) + v22 + 1;
  v23 = v136 + v17;
  v163 = v16 | 7;
  v24 = v16 + 8;
  if (*(_DWORD *)(v15 + 84))
    v25 = *(_QWORD *)(v15 + 64);
  else
    v25 = *(_QWORD *)(v15 + 64) + 1;
  v137 = v25;
  v138 = ((v16 + 8) & ~v16) + v25 + 1;
  v26 = v138 + v20;
  v149 = v19 + 8;
  v150 = *(_QWORD *)(v153 - 8);
  if (*(_DWORD *)(v18 + 84))
    v27 = *(_QWORD *)(v18 + 64);
  else
    v27 = *(_QWORD *)(v18 + 64) + 1;
  v140 = v27;
  v151 = ((v19 + 8) & ~v19) + v27 + ((v138 + v20 + (v23 & ~v17)) & ~v20) + 1;
  v28 = (v151 + (((v16 | v14 | v19) + 8) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = v28 + 8;
  if (v28 + 8 <= v158)
    v29 = v158;
  v30 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29)
    v30 = v29;
  if (v30 <= 8)
    v31 = 8;
  else
    v31 = v30;
  if (v31 > 3)
    goto LABEL_23;
  v32 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  if (v32 <= 0xFFFA)
  {
    if (v32 > 0xFA)
    {
      v33 = *(unsigned __int16 *)((char *)a1 + v31);
      if (v33 < 5)
        goto LABEL_33;
      goto LABEL_29;
    }
LABEL_23:
    v33 = *((unsigned __int8 *)a1 + v31);
    if (v33 < 5)
      goto LABEL_33;
LABEL_29:
    if (v31 <= 3)
      v34 = v31;
    else
      v34 = 4;
    __asm { BR              X13 }
  }
  v33 = *(_DWORD *)((char *)a1 + v31);
  if (v33 >= 5)
    goto LABEL_29;
LABEL_33:
  v159 = 8 * v31;
  v128 = ~v155;
  v35 = ~v160;
  v147 = v16 | v14 | v19 | 7;
  v143 = ~v21;
  v144 = ~v14;
  v145 = ~v163;
  v146 = ~v16;
  v139 = v19 | 7;
  v156 = ~v20;
  v36 = ~v19;
  switch(v33)
  {
    case 0u:
      (*(void (**)(id *, uint64_t))(v129 + 8))(a1, v131);
      (*(void (**)(unint64_t, uint64_t))(v132 + 8))(((unint64_t)a1 + v130) & v128, v134);
      v37 = ((((unint64_t)a1 + v130) & v128) + v133 + v160) & v35;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v141 + 48))(v37, 1, v142))
        (*(void (**)(unint64_t, uint64_t))(v141 + 8))(v37, v142);
      break;
    case 1u:
      v122 = ~v160;
      v125 = ~v19;
      swift_release();
      v42 = ((unint64_t)a1 + v147 + 8) & v143;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))((v148 + v42) & v144, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v13 + 8))((v148 + v42) & v144, AssociatedTypeWitness);
      v43 = (v23 + v42) & v145;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v24 + v43) & v146, 1, v164))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v24 + v43) & v146, v164);
      v44 = (v26 + v43) & v156;
      v36 = v125;
      v45 = (v149 + v44) & v125;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v45, 1, v153))
        (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v45, v153);
      goto LABEL_51;
    case 2u:
      v122 = ~v160;
      v124 = ~v19;
      swift_release();
      v38 = ((unint64_t)a1 + v147 + 8) & v143;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))((v148 + v38) & v144, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v13 + 8))((v148 + v38) & v144, AssociatedTypeWitness);
      v39 = (v23 + v38) & v145;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v24 + v39) & v146, 1, v164))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v24 + v39) & v146, v164);
      v40 = (v26 + v39) & v156;
      v36 = v124;
      v41 = (v149 + v40) & v124;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v41, 1, v153))
        (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v41, v153);
LABEL_51:
      swift_release();
      v35 = v122;
      break;
    case 3u:
      swift_release();
      break;
    case 4u:

      break;
    default:
      break;
  }
  if (v31 > 3)
    goto LABEL_55;
  v46 = ((1 << v159) + 1) >> v159;
  if (v46 <= 0xFFFA)
  {
    if (v46 > 0xFA)
    {
      v47 = *(unsigned __int16 *)((char *)a2 + v31);
      if (v47 < 5)
        goto LABEL_64;
      goto LABEL_60;
    }
LABEL_55:
    v47 = *((unsigned __int8 *)a2 + v31);
    if (v47 < 5)
      goto LABEL_64;
LABEL_60:
    if (v31 <= 3)
      v48 = v31;
    else
      v48 = 4;
    __asm { BR              X12 }
  }
  v47 = *(_DWORD *)((char *)a2 + v31);
  if (v47 >= 5)
    goto LABEL_60;
LABEL_64:
  switch(v47)
  {
    case 0u:
      (*(void (**)(id *, id *, uint64_t))(v129 + 16))(a1, a2, v131);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v132 + 16))(((unint64_t)a1 + v130) & v128, ((unint64_t)a2 + v130) & v128, v134);
      v49 = (void *)(((((unint64_t)a1 + v130) & v128) + v133 + v160) & v35);
      v50 = (const void *)(((((unint64_t)a2 + v130) & v128) + v133 + v160) & v35);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v141 + 48))(v50, 1, v142))
      {
        memcpy(v49, v50, __n);
        if (v31 > 3)
          goto LABEL_89;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v141 + 16))(v49, v50, v142);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v49, 0, 1, v142);
        if (v31 > 3)
        {
LABEL_89:
          *((_BYTE *)a1 + v31) = 0;
          goto LABEL_122;
        }
      }
      v71 = ((1 << v159) + 1) >> v159;
      if (v71 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v31) = 0;
      }
      else
      {
        if (v71 <= 0xFA)
          goto LABEL_89;
        *(_WORD *)((char *)a1 + v31) = 0;
      }
LABEL_122:
      v3 = v154;
      break;
    case 1u:
      v127 = v36;
      *a1 = *a2;
      v64 = (_QWORD *)(((unint64_t)a1 + v147 + 8) & v143);
      v65 = (_QWORD *)(((unint64_t)a2 + v147 + 8) & v143);
      *v64 = *v65;
      v162 = (unint64_t)v64;
      v66 = (void *)(((unint64_t)v64 + v148) & v144);
      v67 = (const void *)(((unint64_t)v65 + v148) & v144);
      v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v152 + 48);
      swift_retain();
      if (v68(v67, 1, AssociatedTypeWitness))
      {
        v69 = v135;
        memcpy(v66, v67, v135);
        v70 = v15;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v152 + 16))(v66, v67, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v66, 0, 1, AssociatedTypeWitness);
        v70 = v15;
        v69 = v135;
      }
      *((_BYTE *)v66 + v69) = *((_BYTE *)v67 + v69);
      v77 = (_QWORD *)((v162 + v163 + v136) & v145);
      v78 = (_QWORD *)(((unint64_t)v65 + v163 + v136) & v145);
      *v77 = *v78;
      v79 = (void *)(((unint64_t)v77 + v24) & v146);
      v80 = (const void *)(((unint64_t)v78 + v24) & v146);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v70 + 48))(v80, 1, v164))
      {
        v81 = v137;
        memcpy(v79, v80, v137);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v70 + 16))(v79, v80, v164);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v79, 0, 1, v164);
        v81 = v137;
      }
      *((_BYTE *)v79 + v81) = *((_BYTE *)v80 + v81);
      v87 = (_QWORD *)(((unint64_t)v77 + v139 + v138) & v156);
      v88 = (_QWORD *)(((unint64_t)v78 + v139 + v138) & v156);
      *v87 = *v88;
      v89 = (void *)(((unint64_t)v87 + v149) & v127);
      v90 = (const void *)(((unint64_t)v88 + v149) & v127);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v150 + 48))(v90, 1, v153))
      {
        v91 = v140;
        memcpy(v89, v90, v140);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v150 + 16))(v89, v90, v153);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v89, 0, 1, v153);
        v91 = v140;
      }
      *((_BYTE *)v89 + v91) = *((_BYTE *)v90 + v91);
      *(_QWORD *)(((v162 | 7) + v151) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((((unint64_t)a2 + v147 + 8) & v143 | 7)
                                                                         + v151) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 > 3)
        goto LABEL_111;
      v95 = 1;
      v96 = ((1 << v159) + 1) >> v159;
      if (v96 > 0xFFFA)
        goto LABEL_114;
      if (v96 > 0xFA)
        goto LABEL_121;
LABEL_111:
      *((_BYTE *)a1 + v31) = 1;
      goto LABEL_122;
    case 2u:
      v126 = v36;
      *a1 = *a2;
      v51 = (_QWORD *)(((unint64_t)a1 + v147 + 8) & v143);
      v52 = (_QWORD *)(((unint64_t)a2 + v147 + 8) & v143);
      *v51 = *v52;
      v161 = (unint64_t)v51;
      v53 = (void *)(((unint64_t)v51 + v148) & v144);
      v54 = (const void *)(((unint64_t)v52 + v148) & v144);
      v55 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v152 + 48);
      swift_retain();
      if (v55(v54, 1, AssociatedTypeWitness))
      {
        v56 = v135;
        memcpy(v53, v54, v135);
        v57 = v15;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v152 + 16))(v53, v54, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v53, 0, 1, AssociatedTypeWitness);
        v57 = v15;
        v56 = v135;
      }
      *((_BYTE *)v53 + v56) = *((_BYTE *)v54 + v56);
      v72 = (_QWORD *)((v161 + v163 + v136) & v145);
      v73 = (_QWORD *)(((unint64_t)v52 + v163 + v136) & v145);
      *v72 = *v73;
      v74 = (void *)(((unint64_t)v72 + v24) & v146);
      v75 = (const void *)(((unint64_t)v73 + v24) & v146);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48))(v75, 1, v164))
      {
        v76 = v137;
        memcpy(v74, v75, v137);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v74, v75, v164);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v74, 0, 1, v164);
        v76 = v137;
      }
      *((_BYTE *)v74 + v76) = *((_BYTE *)v75 + v76);
      v82 = (_QWORD *)(((unint64_t)v72 + v139 + v138) & v156);
      v83 = (_QWORD *)(((unint64_t)v73 + v139 + v138) & v156);
      *v82 = *v83;
      v84 = (void *)(((unint64_t)v82 + v149) & v126);
      v85 = (const void *)(((unint64_t)v83 + v149) & v126);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v150 + 48))(v85, 1, v153))
      {
        v86 = v140;
        memcpy(v84, v85, v140);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v150 + 16))(v84, v85, v153);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v84, 0, 1, v153);
        v86 = v140;
      }
      *((_BYTE *)v84 + v86) = *((_BYTE *)v85 + v86);
      v92 = (_QWORD *)(((v161 | 7) + v151) & 0xFFFFFFFFFFFFF8);
      v93 = (_QWORD *)(((((unint64_t)a2 + v147 + 8) & v143 | 7) + v151) & 0xFFFFFFFFFFFFFFF8);
      *v92 = *v93;
      *(_QWORD *)(((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 > 3)
        goto LABEL_106;
      v94 = ((1 << v159) + 1) >> v159;
      if (v94 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v31) = 2;
        goto LABEL_122;
      }
      if (v94 <= 0xFA)
      {
LABEL_106:
        *((_BYTE *)a1 + v31) = 2;
        goto LABEL_122;
      }
      LOWORD(v95) = 2;
      goto LABEL_121;
    case 3u:
      *a1 = *a2;
      swift_retain();
      if (v31 > 3)
        goto LABEL_73;
      v58 = ((1 << v159) + 1) >> v159;
      if (v58 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v31) = 3;
        goto LABEL_122;
      }
      if (v58 <= 0xFA)
      {
LABEL_73:
        *((_BYTE *)a1 + v31) = 3;
        goto LABEL_122;
      }
      LOWORD(v95) = 3;
      goto LABEL_121;
    case 4u:
      v59 = *a2;
      v60 = *a2;
      *a1 = v59;
      if (v31 > 3)
        goto LABEL_77;
      v61 = ((1 << v159) + 1) >> v159;
      if (v61 > 0xFFFA)
      {
        v95 = 4;
LABEL_114:
        *(_DWORD *)((char *)a1 + v31) = v95;
      }
      else if (v61 > 0xFA)
      {
        LOWORD(v95) = 4;
LABEL_121:
        *(_WORD *)((char *)a1 + v31) = v95;
      }
      else
      {
LABEL_77:
        *((_BYTE *)a1 + v31) = 4;
      }
      goto LABEL_122;
    default:
      if (v31 > 3)
        goto LABEL_82;
      v62 = ((1 << v159) + 1) >> v159;
      v63 = 2;
      if (v62 > 0xFFFA)
        v63 = 4;
      if (v62 <= 0xFA)
LABEL_82:
        v63 = 1;
      v3 = v154;
      memcpy(a1, a2, v63 + v31);
      break;
  }
LABEL_123:
  v97 = *(_QWORD *)(v3[4] - 8);
  v98 = (((*(_QWORD *)(*(_QWORD *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(v3[3] - 8) + 64)
       + *(unsigned __int8 *)(v97 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  v99 = *(_DWORD *)(v97 + 84);
  v100 = *(_QWORD *)(v97 + 64);
  if (v99)
    v101 = v100;
  else
    v101 = v100 + 1;
  v102 = v101 + v98;
  v103 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v104 = *(unsigned __int8 *)(v103 + 80);
  v105 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v106 = *(unsigned __int8 *)(v105 + 80);
  v107 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v108 = *(unsigned __int8 *)(v107 + 80);
  v109 = v108 | 7;
  v110 = ((v104 + 8) & ~v104) + (v106 | 7) + *(_QWORD *)(v103 + 64);
  if (!*(_DWORD *)(v103 + 84))
    ++v110;
  v111 = (v110 + 1) & ~(v106 | 7);
  v112 = ((v106 + 8) & ~v106) + v109 + *(_QWORD *)(v105 + 64);
  if (!*(_DWORD *)(v105 + 84))
    ++v112;
  v113 = (v112 + v111 + 1) & ~v109;
  v114 = *(_DWORD *)(v107 + 84);
  v115 = ((v108 + 8) & ~v108)
       + *(_QWORD *)(v107 + 64)
       + (((v106 | v104 | v108) & 0xF8 ^ 0x1F8) & ((v106 | v104 | v108) + 8));
  if (!v114)
    ++v115;
  v116 = (v115 + v113 + 8) & 0xFFFFFFFFFFFFFFF8;
  v117 = v116 + 8;
  if (v116 + 8 <= v102)
    v117 = v102;
  v118 = ((v116 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v118 <= v117)
    v118 = v117;
  if (v118 <= 8)
    v118 = 8;
  if (v118 > 3)
    goto LABEL_142;
  v119 = ((1 << (8 * v118)) + 1) >> (8 * v118);
  v120 = 2;
  if (v119 > 0xFFFA)
    v120 = 4;
  if (v119 <= 0xFA)
LABEL_142:
    v120 = 1;
  result = a1;
  *(_QWORD *)(((unint64_t)a1 + v120 + v118 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2
                                                                                          + v120
                                                                                          + v118
                                                                                          + 7) & 0xFFFFFFFFFFFFF8);
  return result;
}

_QWORD *sub_23B9EBE4C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  _QWORD *v52;
  void *v53;
  const void *v54;
  unsigned int v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  const void *v62;
  _QWORD *v63;
  _QWORD *v64;
  void *v65;
  const void *v66;
  size_t v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  const void *v71;
  size_t v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  void *v77;
  const void *v78;
  size_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  void *v84;
  const void *v85;
  uint64_t v86;
  size_t v87;
  unsigned int v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v92;
  unint64_t v93;
  size_t __n;
  size_t __na;
  size_t __nb;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  size_t v106;
  size_t v107;
  size_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  size_t v115;
  size_t v116;
  size_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t AssociatedTypeWitness;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v103 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v106 = *(_QWORD *)(v103 + 64) + v8;
  v97 = v8;
  v9 = v106 & ~v8;
  v112 = v7;
  v10 = *(_QWORD *)(v6 - 8);
  v115 = *(_QWORD *)(v7 + 64);
  v100 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v115 + v100 + v9) & ~v100;
  v121 = v10;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  __n = v12;
  v128 = v12 + v11;
  v109 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v118 = v5;
  v127 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v127 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = swift_getAssociatedTypeWitness();
  v18 = v13;
  v19 = v16 | 7;
  v20 = *(_QWORD *)(v17 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v21 | 7;
  v23 = v16 | v14 | v21 | 7;
  v24 = v14 + 8;
  v25 = (v14 + 8) & ~v14;
  if (*(_DWORD *)(v13 + 84))
    v26 = *(_QWORD *)(v13 + 64);
  else
    v26 = *(_QWORD *)(v13 + 64) + 1;
  v27 = v25 + 1;
  v28 = (v25 + 1 + (v16 | 7) + v26) & ~(v16 | 7);
  v29 = v16 + 8;
  v30 = (v16 + 8) & ~v16;
  v126 = v15;
  if (*(_DWORD *)(v15 + 84))
    v31 = *(_QWORD *)(v15 + 64);
  else
    v31 = *(_QWORD *)(v15 + 64) + 1;
  v32 = v30 + 1;
  v33 = (v30 + 1 + v22 + v31 + v28) & ~v22;
  if (*(_DWORD *)(v20 + 84))
    v34 = *(_QWORD *)(v20 + 64);
  else
    v34 = *(_QWORD *)(v20 + 64) + 1;
  v35 = ((v21 + 8) & ~v21) + v34 + v33 + 1;
  v36 = (v35 + (((v16 | v14 | v21) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = v36 + 8;
  if (v36 + 8 <= v128)
    v37 = v128;
  v38 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37)
    v38 = v37;
  if (v38 <= 8)
    v39 = 8;
  else
    v39 = v38;
  if (v39 > 3)
    goto LABEL_22;
  v40 = ((1 << (8 * v39)) + 1) >> (8 * v39);
  if (v40 <= 0xFFFA)
  {
    if (v40 > 0xFA)
    {
      v41 = *(unsigned __int16 *)((char *)a2 + v39);
      goto LABEL_23;
    }
LABEL_22:
    v41 = *((unsigned __int8 *)a2 + v39);
LABEL_23:
    v42 = a2;
    goto LABEL_25;
  }
  v42 = a2;
  v41 = *(_DWORD *)((char *)a2 + v39);
LABEL_25:
  if (v41 >= 5)
  {
    if (v39 <= 3)
      v43 = v39;
    else
      v43 = 4;
    __asm { BR              X15 }
  }
  v44 = ~v23;
  v45 = ~v14;
  v46 = ~v19;
  v47 = ~v16;
  switch(v41)
  {
    case 0u:
      v48 = a1;
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v103 + 32))(a1, v42, v109);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 32))(((unint64_t)a1 + v106) & ~v97, ((unint64_t)v42 + v106) & ~v97, v118);
      v49 = (void *)(((((unint64_t)a1 + v106) & ~v97) + v115 + v100) & ~v100);
      v50 = (const void *)(((((unint64_t)v42 + v106) & ~v97) + v115 + v100) & ~v100);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48))(v50, 1, v6))
      {
        memcpy(v49, v50, __n);
        if (v39 > 3)
        {
LABEL_68:
          *((_BYTE *)a1 + v39) = 0;
          if (v39 <= 3)
            goto LABEL_80;
          goto LABEL_83;
        }
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v121 + 32))(v49, v50, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v49, 0, 1, v6);
        if (v39 > 3)
          goto LABEL_68;
      }
      v55 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v55 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 0;
        goto LABEL_96;
      }
      if (v55 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 0;
        goto LABEL_96;
      }
      goto LABEL_68;
    case 1u:
      v123 = ~v22;
      v125 = v27;
      __nb = ~v21;
      v99 = v19;
      v102 = v29;
      v105 = v32;
      v108 = v31;
      v111 = v21 + 8;
      v114 = *(_QWORD *)(v17 - 8);
      v117 = v34;
      v120 = v35;
      v130 = v17;
      *a1 = *v42;
      v59 = ((unint64_t)a1 + v23 + 8) & v44;
      v60 = (_QWORD *)(((unint64_t)v42 + v23 + 8) & v44);
      *(_QWORD *)v59 = *v60;
      v61 = (void *)((v24 + v59) & v45);
      v93 = (unint64_t)v60;
      v62 = (const void *)(((unint64_t)v60 + v24) & v45);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v62, 1, AssociatedTypeWitness))
      {
        memcpy(v61, v62, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v61, v62, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v61, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v61 + v26) = *((_BYTE *)v62 + v26);
      v75 = (_QWORD *)((v59 + v99 + v125 + v26) & v46);
      v76 = (_QWORD *)((v93 + v99 + v125 + v26) & v46);
      *v75 = *v76;
      v77 = (void *)(((unint64_t)v75 + v102) & v47);
      v78 = (const void *)(((unint64_t)v76 + v102) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v126 + 48))(v78, 1, v127))
      {
        v79 = v108;
        memcpy(v77, v78, v108);
        v42 = a2;
        v81 = v111;
        v80 = v114;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v126 + 32))(v77, v78, v127);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v77, 0, 1, v127);
        v42 = a2;
        v81 = v111;
        v80 = v114;
        v79 = v108;
      }
      *((_BYTE *)v77 + v79) = *((_BYTE *)v78 + v79);
      v82 = (_QWORD *)(((unint64_t)v75 + v22 + v105 + v79) & v123);
      v83 = (_QWORD *)(((unint64_t)v76 + v22 + v105 + v79) & v123);
      *v82 = *v83;
      v84 = (void *)(((unint64_t)v82 + v81) & __nb);
      v85 = (const void *)(((unint64_t)v83 + v81) & __nb);
      v86 = v80;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v80 + 48))(v85, 1, v130))
      {
        v87 = v117;
        memcpy(v84, v85, v117);
        v48 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v86 + 32))(v84, v85, v130);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v84, 0, 1, v130);
        v48 = a1;
        v87 = v117;
      }
      *((_BYTE *)v84 + v87) = *((_BYTE *)v85 + v87);
      *(_QWORD *)(((v59 | 7) + v120) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v93 | 7) + v120) & 0xFFFFFFFFFFFFF8);
      if (v39 > 3)
        goto LABEL_78;
      v55 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v55 > 0xFFFA)
      {
        *(_DWORD *)((char *)v48 + v39) = 1;
      }
      else
      {
        if (v55 <= 0xFA)
        {
LABEL_78:
          v56 = 1;
          goto LABEL_79;
        }
        *(_WORD *)((char *)v48 + v39) = 1;
      }
      goto LABEL_96;
    case 2u:
      v122 = ~v22;
      v124 = v27;
      __na = ~v21;
      v98 = v19;
      v101 = v29;
      v104 = v32;
      v107 = v31;
      v110 = v21 + 8;
      v113 = *(_QWORD *)(v17 - 8);
      v116 = v34;
      v119 = v35;
      v129 = v17;
      *a1 = *v42;
      v51 = ((unint64_t)a1 + v23 + 8) & v44;
      v52 = (_QWORD *)(((unint64_t)v42 + v23 + 8) & v44);
      *(_QWORD *)v51 = *v52;
      v53 = (void *)((v24 + v51) & v45);
      v92 = (unint64_t)v52;
      v54 = (const void *)(((unint64_t)v52 + v24) & v45);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v54, 1, AssociatedTypeWitness))
      {
        memcpy(v53, v54, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v53, v54, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v53, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v53 + v26) = *((_BYTE *)v54 + v26);
      v63 = (_QWORD *)((v51 + v98 + v124 + v26) & v46);
      v64 = (_QWORD *)((v92 + v98 + v124 + v26) & v46);
      *v63 = *v64;
      v65 = (void *)(((unint64_t)v63 + v101) & v47);
      v66 = (const void *)(((unint64_t)v64 + v101) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v126 + 48))(v66, 1, v127))
      {
        v67 = v107;
        memcpy(v65, v66, v107);
        v42 = a2;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v126 + 32))(v65, v66, v127);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v65, 0, 1, v127);
        v42 = a2;
        v67 = v107;
      }
      *((_BYTE *)v65 + v67) = *((_BYTE *)v66 + v67);
      v68 = (_QWORD *)(((unint64_t)v63 + v22 + v104 + v67) & v122);
      v69 = (_QWORD *)(((unint64_t)v64 + v22 + v104 + v67) & v122);
      *v68 = *v69;
      v70 = (void *)(((unint64_t)v68 + v110) & __na);
      v71 = (const void *)(((unint64_t)v69 + v110) & __na);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v113 + 48))(v71, 1, v129))
      {
        v72 = v116;
        memcpy(v70, v71, v116);
        v48 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v113 + 32))(v70, v71, v129);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v70, 0, 1, v129);
        v48 = a1;
        v72 = v116;
      }
      *((_BYTE *)v70 + v72) = *((_BYTE *)v71 + v72);
      v73 = (_QWORD *)(((v51 | 7) + v119) & 0xFFFFFFFFFFFFF8);
      v74 = (_QWORD *)(((v92 | 7) + v119) & 0xFFFFFFFFFFFFFFF8);
      *v73 = *v74;
      *(_QWORD *)(((unint64_t)v73 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFF8);
      if (v39 > 3)
        goto LABEL_64;
      v55 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v55 > 0xFFFA)
      {
        *(_DWORD *)((char *)v48 + v39) = 2;
      }
      else
      {
        if (v55 <= 0xFA)
        {
LABEL_64:
          v56 = 2;
          goto LABEL_79;
        }
        *(_WORD *)((char *)v48 + v39) = 2;
      }
      goto LABEL_96;
    case 3u:
      v48 = a1;
      *a1 = *v42;
      if (v39 > 3)
        goto LABEL_40;
      v55 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v55 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 3;
      }
      else
      {
        if (v55 <= 0xFA)
        {
LABEL_40:
          v56 = 3;
          goto LABEL_79;
        }
        *(_WORD *)((char *)a1 + v39) = 3;
      }
      goto LABEL_96;
    case 4u:
      v48 = a1;
      *a1 = *v42;
      if (v39 > 3)
        goto LABEL_44;
      v55 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v55 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 4;
        goto LABEL_96;
      }
      if (v55 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 4;
LABEL_96:
        v90 = v55 > 0xFFFA;
        v89 = 2;
        if (v90)
          v89 = 4;
        goto LABEL_98;
      }
LABEL_44:
      v56 = 4;
LABEL_79:
      *((_BYTE *)v48 + v39) = v56;
      if (v39 > 3)
        goto LABEL_83;
LABEL_80:
      v88 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      v89 = 2;
      if (v88 > 0xFFFA)
        v89 = 4;
      if (v88 <= 0xFA)
LABEL_83:
        v89 = 1;
LABEL_98:
      *(_QWORD *)(((unint64_t)v48 + v89 + v39 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v42
                                                                                             + v89
                                                                                             + v39
                                                                                             + 7) & 0xFFFFFFFFFFFFF8);
      return v48;
    default:
      if (v39 > 3)
        goto LABEL_49;
      v57 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      v58 = 2;
      if (v57 > 0xFFFA)
        v58 = 4;
      if (v57 <= 0xFA)
LABEL_49:
        v58 = 1;
      v48 = a1;
      memcpy(a1, v42, v58 + v39);
      if (v39 > 3)
        goto LABEL_83;
      goto LABEL_80;
  }
}

id *sub_23B9EC974(id *a1, id *a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  _QWORD *v49;
  _QWORD *v50;
  void *v51;
  const void *v52;
  size_t v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  void *v61;
  const void *v62;
  size_t v63;
  uint64_t v64;
  unsigned int v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  uint64_t v71;
  size_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  size_t v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  const void *v83;
  size_t v84;
  _QWORD *v85;
  _QWORD *v86;
  void *v87;
  const void *v88;
  size_t v89;
  _QWORD *v90;
  _QWORD *v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unsigned int v117;
  uint64_t v118;
  id *result;
  uint64_t v120;
  uint64_t v121;
  size_t __n;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  size_t v130;
  uint64_t v131;
  size_t v132;
  uint64_t v133;
  uint64_t v134;
  size_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t AssociatedTypeWitness;
  unint64_t v152;
  char v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;

  v3 = a3;
  if (a1 == a2)
    goto LABEL_123;
  v4 = a3[2];
  v5 = v3[3];
  v124 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v125 = *(_QWORD *)(v124 + 64) + v7;
  v149 = v7;
  v8 = v125 & ~v7;
  v127 = v6;
  v9 = v3[4];
  v10 = *(_QWORD *)(v9 - 8);
  v128 = *(_QWORD *)(v6 + 64);
  v154 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v128 + v154 + v8) & ~v154;
  v136 = v10;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  __n = v12;
  v152 = v12 + v11;
  v126 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v129 = v5;
  v158 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v158 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v16 | 7;
  v148 = v3;
  v146 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v146 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v19 | 7;
  v21 = v16 | v14 | v19 | 7;
  v141 = v14 + 8;
  v147 = v13;
  if (*(_DWORD *)(v13 + 84))
    v22 = *(_QWORD *)(v13 + 64);
  else
    v22 = *(_QWORD *)(v13 + 64) + 1;
  v130 = v22;
  v131 = ((v14 + 8) & ~v14) + v22 + 1;
  v23 = v131 + v17;
  v157 = v16 | 7;
  v24 = v16 + 8;
  if (*(_DWORD *)(v15 + 84))
    v25 = *(_QWORD *)(v15 + 64);
  else
    v25 = *(_QWORD *)(v15 + 64) + 1;
  v132 = v25;
  v133 = ((v16 + 8) & ~v16) + v25 + 1;
  v26 = v133 + v20;
  v143 = v19 + 8;
  v144 = *(_QWORD *)(v146 - 8);
  if (*(_DWORD *)(v18 + 84))
    v27 = *(_QWORD *)(v18 + 64);
  else
    v27 = *(_QWORD *)(v18 + 64) + 1;
  v135 = v27;
  v145 = ((v19 + 8) & ~v19) + v27 + ((v133 + v20 + (v23 & ~v17)) & ~v20) + 1;
  v28 = (v145 + (((v16 | v14 | v19) + 8) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = v28 + 8;
  if (v28 + 8 <= v152)
    v29 = v152;
  v30 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29)
    v30 = v29;
  if (v30 <= 8)
    v31 = 8;
  else
    v31 = v30;
  if (v31 > 3)
    goto LABEL_23;
  v32 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  if (v32 <= 0xFFFA)
  {
    if (v32 > 0xFA)
    {
      v33 = *(unsigned __int16 *)((char *)a1 + v31);
      if (v33 < 5)
        goto LABEL_33;
      goto LABEL_29;
    }
LABEL_23:
    v33 = *((unsigned __int8 *)a1 + v31);
    if (v33 < 5)
      goto LABEL_33;
LABEL_29:
    if (v31 <= 3)
      v34 = v31;
    else
      v34 = 4;
    __asm { BR              X13 }
  }
  v33 = *(_DWORD *)((char *)a1 + v31);
  if (v33 >= 5)
    goto LABEL_29;
LABEL_33:
  v153 = 8 * v31;
  v123 = ~v149;
  v35 = ~v154;
  v140 = v16 | v14 | v19 | 7;
  v137 = ~v21;
  v138 = ~v14;
  v139 = ~v157;
  v36 = ~v16;
  v134 = v19 | 7;
  v142 = ~v20;
  v150 = ~v19;
  switch(v33)
  {
    case 0u:
      (*(void (**)(id *, uint64_t))(v124 + 8))(a1, v126);
      (*(void (**)(unint64_t, uint64_t))(v127 + 8))(((unint64_t)a1 + v125) & v123, v129);
      v37 = ((((unint64_t)a1 + v125) & v123) + v128 + v154) & v35;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v136 + 48))(v37, 1, v9))
        (*(void (**)(unint64_t, uint64_t))(v136 + 8))(v37, v9);
      break;
    case 1u:
      v120 = ~v154;
      v121 = v36;
      swift_release();
      v41 = ((unint64_t)a1 + v140 + 8) & v137;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))((v141 + v41) & v138, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v147 + 8))((v141 + v41) & v138, AssociatedTypeWitness);
      v42 = (v23 + v41) & v139;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v24 + v42) & v121, 1, v158))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v24 + v42) & v121, v158);
      v43 = (v143 + ((v26 + v42) & v142)) & v150;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v43, 1, v146))
        (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v43, v146);
      goto LABEL_51;
    case 2u:
      v120 = ~v154;
      v121 = v36;
      swift_release();
      v38 = ((unint64_t)a1 + v140 + 8) & v137;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))((v141 + v38) & v138, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v147 + 8))((v141 + v38) & v138, AssociatedTypeWitness);
      v39 = (v23 + v38) & v139;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))((v24 + v39) & v121, 1, v158))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))((v24 + v39) & v121, v158);
      v40 = (v143 + ((v26 + v39) & v142)) & v150;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v40, 1, v146))
        (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v40, v146);
LABEL_51:
      swift_release();
      v35 = v120;
      v36 = v121;
      break;
    case 3u:
      swift_release();
      break;
    case 4u:

      break;
    default:
      break;
  }
  if (v31 > 3)
    goto LABEL_55;
  v44 = ((1 << v153) + 1) >> v153;
  if (v44 <= 0xFFFA)
  {
    if (v44 > 0xFA)
    {
      v45 = *(unsigned __int16 *)((char *)a2 + v31);
      if (v45 < 5)
        goto LABEL_64;
      goto LABEL_60;
    }
LABEL_55:
    v45 = *((unsigned __int8 *)a2 + v31);
    if (v45 < 5)
      goto LABEL_64;
LABEL_60:
    if (v31 <= 3)
      v46 = v31;
    else
      v46 = 4;
    __asm { BR              X12 }
  }
  v45 = *(_DWORD *)((char *)a2 + v31);
  if (v45 >= 5)
    goto LABEL_60;
LABEL_64:
  switch(v45)
  {
    case 0u:
      (*(void (**)(id *, id *, uint64_t))(v124 + 32))(a1, a2, v126);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v127 + 32))(((unint64_t)a1 + v125) & v123, ((unint64_t)a2 + v125) & v123, v129);
      v47 = (void *)(((((unint64_t)a1 + v125) & v123) + v128 + v154) & v35);
      v48 = (const void *)(((((unint64_t)a2 + v125) & v123) + v128 + v154) & v35);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v136 + 48))(v48, 1, v9))
      {
        memcpy(v47, v48, __n);
        if (v31 > 3)
          goto LABEL_89;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v136 + 32))(v47, v48, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v47, 0, 1, v9);
        if (v31 > 3)
        {
LABEL_89:
          *((_BYTE *)a1 + v31) = 0;
          goto LABEL_122;
        }
      }
      v65 = ((1 << v153) + 1) >> v153;
      if (v65 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v31) = 0;
      }
      else
      {
        if (v65 <= 0xFA)
          goto LABEL_89;
        *(_WORD *)((char *)a1 + v31) = 0;
      }
LABEL_122:
      v3 = v148;
      break;
    case 1u:
      *a1 = *a2;
      v59 = (_QWORD *)(((unint64_t)a1 + v140 + 8) & v137);
      v60 = (_QWORD *)(((unint64_t)a2 + v140 + 8) & v137);
      *v59 = *v60;
      v156 = (unint64_t)v59;
      v61 = (void *)(((unint64_t)v59 + v141) & v138);
      v62 = (const void *)(((unint64_t)v60 + v141) & v138);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v147 + 48))(v62, 1, AssociatedTypeWitness))
      {
        v63 = v130;
        memcpy(v61, v62, v130);
        v64 = v15;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v147 + 32))(v61, v62, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v61, 0, 1, AssociatedTypeWitness);
        v64 = v15;
        v63 = v130;
      }
      *((_BYTE *)v61 + v63) = *((_BYTE *)v62 + v63);
      v73 = (_QWORD *)((v156 + v157 + v131) & v139);
      v74 = (_QWORD *)(((unint64_t)v60 + v157 + v131) & v139);
      *v73 = *v74;
      v75 = v36;
      v76 = (void *)(((unint64_t)v73 + v24) & v36);
      v77 = (const void *)(((unint64_t)v74 + v24) & v75);
      v78 = v64;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v64 + 48))(v77, 1, v158))
      {
        v79 = v132;
        memcpy(v76, v77, v132);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v78 + 32))(v76, v77, v158);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v76, 0, 1, v158);
        v79 = v132;
      }
      *((_BYTE *)v76 + v79) = *((_BYTE *)v77 + v79);
      v85 = (_QWORD *)(((unint64_t)v73 + v134 + v133) & v142);
      v86 = (_QWORD *)(((unint64_t)v74 + v134 + v133) & v142);
      *v85 = *v86;
      v87 = (void *)(((unint64_t)v85 + v143) & v150);
      v88 = (const void *)(((unint64_t)v86 + v143) & v150);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v88, 1, v146))
      {
        v89 = v135;
        memcpy(v87, v88, v135);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v144 + 32))(v87, v88, v146);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v87, 0, 1, v146);
        v89 = v135;
      }
      *((_BYTE *)v87 + v89) = *((_BYTE *)v88 + v89);
      *(_QWORD *)(((v156 | 7) + v145) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((((unint64_t)a2 + v140 + 8) & v137 | 7)
                                                                         + v145) & 0xFFFFFFFFFFFFF8);
      if (v31 > 3)
        goto LABEL_111;
      v93 = 1;
      v94 = ((1 << v153) + 1) >> v153;
      if (v94 > 0xFFFA)
        goto LABEL_114;
      if (v94 > 0xFA)
        goto LABEL_121;
LABEL_111:
      *((_BYTE *)a1 + v31) = 1;
      goto LABEL_122;
    case 2u:
      *a1 = *a2;
      v49 = (_QWORD *)(((unint64_t)a1 + v140 + 8) & v137);
      v50 = (_QWORD *)(((unint64_t)a2 + v140 + 8) & v137);
      *v49 = *v50;
      v155 = (unint64_t)v49;
      v51 = (void *)(((unint64_t)v49 + v141) & v138);
      v52 = (const void *)(((unint64_t)v50 + v141) & v138);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v147 + 48))(v52, 1, AssociatedTypeWitness))
      {
        v53 = v130;
        memcpy(v51, v52, v130);
        v54 = v15;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v147 + 32))(v51, v52, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v51, 0, 1, AssociatedTypeWitness);
        v54 = v15;
        v53 = v130;
      }
      *((_BYTE *)v51 + v53) = *((_BYTE *)v52 + v53);
      v66 = (_QWORD *)((v155 + v157 + v131) & v139);
      v67 = (_QWORD *)(((unint64_t)v50 + v157 + v131) & v139);
      *v66 = *v67;
      v68 = v36;
      v69 = (void *)(((unint64_t)v66 + v24) & v36);
      v70 = (const void *)(((unint64_t)v67 + v24) & v68);
      v71 = v54;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v70, 1, v158))
      {
        v72 = v132;
        memcpy(v69, v70, v132);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v71 + 32))(v69, v70, v158);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v69, 0, 1, v158);
        v72 = v132;
      }
      *((_BYTE *)v69 + v72) = *((_BYTE *)v70 + v72);
      v80 = (_QWORD *)(((unint64_t)v66 + v134 + v133) & v142);
      v81 = (_QWORD *)(((unint64_t)v67 + v134 + v133) & v142);
      *v80 = *v81;
      v82 = (void *)(((unint64_t)v80 + v143) & v150);
      v83 = (const void *)(((unint64_t)v81 + v143) & v150);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v144 + 48))(v83, 1, v146))
      {
        v84 = v135;
        memcpy(v82, v83, v135);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v144 + 32))(v82, v83, v146);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v82, 0, 1, v146);
        v84 = v135;
      }
      *((_BYTE *)v82 + v84) = *((_BYTE *)v83 + v84);
      v90 = (_QWORD *)(((v155 | 7) + v145) & 0xFFFFFFFFFFFFF8);
      v91 = (_QWORD *)(((((unint64_t)a2 + v140 + 8) & v137 | 7) + v145) & 0xFFFFFFFFFFFFFFF8);
      *v90 = *v91;
      *(_QWORD *)(((unint64_t)v90 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFF8);
      if (v31 > 3)
        goto LABEL_106;
      v92 = ((1 << v153) + 1) >> v153;
      if (v92 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v31) = 2;
        goto LABEL_122;
      }
      if (v92 <= 0xFA)
      {
LABEL_106:
        *((_BYTE *)a1 + v31) = 2;
        goto LABEL_122;
      }
      LOWORD(v93) = 2;
      goto LABEL_121;
    case 3u:
      *a1 = *a2;
      if (v31 > 3)
        goto LABEL_73;
      v55 = ((1 << v153) + 1) >> v153;
      if (v55 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v31) = 3;
        goto LABEL_122;
      }
      if (v55 <= 0xFA)
      {
LABEL_73:
        *((_BYTE *)a1 + v31) = 3;
        goto LABEL_122;
      }
      LOWORD(v93) = 3;
      goto LABEL_121;
    case 4u:
      *a1 = *a2;
      if (v31 > 3)
        goto LABEL_77;
      v56 = ((1 << v153) + 1) >> v153;
      if (v56 > 0xFFFA)
      {
        v93 = 4;
LABEL_114:
        *(_DWORD *)((char *)a1 + v31) = v93;
      }
      else if (v56 > 0xFA)
      {
        LOWORD(v93) = 4;
LABEL_121:
        *(_WORD *)((char *)a1 + v31) = v93;
      }
      else
      {
LABEL_77:
        *((_BYTE *)a1 + v31) = 4;
      }
      goto LABEL_122;
    default:
      if (v31 > 3)
        goto LABEL_82;
      v57 = ((1 << v153) + 1) >> v153;
      v58 = 2;
      if (v57 > 0xFFFA)
        v58 = 4;
      if (v57 <= 0xFA)
LABEL_82:
        v58 = 1;
      v3 = v148;
      memcpy(a1, a2, v58 + v31);
      break;
  }
LABEL_123:
  v95 = *(_QWORD *)(v3[4] - 8);
  v96 = (((*(_QWORD *)(*(_QWORD *)(v3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(v3[3] - 8) + 64)
       + *(unsigned __int8 *)(v95 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
  v97 = *(_DWORD *)(v95 + 84);
  v98 = *(_QWORD *)(v95 + 64);
  if (v97)
    v99 = v98;
  else
    v99 = v98 + 1;
  v100 = v99 + v96;
  v101 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v102 = *(unsigned __int8 *)(v101 + 80);
  v103 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v104 = *(unsigned __int8 *)(v103 + 80);
  v105 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v106 = *(unsigned __int8 *)(v105 + 80);
  v107 = v106 | 7;
  v108 = ((v102 + 8) & ~v102) + (v104 | 7) + *(_QWORD *)(v101 + 64);
  if (!*(_DWORD *)(v101 + 84))
    ++v108;
  v109 = (v108 + 1) & ~(v104 | 7);
  v110 = ((v104 + 8) & ~v104) + v107 + *(_QWORD *)(v103 + 64);
  if (!*(_DWORD *)(v103 + 84))
    ++v110;
  v111 = (v110 + v109 + 1) & ~v107;
  v112 = *(_DWORD *)(v105 + 84);
  v113 = ((v106 + 8) & ~v106)
       + *(_QWORD *)(v105 + 64)
       + (((v104 | v102 | v106) & 0xF8 ^ 0x1F8) & ((v104 | v102 | v106) + 8));
  if (!v112)
    ++v113;
  v114 = (v113 + v111 + 8) & 0xFFFFFFFFFFFFFFF8;
  v115 = v114 + 8;
  if (v114 + 8 <= v100)
    v115 = v100;
  v116 = ((v114 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v116 <= v115)
    v116 = v115;
  if (v116 <= 8)
    v116 = 8;
  if (v116 > 3)
    goto LABEL_142;
  v117 = ((1 << (8 * v116)) + 1) >> (8 * v116);
  v118 = 2;
  if (v117 > 0xFFFA)
    v118 = 4;
  if (v117 <= 0xFA)
LABEL_142:
    v118 = 1;
  result = a1;
  *(_QWORD *)(((unint64_t)a1 + v118 + v116 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2
                                                                                          + v118
                                                                                          + v116
                                                                                          + 7) & 0xFFFFFFFFFFFFF8);
  return result;
}

uint64_t sub_23B9ED9D4(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  unsigned int v26;
  char v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  char v36;
  unsigned int v37;
  int v38;
  char v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  char v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  char v51;
  int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  char v59;
  int v60;
  unsigned int v61;
  unsigned int v63;
  int v64;
  int v65;
  unint64_t v67;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v67 = v7 + v4;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 | 7;
  v15 = ((v9 + 8) & ~v9) + (v11 | 7) + *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v15;
  v16 = (v15 + 1) & ~(v11 | 7);
  v17 = ((v11 + 8) & ~v11) + v14 + *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v17;
  v18 = (v17 + v16 + 1) & ~v14;
  v19 = *(_DWORD *)(v12 + 84);
  v20 = ((v13 + 8) & ~v13)
      + *(_QWORD *)(v12 + 64)
      + (((v11 | v9 | v13) & 0xF8 ^ 0x1F8) & ((v11 | v9 | v13) + 8));
  if (!v19)
    ++v20;
  v21 = (v20 + v18 + 8) & 0xFFFFFFFFFFFFFFF8;
  v22 = v21 + 8;
  if (v21 + 8 <= v67)
    v22 = v67;
  v23 = ((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v23 <= v22)
    v23 = v22;
  if (v23 <= 8)
    v23 = 8;
  v24 = 8 * v23;
  if (v23 > 3)
  {
    v25 = 6;
LABEL_18:
    v26 = a2;
    v27 = 8;
    goto LABEL_19;
  }
  v29 = ((1 << v24) + 1) >> v24;
  if (v29 > 0xFFFA)
  {
    v28 = 0x7FFFFFFF;
    v26 = a2;
    if (v23 > 3)
      goto LABEL_33;
    goto LABEL_28;
  }
  v25 = v29 + 5;
  if (v29 <= 0xFA)
    goto LABEL_18;
  v27 = 16;
  v26 = a2;
LABEL_19:
  v28 = (1 << v27) - v25;
  if ((v28 & 0x80000000) != 0)
  {
    v28 = 0x7FFFFFFF;
    if (v23 > 3)
      goto LABEL_33;
  }
  else if (v23 > 3)
  {
    goto LABEL_33;
  }
LABEL_28:
  v30 = ((1 << v24) + 1) >> v24;
  v31 = 2;
  if (v30 > 0xFFFA)
    v31 = 4;
  if (v30 > 0xFA)
  {
    if (!v26)
      return 0;
    goto LABEL_34;
  }
LABEL_33:
  v31 = 1;
  if (!v26)
    return 0;
LABEL_34:
  if (v28 < v26)
  {
    if (((((v23 + v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v32 = 2;
    else
      v32 = v26 - v28 + 1;
    if (v32 >= 0x10000)
      v33 = 4;
    else
      v33 = 2;
    if (v32 < 0x100)
      v33 = 1;
    if (v32 >= 2)
      v34 = v33;
    else
      v34 = 0;
    __asm { BR              X15 }
  }
  if (!v28)
    return 0;
  if (v23 > 3)
  {
    v35 = 6;
LABEL_50:
    v36 = 8;
    goto LABEL_51;
  }
  v41 = ((1 << v24) + 1) >> v24;
  if (v41 > 0xFFFA)
  {
LABEL_61:
    v37 = 0x7FFFFFFF;
    if (v23 > 3)
      goto LABEL_53;
    goto LABEL_62;
  }
  v35 = v41 + 5;
  if (v41 <= 0xFA)
    goto LABEL_50;
  v36 = 16;
LABEL_51:
  v37 = (1 << v36) - v35;
  if ((v37 & 0x80000000) != 0)
    goto LABEL_61;
  if (v23 > 3)
  {
LABEL_53:
    v38 = 6;
LABEL_54:
    v39 = 8;
    goto LABEL_55;
  }
LABEL_62:
  v42 = ((1 << v24) + 1) >> v24;
  if (v42 > 0xFFFA)
  {
LABEL_65:
    if (v37 != 0x7FFFFFFF)
      return 0;
    goto LABEL_66;
  }
  v38 = v42 + 5;
  if (v42 <= 0xFA)
    goto LABEL_54;
  v39 = 16;
LABEL_55:
  v40 = (1 << v39) - v38;
  if (v40 < 0)
    goto LABEL_65;
  if (v40 != v37)
    return 0;
LABEL_66:
  if (v23 > 3)
  {
    v43 = 6;
LABEL_68:
    v44 = 8;
    goto LABEL_69;
  }
  v46 = ((1 << v24) + 1) >> v24;
  if (v46 > 0xFFFA)
    goto LABEL_75;
  v43 = v46 + 5;
  if (v46 <= 0xFA)
    goto LABEL_68;
  v44 = 16;
LABEL_69:
  v45 = (1 << v44) - v43;
  if ((v45 & 0x80000000) == 0)
  {
    if (v23 > 3)
      goto LABEL_79;
    goto LABEL_76;
  }
LABEL_75:
  v45 = 0x7FFFFFFF;
  if (v23 > 3)
  {
LABEL_79:
    v48 = 1;
    goto LABEL_80;
  }
LABEL_76:
  v47 = ((1 << v24) + 1) >> v24;
  v48 = 2;
  if (v47 > 0xFFFA)
    v48 = 4;
  if (v47 <= 0xFA)
    goto LABEL_79;
LABEL_80:
  if (!v37)
    return 0;
  v49 = v37 - v45;
  if (v37 <= v45)
    goto LABEL_98;
  v50 = v48 + v23;
  v51 = 8 * (v48 + v23);
  if (v50 > 3)
  {
LABEL_83:
    v52 = *(unsigned __int8 *)(a1 + v50);
    goto LABEL_90;
  }
  v53 = ((v49 + ~(-1 << v51)) >> v51) + 1;
  if (HIWORD(v53))
  {
    v52 = *(_DWORD *)(a1 + v50);
  }
  else
  {
    if (v53 <= 0xFF)
    {
      if (v53 < 2)
      {
LABEL_98:
        if (v45)
        {
          if (v23 <= 3)
          {
            v63 = ((1 << v24) + 1) >> v24;
            if (v63 > 0xFFFA)
            {
              v57 = *(_DWORD *)(a1 + v23);
              v58 = ~v57;
LABEL_108:
              v61 = 0x7FFFFFFF;
LABEL_109:
              if (v61 > v58)
                return -v57;
              else
                return 0;
            }
            v60 = v63 + 5;
            if (v63 > 0xFA)
            {
              v65 = *(unsigned __int16 *)(a1 + v23);
              v57 = v65 | 0xFFFF0000;
              v58 = v65 ^ 0xFFFF;
              v59 = 16;
            }
            else
            {
              v64 = *(unsigned __int8 *)(a1 + v23);
              v57 = v64 | 0xFFFFFF00;
              v58 = v64 ^ 0xFF;
              v59 = 8;
            }
          }
          else
          {
            v56 = *(unsigned __int8 *)(a1 + v23);
            v57 = v56 | 0xFFFFFF00;
            v58 = v56 ^ 0xFF;
            v59 = 8;
            v60 = 6;
          }
          v61 = (1 << v59) - v60;
          if ((v61 & 0x80000000) == 0)
            goto LABEL_109;
          goto LABEL_108;
        }
        return 0;
      }
      goto LABEL_83;
    }
    v52 = *(unsigned __int16 *)(a1 + v50);
  }
LABEL_90:
  if (!v52)
    goto LABEL_98;
  v54 = (v52 - 1) << v51;
  if (v50 > 3)
    v54 = 0;
  if ((_DWORD)v50)
  {
    if (v50 <= 3)
      v55 = v50;
    else
      v55 = 4;
    __asm { BR              X12 }
  }
  return v45 + v54 + 1;
}

void sub_23B9EE030(unsigned int *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  size_t v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  unint64_t v40;

  v4 = *(_QWORD *)(a4[4] - 8);
  v5 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  v40 = v8 + v5;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | 7;
  v16 = ((v10 + 8) & ~v10) + (v12 | 7) + *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v16;
  v17 = (v16 + 1) & ~(v12 | 7);
  v18 = ((v12 + 8) & ~v12) + v15 + *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v18;
  v19 = (v18 + v17 + 1) & ~v15;
  v20 = *(_DWORD *)(v13 + 84);
  v21 = ((v14 + 8) & ~v14)
      + *(_QWORD *)(v13 + 64)
      + (((v12 | v10 | v14) & 0xF8 ^ 0x1F8) & ((v12 | v10 | v14) + 8));
  if (!v20)
    ++v21;
  v22 = (v21 + v19 + 8) & 0xFFFFFFFFFFFFFFF8;
  v23 = v22 + 8;
  if (v22 + 8 <= v40)
    v23 = v40;
  v24 = ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v24 <= v23)
    v24 = v23;
  if (v24 <= 8)
    v24 = 8;
  v25 = 8 * v24;
  if (v24 <= 3)
  {
    v34 = ((1 << v25) + 1) >> v25;
    if (v34 > 0xFFFA)
    {
      v31 = 0x7FFFFFFF;
      v27 = a1;
      v28 = a3;
      v29 = a2;
      if (v24 > 3)
        goto LABEL_30;
      goto LABEL_22;
    }
    v26 = v34 + 5;
    if (v34 > 0xFA)
    {
      v30 = 16;
      v27 = a1;
      v28 = a3;
      v29 = a2;
LABEL_19:
      v31 = (1 << v30) - v26;
      if ((v31 & 0x80000000) != 0)
        v31 = 0x7FFFFFFF;
      if (v24 > 3)
        goto LABEL_30;
LABEL_22:
      v32 = ((1 << v25) + 1) >> v25;
      v33 = 2;
      if (v32 > 0xFFFA)
        v33 = 4;
      if (v32 > 0xFA)
      {
LABEL_31:
        v35 = ((v24 + v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
        if (v31 >= v28)
        {
          v38 = 0;
          if (v29 <= v31)
            goto LABEL_44;
        }
        else
        {
          if ((((_DWORD)v24 + (_DWORD)v33 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
            v36 = v28 - v31 + 1;
          else
            v36 = 2;
          if (v36 >= 0x10000)
            v37 = 4;
          else
            v37 = 2;
          if (v36 < 0x100)
            v37 = 1;
          if (v36 >= 2)
            v38 = v37;
          else
            v38 = 0;
          if (v29 <= v31)
LABEL_44:
            __asm { BR              X12 }
        }
        if ((_DWORD)v35)
        {
          v39 = ~v31 + v29;
          bzero(v27, v35);
          *v27 = v39;
        }
        __asm { BR              X10 }
      }
LABEL_30:
      v33 = 1;
      goto LABEL_31;
    }
  }
  else
  {
    v26 = 6;
  }
  v27 = a1;
  v28 = a3;
  v29 = a2;
  v30 = 8;
  goto LABEL_19;
}

void sub_23B9EE35C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v0) = v1;
}

void sub_23B9EE364()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v1) = 0;
  if (v0)
    JUMPOUT(0x23B9EE36CLL);
}

void sub_23B9EE4AC()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v2 + v0) = v1;
}

void sub_23B9EE4B4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v0) = v1;
}

void sub_23B9EE4BC(uint64_t a1@<X8>)
{
  int v1;
  char v2;
  int v3;
  int v4;
  char v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *(_WORD *)(v14 + v13) = 0;
  if (!v12)
    return;
  if (a1 > 3)
  {
    v1 = 6;
LABEL_4:
    v2 = 8;
    goto LABEL_5;
  }
  v7 = ((1 << v11) + 1) >> v11;
  if (v7 > 0xFFFA)
  {
LABEL_16:
    v3 = 0x7FFFFFFF;
    if (a1 > 3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v1 = v7 + 5;
  if (v7 <= 0xFA)
    goto LABEL_4;
  v2 = 16;
LABEL_5:
  v3 = (1 << v2) - v1;
  if (v3 < 0)
    goto LABEL_16;
  if (a1 > 3)
  {
LABEL_7:
    v4 = 6;
LABEL_8:
    v5 = 8;
    goto LABEL_9;
  }
LABEL_17:
  v8 = ((1 << v11) + 1) >> v11;
  if (v8 > 0xFFFA)
  {
LABEL_20:
    if (v3 == 0x7FFFFFFF)
    {
LABEL_11:
      if (a1 > 3)
        JUMPOUT(0x23B9EE530);
      JUMPOUT(0x23B9EE4C8);
    }
    goto LABEL_21;
  }
  v4 = v8 + 5;
  if (v8 <= 0xFA)
    goto LABEL_8;
  v5 = 16;
LABEL_9:
  v6 = (1 << v5) - v4;
  if (v6 < 0)
    goto LABEL_20;
  if (v6 == v3)
    goto LABEL_11;
LABEL_21:
  if (a1 > 3)
    goto LABEL_25;
  v9 = ((1 << v11) + 1) >> v11;
  v10 = 2;
  if (v9 > 0xFFFA)
    v10 = 4;
  if (v9 <= 0xFA)
LABEL_25:
    v10 = 1;
  *(_QWORD *)((v14 + a1 + v10 + 7) & 0xFFFFFFFFFFFFF8) = (v12 - 1);
}

void sub_23B9EE624(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  *(_WORD *)(v4 + v3) = 0;
  v5 = -v2;
  if (a1 > 3)
    goto LABEL_4;
  v6 = ((1 << v1) + 1) >> v1;
  if (v6 > 0xFFFA)
  {
    *(_DWORD *)(v4 + a1) = v5;
  }
  else
  {
    if (v6 <= 0xFA)
    {
LABEL_4:
      *(_BYTE *)(v4 + a1) = v5;
      goto LABEL_7;
    }
    *(_WORD *)(v4 + a1) = v5;
  }
LABEL_7:
  JUMPOUT(0x23B9EE6C4);
}

void sub_23B9EE6B0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
}

void sub_23B9EE6B8()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
}

void type metadata accessor for CombineLatestStateMachine()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for CombineLatestStateMachine.State()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9EE700()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v7;
  char *v8;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = sub_23BB8ACA0();
      if (v5 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        v8 = &v7;
        swift_getAssociatedTypeWitness();
        type metadata accessor for CombineLatestStateMachine.State.Upstream();
      }
      return v4;
    }
  }
  return v0;
}

id *sub_23B9EE974(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  size_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  char *v38;
  id *v39;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  const void *v51;
  _QWORD *v52;
  _QWORD *v53;
  void *v54;
  const void *v55;
  unsigned int (*v56)(const void *, uint64_t, uint64_t);
  unsigned int v57;
  id v58;
  id v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  void *v65;
  const void *v66;
  unsigned int (*v67)(const void *, uint64_t, uint64_t);
  unsigned int v68;
  _QWORD *v69;
  _QWORD *v70;
  void *v71;
  const void *v72;
  size_t v73;
  _QWORD *v74;
  _QWORD *v75;
  void *v76;
  const void *v77;
  size_t v78;
  _QWORD *v79;
  _QWORD *v80;
  void *v81;
  const void *v82;
  size_t v83;
  _QWORD *v84;
  _QWORD *v85;
  void *v86;
  const void *v87;
  size_t v88;
  _QWORD *v89;
  _QWORD *v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  size_t __n;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t AssociatedTypeWitness;
  uint64_t v115;
  uint64_t v116;
  size_t v117;
  size_t v118;
  size_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  size_t v124;
  size_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v136;
  unint64_t v137;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v132 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v129 = *(_DWORD *)(v7 + 80);
  v95 = *(_QWORD *)(v132 + 64) + v129;
  v104 = v7;
  v8 = *(_QWORD *)(v6 - 8);
  v126 = *(_DWORD *)(v8 + 80);
  v101 = *(_QWORD *)(v7 + 64);
  v108 = v8;
  v9 = *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v9;
  __n = v9;
  v117 = v9
       + ((v101 + v126 + (v95 & ~(unint64_t)v129)) & ~(unint64_t)v126);
  v98 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v123 = *(_DWORD *)(v10 + 80);
  v105 = v5;
  v116 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v116 - 8);
  v120 = *(_DWORD *)(v11 + 80);
  v12 = v120 | (unint64_t)v123;
  v111 = v6;
  v13 = swift_getAssociatedTypeWitness();
  v14 = v120 | 7;
  v15 = *(_QWORD *)(v13 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16 | 7;
  v18 = v12 | v16 | 7;
  v19 = v123 + 8;
  v20 = v19 & ~(unint64_t)v123;
  if (*(_DWORD *)(v10 + 84))
    v21 = *(_QWORD *)(v10 + 64);
  else
    v21 = *(_QWORD *)(v10 + 64) + 1;
  v22 = v20 + 1;
  v23 = (v20 + 1 + v14 + v21) & ~v14;
  v24 = (v120 + 8) & ~(unint64_t)v120;
  v115 = v11;
  if (*(_DWORD *)(v11 + 84))
    v25 = *(_QWORD *)(v11 + 64);
  else
    v25 = *(_QWORD *)(v11 + 64) + 1;
  v26 = (v24 + 1 + v17 + v25 + v23) & ~v17;
  if (*(_DWORD *)(v15 + 84))
    v27 = *(_QWORD *)(v15 + 64);
  else
    v27 = *(_QWORD *)(v15 + 64) + 1;
  v28 = (((v16 + 8) & ~v16) + v27 + v26 + 1 + (((v12 | v16) + 8) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = v28 + 8;
  if (v28 + 8 <= v117)
    v29 = v117;
  v30 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v30 <= v29)
    v30 = v29;
  if (v30 <= 8)
    v31 = 8;
  else
    v31 = v30;
  if (v31 > 3)
    goto LABEL_23;
  v32 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  v33 = 2;
  if (v32 > 0xFFFA)
    v33 = 4;
  if (v32 <= 0xFA)
LABEL_23:
    v33 = 1;
  v34 = *(_DWORD *)(v132 + 80);
  v35 = v12 | v16 | ((v126 | v129) | v34) & 0xF8 | 7u;
  if ((unint64_t)(v33 + v31) > 0x18
    || ((v126 | v129 | v123 | v120 | *(_DWORD *)(v15 + 80) | v34) & 0x100000) != 0
    || v35 != 7)
  {
    v38 = (char *)*a2;
    *a1 = *a2;
    v39 = (id *)&v38[(v35 + 16) & ~v35];
    swift_retain();
    return v39;
  }
  if (v31 > 3)
    goto LABEL_36;
  v41 = ((1 << (8 * v31)) + 1) >> (8 * v31);
  if (v41 <= 0xFFFA)
  {
    if (v41 > 0xFA)
    {
      v42 = *(unsigned __int16 *)((char *)a2 + v31);
      if (v42 < 5)
        goto LABEL_45;
      goto LABEL_41;
    }
LABEL_36:
    v42 = *((unsigned __int8 *)a2 + v31);
    if (v42 < 5)
      goto LABEL_45;
LABEL_41:
    if (v31 <= 3)
      v43 = v31;
    else
      v43 = 4;
    __asm { BR              X15 }
  }
  v42 = *(_DWORD *)((char *)a2 + v31);
  if (v42 >= 5)
    goto LABEL_41;
LABEL_45:
  v44 = ~v18;
  v45 = ~(unint64_t)v123;
  v46 = ~v14;
  v47 = ~(unint64_t)v120;
  switch(v42)
  {
    case 0u:
      v39 = a1;
      (*(void (**)(id *, id *, uint64_t))(v132 + 16))(a1, a2, v98);
      v48 = ((unint64_t)a1 + v95) & ~(unint64_t)v129;
      v49 = ((unint64_t)a2 + v95) & ~(unint64_t)v129;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v104 + 16))(v48, v49, v105);
      v50 = (void *)((v48 + v101 + v126) & ~(unint64_t)v126);
      v51 = (const void *)((v49 + v101 + v126) & ~(unint64_t)v126);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48))(v51, 1, v111))
      {
        memcpy(v50, v51, __n);
        if (v31 > 3)
          goto LABEL_70;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v108 + 16))(v50, v51, v111);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v50, 0, 1, v111);
        if (v31 > 3)
          goto LABEL_70;
      }
      v68 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      if (v68 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v31) = 0;
        return v39;
      }
      if (v68 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v31) = 0;
        return v39;
      }
LABEL_70:
      *((_BYTE *)a1 + v31) = 0;
      break;
    case 1u:
      v100 = ~v17;
      v103 = ~v16;
      v107 = v120 + 8;
      v110 = v120 | 7;
      v113 = v24 + 1;
      v119 = v25;
      v122 = v16 + 8;
      v125 = v27;
      v128 = ((v16 + 8) & ~v16) + v27 + v26 + 1;
      v131 = *(_QWORD *)(v13 - 8);
      v134 = v13;
      *a1 = *a2;
      v63 = (_QWORD *)(((unint64_t)a1 + v18 + 8) & v44);
      v64 = (_QWORD *)(((unint64_t)a2 + v18 + 8) & v44);
      *v63 = *v64;
      v97 = (unint64_t)v63;
      v65 = (void *)(((unint64_t)v63 + v19) & v45);
      v137 = (unint64_t)v64;
      v66 = (const void *)(((unint64_t)v64 + v19) & v45);
      v67 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      swift_retain();
      if (v67(v66, 1, AssociatedTypeWitness))
      {
        memcpy(v65, v66, v21);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v65, v66, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v65 + v21) = *((_BYTE *)v66 + v21);
      v74 = (_QWORD *)((v97 + v110 + v22 + v21) & v46);
      v75 = (_QWORD *)((v137 + v110 + v22 + v21) & v46);
      *v74 = *v75;
      v76 = (void *)(((unint64_t)v74 + v107) & v47);
      v77 = (const void *)(((unint64_t)v75 + v107) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48))(v77, 1, v116))
      {
        v78 = v119;
        memcpy(v76, v77, v119);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v115 + 16))(v76, v77, v116);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v76, 0, 1, v116);
        v78 = v119;
      }
      *((_BYTE *)v76 + v78) = *((_BYTE *)v77 + v78);
      v84 = (_QWORD *)(((unint64_t)v74 + v17 + v113 + v78) & v100);
      v85 = (_QWORD *)(((unint64_t)v75 + v17 + v113 + v78) & v100);
      *v84 = *v85;
      v86 = (void *)(((unint64_t)v84 + v122) & v103);
      v87 = (const void *)(((unint64_t)v85 + v122) & v103);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v131 + 48))(v87, 1, v134))
      {
        v88 = v125;
        memcpy(v86, v87, v125);
        v39 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v86, v87, v134);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v86, 0, 1, v134);
        v39 = a1;
        v88 = v125;
      }
      *((_BYTE *)v86 + v88) = *((_BYTE *)v87 + v88);
      *(_QWORD *)(((v97 | 7) + v128) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v137 | 7) + v128) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 <= 3)
      {
        v92 = 1;
        v93 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v93 > 0xFFFA)
          goto LABEL_97;
        if (v93 > 0xFA)
          goto LABEL_102;
      }
      *((_BYTE *)v39 + v31) = 1;
      return v39;
    case 2u:
      v99 = ~v17;
      v102 = ~v16;
      v106 = v120 + 8;
      v109 = v120 | 7;
      v112 = v24 + 1;
      v118 = v25;
      v121 = v16 + 8;
      v124 = v27;
      v127 = ((v16 + 8) & ~v16) + v27 + v26 + 1;
      v130 = *(_QWORD *)(v13 - 8);
      v133 = v13;
      *a1 = *a2;
      v52 = (_QWORD *)(((unint64_t)a1 + v18 + 8) & v44);
      v53 = (_QWORD *)(((unint64_t)a2 + v18 + 8) & v44);
      *v52 = *v53;
      v96 = (unint64_t)v52;
      v54 = (void *)(((unint64_t)v52 + v19) & v45);
      v136 = (unint64_t)v53;
      v55 = (const void *)(((unint64_t)v53 + v19) & v45);
      v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      swift_retain();
      if (v56(v55, 1, AssociatedTypeWitness))
      {
        memcpy(v54, v55, v21);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v54, v55, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v54, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v54 + v21) = *((_BYTE *)v55 + v21);
      v69 = (_QWORD *)((v96 + v109 + v22 + v21) & v46);
      v70 = (_QWORD *)((v136 + v109 + v22 + v21) & v46);
      *v69 = *v70;
      v71 = (void *)(((unint64_t)v69 + v106) & v47);
      v72 = (const void *)(((unint64_t)v70 + v106) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48))(v72, 1, v116))
      {
        v73 = v118;
        memcpy(v71, v72, v118);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v115 + 16))(v71, v72, v116);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v71, 0, 1, v116);
        v73 = v118;
      }
      *((_BYTE *)v71 + v73) = *((_BYTE *)v72 + v73);
      v79 = (_QWORD *)(((unint64_t)v69 + v17 + v112 + v73) & v99);
      v80 = (_QWORD *)(((unint64_t)v70 + v17 + v112 + v73) & v99);
      *v79 = *v80;
      v81 = (void *)(((unint64_t)v79 + v121) & v102);
      v82 = (const void *)(((unint64_t)v80 + v121) & v102);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v130 + 48))(v82, 1, v133))
      {
        v83 = v124;
        memcpy(v81, v82, v124);
        v39 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v130 + 16))(v81, v82, v133);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v81, 0, 1, v133);
        v39 = a1;
        v83 = v124;
      }
      *((_BYTE *)v81 + v83) = *((_BYTE *)v82 + v83);
      v89 = (_QWORD *)(((v96 | 7) + v127) & 0xFFFFFFFFFFFFF8);
      v90 = (_QWORD *)(((v136 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
      *v89 = *v90;
      *(_QWORD *)(((unint64_t)v89 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v90 + 15) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v31 > 3)
        goto LABEL_87;
      v91 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      if (v91 > 0xFFFA)
      {
        v92 = 2;
LABEL_97:
        *(_DWORD *)((char *)v39 + v31) = v92;
      }
      else
      {
        if (v91 <= 0xFA)
        {
LABEL_87:
          *((_BYTE *)v39 + v31) = 2;
          return v39;
        }
        LOWORD(v92) = 2;
LABEL_102:
        *(_WORD *)((char *)v39 + v31) = v92;
      }
      return v39;
    case 3u:
      v39 = a1;
      *a1 = *a2;
      swift_retain();
      if (v31 <= 3)
      {
        v57 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v57 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v31) = 3;
          return v39;
        }
        if (v57 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v31) = 3;
          return v39;
        }
      }
      *((_BYTE *)a1 + v31) = 3;
      return v39;
    case 4u:
      v58 = *a2;
      v59 = *a2;
      v39 = a1;
      *a1 = v58;
      if (v31 <= 3)
      {
        v60 = ((1 << (8 * v31)) + 1) >> (8 * v31);
        if (v60 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v31) = 4;
          return v39;
        }
        if (v60 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v31) = 4;
          return v39;
        }
      }
      *((_BYTE *)a1 + v31) = 4;
      return v39;
    default:
      if (v31 > 3)
        goto LABEL_63;
      v61 = ((1 << (8 * v31)) + 1) >> (8 * v31);
      v62 = 2;
      if (v61 > 0xFFFA)
        v62 = 4;
      if (v61 <= 0xFA)
LABEL_63:
        v62 = 1;
      v39 = a1;
      memcpy(a1, a2, v62 + v31);
      return v39;
  }
  return v39;
}

void sub_23B9EF4E8(id *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t AssociatedTypeWitness;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;

  v2 = a2[3];
  v54 = *(_QWORD *)(a2[2] - 8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v55 = *(_QWORD *)(v54 + 64) + v4;
  v52 = v4;
  v5 = v55 & ~v4;
  v57 = v3;
  v6 = a2[4];
  v7 = *(_QWORD *)(v6 - 8);
  v58 = *(_QWORD *)(v3 + 64);
  v53 = *(unsigned __int8 *)(v7 + 80);
  v8 = (v58 + v53 + v5) & ~v53;
  v64 = v7;
  v9 = *(_QWORD *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84))
    ++v9;
  v77 = v9 + v8;
  v56 = a2[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v61 = v2;
  v73 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v73 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v67 = v6;
  v15 = swift_getAssociatedTypeWitness();
  v16 = v11;
  v14 = v13 | 7;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v18 | 7;
  v20 = v13 | v11 | v18 | 7;
  v21 = v11 + 8;
  v70 = v10;
  v22 = a1;
  v23 = ((v11 + 8) & ~v11) + *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v23;
  v24 = v23 + v14 + 1;
  v25 = v13 + 8;
  v72 = v12;
  v26 = ((v13 + 8) & ~v13) + *(_QWORD *)(v12 + 64);
  if (!*(_DWORD *)(v12 + 84))
    ++v26;
  v27 = v26 + v19 + 1;
  v28 = v18 + 8;
  v29 = ((v18 + 8) & ~v18) + *(_QWORD *)(v17 + 64);
  if (!*(_DWORD *)(v17 + 84))
    ++v29;
  v30 = (v29 + ((v27 + (v24 & ~v14)) & ~v19) + 1 + (((v13 | v11 | v18) + 8) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = v30 + 8;
  if (v30 + 8 <= v77)
    v31 = v77;
  v32 = ((v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v32 <= v31)
    v32 = v31;
  if (v32 <= 8)
    v32 = 8;
  if (v32 > 3)
    goto LABEL_18;
  v33 = ((1 << (8 * v32)) + 1) >> (8 * v32);
  if (v33 <= 0xFFFA)
  {
    if (v33 > 0xFA)
    {
      v34 = *(unsigned __int16 *)((char *)a1 + v32);
      if (v34 < 5)
        goto LABEL_27;
      goto LABEL_23;
    }
LABEL_18:
    v34 = *((unsigned __int8 *)a1 + v32);
    if (v34 < 5)
      goto LABEL_27;
LABEL_23:
    if (v32 <= 3)
      v35 = v32;
    else
      v35 = 4;
    __asm { BR              X15 }
  }
  v34 = *(_DWORD *)((char *)a1 + v32);
  if (v34 >= 5)
    goto LABEL_23;
LABEL_27:
  v36 = ~v20;
  v37 = ~v16;
  v38 = ~(v13 | 7);
  v39 = ~v13;
  switch(v34)
  {
    case 0u:
      (*(void (**)(id *, uint64_t))(v54 + 8))(a1, v56);
      v40 = ((unint64_t)a1 + v55) & ~v52;
      (*(void (**)(unint64_t, uint64_t))(v57 + 8))(v40, v61);
      v41 = (v40 + v58 + v53) & ~v53;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v64 + 48))(v41, 1, v67))
        (*(void (**)(unint64_t, uint64_t))(v64 + 8))(v41, v67);
      return;
    case 1u:
      v59 = ~v19;
      v62 = ~v18;
      v42 = v24;
      v65 = v25;
      v68 = v27;
      v75 = v15;
      swift_release();
      v43 = ((unint64_t)v22 + v20 + 8) & v36;
      v44 = (v21 + v43) & v37;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v44, 1, AssociatedTypeWitness))
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v44, AssociatedTypeWitness);
      v45 = (v42 + v43) & v38;
      v46 = (v65 + v45) & v39;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v46, 1, v73))
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v46, v73);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))((v28 + ((v68 + v45) & v59)) & v62, 1, v75))(*(void (**)(uint64_t, uint64_t))(v17 + 8))((v28 + ((v68 + v45) & v59)) & v62, v75);
      goto LABEL_43;
    case 2u:
      v60 = ~v19;
      v63 = ~v18;
      v47 = v24;
      v66 = v25;
      v69 = v27;
      v76 = v15;
      swift_release();
      v48 = ((unint64_t)v22 + v20 + 8) & v36;
      v49 = (v21 + v48) & v37;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v49, 1, AssociatedTypeWitness))
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v49, AssociatedTypeWitness);
      v50 = (v47 + v48) & v38;
      v51 = (v66 + v50) & v39;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v51, 1, v73))
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v51, v73);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))((v28 + ((v69 + v50) & v60)) & v63, 1, v76))(*(void (**)(uint64_t, uint64_t))(v17 + 8))((v28 + ((v69 + v50) & v60)) & v63, v76);
      goto LABEL_43;
    case 3u:
LABEL_43:
      swift_release();
      break;
    case 4u:

      break;
    default:
      return;
  }
}

id *sub_23B9EFAE0(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  id *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id *v47;
  void *v48;
  const void *v49;
  _QWORD *v50;
  _QWORD *v51;
  void *v52;
  unint64_t v53;
  const void *v54;
  unsigned int (*v55)(const void *, uint64_t, uint64_t);
  unsigned int v56;
  id v57;
  id v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  void *v66;
  const void *v67;
  unsigned int (*v68)(const void *, uint64_t, uint64_t);
  size_t v69;
  _QWORD *v70;
  _QWORD *v71;
  void *v72;
  const void *v73;
  size_t v74;
  _QWORD *v75;
  _QWORD *v76;
  void *v77;
  const void *v78;
  size_t v79;
  _QWORD *v80;
  _QWORD *v81;
  unsigned int v82;
  unsigned int v83;
  size_t v84;
  _QWORD *v85;
  _QWORD *v86;
  void *v87;
  const void *v88;
  size_t v89;
  uint64_t v90;
  uint64_t v91;
  size_t v92;
  _QWORD *v93;
  _QWORD *v94;
  void *v95;
  const void *v96;
  uint64_t v97;
  size_t v98;
  unsigned int v99;
  unint64_t v101;
  unint64_t v102;
  size_t __n;
  size_t __na;
  size_t __nb;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  size_t v115;
  size_t v116;
  size_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  size_t v124;
  size_t v125;
  size_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t AssociatedTypeWitness;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v112 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v115 = *(_QWORD *)(v112 + 64) + v8;
  v106 = v8;
  v9 = v115 & ~v8;
  v121 = v7;
  v10 = *(_QWORD *)(v6 - 8);
  v124 = *(_QWORD *)(v7 + 64);
  v109 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v124 + v109 + v9) & ~v109;
  v130 = v10;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  __n = v12;
  v140 = v12 + v11;
  v118 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v127 = v5;
  v136 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v136 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = swift_getAssociatedTypeWitness();
  v18 = v13;
  v19 = v16 | 7;
  v20 = *(_QWORD *)(v17 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v21 | 7;
  v23 = v16 | v14 | v21 | 7;
  v24 = v14 + 8;
  v25 = (v14 + 8) & ~v14;
  if (*(_DWORD *)(v13 + 84))
    v26 = *(_QWORD *)(v13 + 64);
  else
    v26 = *(_QWORD *)(v13 + 64) + 1;
  v27 = v25 + 1;
  v28 = (v25 + 1 + (v16 | 7) + v26) & ~(v16 | 7);
  v29 = v16 + 8;
  v30 = (v16 + 8) & ~v16;
  v135 = v15;
  if (*(_DWORD *)(v15 + 84))
    v31 = *(_QWORD *)(v15 + 64);
  else
    v31 = *(_QWORD *)(v15 + 64) + 1;
  v32 = v30 + 1;
  v33 = (v30 + 1 + v22 + v31 + v28) & ~v22;
  if (*(_DWORD *)(v20 + 84))
    v34 = *(_QWORD *)(v20 + 64);
  else
    v34 = *(_QWORD *)(v20 + 64) + 1;
  v35 = ((v21 + 8) & ~v21) + v34 + v33 + 1;
  v36 = (v35 + (((v16 | v14 | v21) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = v36 + 8;
  if (v36 + 8 <= v140)
    v37 = v140;
  v38 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37)
    v38 = v37;
  if (v38 <= 8)
    v39 = 8;
  else
    v39 = v38;
  if (v39 > 3)
    goto LABEL_22;
  v40 = ((1 << (8 * v39)) + 1) >> (8 * v39);
  if (v40 <= 0xFFFA)
  {
    if (v40 > 0xFA)
    {
      v41 = *(unsigned __int16 *)((char *)a2 + v39);
      goto LABEL_23;
    }
LABEL_22:
    v41 = *((unsigned __int8 *)a2 + v39);
LABEL_23:
    v42 = a2;
    goto LABEL_25;
  }
  v42 = a2;
  v41 = *(_DWORD *)((char *)a2 + v39);
LABEL_25:
  if (v41 >= 5)
  {
    if (v39 <= 3)
      v43 = v39;
    else
      v43 = 4;
    __asm { BR              X15 }
  }
  v44 = ~v23;
  v45 = ~v14;
  v46 = ~v16;
  switch(v41)
  {
    case 0u:
      v47 = a1;
      (*(void (**)(id *, id *, uint64_t))(v112 + 16))(a1, v42, v118);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v121 + 16))(((unint64_t)a1 + v115) & ~v106, ((unint64_t)v42 + v115) & ~v106, v127);
      v48 = (void *)(((((unint64_t)a1 + v115) & ~v106) + v124 + v109) & ~v109);
      v49 = (const void *)(((((unint64_t)v42 + v115) & ~v106) + v124 + v109) & ~v109);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v130 + 48))(v49, 1, v6))
      {
        memcpy(v48, v49, __n);
        if (v39 > 3)
          goto LABEL_67;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v130 + 16))(v48, v49, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v48, 0, 1, v6);
        if (v39 > 3)
        {
LABEL_67:
          *((_BYTE *)a1 + v39) = 0;
          return v47;
        }
      }
      v83 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v83 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 0;
        return v47;
      }
      if (v83 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 0;
        return v47;
      }
      goto LABEL_67;
    case 1u:
      v132 = ~v19;
      v134 = ~v22;
      __nb = ~v21;
      v108 = v19;
      v139 = v27;
      v111 = v29;
      v114 = v32;
      v117 = v31;
      v120 = v21 + 8;
      v123 = *(_QWORD *)(v17 - 8);
      v126 = v34;
      v129 = v35;
      v142 = v17;
      *a1 = *v42;
      v62 = (char *)a1 + v23;
      v63 = (char *)v42 + v23;
      v64 = (unint64_t)(v62 + 8) & v44;
      v65 = (_QWORD *)((unint64_t)(v63 + 8) & v44);
      *(_QWORD *)v64 = *v65;
      v66 = (void *)((v24 + v64) & v45);
      v102 = (unint64_t)v65;
      v67 = (const void *)(((unint64_t)v65 + v24) & v45);
      v68 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
      swift_retain();
      if (v68(v67, 1, AssociatedTypeWitness))
      {
        memcpy(v66, v67, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v66, v67, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v66, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v66 + v26) = *((_BYTE *)v67 + v26);
      v84 = v139 + v26;
      v85 = (_QWORD *)((v64 + v108 + v139 + v26) & v132);
      v86 = (_QWORD *)((v102 + v108 + v84) & v132);
      *v85 = *v86;
      v87 = (void *)(((unint64_t)v85 + v111) & v46);
      v88 = (const void *)(((unint64_t)v86 + v111) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48))(v88, 1, v136))
      {
        memcpy(v87, v88, v117);
        v89 = v117;
        v47 = a1;
        v91 = v120;
        v90 = v123;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v87, v88, v136);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v87, 0, 1, v136);
        v47 = a1;
        v91 = v120;
        v90 = v123;
        v89 = v117;
      }
      *((_BYTE *)v87 + v89) = *((_BYTE *)v88 + v89);
      v92 = v114 + v89;
      v93 = (_QWORD *)(((unint64_t)v85 + v22 + v114 + v89) & v134);
      v94 = (_QWORD *)(((unint64_t)v86 + v22 + v92) & v134);
      *v93 = *v94;
      v95 = (void *)(((unint64_t)v93 + v91) & __nb);
      v96 = (const void *)(((unint64_t)v94 + v91) & __nb);
      v97 = v90;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v90 + 48))(v96, 1, v142))
      {
        v98 = v126;
        memcpy(v95, v96, v126);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v95, v96, v142);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v95, 0, 1, v142);
        v98 = v126;
      }
      *((_BYTE *)v95 + v98) = *((_BYTE *)v96 + v98);
      *(_QWORD *)(((v64 | 7) + v129) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v102 | 7) + v129) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v39 > 3)
        goto LABEL_76;
      v99 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v99 > 0xFFFA)
      {
        *(_DWORD *)((char *)v47 + v39) = 1;
        return v47;
      }
      if (v99 <= 0xFA)
LABEL_76:
        *((_BYTE *)v47 + v39) = 1;
      else
        *(_WORD *)((char *)v47 + v39) = 1;
      return v47;
    case 2u:
      v131 = ~v19;
      v133 = ~v22;
      __na = ~v21;
      v107 = v19;
      v138 = v27;
      v110 = v29;
      v113 = v32;
      v116 = v31;
      v119 = v21 + 8;
      v122 = *(_QWORD *)(v17 - 8);
      v125 = v34;
      v128 = v35;
      v141 = v17;
      *a1 = *v42;
      v50 = (_QWORD *)(((unint64_t)a1 + v23 + 8) & v44);
      v51 = (_QWORD *)(((unint64_t)v42 + v23 + 8) & v44);
      *v50 = *v51;
      v101 = (unint64_t)v50;
      v52 = (void *)(((unint64_t)v50 + v24) & v45);
      v53 = (unint64_t)v51;
      v54 = (const void *)(((unint64_t)v51 + v24) & v45);
      v55 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
      swift_retain();
      if (v55(v54, 1, AssociatedTypeWitness))
      {
        memcpy(v52, v54, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v52, v54, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v52, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v52 + v26) = *((_BYTE *)v54 + v26);
      v69 = v138 + v26;
      v70 = (_QWORD *)((v101 + v107 + v138 + v26) & v131);
      v71 = (_QWORD *)((v53 + v107 + v69) & v131);
      *v70 = *v71;
      v72 = (void *)(((unint64_t)v70 + v110) & v46);
      v73 = (const void *)(((unint64_t)v71 + v110) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48))(v73, 1, v136))
      {
        v74 = v116;
        memcpy(v72, v73, v116);
        v47 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v135 + 16))(v72, v73, v136);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v72, 0, 1, v136);
        v47 = a1;
        v74 = v116;
      }
      *((_BYTE *)v72 + v74) = *((_BYTE *)v73 + v74);
      v75 = (_QWORD *)(((unint64_t)v70 + v22 + v113 + v74) & v133);
      v76 = (_QWORD *)(((unint64_t)v71 + v22 + v113 + v74) & v133);
      *v75 = *v76;
      v77 = (void *)(((unint64_t)v75 + v119) & __na);
      v78 = (const void *)(((unint64_t)v76 + v119) & __na);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v122 + 48))(v78, 1, v141))
      {
        v79 = v125;
        memcpy(v77, v78, v125);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v122 + 16))(v77, v78, v141);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v77, 0, 1, v141);
        v79 = v125;
      }
      *((_BYTE *)v77 + v79) = *((_BYTE *)v78 + v79);
      v80 = (_QWORD *)(((v101 | 7) + v128) & 0xFFFFFFFFFFFFF8);
      v81 = (_QWORD *)(((v53 | 7) + v128) & 0xFFFFFFFFFFFFFFF8);
      *v80 = *v81;
      *(_QWORD *)(((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v39 <= 3)
      {
        v82 = ((1 << (8 * v39)) + 1) >> (8 * v39);
        if (v82 > 0xFFFA)
        {
          *(_DWORD *)((char *)v47 + v39) = 2;
          return v47;
        }
        if (v82 > 0xFA)
        {
          *(_WORD *)((char *)v47 + v39) = 2;
          return v47;
        }
      }
      *((_BYTE *)v47 + v39) = 2;
      return v47;
    case 3u:
      v47 = a1;
      *a1 = *v42;
      swift_retain();
      if (v39 <= 3)
      {
        v56 = ((1 << (8 * v39)) + 1) >> (8 * v39);
        if (v56 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v39) = 3;
          return v47;
        }
        if (v56 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v39) = 3;
          return v47;
        }
      }
      *((_BYTE *)a1 + v39) = 3;
      return v47;
    case 4u:
      v57 = *v42;
      v58 = *v42;
      v47 = a1;
      *a1 = v57;
      if (v39 <= 3)
      {
        v59 = ((1 << (8 * v39)) + 1) >> (8 * v39);
        if (v59 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v39) = 4;
          return v47;
        }
        if (v59 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v39) = 4;
          return v47;
        }
      }
      *((_BYTE *)a1 + v39) = 4;
      return v47;
    default:
      if (v39 > 3)
        goto LABEL_49;
      v60 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      v61 = 2;
      if (v60 > 0xFFFA)
        v61 = 4;
      if (v60 <= 0xFA)
LABEL_49:
        v61 = 1;
      v47 = a1;
      memcpy(a1, v42, v61 + v39);
      return v47;
  }
}

id *sub_23B9F05BC(id *a1, id *a2, _QWORD *a3)
{
  id *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  const void *v58;
  unsigned int (*v59)(const void *, uint64_t, uint64_t);
  size_t v60;
  unsigned int v61;
  id v62;
  id v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const void *v71;
  unsigned int (*v72)(const void *, uint64_t, uint64_t);
  unsigned int v73;
  _QWORD *v74;
  _QWORD *v75;
  void *v76;
  const void *v77;
  size_t v78;
  _QWORD *v79;
  _QWORD *v80;
  void *v81;
  const void *v82;
  size_t v83;
  _QWORD *v84;
  _QWORD *v85;
  void *v86;
  const void *v87;
  size_t v88;
  _QWORD *v89;
  _QWORD *v90;
  void *v91;
  const void *v92;
  size_t v93;
  _QWORD *v94;
  _QWORD *v95;
  unsigned int v96;
  __int16 v97;
  unsigned int v98;
  uint64_t v100;
  size_t __n;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  size_t v112;
  uint64_t v113;
  size_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t AssociatedTypeWitness;
  unint64_t v136;
  char v137;

  v3 = a1;
  if (a1 != a2)
  {
    v5 = a3[2];
    v7 = a3[3];
    v6 = a3[4];
    v104 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v105 = *(_QWORD *)(v104 + 64) + v9;
    v128 = v9;
    v10 = v105 & ~v9;
    v107 = v8;
    v11 = *(_QWORD *)(v6 - 8);
    v108 = *(_QWORD *)(v8 + 64);
    v131 = *(unsigned __int8 *)(v11 + 80);
    v12 = (v108 + v131 + v10) & ~v131;
    v115 = v11;
    v13 = *(_QWORD *)(v11 + 64);
    if (!*(_DWORD *)(v11 + 84))
      ++v13;
    __n = v13;
    v136 = v13 + v12;
    v106 = v5;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v15 = *(unsigned __int8 *)(v14 + 80);
    v109 = v7;
    v126 = swift_getAssociatedTypeWitness();
    v16 = *(_QWORD *)(v126 - 8);
    v17 = *(unsigned __int8 *)(v16 + 80);
    v18 = v17 | 7;
    v116 = v6;
    v19 = swift_getAssociatedTypeWitness();
    v20 = v15;
    v125 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    v22 = *(unsigned __int8 *)(v21 + 80);
    v23 = v22 | 7;
    v24 = v17 | v15 | v22 | 7;
    v25 = v15 + 8;
    v133 = v14;
    if (*(_DWORD *)(v14 + 84))
      v26 = *(_QWORD *)(v14 + 64);
    else
      v26 = *(_QWORD *)(v14 + 64) + 1;
    v111 = ((v15 + 8) & ~v15) + v26 + 1;
    v27 = v111 + v18;
    v132 = v17 | 7;
    v28 = (v111 + v18) & ~v18;
    v29 = v17 + 8;
    v127 = v16;
    if (*(_DWORD *)(v16 + 84))
      v30 = *(_QWORD *)(v16 + 64);
    else
      v30 = *(_QWORD *)(v16 + 64) + 1;
    v112 = v30;
    v113 = ((v17 + 8) & ~v17) + v30 + 1;
    v31 = v113 + v23;
    v32 = (v113 + v23 + v28) & ~v23;
    v122 = v22 + 8;
    v123 = *(_QWORD *)(v19 - 8);
    if (*(_DWORD *)(v21 + 84))
      v33 = *(_QWORD *)(v21 + 64);
    else
      v33 = *(_QWORD *)(v21 + 64) + 1;
    v114 = v33;
    v124 = ((v22 + 8) & ~v22) + v33 + v32 + 1;
    v34 = (v124 + (((v17 | v15 | v22) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8;
    v35 = v34 + 8;
    v3 = a1;
    if (v34 + 8 <= v136)
      v35 = v136;
    v36 = ((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v36 <= v35)
      v36 = v35;
    if (v36 <= 8)
      v37 = 8;
    else
      v37 = v36;
    v137 = 8 * v37;
    if (v37 <= 3)
    {
      v38 = ((1 << v137) + 1) >> v137;
      if (v38 > 0xFFFA)
      {
        v39 = *(_DWORD *)((char *)a1 + v37);
        goto LABEL_26;
      }
      if (v38 > 0xFA)
      {
        v39 = *(unsigned __int16 *)((char *)a1 + v37);
        goto LABEL_26;
      }
    }
    v39 = *((unsigned __int8 *)a1 + v37);
LABEL_26:
    if (v39 >= 5)
    {
      if (v37 <= 3)
        v40 = v37;
      else
        v40 = 4;
      __asm { BR              X13 }
    }
    v102 = ~v128;
    v103 = ~v131;
    v121 = v24;
    v117 = ~v24;
    v118 = ~v20;
    v119 = ~v132;
    v120 = ~v17;
    v110 = v22 | 7;
    v129 = ~v23;
    v41 = ~v22;
    switch(v39)
    {
      case 0u:
        (*(void (**)(id *, uint64_t))(v104 + 8))(a1, v106);
        (*(void (**)(unint64_t, uint64_t))(v107 + 8))(((unint64_t)a1 + v105) & v102, v109);
        v42 = ((((unint64_t)a1 + v105) & v102) + v108 + v131) & v103;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v115 + 48))(v42, 1, v116))
          (*(void (**)(unint64_t, uint64_t))(v115 + 8))(v42, v116);
        break;
      case 1u:
        swift_release();
        v46 = ((unint64_t)a1 + v121 + 8) & v117;
        v100 = v25;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))((v25 + v46) & v118, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v133 + 8))((v25 + v46) & v118, AssociatedTypeWitness);
        v47 = (v27 + v46) & v119;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))((v29 + v47) & v120, 1, v126))
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))((v29 + v47) & v120, v126);
        v48 = (v122 + ((v31 + v47) & v129)) & v41;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v48, 1, v125))
          (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v48, v125);
        goto LABEL_49;
      case 2u:
        swift_release();
        v43 = ((unint64_t)a1 + v121 + 8) & v117;
        v100 = v25;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))((v25 + v43) & v118, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v133 + 8))((v25 + v43) & v118, AssociatedTypeWitness);
        v44 = (v27 + v43) & v119;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))((v29 + v44) & v120, 1, v126))
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))((v29 + v44) & v120, v126);
        v45 = (v122 + ((v31 + v44) & v129)) & v41;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v45, 1, v125))
          (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v45, v125);
LABEL_49:
        swift_release();
        v3 = a1;
        v25 = v100;
        break;
      case 3u:
        swift_release();
        break;
      case 4u:

        break;
      default:
        goto LABEL_50;
    }
    if (v37 > 3)
      goto LABEL_53;
LABEL_50:
    v49 = ((1 << v137) + 1) >> v137;
    if (v49 > 0xFFFA)
    {
      v50 = *(_DWORD *)((char *)a2 + v37);
      if (v50 < 5)
        goto LABEL_62;
      goto LABEL_58;
    }
    if (v49 > 0xFA)
    {
      v50 = *(unsigned __int16 *)((char *)a2 + v37);
      if (v50 < 5)
      {
LABEL_62:
        switch(v50)
        {
          case 0u:
            (*(void (**)(id *, id *, uint64_t))(v104 + 16))(v3, a2, v106);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v107 + 16))(((unint64_t)v3 + v105) & v102, ((unint64_t)a2 + v105) & v102, v109);
            v52 = (void *)(((((unint64_t)v3 + v105) & v102) + v108 + v131) & v103);
            v53 = (const void *)(((((unint64_t)a2 + v105) & v102) + v108 + v131) & v103);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v115 + 48))(v53, 1, v116))
            {
              memcpy(v52, v53, __n);
              if (v37 > 3)
                goto LABEL_87;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v115 + 16))(v52, v53, v116);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v52, 0, 1, v116);
              if (v37 > 3)
              {
LABEL_87:
                *((_BYTE *)v3 + v37) = 0;
                return v3;
              }
            }
            v73 = ((1 << v137) + 1) >> v137;
            if (v73 > 0xFFFA)
            {
              *(_DWORD *)((char *)v3 + v37) = 0;
              return v3;
            }
            if (v73 > 0xFA)
            {
              *(_WORD *)((char *)v3 + v37) = 0;
              return v3;
            }
            goto LABEL_87;
          case 1u:
            *v3 = *a2;
            v67 = ((unint64_t)v3 + v121 + 8) & v117;
            v68 = ((unint64_t)a2 + v121 + 8) & v117;
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v69 = v25;
            v70 = (void *)((v25 + v67) & v118);
            v71 = (const void *)((v69 + v68) & v118);
            v72 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v133 + 48);
            swift_retain();
            if (v72(v71, 1, AssociatedTypeWitness))
            {
              memcpy(v70, v71, v26);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v133 + 16))(v70, v71, AssociatedTypeWitness);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v70, 0, 1, AssociatedTypeWitness);
            }
            *((_BYTE *)v70 + v26) = *((_BYTE *)v71 + v26);
            v79 = (_QWORD *)((v67 + v132 + v111) & v119);
            v80 = (_QWORD *)((v68 + v132 + v111) & v119);
            *v79 = *v80;
            v81 = (void *)(((unint64_t)v79 + v29) & v120);
            v82 = (const void *)(((unint64_t)v80 + v29) & v120);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48))(v82, 1, v126))
            {
              v83 = v112;
              memcpy(v81, v82, v112);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v127 + 16))(v81, v82, v126);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v81, 0, 1, v126);
              v83 = v112;
            }
            *((_BYTE *)v81 + v83) = *((_BYTE *)v82 + v83);
            v89 = (_QWORD *)(((unint64_t)v79 + v110 + v113) & v129);
            v90 = (_QWORD *)(((unint64_t)v80 + v110 + v113) & v129);
            *v89 = *v90;
            v91 = (void *)(((unint64_t)v89 + v122) & v41);
            v92 = (const void *)(((unint64_t)v90 + v122) & v41);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48))(v92, 1, v125))
            {
              v93 = v114;
              memcpy(v91, v92, v114);
              v3 = a1;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v123 + 16))(v91, v92, v125);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v91, 0, 1, v125);
              v3 = a1;
              v93 = v114;
            }
            *((_BYTE *)v91 + v93) = *((_BYTE *)v92 + v93);
            *(_QWORD *)(((v67 | 7) + v124) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v68 | 7) + v124) & 0xFFFFFFFFFFFFF8);
            swift_retain();
            if (v37 <= 3)
            {
              v97 = 1;
              v98 = ((1 << v137) + 1) >> v137;
              if (v98 > 0xFFFA)
              {
                *(_DWORD *)((char *)v3 + v37) = 1;
                return v3;
              }
              if (v98 > 0xFA)
                goto LABEL_119;
            }
            *((_BYTE *)v3 + v37) = 1;
            return v3;
          case 2u:
            *v3 = *a2;
            v54 = ((unint64_t)v3 + v121 + 8) & v117;
            v55 = ((unint64_t)a2 + v121 + 8) & v117;
            *(_QWORD *)v54 = *(_QWORD *)v55;
            v56 = v25;
            v57 = (void *)((v25 + v54) & v118);
            v58 = (const void *)((v56 + v55) & v118);
            v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v133 + 48);
            swift_retain();
            if (v59(v58, 1, AssociatedTypeWitness))
            {
              v60 = v26;
              memcpy(v57, v58, v26);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v133 + 16))(v57, v58, AssociatedTypeWitness);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v133 + 56))(v57, 0, 1, AssociatedTypeWitness);
              v60 = v26;
            }
            *((_BYTE *)v57 + v60) = *((_BYTE *)v58 + v60);
            v74 = (_QWORD *)((v54 + v132 + v111) & v119);
            v75 = (_QWORD *)((v55 + v132 + v111) & v119);
            *v74 = *v75;
            v76 = (void *)(((unint64_t)v74 + v29) & v120);
            v77 = (const void *)(((unint64_t)v75 + v29) & v120);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v127 + 48))(v77, 1, v126))
            {
              v78 = v112;
              memcpy(v76, v77, v112);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v127 + 16))(v76, v77, v126);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v76, 0, 1, v126);
              v78 = v112;
            }
            *((_BYTE *)v76 + v78) = *((_BYTE *)v77 + v78);
            v84 = (_QWORD *)(((unint64_t)v74 + v110 + v113) & v129);
            v85 = (_QWORD *)(((unint64_t)v75 + v110 + v113) & v129);
            *v84 = *v85;
            v86 = (void *)(((unint64_t)v84 + v122) & v41);
            v87 = (const void *)(((unint64_t)v85 + v122) & v41);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48))(v87, 1, v125))
            {
              v88 = v114;
              memcpy(v86, v87, v114);
              v3 = a1;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v123 + 16))(v86, v87, v125);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v86, 0, 1, v125);
              v3 = a1;
              v88 = v114;
            }
            *((_BYTE *)v86 + v88) = *((_BYTE *)v87 + v88);
            v94 = (_QWORD *)(((v54 | 7) + v124) & 0xFFFFFFFFFFFFF8);
            v95 = (_QWORD *)(((v55 | 7) + v124) & 0xFFFFFFFFFFFFFFF8);
            *v94 = *v95;
            *(_QWORD *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFF8);
            swift_retain();
            if (v37 <= 3)
            {
              v96 = ((1 << v137) + 1) >> v137;
              if (v96 > 0xFFFA)
              {
                *(_DWORD *)((char *)v3 + v37) = 2;
                return v3;
              }
              if (v96 > 0xFA)
              {
                v97 = 2;
                goto LABEL_119;
              }
            }
            *((_BYTE *)v3 + v37) = 2;
            return v3;
          case 3u:
            *v3 = *a2;
            swift_retain();
            if (v37 <= 3)
            {
              v61 = ((1 << v137) + 1) >> v137;
              if (v61 > 0xFFFA)
              {
                *(_DWORD *)((char *)v3 + v37) = 3;
                return v3;
              }
              if (v61 > 0xFA)
              {
                v97 = 3;
                goto LABEL_119;
              }
            }
            *((_BYTE *)v3 + v37) = 3;
            return v3;
          case 4u:
            v62 = *a2;
            v63 = *a2;
            *v3 = v62;
            if (v37 > 3)
              goto LABEL_75;
            v64 = ((1 << v137) + 1) >> v137;
            if (v64 > 0xFFFA)
            {
              *(_DWORD *)((char *)v3 + v37) = 4;
              return v3;
            }
            if (v64 > 0xFA)
            {
              v97 = 4;
LABEL_119:
              *(_WORD *)((char *)v3 + v37) = v97;
            }
            else
            {
LABEL_75:
              *((_BYTE *)v3 + v37) = 4;
            }
            return v3;
          default:
            if (v37 > 3)
              goto LABEL_80;
            v65 = ((1 << v137) + 1) >> v137;
            v66 = 2;
            if (v65 > 0xFFFA)
              v66 = 4;
            if (v65 <= 0xFA)
LABEL_80:
              v66 = 1;
            memcpy(v3, a2, v66 + v37);
            return v3;
        }
      }
    }
    else
    {
LABEL_53:
      v50 = *((unsigned __int8 *)a2 + v37);
      if (v50 < 5)
        goto LABEL_62;
    }
LABEL_58:
    if (v37 <= 3)
      v51 = v37;
    else
      v51 = 4;
    __asm { BR              X12 }
  }
  return v3;
}

_QWORD *sub_23B9F1410(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  size_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const void *v61;
  size_t v62;
  _QWORD *v63;
  _QWORD *v64;
  void *v65;
  const void *v66;
  size_t v67;
  _QWORD *v68;
  _QWORD *v69;
  void *v70;
  const void *v71;
  size_t v72;
  _QWORD *v73;
  _QWORD *v74;
  unsigned int v75;
  unsigned int v76;
  size_t v77;
  _QWORD *v78;
  _QWORD *v79;
  void *v80;
  const void *v81;
  size_t v82;
  uint64_t v83;
  uint64_t v84;
  size_t v85;
  _QWORD *v86;
  _QWORD *v87;
  void *v88;
  const void *v89;
  uint64_t v90;
  size_t v91;
  unsigned int v92;
  size_t __n;
  size_t __na;
  size_t __nb;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  size_t v109;
  size_t v110;
  size_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  size_t v118;
  size_t v119;
  size_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t AssociatedTypeWitness;
  uint64_t v128;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v4 = a3[2];
  v5 = a3[3];
  v6 = a3[4];
  v103 = *(_QWORD *)(v4 - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v106 = *(_QWORD *)(v103 + 64) + v8;
  v97 = v8;
  v9 = v106 & ~v8;
  v112 = v7;
  v10 = *(_QWORD *)(v6 - 8);
  v115 = *(_QWORD *)(v7 + 64);
  v100 = *(unsigned __int8 *)(v10 + 80);
  v11 = (v115 + v100 + v9) & ~v100;
  v121 = v10;
  v12 = *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v12;
  __n = v12;
  v132 = v12 + v11;
  v109 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v118 = v5;
  v126 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v126 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v16 | 7;
  v18 = swift_getAssociatedTypeWitness();
  v19 = v13;
  v20 = *(_QWORD *)(v18 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v21 | 7;
  v23 = v16 | v14 | v21 | 7;
  v24 = v14 + 8;
  v25 = (v14 + 8) & ~v14;
  if (*(_DWORD *)(v13 + 84))
    v26 = *(_QWORD *)(v13 + 64);
  else
    v26 = *(_QWORD *)(v13 + 64) + 1;
  v27 = v25 + 1;
  v28 = (v25 + 1 + v17 + v26) & ~v17;
  v29 = v16 + 8;
  v30 = (v16 + 8) & ~v16;
  v128 = v15;
  if (*(_DWORD *)(v15 + 84))
    v31 = *(_QWORD *)(v15 + 64);
  else
    v31 = *(_QWORD *)(v15 + 64) + 1;
  v32 = v30 + 1;
  v33 = (v30 + 1 + v22 + v31 + v28) & ~v22;
  if (*(_DWORD *)(v20 + 84))
    v34 = *(_QWORD *)(v20 + 64);
  else
    v34 = *(_QWORD *)(v20 + 64) + 1;
  v35 = ((v21 + 8) & ~v21) + v34 + v33 + 1;
  v36 = (v35 + (((v16 | v14 | v21) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = v36 + 8;
  if (v36 + 8 <= v132)
    v37 = v132;
  v38 = ((v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v38 <= v37)
    v38 = v37;
  if (v38 <= 8)
    v39 = 8;
  else
    v39 = v38;
  if (v39 > 3)
    goto LABEL_22;
  v40 = ((1 << (8 * v39)) + 1) >> (8 * v39);
  if (v40 <= 0xFFFA)
  {
    if (v40 > 0xFA)
    {
      v41 = *(unsigned __int16 *)((char *)a2 + v39);
LABEL_23:
      v42 = a2;
      if (v41 >= 5)
      {
LABEL_26:
        if (v39 <= 3)
          v43 = v39;
        else
          v43 = 4;
        __asm { BR              X15 }
      }
      goto LABEL_31;
    }
LABEL_22:
    v41 = *((unsigned __int8 *)a2 + v39);
    goto LABEL_23;
  }
  v42 = a2;
  v41 = *(_DWORD *)((char *)a2 + v39);
  if (v41 >= 5)
    goto LABEL_26;
LABEL_31:
  v44 = ~v23;
  v45 = ~v14;
  v46 = ~v16;
  switch(v41)
  {
    case 0u:
      v47 = a1;
      (*(void (**)(_QWORD *, _QWORD *, size_t))(v103 + 32))(a1, v42, v109);
      (*(void (**)(unint64_t, unint64_t, size_t))(v112 + 32))(((unint64_t)a1 + v106) & ~v97, ((unint64_t)v42 + v106) & ~v97, v118);
      v48 = (void *)(((((unint64_t)a1 + v106) & ~v97) + v115 + v100) & ~v100);
      v49 = (const void *)(((((unint64_t)v42 + v106) & ~v97) + v115 + v100) & ~v100);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48))(v49, 1, v6))
      {
        memcpy(v48, v49, __n);
        if (v39 > 3)
          goto LABEL_67;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v121 + 32))(v48, v49, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v48, 0, 1, v6);
        if (v39 > 3)
        {
LABEL_67:
          *((_BYTE *)a1 + v39) = 0;
          return v47;
        }
      }
      v76 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v76 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v39) = 0;
        return v47;
      }
      if (v76 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v39) = 0;
        return v47;
      }
      goto LABEL_67;
    case 1u:
      v125 = ~v17;
      __nb = ~v22;
      v99 = ~v21;
      v131 = v27;
      v102 = v17;
      v105 = v29;
      v108 = v32;
      v111 = v31;
      v114 = v21 + 8;
      v117 = *(_QWORD *)(v18 - 8);
      v120 = v34;
      v123 = v35;
      v134 = v18;
      *a1 = *v42;
      v58 = ((unint64_t)a1 + v23 + 8) & v44;
      v59 = ((unint64_t)v42 + v23 + 8) & v44;
      *(_QWORD *)v58 = *(_QWORD *)v59;
      v60 = (void *)((v24 + v58) & v45);
      v61 = (const void *)((v24 + v59) & v45);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v61, 1, AssociatedTypeWitness))
      {
        memcpy(v60, v61, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v60, v61, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v60, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v60 + v26) = *((_BYTE *)v61 + v26);
      v77 = v131 + v26;
      v78 = (_QWORD *)((v58 + v102 + v131 + v26) & v125);
      v79 = (_QWORD *)((v59 + v102 + v77) & v125);
      *v78 = *v79;
      v80 = (void *)(((unint64_t)v78 + v105) & v46);
      v81 = (const void *)(((unint64_t)v79 + v105) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v128 + 48))(v81, 1, v126))
      {
        memcpy(v80, v81, v111);
        v82 = v111;
        v47 = a1;
        v84 = v114;
        v83 = v117;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v128 + 32))(v80, v81, v126);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v80, 0, 1, v126);
        v47 = a1;
        v84 = v114;
        v83 = v117;
        v82 = v111;
      }
      *((_BYTE *)v80 + v82) = *((_BYTE *)v81 + v82);
      v85 = v108 + v82;
      v86 = (_QWORD *)(((unint64_t)v78 + v22 + v108 + v82) & __nb);
      v87 = (_QWORD *)(((unint64_t)v79 + v22 + v85) & __nb);
      *v86 = *v87;
      v88 = (void *)(((unint64_t)v86 + v84) & v99);
      v89 = (const void *)(((unint64_t)v87 + v84) & v99);
      v90 = v83;
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v89, 1, v134))
      {
        v91 = v120;
        memcpy(v88, v89, v120);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v90 + 32))(v88, v89, v134);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v88, 0, 1, v134);
        v91 = v120;
      }
      *((_BYTE *)v88 + v91) = *((_BYTE *)v89 + v91);
      *(_QWORD *)(((v58 | 7) + v123) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v59 | 7) + v123) & 0xFFFFFFFFFFFFF8);
      if (v39 > 3)
        goto LABEL_76;
      v92 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      if (v92 > 0xFFFA)
      {
        *(_DWORD *)((char *)v47 + v39) = 1;
        return v47;
      }
      if (v92 <= 0xFA)
LABEL_76:
        *((_BYTE *)v47 + v39) = 1;
      else
        *(_WORD *)((char *)v47 + v39) = 1;
      return v47;
    case 2u:
      v124 = ~v17;
      __na = ~v22;
      v98 = ~v21;
      v130 = v27;
      v101 = v17;
      v104 = v29;
      v107 = v32;
      v110 = v31;
      v113 = v21 + 8;
      v116 = *(_QWORD *)(v18 - 8);
      v119 = v34;
      v122 = v35;
      v133 = v18;
      *a1 = *v42;
      v50 = ((unint64_t)a1 + v23 + 8) & v44;
      v51 = ((unint64_t)v42 + v23 + 8) & v44;
      *(_QWORD *)v50 = *(_QWORD *)v51;
      v52 = (void *)((v24 + v50) & v45);
      v53 = (const void *)((v24 + v51) & v45);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v53, 1, AssociatedTypeWitness))
      {
        memcpy(v52, v53, v26);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v52, v53, AssociatedTypeWitness);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v52, 0, 1, AssociatedTypeWitness);
      }
      *((_BYTE *)v52 + v26) = *((_BYTE *)v53 + v26);
      v62 = v130 + v26;
      v63 = (_QWORD *)((v50 + v101 + v130 + v26) & v124);
      v64 = (_QWORD *)((v51 + v101 + v62) & v124);
      *v63 = *v64;
      v65 = (void *)(((unint64_t)v63 + v104) & v46);
      v66 = (const void *)(((unint64_t)v64 + v104) & v46);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v128 + 48))(v66, 1, v126))
      {
        v67 = v110;
        memcpy(v65, v66, v110);
        v47 = a1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v128 + 32))(v65, v66, v126);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v65, 0, 1, v126);
        v47 = a1;
        v67 = v110;
      }
      *((_BYTE *)v65 + v67) = *((_BYTE *)v66 + v67);
      v68 = (_QWORD *)(((unint64_t)v63 + v22 + v107 + v67) & __na);
      v69 = (_QWORD *)(((unint64_t)v64 + v22 + v107 + v67) & __na);
      *v68 = *v69;
      v70 = (void *)(((unint64_t)v68 + v113) & v98);
      v71 = (const void *)(((unint64_t)v69 + v113) & v98);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v116 + 48))(v71, 1, v133))
      {
        v72 = v119;
        memcpy(v70, v71, v119);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v116 + 32))(v70, v71, v133);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v70, 0, 1, v133);
        v72 = v119;
      }
      *((_BYTE *)v70 + v72) = *((_BYTE *)v71 + v72);
      v73 = (_QWORD *)(((v50 | 7) + v122) & 0xFFFFFFFFFFFFF8);
      v74 = (_QWORD *)(((v51 | 7) + v122) & 0xFFFFFFFFFFFFFFF8);
      *v73 = *v74;
      *(_QWORD *)(((unint64_t)v73 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFF8);
      if (v39 <= 3)
      {
        v75 = ((1 << (8 * v39)) + 1) >> (8 * v39);
        if (v75 > 0xFFFA)
        {
          *(_DWORD *)((char *)v47 + v39) = 2;
          return v47;
        }
        if (v75 > 0xFA)
        {
          *(_WORD *)((char *)v47 + v39) = 2;
          return v47;
        }
      }
      *((_BYTE *)v47 + v39) = 2;
      return v47;
    case 3u:
      v47 = a1;
      *a1 = *v42;
      if (v39 <= 3)
      {
        v54 = ((1 << (8 * v39)) + 1) >> (8 * v39);
        if (v54 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v39) = 3;
          return v47;
        }
        if (v54 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v39) = 3;
          return v47;
        }
      }
      *((_BYTE *)a1 + v39) = 3;
      return v47;
    case 4u:
      v47 = a1;
      *a1 = *v42;
      if (v39 <= 3)
      {
        v55 = ((1 << (8 * v39)) + 1) >> (8 * v39);
        if (v55 > 0xFFFA)
        {
          *(_DWORD *)((char *)a1 + v39) = 4;
          return v47;
        }
        if (v55 > 0xFA)
        {
          *(_WORD *)((char *)a1 + v39) = 4;
          return v47;
        }
      }
      *((_BYTE *)a1 + v39) = 4;
      return v47;
    default:
      if (v39 > 3)
        goto LABEL_49;
      v56 = ((1 << (8 * v39)) + 1) >> (8 * v39);
      v57 = 2;
      if (v56 > 0xFFFA)
        v57 = 4;
      if (v56 <= 0xFA)
LABEL_49:
        v57 = 1;
      v47 = a1;
      memcpy(a1, v42, v57 + v39);
      return v47;
  }
}

id *sub_23B9F1EB4(id *a1, id *a2, _QWORD *a3)
{
  id *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  size_t v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  size_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  size_t v68;
  unsigned int v69;
  uint64_t v70;
  unsigned int v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  const void *v75;
  size_t v76;
  _QWORD *v77;
  _QWORD *v78;
  void *v79;
  const void *v80;
  size_t v81;
  _QWORD *v82;
  _QWORD *v83;
  void *v84;
  const void *v85;
  size_t v86;
  char v87;
  _QWORD *v88;
  _QWORD *v89;
  void *v90;
  const void *v91;
  size_t v92;
  char v93;
  _QWORD *v94;
  _QWORD *v95;
  unsigned int v96;
  __int16 v97;
  unsigned int v98;
  uint64_t v100;
  uint64_t v101;
  size_t __n;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  size_t v111;
  uint64_t v112;
  size_t v113;
  uint64_t v114;
  uint64_t v115;
  size_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  id *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v136;
  uint64_t AssociatedTypeWitness;
  uint64_t v138;
  uint64_t v139;

  v3 = a1;
  if (a1 != a2)
  {
    v5 = a3[2];
    v6 = a3[3];
    v7 = a3[4];
    v105 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v106 = *(_QWORD *)(v105 + 64) + v9;
    v133 = v9;
    v10 = v106 & ~v9;
    v108 = v8;
    v11 = *(_QWORD *)(v7 - 8);
    v109 = *(_QWORD *)(v8 + 64);
    v136 = *(unsigned __int8 *)(v11 + 80);
    v12 = (v109 + v136 + v10) & ~v136;
    v117 = v11;
    v13 = *(_QWORD *)(v11 + 64);
    if (!*(_DWORD *)(v11 + 84))
      ++v13;
    __n = v13;
    v130 = v13 + v12;
    v107 = v5;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v15 = *(unsigned __int8 *)(v14 + 80);
    v110 = v6;
    v139 = swift_getAssociatedTypeWitness();
    v132 = v3;
    v16 = *(_QWORD *)(v139 - 8);
    v17 = *(unsigned __int8 *)(v16 + 80);
    v18 = v17 | 7;
    v118 = v7;
    v19 = swift_getAssociatedTypeWitness();
    v129 = v19;
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned __int8 *)(v20 + 80);
    v22 = v21 | 7;
    v23 = v17 | v15 | v21 | 7;
    v123 = v15 + 8;
    if (*(_DWORD *)(v14 + 84))
      v24 = *(_QWORD *)(v14 + 64);
    else
      v24 = *(_QWORD *)(v14 + 64) + 1;
    v111 = v24;
    v112 = ((v15 + 8) & ~v15) + v24 + 1;
    v25 = v112 + v18;
    v138 = v17 | 7;
    v124 = v17 + 8;
    v26 = *(_DWORD *)(v16 + 84);
    v125 = v16;
    v27 = *(_QWORD *)(v16 + 64);
    v3 = v132;
    if (v26)
      v28 = v27;
    else
      v28 = v27 + 1;
    v113 = v28;
    v114 = ((v17 + 8) & ~v17) + v28 + 1;
    v29 = v114 + v22;
    v126 = v21 + 8;
    v128 = *(_QWORD *)(v19 - 8);
    if (*(_DWORD *)(v20 + 84))
      v30 = *(_QWORD *)(v20 + 64);
    else
      v30 = *(_QWORD *)(v20 + 64) + 1;
    v116 = v30;
    v127 = ((v21 + 8) & ~v21) + v30 + ((v114 + v22 + (v25 & ~v18)) & ~v22) + 1;
    v31 = (v127 + (((v17 | v15 | v21) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8;
    v32 = v31 + 8;
    if (v31 + 8 <= v130)
      v32 = v130;
    v33 = ((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v33 <= v32)
      v33 = v32;
    if (v33 <= 8)
      v34 = 8;
    else
      v34 = v33;
    v35 = 8 * v34;
    if (v34 > 3)
      goto LABEL_23;
    v36 = ((1 << v35) + 1) >> v35;
    if (v36 > 0xFFFA)
    {
      v37 = *(_DWORD *)((char *)v132 + v34);
    }
    else
    {
      if (v36 <= 0xFA)
      {
LABEL_23:
        v37 = *((unsigned __int8 *)v132 + v34);
        goto LABEL_26;
      }
      v37 = *(unsigned __int16 *)((char *)v132 + v34);
    }
LABEL_26:
    v38 = AssociatedTypeWitness;
    if (v37 >= 5)
    {
      if (v34 <= 3)
        v39 = v34;
      else
        v39 = 4;
      __asm { BR              X13 }
    }
    v103 = ~v133;
    v104 = ~v136;
    v119 = ~v23;
    v120 = ~v15;
    v121 = ~v138;
    v122 = ~v17;
    v115 = v21 | 7;
    v131 = ~v22;
    v134 = ~v21;
    switch(v37)
    {
      case 0u:
        v40 = v17 | v15 | v21 | 7;
        (*(void (**)(id *, uint64_t))(v105 + 8))(v132, v107);
        (*(void (**)(unint64_t, uint64_t))(v108 + 8))(((unint64_t)v132 + v106) & v103, v110);
        v41 = ((((unint64_t)v132 + v106) & v103) + v109 + v136) & v104;
        v42 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v117 + 48))(v41, 1, v118);
        v23 = v40;
        if (v42)
          break;
        (*(void (**)(unint64_t, uint64_t))(v117 + 8))(v41, v118);
        v23 = v40;
        if (v34 > 3)
          goto LABEL_56;
        goto LABEL_54;
      case 1u:
        v47 = v17 | v15 | v21 | 7;
        swift_release();
        v100 = v47;
        v48 = ((unint64_t)v132 + v47 + 8) & v119;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((v123 + v48) & v120, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v14 + 8))((v123 + v48) & v120, AssociatedTypeWitness);
        v101 = v14;
        v49 = (v25 + v48) & v121;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))((v124 + v49) & v122, 1, v139))
          (*(void (**)(uint64_t, uint64_t))(v125 + 8))((v124 + v49) & v122, v139);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))((v126 + ((v29 + v49) & v131)) & v134, 1, v129))(*(void (**)(uint64_t, uint64_t))(v128 + 8))((v126 + ((v29 + v49) & v131)) & v134, v129);
        goto LABEL_53;
      case 2u:
        v43 = v17 | v15 | v21 | 7;
        swift_release();
        v100 = v43;
        v44 = ((unint64_t)v132 + v43 + 8) & v119;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((v123 + v44) & v120, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v14 + 8))((v123 + v44) & v120, AssociatedTypeWitness);
        v101 = v14;
        v45 = (v25 + v44) & v121;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))((v124 + v45) & v122, 1, v139))
          (*(void (**)(uint64_t, uint64_t))(v125 + 8))((v124 + v45) & v122, v139);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))((v126 + ((v29 + v45) & v131)) & v134, 1, v129))(*(void (**)(uint64_t, uint64_t))(v128 + 8))((v126 + ((v29 + v45) & v131)) & v134, v129);
LABEL_53:
        swift_release();
        v38 = AssociatedTypeWitness;
        v23 = v100;
        v14 = v101;
        if (v34 <= 3)
          goto LABEL_54;
        goto LABEL_56;
      case 3u:
        v46 = v17 | v15 | v21 | 7;
        swift_release();
        goto LABEL_44;
      case 4u:
        v46 = v17 | v15 | v21 | 7;

LABEL_44:
        v23 = v46;
        break;
      default:
        break;
    }
    if (v34 > 3)
    {
LABEL_56:
      v51 = *((unsigned __int8 *)a2 + v34);
      if (v51 >= 5)
        goto LABEL_57;
      goto LABEL_62;
    }
LABEL_54:
    v50 = ((1 << v35) + 1) >> v35;
    if (v50 > 0xFFFA)
    {
      v51 = *(_DWORD *)((char *)a2 + v34);
      if (v51 < 5)
        goto LABEL_62;
    }
    else
    {
      if (v50 <= 0xFA)
        goto LABEL_56;
      v51 = *(unsigned __int16 *)((char *)a2 + v34);
      if (v51 < 5)
      {
LABEL_62:
        switch(v51)
        {
          case 0u:
            (*(void (**)(id *, id *, uint64_t))(v105 + 32))(v132, a2, v107);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v108 + 32))(((unint64_t)v132 + v106) & v103, ((unint64_t)a2 + v106) & v103, v110);
            v53 = (void *)(((((unint64_t)v132 + v106) & v103) + v109 + v136) & v104);
            v54 = (const void *)(((((unint64_t)a2 + v106) & v103) + v109 + v136) & v104);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v117 + 48))(v54, 1, v118))
            {
              memcpy(v53, v54, __n);
              if (v34 > 3)
                goto LABEL_89;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v117 + 32))(v53, v54, v118);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v53, 0, 1, v118);
              if (v34 > 3)
              {
LABEL_89:
                *((_BYTE *)v132 + v34) = 0;
                return v3;
              }
            }
            v71 = ((1 << v35) + 1) >> v35;
            if (v71 > 0xFFFA)
            {
              *(_DWORD *)((char *)v132 + v34) = 0;
              return v3;
            }
            if (v71 > 0xFA)
            {
              *(_WORD *)((char *)v132 + v34) = 0;
              return v3;
            }
            goto LABEL_89;
          case 1u:
            *v132 = *a2;
            v63 = v14;
            v64 = ((unint64_t)v132 + v23 + 8) & v119;
            v65 = ((unint64_t)a2 + v23 + 8) & v119;
            *(_QWORD *)v64 = *(_QWORD *)v65;
            v66 = (void *)((v123 + v64) & v120);
            v67 = (const void *)((v123 + v65) & v120);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48))(v67, 1, v38))
            {
              v68 = v111;
              memcpy(v66, v67, v111);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v63 + 32))(v66, v67, v38);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v66, 0, 1, v38);
              v68 = v111;
            }
            *((_BYTE *)v66 + v68) = *((_BYTE *)v67 + v68);
            v77 = (_QWORD *)((v64 + v138 + v112) & v121);
            v78 = (_QWORD *)((v65 + v138 + v112) & v121);
            *v77 = *v78;
            v79 = (void *)(((unint64_t)v77 + v124) & v122);
            v80 = (const void *)(((unint64_t)v78 + v124) & v122);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v125 + 48))(v80, 1, v139))
            {
              v81 = v113;
              memcpy(v79, v80, v113);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v125 + 32))(v79, v80, v139);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v79, 0, 1, v139);
              v81 = v113;
            }
            *((_BYTE *)v79 + v81) = *((_BYTE *)v80 + v81);
            v88 = (_QWORD *)(((unint64_t)v77 + v115 + v114) & v131);
            v89 = (_QWORD *)(((unint64_t)v78 + v115 + v114) & v131);
            *v88 = *v89;
            v90 = (void *)(((unint64_t)v88 + v126) & v134);
            v91 = (const void *)(((unint64_t)v89 + v126) & v134);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v128 + 48))(v91, 1, v129))
            {
              v92 = v116;
              memcpy(v90, v91, v116);
              v93 = 8 * v34;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v128 + 32))(v90, v91, v129);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v90, 0, 1, v129);
              v93 = 8 * v34;
              v92 = v116;
            }
            *((_BYTE *)v90 + v92) = *((_BYTE *)v91 + v92);
            *(_QWORD *)(((v64 | 7) + v127) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v65 | 7) + v127) & 0xFFFFFFFFFFFFF8);
            if (v34 <= 3)
            {
              v97 = 1;
              v98 = ((1 << v93) + 1) >> v93;
              if (v98 > 0xFFFA)
              {
                *(_DWORD *)((char *)v132 + v34) = 1;
                return v3;
              }
              if (v98 > 0xFA)
                goto LABEL_121;
            }
            *((_BYTE *)v132 + v34) = 1;
            return v3;
          case 2u:
            *v132 = *a2;
            v55 = v14;
            v56 = ((unint64_t)v132 + v23 + 8) & v119;
            v57 = ((unint64_t)a2 + v23 + 8) & v119;
            *(_QWORD *)v56 = *(_QWORD *)v57;
            v58 = (void *)((v123 + v56) & v120);
            v59 = (const void *)((v123 + v57) & v120);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v59, 1, v38))
            {
              v60 = v111;
              memcpy(v58, v59, v111);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v55 + 32))(v58, v59, v38);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v38);
              v60 = v111;
            }
            *((_BYTE *)v58 + v60) = *((_BYTE *)v59 + v60);
            v72 = (_QWORD *)((v56 + v138 + v112) & v121);
            v73 = (_QWORD *)((v57 + v138 + v112) & v121);
            *v72 = *v73;
            v74 = (void *)(((unint64_t)v72 + v124) & v122);
            v75 = (const void *)(((unint64_t)v73 + v124) & v122);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v125 + 48))(v75, 1, v139))
            {
              v76 = v113;
              memcpy(v74, v75, v113);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v125 + 32))(v74, v75, v139);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v74, 0, 1, v139);
              v76 = v113;
            }
            *((_BYTE *)v74 + v76) = *((_BYTE *)v75 + v76);
            v82 = (_QWORD *)(((unint64_t)v72 + v115 + v114) & v131);
            v83 = (_QWORD *)(((unint64_t)v73 + v115 + v114) & v131);
            *v82 = *v83;
            v84 = (void *)(((unint64_t)v82 + v126) & v134);
            v85 = (const void *)(((unint64_t)v83 + v126) & v134);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v128 + 48))(v85, 1, v129))
            {
              v86 = v116;
              memcpy(v84, v85, v116);
              v87 = 8 * v34;
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v128 + 32))(v84, v85, v129);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v84, 0, 1, v129);
              v87 = 8 * v34;
              v86 = v116;
            }
            *((_BYTE *)v84 + v86) = *((_BYTE *)v85 + v86);
            v94 = (_QWORD *)(((v56 | 7) + v127) & 0xFFFFFFFFFFFFF8);
            v95 = (_QWORD *)(((v57 | 7) + v127) & 0xFFFFFFFFFFFFFFF8);
            *v94 = *v95;
            *(_QWORD *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFF8);
            if (v34 <= 3)
            {
              v96 = ((1 << v87) + 1) >> v87;
              if (v96 > 0xFFFA)
              {
                *(_DWORD *)((char *)v132 + v34) = 2;
                return v3;
              }
              if (v96 > 0xFA)
              {
                v97 = 2;
                goto LABEL_121;
              }
            }
            *((_BYTE *)v132 + v34) = 2;
            return v3;
          case 3u:
            *v132 = *a2;
            if (v34 <= 3)
            {
              v61 = ((1 << v35) + 1) >> v35;
              if (v61 > 0xFFFA)
              {
                *(_DWORD *)((char *)v132 + v34) = 3;
                return v3;
              }
              if (v61 > 0xFA)
              {
                v97 = 3;
                goto LABEL_121;
              }
            }
            *((_BYTE *)v132 + v34) = 3;
            return v3;
          case 4u:
            *v132 = *a2;
            if (v34 > 3)
              goto LABEL_75;
            v62 = ((1 << v35) + 1) >> v35;
            if (v62 > 0xFFFA)
            {
              *(_DWORD *)((char *)v132 + v34) = 4;
              return v3;
            }
            if (v62 > 0xFA)
            {
              v97 = 4;
LABEL_121:
              *(_WORD *)((char *)v132 + v34) = v97;
            }
            else
            {
LABEL_75:
              *((_BYTE *)v132 + v34) = 4;
            }
            return v3;
          default:
            if (v34 > 3)
              goto LABEL_84;
            v69 = ((1 << v35) + 1) >> v35;
            v70 = 2;
            if (v69 > 0xFFFA)
              v70 = 4;
            if (v69 <= 0xFA)
LABEL_84:
              v70 = 1;
            memcpy(v132, a2, v70 + v34);
            return v3;
        }
      }
    }
LABEL_57:
    if (v34 <= 3)
      v52 = v34;
    else
      v52 = 4;
    __asm { BR              X12 }
  }
  return v3;
}

uint64_t sub_23B9F2D20(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  char v39;
  int v40;
  unsigned int v42;
  int v43;
  int v44;
  unsigned int v45;
  unint64_t v48;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v48 = v7 + v4;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v13 | 7;
  v15 = ((v9 + 8) & ~v9) + (v11 | 7) + *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v15;
  v16 = (v15 + 1) & ~(v11 | 7);
  v17 = ((v11 + 8) & ~v11) + v14 + *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v17;
  v18 = (v17 + v16 + 1) & ~v14;
  v19 = *(_DWORD *)(v12 + 84);
  v20 = ((v13 + 8) & ~v13)
      + *(_QWORD *)(v12 + 64)
      + (((v11 | v9 | v13) & 0xF8 ^ 0x1F8) & ((v11 | v9 | v13) + 8));
  if (!v19)
    ++v20;
  v21 = (v20 + v18 + 8) & 0xFFFFFFFFFFFFFFF8;
  v22 = v21 + 8;
  if (v21 + 8 <= v48)
    v22 = v48;
  v23 = ((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v23 <= v22)
    v23 = v22;
  if (v23 <= 8)
    v23 = 8;
  if (v23 > 3)
  {
    v24 = 6;
    goto LABEL_20;
  }
  v25 = ((1 << (8 * v23)) + 1) >> (8 * v23);
  if (v25 <= 0xFFFA)
  {
    v24 = v25 + 5;
    if (v25 > 0xFA)
    {
      v27 = 16;
      v26 = a2;
LABEL_21:
      v28 = (1 << v27) - v24;
      if ((v28 & 0x80000000) != 0)
        v28 = 0x7FFFFFFF;
      if (v23 > 3)
        goto LABEL_29;
LABEL_26:
      v29 = ((1 << (8 * v23)) + 1) >> (8 * v23);
      v30 = 2;
      if (v29 > 0xFFFA)
        v30 = 4;
      if (v29 > 0xFA)
        goto LABEL_30;
      goto LABEL_29;
    }
LABEL_20:
    v26 = a2;
    v27 = 8;
    goto LABEL_21;
  }
  v28 = 0x7FFFFFFF;
  v26 = a2;
  if (v23 <= 3)
    goto LABEL_26;
LABEL_29:
  v30 = 1;
LABEL_30:
  if (!v26)
    return 0;
  if (v26 <= v28)
    goto LABEL_48;
  v31 = v30 + v23;
  v32 = 8 * v31;
  if (v31 <= 3)
  {
    v34 = ((v26 - v28 + ~(-1 << v32)) >> v32) + 1;
    if (HIWORD(v34))
    {
      v33 = *(_DWORD *)(a1 + v31);
      if (!v33)
        goto LABEL_48;
      goto LABEL_41;
    }
    if (v34 > 0xFF)
    {
      v33 = *(unsigned __int16 *)(a1 + v31);
      if (!*(_WORD *)(a1 + v31))
        goto LABEL_48;
      goto LABEL_41;
    }
    if (v34 < 2)
    {
LABEL_48:
      if (v28)
      {
        if (v23 <= 3)
        {
          v42 = ((1 << (8 * v23)) + 1) >> (8 * v23);
          if (v42 > 0xFFFA)
          {
            v37 = *(_DWORD *)(a1 + v23);
            v38 = ~v37;
LABEL_58:
            v45 = 0x7FFFFFFF;
LABEL_59:
            if (v45 > v38)
              return -v37;
            else
              return 0;
          }
          v40 = v42 + 5;
          if (v42 > 0xFA)
          {
            v44 = *(unsigned __int16 *)(a1 + v23);
            v37 = v44 | 0xFFFF0000;
            v38 = v44 ^ 0xFFFF;
            v39 = 16;
          }
          else
          {
            v43 = *(unsigned __int8 *)(a1 + v23);
            v37 = v43 | 0xFFFFFF00;
            v38 = v43 ^ 0xFF;
            v39 = 8;
          }
        }
        else
        {
          v36 = *(unsigned __int8 *)(a1 + v23);
          v37 = v36 | 0xFFFFFF00;
          v38 = v36 ^ 0xFF;
          v39 = 8;
          v40 = 6;
        }
        v45 = (1 << v39) - v40;
        if ((v45 & 0x80000000) == 0)
          goto LABEL_59;
        goto LABEL_58;
      }
      return 0;
    }
  }
  v33 = *(unsigned __int8 *)(a1 + v31);
  if (!*(_BYTE *)(a1 + v31))
    goto LABEL_48;
LABEL_41:
  v35 = (v33 - 1) << v32;
  if (v31 > 3)
    v35 = 0;
  if ((_DWORD)v31)
  {
    if (v31 > 3)
      LODWORD(v31) = 4;
    __asm { BR              X12 }
  }
  return v28 + v35 + 1;
}

void sub_23B9F3158(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  _BYTE *v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  size_t v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unint64_t v40;

  v4 = *(_QWORD *)(a4[4] - 8);
  v5 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  v40 = v8 + v5;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | 7;
  v16 = ((v10 + 8) & ~v10) + (v12 | 7) + *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v16;
  v17 = (v16 + 1) & ~(v12 | 7);
  v18 = ((v12 + 8) & ~v12) + v15 + *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v18;
  v19 = (v18 + v17 + 1) & ~v15;
  v20 = *(_DWORD *)(v13 + 84);
  v21 = ((v14 + 8) & ~v14)
      + *(_QWORD *)(v13 + 64)
      + (((v12 | v10 | v14) & 0xF8 ^ 0x1F8) & ((v12 | v10 | v14) + 8));
  if (!v20)
    ++v21;
  v22 = (v21 + v19 + 8) & 0xFFFFFFFFFFFFFFF8;
  v23 = v22 + 8;
  if (v22 + 8 <= v40)
    v23 = v40;
  v24 = ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v24 <= v23)
    v24 = v23;
  if (v24 <= 8)
    v24 = 8;
  v25 = 8 * v24;
  if (v24 <= 3)
  {
    v34 = ((1 << v25) + 1) >> v25;
    if (v34 > 0xFFFA)
    {
      v31 = 0x7FFFFFFF;
      v27 = a1;
      v29 = a3;
      v28 = a2;
      if (v24 > 3)
        goto LABEL_30;
      goto LABEL_22;
    }
    v26 = v34 + 5;
    if (v34 > 0xFA)
    {
      v30 = 16;
      v27 = a1;
      v29 = a3;
      v28 = a2;
LABEL_19:
      v31 = (1 << v30) - v26;
      if ((v31 & 0x80000000) != 0)
        v31 = 0x7FFFFFFF;
      if (v24 > 3)
        goto LABEL_30;
LABEL_22:
      v32 = ((1 << v25) + 1) >> v25;
      v33 = 2;
      if (v32 > 0xFFFA)
        v33 = 4;
      if (v32 > 0xFA)
      {
LABEL_31:
        v35 = v33 + v24;
        if (v29 <= v31)
        {
          v36 = 0;
        }
        else if (v35 <= 3)
        {
          v38 = ((v29 - v31 + ~(-1 << (8 * v35))) >> (8 * v35)) + 1;
          if (HIWORD(v38))
          {
            v36 = 4u;
          }
          else if (v38 >= 0x100)
          {
            v36 = 2;
          }
          else
          {
            v36 = v38 > 1;
          }
        }
        else
        {
          v36 = 1u;
        }
        if (v31 < v28)
        {
          v37 = ~v31 + v28;
          if (v35 < 4)
          {
            if ((_DWORD)v35)
            {
              v39 = v37 & ~(-1 << (8 * v35));
              bzero(v27, v35);
              if ((_DWORD)v35 == 3)
              {
                *(_WORD *)v27 = v39;
                v27[2] = BYTE2(v39);
              }
              else if ((_DWORD)v35 == 2)
              {
                *(_WORD *)v27 = v39;
              }
              else
              {
                *v27 = v39;
              }
            }
          }
          else
          {
            bzero(v27, v35);
            *(_DWORD *)v27 = v37;
          }
          __asm { BR              X10 }
        }
        __asm { BR              X12 }
      }
LABEL_30:
      v33 = 1;
      goto LABEL_31;
    }
  }
  else
  {
    v26 = 6;
  }
  v27 = a1;
  v29 = a3;
  v28 = a2;
  v30 = 8;
  goto LABEL_19;
}

uint64_t sub_23B9F3584(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;

  v2 = *(_QWORD *)(a2[4] - 8);
  v3 = (((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_DWORD *)(v2 + 84);
  v5 = *(_QWORD *)(v2 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v26 = v6 + v3;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v12 | 7;
  v14 = ((v8 + 8) & ~v8) + (v10 | 7) + *(_QWORD *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84))
    ++v14;
  v15 = (v14 + 1) & ~(v10 | 7);
  v16 = ((v10 + 8) & ~v10) + v13 + *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v16;
  v17 = (v16 + v15 + 1) & ~v13;
  v18 = *(_DWORD *)(v11 + 84);
  v19 = ((v12 + 8) & ~v12)
      + *(_QWORD *)(v11 + 64)
      + (((v10 | v8 | v12) & 0xF8 ^ 0x1F8) & ((v10 | v8 | v12) + 8));
  if (!v18)
    ++v19;
  v20 = (v19 + v17 + 8) & 0xFFFFFFFFFFFFFFF8;
  v21 = v20 + 8;
  if (v20 + 8 <= v26)
    v21 = v26;
  v22 = ((v20 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v22 <= v21)
    v22 = v21;
  if (v22 <= 8)
    v22 = 8;
  if (v22 > 3)
    goto LABEL_17;
  v24 = ((1 << (8 * v22)) + 1) >> (8 * v22);
  if (v24 > 0xFFFA)
  {
    result = *(unsigned int *)(a1 + v22);
  }
  else
  {
    if (v24 <= 0xFA)
    {
LABEL_17:
      result = *(unsigned __int8 *)(a1 + v22);
      goto LABEL_22;
    }
    result = *(unsigned __int16 *)(a1 + v22);
  }
LABEL_22:
  if (result >= 5)
  {
    if (v22 <= 3)
      v25 = v22;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23B9F381C(char *a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  size_t v25;
  void *v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  int v31;
  unint64_t v33;

  v3 = *(_QWORD *)(a3[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v33 = v7 + v4;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  result = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(result - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v14 | 7;
  v16 = ((v9 + 8) & ~v9) + (v11 | 7) + *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v16;
  v17 = (v16 + 1) & ~(v11 | 7);
  v18 = ((v11 + 8) & ~v11) + v15 + *(_QWORD *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84))
    ++v18;
  v19 = (v18 + v17 + 1) & ~v15;
  v20 = *(_DWORD *)(v13 + 84);
  v21 = ((v14 + 8) & ~v14)
      + *(_QWORD *)(v13 + 64)
      + (((v11 | v9 | v14) & 0xF8 ^ 0x1F8) & ((v11 | v9 | v14) + 8));
  if (!v20)
    ++v21;
  v22 = (v21 + v19 + 8) & 0xFFFFFFFFFFFFFFF8;
  v23 = v22 + 8;
  if (v22 + 8 <= v33)
    v23 = v33;
  v24 = ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v24 <= v23)
    v24 = v23;
  if (v24 <= 8)
    v25 = 8;
  else
    v25 = v24;
  if (a2 > 4)
  {
    if (v25 < 4)
    {
      v28 = ((a2 - 5) >> (8 * v25)) + 5;
      v26 = a1;
      v29 = (unsigned int *)&a1[v25];
      v30 = ((1 << (8 * v25)) + 1) >> (8 * v25);
      if (v30 > 0xFFFA)
      {
        *v29 = v28;
      }
      else if (v30 > 0xFA)
      {
        *(_WORD *)v29 = v28;
      }
      else
      {
        *(_BYTE *)v29 = v28;
      }
    }
    else
    {
      v26 = a1;
      a1[v25] = 5;
    }
    if (v25 >= 4)
      v31 = 4;
    else
      v31 = v25;
    bzero(v26, v25);
    __asm { BR              X10 }
  }
  if (v25 > 3)
    goto LABEL_19;
  v27 = ((1 << (8 * v25)) + 1) >> (8 * v25);
  if (v27 > 0xFFFA)
  {
    *(_DWORD *)&a1[v25] = a2;
  }
  else
  {
    if (v27 <= 0xFA)
    {
LABEL_19:
      a1[v25] = a2;
      return result;
    }
    *(_WORD *)&a1[v25] = a2;
  }
  return result;
}

void type metadata accessor for CombineLatestStateMachine.State.Upstream()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9F3B24()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B9F3B2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB8ACA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23B9F3BAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  void *v13;
  const void *v14;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || v8 + ((v7 + 8) & ~v7) + 1 > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v13 = (void *)(((unint64_t)a1 + v7 + 8) & ~v7);
    v14 = (const void *)(((unint64_t)a2 + v7 + 8) & ~v7);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
    {
      memcpy(v13, v14, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v13, v14, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
    }
    *((_BYTE *)v13 + v8) = *((_BYTE *)v14 + v8);
  }
  return v3;
}

uint64_t sub_23B9F3CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 40);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(v4, v2);
  return result;
}

_QWORD *sub_23B9F3D30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  *((_BYTE *)v7 + v12) = *((_BYTE *)v8 + v12);
  return a1;
}

_QWORD *sub_23B9F3E04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, v4);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v13 = *(_QWORD *)(v5 + 64);
  else
    v13 = *(_QWORD *)(v5 + 64) + 1;
  *((_BYTE *)v7 + v13) = *((_BYTE *)v8 + v13);
  return a1;
}

_QWORD *sub_23B9F3F24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  *((_BYTE *)v7 + v12) = *((_BYTE *)v8 + v12);
  return a1;
}

_QWORD *sub_23B9F3FF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, v4);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v13 = *(_QWORD *)(v5 + 64);
  else
    v13 = *(_QWORD *)(v5 + 64) + 1;
  *((_BYTE *)v7 + v13) = *((_BYTE *)v8 + v13);
  return a1;
}

uint64_t sub_23B9F4118(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (v5)
    v8 = 1;
  else
    v8 = 2;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + *(_QWORD *)(v4 + 64) + ((v9 + 8) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(_WORD *)((char *)a1 + v11))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      if (v6 > 0x7FFFFFFE)
      {
        v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v9 + 8) & ~v9);
        if (v18 >= 2)
          return v18 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v17) = -1;
        if ((v17 + 1) >= 2)
          return v17;
        else
          return 0;
      }
    }
  }
  v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((_BYTE *)a1 + v11))
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_23B9F42AC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 40) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 1;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v11 + ((*(unsigned __int8 *)(v7 + 80) + 8) & ~*(unsigned __int8 *)(v7 + 80)) != -1)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_23B9F4518()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23B9F4520()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_23B9F4540()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_23B9F4550()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_23B9F4558()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_23B9F4564()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for ManagedCriticalState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ManagedCriticalState);
}

void sub_23B9F4578()
{
  JUMPOUT(0x24260D8DCLL);
}

void sub_23B9F4588()
{
  JUMPOUT(0x24260D8DCLL);
}

uint64_t sub_23B9F4598()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_23B9F4628()
{
  JUMPOUT(0x24260D8DCLL);
}

void type metadata accessor for AsyncThrottleSequence.Iterator()
{
  JUMPOUT(0x24260D81CLL);
}

void sub_23B9F4648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B990D68;
  sub_23B9DF0AC(a1, v1);
}

void sub_23B9F469C()
{
  sub_23B9DFDE8();
}

void type metadata accessor for MergeStateMachine.CancelledAction()
{
  JUMPOUT(0x24260D81CLL);
}

unint64_t sub_23B9F46B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5E8A0;
  if (!qword_256A5E8A0)
  {
    v1 = sub_23BB8A9B8();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE6848], v1);
    atomic_store(result, (unint64_t *)&qword_256A5E8A0);
  }
  return result;
}

unint64_t sub_23B9F46F8(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void type metadata accessor for MergeStateMachine.NextAction()
{
  JUMPOUT(0x24260D81CLL);
}

void sub_23B9F4754()
{
  sub_23B9DFD28();
}

uint64_t sub_23B9F476C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *((_QWORD *)v0 + 4);
  v12 = *((_QWORD *)v0 + 5);
  v2 = *((_QWORD *)v0 + 6);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v12 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_23BB8ACA0() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(&v0[v4], v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v6], v12);
  v10 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&v0[v9], 1, v2))
    (*(void (**)(char *, uint64_t))(v10 + 8))(&v0[v9], v2);
  return swift_deallocObject();
}

uint64_t sub_23B9F488C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(v1[4] - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1[5] - 8);
  v7 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB8ACA0() - 8) + 80);
  v10 = v7 + v8 + v9;
  v11 = v1[10];
  v12 = (char *)v1 + v5;
  v13 = (char *)v1 + v7;
  v14 = (char *)v1 + (v10 & ~v9);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_23B97C964;
  v15[5] = v13;
  v15[6] = v14;
  v15[3] = v11;
  v15[4] = v12;
  v15[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B9F4964(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_23B990D68;
  return sub_23B9E02D8(a1, a2, v6, v7, v9, v8);
}

void type metadata accessor for MergeStateMachine.UpstreamThrewAction()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9F49F0(int a1, id a2, unint64_t a3)
{
  uint64_t result;

  if (a3 >> 62 == 1)
  {

    swift_bridgeObjectRelease();
    return swift_release();
  }
  else if (!(a3 >> 62))
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B9F4A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_23B9F4AF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[7];
  v5 = v1[11];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1[2];
  v9 = v1[3];
  v10 = (uint64_t)v1 + v7;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_23B97C964;
  sub_23B9E0D1C(a1, v8, v9, v10, v11, v4, v5);
}

uint64_t sub_23B9F4BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for MergeStateMachine.ElementProducedAction()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for MergeStateMachine.UpstreamFinishedAction()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for MergeStateMachine.ChildTaskSuspendedAction()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for AsyncChain2Sequence.Iterator()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for MergeStateMachine.IteratorDeinitializedAction()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for CombineLatestStateMachine.IteratorDeinitializedAction()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9F4C34(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B9F4C60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B990D68;
  return sub_23B9D7B98(a1, v1);
}

void sub_23B9F4CB4()
{
  sub_23B9D87FC();
}

uint64_t sub_23B9F4CBC(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_23B9F4CD0();
  return result;
}

uint64_t sub_23B9F4CD0()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_23B9F4D00()
{
  sub_23B9D7E1C();
}

void type metadata accessor for CombineLatestStateMachine.NextAction()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9F4D14()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *((_QWORD *)v0 + 4);
  v12 = *((_QWORD *)v0 + 5);
  v2 = *((_QWORD *)v0 + 6);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v12 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_23BB8ACA0() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(&v0[v4], v1);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v6], v12);
  v10 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&v0[v9], 1, v2))
    (*(void (**)(char *, uint64_t))(v10 + 8))(&v0[v9], v2);
  return swift_deallocObject();
}

uint64_t sub_23B9F4E44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 32) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(*(_QWORD *)(v1 + 40) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + v6 + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB8ACA0() - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = v1 + v5;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = v1 + v8;
  v15 = v1 + (v11 & ~v10);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_23B990D68;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B9F4F28(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = (_QWORD *)v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_23B990D68;
  return sub_23B9D8D68(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_23B9F4FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9F5030(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[3];
  v5 = *(_QWORD *)(v1[4] - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v1[2];
  v8 = (uint64_t)v1 + v6;
  v9 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23B9D9694(a1, v7, v4, v8, v9);
}

uint64_t sub_23B9F50D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9F5158(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1[5] - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = (uint64_t)v1 + v5;
  v9 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23B9DA6F0(a1, v6, v7, v8, v9);
}

uint64_t sub_23B9F51F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B9F5280(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1[6] - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = (uint64_t)v1 + v5;
  v9 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23B9DB688(a1, v6, v7, v8, v9);
}

void type metadata accessor for CombineLatestStateMachine.UpstreamFinishedAction()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9F532C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_23B9F5340();
  return result;
}

uint64_t sub_23B9F5340()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void type metadata accessor for CombineLatestStateMachine.ElementProducedAction()
{
  JUMPOUT(0x24260D81CLL);
}

void sub_23B9F5378(uint64_t a1, uint64_t a2)
{
  if ((~a1 & 0xF00000000000000FLL) != 0 || (a2 & 0xF000000000000007) != 0xF000000000000007)
    sub_23B9F539C(a1, a2);
}

void sub_23B9F539C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)

}

uint64_t sub_23B9F53AC(uint64_t a1, id a2, uint64_t a3)
{
  if ((~(a1 & a3) & 0xF000000000000007) != 0)
    return sub_23B9F53C4(a1, a2, a3);
  return a1;
}

uint64_t sub_23B9F53C4(int a1, id a2, uint64_t a3)
{
  if (a3 < 0)
  {

    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

void type metadata accessor for AsyncChunksOfCountOrSignalSequence.Either()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t type metadata accessor for AsyncSyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncSyncSequence);
}

void type metadata accessor for AsyncChain2Sequence()
{
  JUMPOUT(0x24260D81CLL);
}

void type metadata accessor for AsyncMerge2Sequence()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9F5450()
{
  return swift_deallocObject();
}

uint64_t sub_23B9F5460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23B990D68;
  v8[4] = v6;
  v8[5] = v7;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_23B9F54D8()
{
  return swift_deallocObject();
}

uint64_t sub_23B9F54E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B990D68;
  v6[3] = v4;
  v6[4] = v5;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23B9F555C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2, v3);
}

uint64_t sub_23B9F55B4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23B9F5620(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_23B9F5690(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_23B9F56A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_23B9F56D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_23B9F5700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_23B9F5730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_23B9F5760(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23B9F5810 + 4 * byte_23BB8E314[(v7 - 1)]))();
}

void sub_23B9F5860(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_23B9F5A10()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B9F5A18()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23B9F5A84(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL8 v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  _BOOL8 v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7;
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v10 > 0xFFFE)
      {
        v9 = 4;
      }
      else
      {
        v11 = v10 != 0;
        v12 = v10 >= 0xFF;
        v9 = 2;
        if (!v12)
          v9 = v11;
      }
    }
    else
    {
      v9 = 1;
    }
    v8 = v9 + v7;
  }
  v13 = *(_DWORD *)(v5 + 80);
  if (v13 <= 7 && v8 <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
    {
      if (v6 <= 1)
      {
        if (v7 <= 3)
        {
          v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
          if (v18 > 0xFFFE)
          {
            v17 = 4;
          }
          else
          {
            v19 = v18 != 0;
            v12 = v18 >= 0xFF;
            v17 = 2;
            if (!v12)
              v17 = v19;
          }
        }
        else
        {
          v17 = 1;
        }
        v7 += v17;
      }
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
    }
  }
  else
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return a1;
}

uint64_t sub_23B9F5C3C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 2, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

void *sub_23B9F5CC0(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          v8 = 4;
        }
        else
        {
          v10 = v9 != 0;
          v11 = v9 >= 0xFF;
          v8 = 2;
          if (!v11)
            v8 = v10;
        }
      }
      else
      {
        v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_23B9F5DD0(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  unsigned int v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 2, AssociatedTypeWitness);
  v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        v12 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v12 > 0xFFFE)
        {
          v11 = 4;
        }
        else
        {
          v13 = v12 != 0;
          v14 = v12 >= 0xFF;
          v11 = 2;
          if (!v14)
            v11 = v13;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_23B9F5F44(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 2, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v9 > 0xFFFE)
        {
          v8 = 4;
        }
        else
        {
          v10 = v9 != 0;
          v11 = v9 >= 0xFF;
          v8 = 2;
          if (!v11)
            v8 = v10;
        }
      }
      else
      {
        v8 = 1;
      }
      v7 += v8;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_23B9F6054(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  unsigned int v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 2, AssociatedTypeWitness);
  v8 = v6(a2, 2, AssociatedTypeWitness);
  if (v7)
  {
    if (v8)
    {
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
        {
LABEL_5:
          v11 = 1;
LABEL_16:
          v10 += v11;
          goto LABEL_17;
        }
LABEL_9:
        v12 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
        if (v12 > 0xFFFE)
        {
          v11 = 4;
        }
        else
        {
          v13 = v12 != 0;
          v14 = v12 >= 0xFF;
          v11 = 2;
          if (!v14)
            v11 = v13;
        }
        goto LABEL_16;
      }
      goto LABEL_17;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 2, AssociatedTypeWitness);
  }
  else
  {
    if (v8)
    {
      (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      v9 = *(_DWORD *)(v5 + 84);
      v10 = *(_QWORD *)(v5 + 64);
      if (v9 <= 1)
      {
        if (v10 > 3)
          goto LABEL_5;
        goto LABEL_9;
      }
LABEL_17:
      memcpy(a1, a2, v10);
      return a1;
    }
    (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_23B9F61C8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;
  char v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 2;
  v7 = *(_QWORD *)(v4 + 64);
  if (v5 <= 1)
  {
    v6 = 0;
    if (v7 <= 3)
    {
      v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        v8 = 4;
      }
      else
      {
        v10 = v9 != 0;
        v11 = v9 >= 0xFF;
        v8 = 2;
        if (!v11)
          v8 = v10;
      }
    }
    else
    {
      v8 = 1;
    }
    v7 += v8;
  }
  if (!a2)
    return 0;
  if (a2 <= v6)
    goto LABEL_27;
  v12 = 8 * v7;
  if (v7 <= 3)
  {
    v14 = ((a2 - v6 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      v13 = *(_DWORD *)(a1 + v7);
      if (!v13)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v14 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v14 < 2)
    {
LABEL_27:
      if (v6)
      {
        v16 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
        if (v16 >= 3)
          return v16 - 2;
        else
          return 0;
      }
      return 0;
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_27;
LABEL_20:
  v15 = (v13 - 1) << v12;
  if (v7 > 3)
    v15 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X12 }
  }
  return v6 + v15 + 1;
}

void sub_23B9F637C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  size_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 2;
  v9 = *(_QWORD *)(v6 + 64);
  if (v7 <= 1)
  {
    v8 = 0;
    if (v9 <= 3)
    {
      v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 += v10;
  }
  if (a3 <= v8)
  {
    v14 = 0;
  }
  else if (v9 <= 3)
  {
    v16 = ((a3 - v8 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v8 < a2)
  {
    v15 = ~v8 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v17 = v15 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v9 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_23B9F65BC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(a1, 2, AssociatedTypeWitness);
}

uint64_t sub_23B9F6610(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, a2, 2, AssociatedTypeWitness);
}

uint64_t sub_23B9F6668()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B9F6670()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23B9F6704(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v5 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v16 = ((unint64_t)a2 + v9) & v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v16, v6);
    v17 = (v10 + v16) & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_BYTE *)(v17 + 8);
    v19 = (v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v19 = *(_QWORD *)v17;
    *(_BYTE *)(v19 + 8) = v18;
  }
  return v4;
}

uint64_t sub_23B9F6818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80));
}

uint64_t sub_23B9F6870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_23B9F690C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_23B9F69A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_23B9F6A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  return a1;
}

uint64_t sub_23B9F6AE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v5)
    v9 = *(_DWORD *)(v4 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v4 + 64) + v10;
  if (v9 >= a2)
  {
    if (v9)
    {
      if (v5 >= v8)
        return (*(uint64_t (**)(void))(v4 + 48))();
      else
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))((v11 + a1) & ~v10, *(unsigned int *)(v7 + 84), v6);
    }
    return 0;
  }
  v12 = ((*(_QWORD *)(v7 + 64) + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  v13 = (a2 - v9 + 255) >> (8 * v12);
  if (v12 < 4)
    v14 = v13 + 1;
  else
    v14 = 2;
  if (v14 >= 0x10000)
    v15 = 4;
  else
    v15 = 2;
  if (v14 < 0x100)
    v15 = 1;
  if (v14 >= 2)
    v16 = v15;
  else
    v16 = 0;
  return ((uint64_t (*)(void))((char *)&loc_23B9F6B88 + 4 * byte_23BB8E330[v16]))();
}

void sub_23B9F6C14(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v7 >= a3)
  {
    v11 = 0;
    if (v7 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v7 >= a2)
LABEL_17:
      __asm { BR              X16 }
  }
  if (v8 >= 4)
    v12 = ~v7 + a2;
  else
    v12 = (~(_BYTE)v7 + a2);
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v12;
  else
    *(_DWORD *)a1 = v12;
  __asm { BR              X10 }
}

void sub_23B9F6D54()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23B9F6D5C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23B9F6D64);
}

void sub_23B9F6DA0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_23B9F6DA8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_23B9F6DB0(uint64_t a1, int a2, unsigned int a3)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_WORD *)(v9 + v10) = 0;
  if (!a2)
    JUMPOUT(0x23B9F6DB8);
  if (a3 >= v4)
    return (*(uint64_t (**)(uint64_t))(v6 + 56))(v9);
  else
    return (*(uint64_t (**)(uint64_t))(v7 + 56))((v8 + v9) & v5);
}

void type metadata accessor for AsyncChunksOfCountOrSignalSequence()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23B9F6DDC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23B9F6DE4()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      AssociatedTypeWitness = sub_23BB8ACA0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_23B9F6EB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);
  void *v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v7 + v10;
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v13 + v10;
  v15 = (v13 + v11 + ((v7 + v11) & ~v11)) & ~v11;
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = v13 + 1;
  v17 = v15 + v16;
  v18 = *(_DWORD *)(v6 + 80) | v10;
  v19 = (*(_BYTE *)(v6 + 80) | v10);
  v20 = v18 & 0x100000;
  if (v19 > 7 || v20 != 0 || v17 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v19 + 16) & ~v19));
    swift_retain();
  }
  else
  {
    v24 = AssociatedTypeWitness;
    v25 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v26 = ((unint64_t)a1 + v12) & v25;
    v27 = ((unint64_t)a2 + v12) & v25;
    v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v28(v26, v27, v24);
    v29 = (void *)((v14 + v26) & v25);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v14 + v27) & v25, 1, v24))
    {
      memcpy(v29, (const void *)((v14 + v27) & v25), v16);
    }
    else
    {
      v28((unint64_t)v29, (v14 + v27) & v25, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v29, 0, 1, v24);
    }
  }
  return a1;
}

uint64_t sub_23B9F702C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = *(_QWORD *)(v3 + 64) + a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7) & ~v7;
  v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v8, AssociatedTypeWitness);
  v9 = (*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v9, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, AssociatedTypeWitness);
  return result;
}

uint64_t sub_23B9F7108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  size_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v13 + v9 + v11) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84))
      v15 = v13;
    else
      v15 = v13 + 1;
    memcpy(v14, (const void *)((v13 + v9 + v11) & ~v9), v15);
  }
  else
  {
    v12((uint64_t)v14, (v13 + v9 + v11) & ~v9, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_23B9F7230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  size_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  v15 = (void *)((v13 + v9 + v11) & ~v9);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v11) = v16(v14, 1, AssociatedTypeWitness);
  v17 = v16(v15, 1, AssociatedTypeWitness);
  if ((_DWORD)v11)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v14, v15, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v17)
    {
      v12((uint64_t)v14, (uint64_t)v15, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v14, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v18 = v13;
  else
    v18 = v13 + 1;
  memcpy(v14, v15, v18);
  return a1;
}

uint64_t sub_23B9F739C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  size_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v8 + 48))((v13 + v9 + v11) & ~v9, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84))
      v15 = v13;
    else
      v15 = v13 + 1;
    memcpy(v14, (const void *)((v13 + v9 + v11) & ~v9), v15);
  }
  else
  {
    v12((uint64_t)v14, (v13 + v9 + v11) & ~v9, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_23B9F74C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  size_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  size_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v12(v10, v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (void *)((v13 + v9 + v10) & ~v9);
  v15 = (void *)((v13 + v9 + v11) & ~v9);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v11) = v16(v14, 1, AssociatedTypeWitness);
  v17 = v16(v15, 1, AssociatedTypeWitness);
  if ((_DWORD)v11)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v14, v15, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v17)
    {
      v12((uint64_t)v14, (uint64_t)v15, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v14, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v8 + 84))
    v18 = v13;
  else
    v18 = v13 + 1;
  memcpy(v14, v15, v18);
  return a1;
}

uint64_t sub_23B9F7630(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7)
    v11 = v7;
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = v10 - 1;
  if (!(_DWORD)v10)
    v12 = 0;
  if (v12 > v11)
    v11 = v12;
  v13 = *(_QWORD *)(v9 + 64);
  if ((_DWORD)v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = v13 + 1;
  if (!a2)
    return 0;
  v15 = AssociatedTypeWitness;
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = *(_QWORD *)(v6 + 64) + v16;
  v18 = v13 + v16;
  if (a2 <= v11)
    goto LABEL_30;
  v19 = v14 + ((v18 + (v17 & ~v16)) & ~v16);
  v20 = 8 * v19;
  if (v19 > 3)
    goto LABEL_14;
  v22 = ((a2 - v11 + ~(-1 << v20)) >> v20) + 1;
  if (HIWORD(v22))
  {
    v21 = *(_DWORD *)(a1 + v19);
    if (!v21)
      goto LABEL_30;
    goto LABEL_21;
  }
  if (v22 > 0xFF)
  {
    v21 = *(unsigned __int16 *)(a1 + v19);
    if (!*(_WORD *)(a1 + v19))
      goto LABEL_30;
    goto LABEL_21;
  }
  if (v22 >= 2)
  {
LABEL_14:
    v21 = *(unsigned __int8 *)(a1 + v19);
    if (!*(_BYTE *)(a1 + v19))
      goto LABEL_30;
LABEL_21:
    v23 = (v21 - 1) << v20;
    if (v19 > 3)
      v23 = 0;
    if ((_DWORD)v19)
    {
      if (v19 <= 3)
        v24 = v19;
      else
        v24 = 4;
      __asm { BR              X12 }
    }
    return v11 + v23 + 1;
  }
LABEL_30:
  if (!v11)
    return 0;
  if ((_DWORD)v7 == v11)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v26 = a1;
    v10 = v7;
    v15 = v5;
    return v25(v26, v10, v15);
  }
  v27 = ~v16;
  v26 = (v17 + a1) & v27;
  if ((_DWORD)v10 == v11)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v25(v26, v10, v15);
  }
  v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v18 + v26) & v27, v10, v15);
  if (v28 >= 2)
    return v28 - 1;
  else
    return 0;
}

void sub_23B9F7828(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = v11 - 1;
  if (!v11)
    v13 = 0;
  if (v13 > v12)
    v12 = v13;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = v14 + 1;
  v16 = v15
      + ((v14
        + *(unsigned __int8 *)(v10 + 80)
        + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  if (a3 > v12)
  {
    if (v16 > 3)
    {
      v9 = 1u;
      if (v12 >= a2)
LABEL_27:
        __asm { BR              X17 }
LABEL_20:
      v18 = ~v12 + a2;
      if (v16 < 4)
      {
        if ((_DWORD)v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, v16);
          if ((_DWORD)v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if ((_DWORD)v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v16);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v9 = 4u;
      if (v12 >= a2)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v17 >= 0x100)
      v9 = 2;
    else
      v9 = v17 > 1;
  }
  if (v12 >= a2)
    goto LABEL_27;
  goto LABEL_20;
}

void sub_23B9F7ABC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_23B9F7AC4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_23B9F7B0C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_23B9F7B1C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_23B9F7B24()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for AsyncTimerSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncTimerSequence);
}

uint64_t sub_23B9F7B3C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_23BB8ACA0();
  swift_getTupleTypeMetadata3();
  sub_23BB8ACA0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
  result = sub_23BB8B27C();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

_QWORD *sub_23B9F7C78(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id *v37;
  unsigned int v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(id *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  int v53;
  unsigned int v54;
  _QWORD *v55;
  uint64_t v56;
  unint64_t v57;
  void *v58;
  const void *v59;
  _QWORD *v60;
  size_t __n;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v71;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 80) | v5;
  v10 = swift_getAssociatedTypeWitness();
  v11 = v7;
  v12 = v10;
  v13 = *(_QWORD *)(v10 - 8);
  v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_DWORD *)(v13 + 80);
  v16 = v9 | *(_DWORD *)(v13 + 80);
  v17 = v16 & 0xF8 | 7u;
  v18 = ~v17;
  v19 = *(unsigned int *)(v4 + 84);
  v20 = *(unsigned int *)(v7 + 84);
  if (v20 <= v19)
    v21 = *(_DWORD *)(v4 + 84);
  else
    v21 = *(_DWORD *)(v7 + 84);
  v22 = v14 - 1;
  if (!v14)
    v22 = 0;
  if (v22 <= v21)
    v23 = v21;
  else
    v23 = v22;
  v24 = *(_QWORD *)(v4 + 64) + v8;
  v25 = *(_QWORD *)(v7 + 64) + v15;
  if (v14)
    v27 = *(_QWORD *)(v13 + 64);
  else
    v27 = *(_QWORD *)(v13 + 64) + 1;
  v26 = (v25 + (v24 & ~v8)) & ~v15;
  v28 = v26 + v27;
  if (v23)
    v29 = v26 + v27;
  else
    v29 = v28 + 1;
  if (v29 <= 8)
    v30 = 8;
  else
    v30 = v29;
  if ((v16 & 0x1000F8) == 0 && v30 + ((v17 + 8) & (unint64_t)~v17) + 1 <= 0x18)
  {
    v34 = v8;
    v35 = v4;
    v68 = a1;
    v69 = v6;
    *a1 = *a2;
    v36 = (_QWORD *)(((unint64_t)a1 + v17 + 8) & v18);
    v37 = (id *)(((unint64_t)a2 + v17 + 8) & v18);
    v38 = *((unsigned __int8 *)v37 + v30);
    if (v38 >= 2)
    {
      if (v30 <= 3)
        v39 = v30;
      else
        v39 = 4;
      __asm { BR              X15 }
    }
    if (v38 == 1)
    {
      v40 = *v37;
      v41 = *v37;
      *v36 = v40;
      *((_BYTE *)v36 + v30) = 1;
      return v68;
    }
    v42 = ~v15;
    v66 = v25;
    v67 = v12;
    v63 = v23;
    __n = v27;
    v64 = ~v34;
    v65 = ~v15;
    if (v23)
    {
      if ((_DWORD)v19 == v23)
      {
        v43 = v11;
        v44 = *(uint64_t (**)(id *, uint64_t, uint64_t))(v4 + 48);
        v45 = AssociatedTypeWitness;
        v46 = v26 + v27;
        v47 = v44(v37, v19, v45);
        v28 = v46;
        v33 = v68;
        if (!v47)
          goto LABEL_47;
      }
      else
      {
        v50 = v23;
        v71 = v36;
        v51 = v26 + v27;
        v52 = ((unint64_t)v37 + v24) & ~v34;
        v45 = AssociatedTypeWitness;
        if ((_DWORD)v20 == v50)
        {
          v43 = v11;
          v53 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v52, v20, v69);
          v33 = v68;
          v28 = v51;
          v36 = v71;
          if (!v53)
          {
LABEL_47:
            v55 = v36;
            v56 = v28;
            (*(void (**)(_QWORD *, id *, uint64_t))(v35 + 16))(v55, v37, v45);
            v57 = ((unint64_t)v55 + v24) & v64;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))(v57, ((unint64_t)v37 + v24) & v64, v69);
            v58 = (void *)((v66 + v57) & v65);
            v59 = (const void *)((v66 + (((unint64_t)v37 + v24) & v64)) & v65);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v59, 1, v67))
            {
              memcpy(v58, v59, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v58, v59, v67);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v58, 0, 1, v67);
            }
            v60 = v55;
            if (!v63)
              *((_BYTE *)v55 + v56) = 0;
            goto LABEL_54;
          }
        }
        else
        {
          v43 = v11;
          v54 = (*(uint64_t (**)(unint64_t))(v13 + 48))((v25 + v52) & v42);
          v33 = v68;
          v28 = v51;
          v36 = v71;
          if (v54 < 2)
            goto LABEL_47;
        }
      }
    }
    else
    {
      v43 = v11;
      v45 = AssociatedTypeWitness;
      v33 = v68;
      if (!*((_BYTE *)v37 + v28))
        goto LABEL_47;
      v48 = (*((unsigned __int8 *)v37 + v28) - 1) << (8 * v28);
      if (v28 > 3)
        v48 = 0;
      if ((_DWORD)v28)
      {
        if (v28 <= 3)
          v49 = v26 + v27;
        else
          v49 = 4;
        __asm { BR              X11 }
      }
      if (v48 == -1)
        goto LABEL_47;
    }
    memcpy(v36, v37, v29);
    v60 = v36;
LABEL_54:
    *((_BYTE *)v60 + v30) = 0;
    return v33;
  }
  v32 = *a2;
  *a1 = *a2;
  v33 = (_QWORD *)(v32 + ((v17 + 16) & v18));
  swift_retain();
  return v33;
}

void sub_23B9F8114(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  unint64_t v29;
  uint64_t v30;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_DWORD *)(v3 + 80);
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = ((v7 | v4) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  v12 = *(_DWORD *)(v9 + 80);
  v13 = (id *)((a1 + v11 + 8) & ~v11);
  v14 = *(unsigned int *)(v3 + 84);
  v15 = *(unsigned int *)(v6 + 84);
  if (v15 <= v14)
    v16 = *(_DWORD *)(v3 + 84);
  else
    v16 = *(_DWORD *)(v6 + 84);
  v17 = v10 - 1;
  if (!v10)
    v17 = 0;
  if (v17 <= v16)
    v17 = v16;
  v18 = *(_QWORD *)(v3 + 64) + v7;
  v19 = *(_QWORD *)(v6 + 64) + v12;
  v20 = *(_QWORD *)(v9 + 64);
  if (!v10)
    ++v20;
  v21 = v20 + ((v19 + (v18 & ~(unint64_t)v7)) & ~v12);
  if (v17)
    v22 = v20 + ((v19 + (v18 & ~(unint64_t)v7)) & ~v12);
  else
    v22 = v21 + 1;
  if (v22 <= 8)
    v22 = 8;
  v23 = *((unsigned __int8 *)v13 + v22);
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X2 }
  }
  if (v23 == 1)
  {

    return;
  }
  v25 = ~(unint64_t)v7;
  v26 = ~v12;
  v30 = v26;
  if (v17)
  {
    if ((_DWORD)v14 == v17)
    {
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v3 + 48))(v13, v14, AssociatedTypeWitness))
        return;
    }
    else
    {
      v29 = ((unint64_t)v13 + v18) & v25;
      if ((_DWORD)v15 == v17)
      {
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v29, v15, v5))
          return;
      }
      else if ((*(unsigned int (**)(unint64_t))(v9 + 48))((v19 + v29) & v26) >= 2)
      {
        return;
      }
    }
    goto LABEL_40;
  }
  if (!*((_BYTE *)v13 + v21))
    goto LABEL_40;
  v27 = (*((unsigned __int8 *)v13 + v21) - 1) << (8 * v21);
  if (v21 > 3)
    v27 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v28 = v21;
    else
      v28 = 4;
    __asm { BR              X11 }
  }
  if (v27 == -1)
  {
LABEL_40:
    (*(void (**)(id *, uint64_t))(v3 + 8))(v13, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v13 + v18) & v25, v5);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v19 + (((unint64_t)v13 + v18) & v25)) & v30, 1, v8))(*(void (**)(unint64_t, uint64_t))(v9 + 8))((v19 + (((unint64_t)v13 + v18) & v25)) & v30, v8);
  }
}

_QWORD *sub_23B9F846C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  char v32;
  uint64_t v33;
  int v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  const void *v40;
  _QWORD *result;
  size_t __n;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t AssociatedTypeWitness;
  _QWORD *v49;
  _QWORD *__dst;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v47 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v47 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 80) | v5;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_DWORD *)(v10 + 80);
  v13 = (v8 | *(_DWORD *)(v10 + 80)) & 0xF8 | 7u;
  v49 = a1;
  __dst = (_QWORD *)(((unint64_t)a1 + v13 + 8) & ~v13);
  v14 = (id *)(((unint64_t)a2 + v13 + 8) & ~v13);
  v15 = *(unsigned int *)(v4 + 84);
  v16 = *(unsigned int *)(v6 + 84);
  if (v16 <= v15)
    v17 = *(_DWORD *)(v4 + 84);
  else
    v17 = *(_DWORD *)(v6 + 84);
  v18 = v11 - 1;
  if (!v11)
    v18 = 0;
  if (v18 <= v17)
    v19 = v17;
  else
    v19 = v18;
  v20 = *(_QWORD *)(v4 + 64) + v7;
  v21 = *(_QWORD *)(v6 + 64) + v12;
  if (v11)
    v23 = *(_QWORD *)(v10 + 64);
  else
    v23 = *(_QWORD *)(v10 + 64) + 1;
  v22 = (v21 + (v20 & ~v7)) & ~v12;
  v24 = v22 + v23;
  if (v19)
    v25 = v22 + v23;
  else
    v25 = v24 + 1;
  if (v25 <= 8)
    v26 = 8;
  else
    v26 = v25;
  v27 = *((unsigned __int8 *)v14 + v26);
  if (v27 >= 2)
  {
    if (v26 <= 3)
      v28 = v26;
    else
      v28 = 4;
    __asm { BR              X15 }
  }
  if (v27 == 1)
  {
    v29 = *v14;
    v30 = *v14;
    v31 = __dst;
    *__dst = v29;
    v32 = 1;
LABEL_48:
    result = v49;
    goto LABEL_49;
  }
  v33 = ~v12;
  v45 = v33;
  v46 = v9;
  __n = v23;
  v43 = v22 + v23;
  v44 = ~v7;
  if (!v19)
  {
    v31 = __dst;
    if (!*((_BYTE *)v14 + v24))
      goto LABEL_41;
    v34 = (*((unsigned __int8 *)v14 + v24) - 1) << (8 * v24);
    if (v24 > 3)
      v34 = 0;
    if ((_DWORD)v24)
    {
      if (v24 <= 3)
        v35 = v22 + v23;
      else
        v35 = 4;
      __asm { BR              X11 }
    }
    if (v34 == -1)
      goto LABEL_41;
    goto LABEL_47;
  }
  if ((_DWORD)v15 == v19)
  {
    v31 = __dst;
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v4 + 48))(v14, v15, AssociatedTypeWitness))
      goto LABEL_41;
LABEL_47:
    memcpy(v31, v14, v25);
    v32 = 0;
    goto LABEL_48;
  }
  v36 = ((unint64_t)v14 + v20) & ~v7;
  v31 = __dst;
  if ((_DWORD)v16 != v19)
  {
    if ((*(unsigned int (**)(unint64_t))(v10 + 48))((v21 + v36) & v33) < 2)
      goto LABEL_41;
    goto LABEL_47;
  }
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v36, v16, v47))
    goto LABEL_47;
LABEL_41:
  (*(void (**)(void *, id *, uint64_t))(v4 + 16))(v31, v14, AssociatedTypeWitness);
  v37 = ((unint64_t)v31 + v20) & v44;
  v38 = ((unint64_t)v14 + v20) & v44;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v37, v38, v47);
  v39 = (void *)((v21 + v37) & v45);
  v40 = (const void *)((v21 + v38) & v45);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v40, 1, v46))
  {
    memcpy(v39, v40, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v39, v40, v46);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v46);
  }
  result = v49;
  v31 = __dst;
  v32 = 0;
  if (!v19)
    *((_BYTE *)__dst + v43) = 0;
LABEL_49:
  *((_BYTE *)v31 + v26) = v32;
  return result;
}

_QWORD *sub_23B9F884C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int v36;
  id v37;
  id v38;
  char v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  const void *v47;
  size_t v49;
  unsigned int v50;
  size_t __n;
  unsigned int v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;

  v3 = a1;
  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v61 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v61 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = ((v8 | v6) | *(_DWORD *)(v10 + 80)) & 0xF8 | 7u;
  v12 = (id *)(((unint64_t)v3 + v11 + 8) & ~v11);
  v13 = (id *)(((unint64_t)a2 + v11 + 8) & ~v11);
  if (v12 != v13)
  {
    v58 = AssociatedTypeWitness;
    v59 = v9;
    v14 = v8;
    v15 = *(_DWORD *)(v10 + 80);
    v16 = *(unsigned int *)(v5 + 84);
    v17 = *(_DWORD *)(v7 + 84);
    v52 = v17;
    if (v17 <= v16)
      v17 = *(_DWORD *)(v5 + 84);
    v18 = *(_DWORD *)(v10 + 84);
    v19 = v18 - 1;
    if (!v18)
      v19 = 0;
    if (v19 <= v17)
      v20 = v17;
    else
      v20 = v19;
    v50 = *(_DWORD *)(v10 + 84);
    v57 = *(_QWORD *)(v5 + 64);
    v55 = *(_QWORD *)(v7 + 64) + v15;
    if (v18)
      v22 = *(_QWORD *)(v10 + 64);
    else
      v22 = *(_QWORD *)(v10 + 64) + 1;
    v21 = (v55 + ((v57 + v8) & ~(unint64_t)v8)) & ~v15;
    v23 = v21 + v22;
    if (v20)
      v24 = v21 + v22;
    else
      v24 = v23 + 1;
    if (v24 <= 8)
      v25 = 8;
    else
      v25 = v24;
    v26 = *((unsigned __int8 *)v12 + v25);
    if (v26 >= 2)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X13 }
    }
    v56 = ~(unint64_t)v8;
    v53 = v21 + v22;
    v54 = ~v15;
    v60 = v3;
    v49 = v22;
    __n = v24;
    if (v26 == 1)
    {
      v28 = v20;

      goto LABEL_45;
    }
    if (v20)
    {
      if ((_DWORD)v16 == v20)
      {
        v28 = v20;
        v29 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v5 + 48))(v12, v16, v58);
      }
      else
      {
        v32 = ((unint64_t)v12 + v8 + v57) & v56;
        v28 = v20;
        if (v52 != v20)
        {
          if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v10 + 48))((v55 + v32) & v54, v18, v59) >= 2)goto LABEL_45;
          goto LABEL_43;
        }
        v29 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v7 + 48))(v32, v52, v61);
      }
      if (v29)
        goto LABEL_45;
    }
    else
    {
      v28 = 0;
      if (*((_BYTE *)v12 + v23))
      {
        v30 = (*((unsigned __int8 *)v12 + v23) - 1) << (8 * v23);
        if (v23 > 3)
          v30 = 0;
        if ((_DWORD)v23)
        {
          if (v23 <= 3)
            v31 = v21 + v22;
          else
            v31 = 4;
          __asm { BR              X11 }
        }
        if (v30 != -1)
        {
LABEL_45:
          v34 = *((unsigned __int8 *)v13 + v25);
          if (v34 >= 2)
          {
            if (v25 <= 3)
              v35 = v25;
            else
              v35 = 4;
            __asm { BR              X12 }
          }
          v36 = v28;
          v3 = v60;
          if (v34 == 1)
          {
            v37 = *v13;
            v38 = *v13;
            *v12 = v37;
            v39 = 1;
LABEL_73:
            *((_BYTE *)v12 + v25) = v39;
            return v3;
          }
          if (!v36)
          {
            v41 = v59;
            if (*((_BYTE *)v13 + v53))
            {
              v42 = (*((unsigned __int8 *)v13 + v53) - 1) << (8 * v53);
              if (v53 > 3)
                v42 = 0;
              if ((_DWORD)v53)
              {
                if (v53 <= 3)
                  v43 = v53;
                else
                  v43 = 4;
                __asm { BR              X11 }
              }
              if (v42 != -1)
                goto LABEL_66;
            }
            goto LABEL_70;
          }
          if ((_DWORD)v16 == v36)
          {
            v40 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v5 + 48))(v13, v16, v58);
          }
          else
          {
            v44 = ((unint64_t)v13 + v14 + v57) & v56;
            if (v52 != v36)
            {
              v41 = v59;
              if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v10 + 48))((v55 + v44) & v54, v50, v59) >= 2)goto LABEL_66;
              goto LABEL_70;
            }
            v40 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v7 + 48))(v44, v52, v61);
          }
          v41 = v59;
          if (v40)
          {
LABEL_66:
            memcpy(v12, v13, __n);
            v39 = 0;
            goto LABEL_73;
          }
LABEL_70:
          (*(void (**)(id *, id *, uint64_t))(v5 + 16))(v12, v13, v58);
          v45 = ((unint64_t)v13 + v14 + v57) & v56;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v12 + v14 + v57) & v56, v45, v61);
          v46 = (void *)((v55 + (((unint64_t)v12 + v14 + v57) & v56)) & v54);
          v47 = (const void *)((v55 + v45) & v54);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v47, 1, v41))
          {
            memcpy(v46, v47, v49);
            v39 = 0;
            if (v36)
              goto LABEL_73;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v46, v47, v41);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v41);
            v39 = 0;
            if (v36)
              goto LABEL_73;
          }
          *((_BYTE *)v12 + v53) = 0;
          goto LABEL_73;
        }
      }
    }
LABEL_43:
    (*(void (**)(id *, uint64_t))(v5 + 8))(v12, v58);
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v12 + v8 + v57) & v56, v61);
    v33 = (v55 + (((unint64_t)v12 + v8 + v57) & v56)) & v54;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v33, 1, v59))
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v33, v59);
    goto LABEL_45;
  }
  return v3;
}

_QWORD *sub_23B9F8E78(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  void *v46;
  const void *v47;
  size_t __n;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *__dst;
  uint64_t v54;
  uint64_t AssociatedTypeWitness;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v54 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v54 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 80) | v5;
  v9 = swift_getAssociatedTypeWitness();
  result = a1;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_DWORD *)(v11 + 80);
  v14 = (v8 | *(_DWORD *)(v11 + 80)) & 0xF8 | 7u;
  v15 = (_QWORD *)(((unint64_t)a1 + v14 + 8) & ~v14);
  v16 = (_QWORD *)(((unint64_t)a2 + v14 + 8) & ~v14);
  v17 = *(unsigned int *)(v4 + 84);
  v18 = *(unsigned int *)(v6 + 84);
  if (v18 <= v17)
    v19 = *(_DWORD *)(v4 + 84);
  else
    v19 = *(_DWORD *)(v6 + 84);
  v20 = v12 - 1;
  if (!v12)
    v20 = 0;
  if (v20 <= v19)
    v21 = v19;
  else
    v21 = v20;
  v22 = *(_QWORD *)(v4 + 64) + v7;
  v23 = *(_QWORD *)(v6 + 64) + v13;
  if (v12)
    v25 = *(_QWORD *)(v11 + 64);
  else
    v25 = *(_QWORD *)(v11 + 64) + 1;
  v24 = (v23 + (v22 & ~v7)) & ~v13;
  v26 = v24 + v25;
  if (v21)
    v27 = v24 + v25;
  else
    v27 = v26 + 1;
  if (v27 <= 8)
    v28 = 8;
  else
    v28 = v27;
  v29 = *((unsigned __int8 *)v16 + v28);
  if (v29 >= 2)
  {
    if (v28 <= 3)
      v30 = v28;
    else
      v30 = 4;
    __asm { BR              X15 }
  }
  if (v29 == 1)
  {
    *v15 = *v16;
    v31 = 1;
    goto LABEL_48;
  }
  v32 = ~v7;
  v33 = ~v13;
  v52 = result;
  __dst = v15;
  v50 = v33;
  v51 = v9;
  __n = v25;
  v49 = ~v7;
  if (!v21)
  {
    if (!*((_BYTE *)v16 + v26))
      goto LABEL_41;
    v36 = (*((unsigned __int8 *)v16 + v26) - 1) << (8 * v26);
    if (v26 > 3)
      v36 = 0;
    if ((_DWORD)v26)
    {
      if (v26 <= 3)
        v37 = v26;
      else
        v37 = 4;
      __asm { BR              X11 }
    }
    if (v36 == -1)
      goto LABEL_41;
    goto LABEL_47;
  }
  if ((_DWORD)v17 == v21)
  {
    v34 = v26;
    v35 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48))(v16, v17, AssociatedTypeWitness);
    v26 = v34;
    v15 = __dst;
    if (!v35)
      goto LABEL_41;
LABEL_47:
    memcpy(v15, v16, v27);
    result = v52;
    v15 = __dst;
    v31 = 0;
    goto LABEL_48;
  }
  v38 = v26;
  v39 = ((unint64_t)v16 + v22) & v32;
  if ((_DWORD)v18 != v21)
  {
    v41 = (*(uint64_t (**)(unint64_t))(v11 + 48))((v23 + v39) & v33);
    v15 = __dst;
    v26 = v38;
    if (v41 < 2)
      goto LABEL_41;
    goto LABEL_47;
  }
  v40 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v39, v18, v54);
  v15 = __dst;
  v26 = v38;
  if (v40)
    goto LABEL_47;
LABEL_41:
  v42 = v26;
  v43 = v15;
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 32))(v15, v16, AssociatedTypeWitness);
  v44 = ((unint64_t)v43 + v22) & v49;
  v45 = ((unint64_t)v16 + v22) & v49;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v44, v45, v54);
  v46 = (void *)((v23 + v44) & v50);
  v47 = (const void *)((v23 + v45) & v50);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v47, 1, v51))
  {
    memcpy(v46, v47, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v46, v47, v51);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v46, 0, 1, v51);
  }
  result = v52;
  v15 = __dst;
  v31 = 0;
  if (!v21)
    *((_BYTE *)__dst + v42) = 0;
LABEL_48:
  *((_BYTE *)v15 + v28) = v31;
  return result;
}

_QWORD *sub_23B9F925C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  char v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  const void *v44;
  size_t v46;
  unsigned int v47;
  size_t __n;
  unsigned int v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t AssociatedTypeWitness;

  v3 = a1;
  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v57 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v57 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = ((v7 | v5) | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  v11 = (id *)(((unint64_t)v3 + v10 + 8) & ~v10);
  v12 = (id *)(((unint64_t)a2 + v10 + 8) & ~v10);
  if (v11 != v12)
  {
    v13 = v7;
    v14 = *(_DWORD *)(v9 + 80);
    v15 = *(unsigned int *)(v4 + 84);
    v16 = *(_DWORD *)(v6 + 84);
    v49 = v16;
    if (v16 <= v15)
      v16 = *(_DWORD *)(v4 + 84);
    v17 = *(_DWORD *)(v9 + 84);
    v18 = v17 - 1;
    if (!v17)
      v18 = 0;
    if (v18 <= v16)
      v19 = v16;
    else
      v19 = v18;
    v47 = *(_DWORD *)(v9 + 84);
    v54 = *(_QWORD *)(v4 + 64);
    v55 = v8;
    v52 = *(_QWORD *)(v6 + 64) + v14;
    if (v17)
      v21 = *(_QWORD *)(v9 + 64);
    else
      v21 = *(_QWORD *)(v9 + 64) + 1;
    v20 = (v52 + ((v54 + v7) & ~(unint64_t)v7)) & ~v14;
    v22 = v20 + v21;
    if (v19)
      v23 = v20 + v21;
    else
      v23 = v22 + 1;
    if (v23 <= 8)
      v24 = 8;
    else
      v24 = v23;
    v25 = *((unsigned __int8 *)v11 + v24);
    if (v25 >= 2)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    v53 = ~(unint64_t)v7;
    v50 = v20 + v21;
    v51 = ~v14;
    v56 = v3;
    v46 = v21;
    __n = v23;
    if (v25 == 1)
    {
      v27 = v19;

      goto LABEL_45;
    }
    if (v19)
    {
      if ((_DWORD)v15 == v19)
      {
        v27 = v19;
        v28 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v4 + 48))(v11, v15, AssociatedTypeWitness);
      }
      else
      {
        v31 = ((unint64_t)v11 + v7 + v54) & v53;
        v27 = v19;
        if (v49 != v19)
        {
          if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v9 + 48))((v52 + v31) & v51, v17, v55) >= 2)goto LABEL_45;
          goto LABEL_43;
        }
        v28 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v6 + 48))(v31, v49, v57);
      }
      if (v28)
        goto LABEL_45;
    }
    else
    {
      v27 = 0;
      if (*((_BYTE *)v11 + v22))
      {
        v29 = (*((unsigned __int8 *)v11 + v22) - 1) << (8 * v22);
        if (v22 > 3)
          v29 = 0;
        if ((_DWORD)v22)
        {
          if (v22 <= 3)
            v30 = v20 + v21;
          else
            v30 = 4;
          __asm { BR              X11 }
        }
        if (v29 != -1)
        {
LABEL_45:
          v33 = *((unsigned __int8 *)v12 + v24);
          if (v33 >= 2)
          {
            if (v24 <= 3)
              v34 = v24;
            else
              v34 = 4;
            __asm { BR              X12 }
          }
          v35 = v27;
          v3 = v56;
          if (v33 == 1)
          {
            *v11 = *v12;
            v36 = 1;
LABEL_73:
            *((_BYTE *)v11 + v24) = v36;
            return v3;
          }
          if (!v35)
          {
            v38 = v55;
            if (*((_BYTE *)v12 + v50))
            {
              v39 = (*((unsigned __int8 *)v12 + v50) - 1) << (8 * v50);
              if (v50 > 3)
                v39 = 0;
              if ((_DWORD)v50)
              {
                if (v50 <= 3)
                  v40 = v50;
                else
                  v40 = 4;
                __asm { BR              X11 }
              }
              if (v39 != -1)
                goto LABEL_66;
            }
            goto LABEL_70;
          }
          if ((_DWORD)v15 == v35)
          {
            v37 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v4 + 48))(v12, v15, AssociatedTypeWitness);
          }
          else
          {
            v41 = ((unint64_t)v12 + v13 + v54) & v53;
            if (v49 != v35)
            {
              v38 = v55;
              if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v9 + 48))((v52 + v41) & v51, v47, v55) >= 2)goto LABEL_66;
              goto LABEL_70;
            }
            v37 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v6 + 48))(v41, v49, v57);
          }
          v38 = v55;
          if (v37)
          {
LABEL_66:
            memcpy(v11, v12, __n);
            v36 = 0;
            goto LABEL_73;
          }
LABEL_70:
          (*(void (**)(id *, id *, uint64_t))(v4 + 32))(v11, v12, AssociatedTypeWitness);
          v42 = ((unint64_t)v12 + v13 + v54) & v53;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v11 + v13 + v54) & v53, v42, v57);
          v43 = (void *)((v52 + (((unint64_t)v11 + v13 + v54) & v53)) & v51);
          v44 = (const void *)((v52 + v42) & v51);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v44, 1, v38))
          {
            memcpy(v43, v44, v46);
            v36 = 0;
            if (v35)
              goto LABEL_73;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v43, v44, v38);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v43, 0, 1, v38);
            v36 = 0;
            if (v35)
              goto LABEL_73;
          }
          *((_BYTE *)v11 + v50) = 0;
          goto LABEL_73;
        }
      }
    }
LABEL_43:
    (*(void (**)(id *, uint64_t))(v4 + 8))(v11, AssociatedTypeWitness);
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v11 + v7 + v54) & v53, v57);
    v32 = (v52 + (((unint64_t)v11 + v7 + v54) & v53)) & v51;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v32, 1, v55))
      (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v32, v55);
    goto LABEL_45;
  }
  return v3;
}

uint64_t sub_23B9F987C(_QWORD *a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) > v5)
    v5 = *(_DWORD *)(v6 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  v11 = (v10 | v5) == 0;
  v12 = *(_QWORD *)(v7 + 64);
  if (!v9)
    ++v11;
  v13 = v11
      + v12
      + ((((*(_QWORD *)(v4 + 64) + *(_DWORD *)(v6 + 80)) & ~(unint64_t)*(_DWORD *)(v6 + 80))
        + *(_QWORD *)(v6 + 64)
        + v8) & ~(unint64_t)v8);
  if (v13 <= 8)
    v13 = 8;
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_11;
  v16 = ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v4 + 80)) | v8) & 0xF8 | 7u;
  v17 = v13 + ((v16 + 8) & ~v16) + 1;
  v18 = 8 * v17;
  if (v17 > 3)
    goto LABEL_16;
  v20 = (a2 - 0x7FFFFFFF + ~(-1 << v18)) >> v18;
  if (v20 > 0xFFFE)
  {
    v19 = *(_DWORD *)((char *)a1 + v17);
    if (!v19)
      goto LABEL_11;
    goto LABEL_25;
  }
  if (v20 <= 0xFE)
  {
    if (!v20)
      goto LABEL_11;
LABEL_16:
    v19 = *((unsigned __int8 *)a1 + v17);
    if (!*((_BYTE *)a1 + v17))
      goto LABEL_11;
    goto LABEL_25;
  }
  v19 = *(unsigned __int16 *)((char *)a1 + v17);
  if (!*(_WORD *)((char *)a1 + v17))
  {
LABEL_11:
    v14 = *a1;
    if (*a1 >= 0xFFFFFFFFuLL)
      LODWORD(v14) = -1;
    return (v14 + 1);
  }
LABEL_25:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 > 3)
      LODWORD(v17) = 4;
    __asm { BR              X11 }
  }
  return v21 ^ 0x80000000;
}

void sub_23B9F9AA4(_BYTE *a1, int a2, int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  size_t v21;
  unsigned int v22;
  int v23;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(_DWORD *)(v10 + 84);
  v13 = v11 - 1;
  if (!v11)
    v13 = 0;
  v14 = (v13 | v7) == 0;
  v15 = v11 == 0;
  v16 = (((*(_QWORD *)(v6 + 64) + *(_DWORD *)(v8 + 80)) & ~(unint64_t)*(_DWORD *)(v8 + 80))
       + *(_QWORD *)(v8 + 64)
       + *(_DWORD *)(v10 + 80)) & ~(unint64_t)*(_DWORD *)(v10 + 80);
  v17 = *(_QWORD *)(v10 + 64);
  v18 = ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) | v12) & 0xF8 | 7u;
  v19 = (v18 + 8) & ~v18;
  if (v15)
    ++v14;
  v20 = v14 + v17 + v16;
  if (v20 <= 8)
    v20 = 8;
  v21 = v20 + v19 + 1;
  if (a3 < 0)
  {
    if (v21 > 3)
    {
      v9 = 1u;
      if (a2 < 0)
      {
LABEL_20:
        if (v21 < 4)
        {
          if ((_DWORD)v21)
          {
            v23 = a2 & ~(-1 << (8 * v21));
            bzero(a1, v21);
            if ((_DWORD)v21 == 3)
            {
              *(_WORD *)a1 = v23;
              a1[2] = BYTE2(v23);
            }
            else if ((_DWORD)v21 == 2)
            {
              *(_WORD *)a1 = v23;
            }
            else
            {
              *a1 = v23;
            }
          }
        }
        else
        {
          bzero(a1, v21);
          *(_DWORD *)a1 = a2 ^ 0x80000000;
        }
        __asm { BR              X10 }
      }
LABEL_18:
      __asm { BR              X10 }
    }
    v22 = (a3 - 0x7FFFFFFF + ~(-1 << (8 * v21))) >> (8 * v21);
    if (v22 > 0xFFFE)
    {
      v9 = 4u;
      if (a2 < 0)
        goto LABEL_20;
      goto LABEL_18;
    }
    if (v22 >= 0xFF)
      v9 = 2;
    else
      v9 = v22 != 0;
  }
  if (a2 < 0)
    goto LABEL_20;
  goto LABEL_18;
}

void sub_23B9F9D24()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23B9F9C60);
}

void sub_23B9F9D2C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23B9F9C60);
}

void sub_23B9F9D34()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23B9F9C60);
}

_QWORD *sub_23B9F9D40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BA01728(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23B9F9D4C);
}

uint64_t sub_23B9F9D4C()
{
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9F9D78()
{
  return sub_23B9F5340();
}

uint64_t *sub_23B9F9D88(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BA01784(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23B9F9D4C, (void (*)(uint64_t, uint64_t, uint64_t))sub_23B9F5340);
}

uint64_t *sub_23B9F9D9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_23BA017F0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23B9F5340);
}

uint64_t sub_23B9F9DA8(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_23B9F9E04(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23B9F9E5C(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_23B9F9E68(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_23B9F9E78(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

uint64_t sub_23B9F9E8C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = sub_23BB8ACA0();
      if (v5 > 0x3F)
      {
        return v4;
      }
      else
      {
        swift_getTupleTypeLayout3();
        v10 = &v9;
        v11 = MEMORY[0x24BEE0158] + 64;
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        sub_23BB8ACA0();
        swift_getTupleTypeMetadata3();
        sub_23BB8ACA0();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
        v0 = sub_23BB8B27C();
        if (v6 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          v12 = &v8;
          v13 = &unk_23BB8E840;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v0;
}

_QWORD *sub_23B9FA068(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  size_t v31;
  size_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *result;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  const void *v52;
  _QWORD *v53;
  void **v54;
  unsigned int v55;
  uint64_t v56;
  void *v57;
  id v58;
  char v59;
  uint64_t v60;
  size_t v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  unint64_t v66;
  unsigned int v67;
  unint64_t v68;
  void *v69;
  const void *v70;
  size_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t AssociatedTypeWitness;
  size_t __n;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;

  v4 = a3[2];
  v6 = a3[3];
  v5 = a3[4];
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  v91 = *(_DWORD *)(v8 + 80);
  v80 = *(_QWORD *)(v7 + 64) + v91;
  v83 = v8;
  v9 = *(_QWORD *)(v5 - 8);
  v89 = *(_DWORD *)(v9 + 80);
  v82 = *(_QWORD *)(v8 + 64);
  v85 = v9;
  v10 = *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v10;
  __n = v10;
  v11 = v10
      + ((v82 + v89 + (v80 & ~(unint64_t)v91)) & ~(unint64_t)v89);
  v81 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v84 = v6;
  v76 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v76 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_DWORD *)(v14 + 80) | v13;
  v86 = v5;
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 84);
  v20 = *(_DWORD *)(v18 + 80);
  v21 = v16 | *(_DWORD *)(v18 + 80);
  v22 = v21 & 0xF8 | 7u;
  v23 = *(unsigned int *)(v12 + 84);
  v24 = *(unsigned int *)(v14 + 84);
  if (v24 <= v23)
    v25 = *(_DWORD *)(v12 + 84);
  else
    v25 = *(_DWORD *)(v14 + 84);
  v26 = v19 - 1;
  if (!v19)
    v26 = 0;
  if (v26 <= v25)
    v27 = v25;
  else
    v27 = v26;
  v77 = v12;
  v28 = *(_QWORD *)(v12 + 64) + v15;
  v75 = v14;
  v29 = *(_QWORD *)(v14 + 64) + v20;
  if (v19)
    v31 = *(_QWORD *)(v18 + 64);
  else
    v31 = *(_QWORD *)(v18 + 64) + 1;
  v30 = (v29 + (v28 & ~v15)) & ~v20;
  v32 = v30 + v31;
  if (v27)
    v33 = v30 + v31;
  else
    v33 = v32 + 1;
  if (v33 <= 8)
    v34 = 8;
  else
    v34 = v33;
  v35 = v34 + ((v22 + 8) & ~v22);
  if (v11 <= v35 + 1)
    v36 = v35 + 1;
  else
    v36 = v11;
  if (v36 <= 8)
    v37 = 8;
  else
    v37 = v36;
  v38 = v21 | v89 | v91 | *(_DWORD *)(v7 + 80);
  if ((v38 & 0x1000F8) != 0 || (unint64_t)(v37 + 1) > 0x18)
  {
    v41 = *a2;
    *a1 = *a2;
    v42 = (_QWORD *)(v41 + (((v38 & 0xF8 | 7u) + 16) & ~(unint64_t)(v38 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    v39 = v7;
    v44 = ~(unint64_t)v91;
    v45 = ~(unint64_t)v89;
    v46 = ~v22;
    v47 = ~v15;
    v48 = ~v20;
    v42 = a1;
    switch(*((_BYTE *)a2 + v37))
    {
      case 0:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v39 + 16))(a1, a2, v81);
        v49 = ((unint64_t)a1 + v80) & v44;
        v50 = ((unint64_t)a2 + v80) & v44;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v83 + 16))(v49, v50, v84);
        v51 = (void *)((v49 + v82 + v89) & v45);
        v52 = (const void *)((v50 + v82 + v89) & v45);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48))(v52, 1, v86))
        {
          memcpy(v51, v52, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v85 + 16))(v51, v52, v86);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v51, 0, 1, v86);
        }
        *((_BYTE *)a1 + v37) = 0;
        return v42;
      case 1:
        *a1 = *a2;
        *((_BYTE *)a1 + v37) = 1;
        swift_bridgeObjectRetain();
        return v42;
      case 2:
        *a1 = *a2;
        v53 = (_QWORD *)(((unint64_t)a1 + v22 + 8) & v46);
        v54 = (void **)(((unint64_t)a2 + v22 + 8) & v46);
        v55 = *((unsigned __int8 *)v54 + v34);
        if (v55 >= 2)
        {
          if (v34 <= 3)
            v56 = v34;
          else
            v56 = 4;
          __asm { BR              X14 }
        }
        if (v55 == 1)
        {
          v57 = *v54;
          v58 = v57;
          *v53 = v57;
          v59 = 1;
          goto LABEL_72;
        }
        v72 = v27;
        v73 = v29;
        v74 = v17;
        v90 = v47;
        v92 = v48;
        if (!v27)
        {
          v60 = v28;
          if (*((_BYTE *)v54 + v32))
          {
            v63 = (*((unsigned __int8 *)v54 + v32) - 1) << (8 * v32);
            if (v32 > 3)
              v63 = 0;
            if ((_DWORD)v32)
            {
              if (v32 <= 3)
                v64 = v30 + v31;
              else
                v64 = 4;
              __asm { BR              X11 }
            }
            if (v63 != -1)
              goto LABEL_63;
          }
          goto LABEL_67;
        }
        if ((_DWORD)v23 == v27)
        {
          v60 = v28;
          v61 = v30 + v31;
          v62 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v77 + 48))(v54, v23, AssociatedTypeWitness);
        }
        else
        {
          v65 = v27;
          v61 = v30 + v31;
          v60 = v28;
          v66 = ((unint64_t)v54 + v28) & v47;
          if ((_DWORD)v24 != v65)
          {
            v67 = (*(uint64_t (**)(unint64_t))(v18 + 48))((v29 + v66) & v48);
            v32 = v61;
            if (v67 >= 2)
              goto LABEL_63;
            goto LABEL_67;
          }
          v62 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v75 + 48))(v66, v24, v76);
        }
        v32 = v61;
        if (v62)
        {
LABEL_63:
          memcpy(v53, v54, v33);
          v59 = 0;
          goto LABEL_72;
        }
LABEL_67:
        v71 = v32;
        (*(void (**)(_QWORD *, void **, uint64_t))(v77 + 16))(v53, v54, AssociatedTypeWitness);
        v68 = ((unint64_t)v54 + v60) & v90;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v75 + 16))(((unint64_t)v53 + v60) & v90, v68, v76);
        v69 = (void *)((v73 + (((unint64_t)v53 + v60) & v90)) & v92);
        v70 = (const void *)((v73 + v68) & v92);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v70, 1, v74))
        {
          memcpy(v69, v70, v31);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v69, v70, v74);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v69, 0, 1, v74);
        }
        v59 = 0;
        if (!v72)
          *((_BYTE *)v53 + v71) = 0;
LABEL_72:
        *((_BYTE *)v53 + v34) = v59;
        *((_BYTE *)a1 + v37) = 2;
        break;
      case 3:
        *a1 = *a2;
        *((_BYTE *)a1 + v37) = 3;
        return v42;
      default:
        if (v37 <= 3)
          v40 = v37;
        else
          v40 = 4;
        __asm { BR              X16 }
        return result;
    }
  }
  return v42;
}

void sub_23B9FA718(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t, uint64_t);
  id *v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t AssociatedTypeWitness;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v3 = a2[3];
  v62 = *(_QWORD *)(a2[2] - 8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v63 = *(_QWORD *)(v62 + 64) + v5;
  v69 = v5;
  v6 = v63 & ~v5;
  v65 = v4;
  v7 = a2[4];
  v8 = *(_QWORD *)(v7 - 8);
  v66 = *(_QWORD *)(v4 + 64);
  v70 = *(unsigned __int8 *)(v8 + 80);
  v9 = (v66 + v70 + v6) & ~v70;
  v68 = v8;
  v10 = *(_QWORD *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84))
    ++v10;
  v11 = v10 + v9;
  v64 = a2[2];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v67 = v3;
  v60 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v60 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_DWORD *)(v14 + 80) | v13;
  v17 = v7;
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 84);
  v21 = *(_DWORD *)(v19 + 80);
  v22 = v16 | *(_DWORD *)(v19 + 80);
  v23 = v12;
  v24 = v22 & 0xF8 | 7u;
  v25 = *(unsigned int *)(v12 + 84);
  v26 = *(_DWORD *)(v14 + 84);
  if (v26 <= v25)
    v27 = *(_DWORD *)(v12 + 84);
  else
    v27 = *(_DWORD *)(v14 + 84);
  v28 = v20 - 1;
  if (!v20)
    v28 = 0;
  if (v28 <= v27)
    v28 = v27;
  v29 = *(_QWORD *)(v12 + 64) + v15;
  v30 = *(_QWORD *)(v14 + 64) + v21;
  v31 = *(_QWORD *)(v19 + 64);
  if (!v20)
    ++v31;
  v32 = v31 + ((v30 + (v29 & ~v15)) & ~v21);
  if (v28)
    v33 = v31 + ((v30 + (v29 & ~v15)) & ~v21);
  else
    v33 = v32 + 1;
  v34 = 8;
  if (v33 <= 8)
    v33 = 8;
  v35 = v33 + ((v24 + 8) & ~v24);
  if (v11 <= v35 + 1)
    v36 = v35 + 1;
  else
    v36 = v11;
  if (v36 > 8)
    v34 = v36;
  v37 = *(unsigned __int8 *)(a1 + v34);
  v39 = ~v24;
  v40 = ~v15;
  v41 = ~v21;
  switch(v37)
  {
    case 0:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 8))(a1, v64, v40);
      v42 = (v63 + a1) & ~v69;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v42, v67);
      v43 = (v42 + v66 + v70) & ~v70;
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v68 + 48))(v43, 1, v7))
        return;
      v44 = *(void (**)(unint64_t, uint64_t))(v68 + 8);
      goto LABEL_30;
    case 1:
      swift_bridgeObjectRelease();
      return;
    case 2:
      v45 = (id *)((a1 + v24 + 8) & v39);
      v46 = *((unsigned __int8 *)v45 + v33);
      if (v46 >= 2)
      {
        if (v33 <= 3)
          v47 = v33;
        else
          v47 = 4;
        __asm { BR              X17 }
      }
      if (v46 == 1)
      {

        return;
      }
      if (v28)
      {
        if ((_DWORD)v25 == v28)
        {
          v48 = v40;
          v49 = v18;
          v50 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v23 + 48))(v45, v25, AssociatedTypeWitness);
          v40 = v48;
          v18 = v49;
        }
        else
        {
          v53 = v40;
          v54 = ((unint64_t)v45 + v29) & v40;
          if (v26 != v28)
          {
            v56 = v18;
            v57 = (*(uint64_t (**)(unint64_t))(v19 + 48))((v30 + v54) & v41);
            v18 = v56;
            v40 = v53;
            if (v57 >= 2)
              return;
            goto LABEL_56;
          }
          v55 = v18;
          v50 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v14 + 48))(v54, *(unsigned int *)(v14 + 84), v60);
          v18 = v55;
          v40 = v53;
        }
      }
      else
      {
        if (!*((_BYTE *)v45 + v32))
          goto LABEL_56;
        v51 = (*((unsigned __int8 *)v45 + v32) - 1) << (8 * v32);
        if (v32 > 3)
          v51 = 0;
        if ((_DWORD)v32)
        {
          if (v32 <= 3)
            v52 = v32;
          else
            v52 = 4;
          __asm { BR              X11 }
        }
        v50 = v51 + 1;
      }
      if (v50)
        return;
LABEL_56:
      v17 = v18;
      v58 = v40;
      (*(void (**)(id *, uint64_t))(v23 + 8))(v45, AssociatedTypeWitness);
      v59 = ((unint64_t)v45 + v29) & v58;
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v59, v60);
      v43 = (v30 + v59) & v41;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v43, 1, v17))
      {
        v44 = *(void (**)(unint64_t, uint64_t))(v19 + 8);
LABEL_30:
        v44(v43, v17);
      }
      return;
    case 3:
      return;
    default:
      if (v39 <= 3)
        v38 = v39;
      else
        v38 = 4;
      __asm { BR              X3 }
      return;
  }
}

_QWORD *sub_23B9FAC78(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  const void *v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  void **v54;
  unsigned int v55;
  uint64_t v56;
  char v57;
  void *v58;
  uint64_t v59;
  id v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  unint64_t v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unint64_t v74;
  void *v75;
  const void *v76;
  _QWORD *result;
  uint64_t v78;
  size_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t AssociatedTypeWitness;
  size_t __n;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v5 = a3[2];
  v7 = a3[3];
  v6 = a3[4];
  v88 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v89 = *(_QWORD *)(v88 + 64) + v9;
  v96 = v9;
  v10 = v89 & ~v9;
  v91 = v8;
  v11 = *(_QWORD *)(v6 - 8);
  v92 = *(_QWORD *)(v8 + 64);
  v97 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v92 + v97 + v10) & ~v97;
  v94 = v11;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v14 = v13 + v12;
  v90 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v93 = v7;
  v84 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v84 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = *(_DWORD *)(v17 + 80) | v16;
  v95 = v6;
  v20 = a2;
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 84);
  v24 = *(_DWORD *)(v22 + 80);
  v25 = (v19 | *(_DWORD *)(v22 + 80)) & 0xF8 | 7u;
  v26 = *(unsigned int *)(v15 + 84);
  v27 = *(unsigned int *)(v17 + 84);
  if (v27 <= v26)
    v28 = *(_DWORD *)(v15 + 84);
  else
    v28 = *(_DWORD *)(v17 + 84);
  v29 = v23 - 1;
  if (!v23)
    v29 = 0;
  if (v29 <= v28)
    v30 = v28;
  else
    v30 = v29;
  v85 = v15;
  v31 = *(_QWORD *)(v15 + 64) + v18;
  v83 = v17;
  v32 = *(_QWORD *)(v17 + 64) + v24;
  if (v23)
    v34 = *(_QWORD *)(v22 + 64);
  else
    v34 = *(_QWORD *)(v22 + 64) + 1;
  v33 = (v32 + (v31 & ~v18)) & ~v24;
  v35 = v33 + v34;
  if (v30)
    v36 = v33 + v34;
  else
    v36 = v35 + 1;
  if (v36 <= 8)
    v37 = 8;
  else
    v37 = v36;
  v38 = v37 + ((v25 + 8) & ~v25);
  if (v14 <= v38 + 1)
    v39 = v38 + 1;
  else
    v39 = v14;
  if (v39 <= 8)
    v40 = 8;
  else
    v40 = v39;
  v41 = *((unsigned __int8 *)a2 + v40);
  v43 = ~v96;
  v44 = ~v97;
  v45 = ~v25;
  v46 = ~v24;
  switch(v41)
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v88 + 16))(a1, v20, v90);
      v47 = ((unint64_t)a1 + v89) & v43;
      v48 = ((unint64_t)v20 + v89) & v43;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 16))(v47, v48, v93);
      v49 = (void *)((v47 + v92 + v97) & v44);
      v50 = (const void *)((v48 + v92 + v97) & v44);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v94 + 48))(v50, 1, v95))
      {
        memcpy(v49, v50, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v94 + 16))(v49, v50, v95);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v49, 0, 1, v95);
      }
      *((_BYTE *)a1 + v40) = 0;
      return a1;
    case 1:
      *a1 = *v20;
      *((_BYTE *)a1 + v40) = 1;
      swift_bridgeObjectRetain();
      return a1;
    case 2:
      *a1 = *v20;
      v51 = (char *)a1 + v25;
      v52 = (char *)v20 + v25;
      v53 = (_QWORD *)((unint64_t)(v51 + 8) & v45);
      v54 = (void **)((unint64_t)(v52 + 8) & v45);
      v55 = *((unsigned __int8 *)v54 + v37);
      if (v55 >= 2)
      {
        if (v37 <= 3)
          v56 = v37;
        else
          v56 = 4;
        __asm { BR              X14 }
      }
      if (v55 == 1)
      {
        v58 = *v54;
        v59 = v37;
        v60 = v58;
        *v53 = v58;
        v61 = 1;
        goto LABEL_67;
      }
      v79 = v34;
      v81 = v21;
      v82 = v37;
      v98 = v46;
      v80 = v32;
      if (!v30)
      {
        v62 = ~v18;
        v63 = v31;
        if (!*((_BYTE *)v54 + v35))
          goto LABEL_59;
        v67 = (*((unsigned __int8 *)v54 + v35) - 1) << (8 * v35);
        if (v35 > 3)
          v67 = 0;
        if ((_DWORD)v35)
        {
          if (v35 <= 3)
            v68 = v35;
          else
            v68 = 4;
          __asm { BR              X11 }
        }
        v66 = v67 + 1;
        goto LABEL_65;
      }
      if ((_DWORD)v26 == v30)
      {
        v62 = ~v18;
        v63 = v31;
        v64 = v30;
        v65 = v35;
        v66 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(v85 + 48))(v54, v26, AssociatedTypeWitness);
        v35 = v65;
        v30 = v64;
        goto LABEL_65;
      }
      v69 = v35;
      v63 = v31;
      v62 = ~v18;
      v70 = ((unint64_t)v54 + v31) & ~v18;
      v71 = v30;
      if ((_DWORD)v27 == v30)
      {
        v66 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v83 + 48))(v70, v27, v84);
        v30 = v71;
        v35 = v69;
LABEL_65:
        if (v66)
          goto LABEL_66;
        goto LABEL_59;
      }
      v72 = (*(uint64_t (**)(unint64_t))(v22 + 48))((v32 + v70) & v46);
      v30 = v71;
      v35 = v69;
      if (v72 >= 2)
      {
LABEL_66:
        memcpy(v53, v54, v36);
        v61 = 0;
        v59 = v82;
        goto LABEL_67;
      }
LABEL_59:
      v78 = v35;
      v73 = v30;
      (*(void (**)(_QWORD *, void **, uint64_t))(v85 + 16))(v53, v54, AssociatedTypeWitness);
      v74 = ((unint64_t)v54 + v63) & v62;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v83 + 16))(((unint64_t)v53 + v63) & v62, v74, v84);
      v75 = (void *)((v80 + (((unint64_t)v53 + v63) & v62)) & v98);
      v76 = (const void *)((v80 + v74) & v98);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v76, 1, v81))
      {
        memcpy(v75, v76, v79);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v75, v76, v81);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v75, 0, 1, v81);
      }
      v59 = v82;
      v61 = 0;
      if (!v73)
        *((_BYTE *)v53 + v78) = 0;
LABEL_67:
      *((_BYTE *)v53 + v59) = v61;
      v57 = 2;
LABEL_68:
      *((_BYTE *)a1 + v40) = v57;
      return a1;
    case 3:
      *a1 = *v20;
      v57 = 3;
      goto LABEL_68;
    default:
      if (v40 <= 3)
        v42 = v40;
      else
        v42 = 4;
      __asm { BR              X16 }
      return result;
  }
}

_QWORD *sub_23B9FB2E0(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id *v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  size_t v52;
  uint64_t v53;
  _QWORD *v54;
  id *v55;
  unsigned int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  id v60;
  id v61;
  char v62;
  int v63;
  int v64;
  unint64_t v65;
  void *v66;
  const void *v67;
  _QWORD *result;
  unsigned int v69;
  size_t v70;
  unsigned int v71;
  size_t __n;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t AssociatedTypeWitness;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;

  v3 = a1;
  if (a1 == a2)
    return v3;
  v5 = a3[2];
  v6 = a3[3];
  v7 = a3[4];
  v85 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v86 = *(_QWORD *)(v85 + 64) + v9;
  v93 = v9;
  v10 = v86 & ~v9;
  v88 = v8;
  v11 = *(_QWORD *)(v7 - 8);
  v89 = *(_QWORD *)(v8 + 64);
  v96 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v89 + v96 + v10) & ~v96;
  v91 = v11;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v14 = v13 + v12;
  v87 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v90 = v6;
  v76 = swift_getAssociatedTypeWitness();
  v17 = v3;
  v18 = *(_QWORD *)(v76 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v20 = *(_DWORD *)(v18 + 80) | v16;
  v92 = v7;
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 84);
  v24 = *(_DWORD *)(v22 + 80);
  v25 = (v20 | *(_DWORD *)(v22 + 80)) & 0xF8 | 7u;
  v26 = *(unsigned int *)(v15 + 84);
  v27 = *(_DWORD *)(v18 + 84);
  v71 = v27;
  if (v27 <= v26)
    v27 = *(_DWORD *)(v15 + 84);
  v28 = v23 - 1;
  if (!v23)
    v28 = 0;
  if (v28 <= v27)
    v29 = v27;
  else
    v29 = v28;
  v69 = *(_DWORD *)(v22 + 84);
  v30 = v18;
  v3 = v17;
  v80 = *(_QWORD *)(v15 + 64) + v19;
  v81 = v15;
  v73 = v30;
  v75 = *(_QWORD *)(v30 + 64) + v24;
  if (v23)
    v31 = *(_QWORD *)(v22 + 64);
  else
    v31 = *(_QWORD *)(v22 + 64) + 1;
  v83 = v29;
  v77 = ((v75 + (v80 & ~v19)) & ~v24) + v31;
  if (v29)
    v32 = ((v75 + (v80 & ~v19)) & ~v24) + v31;
  else
    v32 = ((v75 + (v80 & ~v19)) & ~v24) + v31 + 1;
  v70 = v32;
  if (v32 <= 8)
    v33 = 8;
  else
    v33 = v32;
  v34 = v33 + ((v25 + 8) & ~v25);
  if (v14 <= v34 + 1)
    v35 = v34 + 1;
  else
    v35 = v14;
  if (v35 <= 8)
    v36 = 8;
  else
    v36 = v35;
  v78 = v21;
  v84 = ~v93;
  v94 = ~v96;
  v38 = ~v25;
  v79 = ~v19;
  v74 = ~v24;
  switch(*((_BYTE *)v3 + v36))
  {
    case 0:
      (*(void (**)(_QWORD *, uint64_t))(v85 + 8))(v3, v87);
      (*(void (**)(unint64_t, uint64_t))(v88 + 8))(((unint64_t)v3 + v86) & v84, v90);
      v39 = ((((unint64_t)v3 + v86) & v84) + v89 + v96) & v94;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v91 + 48))(v39, 1, v92))
        (*(void (**)(unint64_t, uint64_t))(v91 + 8))(v39, v92);
      break;
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 2:
      v40 = (id *)(((unint64_t)v3 + v25 + 8) & v38);
      v41 = *((unsigned __int8 *)v40 + v33);
      if (v41 >= 2)
      {
        if (v33 <= 3)
          v42 = v33;
        else
          v42 = 4;
        __asm { BR              X12 }
      }
      if (v41 == 1)
      {

        break;
      }
      if (v29)
      {
        if ((_DWORD)v26 == v29)
        {
          v43 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v81 + 48))(((unint64_t)v3 + v25 + 8) & v38, v26, AssociatedTypeWitness);
        }
        else
        {
          v46 = ((unint64_t)v40 + v80) & v79;
          if (v71 != v29)
          {
            if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v22 + 48))((v75 + v46) & v74, v23, v78) >= 2)break;
            goto LABEL_59;
          }
          v43 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v73 + 48))(v46, v71, v76);
        }
        if (v43)
          break;
LABEL_59:
        (*(void (**)(unint64_t, uint64_t))(v81 + 8))(((unint64_t)v3 + v25 + 8) & v38, AssociatedTypeWitness);
        v47 = ((unint64_t)v40 + v80) & v79;
        (*(void (**)(unint64_t, uint64_t))(v73 + 8))(v47, v76);
        v48 = (v75 + v47) & v74;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v48, 1, v78))
          (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v48, v78);
        break;
      }
      if (!*((_BYTE *)v40 + v77))
        goto LABEL_59;
      v44 = (*((unsigned __int8 *)v40 + v77) - 1) << (8 * v77);
      if (v77 > 3)
        v44 = 0;
      if ((_DWORD)v77)
      {
        if (v77 <= 3)
          v45 = v77;
        else
          v45 = 4;
        __asm { BR              X11 }
      }
      if (v44 == -1)
        goto LABEL_59;
      break;
    case 3:
      break;
    default:
      if (v36 <= 3)
        v37 = v36;
      else
        v37 = 4;
      __asm { BR              X13 }
      return result;
  }
  switch(*((_BYTE *)a2 + v36))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v85 + 16))(v3, a2, v87);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 16))(((unint64_t)v3 + v86) & v84, ((unint64_t)a2 + v86) & v84, v90);
      v50 = (void *)(((((unint64_t)v3 + v86) & v84) + v89 + v96) & v94);
      v51 = (const void *)(((((unint64_t)a2 + v86) & v84) + v89 + v96) & v94);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48))(v51, 1, v92))
      {
        memcpy(v50, v51, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v50, v51, v92);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v50, 0, 1, v92);
      }
      *((_BYTE *)v3 + v36) = 0;
      return v3;
    case 1:
      *v3 = *a2;
      *((_BYTE *)v3 + v36) = 1;
      swift_bridgeObjectRetain();
      return v3;
    case 2:
      v52 = v31;
      *v3 = *a2;
      v53 = v33;
      v54 = (_QWORD *)(((unint64_t)v3 + v25 + 8) & v38);
      v55 = (id *)(((unint64_t)a2 + v25 + 8) & v38);
      v56 = *((unsigned __int8 *)v55 + v53);
      if (v56 >= 2)
      {
        if (v53 <= 3)
          v57 = v53;
        else
          v57 = 4;
        __asm { BR              X12 }
      }
      v59 = v53;
      if (v56 == 1)
      {
        v60 = *v55;
        v61 = *v55;
        *v54 = v60;
        v62 = 1;
        goto LABEL_104;
      }
      if (v83)
      {
        if ((_DWORD)v26 == v83)
        {
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v81 + 48))(v55, v26, AssociatedTypeWitness))
            goto LABEL_96;
LABEL_103:
          memcpy((void *)(((unint64_t)v3 + v25 + 8) & v38), v55, v70);
          v62 = 0;
          goto LABEL_104;
        }
        v65 = ((unint64_t)v55 + v80) & v79;
        if (v71 != v83)
        {
          if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v22 + 48))((v75 + v65) & v74, v69, v78) < 2)goto LABEL_96;
          goto LABEL_103;
        }
        if ((*(unsigned int (**)(unint64_t))(v73 + 48))(v65))
          goto LABEL_103;
      }
      else if (*((_BYTE *)v55 + v77))
      {
        v63 = (*((unsigned __int8 *)v55 + v77) - 1) << (8 * v77);
        if (v77 > 3)
          v63 = 0;
        if ((_DWORD)v77)
        {
          if (v77 <= 3)
            v64 = v77;
          else
            v64 = 4;
          __asm { BR              X11 }
        }
        if (v63 != -1)
          goto LABEL_103;
      }
LABEL_96:
      (*(void (**)(unint64_t, id *, uint64_t))(v81 + 16))(((unint64_t)v3 + v25 + 8) & v38, v55, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v73 + 16))(((unint64_t)v54 + v80) & v79, ((unint64_t)v55 + v80) & v79, v76);
      v66 = (void *)((v75 + (((unint64_t)v54 + v80) & v79)) & v74);
      v67 = (const void *)((v75 + (((unint64_t)v55 + v80) & v79)) & v74);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v67, 1, v78))
      {
        memcpy(v66, v67, v52);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v66, v67, v78);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v66, 0, 1, v78);
      }
      v62 = v83;
      if (v83)
        v62 = 0;
      else
        *((_BYTE *)v54 + v77) = 0;
LABEL_104:
      *((_BYTE *)v54 + v59) = v62;
      v58 = 2;
LABEL_105:
      *((_BYTE *)v3 + v36) = v58;
      return v3;
    case 3:
      *v3 = *a2;
      v58 = 3;
      goto LABEL_105;
    default:
      if (v36 <= 3)
        v49 = v36;
      else
        v49 = 4;
      __asm { BR              X12 }
      return result;
  }
}

_QWORD *sub_23B9FBC9C(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  const void *v50;
  char v51;
  char *v52;
  char *v53;
  _QWORD *v54;
  _QWORD *v55;
  unsigned int v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  unsigned int v67;
  unsigned int v68;
  size_t v69;
  unsigned int v70;
  unint64_t v71;
  void *v72;
  const void *v73;
  _QWORD *result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t AssociatedTypeWitness;
  size_t __n;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v5 = a3[2];
  v7 = a3[3];
  v6 = a3[4];
  v84 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v85 = *(_QWORD *)(v84 + 64) + v9;
  v92 = v9;
  v10 = v85 & ~v9;
  v87 = v8;
  v11 = *(_QWORD *)(v6 - 8);
  v88 = *(_QWORD *)(v8 + 64);
  v94 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v88 + v94 + v10) & ~v94;
  v90 = v11;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v14 = v13 + v12;
  v86 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v89 = v7;
  v80 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v80 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = *(_DWORD *)(v17 + 80) | v16;
  v91 = v6;
  v20 = a2;
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 84);
  v24 = *(_DWORD *)(v22 + 80);
  v25 = (v19 | *(_DWORD *)(v22 + 80)) & 0xF8 | 7u;
  v26 = *(unsigned int *)(v15 + 84);
  v27 = *(unsigned int *)(v17 + 84);
  if (v27 <= v26)
    v28 = *(_DWORD *)(v15 + 84);
  else
    v28 = *(_DWORD *)(v17 + 84);
  v29 = v23 - 1;
  if (!v23)
    v29 = 0;
  if (v29 <= v28)
    v30 = v28;
  else
    v30 = v29;
  v81 = v15;
  v31 = *(_QWORD *)(v15 + 64) + v18;
  v79 = v17;
  v32 = *(_QWORD *)(v17 + 64) + v24;
  if (v23)
    v34 = *(_QWORD *)(v22 + 64);
  else
    v34 = *(_QWORD *)(v22 + 64) + 1;
  v33 = (v32 + (v31 & ~v18)) & ~v24;
  v35 = v33 + v34;
  if (v30)
    v36 = v33 + v34;
  else
    v36 = v35 + 1;
  if (v36 <= 8)
    v37 = 8;
  else
    v37 = v36;
  v38 = v37 + ((v25 + 8) & ~v25);
  if (v14 <= v38 + 1)
    v39 = v38 + 1;
  else
    v39 = v14;
  if (v39 <= 8)
    v40 = 8;
  else
    v40 = v39;
  v41 = *((unsigned __int8 *)a2 + v40);
  v43 = ~v92;
  v44 = ~v94;
  v45 = ~v25;
  v46 = ~v24;
  switch(v41)
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v84 + 32))(a1, v20, v86);
      v47 = ((unint64_t)a1 + v85) & v43;
      v48 = ((unint64_t)v20 + v85) & v43;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v87 + 32))(v47, v48, v89);
      v49 = (void *)((v47 + v88 + v94) & v44);
      v50 = (const void *)((v48 + v88 + v94) & v44);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v90 + 48))(v50, 1, v91))
      {
        memcpy(v49, v50, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v90 + 32))(v49, v50, v91);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v49, 0, 1, v91);
      }
      v51 = 0;
      goto LABEL_68;
    case 1:
      *a1 = *v20;
      v51 = 1;
      goto LABEL_68;
    case 2:
      *a1 = *v20;
      v52 = (char *)a1 + v25;
      v53 = (char *)v20 + v25;
      v54 = (_QWORD *)((unint64_t)(v52 + 8) & v45);
      v55 = (_QWORD *)((unint64_t)(v53 + 8) & v45);
      v56 = *((unsigned __int8 *)v55 + v37);
      if (v56 >= 2)
      {
        if (v37 <= 3)
          v57 = v37;
        else
          v57 = 4;
        __asm { BR              X14 }
      }
      if (v56 == 1)
      {
        *v54 = *v55;
        v58 = 1;
        goto LABEL_67;
      }
      v77 = v21;
      v78 = v37;
      v76 = v32;
      v93 = ~v18;
      v95 = v46;
      if (!v30)
      {
        v59 = v31;
        if (!*((_BYTE *)v55 + v35))
          goto LABEL_59;
        v63 = (*((unsigned __int8 *)v55 + v35) - 1) << (8 * v35);
        if (v35 > 3)
          v63 = 0;
        if ((_DWORD)v35)
        {
          if (v35 <= 3)
            v64 = v35;
          else
            v64 = 4;
          __asm { BR              X11 }
        }
        v62 = v63 + 1;
        goto LABEL_65;
      }
      if ((_DWORD)v26 == v30)
      {
        v59 = v31;
        v60 = v30;
        v61 = v35;
        v62 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v81 + 48))(v55, v26, AssociatedTypeWitness);
        v35 = v61;
        v30 = v60;
        goto LABEL_65;
      }
      v65 = v35;
      v59 = v31;
      v66 = ((unint64_t)v55 + v31) & ~v18;
      v67 = v30;
      if ((_DWORD)v27 == v30)
      {
        v62 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v79 + 48))(v66, v27, v80);
        v30 = v67;
        v35 = v65;
LABEL_65:
        if (v62)
          goto LABEL_66;
        goto LABEL_59;
      }
      v68 = (*(uint64_t (**)(unint64_t))(v22 + 48))((v32 + v66) & v46);
      v30 = v67;
      v35 = v65;
      if (v68 >= 2)
      {
LABEL_66:
        memcpy(v54, v55, v36);
        v58 = 0;
        v37 = v78;
        goto LABEL_67;
      }
LABEL_59:
      v75 = v35;
      v69 = v34;
      v70 = v30;
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v81 + 32))(v54, v55, AssociatedTypeWitness);
      v71 = ((unint64_t)v55 + v59) & v93;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v79 + 32))(((unint64_t)v54 + v59) & v93, v71, v80);
      v72 = (void *)((v76 + (((unint64_t)v54 + v59) & v93)) & v95);
      v73 = (const void *)((v76 + v71) & v95);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v73, 1, v77))
      {
        memcpy(v72, v73, v69);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v72, v73, v77);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v72, 0, 1, v77);
      }
      v37 = v78;
      v58 = 0;
      if (!v70)
        *((_BYTE *)v54 + v75) = 0;
LABEL_67:
      *((_BYTE *)v54 + v37) = v58;
      v51 = 2;
LABEL_68:
      *((_BYTE *)a1 + v40) = v51;
      return a1;
    case 3:
      *a1 = *v20;
      v51 = 3;
      goto LABEL_68;
    default:
      if (v40 <= 3)
        v42 = v40;
      else
        v42 = 4;
      __asm { BR              X16 }
      return result;
  }
}

_QWORD *sub_23B9FC2EC(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id *v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  char v52;
  size_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  int v61;
  int v62;
  unint64_t v63;
  void *v64;
  const void *v65;
  _QWORD *result;
  unsigned int v67;
  size_t v68;
  unsigned int v69;
  size_t __n;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t AssociatedTypeWitness;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;

  v3 = a1;
  if (a1 == a2)
    return v3;
  v5 = a3[2];
  v6 = a3[3];
  v7 = a3[4];
  v83 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v84 = *(_QWORD *)(v83 + 64) + v9;
  v91 = v9;
  v10 = v84 & ~v9;
  v86 = v8;
  v11 = *(_QWORD *)(v7 - 8);
  v87 = *(_QWORD *)(v8 + 64);
  v94 = *(unsigned __int8 *)(v11 + 80);
  v12 = (v87 + v94 + v10) & ~v94;
  v89 = v11;
  v13 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v11 + 84))
    ++v13;
  __n = v13;
  v14 = v13 + v12;
  v85 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v88 = v6;
  v74 = swift_getAssociatedTypeWitness();
  v17 = v3;
  v18 = *(_QWORD *)(v74 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v20 = *(_DWORD *)(v18 + 80) | v16;
  v90 = v7;
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 84);
  v24 = *(_DWORD *)(v22 + 80);
  v25 = (v20 | *(_DWORD *)(v22 + 80)) & 0xF8 | 7u;
  v26 = *(unsigned int *)(v15 + 84);
  v27 = *(_DWORD *)(v18 + 84);
  v69 = v27;
  if (v27 <= v26)
    v27 = *(_DWORD *)(v15 + 84);
  v28 = v23 - 1;
  if (!v23)
    v28 = 0;
  if (v28 <= v27)
    v29 = v27;
  else
    v29 = v28;
  v67 = *(_DWORD *)(v22 + 84);
  v30 = v18;
  v3 = v17;
  v78 = *(_QWORD *)(v15 + 64) + v19;
  v79 = v15;
  v71 = v30;
  v73 = *(_QWORD *)(v30 + 64) + v24;
  if (v23)
    v31 = *(_QWORD *)(v22 + 64);
  else
    v31 = *(_QWORD *)(v22 + 64) + 1;
  v81 = v29;
  v75 = ((v73 + (v78 & ~v19)) & ~v24) + v31;
  if (v29)
    v32 = ((v73 + (v78 & ~v19)) & ~v24) + v31;
  else
    v32 = ((v73 + (v78 & ~v19)) & ~v24) + v31 + 1;
  v68 = v32;
  if (v32 <= 8)
    v33 = 8;
  else
    v33 = v32;
  v34 = v33 + ((v25 + 8) & ~v25);
  if (v14 <= v34 + 1)
    v35 = v34 + 1;
  else
    v35 = v14;
  if (v35 <= 8)
    v36 = 8;
  else
    v36 = v35;
  v76 = v21;
  v82 = ~v91;
  v92 = ~v94;
  v38 = ~v25;
  v77 = ~v19;
  v72 = ~v24;
  switch(*((_BYTE *)v3 + v36))
  {
    case 0:
      (*(void (**)(_QWORD *, uint64_t))(v83 + 8))(v3, v85);
      (*(void (**)(unint64_t, uint64_t))(v86 + 8))(((unint64_t)v3 + v84) & v82, v88);
      v39 = ((((unint64_t)v3 + v84) & v82) + v87 + v94) & v92;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v89 + 48))(v39, 1, v90))
        (*(void (**)(unint64_t, uint64_t))(v89 + 8))(v39, v90);
      break;
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 2:
      v40 = (id *)(((unint64_t)v3 + v25 + 8) & v38);
      v41 = *((unsigned __int8 *)v40 + v33);
      if (v41 >= 2)
      {
        if (v33 <= 3)
          v42 = v33;
        else
          v42 = 4;
        __asm { BR              X12 }
      }
      if (v41 == 1)
      {

        break;
      }
      if (v29)
      {
        if ((_DWORD)v26 == v29)
        {
          v43 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v79 + 48))(((unint64_t)v3 + v25 + 8) & v38, v26, AssociatedTypeWitness);
        }
        else
        {
          v46 = ((unint64_t)v40 + v78) & v77;
          if (v69 != v29)
          {
            if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v22 + 48))((v73 + v46) & v72, v23, v76) >= 2)break;
            goto LABEL_59;
          }
          v43 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v71 + 48))(v46, v69, v74);
        }
        if (v43)
          break;
LABEL_59:
        (*(void (**)(unint64_t, uint64_t))(v79 + 8))(((unint64_t)v3 + v25 + 8) & v38, AssociatedTypeWitness);
        v47 = ((unint64_t)v40 + v78) & v77;
        (*(void (**)(unint64_t, uint64_t))(v71 + 8))(v47, v74);
        v48 = (v73 + v47) & v72;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v48, 1, v76))
          (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v48, v76);
        break;
      }
      if (!*((_BYTE *)v40 + v75))
        goto LABEL_59;
      v44 = (*((unsigned __int8 *)v40 + v75) - 1) << (8 * v75);
      if (v75 > 3)
        v44 = 0;
      if ((_DWORD)v75)
      {
        if (v75 <= 3)
          v45 = v75;
        else
          v45 = 4;
        __asm { BR              X11 }
      }
      if (v44 == -1)
        goto LABEL_59;
      break;
    case 3:
      break;
    default:
      if (v36 <= 3)
        v37 = v36;
      else
        v37 = 4;
      __asm { BR              X13 }
      return result;
  }
  switch(*((_BYTE *)a2 + v36))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v83 + 32))(v3, a2, v85);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v86 + 32))(((unint64_t)v3 + v84) & v82, ((unint64_t)a2 + v84) & v82, v88);
      v50 = (void *)(((((unint64_t)v3 + v84) & v82) + v87 + v94) & v92);
      v51 = (const void *)(((((unint64_t)a2 + v84) & v82) + v87 + v94) & v92);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v89 + 48))(v51, 1, v90))
      {
        memcpy(v50, v51, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v89 + 32))(v50, v51, v90);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v50, 0, 1, v90);
      }
      v52 = 0;
      goto LABEL_105;
    case 1:
      *v3 = *a2;
      v52 = 1;
      goto LABEL_105;
    case 2:
      v53 = v31;
      *v3 = *a2;
      v54 = v33;
      v55 = (_QWORD *)(((unint64_t)v3 + v25 + 8) & v38);
      v56 = (_QWORD *)(((unint64_t)a2 + v25 + 8) & v38);
      v57 = *((unsigned __int8 *)v56 + v54);
      if (v57 >= 2)
      {
        if (v54 <= 3)
          v58 = v54;
        else
          v58 = 4;
        __asm { BR              X12 }
      }
      v59 = v54;
      if (v57 == 1)
      {
        *v55 = *v56;
        v60 = 1;
        goto LABEL_104;
      }
      if (v81)
      {
        if ((_DWORD)v26 == v81)
        {
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48))(v56, v26, AssociatedTypeWitness))
            goto LABEL_96;
LABEL_103:
          memcpy((void *)(((unint64_t)v3 + v25 + 8) & v38), v56, v68);
          v60 = 0;
          goto LABEL_104;
        }
        v63 = ((unint64_t)v56 + v78) & v77;
        if (v69 != v81)
        {
          if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v22 + 48))((v73 + v63) & v72, v67, v76) < 2)goto LABEL_96;
          goto LABEL_103;
        }
        if ((*(unsigned int (**)(unint64_t))(v71 + 48))(v63))
          goto LABEL_103;
      }
      else if (*((_BYTE *)v56 + v75))
      {
        v61 = (*((unsigned __int8 *)v56 + v75) - 1) << (8 * v75);
        if (v75 > 3)
          v61 = 0;
        if ((_DWORD)v75)
        {
          if (v75 <= 3)
            v62 = v75;
          else
            v62 = 4;
          __asm { BR              X11 }
        }
        if (v61 != -1)
          goto LABEL_103;
      }
LABEL_96:
      (*(void (**)(unint64_t, _QWORD *, uint64_t))(v79 + 32))(((unint64_t)v3 + v25 + 8) & v38, v56, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 32))(((unint64_t)v55 + v78) & v77, ((unint64_t)v56 + v78) & v77, v74);
      v64 = (void *)((v73 + (((unint64_t)v55 + v78) & v77)) & v72);
      v65 = (const void *)((v73 + (((unint64_t)v56 + v78) & v77)) & v72);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v65, 1, v76))
      {
        memcpy(v64, v65, v53);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v64, v65, v76);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v64, 0, 1, v76);
      }
      v60 = v81;
      if (v81)
        v60 = 0;
      else
        *((_BYTE *)v55 + v75) = 0;
LABEL_104:
      *((_BYTE *)v55 + v59) = v60;
      v52 = 2;
LABEL_105:
      *((_BYTE *)v3 + v36) = v52;
      return v3;
    case 3:
      *v3 = *a2;
      v52 = 3;
      goto LABEL_105;
    default:
      if (v36 <= 3)
        v49 = v36;
      else
        v49 = 4;
      __asm { BR              X12 }
      return result;
  }
}

uint64_t sub_23B9FCC98(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  unsigned int v29;
  int v30;
  unsigned int v31;
  uint64_t v33;
  unint64_t v34;

  v4 = *(_QWORD *)(a3[4] - 8);
  v34 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
       + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v5 = *(_DWORD *)(v4 + 84);
  v33 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v6 + 84);
  if (*(_DWORD *)(v8 + 84) > v11)
    v11 = *(_DWORD *)(v8 + 84);
  v13 = *(_DWORD *)(v10 + 80);
  v12 = *(_DWORD *)(v10 + 84);
  v14 = v12 - 1;
  if (!v12)
    v14 = 0;
  v15 = *(_QWORD *)(v10 + 64);
  if (!v12)
    ++v15;
  v16 = v13;
  v17 = ((v9 | v7) | v13) & 0xF8 | 7u;
  v18 = (v17 + 8) & ~v17;
  v19 = v14 | v11;
  v20 = v33;
  if (!v5)
    v20 = v33 + 1;
  if (!v19)
    ++v15;
  v21 = v15
      + ((*(_QWORD *)(v8 + 64)
        + v16
        + ((*(_QWORD *)(v6 + 64) + v9) & ~(unint64_t)v9)) & ~v16);
  if (v21 <= 8)
    v21 = 8;
  v22 = v21 + v18;
  if (v20 + v34 <= v22 + 1)
    v23 = v22 + 1;
  else
    v23 = v20 + v34;
  if (v23 <= 8)
    v24 = 8;
  else
    v24 = v23;
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_37;
  v25 = v24 + 1;
  v26 = 8 * (v24 + 1);
  if ((v24 + 1) <= 3)
  {
    v29 = ((a2 + ~(-1 << v26) - 252) >> v26) + 1;
    if (HIWORD(v29))
    {
      v27 = *(_DWORD *)(a1 + v25);
      if (!v27)
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v29 > 0xFF)
    {
      v27 = *(unsigned __int16 *)(a1 + v25);
      if (!*(_WORD *)(a1 + v25))
        goto LABEL_37;
      goto LABEL_30;
    }
    if (v29 < 2)
    {
LABEL_37:
      v31 = *(unsigned __int8 *)(a1 + v24);
      if (v31 >= 4)
        return (v31 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v27 = *(unsigned __int8 *)(a1 + v25);
  if (!*(_BYTE *)(a1 + v25))
    goto LABEL_37;
LABEL_30:
  v30 = (v27 - 1) << v26;
  if (v25 > 3)
    v30 = 0;
  if ((_DWORD)v25)
  {
    if (v25 > 3)
      LODWORD(v25) = 4;
    __asm { BR              X11 }
  }
  return (v30 + 253);
}

void sub_23B9FCF34(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  size_t v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  unint64_t v31;

  v5 = *(_QWORD *)(a4[4] - 8);
  v31 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
       + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v6 = *(_DWORD *)(v5 + 84);
  v30 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = 0;
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(_DWORD *)(v7 + 84);
  if (*(_DWORD *)(v9 + 84) > v13)
    v13 = *(_DWORD *)(v9 + 84);
  v15 = *(_DWORD *)(v12 + 80);
  v14 = *(_DWORD *)(v12 + 84);
  v16 = v14 - 1;
  if (!v14)
    v16 = 0;
  v17 = *(_QWORD *)(v12 + 64);
  if (!v14)
    ++v17;
  v18 = ((v10 | v8) | v15) & 0xF8 | 7u;
  v19 = (v18 + 8) & ~v18;
  v20 = (*(_QWORD *)(v9 + 64)
       + v15
       + ((*(_QWORD *)(v7 + 64) + v10) & ~(unint64_t)v10)) & ~(unint64_t)v15;
  v21 = v16 | v13;
  v22 = v30;
  if (!v6)
    v22 = v30 + 1;
  if (!v21)
    ++v17;
  v23 = v17 + v20;
  if (v23 <= 8)
    v23 = 8;
  v24 = v23 + v19;
  if (v22 + v31 <= v24 + 1)
    v25 = v24 + 1;
  else
    v25 = v22 + v31;
  if (v25 <= 8)
    v25 = 8;
  v26 = v25 + 1;
  if (a3 >= 0xFD)
  {
    if (v26 <= 3)
    {
      v27 = ((a3 + ~(-1 << (8 * v26)) - 252) >> (8 * v26)) + 1;
      if (HIWORD(v27))
      {
        v11 = 4u;
      }
      else if (v27 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v27 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v28 = a2 - 253;
  if (v26 < 4)
  {
    if ((_DWORD)v25 != -1)
    {
      v29 = v28 & ~(-1 << (8 * v26));
      bzero(a1, v26);
      if ((_DWORD)v26 == 3)
      {
        *(_WORD *)a1 = v29;
        a1[2] = BYTE2(v29);
      }
      else if ((_DWORD)v26 == 2)
      {
        *(_WORD *)a1 = v29;
      }
      else
      {
        *a1 = v29;
      }
    }
  }
  else
  {
    bzero(a1, v25 + 1);
    *(_DWORD *)a1 = v28;
  }
  __asm { BR              X10 }
}

void sub_23B9FD210()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_23B9FD218()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
}

uint64_t sub_23B9FD248(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;

  v3 = *(_QWORD *)(a2[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7 + v4;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_DWORD *)(v11 + 80) | v10;
  v14 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = *(_DWORD *)(v14 + 80);
  v17 = (v13 | *(_DWORD *)(v14 + 80)) & 0xF8 | 7u;
  v18 = (v17 + 8) & ~v17;
  v19 = *(_DWORD *)(v9 + 84);
  if (*(_DWORD *)(v11 + 84) > v19)
    v19 = *(_DWORD *)(v11 + 84);
  v20 = v15 - 1;
  if (!v15)
    v20 = 0;
  v21 = *(_QWORD *)(v14 + 64);
  if (!v15)
    ++v21;
  if (!(v20 | v19))
    ++v21;
  v22 = v21 + ((*(_QWORD *)(v11 + 64) + v16 + ((*(_QWORD *)(v9 + 64) + v12) & ~v12)) & ~v16);
  if (v22 <= 8)
    v22 = 8;
  v23 = v22 + v18;
  if (v8 <= v23 + 1)
    v24 = v23 + 1;
  else
    v24 = v8;
  if (v24 <= 8)
    v24 = 8;
  result = *(unsigned __int8 *)(a1 + v24);
  if (result >= 4)
  {
    if (v24 <= 3)
      v26 = v24;
    else
      v26 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23B9FD458(_BYTE *a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  size_t v27;
  unsigned int v28;
  int v29;

  v4 = *(_QWORD *)(a3[4] - 8);
  v5 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6)
    v8 = v7;
  else
    v8 = v7 + 1;
  v9 = v8 + v5;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_DWORD *)(v12 + 80) | v11;
  result = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(result - 8);
  v17 = *(_DWORD *)(v16 + 84);
  v18 = *(_DWORD *)(v16 + 80);
  v19 = (v14 | *(_DWORD *)(v16 + 80)) & 0xF8 | 7u;
  v20 = (v19 + 8) & ~v19;
  v21 = *(_DWORD *)(v10 + 84);
  if (*(_DWORD *)(v12 + 84) > v21)
    v21 = *(_DWORD *)(v12 + 84);
  v22 = v17 - 1;
  if (!v17)
    v22 = 0;
  v23 = *(_QWORD *)(v16 + 64);
  if (!v17)
    ++v23;
  if (!(v22 | v21))
    ++v23;
  v24 = v23 + ((*(_QWORD *)(v12 + 64) + v18 + ((*(_QWORD *)(v10 + 64) + v13) & ~v13)) & ~v18);
  if (v24 <= 8)
    v24 = 8;
  v25 = v24 + v20;
  if (v9 <= v25 + 1)
    v26 = v25 + 1;
  else
    v26 = v9;
  if (v26 <= 8)
    v27 = 8;
  else
    v27 = v26;
  if (a2 > 3)
  {
    v28 = ((a2 - 4) >> (8 * v27)) + 4;
    if (v27 > 3)
      LOBYTE(v28) = 4;
    a1[v27] = v28;
    if (v27 >= 4)
      v29 = 4;
    else
      v29 = v27;
    bzero(a1, v27);
    __asm { BR              X10 }
  }
  a1[v27] = a2;
  return result;
}

uint64_t sub_23B9FD68C()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23B9FD6B4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23B9FD6E8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_23B9FD744(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23B9FD784(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B9FD7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *sub_23B9FD814(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_retain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_23B9FD8CC(_QWORD *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_release();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5StateOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_23B9FD9E4(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

uint64_t *sub_23B9FDA04(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_23B9FDA40(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_23B9FDA40(uint64_t a1, unint64_t a2)
{
  id result;

  if (a2 >> 62 == 1)
    return (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
  return result;
}

void sub_23B9FDA58(uint64_t a1)
{
  sub_23B9FDA64(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

void sub_23B9FDA64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 == 1)

}

uint64_t *sub_23B9FDA7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_23B9FDA40(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_23B9FDA64(v5, v6);
  return a1;
}

uint64_t *sub_23B9FDAC0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_23B9FDA64(v3, v4);
  return a1;
}

uint64_t sub_23B9FDAF8(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 32766);
  v3 = (((*(_QWORD *)(a1 + 8) >> 49) >> 13) | (4
                                                           * ((*(_QWORD *)(a1 + 8) >> 49) & 0x1800 | ((*(_QWORD *)(a1 + 8) & 7) << 8) | HIBYTE(*(_QWORD *)a1) & 0xF0 | *(_QWORD *)a1 & 0xF))) ^ 0x7FFF;
  if (v3 >= 0x7FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_23B9FDB70(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x7FFD)
  {
    *(_QWORD *)result = a2 - 32766;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1FFF | ((-a2 & 0x7FFF) << 13);
      *(_QWORD *)result = (v3 | (v3 << 56)) & 0xF00000000000000FLL;
      *(_QWORD *)(result + 8) = ((v3 >> 8) | (v3 << 49)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23B9FDBDC(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[1] >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 4) + 2;
}

uint64_t sub_23B9FDBF8(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_23B9FDC08(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 2)
  {
    v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF0uLL;
    result[1] = v2;
  }
  else
  {
    *result = 16 * (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

_QWORD *sub_23B9FDC38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BA01728(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23B9FDC44);
}

unint64_t sub_23B9FDC44(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23B9FDC90(unint64_t *a1)
{
  return sub_23B9FDCB0(*a1);
}

unint64_t sub_23B9FDCB0(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *sub_23B9FDCFC(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_23B9FDC44(*a2);
  v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_23B9FDCB0(v6);
  return a1;
}

unint64_t *sub_23B9FDD50(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_23B9FDCB0(v4);
  return a1;
}

uint64_t sub_23B9FDD9C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23B9FDE24(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  if (v6 <= 7 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0 && v7 <= 0x18)
  {
    v11 = AssociatedTypeWitness;
    v12 = ~v6;
    if ((*(_DWORD *)(v5 + 84) & 0x80000000) != 0)
    {
      if ((*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v12))
      {
LABEL_14:
        memcpy(a1, a2, v7);
        return a1;
      }
    }
    else
    {
      v13 = *a2;
      if ((unint64_t)*a2 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      if ((_DWORD)v13 != -1)
        goto LABEL_14;
    }
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v12, ((unint64_t)a2 + v6 + 8) & v12, v11);
    return a1;
  }
  v10 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  swift_retain();
  return a1;
}

uint64_t sub_23B9FDF58(uint64_t *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = ~v4;
  if ((*(_DWORD *)(v3 + 84) & 0x80000000) != 0)
  {
    result = (*(uint64_t (**)(unint64_t))(v3 + 48))(((unint64_t)a1 + v4 + 8) & v5);
    if ((_DWORD)result)
      return result;
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(((unint64_t)a1 + v4 + 8) & v5, AssociatedTypeWitness);
  }
  v6 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  result = (v6 + 1);
  if ((_DWORD)v6 == -1)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(((unint64_t)a1 + v4 + 8) & v5, AssociatedTypeWitness);
  return result;
}

uint64_t *sub_23B9FE01C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    if ((_DWORD)v9 != -1)
      goto LABEL_5;
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7))
    goto LABEL_7;
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

_QWORD *sub_23B9FE110(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(unint64_t, uint64_t, uint64_t);
  int v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ~v7;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    v13 = v12(((unint64_t)a1 + v7 + 8) & v8, *(unsigned int *)(v5 + 84), AssociatedTypeWitness);
    v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL)
      LODWORD(v10) = -1;
    v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL)
      goto LABEL_5;
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t *sub_23B9FE288(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 84) & 0x80000000) == 0)
  {
    v9 = *a2;
    if ((unint64_t)*a2 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    if ((_DWORD)v9 != -1)
      goto LABEL_5;
LABEL_7:
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
    return a1;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)a2 + v6 + 8) & v7))
    goto LABEL_7;
LABEL_5:
  memcpy(a1, a2, ((v6 + 8) & ~v6) + v8);
  return a1;
}

_QWORD *sub_23B9FE37C(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(unint64_t, uint64_t, uint64_t);
  int v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ~v7;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  if ((v6 & 0x80000000) != 0)
  {
    v12 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
    v13 = v12(((unint64_t)a1 + v7 + 8) & v8, *(unsigned int *)(v5 + 84), AssociatedTypeWitness);
    v11 = v12(((unint64_t)a2 + v7 + 8) & v8, v6, AssociatedTypeWitness);
    if (!v13)
    {
LABEL_5:
      if (!v11)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
        return a1;
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v7 + 8) & v8, AssociatedTypeWitness);
      goto LABEL_9;
    }
  }
  else
  {
    v10 = *a2;
    if (*a2 >= 0xFFFFFFFFuLL)
      LODWORD(v10) = -1;
    v11 = v10 + 1;
    if (*a1 > 0xFFFFFFFEuLL)
      goto LABEL_5;
  }
  if (!v11)
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v7 + 8) & v8, ((unint64_t)a2 + v7 + 8) & v8, AssociatedTypeWitness);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_23B9FE4F4(_QWORD *a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 - 1 >= a2)
    goto LABEL_24;
  v8 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 > 3)
    goto LABEL_7;
  v12 = (((1 << v9) + a2 - v6) >> v9) + 1;
  if (HIWORD(v12))
  {
    v10 = *(_DWORD *)((char *)a1 + v8);
    if (v10)
      goto LABEL_15;
LABEL_24:
    if ((v5 & 0x80000000) != 0)
    {
      v16 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
    }
    else
    {
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      v16 = v15 + 1;
    }
    if (v16 >= 2)
      return v16 - 1;
    else
      return 0;
  }
  if (v12 > 0xFF)
  {
    v10 = *(unsigned __int16 *)((char *)a1 + v8);
    if (*(_WORD *)((char *)a1 + v8))
      goto LABEL_15;
    goto LABEL_24;
  }
  if (v12 < 2)
    goto LABEL_24;
LABEL_7:
  v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((_BYTE *)a1 + v8))
    goto LABEL_24;
LABEL_15:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v14 = v8;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  return (v13 + v6);
}

void sub_23B9FE688(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 1;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = ((v9 + 8) & ~v9) + *(_QWORD *)(v6 + 64);
  if (v7 - 1 >= a3)
  {
    v11 = 0;
  }
  else
  {
    v11 = 1u;
    if (v10 <= 3)
    {
      v12 = (((v11 << (8 * v10)) + a3 - v7) >> (8 * v10)) + 1;
      if (HIWORD(v12))
      {
        v11 = 4u;
        if (v8 >= a2)
          goto LABEL_21;
      }
      else
      {
        if (v12 >= 0x100)
          v11 = 2;
        else
          v11 = v12 > 1;
        if (v8 >= a2)
LABEL_21:
          __asm { BR              X14 }
      }
LABEL_14:
      v13 = a2 - v7;
      if (v10 < 4)
      {
        if ((_DWORD)v10)
        {
          v14 = v13 & ~(-1 << (8 * v10));
          bzero(a1, v10);
          if ((_DWORD)v10 == 3)
          {
            *(_WORD *)a1 = v14;
            a1[2] = BYTE2(v14);
          }
          else if ((_DWORD)v10 == 2)
          {
            *(_WORD *)a1 = v14;
          }
          else
          {
            *a1 = v14;
          }
        }
      }
      else
      {
        bzero(a1, ((v9 + 8) & ~v9) + *(_QWORD *)(v6 + 64));
        *(_DWORD *)a1 = v13;
      }
      __asm { BR              X10 }
    }
  }
  if (v8 >= a2)
    goto LABEL_21;
  goto LABEL_14;
}

void sub_23B9FE8B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23B9FE91CLL);
}

void sub_23B9FE8BC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23B9FE91CLL);
}

void sub_23B9FE8C4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23B9FE91CLL);
}

void sub_23B9FE8F0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x23B9FE91CLL);
}

void sub_23B9FE900()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x23B9FE91CLL);
}

void sub_23B9FE908()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x23B9FE91CLL);
}

uint64_t sub_23B9FE934(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if ((*(_DWORD *)(v2 + 84) & 0x80000000) != 0)
    return (*(uint64_t (**)(unint64_t))(v2 + 48))(((unint64_t)a1
                                                                  + *(unsigned __int8 *)(v2 + 80)
                                                                  + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  return (v3 + 1);
}

uint64_t sub_23B9FE9B8(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  int v11;
  uint64_t v12;

  result = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(result - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = ~v8;
  if (v7 >= a2)
  {
    if ((_DWORD)a2)
    {
      if ((v6 & 0x80000000) != 0)
      {
        return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 56))(((unint64_t)a1 + v8 + 8) & v9, a2);
      }
      else
      {
        if ((a2 & 0x80000000) != 0)
          v12 = a2 ^ 0x80000000;
        else
          v12 = (a2 - 1);
        *a1 = v12;
      }
    }
  }
  else
  {
    v10 = (((_DWORD)v8 + 8) & v9) + *(_DWORD *)(v5 + 64);
    if ((_DWORD)v10)
    {
      if (v10 <= 3)
        v11 = ((v8 + 8) & v9) + *(_DWORD *)(v5 + 64);
      else
        v11 = 4;
      bzero(a1, v10);
      __asm { BR              X10 }
    }
  }
  return result;
}

uint64_t sub_23B9FEAF4(int a1, id a2, unint64_t a3)
{
  id v3;
  uint64_t result;

  if (a3 >> 62)
  {
    if (a3 >> 62 != 1)
      return result;
    v3 = a2;
  }
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B9FEB50(uint64_t a1)
{
  return sub_23B9F49F0(*(_QWORD *)a1, *(id *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *sub_23B9FEB60(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_23B9FEAF4(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *sub_23B9FEBB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;

  v3 = *a2;
  v4 = (void *)a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_23B9FEAF4(*a2, v4, v5);
  v7 = *a1;
  v8 = (void *)a1[1];
  v9 = a1[2];
  *a1 = v3;
  a1[1] = (uint64_t)v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_23B9F49F0(v7, v8, v9);
  return a1;
}

_QWORD *sub_23B9FEC14(_QWORD *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  void *v5;
  __int128 v6;

  v3 = *a1;
  v5 = (void *)a1[1];
  v4 = a1[2];
  v6 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v6;
  sub_23B9F49F0(v3, v5, v4);
  return a1;
}

uint64_t sub_23B9FEC50(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 16382);
  v3 = (((*(_QWORD *)(a1 + 16) >> 50) >> 12) | (4
                                                            * ((*(_QWORD *)(a1 + 16) >> 50) & 0xC00 | ((*(_QWORD *)(a1 + 16) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_23B9FECCC(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 16382;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
      *(_QWORD *)(result + 24) = 0;
    }
  }
  return result;
}

uint64_t sub_23B9FED40(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[2] >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

uint64_t sub_23B9FED60(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_23B9FED70(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 2)
  {
    v2 = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *(_QWORD *)result &= 0xFFFFFFFFFFFFFF8uLL;
    *(_QWORD *)(result + 16) = v2;
  }
  else
  {
    *(_QWORD *)result = 8 * (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_23BB8EFB0;
    *(_QWORD *)(result + 24) = 0;
  }
  return result;
}

uint64_t sub_23B9FEDB4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v9;
  char *v10;
  uint64_t v11;
  void *v12;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = swift_checkMetadataState();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = sub_23BB8ACA0();
      if (v5 > 0x3F)
      {
        return v4;
      }
      else
      {
        swift_getTupleTypeLayout3();
        v10 = &v9;
        swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_256A61420);
        v6 = sub_23BB8B27C();
        v0 = v6;
        if (v7 <= 0x3F)
        {
          v11 = *(_QWORD *)(v6 - 8) + 64;
          v12 = &unk_23BB8E858;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v0;
}

id *sub_23B9FEEF4(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  char *v22;
  id *v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  void (*v27)(id *, id *, uint64_t);
  unint64_t v28;
  unint64_t v29;
  void *v30;
  const void *v31;
  unsigned int v32;
  uint64_t v33;
  id v34;
  id v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  id v40;
  id v41;
  char v42;
  unsigned int v43;
  size_t __n;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v48 = a3[3];
  v6 = *(_QWORD *)(v48 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v46 = *(_QWORD *)(v5 + 64) + v7;
  v49 = a3[4];
  v8 = *(_QWORD *)(v49 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v47 = *(_QWORD *)(v6 + 64);
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  __n = v10;
  v11 = v10
      + ((v47 + v9 + (v46 & ~(unint64_t)v7)) & ~(unint64_t)v9);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v13 + 64);
  if (v14 + 1 > v11)
    v15 = v14 + 1;
  else
    v15 = v11;
  if (v15 <= 8)
    v16 = 8;
  else
    v16 = v15;
  if (v16 > 3)
    goto LABEL_17;
  v17 = ((1 << (8 * v16)) + 1) >> (8 * v16);
  v18 = 2;
  if (v17 > 0xFFFC)
    v18 = 4;
  if (v17 <= 0xFC)
LABEL_17:
    v18 = 1;
  v19 = v18 + v16;
  v20 = *(_DWORD *)(v5 + 80) | v7 | v9 | *(_DWORD *)(v13 + 80);
  if (v19 <= 0x18 && (v20 & 0x1000F8) == 0)
  {
    if (v16 <= 3)
    {
      v24 = ((1 << (8 * v16)) + 1) >> (8 * v16);
      if (v24 > 0xFFFC)
      {
        v25 = *(_DWORD *)((char *)a2 + v16);
        if (v25 < 3)
        {
LABEL_35:
          if (v25 != 2)
          {
            if (v25 != 1)
            {
              v27 = *(void (**)(id *, id *, uint64_t))(v5 + 16);
              v23 = a1;
              v27(a1, a2, v4);
              v28 = ((unint64_t)a1 + v46) & ~(unint64_t)v7;
              v29 = ((unint64_t)a2 + v46) & ~(unint64_t)v7;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v28, v29, v48);
              v30 = (void *)((v28 + v47 + v9) & ~(unint64_t)v9);
              v31 = (const void *)((v29 + v47 + v9) & ~(unint64_t)v9);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v31, 1, v49))
              {
                memcpy(v30, v31, __n);
                if (v16 > 3)
                  goto LABEL_53;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v30, v31, v49);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v30, 0, 1, v49);
                if (v16 > 3)
                {
LABEL_53:
                  *((_BYTE *)a1 + v16) = 0;
                  return v23;
                }
              }
              v37 = ((1 << (8 * v16)) + 1) >> (8 * v16);
              if (v37 > 0xFFFC)
              {
                *(_DWORD *)((char *)a1 + v16) = 0;
                return v23;
              }
              if (v37 > 0xFC)
              {
                *(_WORD *)((char *)a1 + v16) = 0;
                return v23;
              }
              goto LABEL_53;
            }
            v32 = *((unsigned __int8 *)a2 + v14);
            if (v32 >= 2)
            {
              if (v14 <= 3)
                v33 = v14;
              else
                v33 = 4;
              __asm { BR              X13 }
            }
            v23 = a1;
            v39 = v14;
            if (v32 == 1)
            {
              v40 = *a2;
              v41 = *a2;
              *a1 = v40;
              v42 = 1;
            }
            else
            {
              (*(void (**)(id *, id *, uint64_t))(v13 + 16))(a1, a2, AssociatedTypeWitness);
              v42 = 0;
            }
            *((_BYTE *)a1 + v39) = v42;
            if (v16 > 3)
            {
LABEL_62:
              *((_BYTE *)a1 + v16) = 1;
              return v23;
            }
            v38 = 1;
            v43 = ((1 << (8 * v16)) + 1) >> (8 * v16);
            if (v43 <= 0xFFFC)
            {
              if (v43 > 0xFC)
              {
                *(_WORD *)((char *)a1 + v16) = 1;
                return v23;
              }
              goto LABEL_62;
            }
LABEL_66:
            *(_DWORD *)((char *)v23 + v16) = v38;
            return v23;
          }
          v34 = *a2;
          v35 = *a2;
          v23 = a1;
          *a1 = v34;
          if (v16 <= 3)
          {
            v36 = ((1 << (8 * v16)) + 1) >> (8 * v16);
            if (v36 > 0xFFFC)
            {
              v38 = 2;
              goto LABEL_66;
            }
            if (v36 > 0xFC)
            {
              *(_WORD *)((char *)a1 + v16) = 2;
              return v23;
            }
          }
          *((_BYTE *)a1 + v16) = 2;
          return v23;
        }
LABEL_31:
        if (v16 <= 3)
          v26 = v16;
        else
          v26 = 4;
        __asm { BR              X13 }
      }
      if (v24 > 0xFC)
      {
        v25 = *(unsigned __int16 *)((char *)a2 + v16);
        if (v25 < 3)
          goto LABEL_35;
        goto LABEL_31;
      }
    }
    v25 = *((unsigned __int8 *)a2 + v16);
    if (v25 < 3)
      goto LABEL_35;
    goto LABEL_31;
  }
  v22 = (char *)*a2;
  *a1 = *a2;
  v23 = (id *)&v22[((v20 & 0xF8 | 7u) + 16) & ~(unint64_t)(v20 & 0xF8 | 7u)];
  swift_retain();
  return v23;
}

void sub_23B9FF428(id *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = a2[2];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v27 = a2[3];
  v6 = *(_QWORD *)(v27 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v5 + v7;
  v9 = *(_QWORD *)(v6 + 64);
  v28 = a2[4];
  v10 = *(_QWORD *)(v28 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v9 + v11 + ((v5 + v7) & ~v7)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = 8;
  if (v17 <= 8)
    v17 = 8;
  if (v17 + 1 > v14)
    v19 = v17 + 1;
  else
    v19 = v14;
  if (v19 > 8)
    v18 = v19;
  if (v18 > 3)
    goto LABEL_14;
  v20 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v20 <= 0xFFFC)
  {
    if (v20 > 0xFC)
    {
      v21 = *(unsigned __int16 *)((char *)a1 + v18);
      if (v21 < 3)
        goto LABEL_23;
      goto LABEL_19;
    }
LABEL_14:
    v21 = *((unsigned __int8 *)a1 + v18);
    if (v21 < 3)
      goto LABEL_23;
LABEL_19:
    if (v18 <= 3)
      v22 = v18;
    else
      v22 = 4;
    __asm { BR              X15 }
  }
  v21 = *(_DWORD *)((char *)a1 + v18);
  if (v21 >= 3)
    goto LABEL_19;
LABEL_23:
  if (v21 == 2)
    goto LABEL_34;
  if (v21 == 1)
  {
    v25 = *((unsigned __int8 *)a1 + v17);
    if (v25 >= 2)
    {
      if (v17 <= 3)
        v26 = v17;
      else
        v26 = 4;
      __asm { BR              X14 }
    }
    if (v25 != 1)
    {
      (*(void (**)(id *, uint64_t))(v16 + 8))(a1, AssociatedTypeWitness);
      return;
    }
LABEL_34:

    return;
  }
  (*(void (**)(id *, uint64_t))(v4 + 8))(a1, v3);
  v23 = ((unint64_t)a1 + v8) & ~v7;
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v23, v27);
  v24 = (v23 + v9 + v11) & ~v11;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v24, 1, v28))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v24, v28);
}

_QWORD *sub_23B9FF720(_QWORD *a1, void **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  void (*v23)(_QWORD *, void **, uint64_t);
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  unsigned int v29;
  uint64_t v30;
  void *v31;
  id v32;
  unsigned int v33;
  char v34;
  unsigned int v35;
  int v36;
  void *v37;
  id v38;
  unsigned int v39;
  size_t __n;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v43 = a3[3];
  v7 = *(_QWORD *)(v43 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v44 = a3[4];
  v10 = *(_QWORD *)(v44 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v42 = *(_QWORD *)(v7 + 64);
  v12 = (v42 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v16 + 64) <= 8uLL)
    v17 = 8;
  else
    v17 = *(_QWORD *)(v16 + 64);
  if (v17 + 1 > v14)
    v18 = v17 + 1;
  else
    v18 = v14;
  if (v18 <= 8)
    v19 = 8;
  else
    v19 = v18;
  if (v19 > 3)
    goto LABEL_16;
  v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v20 <= 0xFFFC)
  {
    if (v20 > 0xFC)
    {
      v21 = *(unsigned __int16 *)((char *)a2 + v19);
      if (v21 < 3)
        goto LABEL_25;
      goto LABEL_21;
    }
LABEL_16:
    v21 = *((unsigned __int8 *)a2 + v19);
    if (v21 < 3)
      goto LABEL_25;
LABEL_21:
    if (v19 <= 3)
      v22 = v19;
    else
      v22 = 4;
    __asm { BR              X13 }
  }
  v21 = *(_DWORD *)((char *)a2 + v19);
  if (v21 >= 3)
    goto LABEL_21;
LABEL_25:
  if (v21 != 2)
  {
    if (v21 != 1)
    {
      v23 = *(void (**)(_QWORD *, void **, uint64_t))(v5 + 16);
      v24 = a1;
      v23(a1, a2, v4);
      v25 = ((unint64_t)a1 + v9) & ~v8;
      v26 = ((unint64_t)a2 + v9) & ~v8;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v25, v26, v43);
      v27 = (void *)((v25 + v42 + v11) & ~v11);
      v28 = (const void *)((v26 + v42 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v44))
      {
        memcpy(v27, v28, __n);
        if (v19 > 3)
          goto LABEL_44;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v27, v28, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v44);
        if (v19 > 3)
        {
LABEL_44:
          *((_BYTE *)a1 + v19) = 0;
          return v24;
        }
      }
      v35 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v35 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      if (v35 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      goto LABEL_44;
    }
    v29 = *((unsigned __int8 *)a2 + v17);
    if (v29 >= 2)
    {
      if (v17 <= 3)
        v30 = v17;
      else
        v30 = 4;
      __asm { BR              X13 }
    }
    v24 = a1;
    if (v29 == 1)
    {
      v37 = *a2;
      v38 = v37;
      *a1 = v37;
      v34 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, void **, uint64_t))(v16 + 16))(a1, a2, AssociatedTypeWitness);
      v34 = 0;
    }
    *((_BYTE *)a1 + v17) = v34;
    if (v19 > 3)
    {
LABEL_51:
      *((_BYTE *)a1 + v19) = 1;
      return v24;
    }
    v36 = 1;
    v39 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v39 <= 0xFFFC)
    {
      if (v39 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 1;
        return v24;
      }
      goto LABEL_51;
    }
LABEL_55:
    *(_DWORD *)((char *)v24 + v19) = v36;
    return v24;
  }
  v31 = *a2;
  v32 = v31;
  v24 = a1;
  *a1 = v31;
  if (v19 <= 3)
  {
    v33 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v33 > 0xFFFC)
    {
      v36 = 2;
      goto LABEL_55;
    }
    if (v33 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v19) = 2;
      return v24;
    }
  }
  *((_BYTE *)a1 + v19) = 2;
  return v24;
}

void sub_23B9FFBA0()
{
  unsigned __int16 *v0;
  unsigned int v1;

  if (v1 >= 4)
  {
    if ((*v0 | (*((unsigned __int8 *)v0 + 2) << 16)) != 0xFFFFFFFF)
      JUMPOUT(0x23B9FFA30);
    JUMPOUT(0x23B9FFB1CLL);
  }
  JUMPOUT(0x23B9FFB04);
}

id *sub_23B9FFBD4(id *a1, void **a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  const void *v30;
  unsigned int v31;
  uint64_t v32;
  void *v33;
  id v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  void *v38;
  id v39;
  char v40;
  unsigned int v41;
  size_t __n;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (a1 == a2)
    return a1;
  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v50 = a3[3];
  v8 = *(_QWORD *)(v50 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v48 = v7 + v9;
  v51 = a3[4];
  v10 = *(_QWORD *)(v51 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v49 = *(_QWORD *)(v8 + 64);
  v12 = (v49 + v11 + ((v7 + v9) & ~v9)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v45 = AssociatedTypeWitness;
  if (*(_QWORD *)(v44 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v44 + 64);
  if (v16 + 1 > v14)
    v17 = v16 + 1;
  else
    v17 = v14;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  if (v18 > 3)
    goto LABEL_17;
  v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    v20 = *(_DWORD *)((char *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
    goto LABEL_22;
  }
  if (v19 <= 0xFC)
  {
LABEL_17:
    v20 = *((unsigned __int8 *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
LABEL_22:
    if (v18 <= 3)
      v21 = v18;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  v20 = *(unsigned __int16 *)((char *)a1 + v18);
  if (v20 >= 3)
    goto LABEL_22;
LABEL_26:
  v46 = ~v9;
  v47 = ~v11;
  if (v20 == 2)
    goto LABEL_38;
  if (v20 != 1)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)a1 + v48) & v46, v50);
    v22 = ((((unint64_t)a1 + v48) & v46) + v49 + v11) & v47;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v22, 1, v51))
    {
      if (v18 > 3)
        goto LABEL_44;
      goto LABEL_42;
    }
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v22, v51);
    goto LABEL_41;
  }
  v23 = *((unsigned __int8 *)a1 + v16);
  if (v23 >= 2)
  {
    if (v16 <= 3)
      v24 = v16;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
LABEL_38:

    if (v18 > 3)
      goto LABEL_44;
    goto LABEL_42;
  }
  (*(void (**)(id *, uint64_t))(v44 + 8))(a1, AssociatedTypeWitness);
LABEL_41:
  if (v18 > 3)
    goto LABEL_44;
LABEL_42:
  v25 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v25 > 0xFFFC)
  {
    v26 = *(_DWORD *)((char *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v25 <= 0xFC)
  {
LABEL_44:
    v26 = *((unsigned __int8 *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
LABEL_49:
    if (v18 <= 3)
      v27 = v18;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  v26 = *(unsigned __int16 *)((char *)a2 + v18);
  if (v26 >= 3)
    goto LABEL_49;
LABEL_53:
  if (v26 != 2)
  {
    if (v26 != 1)
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v28 = ((unint64_t)a2 + v48) & v46;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v48) & v46, v28, v50);
      v29 = (void *)(((((unint64_t)a1 + v48) & v46) + v49 + v11) & v47);
      v30 = (const void *)((v28 + v49 + v11) & v47);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v30, 1, v51))
      {
        memcpy(v29, v30, __n);
        if (v18 > 3)
          goto LABEL_70;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v29, v30, v51);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v51);
        if (v18 > 3)
        {
LABEL_70:
          *((_BYTE *)a1 + v18) = 0;
          return a1;
        }
      }
      v36 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v36 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v36 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      goto LABEL_70;
    }
    v31 = *((unsigned __int8 *)a2 + v16);
    if (v31 >= 2)
    {
      if (v16 <= 3)
        v32 = v16;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
    {
      v38 = *a2;
      v39 = v38;
      *a1 = v38;
      v40 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v44 + 16))(a1, a2, v45);
      v40 = 0;
    }
    *((_BYTE *)a1 + v16) = v40;
    if (v18 > 3)
    {
LABEL_79:
      *((_BYTE *)a1 + v18) = 1;
      return a1;
    }
    v37 = 1;
    v41 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v41 <= 0xFFFC)
    {
      if (v41 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_79;
    }
LABEL_83:
    *(_DWORD *)((char *)a1 + v18) = v37;
    return a1;
  }
  v33 = *a2;
  v34 = v33;
  *a1 = v33;
  if (v18 <= 3)
  {
    v35 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v35 > 0xFFFC)
    {
      v37 = 2;
      goto LABEL_83;
    }
    if (v35 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v18) = 2;
      return a1;
    }
  }
  *((_BYTE *)a1 + v18) = 2;
  return a1;
}

_QWORD *sub_23BA00280(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  const void *v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  char v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  size_t __n;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v39 = a3[3];
  v7 = *(_QWORD *)(v39 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  v40 = a3[4];
  v10 = *(_QWORD *)(v40 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v38 = *(_QWORD *)(v7 + 64);
  v12 = (v38 + v11 + ((v6 + v8) & ~v8)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v16 + 64) <= 8uLL)
    v17 = 8;
  else
    v17 = *(_QWORD *)(v16 + 64);
  if (v17 + 1 > v14)
    v18 = v17 + 1;
  else
    v18 = v14;
  if (v18 <= 8)
    v19 = 8;
  else
    v19 = v18;
  if (v19 > 3)
    goto LABEL_16;
  v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  if (v20 <= 0xFFFC)
  {
    if (v20 > 0xFC)
    {
      v21 = *(unsigned __int16 *)((char *)a2 + v19);
      if (v21 < 3)
        goto LABEL_25;
      goto LABEL_21;
    }
LABEL_16:
    v21 = *((unsigned __int8 *)a2 + v19);
    if (v21 < 3)
      goto LABEL_25;
LABEL_21:
    if (v19 <= 3)
      v22 = v19;
    else
      v22 = 4;
    __asm { BR              X13 }
  }
  v21 = *(_DWORD *)((char *)a2 + v19);
  if (v21 >= 3)
    goto LABEL_21;
LABEL_25:
  if (v21 != 2)
  {
    if (v21 != 1)
    {
      v23 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32);
      v24 = a1;
      v23(a1, a2, v4);
      v25 = ((unint64_t)a1 + v9) & ~v8;
      v26 = ((unint64_t)a2 + v9) & ~v8;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v25, v26, v39);
      v27 = (void *)((v25 + v38 + v11) & ~v11);
      v28 = (const void *)((v26 + v38 + v11) & ~v11);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v28, 1, v40))
      {
        memcpy(v27, v28, __n);
        if (v19 > 3)
          goto LABEL_44;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v27, v28, v40);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v40);
        if (v19 > 3)
        {
LABEL_44:
          *((_BYTE *)a1 + v19) = 0;
          return v24;
        }
      }
      v33 = ((1 << (8 * v19)) + 1) >> (8 * v19);
      if (v33 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      if (v33 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 0;
        return v24;
      }
      goto LABEL_44;
    }
    v29 = *((unsigned __int8 *)a2 + v17);
    if (v29 >= 2)
    {
      if (v17 <= 3)
        v30 = v17;
      else
        v30 = 4;
      __asm { BR              X13 }
    }
    v24 = a1;
    if (v29 == 1)
    {
      *a1 = *a2;
      v32 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v16 + 32))(a1, a2, AssociatedTypeWitness);
      v32 = 0;
    }
    *((_BYTE *)a1 + v17) = v32;
    if (v19 > 3)
    {
LABEL_51:
      *((_BYTE *)a1 + v19) = 1;
      return v24;
    }
    v34 = 1;
    v35 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v35 <= 0xFFFC)
    {
      if (v35 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v19) = 1;
        return v24;
      }
      goto LABEL_51;
    }
LABEL_55:
    *(_DWORD *)((char *)v24 + v19) = v34;
    return v24;
  }
  v24 = a1;
  *a1 = *a2;
  if (v19 <= 3)
  {
    v31 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    if (v31 > 0xFFFC)
    {
      v34 = 2;
      goto LABEL_55;
    }
    if (v31 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v19) = 2;
      return v24;
    }
  }
  *((_BYTE *)a1 + v19) = 2;
  return v24;
}

void sub_23BA006F0()
{
  unsigned __int16 *v0;
  unsigned int v1;

  if (v1 >= 4)
  {
    if ((*v0 | (*((unsigned __int8 *)v0 + 2) << 16)) != 0xFFFFFFFF)
      JUMPOUT(0x23BA00588);
    JUMPOUT(0x23BA00674);
  }
  JUMPOUT(0x23BA0065CLL);
}

id *sub_23BA00724(id *a1, id *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  const void *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  char v36;
  unsigned int v37;
  size_t __n;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (a1 == a2)
    return a1;
  v5 = a3[2];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v46 = a3[3];
  v8 = *(_QWORD *)(v46 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v44 = v7 + v9;
  v47 = a3[4];
  v10 = *(_QWORD *)(v47 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v45 = *(_QWORD *)(v8 + 64);
  v12 = (v45 + v11 + ((v7 + v9) & ~v9)) & ~v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  __n = v13;
  v14 = v13 + v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v41 = AssociatedTypeWitness;
  if (*(_QWORD *)(v40 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v40 + 64);
  if (v16 + 1 > v14)
    v17 = v16 + 1;
  else
    v17 = v14;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  if (v18 > 3)
    goto LABEL_17;
  v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v19 > 0xFFFC)
  {
    v20 = *(_DWORD *)((char *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
    goto LABEL_22;
  }
  if (v19 <= 0xFC)
  {
LABEL_17:
    v20 = *((unsigned __int8 *)a1 + v18);
    if (v20 < 3)
      goto LABEL_26;
LABEL_22:
    if (v18 <= 3)
      v21 = v18;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  v20 = *(unsigned __int16 *)((char *)a1 + v18);
  if (v20 >= 3)
    goto LABEL_22;
LABEL_26:
  v42 = ~v9;
  v43 = ~v11;
  if (v20 == 2)
    goto LABEL_38;
  if (v20 != 1)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(a1, v5);
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)a1 + v44) & v42, v46);
    v22 = ((((unint64_t)a1 + v44) & v42) + v45 + v11) & v43;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v22, 1, v47))
    {
      if (v18 > 3)
        goto LABEL_44;
      goto LABEL_42;
    }
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v22, v47);
    goto LABEL_41;
  }
  v23 = *((unsigned __int8 *)a1 + v16);
  if (v23 >= 2)
  {
    if (v16 <= 3)
      v24 = v16;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
LABEL_38:

    if (v18 > 3)
      goto LABEL_44;
    goto LABEL_42;
  }
  (*(void (**)(id *, uint64_t))(v40 + 8))(a1, AssociatedTypeWitness);
LABEL_41:
  if (v18 > 3)
    goto LABEL_44;
LABEL_42:
  v25 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  if (v25 > 0xFFFC)
  {
    v26 = *(_DWORD *)((char *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
    goto LABEL_49;
  }
  if (v25 <= 0xFC)
  {
LABEL_44:
    v26 = *((unsigned __int8 *)a2 + v18);
    if (v26 < 3)
      goto LABEL_53;
LABEL_49:
    if (v18 <= 3)
      v27 = v18;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  v26 = *(unsigned __int16 *)((char *)a2 + v18);
  if (v26 >= 3)
    goto LABEL_49;
LABEL_53:
  if (v26 != 2)
  {
    if (v26 != 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v28 = ((unint64_t)a2 + v44) & v42;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)a1 + v44) & v42, v28, v46);
      v29 = (void *)(((((unint64_t)a1 + v44) & v42) + v45 + v11) & v43);
      v30 = (const void *)((v28 + v45 + v11) & v43);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v30, 1, v47))
      {
        memcpy(v29, v30, __n);
        if (v18 > 3)
          goto LABEL_70;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v29, v30, v47);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v47);
        if (v18 > 3)
        {
LABEL_70:
          *((_BYTE *)a1 + v18) = 0;
          return a1;
        }
      }
      v34 = ((1 << (8 * v18)) + 1) >> (8 * v18);
      if (v34 > 0xFFFC)
      {
        *(_DWORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      if (v34 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 0;
        return a1;
      }
      goto LABEL_70;
    }
    v31 = *((unsigned __int8 *)a2 + v16);
    if (v31 >= 2)
    {
      if (v16 <= 3)
        v32 = v16;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
    {
      *a1 = *a2;
      v36 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v40 + 32))(a1, a2, v41);
      v36 = 0;
    }
    *((_BYTE *)a1 + v16) = v36;
    if (v18 > 3)
    {
LABEL_79:
      *((_BYTE *)a1 + v18) = 1;
      return a1;
    }
    v35 = 1;
    v37 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v37 <= 0xFFFC)
    {
      if (v37 > 0xFC)
      {
        *(_WORD *)((char *)a1 + v18) = 1;
        return a1;
      }
      goto LABEL_79;
    }
LABEL_83:
    *(_DWORD *)((char *)a1 + v18) = v35;
    return a1;
  }
  *a1 = *a2;
  if (v18 <= 3)
  {
    v33 = ((1 << (8 * v18)) + 1) >> (8 * v18);
    if (v33 > 0xFFFC)
    {
      v35 = 2;
      goto LABEL_83;
    }
    if (v33 > 0xFC)
    {
      *(_WORD *)((char *)a1 + v18) = 2;
      return a1;
    }
  }
  *((_BYTE *)a1 + v18) = 2;
  return a1;
}

uint64_t sub_23BA00DC0(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  int v28;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;

  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  v11 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 <= 8)
    v11 = 8;
  if (v11 + 1 > v10)
    v12 = v11 + 1;
  else
    v12 = v10;
  if (v12 <= 8)
    v12 = 8;
  if (v12 > 3)
  {
    v13 = 4;
LABEL_15:
    v15 = 8;
    goto LABEL_16;
  }
  v14 = ((1 << (8 * v12)) + 1) >> (8 * v12);
  if (v14 > 0xFFFC)
    goto LABEL_19;
  v13 = v14 + 3;
  if (v14 <= 0xFC)
    goto LABEL_15;
  v15 = 16;
LABEL_16:
  v16 = (1 << v15) - v13;
  if ((v16 & 0x80000000) == 0)
  {
    if (v12 > 3)
      goto LABEL_23;
LABEL_20:
    v17 = ((1 << (8 * v12)) + 1) >> (8 * v12);
    v18 = 2;
    if (v17 > 0xFFFC)
      v18 = 4;
    if (v17 > 0xFC)
      goto LABEL_24;
    goto LABEL_23;
  }
LABEL_19:
  v16 = 0x7FFFFFFF;
  if (v12 <= 3)
    goto LABEL_20;
LABEL_23:
  v18 = 1;
LABEL_24:
  if (!a2)
    return 0;
  if (a2 <= v16)
    goto LABEL_42;
  v19 = v18 + v12;
  v20 = 8 * v19;
  if (v19 <= 3)
  {
    v22 = ((a2 - v16 + ~(-1 << v20)) >> v20) + 1;
    if (HIWORD(v22))
    {
      v21 = *(_DWORD *)(a1 + v19);
      if (!v21)
        goto LABEL_42;
      goto LABEL_35;
    }
    if (v22 > 0xFF)
    {
      v21 = *(unsigned __int16 *)(a1 + v19);
      if (!*(_WORD *)(a1 + v19))
        goto LABEL_42;
      goto LABEL_35;
    }
    if (v22 < 2)
    {
LABEL_42:
      if (v16)
      {
        if (v12 <= 3)
        {
          v30 = ((1 << (8 * v12)) + 1) >> (8 * v12);
          if (v30 > 0xFFFC)
          {
            v25 = *(_DWORD *)(a1 + v12);
            v26 = ~v25;
LABEL_52:
            v33 = 0x7FFFFFFF;
LABEL_53:
            if (v33 > v26)
              return -v25;
            else
              return 0;
          }
          v28 = v30 + 3;
          if (v30 > 0xFC)
          {
            v32 = *(unsigned __int16 *)(a1 + v12);
            v25 = v32 | 0xFFFF0000;
            v26 = v32 ^ 0xFFFF;
            v27 = 16;
          }
          else
          {
            v31 = *(unsigned __int8 *)(a1 + v12);
            v25 = v31 | 0xFFFFFF00;
            v26 = v31 ^ 0xFF;
            v27 = 8;
          }
        }
        else
        {
          v24 = *(unsigned __int8 *)(a1 + v12);
          v25 = v24 | 0xFFFFFF00;
          v26 = v24 ^ 0xFF;
          v27 = 8;
          v28 = 4;
        }
        v33 = (1 << v27) - v28;
        if ((v33 & 0x80000000) == 0)
          goto LABEL_53;
        goto LABEL_52;
      }
      return 0;
    }
  }
  v21 = *(unsigned __int8 *)(a1 + v19);
  if (!*(_BYTE *)(a1 + v19))
    goto LABEL_42;
LABEL_35:
  v23 = (v21 - 1) << v20;
  if (v19 > 3)
    v23 = 0;
  if ((_DWORD)v19)
  {
    if (v19 > 3)
      LODWORD(v19) = 4;
    __asm { BR              X12 }
  }
  return v16 + v23 + 1;
}

void sub_23BA0109C(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  size_t v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;

  v7 = *(_QWORD *)(a4[4] - 8);
  v8 = (((*(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a4[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64)
      + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  if (v9)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = v11 + v8;
  v13 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v13 <= 8)
    v13 = 8;
  if (v13 + 1 > v12)
    v14 = v13 + 1;
  else
    v14 = v12;
  if (v14 <= 8)
    v14 = 8;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v19 = ((1 << v15) + 1) >> v15;
    if (v19 > 0xFFFC)
      goto LABEL_20;
    v16 = v19 + 3;
    if (v19 > 0xFC)
    {
      v17 = 16;
LABEL_14:
      v18 = (1 << v17) - v16;
      if ((v18 & 0x80000000) == 0)
      {
        if (v14 > 3)
          goto LABEL_24;
LABEL_21:
        v20 = ((1 << v15) + 1) >> v15;
        v21 = 2;
        if (v20 > 0xFFFC)
          v21 = 4;
        if (v20 > 0xFC)
        {
LABEL_25:
          v22 = v21 + v14;
          if (a3 <= v18)
          {
            v23 = 0;
          }
          else if (v22 <= 3)
          {
            v25 = ((a3 - v18 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
            if (HIWORD(v25))
            {
              v23 = 4u;
            }
            else if (v25 >= 0x100)
            {
              v23 = 2;
            }
            else
            {
              v23 = v25 > 1;
            }
          }
          else
          {
            v23 = 1u;
          }
          if (v18 < a2)
          {
            v24 = ~v18 + a2;
            if (v22 < 4)
            {
              if ((_DWORD)v22)
              {
                v26 = v24 & ~(-1 << (8 * v22));
                bzero(a1, v22);
                if ((_DWORD)v22 == 3)
                {
                  *(_WORD *)a1 = v26;
                  a1[2] = BYTE2(v26);
                }
                else if ((_DWORD)v22 == 2)
                {
                  *(_WORD *)a1 = v26;
                }
                else
                {
                  *a1 = v26;
                }
              }
            }
            else
            {
              bzero(a1, v22);
              *(_DWORD *)a1 = v24;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_24:
        v21 = 1;
        goto LABEL_25;
      }
LABEL_20:
      v18 = 0x7FFFFFFF;
      if (v14 > 3)
        goto LABEL_24;
      goto LABEL_21;
    }
  }
  else
  {
    v16 = 4;
  }
  v17 = 8;
  goto LABEL_14;
}

uint64_t sub_23BA01398(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  unsigned int v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a2[4] - 8);
  v4 = (((*(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_DWORD *)(v3 + 84);
  v6 = *(_QWORD *)(v3 + 64);
  if (v5)
    v7 = v6;
  else
    v7 = v6 + 1;
  v8 = v7 + v4;
  v9 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= 8)
    v9 = 8;
  if (v9 + 1 > v8)
    v10 = v9 + 1;
  else
    v10 = v8;
  if (v10 <= 8)
    v10 = 8;
  if (v10 > 3)
    goto LABEL_12;
  v12 = ((1 << (8 * v10)) + 1) >> (8 * v10);
  if (v12 > 0xFFFC)
  {
    result = *(unsigned int *)(a1 + v10);
  }
  else
  {
    if (v12 <= 0xFC)
    {
LABEL_12:
      result = *(unsigned __int8 *)(a1 + v10);
      goto LABEL_17;
    }
    result = *(unsigned __int16 *)(a1 + v10);
  }
LABEL_17:
  if (result >= 3)
  {
    if (v10 <= 3)
      v13 = v10;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23BA014F0(_BYTE *a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  size_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int *v18;
  unsigned int v19;
  int v20;

  v5 = *(_QWORD *)(a3[4] - 8);
  v6 = (((*(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64) + *(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a3[3] - 8) + 80))
      + *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64)
      + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + v6;
  result = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(*(_QWORD *)(result - 8) + 64);
  if (v12 <= 8)
    v12 = 8;
  if (v12 + 1 > v10)
    v13 = v12 + 1;
  else
    v13 = v10;
  if (v13 <= 8)
    v14 = 8;
  else
    v14 = v13;
  if (a2 > 2)
  {
    v15 = a2 - 3;
    if (v14 < 4)
    {
      v17 = (v15 >> (8 * v14)) + 3;
      v18 = (int *)&a1[v14];
      v19 = ((1 << (8 * v14)) + 1) >> (8 * v14);
      if (v19 > 0xFFFC)
      {
        *v18 = v17;
      }
      else if (v19 > 0xFC)
      {
        *(_WORD *)v18 = v17;
      }
      else
      {
        *(_BYTE *)v18 = v17;
      }
    }
    else
    {
      a1[v14] = 3;
    }
    if (v14 >= 4)
      v20 = 4;
    else
      v20 = v14;
    bzero(a1, v14);
    __asm { BR              X10 }
  }
  if (v14 > 3)
    goto LABEL_14;
  v16 = ((1 << (8 * v14)) + 1) >> (8 * v14);
  if (v16 > 0xFFFC)
  {
    *(_DWORD *)&a1[v14] = a2;
  }
  else
  {
    if (v16 <= 0xFC)
    {
LABEL_14:
      a1[v14] = a2;
      return result;
    }
    *(_WORD *)&a1[v14] = a2;
  }
  return result;
}

_QWORD *sub_23BA016BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BA01728(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23BA016C8);
}

unint64_t sub_23BA016C8(unint64_t result)
{
  if ((result >> 62) <= 1)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23BA01718(unint64_t *a1)
{
  return sub_23B9F46F8(*a1);
}

_QWORD *sub_23BA01728(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  a4(*a2, v6, v7);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return a1;
}

uint64_t *sub_23BA01770(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_23BA01784(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_23BA016C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_23B9F46F8);
}

uint64_t *sub_23BA01784(uint64_t *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *sub_23BA017E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_23BA017F0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_23B9F46F8);
}

uint64_t *sub_23BA017F0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *a1;
  v8 = a1[1];
  v7 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v5;
  a4(v6, v8, v7);
  return a1;
}

uint64_t sub_23BA01830(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_23BA0188C(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23BA018E4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_23BA01900(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_23BA01910(_QWORD *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    result[1] = 0;
    result[2] = 0;
    *result = (8 * (a2 - 2)) | 0x8000000000000000;
  }
  return result;
}

uint64_t sub_23BA01940()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23BA01A10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v5 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = *(_QWORD *)(v10 + 64) + v14;
  v16 = *(_QWORD *)(v13 + 64) + 7;
  v17 = v14 | *(_DWORD *)(v7 + 80) & 0xF8 | v11;
  if (v17 > 7
    || ((*(_DWORD *)(v13 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((v16 + ((v15 + (v12 & ~v11)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
  }
  else
  {
    v33 = v5;
    v21 = ~v11;
    v32 = ~v14;
    v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16);
    v23 = AssociatedTypeWitness;
    v22(a1, a2, v6);
    v24 = ((unint64_t)a1 + v12) & v21;
    v25 = ((unint64_t)a2 + v12) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v24, v25, v23);
    v26 = (v24 + v15) & v32;
    v27 = (v25 + v15) & v32;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(v26, v27, v33);
    v28 = (_QWORD *)((v16 + v27) & 0xFFFFFFFFFFFFFFF8);
    v29 = v28[1];
    v30 = (_QWORD *)((v16 + v26) & 0xFFFFFFFFFFFFFFF8);
    *v30 = *v28;
    v30[1] = v29;
  }
  swift_retain();
  return a1;
}

uint64_t sub_23BA01BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))((v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80), v6);
  return swift_release();
}

uint64_t sub_23BA01C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v20, v8);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  return a1;
}

uint64_t sub_23BA01D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24))(v19, v20, v8);
  v21 = *(_QWORD *)(v16 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BA01E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v19, v20, v8);
  *(_OWORD *)((*(_QWORD *)(v16 + 64) + 7 + v19) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v16 + 64) + 7 + v20) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23BA01F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 + v11;
  v13 = (v7 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(v8 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(v19, v20, v8);
  *(_OWORD *)((*(_QWORD *)(v16 + 64) + 7 + v19) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v16 + 64)
                                                                                       + 7
                                                                                       + v20) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_23BA0204C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v5 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 > v12)
    v12 = *(_DWORD *)(v13 + 84);
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v15 = AssociatedTypeWitness;
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = *(_QWORD *)(v7 + 64) + v16;
  v18 = *(_QWORD *)(v10 + 64);
  v19 = *(unsigned __int8 *)(v13 + 80);
  v20 = *(_QWORD *)(v13 + 64) + 7;
  if (v12 < a2)
  {
    if (((((v20 + ((v18 + v19 + (v17 & ~v16)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v21 = 2;
    else
      v21 = a2 - v12 + 1;
    if (v21 >= 0x10000)
      v22 = 4;
    else
      v22 = 2;
    if (v21 < 0x100)
      v22 = 1;
    if (v21 >= 2)
      v23 = v22;
    else
      v23 = 0;
    __asm { BR              X5 }
  }
  if ((_DWORD)v8 == v12)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v26 = a1;
    v14 = v8;
    v15 = v6;
    return v25(v26, v14, v15);
  }
  v26 = (v17 + a1) & ~v16;
  if (v11 == v12)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v14 = *(unsigned int *)(v10 + 84);
    return v25(v26, v14, v15);
  }
  v26 = (v26 + v18 + v19) & ~v19;
  if ((_DWORD)v14 == v12)
  {
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v15 = v5;
    return v25(v26, v14, v15);
  }
  v27 = *(_QWORD *)((v20 + v26) & 0xFFFFFFFFFFFFF8);
  if (v27 >= 0xFFFFFFFF)
    LODWORD(v27) = -1;
  return (v27 + 1);
}

void sub_23BA02240(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v7 = *(_QWORD *)(a4 + 24);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v12 + 84) > v11)
    v11 = *(_DWORD *)(v12 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = *(unsigned __int8 *)(v12 + 80);
  if (v11 >= a3)
  {
    v17 = 0;
    if (a2 <= v11)
      goto LABEL_21;
  }
  else
  {
    if (((*(_DWORD *)(v12 + 64)
         + 7
         + ((*(_DWORD *)(v10 + 64) + (_DWORD)v14 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v13) & ~(_DWORD)v13)) & ~(_DWORD)v14)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v15 = a3 - v11 + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    if (a2 <= v11)
LABEL_21:
      __asm { BR              X4 }
  }
  if (((*(_DWORD *)(v12 + 64)
       + 7
       + ((*(_DWORD *)(v10 + 64) + (_DWORD)v14 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v13) & ~(_DWORD)v13)) & ~(_DWORD)v14)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v18 = ~v11 + a2;
    bzero(a1, ((*(_QWORD *)(v12 + 64) + 7 + ((*(_QWORD *)(v10 + 64) + v14 + ((*(_QWORD *)(v8 + 64) + v13) & ~v13)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v18;
  }
  __asm { BR              X10 }
}

void sub_23BA023B0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x23BA02474);
}

void sub_23BA023B8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x23BA023C0);
  JUMPOUT(0x23BA02474);
}

void sub_23BA02400()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x23BA02474);
}

void sub_23BA02408()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x23BA02474);
}

void sub_23BA02410(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (v2)
  {
    if (v4 != v1 && a1 != v1)
      JUMPOUT(0x23BA0241CLL);
    JUMPOUT(0x23BA0243CLL);
  }
  JUMPOUT(0x23BA02474);
}

void type metadata accessor for AsyncThrottleSequence()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t sub_23BA0249C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_23BB8ACA0();
    if (v2 <= 0x3F)
    {
      result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_23BA025CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  void *v25;
  const void *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  size_t __n;
  uint64_t AssociatedTypeWitness;
  uint64_t v42;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(a3 + 24);
  v42 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v42 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = v5 + v8;
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  __n = v11;
  v15 = v11 + v14;
  v16 = v6;
  v17 = *(_QWORD *)(v6 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v8 | *(_DWORD *)(v4 + 80) & 0xF8 | v14 | v18;
  if (v19 > 7
    || ((*(_DWORD *)(v13 + 80) | v8 | *(_DWORD *)(v17 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || ((*(_QWORD *)(v17 + 64)
       + 7
       + ((*(_QWORD *)(v13 + 64) + v18 + ((v15 + (v10 & ~(unint64_t)v8)) & ~v14)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v22 = *a2;
    *a1 = *a2;
    v24 = (uint64_t *)(v22 + (((v19 | 7) + 16) & ~(unint64_t)(v19 | 7)));
  }
  else
  {
    v36 = v15;
    v37 = *(_QWORD *)(v13 + 64);
    v38 = *(_QWORD *)(v17 + 64) + 7;
    v39 = v12;
    v23 = ~(unint64_t)v8;
    v34 = ~v14;
    v35 = ~v18;
    v24 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
    v25 = (void *)(((unint64_t)a1 + v10) & ~v9);
    v26 = (const void *)(((unint64_t)a2 + v10) & v23);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v26, 1, v42))
    {
      memcpy(v25, v26, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v25, v26, v42);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v42);
    }
    v27 = ((unint64_t)v26 + v36) & v34;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(((unint64_t)v25 + v36) & v34, v27, v39);
    v28 = ((((unint64_t)v25 + v36) & v34) + v37 + v18) & v35;
    v29 = (v27 + v37 + v18) & v35;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v17 + 16))(v28, v29, v16);
    v30 = (_QWORD *)((v38 + v29) & 0xFFFFFFFFFFFFFFF8);
    v31 = v30[1];
    v32 = (_QWORD *)((v38 + v28) & 0xFFFFFFFFFFFFFFF8);
    *v32 = *v30;
    v32[1] = v31;
  }
  swift_retain();
  return v24;
}

uint64_t sub_23BA02874(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8))
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v10, v8);
  v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(v9 + 64);
  v13 = swift_getAssociatedTypeWitness();
  v14 = v11 == 0;
  v15 = *(_QWORD *)(v13 - 8);
  v16 = v12 + v10;
  if (v14)
    ++v16;
  v17 = (v16 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v17, v13);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))((v17 + *(_QWORD *)(v15 + 64) + *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80), v7);
  return swift_release();
}

uint64_t sub_23BA029D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  size_t v17;
  size_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v14 = (void *)((v8 + v12 + a1) & ~v12);
  v15 = (const void *)((v13 + a2) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = v17;
    else
      v18 = v17 + 1;
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = ((unint64_t)v14 + v19 + v22) & ~v22;
  v24 = ((unint64_t)v15 + v19 + v22) & ~v22;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 16))(v23, v24, v20);
  v25 = *(_QWORD *)(v9 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = *(_QWORD *)(v21 + 64) + v26;
  v28 = (v27 + v23) & ~v26;
  v29 = (v27 + v24) & ~v26;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 16))(v28, v29, v9);
  v30 = *(_QWORD *)(v25 + 64) + 7;
  v31 = (_QWORD *)((v30 + v28) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)((v30 + v29) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_retain();
  return a1;
}

uint64_t sub_23BA02BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v14 = (void *)((v8 + v12 + a1) & ~v12);
  v15 = (void *)((v13 + a2) & ~v12);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(v14, 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v14, v15, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v20 = *(_QWORD *)(v11 + 64);
  else
    v20 = *(_QWORD *)(v11 + 64) + 1;
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = ((unint64_t)v14 + v20 + v23) & ~v23;
  v25 = ((unint64_t)v15 + v20 + v23) & ~v23;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 24))(v24, v25, v21);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = *(_QWORD *)(v22 + 64) + v27;
  v29 = (v28 + v24) & ~v27;
  v30 = (v28 + v25) & ~v27;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v26 + 24))(v29, v30, v9);
  v31 = *(_QWORD *)(v26 + 64) + 7;
  v32 = (_QWORD *)((v31 + v29) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)((v31 + v30) & 0xFFFFFFFFFFFFFFF8);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BA02DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  size_t v17;
  size_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v14 = (void *)((v8 + v12 + a1) & ~v12);
  v15 = (const void *)((v13 + a2) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = v17;
    else
      v18 = v17 + 1;
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = ((unint64_t)v14 + v19 + v22) & ~v22;
  v24 = ((unint64_t)v15 + v19 + v22) & ~v22;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v21 + 32))(v23, v24, v20);
  v25 = *(_QWORD *)(v9 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = *(_QWORD *)(v21 + 64) + v26;
  v28 = (v27 + v23) & ~v26;
  v29 = (v27 + v24) & ~v26;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v25 + 32))(v28, v29, v9);
  *(_OWORD *)((*(_QWORD *)(v25 + 64) + 7 + v28) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v25 + 64) + 7 + v29) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23BA02FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v14 = (void *)((v8 + v12 + a1) & ~v12);
  v15 = (void *)((v13 + a2) & ~v12);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(v14, 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v14, v15, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v20 = *(_QWORD *)(v11 + 64);
  else
    v20 = *(_QWORD *)(v11 + 64) + 1;
  v21 = swift_getAssociatedTypeWitness();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = ((unint64_t)v14 + v20 + v23) & ~v23;
  v25 = ((unint64_t)v15 + v20 + v23) & ~v23;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 40))(v24, v25, v21);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = *(_QWORD *)(v22 + 64) + v27;
  v29 = (v28 + v24) & ~v27;
  v30 = (v28 + v25) & ~v27;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v26 + 40))(v29, v30, v9);
  *(_OWORD *)((*(_QWORD *)(v26 + 64) + 7 + v29) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v26 + 64)
                                                                                       + 7
                                                                                       + v30) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_23BA031F8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(a3 + 24);
  v35 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v35 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if ((_DWORD)v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v6)
    v11 = v6;
  else
    v11 = v10;
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14 <= v11)
    v15 = v11;
  else
    v15 = *(_DWORD *)(v13 + 84);
  v16 = *(_QWORD *)(v7 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 > v15)
    v15 = *(_DWORD *)(v16 + 84);
  if (v15 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  if ((_DWORD)v9)
    v18 = *(_QWORD *)(v8 + 64);
  else
    v18 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v19 = v12;
  v20 = *(unsigned __int8 *)(v8 + 80);
  v21 = *(_QWORD *)(v5 + 64) + v20;
  v22 = *(unsigned __int8 *)(v13 + 80);
  v23 = *(_QWORD *)(v13 + 64);
  v24 = *(unsigned __int8 *)(v16 + 80);
  v25 = *(_QWORD *)(v16 + 64) + 7;
  v26 = a1;
  if (v15 < a2)
  {
    if (((((v25 + ((v23 + v24 + ((v18 + v22 + (v21 & ~v20)) & ~v22)) & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v27 = 2;
    else
      v27 = a2 - v15 + 1;
    if (v27 >= 0x10000)
      v28 = 4;
    else
      v28 = 2;
    if (v27 < 0x100)
      v28 = 1;
    if (v27 >= 2)
      v29 = v28;
    else
      v29 = 0;
    __asm { BR              X7 }
  }
  if ((_DWORD)v6 == v15)
  {
    v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v17 = v6;
    v19 = AssociatedTypeWitness;
    return v30(v26, v17, v19);
  }
  v32 = (v21 + a1) & ~v20;
  if (v10 == v15)
  {
    if (v9 < 2)
      return 0;
    v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v32, v9, v35);
    if (v33 >= 2)
      return v33 - 1;
    else
      return 0;
  }
  else
  {
    v26 = (v32 + v18 + v22) & ~v22;
    if (v14 == v15)
    {
      v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      v17 = *(unsigned int *)(v13 + 84);
      return v30(v26, v17, v19);
    }
    v26 = (v26 + v23 + v24) & ~v24;
    if ((_DWORD)v17 == v15)
    {
      v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
      v19 = v7;
      return v30(v26, v17, v19);
    }
    v34 = *(_QWORD *)((v25 + v26) & 0xFFFFFFFFFFFFF8);
    if (v34 >= 0xFFFFFFFF)
      LODWORD(v34) = -1;
    return (v34 + 1);
  }
}

void sub_23BA034D4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4 + 24);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  v13 = 0;
  v14 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v14 + 84) <= v12)
    v15 = v12;
  else
    v15 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v16 + 84) > v15)
    v15 = *(_DWORD *)(v16 + 84);
  if (v15 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  if (v10)
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  v18 = (v17
       + *(unsigned __int8 *)(v14 + 80)
       + ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = *(unsigned __int8 *)(v16 + 80);
  if (v15 < a3)
  {
    if (((*(_DWORD *)(v16 + 64) + 7 + ((*(_DWORD *)(v14 + 64) + (_DWORD)v19 + (_DWORD)v18) & ~(_DWORD)v19)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v20 = a3 - v15 + 1;
    else
      v20 = 2;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v13 = v21;
    else
      v13 = 0;
  }
  if (a2 > v15)
  {
    if (((*(_DWORD *)(v16 + 64) + 7 + ((*(_DWORD *)(v14 + 64) + (_DWORD)v19 + (_DWORD)v18) & ~(_DWORD)v19)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v22 = ~v15 + a2;
      bzero(a1, ((*(_QWORD *)(v16 + 64) + 7 + ((*(_QWORD *)(v14 + 64) + v19 + v18) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v22;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X7 }
}

uint64_t sub_23BA036D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_BYTE *)(v28 + v22) = 0;
  if ((_DWORD)a2)
  {
    if ((_DWORD)v18 == v8)
    {
      v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
      result = v28;
      a3 = v18;
      a4 = v27;
      return v23(result, a2, a3, a4);
    }
    result &= v14 + v28;
    if (v15 == v8)
    {
      a2 = (a2 + 1);
      v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
      a3 = v20;
      a4 = v26;
      return v23(result, a2, a3, a4);
    }
    result = (result + v13 + v12) & a5;
    if ((_DWORD)a6 == v8)
    {
      v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
      a3 = a6;
      return v23(result, a2, a3, a4);
    }
    result = (result + v10 + v9) & v21;
    if ((_DWORD)a3 == v8)
    {
      v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      a4 = v16;
      return v23(result, a2, a3, a4);
    }
    v24 = (_QWORD *)((v11 + result) & 0xFFFFFFFFFFFFFFF8);
    if ((a2 & 0x80000000) != 0)
    {
      v25 = a2 ^ 0x80000000;
      v24[1] = 0;
    }
    else
    {
      v25 = (a2 - 1);
    }
    *v24 = v25;
  }
  return result;
}

uint64_t sub_23BA037FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  result = sub_23BB8ACA0();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_23BB8ACA0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23BA038C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  size_t v11;
  size_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v5 + 84))
    v6 = *(_QWORD *)(v5 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64) + 1;
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v6 + v10) & ~v10) + v12 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v6);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    }
    v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v19))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v20), v21, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((unint64_t)a1 + v11) & v20, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_23BA03A90(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = swift_getAssociatedTypeWitness();
  v7 = v4 == 0;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = v5 + a1;
  if (v7)
    ++v9;
  v10 = (v9 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v8 + 8))(v10, v6);
  return result;
}

void *sub_23BA03B84(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v15 = (const void *)(((unint64_t)a2 + v13) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    if (*(_DWORD *)(v11 + 84))
      v16 = *(_QWORD *)(v11 + 64);
    else
      v16 = *(_QWORD *)(v11 + 64) + 1;
    memcpy(v14, v15, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  return a1;
}

