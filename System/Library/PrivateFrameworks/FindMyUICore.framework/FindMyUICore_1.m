void *sub_23BA03CFC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      return a1;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v14, v15, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
  return a1;
}

void *sub_23BA03F04(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  size_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = v7;
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v9 = v7;
  else
    v9 = v7 + 1;
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)(((unint64_t)a1 + v9 + v12) & ~v12);
  v15 = (const void *)(((unint64_t)a2 + v13) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    if (*(_DWORD *)(v11 + 84))
      v16 = *(_QWORD *)(v11 + 64);
    else
      v16 = *(_QWORD *)(v11 + 64) + 1;
    memcpy(v14, v15, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  return a1;
}

void *sub_23BA0407C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)(((unint64_t)a1 + v10 + v13) & ~v13);
  v15 = (void *)(((unint64_t)a2 + v10 + v13) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v17 = v16(v14, 1, v11);
  v18 = v16(v15, 1, v11);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      return a1;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v14, v15, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v19);
  return a1;
}

uint64_t sub_23BA04284(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unsigned int v23;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if ((_DWORD)v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if ((_DWORD)v6)
    v13 = *(_QWORD *)(v5 + 64);
  else
    v13 = *(_QWORD *)(v5 + 64) + 1;
  if ((_DWORD)v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = v13 + v15;
  if (a2 <= v12)
    goto LABEL_35;
  v17 = v14 + (v16 & ~v15);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v20 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v20 < 2)
    {
LABEL_35:
      if (v12)
      {
        if (v7 >= v11)
          v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
        else
          v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))((v16 + a1) & ~v15, v10, v8);
        if (v23 >= 2)
          return v23 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_35;
LABEL_26:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v12 + v21 + 1;
}

void sub_23BA04488(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = 0;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  if (v7)
    v14 = *(_QWORD *)(v6 + 64);
  else
    v14 = *(_QWORD *)(v6 + 64) + 1;
  v15 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v15;
  v16 = ((v14 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v15;
  if (a3 > v13)
  {
    if (v16 > 3)
    {
      v9 = 1u;
      if (v13 >= a2)
        goto LABEL_18;
LABEL_24:
      v18 = ~v13 + a2;
      if (v16 < 4)
      {
        if ((_DWORD)v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, v16);
          if ((_DWORD)v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if ((_DWORD)v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, v16);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v9 = 4u;
      if (v13 < a2)
        goto LABEL_24;
LABEL_18:
      __asm { BR              X15 }
    }
    if (v17 >= 0x100)
      v9 = 2;
    else
      v9 = v17 > 1;
  }
  if (v13 < a2)
    goto LABEL_24;
  goto LABEL_18;
}

void sub_23BA047D8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x23BA047BCLL);
}

void sub_23BA047E0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x23BA047BCLL);
}

void sub_23BA047F0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x23BA047BCLL);
}

uint64_t sub_23BA047FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23BA04888(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_23BA04958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_23BA049B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23BA04A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23BA04A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23BA04AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_23BA04B60(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BA04C3C + 4 * byte_23BB8E4FF[v17 - 1]))();
}

void sub_23BA04CB8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for AsyncMerge2Sequence.Iterator()
{
  JUMPOUT(0x24260D81CLL);
}

void sub_23BA04EC4()
{
  JUMPOUT(0x24260D8DCLL);
}

uint64_t sub_23BA04ED4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

void sub_23BA04F64()
{
  JUMPOUT(0x24260D8DCLL);
}

uint64_t sub_23BA04F74()
{
  return MEMORY[0x24BEE40A8];
}

void sub_23BA04F80()
{
  JUMPOUT(0x24260D8DCLL);
}

uint64_t type metadata accessor for AsyncTimerSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncTimerSequence.Iterator);
}

uint64_t sub_23BA04F9C()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = sub_23BB8ACA0();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      AssociatedTypeWitness = sub_23BB8ACA0();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        AssociatedTypeWitness = sub_23BB8ACA0();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_23BA050C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;
  unint64_t v18;
  size_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  void (*v30)(unint64_t, unint64_t, uint64_t);
  void *v31;
  char *v32;
  size_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  const void *v37;
  size_t v39;
  uint64_t v40;
  size_t __n;
  uint64_t v42;
  size_t v43;
  uint64_t AssociatedTypeWitness;
  uint64_t v46;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84))
    v5 = *(_QWORD *)(v4 + 64);
  else
    v5 = *(_QWORD *)(v4 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v5 + v7;
  v9 = *(_QWORD *)(v6 + 64);
  __n = v5;
  v42 = v9 + v7;
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = v9 + 1;
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_DWORD *)(v12 + 84);
  v15 = v13;
  v43 = v10;
  v16 = v10 + v13;
  v17 = v12;
  v18 = (v16 + ((v42 + (v8 & ~(unint64_t)v7)) & ~(unint64_t)v7)) & ~(unint64_t)v13;
  v19 = *(_QWORD *)(v12 + 64);
  if (!v14)
    ++v19;
  v20 = v18 + v19;
  v21 = v7 | *(_DWORD *)(v4 + 80) | v13;
  v22 = (v7 | *(_BYTE *)(v4 + 80) | v13);
  v23 = v21 & 0x100000;
  if (v22 > 7 || v23 != 0 || v20 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v28 = (uint64_t *)(v26 + ((v22 + 16) & ~v22));
    swift_retain();
  }
  else
  {
    v39 = v19;
    v40 = v11;
    v27 = ~(unint64_t)v7;
    v28 = a1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v3))
    {
      memcpy(a1, a2, __n);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v3);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
    v46 = ~v15;
    v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v30(((unint64_t)v28 + v8) & v27, ((unint64_t)a2 + v8) & v27, AssociatedTypeWitness);
    v31 = (void *)((v42 + (((unint64_t)v28 + v8) & v27)) & v27);
    v32 = (char *)((v42 + (((unint64_t)a2 + v8) & v27)) & v27);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v32, 1, AssociatedTypeWitness))
    {
      v33 = v43;
      memcpy(v31, v32, v43);
      v34 = v40;
    }
    else
    {
      v30((unint64_t)v31, (unint64_t)v32, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v31, 0, 1, AssociatedTypeWitness);
      v34 = v40;
      v33 = v43;
    }
    v35 = &v32[v33];
    v36 = (void *)(((unint64_t)v31 + v33 + v15) & v46);
    v37 = (const void *)((unint64_t)&v35[v15] & v46);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v37, 1, v34))
    {
      memcpy(v36, v37, v39);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v36, v37, v34);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v36, 0, 1, v34);
    }
  }
  return v28;
}

uint64_t sub_23BA0538C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + a1;
  if (!v5)
    ++v10;
  v11 = (v10 + v9) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v11, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (v13 + v9 + v11) & ~v9;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v14, 1, AssociatedTypeWitness))
    v12(v14, AssociatedTypeWitness);
  v15 = *(_DWORD *)(v8 + 84);
  v16 = swift_getAssociatedTypeWitness();
  v17 = v15 == 0;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = v14 + v13;
  if (v17)
    ++v19;
  v20 = (v19 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v16);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v18 + 8))(v20, v16);
  return result;
}

void *sub_23BA05500(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  size_t v17;
  void *v18;
  size_t v19;
  int v20;
  size_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;
  void *v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (!v7)
    ++v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v30 = a1;
  v14 = ((unint64_t)a1 + v8 + v12) & ~v12;
  v15 = ((unint64_t)a2 + v13) & ~v12;
  v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
  v16(v14, v15, AssociatedTypeWitness);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = (void *)((v17 + v12 + v14) & ~v12);
  v19 = (v17 + v12 + v15) & ~v12;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v11 + 48))(v19, 1, AssociatedTypeWitness))
  {
    v20 = *(_DWORD *)(v11 + 84);
    if (v20)
      v21 = v17;
    else
      v21 = v17 + 1;
    memcpy(v18, (const void *)((v17 + v12 + v15) & ~v12), v21);
  }
  else
  {
    v16((unint64_t)v18, (v17 + v12 + v15) & ~v12, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, AssociatedTypeWitness);
    v20 = *(_DWORD *)(v11 + 84);
  }
  if (v20)
    v22 = v17;
  else
    v22 = v17 + 1;
  v23 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)(((unint64_t)v18 + v22 + v25) & ~v25);
  v27 = (const void *)((v22 + v25 + v19) & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23))
  {
    if (*(_DWORD *)(v24 + 84))
      v28 = *(_QWORD *)(v24 + 64);
    else
      v28 = *(_QWORD *)(v24 + 64) + 1;
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v26, v27, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
  }
  return v30;
}

void *sub_23BA05750(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);
  size_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  void *v34;
  size_t v35;
  void *v37;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v37 = a1;
  v16 = ((unint64_t)a1 + v11 + v14) & ~v14;
  v17 = ((unint64_t)a2 + v15) & ~v14;
  v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 24);
  v18(v16, v17, AssociatedTypeWitness);
  v19 = *(_QWORD *)(v13 + 64);
  v20 = (void *)((v19 + v14 + v16) & ~v14);
  v21 = (void *)((v19 + v14 + v17) & ~v14);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v17) = v22(v20, 1, AssociatedTypeWitness);
  v23 = v22(v21, 1, AssociatedTypeWitness);
  if ((_DWORD)v17)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v20, v21, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, AssociatedTypeWitness);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v23)
    {
      v18((unint64_t)v20, (unint64_t)v21, AssociatedTypeWitness);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v20, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v13 + 84))
    v24 = v19;
  else
    v24 = v19 + 1;
  memcpy(v20, v21, v24);
LABEL_22:
  if (*(_DWORD *)(v13 + 84))
    v25 = v19;
  else
    v25 = v19 + 1;
  v26 = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (void *)(((unint64_t)v20 + v25 + v28) & ~v28);
  v30 = (void *)(((unint64_t)v21 + v25 + v28) & ~v28);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v32 = v31(v29, 1, v26);
  v33 = v31(v30, 1, v26);
  if (v32)
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 16))(v29, v30, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
      return v34;
    }
  }
  else
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 24))(v29, v30, v26);
      return v34;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v35 = *(_QWORD *)(v27 + 64);
  else
    v35 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v29, v30, v35);
  return v34;
}

void *sub_23BA05A6C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, unint64_t, uint64_t);
  size_t v17;
  void *v18;
  size_t v19;
  int v20;
  size_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;
  void *v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (!v7)
    ++v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v8 + v12;
  v30 = a1;
  v14 = ((unint64_t)a1 + v8 + v12) & ~v12;
  v15 = ((unint64_t)a2 + v13) & ~v12;
  v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32);
  v16(v14, v15, AssociatedTypeWitness);
  v17 = *(_QWORD *)(v11 + 64);
  v18 = (void *)((v17 + v12 + v14) & ~v12);
  v19 = (v17 + v12 + v15) & ~v12;
  if ((*(unsigned int (**)(size_t, uint64_t, uint64_t))(v11 + 48))(v19, 1, AssociatedTypeWitness))
  {
    v20 = *(_DWORD *)(v11 + 84);
    if (v20)
      v21 = v17;
    else
      v21 = v17 + 1;
    memcpy(v18, (const void *)((v17 + v12 + v15) & ~v12), v21);
  }
  else
  {
    v16((unint64_t)v18, (v17 + v12 + v15) & ~v12, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, AssociatedTypeWitness);
    v20 = *(_DWORD *)(v11 + 84);
  }
  if (v20)
    v22 = v17;
  else
    v22 = v17 + 1;
  v23 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)(((unint64_t)v18 + v22 + v25) & ~v25);
  v27 = (const void *)((v22 + v25 + v19) & ~v25);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23))
  {
    if (*(_DWORD *)(v24 + 84))
      v28 = *(_QWORD *)(v24 + 64);
    else
      v28 = *(_QWORD *)(v24 + 64) + 1;
    memcpy(v26, v27, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v26, v27, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v26, 0, 1, v23);
  }
  return v30;
}

void *sub_23BA05CBC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);
  size_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  void *v34;
  size_t v35;
  void *v37;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v11 + v14;
  v37 = a1;
  v16 = ((unint64_t)a1 + v11 + v14) & ~v14;
  v17 = ((unint64_t)a2 + v15) & ~v14;
  v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40);
  v18(v16, v17, AssociatedTypeWitness);
  v19 = *(_QWORD *)(v13 + 64);
  v20 = (void *)((v19 + v14 + v16) & ~v14);
  v21 = (void *)((v19 + v14 + v17) & ~v14);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v17) = v22(v20, 1, AssociatedTypeWitness);
  v23 = v22(v21, 1, AssociatedTypeWitness);
  if ((_DWORD)v17)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v20, v21, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, AssociatedTypeWitness);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v23)
    {
      v18((unint64_t)v20, (unint64_t)v21, AssociatedTypeWitness);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v20, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v13 + 84))
    v24 = v19;
  else
    v24 = v19 + 1;
  memcpy(v20, v21, v24);
LABEL_22:
  if (*(_DWORD *)(v13 + 84))
    v25 = v19;
  else
    v25 = v19 + 1;
  v26 = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = (void *)(((unint64_t)v20 + v25 + v28) & ~v28);
  v30 = (void *)(((unint64_t)v21 + v25 + v28) & ~v28);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v32 = v31(v29, 1, v26);
  v33 = v31(v30, 1, v26);
  if (v32)
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v29, v30, v26);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v29, 0, 1, v26);
      return v34;
    }
  }
  else
  {
    v34 = v37;
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v29, v30, v26);
      return v34;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  }
  if (*(_DWORD *)(v27 + 84))
    v35 = *(_QWORD *)(v27 + 64);
  else
    v35 = *(_QWORD *)(v27 + 64) + 1;
  memcpy(v29, v30, v35);
  return v34;
}

uint64_t sub_23BA05FD8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v37;
  uint64_t AssociatedTypeWitness;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = v9 - 1;
  if (!(_DWORD)v9)
    v11 = 0;
  v37 = v11;
  if (v11 <= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  v16 = v15 - 1;
  if (!(_DWORD)v15)
    v16 = 0;
  if (v16 <= v12)
    v16 = v12;
  if ((_DWORD)v6)
    v17 = *(_QWORD *)(v5 + 64);
  else
    v17 = *(_QWORD *)(v5 + 64) + 1;
  v18 = *(_QWORD *)(v8 + 64);
  if ((_DWORD)v9)
    v19 = *(_QWORD *)(v8 + 64);
  else
    v19 = v18 + 1;
  if ((_DWORD)v15)
    v20 = *(_QWORD *)(v14 + 64);
  else
    v20 = *(_QWORD *)(v14 + 64) + 1;
  if (!a2)
    return 0;
  v21 = v13;
  v22 = *(unsigned __int8 *)(v8 + 80);
  v23 = v17 + v22;
  v24 = v18 + v22;
  v25 = *(unsigned __int8 *)(v14 + 80);
  if (a2 <= v16)
    goto LABEL_44;
  v26 = v20 + ((v19 + v25 + ((v24 + (v23 & ~v22)) & ~v22)) & ~v25);
  v27 = 8 * v26;
  if (v26 > 3)
    goto LABEL_28;
  v29 = ((a2 - v16 + ~(-1 << v27)) >> v27) + 1;
  if (HIWORD(v29))
  {
    v28 = *(_DWORD *)(a1 + v26);
    if (!v28)
      goto LABEL_44;
    goto LABEL_35;
  }
  if (v29 > 0xFF)
  {
    v28 = *(unsigned __int16 *)(a1 + v26);
    if (!*(_WORD *)(a1 + v26))
      goto LABEL_44;
    goto LABEL_35;
  }
  if (v29 >= 2)
  {
LABEL_28:
    v28 = *(unsigned __int8 *)(a1 + v26);
    if (!*(_BYTE *)(a1 + v26))
      goto LABEL_44;
LABEL_35:
    v30 = (v28 - 1) << v27;
    if (v26 > 3)
      v30 = 0;
    if ((_DWORD)v26)
    {
      if (v26 <= 3)
        v31 = v26;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    return v16 + v30 + 1;
  }
LABEL_44:
  if (!v16)
    return 0;
  if (v7 == v16)
  {
    v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  else
  {
    v33 = ~v22;
    v34 = (v23 + a1) & v33;
    if ((_DWORD)v9 == v16)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v34, v9, AssociatedTypeWitness);
    v35 = (v24 + v34) & v33;
    if (v37 == v16)
      v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v35, v9, AssociatedTypeWitness);
    else
      v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((v35 + v25 + v19) & ~v25, v15, v21);
  }
  if (v32 >= 2)
    return v32 - 1;
  else
    return 0;
}

void sub_23BA06298(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  unsigned int v23;
  unsigned int v24;
  int v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v8 + 84);
  v11 = v9 - 1;
  if (!v9)
    v11 = 0;
  if (v11 <= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = 0;
  v14 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = v15 - 1;
  if (!v15)
    v16 = 0;
  if (v16 <= v12)
    v17 = v12;
  else
    v17 = v16;
  if (v6)
    v18 = *(_QWORD *)(v5 + 64);
  else
    v18 = *(_QWORD *)(v5 + 64) + 1;
  v19 = *(_QWORD *)(v8 + 64);
  if (v9)
    v20 = *(_QWORD *)(v8 + 64);
  else
    v20 = v19 + 1;
  if (v15)
    v21 = *(_QWORD *)(v14 + 64);
  else
    v21 = *(_QWORD *)(v14 + 64) + 1;
  v22 = ((v20
        + *(unsigned __int8 *)(v14 + 80)
        + ((v19
          + *(unsigned __int8 *)(v8 + 80)
          + ((v18 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
      + v21;
  if (a3 > v17)
  {
    if (v22 <= 3)
    {
      v23 = ((a3 - v17 + ~(-1 << (8 * v22))) >> (8 * v22)) + 1;
      if (HIWORD(v23))
      {
        v13 = 4u;
      }
      else if (v23 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v23 > 1;
      }
    }
    else
    {
      v13 = 1u;
    }
  }
  if (v17 < a2)
  {
    v24 = ~v17 + a2;
    if (v22 < 4)
    {
      if ((_DWORD)v22)
      {
        v25 = v24 & ~(-1 << (8 * v22));
        bzero(a1, v22);
        if ((_DWORD)v22 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if ((_DWORD)v22 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v22);
      *(_DWORD *)a1 = v24;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_23BA06578()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_23BA06580()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_23BA06614()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
}

void sub_23BA0662C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_23BA06634()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_23BA06644()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_23BA06650()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_23BB8ACA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23BA066D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  size_t v7;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64) + 1;
  if (*(_DWORD *)(v5 + 80) > 7u || (v6 & 0x100000) != 0 || v7 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v11 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_23BA067CC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  return result;
}

void *sub_23BA0684C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_23BA06900(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

void *sub_23BA06A00(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  size_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v5 + 84))
      v6 = *(_QWORD *)(v5 + 64);
    else
      v6 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(a1, a2, v6);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

void *sub_23BA06AB4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
  return a1;
}

uint64_t sub_23BA06BB4(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  if (a2 > v6)
  {
    v8 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (v9)
        goto LABEL_15;
    }
    else
    {
      if (v10 <= 0xFF)
      {
        if (v10 < 2)
          goto LABEL_22;
LABEL_8:
        v9 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_22;
LABEL_15:
        v11 = (v9 - 1) << v8;
        if (v7 > 3)
          v11 = 0;
        if ((_DWORD)v7)
        {
          if (v7 > 3)
            LODWORD(v7) = 4;
          __asm { BR              X12 }
        }
        return v6 + v11 + 1;
      }
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_22:
  if (v5 < 2)
    return 0;
  v13 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  if (v13 >= 2)
    return v13 - 1;
  else
    return 0;
}

void sub_23BA06D10(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v6 = 0;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  if (a3 > v9)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 >= a2)
LABEL_20:
        __asm { BR              X11 }
LABEL_13:
      v12 = ~v9 + a2;
      if (v10 < 4)
      {
        if ((_DWORD)v10)
        {
          v13 = v12 & ~(-1 << (8 * v10));
          bzero(a1, v10);
          if ((_DWORD)v10 == 3)
          {
            *(_WORD *)a1 = v13;
            a1[2] = BYTE2(v13);
          }
          else if ((_DWORD)v10 == 2)
          {
            *(_WORD *)a1 = v13;
          }
          else
          {
            *a1 = v13;
          }
        }
      }
      else
      {
        bzero(a1, v10);
        *(_DWORD *)a1 = v12;
      }
      __asm { BR              X10 }
    }
    v11 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v11))
    {
      v6 = 4u;
      if (v9 >= a2)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v11 >= 0x100)
      v6 = 2;
    else
      v6 = v11 > 1;
  }
  if (v9 >= a2)
    goto LABEL_20;
  goto LABEL_13;
}

void sub_23BA06ED8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23BA06EE0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for AsyncSyncSequence.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncSyncSequence.Iterator);
}

uint64_t sub_23BA06F10()
{
  return swift_release();
}

uint64_t sub_23BA06F18(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_23BA06F5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t sub_23BA06FB8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionLocation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AsyncChunksOfCountOrSignalSequence.Iterator()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t Person.ServerIdentifier.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FindMyUICore::Person::ServerIdentifier __swiftcall Person.ServerIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  FindMyUICore::Person::ServerIdentifier result;

  v2 = v1;
  v3 = sub_23BB8A7E4();
  v5 = v4;
  v6 = swift_bridgeObjectRelease();
  *v2 = v3;
  v2[1] = v5;
  result.rawValue._object = v7;
  result.rawValue._countAndFlagsBits = v6;
  return result;
}

uint64_t static Person.ServerIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23BB8B1A4();
}

uint64_t Person.ServerIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t Person.ServerIdentifier.hashValue.getter()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t sub_23BA07204(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23BB8B1A4();
}

uint64_t sub_23BA07234()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t sub_23BA0728C()
{
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA072D0()
{
  sub_23BB8B240();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  swift_bridgeObjectRelease();
  return sub_23BB8B270();
}

uint64_t static Person.ServerIdentifier.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_23BB8B1A4();
}

unint64_t sub_23BA07358()
{
  unint64_t result;

  result = qword_256A5C520;
  if (!qword_256A5C520)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Person.ServerIdentifier, &type metadata for Person.ServerIdentifier);
    atomic_store(result, (unint64_t *)&qword_256A5C520);
  }
  return result;
}

uint64_t sub_23BA0739C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_23BB8B1A4();
}

uint64_t sub_23BA073CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    v7 = 1;
  else
    v7 = sub_23BB8B1A4() ^ 1;
  return v7 & 1;
}

uint64_t sub_23BA07408(_QWORD *a1, _QWORD *a2)
{
  char v3;

  if (*a1 == *a2 && a1[1] == a2[1])
    v3 = 1;
  else
    v3 = sub_23BB8B1A4() ^ 1;
  return v3 & 1;
}

uint64_t sub_23BA07450(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    return 0;
  else
    return sub_23BB8B1A4();
}

ValueMetadata *type metadata accessor for Person()
{
  return &type metadata for Person;
}

_QWORD *_s14descr250CB21E1V10InputValueO11DestinationV10IdentifierVwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr250CB21E1V10InputValueO11DestinationV10IdentifierVwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s14descr250CB21E1V10InputValueO11DestinationV10IdentifierVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s14descr250CB21E1V10InputValueO11DestinationV10IdentifierVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr250CB21E1V10InputValueO11DestinationV10IdentifierVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr250CB21E1V10InputValueO11DestinationV10IdentifierVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.ServerIdentifier()
{
  return &type metadata for Person.ServerIdentifier;
}

uint64_t sub_23BA075C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  char *v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A48);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58C90 != -1)
    swift_once();
  v8 = sub_23BB8A2B0();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_256A5A210);
  v10 = sub_23BB89578();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(&v7[*(int *)(v4 + 52)], v9, v8);
  *(_WORD *)&v7[*(int *)(v4 + 56)] = 256;
  sub_23BB89FBC();
  v11 = sub_23BB8A004();
  swift_release();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59A50);
  a2[3] = v12;
  a2[4] = sub_23B996D98();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  sub_23B989EFC((uint64_t)v7, (uint64_t)boxed_opaque_existential_1, &qword_256A59A48);
  v14 = (char *)boxed_opaque_existential_1 + *(int *)(v12 + 36);
  *(_QWORD *)v14 = v11;
  *(_OWORD *)(v14 + 8) = xmmword_23BB8F0B0;
  *((_QWORD *)v14 + 3) = 0x4008000000000000;
  return sub_23B989D60((uint64_t)v7, &qword_256A59A48);
}

uint64_t sub_23BA0774C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *boxed_opaque_existential_1;
  char *v46;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;

  v56 = a1;
  v57 = a2;
  v53 = sub_23BB8A334();
  v2 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB89F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C528);
  MEMORY[0x24BDAC7A8](v49, v11);
  v13 = (uint64_t *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C530);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C538);
  MEMORY[0x24BDAC7A8](v18, v19);
  v50 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C540);
  MEMORY[0x24BDAC7A8](v52, v21);
  v54 = (uint64_t)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C548);
  MEMORY[0x24BDAC7A8](v51, v23);
  v55 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58C90 != -1)
    swift_once();
  v25 = sub_23BB8A2B0();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_256A5A210);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v17, v26, v25);
  *(_WORD *)&v17[*(int *)(v14 + 56)] = 256;
  v27 = *MEMORY[0x24BDF3C28];
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v48(v10, v27, v6);
  v28 = MEMORY[0x24260BF74](v10, 0.0, 0.627, 0.992, 1.0);
  v29 = v10;
  v30 = v2;
  v31 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v32 = v53;
  v31(v5, *MEMORY[0x24BDF5098], v53);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v13 + *(int *)(v49 + 36), v5, v32);
  *v13 = v28;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v32);
  LOBYTE(v28) = sub_23BB89BA8();
  v33 = *(int *)(v18 + 36);
  v34 = (uint64_t)v50;
  v35 = &v50[v33];
  sub_23B989EFC((uint64_t)v13, (uint64_t)&v50[v33], &qword_256A5C528);
  v35[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5C550) + 36)] = v28;
  sub_23B989EFC((uint64_t)v17, v34, &qword_256A5C530);
  sub_23B989D60((uint64_t)v13, &qword_256A5C528);
  sub_23B989D60((uint64_t)v17, &qword_256A5C530);
  v48(v29, v27, v6);
  MEMORY[0x24260BF74](v29, 0.0, 0.627, 0.992, 1.0);
  v36 = sub_23BB8A004();
  swift_release();
  LOBYTE(v27) = sub_23BB89BA8();
  v37 = v54;
  sub_23B989EFC(v34, v54, &qword_256A5C538);
  v38 = v37 + *(int *)(v52 + 36);
  *(_QWORD *)v38 = v36;
  *(_BYTE *)(v38 + 8) = v27;
  sub_23B989D60(v34, &qword_256A5C538);
  v39 = (uint64_t)v55;
  v40 = &v55[*(int *)(v51 + 36)];
  v41 = sub_23BB89578();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v56, v41);
  *(_WORD *)&v40[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5C558) + 36)] = 256;
  sub_23B990D24(v37, v39, &qword_256A5C540);
  sub_23BB89FBC();
  v42 = sub_23BB8A004();
  swift_release();
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C560);
  v44 = v57;
  v57[3] = v43;
  v44[4] = sub_23BA07F84();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v44);
  sub_23B989EFC(v39, (uint64_t)boxed_opaque_existential_1, &qword_256A5C548);
  v46 = (char *)boxed_opaque_existential_1 + *(int *)(v43 + 36);
  *(_QWORD *)v46 = v42;
  *(_OWORD *)(v46 + 8) = xmmword_23BB8F0B0;
  *((_QWORD *)v46 + 3) = 0x4008000000000000;
  return sub_23B989D60(v39, &qword_256A5C548);
}

uint64_t sub_23BA07C38@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;

  *a1 = 0x402C000000000000;
  v2 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
  v3 = (_QWORD *)((char *)a1 + v2[5]);
  v4 = a1;
  v5 = sub_23BB89FE0();
  v6 = MEMORY[0x24BDF3E18];
  v3[3] = MEMORY[0x24BDF3E48];
  v3[4] = v6;
  *v3 = v5;
  sub_23BB89C08();
  sub_23BB89C20();
  v7 = sub_23BB89C50();
  swift_release();
  v8 = (int *)type metadata accessor for CustomControlStyle(0);
  v9 = (char *)v3 + v8[7];
  *(_QWORD *)v9 = sub_23BA075C0;
  *((_QWORD *)v9 + 1) = 0;
  v9[40] = 1;
  v10 = (char *)v3 + v8[8];
  v11 = *MEMORY[0x24BDEB488];
  v29 = *MEMORY[0x24BDEB488];
  v27 = sub_23BB892F0();
  v28 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104);
  v28(v10, v11, v27);
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  swift_storeEnumTagMultiPayload();
  v12 = (char *)v3 + v8[6];
  v13 = *MEMORY[0x24BDF50D0];
  v14 = sub_23BB8A334();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104);
  v31 = v14;
  v30(v12, v13, v14);
  v3[5] = v7;
  *((_BYTE *)v3 + v8[9]) = 1;
  *((_BYTE *)v3 + v8[10]) = 1;
  v15 = (char *)v3 + v8[11];
  *(_QWORD *)v15 = 0x4060800000000000;
  v15[8] = 0;
  v16 = (_QWORD *)((char *)v4 + v2[6]);
  v17 = sub_23BB89FE0();
  v16[3] = MEMORY[0x24BDF3E48];
  v16[4] = MEMORY[0x24BDF3E18];
  *v16 = v17;
  sub_23BB89C08();
  sub_23BB89C20();
  v18 = sub_23BB89C50();
  swift_release();
  v19 = (char *)v16 + v8[7];
  *(_QWORD *)v19 = sub_23BA075C0;
  *((_QWORD *)v19 + 1) = 0;
  v19[40] = 1;
  v28((char *)v16 + v8[8], v29, v27);
  swift_storeEnumTagMultiPayload();
  v30((char *)v16 + v8[6], v13, v31);
  v16[5] = v18;
  *((_BYTE *)v16 + v8[9]) = 1;
  *((_BYTE *)v16 + v8[10]) = 1;
  v20 = (char *)v16 + v8[11];
  *(_QWORD *)v20 = 0x4060800000000000;
  v20[8] = 0;
  v21 = (_QWORD *)((char *)v4 + v2[7]);
  v22 = sub_23BB89FE0();
  v21[3] = MEMORY[0x24BDF3E48];
  v21[4] = MEMORY[0x24BDF3E18];
  *v21 = v22;
  sub_23BB89C08();
  sub_23BB89C20();
  v23 = sub_23BB89C50();
  swift_release();
  v24 = (char *)v21 + v8[7];
  *(_QWORD *)v24 = sub_23BA0774C;
  *((_QWORD *)v24 + 1) = 0;
  v24[40] = 1;
  v28((char *)v21 + v8[8], v29, v27);
  swift_storeEnumTagMultiPayload();
  result = ((uint64_t (*)(char *, _QWORD, uint64_t))v30)((char *)v21 + v8[6], v13, v31);
  v21[5] = v23;
  *((_BYTE *)v21 + v8[9]) = 1;
  *((_BYTE *)v21 + v8[10]) = 1;
  v26 = (char *)v21 + v8[11];
  *(_QWORD *)v26 = 0x4060800000000000;
  v26[8] = 0;
  return result;
}

uint64_t type metadata accessor for QuickSendActionsModule.Style(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5C608);
}

unint64_t sub_23BA07F84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5C568;
  if (!qword_256A5C568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5C560);
    v2[0] = sub_23BA07FF0();
    v2[1] = MEMORY[0x24BDEC468];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5C568);
  }
  return result;
}

unint64_t sub_23BA07FF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5C570;
  if (!qword_256A5C570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5C548);
    v2[0] = sub_23BA08074();
    v2[1] = sub_23B996E1C(qword_256A5C5A8, &qword_256A5C558, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5C570);
  }
  return result;
}

unint64_t sub_23BA08074()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5C578;
  if (!qword_256A5C578)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5C540);
    v2[0] = sub_23BA080F8();
    v2[1] = sub_23B996E1C(&qword_256A5C598, &qword_256A5C5A0, MEMORY[0x24BDEFB18]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5C578);
  }
  return result;
}

unint64_t sub_23BA080F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5C580;
  if (!qword_256A5C580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5C538);
    v2[0] = sub_23B996E1C(&qword_256A5C588, &qword_256A5C530, MEMORY[0x24BDEB358]);
    v2[1] = sub_23B996E1C(&qword_256A5C590, &qword_256A5C550, MEMORY[0x24BDEFB18]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5C580);
  }
  return result;
}

char *sub_23BA08194(char *a1, char *a2, int *a3)
{
  int v4;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  void (*v76)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v21 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v22 = (char *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v6 = a3[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    v9 = *(_OWORD *)&a2[v6 + 24];
    *(_OWORD *)&a1[v6 + 24] = v9;
    (**(void (***)(char *, char *))(v9 - 8))(&a1[v6], &a2[v6]);
    *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
    v10 = (int *)type metadata accessor for CustomControlStyle(0);
    v11 = v10[6];
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = sub_23BB8A334();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    v76 = v15;
    v15(v12, v13, v14);
    v16 = v10[7];
    v17 = &v7[v16];
    v18 = &v8[v16];
    v19 = v8[v16 + 40];
    if ((v19 & 1) != 0)
    {
      v20 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v20;
      swift_retain();
    }
    else
    {
      v23 = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 24) = v23;
      (**(void (***)(char *))(v23 - 8))(v17);
    }
    v17[40] = v19;
    v24 = v10[8];
    v25 = &v7[v24];
    v26 = &v8[v24];
    v27 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    v28 = v14;
    v22 = a1;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v25, v26, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    v7[v10[9]] = v8[v10[9]];
    v7[v10[10]] = v8[v10[10]];
    v30 = v10[11];
    v31 = &v7[v30];
    v32 = &v8[v30];
    v31[8] = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v33 = a3[6];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = *(_OWORD *)&a2[v33 + 24];
    *(_OWORD *)&a1[v33 + 24] = v36;
    (**(void (***)(char *, char *))(v36 - 8))(&a1[v33], &a2[v33]);
    *((_QWORD *)v34 + 5) = *((_QWORD *)v35 + 5);
    v37 = v10[6];
    v38 = &v34[v37];
    v39 = &v35[v37];
    swift_retain();
    v76(v38, v39, v14);
    v40 = v10[7];
    v41 = &v34[v40];
    v42 = &v35[v40];
    v43 = v35[v40 + 40];
    if ((v43 & 1) != 0)
    {
      v44 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v44;
      swift_retain();
    }
    else
    {
      v45 = *(_OWORD *)(v42 + 24);
      *(_OWORD *)(v41 + 24) = v45;
      (**(void (***)(char *))(v45 - 8))(v41);
    }
    v41[40] = v43;
    v46 = v10[8];
    v47 = &v34[v46];
    v48 = &v35[v46];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v49 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    v34[v10[9]] = v35[v10[9]];
    v34[v10[10]] = v35[v10[10]];
    v50 = v10[11];
    v51 = &v34[v50];
    v52 = &v35[v50];
    v51[8] = v52[8];
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v53 = a3[7];
    v54 = &a1[v53];
    v55 = &a2[v53];
    v56 = *(_OWORD *)&a2[v53 + 24];
    *(_OWORD *)&a1[v53 + 24] = v56;
    (**(void (***)(char *, char *))(v56 - 8))(&a1[v53], &a2[v53]);
    *((_QWORD *)v54 + 5) = *((_QWORD *)v55 + 5);
    v57 = v10[6];
    v58 = &v54[v57];
    v59 = &v55[v57];
    swift_retain();
    v76(v58, v59, v28);
    v60 = v10[7];
    v61 = &v54[v60];
    v62 = &v55[v60];
    v63 = v55[v60 + 40];
    if ((v63 & 1) != 0)
    {
      v64 = *((_QWORD *)v62 + 1);
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_QWORD *)v61 + 1) = v64;
      swift_retain();
    }
    else
    {
      v65 = *(_OWORD *)(v62 + 24);
      *(_OWORD *)(v61 + 24) = v65;
      (**(void (***)(char *))(v65 - 8))(v61);
    }
    v61[40] = v63;
    v66 = v10[8];
    v67 = &v54[v66];
    v68 = &v55[v66];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v69 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    v54[v10[9]] = v55[v10[9]];
    v54[v10[10]] = v55[v10[10]];
    v70 = v10[11];
    v71 = &v54[v70];
    v72 = &v55[v70];
    v71[8] = v72[8];
    *(_QWORD *)v71 = *(_QWORD *)v72;
  }
  return v22;
}

uint64_t sub_23BA085FC(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v4 = a1 + a2[5];
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_release();
  v5 = (int *)type metadata accessor for CustomControlStyle(0);
  v6 = v4 + v5[6];
  v7 = sub_23BB8A334();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = v4 + v5[7];
  if ((*(_BYTE *)(v9 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v9);
  v10 = v4 + v5[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[6];
  __swift_destroy_boxed_opaque_existential_1(v12);
  swift_release();
  v8(v12 + v5[6], v7);
  v13 = v12 + v5[7];
  if ((*(_BYTE *)(v13 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v13);
  v14 = v12 + v5[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + a2[7];
  __swift_destroy_boxed_opaque_existential_1(v16);
  swift_release();
  v8(v16 + v5[6], v7);
  v17 = v16 + v5[7];
  if ((*(_BYTE *)(v17 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v17);
  v18 = v16 + v5[8];
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v20 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
  }
  return result;
}

char *sub_23BA087F8(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  void (*v71)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a3[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = *(_OWORD *)&a2[v5 + 24];
  *(_OWORD *)&a1[v5 + 24] = v8;
  (**(void (***)(char *, char *))(v8 - 8))(&a1[v5], &a2[v5]);
  *((_QWORD *)v6 + 5) = *((_QWORD *)v7 + 5);
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = sub_23BB8A334();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_retain();
  v71 = v14;
  v14(v11, v12, v13);
  v15 = v9[7];
  v16 = &v6[v15];
  v17 = &v7[v15];
  v18 = v7[v15 + 40];
  if ((v18 & 1) != 0)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v19;
    swift_retain();
  }
  else
  {
    v20 = *(_OWORD *)(v17 + 24);
    *(_OWORD *)(v16 + 24) = v20;
    (**(void (***)(char *))(v20 - 8))(v16);
  }
  v16[40] = v18;
  v21 = v9[8];
  v22 = &v6[v21];
  v23 = &v7[v21];
  v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v6[v9[9]] = v7[v9[9]];
  v6[v9[10]] = v7[v9[10]];
  v26 = v9[11];
  v27 = &v6[v26];
  v28 = &v7[v26];
  v27[8] = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = a3[6];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_OWORD *)&a2[v29 + 24];
  *(_OWORD *)&a1[v29 + 24] = v32;
  (**(void (***)(char *, char *))(v32 - 8))(&a1[v29], &a2[v29]);
  *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
  v33 = v9[6];
  v34 = &v30[v33];
  v35 = &v31[v33];
  swift_retain();
  v14(v34, v35, v13);
  v36 = v9[7];
  v37 = &v30[v36];
  v38 = &v31[v36];
  v39 = v31[v36 + 40];
  if ((v39 & 1) != 0)
  {
    v40 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v40;
    swift_retain();
  }
  else
  {
    v41 = *(_OWORD *)(v38 + 24);
    *(_OWORD *)(v37 + 24) = v41;
    (**(void (***)(char *))(v41 - 8))(v37);
  }
  v37[40] = v39;
  v42 = v9[8];
  v43 = &v30[v42];
  v44 = &v31[v42];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v30[v9[9]] = v31[v9[9]];
  v30[v9[10]] = v31[v9[10]];
  v46 = v9[11];
  v47 = &v30[v46];
  v48 = &v31[v46];
  v47[8] = v48[8];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v49 = a3[7];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = *(_OWORD *)(v51 + 24);
  *(_OWORD *)&a1[v49 + 24] = v52;
  (**(void (***)(char *, char *))(v52 - 8))(&a1[v49], v51);
  *((_QWORD *)v50 + 5) = *((_QWORD *)v51 + 5);
  v53 = v9[6];
  v54 = &v50[v53];
  v55 = &v51[v53];
  swift_retain();
  v71(v54, v55, v13);
  v56 = v9[7];
  v57 = &v50[v56];
  v58 = &v51[v56];
  v59 = v51[v56 + 40];
  if ((v59 & 1) != 0)
  {
    v60 = *((_QWORD *)v58 + 1);
    *(_QWORD *)v57 = *(_QWORD *)v58;
    *((_QWORD *)v57 + 1) = v60;
    swift_retain();
  }
  else
  {
    v61 = *(_OWORD *)(v58 + 24);
    *(_OWORD *)(v57 + 24) = v61;
    (**(void (***)(char *))(v61 - 8))(v57);
  }
  v57[40] = v59;
  v62 = v9[8];
  v63 = &v50[v62];
  v64 = &v51[v62];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v65 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  v50[v9[9]] = v51[v9[9]];
  v50[v9[10]] = v51[v9[10]];
  v66 = v9[11];
  v67 = &v50[v66];
  v68 = &v51[v66];
  v67[8] = v68[8];
  *(_QWORD *)v67 = *(_QWORD *)v68;
  return a1;
}

_QWORD *sub_23BA08C30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  int *v67;

  v3 = a3;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v6), (_QWORD *)((char *)a2 + v6));
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  swift_retain();
  swift_release();
  v9 = (int *)type metadata accessor for CustomControlStyle(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_23BB8A334();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  if (a1 == a2)
  {
    v67 = v9 + 8;
  }
  else
  {
    v15 = v9[7];
    v16 = &v7[v15];
    v17 = &v8[v15];
    sub_23B989D60((uint64_t)&v7[v15], qword_256A59CC0);
    v66 = v14;
    if ((v17[40] & 1) != 0)
    {
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v16[40] = 1;
      swift_retain();
    }
    else
    {
      v19 = *((_QWORD *)v17 + 3);
      *((_QWORD *)v16 + 3) = v19;
      *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
      (**(void (***)(char *, char *))(v19 - 8))(v16, v17);
      v16[40] = 0;
    }
    v20 = v9[8];
    v67 = v9 + 8;
    v21 = &v7[v20];
    v22 = &v8[v20];
    sub_23B989D9C((uint64_t)&v7[v20], type metadata accessor for CustomControlStyle.BackgroundSize);
    v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    v14 = v66;
  }
  v7[v9[9]] = v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v25 = v9[11];
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = *(int *)(v3 + 24);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v29), (_QWORD *)((char *)a2 + v29));
  *((_QWORD *)v30 + 5) = *((_QWORD *)v31 + 5);
  swift_retain();
  swift_release();
  v14(&v30[v9[6]], &v31[v9[6]], v13);
  if (a1 != a2)
  {
    v65 = v3;
    v32 = v9[7];
    v33 = &v30[v32];
    v34 = &v31[v32];
    sub_23B989D60((uint64_t)&v30[v32], qword_256A59CC0);
    v35 = v14;
    if ((v34[40] & 1) != 0)
    {
      v36 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v36;
      v33[40] = 1;
      swift_retain();
    }
    else
    {
      v37 = *((_QWORD *)v34 + 3);
      *((_QWORD *)v33 + 3) = v37;
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
      (**(void (***)(char *, char *))(v37 - 8))(v33, v34);
      v33[40] = 0;
    }
    v38 = *v67;
    v39 = &v30[v38];
    v40 = &v31[v38];
    sub_23B989D9C((uint64_t)&v30[v38], type metadata accessor for CustomControlStyle.BackgroundSize);
    v41 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v42 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    v14 = v35;
    v3 = v65;
  }
  v30[v9[9]] = v31[v9[9]];
  v30[v9[10]] = v31[v9[10]];
  v43 = v9[11];
  v44 = &v30[v43];
  v45 = &v31[v43];
  v46 = *(_QWORD *)v45;
  v44[8] = v45[8];
  *(_QWORD *)v44 = v46;
  v47 = *(int *)(v3 + 28);
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)a1 + v47), (_QWORD *)((char *)a2 + v47));
  *((_QWORD *)v48 + 5) = *((_QWORD *)v49 + 5);
  swift_retain();
  swift_release();
  v14(&v48[v9[6]], &v49[v9[6]], v13);
  if (a1 != a2)
  {
    v50 = v9[7];
    v51 = &v48[v50];
    v52 = &v49[v50];
    sub_23B989D60((uint64_t)&v48[v50], qword_256A59CC0);
    if ((v52[40] & 1) != 0)
    {
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v51[40] = 1;
      swift_retain();
    }
    else
    {
      v54 = *((_QWORD *)v52 + 3);
      *((_QWORD *)v51 + 3) = v54;
      *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
      (**(void (***)(char *, char *))(v54 - 8))(v51, v52);
      v51[40] = 0;
    }
    v55 = *v67;
    v56 = &v48[v55];
    v57 = &v49[v55];
    sub_23B989D9C((uint64_t)&v48[v55], type metadata accessor for CustomControlStyle.BackgroundSize);
    v58 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v59 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v56, v57, v59);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
  }
  v48[v9[9]] = v49[v9[9]];
  v48[v9[10]] = v49[v9[10]];
  v60 = v9[11];
  v61 = &v48[v60];
  v62 = &v49[v60];
  v63 = *(_QWORD *)v62;
  v61[8] = v62[8];
  *(_QWORD *)v61 = v63;
  return a1;
}

char *sub_23BA09120(char *a1, char *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a3[5];
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = *(_OWORD *)&a2[v5 + 16];
  *(_OWORD *)v6 = *(_OWORD *)&a2[v5];
  *((_OWORD *)v6 + 1) = v8;
  v9 = *(_QWORD *)&a2[v5 + 40];
  *((_QWORD *)v6 + 4) = *(_QWORD *)&a2[v5 + 32];
  *((_QWORD *)v6 + 5) = v9;
  v10 = (int *)type metadata accessor for CustomControlStyle(0);
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = sub_23BB8A334();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v16 = v10[7];
  v17 = &v6[v16];
  v18 = &v7[v16];
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(_OWORD *)(v17 + 25) = *(_OWORD *)(v18 + 25);
  v20 = v10[8];
  v21 = &v6[v20];
  v22 = &v7[v20];
  v23 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  v25 = v10[11];
  v26 = &v6[v25];
  v27 = &v7[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = a3[6];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *(_OWORD *)&a2[v28 + 16];
  *(_OWORD *)v29 = *(_OWORD *)&a2[v28];
  *((_OWORD *)v29 + 1) = v31;
  v32 = *(_QWORD *)&a2[v28 + 40];
  *((_QWORD *)v29 + 4) = *(_QWORD *)&a2[v28 + 32];
  *((_QWORD *)v29 + 5) = v32;
  v15(&a1[v28 + v10[6]], &a2[v28 + v10[6]], v14);
  v33 = v10[7];
  v34 = &v29[v33];
  v35 = &v30[v33];
  v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  *(_OWORD *)(v34 + 25) = *(_OWORD *)(v35 + 25);
  v37 = v10[8];
  v38 = &v29[v37];
  v39 = &v30[v37];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v40 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v29[v10[9]] = v30[v10[9]];
  v29[v10[10]] = v30[v10[10]];
  v41 = v10[11];
  v42 = &v29[v41];
  v43 = &v30[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = v43[8];
  v44 = a3[7];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = *(_OWORD *)&a2[v44 + 16];
  *(_OWORD *)v45 = *(_OWORD *)&a2[v44];
  *((_OWORD *)v45 + 1) = v47;
  v48 = *(_QWORD *)&a2[v44 + 40];
  *((_QWORD *)v45 + 4) = *(_QWORD *)&a2[v44 + 32];
  *((_QWORD *)v45 + 5) = v48;
  v15(&a1[v44 + v10[6]], &a2[v44 + v10[6]], v14);
  v49 = v10[7];
  v50 = &v45[v49];
  v51 = &v46[v49];
  v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  *(_OWORD *)(v50 + 25) = *(_OWORD *)(v51 + 25);
  v53 = v10[8];
  v54 = &v45[v53];
  v55 = &v46[v53];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v56 = sub_23BB892F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  v45[v10[9]] = v46[v10[9]];
  v45[v10[10]] = v46[v10[10]];
  v57 = v10[11];
  v58 = &v45[v57];
  v59 = &v46[v57];
  v58[8] = v59[8];
  *(_QWORD *)v58 = *(_QWORD *)v59;
  return a1;
}

_QWORD *sub_23BA0946C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v64;

  v3 = a3;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v6);
  v9 = *((_OWORD *)v8 + 1);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v9;
  v10 = *((_QWORD *)v8 + 5);
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = v10;
  swift_release();
  v11 = (int *)type metadata accessor for CustomControlStyle(0);
  v12 = v11[6];
  v13 = &v7[v12];
  v14 = &v8[v12];
  v15 = sub_23BB8A334();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v64 = v3;
  if (a1 != a2)
  {
    v17 = v11[7];
    v18 = &v8[v17];
    v19 = &v7[v17];
    sub_23B989D60((uint64_t)&v7[v17], qword_256A59CC0);
    v20 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v18;
    *((_OWORD *)v19 + 1) = v20;
    *(_OWORD *)(v19 + 25) = *(_OWORD *)(v18 + 25);
    v21 = v11[8];
    v22 = &v7[v21];
    v23 = &v8[v21];
    sub_23B989D9C((uint64_t)&v7[v21], type metadata accessor for CustomControlStyle.BackgroundSize);
    v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    v3 = v64;
  }
  v7[v11[9]] = v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  v26 = v11[11];
  v27 = &v7[v26];
  v28 = &v8[v26];
  v27[8] = v28[8];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = *(int *)(v3 + 24);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v29);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = *((_QWORD *)v31 + 5);
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  *((_QWORD *)v30 + 5) = v33;
  swift_release();
  v16(&v30[v11[6]], &v31[v11[6]], v15);
  if (a1 != a2)
  {
    v34 = v11[7];
    v35 = &v31[v34];
    v36 = &v30[v34];
    sub_23B989D60((uint64_t)&v30[v34], qword_256A59CC0);
    v37 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v36 = *(_OWORD *)v35;
    *((_OWORD *)v36 + 1) = v37;
    *(_OWORD *)(v36 + 25) = *(_OWORD *)(v35 + 25);
    v38 = v11[8];
    v39 = &v30[v38];
    v40 = &v31[v38];
    sub_23B989D9C((uint64_t)&v30[v38], type metadata accessor for CustomControlStyle.BackgroundSize);
    v41 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v42 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    v3 = v64;
  }
  v30[v11[9]] = v31[v11[9]];
  v30[v11[10]] = v31[v11[10]];
  v43 = v11[11];
  v44 = &v30[v43];
  v45 = &v31[v43];
  v44[8] = v45[8];
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v46 = *(int *)(v3 + 28);
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v46);
  v49 = *((_OWORD *)v48 + 1);
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *((_OWORD *)v47 + 1) = v49;
  v50 = *((_QWORD *)v48 + 5);
  *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
  *((_QWORD *)v47 + 5) = v50;
  swift_release();
  v16(&v47[v11[6]], &v48[v11[6]], v15);
  if (a1 != a2)
  {
    v51 = v11[7];
    v52 = &v48[v51];
    v53 = &v47[v51];
    sub_23B989D60((uint64_t)&v47[v51], qword_256A59CC0);
    v54 = *((_OWORD *)v52 + 1);
    *(_OWORD *)v53 = *(_OWORD *)v52;
    *((_OWORD *)v53 + 1) = v54;
    *(_OWORD *)(v53 + 25) = *(_OWORD *)(v52 + 25);
    v55 = v11[8];
    v56 = &v47[v55];
    v57 = &v48[v55];
    sub_23B989D9C((uint64_t)&v47[v55], type metadata accessor for CustomControlStyle.BackgroundSize);
    v58 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v59 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v56, v57, v59);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
  }
  v47[v11[9]] = v48[v11[9]];
  v47[v11[10]] = v48[v11[10]];
  v60 = v11[11];
  v61 = &v47[v60];
  v62 = &v48[v60];
  v61[8] = v62[8];
  *(_QWORD *)v61 = *(_QWORD *)v62;
  return a1;
}

uint64_t sub_23BA0987C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA09888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
}

uint64_t sub_23BA098D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA098E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for CustomControlStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v7);
}

uint64_t sub_23BA09930()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CustomControlStyle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23BA099AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  void *v70;
  const void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int *v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v26 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v26 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
    *(_WORD *)(a1 + 2) = *((_WORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = a2[1];
    v77 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v77;
    v78 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v78;
    v79 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v79;
    v80 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v80;
    v5 = a2[20];
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_QWORD *)(a1 + 160) = v5;
    v6 = *(int *)(a3 + 40);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    *(_QWORD *)(a1 + v6) = *(uint64_t *)((char *)a2 + v6);
    v81 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
    v9 = v81[5];
    v10 = v7 + v9;
    v83 = v8;
    v11 = v8 + v9;
    v12 = *(_OWORD *)(v8 + v9 + 24);
    *(_OWORD *)(v7 + v9 + 24) = v12;
    v13 = v12;
    v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v14(v10, v11, v13);
    *(_QWORD *)(v10 + 40) = *(_QWORD *)(v11 + 40);
    v15 = (int *)type metadata accessor for CustomControlStyle(0);
    v16 = v15[6];
    v17 = v10 + v16;
    v18 = v11 + v16;
    v19 = sub_23BB8A334();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_retain();
    v82 = v20;
    v20(v17, v18, v19);
    v21 = v15[7];
    v22 = v10 + v21;
    v23 = v11 + v21;
    v24 = *(_BYTE *)(v11 + v21 + 40);
    if ((v24 & 1) != 0)
    {
      v25 = *(_QWORD *)(v23 + 8);
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *(_QWORD *)(v22 + 8) = v25;
      swift_retain();
    }
    else
    {
      v27 = *(_OWORD *)(v23 + 24);
      *(_OWORD *)(v22 + 24) = v27;
      (**(void (***)(uint64_t))(v27 - 8))(v22);
    }
    *(_BYTE *)(v22 + 40) = v24;
    v28 = v15[8];
    v29 = (void *)(v10 + v28);
    v30 = (const void *)(v11 + v28);
    v31 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    *(_BYTE *)(v10 + v15[9]) = *(_BYTE *)(v11 + v15[9]);
    *(_BYTE *)(v10 + v15[10]) = *(_BYTE *)(v11 + v15[10]);
    v33 = v15[11];
    v34 = v10 + v33;
    v35 = v11 + v33;
    *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v36 = v81[6];
    v37 = v7 + v36;
    v38 = v83 + v36;
    v39 = *(_OWORD *)(v83 + v36 + 24);
    *(_OWORD *)(v7 + v36 + 24) = v39;
    (**(void (***)(uint64_t, uint64_t))(v39 - 8))(v7 + v36, v83 + v36);
    *(_QWORD *)(v37 + 40) = *(_QWORD *)(v38 + 40);
    v40 = v15[6];
    v41 = v37 + v40;
    v42 = v38 + v40;
    swift_retain();
    v20(v41, v42, v19);
    v43 = v15[7];
    v44 = v37 + v43;
    v45 = v38 + v43;
    v46 = *(_BYTE *)(v38 + v43 + 40);
    if ((v46 & 1) != 0)
    {
      v47 = *(_QWORD *)(v45 + 8);
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *(_QWORD *)(v44 + 8) = v47;
      swift_retain();
    }
    else
    {
      v48 = *(_OWORD *)(v45 + 24);
      *(_OWORD *)(v44 + 24) = v48;
      (**(void (***)(uint64_t))(v48 - 8))(v44);
    }
    *(_BYTE *)(v44 + 40) = v46;
    v49 = v15[8];
    v50 = (void *)(v37 + v49);
    v51 = (const void *)(v38 + v49);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v52 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    *(_BYTE *)(v37 + v15[9]) = *(_BYTE *)(v38 + v15[9]);
    *(_BYTE *)(v37 + v15[10]) = *(_BYTE *)(v38 + v15[10]);
    v53 = v15[11];
    v54 = v37 + v53;
    v55 = v38 + v53;
    *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    v56 = v81[7];
    v57 = v7 + v56;
    v58 = v83 + v56;
    v59 = *(_OWORD *)(v83 + v56 + 24);
    *(_OWORD *)(v7 + v56 + 24) = v59;
    (**(void (***)(uint64_t, uint64_t))(v59 - 8))(v7 + v56, v83 + v56);
    *(_QWORD *)(v57 + 40) = *(_QWORD *)(v58 + 40);
    v60 = v15[6];
    v61 = v57 + v60;
    v62 = v58 + v60;
    swift_retain();
    v82(v61, v62, v19);
    v63 = v15[7];
    v64 = v57 + v63;
    v65 = v58 + v63;
    v66 = *(_BYTE *)(v58 + v63 + 40);
    if ((v66 & 1) != 0)
    {
      v67 = *(_QWORD *)(v65 + 8);
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *(_QWORD *)(v64 + 8) = v67;
      swift_retain();
    }
    else
    {
      v68 = *(_OWORD *)(v65 + 24);
      *(_OWORD *)(v64 + 24) = v68;
      (**(void (***)(uint64_t))(v68 - 8))(v64);
    }
    *(_BYTE *)(v64 + 40) = v66;
    v69 = v15[8];
    v70 = (void *)(v57 + v69);
    v71 = (const void *)(v58 + v69);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v72 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    *(_BYTE *)(v57 + v15[9]) = *(_BYTE *)(v58 + v15[9]);
    *(_BYTE *)(v57 + v15[10]) = *(_BYTE *)(v58 + v15[10]);
    v73 = v15[11];
    v74 = v57 + v73;
    v75 = v58 + v73;
    *(_BYTE *)(v74 + 8) = *(_BYTE *)(v75 + 8);
    *(_QWORD *)v74 = *(_QWORD *)v75;
  }
  return v3;
}

uint64_t sub_23BA09F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
  v6 = v4 + v5[5];
  __swift_destroy_boxed_opaque_existential_1(v6);
  swift_release();
  v7 = (int *)type metadata accessor for CustomControlStyle(0);
  v8 = v6 + v7[6];
  v9 = sub_23BB8A334();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = v6 + v7[7];
  if ((*(_BYTE *)(v11 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v11);
  v12 = v6 + v7[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = v4 + v5[6];
  __swift_destroy_boxed_opaque_existential_1(v14);
  swift_release();
  v10(v14 + v7[6], v9);
  v15 = v14 + v7[7];
  if ((*(_BYTE *)(v15 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v15);
  v16 = v14 + v7[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  v18 = v4 + v5[7];
  __swift_destroy_boxed_opaque_existential_1(v18);
  swift_release();
  v10(v18 + v7[6], v9);
  v19 = v18 + v7[7];
  if ((*(_BYTE *)(v19 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v19);
  v20 = v18 + v7[8];
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v22 = sub_23BB892F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v20, v22);
  }
  return result;
}

uint64_t sub_23BA0A164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  int *v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v75 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v75;
  v76 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v76;
  v77 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v77;
  v78 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v78;
  v4 = *(_QWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = v4;
  v5 = *(int *)(a3 + 40);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_QWORD *)(a1 + v5) = *(_QWORD *)(a2 + v5);
  v79 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
  v8 = v79[5];
  v9 = v6 + v8;
  v81 = v7;
  v10 = v7 + v8;
  v11 = *(_OWORD *)(v7 + v8 + 24);
  *(_OWORD *)(v6 + v8 + 24) = v11;
  v12 = v11;
  v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13(v9, v10, v12);
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  v14 = (int *)type metadata accessor for CustomControlStyle(0);
  v15 = v14[6];
  v16 = v9 + v15;
  v17 = v10 + v15;
  v18 = sub_23BB8A334();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_retain();
  v80 = v19;
  v19(v16, v17, v18);
  v20 = v14[7];
  v21 = v9 + v20;
  v22 = v10 + v20;
  v23 = *(_BYTE *)(v10 + v20 + 40);
  if ((v23 & 1) != 0)
  {
    v24 = *(_QWORD *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = v24;
    swift_retain();
  }
  else
  {
    v25 = *(_OWORD *)(v22 + 24);
    *(_OWORD *)(v21 + 24) = v25;
    (**(void (***)(uint64_t))(v25 - 8))(v21);
  }
  *(_BYTE *)(v21 + 40) = v23;
  v26 = v14[8];
  v27 = (void *)(v9 + v26);
  v28 = (const void *)(v10 + v26);
  v29 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  *(_BYTE *)(v9 + v14[9]) = *(_BYTE *)(v10 + v14[9]);
  *(_BYTE *)(v9 + v14[10]) = *(_BYTE *)(v10 + v14[10]);
  v31 = v14[11];
  v32 = v9 + v31;
  v33 = v10 + v31;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v34 = v79[6];
  v35 = v6 + v34;
  v36 = v81 + v34;
  v37 = *(_OWORD *)(v81 + v34 + 24);
  *(_OWORD *)(v6 + v34 + 24) = v37;
  (**(void (***)(uint64_t, uint64_t))(v37 - 8))(v6 + v34, v81 + v34);
  *(_QWORD *)(v35 + 40) = *(_QWORD *)(v36 + 40);
  v38 = v14[6];
  v39 = v35 + v38;
  v40 = v36 + v38;
  swift_retain();
  v19(v39, v40, v18);
  v41 = v14[7];
  v42 = v35 + v41;
  v43 = v36 + v41;
  v44 = *(_BYTE *)(v36 + v41 + 40);
  if ((v44 & 1) != 0)
  {
    v45 = *(_QWORD *)(v43 + 8);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *(_QWORD *)(v42 + 8) = v45;
    swift_retain();
  }
  else
  {
    v46 = *(_OWORD *)(v43 + 24);
    *(_OWORD *)(v42 + 24) = v46;
    (**(void (***)(uint64_t))(v46 - 8))(v42);
  }
  *(_BYTE *)(v42 + 40) = v44;
  v47 = v14[8];
  v48 = (void *)(v35 + v47);
  v49 = (const void *)(v36 + v47);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  *(_BYTE *)(v35 + v14[9]) = *(_BYTE *)(v36 + v14[9]);
  *(_BYTE *)(v35 + v14[10]) = *(_BYTE *)(v36 + v14[10]);
  v51 = v14[11];
  v52 = v35 + v51;
  v53 = v36 + v51;
  *(_BYTE *)(v52 + 8) = *(_BYTE *)(v53 + 8);
  *(_QWORD *)v52 = *(_QWORD *)v53;
  v54 = v79[7];
  v55 = v6 + v54;
  v56 = v81 + v54;
  v57 = *(_OWORD *)(v81 + v54 + 24);
  *(_OWORD *)(v6 + v54 + 24) = v57;
  (**(void (***)(uint64_t, uint64_t))(v57 - 8))(v6 + v54, v81 + v54);
  *(_QWORD *)(v55 + 40) = *(_QWORD *)(v56 + 40);
  v58 = v14[6];
  v59 = v55 + v58;
  v60 = v56 + v58;
  swift_retain();
  v80(v59, v60, v18);
  v61 = v14[7];
  v62 = v55 + v61;
  v63 = v56 + v61;
  v64 = *(_BYTE *)(v56 + v61 + 40);
  if ((v64 & 1) != 0)
  {
    v65 = *(_QWORD *)(v63 + 8);
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *(_QWORD *)(v62 + 8) = v65;
    swift_retain();
  }
  else
  {
    v66 = *(_OWORD *)(v63 + 24);
    *(_OWORD *)(v62 + 24) = v66;
    (**(void (***)(uint64_t))(v66 - 8))(v62);
  }
  *(_BYTE *)(v62 + 40) = v64;
  v67 = v14[8];
  v68 = (void *)(v55 + v67);
  v69 = (const void *)(v56 + v67);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v70 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  *(_BYTE *)(v55 + v14[9]) = *(_BYTE *)(v56 + v14[9]);
  *(_BYTE *)(v55 + v14[10]) = *(_BYTE *)(v56 + v14[10]);
  v71 = v14[11];
  v72 = v55 + v71;
  v73 = v56 + v71;
  *(_BYTE *)(v72 + 8) = *(_BYTE *)(v73 + 8);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  return a1;
}

uint64_t sub_23BA0A690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v76;
  int *v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  int *v79;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_retain();
  swift_release();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  swift_retain();
  swift_release();
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_retain();
  swift_release();
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  swift_retain();
  swift_release();
  v16 = *(int *)(a3 + 40);
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v79 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
  v19 = v79[5];
  v20 = v17 + v19;
  v21 = v18 + v19;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v17 + v19), (uint64_t *)(v18 + v19));
  *(_QWORD *)(v20 + 40) = *(_QWORD *)(v21 + 40);
  swift_retain();
  swift_release();
  v22 = (int *)type metadata accessor for CustomControlStyle(0);
  v23 = v22[6];
  v24 = v20 + v23;
  v25 = v21 + v23;
  v26 = sub_23BB8A334();
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24);
  v78(v24, v25, v26);
  v76 = v18;
  if (a1 == a2)
  {
    v77 = v22 + 8;
  }
  else
  {
    v27 = v22[7];
    v28 = v20 + v27;
    v29 = v21 + v27;
    sub_23B989D60(v20 + v27, qword_256A59CC0);
    if ((*(_BYTE *)(v29 + 40) & 1) != 0)
    {
      v30 = *(_QWORD *)(v29 + 8);
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *(_QWORD *)(v28 + 8) = v30;
      *(_BYTE *)(v28 + 40) = 1;
      swift_retain();
    }
    else
    {
      v31 = *(_QWORD *)(v29 + 24);
      *(_QWORD *)(v28 + 24) = v31;
      *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
      (**(void (***)(uint64_t, uint64_t))(v31 - 8))(v28, v29);
      *(_BYTE *)(v28 + 40) = 0;
    }
    v32 = v22[8];
    v77 = v22 + 8;
    v33 = (void *)(v20 + v32);
    v34 = (const void *)(v21 + v32);
    sub_23B989D9C(v20 + v32, type metadata accessor for CustomControlStyle.BackgroundSize);
    v35 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v36 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    v18 = v76;
  }
  *(_BYTE *)(v20 + v22[9]) = *(_BYTE *)(v21 + v22[9]);
  *(_BYTE *)(v20 + v22[10]) = *(_BYTE *)(v21 + v22[10]);
  v37 = v22[11];
  v38 = v20 + v37;
  v39 = (uint64_t *)(v21 + v37);
  v40 = *v39;
  *(_BYTE *)(v38 + 8) = *((_BYTE *)v39 + 8);
  *(_QWORD *)v38 = v40;
  v41 = v79[6];
  v42 = v17 + v41;
  v43 = v18 + v41;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(v17 + v41), (uint64_t *)(v18 + v41));
  *(_QWORD *)(v42 + 40) = *(_QWORD *)(v43 + 40);
  swift_retain();
  swift_release();
  v78(v42 + v22[6], v43 + v22[6], v26);
  if (a1 != a2)
  {
    v44 = v22[7];
    v45 = v42 + v44;
    v46 = v43 + v44;
    sub_23B989D60(v42 + v44, qword_256A59CC0);
    if ((*(_BYTE *)(v46 + 40) & 1) != 0)
    {
      v47 = *(_QWORD *)(v46 + 8);
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(v45 + 8) = v47;
      *(_BYTE *)(v45 + 40) = 1;
      swift_retain();
    }
    else
    {
      v48 = *(_QWORD *)(v46 + 24);
      *(_QWORD *)(v45 + 24) = v48;
      *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
      (**(void (***)(uint64_t, uint64_t))(v48 - 8))(v45, v46);
      *(_BYTE *)(v45 + 40) = 0;
    }
    v49 = *v77;
    v50 = (void *)(v42 + v49);
    v51 = (const void *)(v43 + v49);
    sub_23B989D9C(v42 + v49, type metadata accessor for CustomControlStyle.BackgroundSize);
    v52 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v53 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v50, v51, v53);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    v18 = v76;
  }
  *(_BYTE *)(v42 + v22[9]) = *(_BYTE *)(v43 + v22[9]);
  *(_BYTE *)(v42 + v22[10]) = *(_BYTE *)(v43 + v22[10]);
  v54 = v22[11];
  v55 = v42 + v54;
  v56 = (uint64_t *)(v43 + v54);
  v57 = *v56;
  *(_BYTE *)(v55 + 8) = *((_BYTE *)v56 + 8);
  *(_QWORD *)v55 = v57;
  v58 = v79[7];
  v59 = (uint64_t *)(v17 + v58);
  v60 = v18 + v58;
  __swift_assign_boxed_opaque_existential_1(v59, (uint64_t *)(v18 + v58));
  v59[5] = *(_QWORD *)(v60 + 40);
  swift_retain();
  swift_release();
  v78((uint64_t)v59 + v22[6], v60 + v22[6], v26);
  if (a1 != a2)
  {
    v61 = v22[7];
    v62 = (char *)v59 + v61;
    v63 = v60 + v61;
    sub_23B989D60((uint64_t)v59 + v61, qword_256A59CC0);
    if ((*(_BYTE *)(v63 + 40) & 1) != 0)
    {
      v64 = *(_QWORD *)(v63 + 8);
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *((_QWORD *)v62 + 1) = v64;
      v62[40] = 1;
      swift_retain();
    }
    else
    {
      v65 = *(_QWORD *)(v63 + 24);
      *((_QWORD *)v62 + 3) = v65;
      *((_QWORD *)v62 + 4) = *(_QWORD *)(v63 + 32);
      (**(void (***)(char *, uint64_t))(v65 - 8))(v62, v63);
      v62[40] = 0;
    }
    v66 = *v77;
    v67 = (char *)v59 + v66;
    v68 = (const void *)(v60 + v66);
    sub_23B989D9C((uint64_t)v59 + v66, type metadata accessor for CustomControlStyle.BackgroundSize);
    v69 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v70 = sub_23BB892F0();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v67, v68, v70);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
  }
  *((_BYTE *)v59 + v22[9]) = *(_BYTE *)(v60 + v22[9]);
  *((_BYTE *)v59 + v22[10]) = *(_BYTE *)(v60 + v22[10]);
  v71 = v22[11];
  v72 = (char *)v59 + v71;
  v73 = (uint64_t *)(v60 + v71);
  v74 = *v73;
  v72[8] = *((_BYTE *)v73 + 8);
  *(_QWORD *)v72 = v74;
  return a1;
}

uint64_t sub_23BA0ACAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  int *v63;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 40);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_QWORD *)(a1 + v4) = *(_QWORD *)(a2 + v4);
  v63 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
  v7 = v63[5];
  v8 = v5 + v7;
  v9 = v6 + v7;
  v10 = *(_OWORD *)(v6 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(v6 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  v11 = *(_QWORD *)(v6 + v7 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v6 + v7 + 32);
  *(_QWORD *)(v8 + 40) = v11;
  v12 = (int *)type metadata accessor for CustomControlStyle(0);
  v13 = v12[6];
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_23BB8A334();
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v62(v14, v15, v16);
  v17 = v12[7];
  v18 = (_OWORD *)(v8 + v17);
  v19 = (_OWORD *)(v9 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  *(_OWORD *)((char *)v18 + 25) = *(_OWORD *)((char *)v19 + 25);
  v21 = v12[8];
  v22 = (void *)(v8 + v21);
  v23 = (const void *)(v9 + v21);
  v24 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  *(_BYTE *)(v8 + v12[9]) = *(_BYTE *)(v9 + v12[9]);
  *(_BYTE *)(v8 + v12[10]) = *(_BYTE *)(v9 + v12[10]);
  v26 = v12[11];
  v27 = v8 + v26;
  v28 = v9 + v26;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = v63[6];
  v30 = v5 + v29;
  v31 = v6 + v29;
  v32 = *(_OWORD *)(v6 + v29 + 16);
  *(_OWORD *)v30 = *(_OWORD *)(v6 + v29);
  *(_OWORD *)(v30 + 16) = v32;
  v33 = *(_QWORD *)(v6 + v29 + 40);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v6 + v29 + 32);
  *(_QWORD *)(v30 + 40) = v33;
  v62(v5 + v29 + v12[6], v6 + v29 + v12[6], v16);
  v34 = v12[7];
  v35 = (_OWORD *)(v30 + v34);
  v36 = (_OWORD *)(v31 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  *(_OWORD *)((char *)v35 + 25) = *(_OWORD *)((char *)v36 + 25);
  v38 = v12[8];
  v39 = (void *)(v30 + v38);
  v40 = (const void *)(v31 + v38);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v41 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  *(_BYTE *)(v30 + v12[9]) = *(_BYTE *)(v31 + v12[9]);
  *(_BYTE *)(v30 + v12[10]) = *(_BYTE *)(v31 + v12[10]);
  v42 = v12[11];
  v43 = v30 + v42;
  v44 = v31 + v42;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v45 = v63[7];
  v46 = v5 + v45;
  v47 = v6 + v45;
  v48 = *(_OWORD *)(v6 + v45 + 16);
  *(_OWORD *)v46 = *(_OWORD *)(v6 + v45);
  *(_OWORD *)(v46 + 16) = v48;
  v49 = *(_QWORD *)(v6 + v45 + 40);
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(v6 + v45 + 32);
  *(_QWORD *)(v46 + 40) = v49;
  v62(v5 + v45 + v12[6], v6 + v45 + v12[6], v16);
  v50 = v12[7];
  v51 = (_OWORD *)(v46 + v50);
  v52 = (_OWORD *)(v47 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  *(_OWORD *)((char *)v51 + 25) = *(_OWORD *)((char *)v52 + 25);
  v54 = v12[8];
  v55 = (void *)(v46 + v54);
  v56 = (const void *)(v47 + v54);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v57 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  *(_BYTE *)(v46 + v12[9]) = *(_BYTE *)(v47 + v12[9]);
  *(_BYTE *)(v46 + v12[10]) = *(_BYTE *)(v47 + v12[10]);
  v58 = v12[11];
  v59 = v46 + v58;
  v60 = v47 + v58;
  *(_BYTE *)(v59 + 8) = *(_BYTE *)(v60 + 8);
  *(_QWORD *)v59 = *(_QWORD *)v60;
  return a1;
}

uint64_t sub_23BA0B07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  __int128 v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  int *v68;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_release();
  v6 = *(int *)(a3 + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + v6) = *(_QWORD *)(a2 + v6);
  v68 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
  v9 = v68[5];
  v10 = v7 + v9;
  v11 = v8 + v9;
  __swift_destroy_boxed_opaque_existential_1(v7 + v9);
  v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  v13 = *(_QWORD *)(v11 + 40);
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(v11 + 32);
  *(_QWORD *)(v10 + 40) = v13;
  swift_release();
  v14 = (int *)type metadata accessor for CustomControlStyle(0);
  v15 = v14[6];
  v16 = v10 + v15;
  v17 = v11 + v15;
  v18 = sub_23BB8A334();
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40);
  v67(v16, v17, v18);
  v66 = v8;
  if (a1 != a2)
  {
    v19 = v14[7];
    v20 = (_OWORD *)(v11 + v19);
    v21 = (_OWORD *)(v10 + v19);
    sub_23B989D60(v10 + v19, qword_256A59CC0);
    v22 = v20[1];
    *v21 = *v20;
    v21[1] = v22;
    *(_OWORD *)((char *)v21 + 25) = *(_OWORD *)((char *)v20 + 25);
    v23 = v14[8];
    v24 = (void *)(v10 + v23);
    v25 = (const void *)(v11 + v23);
    sub_23B989D9C(v10 + v23, type metadata accessor for CustomControlStyle.BackgroundSize);
    v26 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    v8 = v66;
  }
  *(_BYTE *)(v10 + v14[9]) = *(_BYTE *)(v11 + v14[9]);
  *(_BYTE *)(v10 + v14[10]) = *(_BYTE *)(v11 + v14[10]);
  v28 = v14[11];
  v29 = v10 + v28;
  v30 = v11 + v28;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v31 = v68[6];
  v32 = v7 + v31;
  v33 = v8 + v31;
  __swift_destroy_boxed_opaque_existential_1(v7 + v31);
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  v35 = *(_QWORD *)(v33 + 40);
  *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
  *(_QWORD *)(v32 + 40) = v35;
  swift_release();
  v67(v32 + v14[6], v33 + v14[6], v18);
  if (a1 != a2)
  {
    v36 = v14[7];
    v37 = (_OWORD *)(v33 + v36);
    v38 = (_OWORD *)(v32 + v36);
    sub_23B989D60(v32 + v36, qword_256A59CC0);
    v39 = v37[1];
    *v38 = *v37;
    v38[1] = v39;
    *(_OWORD *)((char *)v38 + 25) = *(_OWORD *)((char *)v37 + 25);
    v40 = v14[8];
    v41 = (void *)(v32 + v40);
    v42 = (const void *)(v33 + v40);
    sub_23B989D9C(v32 + v40, type metadata accessor for CustomControlStyle.BackgroundSize);
    v43 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v41, v42, v44);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    v8 = v66;
  }
  *(_BYTE *)(v32 + v14[9]) = *(_BYTE *)(v33 + v14[9]);
  *(_BYTE *)(v32 + v14[10]) = *(_BYTE *)(v33 + v14[10]);
  v45 = v14[11];
  v46 = v32 + v45;
  v47 = v33 + v45;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v48 = v68[7];
  v49 = v7 + v48;
  v50 = v8 + v48;
  __swift_destroy_boxed_opaque_existential_1(v49);
  v51 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v51;
  v52 = *(_QWORD *)(v50 + 40);
  *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
  *(_QWORD *)(v49 + 40) = v52;
  swift_release();
  v67(v49 + v14[6], v50 + v14[6], v18);
  if (a1 != a2)
  {
    v53 = v14[7];
    v54 = (_OWORD *)(v50 + v53);
    v55 = (_OWORD *)(v49 + v53);
    sub_23B989D60(v49 + v53, qword_256A59CC0);
    v56 = v54[1];
    *v55 = *v54;
    v55[1] = v56;
    *(_OWORD *)((char *)v55 + 25) = *(_OWORD *)((char *)v54 + 25);
    v57 = v14[8];
    v58 = (void *)(v49 + v57);
    v59 = (const void *)(v50 + v57);
    sub_23B989D9C(v49 + v57, type metadata accessor for CustomControlStyle.BackgroundSize);
    v60 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v61 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v58, v59, v61);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
  }
  *(_BYTE *)(v49 + v14[9]) = *(_BYTE *)(v50 + v14[9]);
  *(_BYTE *)(v49 + v14[10]) = *(_BYTE *)(v50 + v14[10]);
  v62 = v14[11];
  v63 = v49 + v62;
  v64 = v50 + v62;
  *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
  *(_QWORD *)v63 = *(_QWORD *)v64;
  return a1;
}

uint64_t sub_23BA0B578()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA0B584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for QuickSendActionsModule.Style(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t sub_23BA0B600()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA0B60C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for QuickSendActionsModule.Style(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for QuickSendActionsModule(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5C6A0);
}

uint64_t sub_23BA0B694()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for QuickSendActionsModule.Style(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BA0B724()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA0B734@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  double (**v66)@<D0>(uint64_t@<X8>);
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  double (**v94)@<D0>(uint64_t@<X8>);
  unsigned __int8 *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  int *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  double (**v113)@<D0>(uint64_t@<X8>);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;

  v190 = a1;
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C6F0);
  MEMORY[0x24BDAC7A8](v189, v2);
  v181 = (uint64_t)&v158 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = type metadata accessor for CustomMenuStyle(0);
  MEMORY[0x24BDAC7A8](v174, v4);
  v165 = (uint64_t)&v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E30);
  MEMORY[0x24BDAC7A8](v173, v6);
  v164 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E38);
  v167 = *(_QWORD *)(v175 - 8);
  v9 = MEMORY[0x24BDAC7A8](v175, v8);
  v163 = (char *)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v166 = (char *)&v158 - v12;
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C6F8);
  MEMORY[0x24BDAC7A8](v170, v13);
  v171 = (char *)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C700);
  v178 = *(_QWORD *)(v15 - 8);
  v179 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v172 = (char *)&v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C708);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v180 = (uint64_t)&v158 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v182 = (uint64_t)&v158 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C710);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v177 = (uint64_t)&v158 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v28);
  v193 = (uint64_t)&v158 - v29;
  v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C718);
  MEMORY[0x24BDAC7A8](v187, v30);
  v186 = (uint64_t)&v158 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C720);
  MEMORY[0x24BDAC7A8](v188, v32);
  v176 = (uint64_t *)((char *)&v158 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v192 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v192, v34);
  v183 = (uint64_t)&v158 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = type metadata accessor for QuickSendActionsModule(0);
  v36 = *(_QWORD *)(v185 - 8);
  v37 = *(_QWORD *)(v36 + 64);
  MEMORY[0x24BDAC7A8](v185, v38);
  v39 = (char *)&v158 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v40, v41);
  v43 = (char *)&v158 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A5B8);
  MEMORY[0x24BDAC7A8](v44, v45);
  v47 = (char *)&v158 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C728);
  v50 = MEMORY[0x24BDAC7A8](v48, v49);
  v52 = (char *)&v158 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50, v53);
  v55 = *v1;
  v184 = (char *)&v158 - v56;
  v191 = v54;
  if (v55 == 1)
  {
    v57 = sub_23BB8929C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v43, 1, 1, v57);
    sub_23B989CE8((uint64_t)v1, (uint64_t)&v158 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for QuickSendActionsModule);
    v58 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v59 = swift_allocObject();
    sub_23BA0CE00((uint64_t)v39, v59 + v58);
    v60 = &v47[v44[12]];
    v194 = 0;
    sub_23BB8A0C4();
    v61 = v196;
    *v60 = v195;
    *((_QWORD *)v60 + 1) = v61;
    v62 = &v47[v44[13]];
    v194 = 0;
    sub_23BB8A0C4();
    v63 = v196;
    *v62 = v195;
    *((_QWORD *)v62 + 1) = v63;
    sub_23B990D24((uint64_t)v43, (uint64_t)v47, &qword_256A599A0);
    v64 = &v47[v44[9]];
    *(_QWORD *)v64 = &unk_256A5C780;
    *((_QWORD *)v64 + 1) = v59;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = sub_23BA0CC4C;
    *(_QWORD *)(v65 + 24) = 0;
    v66 = (double (**)@<D0>(uint64_t@<X8>))&v47[v44[10]];
    *v66 = sub_23BA0D31C;
    v66[1] = (double (*)@<D0>(uint64_t@<X8>))v65;
    v47[v44[11]] = 0;
    v67 = &v1[*(int *)(v185 + 40)];
    v68 = (uint64_t)&v67[*(int *)(type metadata accessor for QuickSendActionsModule.Style(0) + 24)];
    v69 = v183;
    sub_23B989CE8(v68, v183, type metadata accessor for CustomControlStyle);
    sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    sub_23BB89D94();
    sub_23B989D9C(v69, type metadata accessor for CustomButtonStyle);
    sub_23B989D60((uint64_t)v47, &qword_256A5A5B8);
    v70 = v191;
    v71 = v184;
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v184, v52, v48);
    v72 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    v73 = v70;
    v72(v52, v71, v48);
    v74 = (uint64_t)v176;
    *v176 = 0;
    *(_BYTE *)(v74 + 8) = 1;
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C788);
    v72((char *)(v74 + *(int *)(v75 + 48)), v52, v48);
    v76 = v74 + *(int *)(v75 + 64);
    *(_QWORD *)v76 = 0;
    *(_BYTE *)(v76 + 8) = 1;
    v77 = *(void (**)(char *, uint64_t))(v73 + 8);
    v77(v52, v48);
    sub_23B989EFC(v74, v186, &qword_256A5C720);
    swift_storeEnumTagMultiPayload();
    v78 = MEMORY[0x24BDF5428];
    sub_23B996E1C(&qword_256A5C738, &qword_256A5C720, MEMORY[0x24BDF5428]);
    sub_23B996E1C(&qword_256A5C740, &qword_256A5C6F0, v78);
    sub_23BB89944();
    sub_23B989D60(v74, &qword_256A5C720);
    return ((uint64_t (*)(char *, uint64_t))v77)(v71, v48);
  }
  else
  {
    v161 = v36;
    v162 = v37;
    v168 = (uint64_t)&v158 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    v169 = v43;
    v160 = v52;
    v80 = (uint64_t)v1;
    v81 = 1;
    v82 = v1[1] == 1;
    v176 = (_QWORD *)v48;
    if (v82)
    {
      v83 = sub_23BB8929C();
      v84 = (uint64_t)v169;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v169, 1, 1, v83);
      v85 = v168;
      sub_23B989CE8((uint64_t)v1, v168, type metadata accessor for QuickSendActionsModule);
      v86 = (*(unsigned __int8 *)(v161 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
      v87 = swift_allocObject();
      sub_23BA0CE00(v85, v87 + v86);
      v88 = &v47[v44[12]];
      v194 = 0;
      sub_23BB8A0C4();
      v89 = v196;
      *v88 = v195;
      *((_QWORD *)v88 + 1) = v89;
      v90 = &v47[v44[13]];
      v194 = 0;
      sub_23BB8A0C4();
      v91 = v196;
      *v90 = v195;
      *((_QWORD *)v90 + 1) = v91;
      sub_23B990D24(v84, (uint64_t)v47, &qword_256A599A0);
      v92 = &v47[v44[9]];
      *(_QWORD *)v92 = &unk_256A5C770;
      *((_QWORD *)v92 + 1) = v87;
      v93 = swift_allocObject();
      *(_QWORD *)(v93 + 16) = sub_23BA0C9B8;
      *(_QWORD *)(v93 + 24) = 0;
      v94 = (double (**)@<D0>(uint64_t@<X8>))&v47[v44[10]];
      *v94 = sub_23BA0D31C;
      v94[1] = (double (*)@<D0>(uint64_t@<X8>))v93;
      v47[v44[11]] = 1;
      v95 = &v1[*(int *)(v185 + 40)];
      v96 = type metadata accessor for QuickSendActionsModule.Style(0);
      v97 = v183;
      sub_23B989CE8((uint64_t)&v95[*(int *)(v96 + 20)], v183, type metadata accessor for CustomControlStyle);
      sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v98 = v184;
      sub_23BB89D94();
      sub_23B989D9C(v97, type metadata accessor for CustomButtonStyle);
      sub_23B989D60((uint64_t)v47, &qword_256A5A5B8);
      (*(void (**)(uint64_t, char *, _QWORD *))(v191 + 32))(v193, v98, v176);
      v54 = v191;
      v48 = (uint64_t)v176;
      v81 = 0;
    }
    v99 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v193, v81, 1, v48);
    v100 = (uint64_t)v169;
    v101 = v168;
    if (*(_BYTE *)(v80 + 2) == 1)
    {
      v159 = v44;
      if (*(_BYTE *)(v80 + 3) == 1)
      {
        v102 = sub_23BB8929C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v100, 1, 1, v102);
        sub_23B989CE8(v80, v101, type metadata accessor for QuickSendActionsModule);
        v103 = v80;
        v104 = (*(unsigned __int8 *)(v161 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
        v105 = swift_allocObject();
        sub_23BA0CE00(v101, v105 + v104);
        v106 = v159;
        v107 = &v47[v159[12]];
        v194 = 0;
        sub_23BB8A0C4();
        v108 = v196;
        *v107 = v195;
        *((_QWORD *)v107 + 1) = v108;
        v109 = &v47[v106[13]];
        v194 = 0;
        sub_23BB8A0C4();
        v110 = v196;
        *v109 = v195;
        *((_QWORD *)v109 + 1) = v110;
        sub_23B990D24(v100, (uint64_t)v47, &qword_256A599A0);
        v111 = &v47[v106[9]];
        *(_QWORD *)v111 = &unk_256A5C760;
        *((_QWORD *)v111 + 1) = v105;
        v112 = swift_allocObject();
        *(_QWORD *)(v112 + 16) = sub_23BA0CB24;
        *(_QWORD *)(v112 + 24) = 0;
        v113 = (double (**)@<D0>(uint64_t@<X8>))&v47[v106[10]];
        *v113 = sub_23BA0D20C;
        v113[1] = (double (*)@<D0>(uint64_t@<X8>))v112;
        v47[v106[11]] = 1;
        v114 = v103 + *(int *)(v185 + 40);
        v115 = type metadata accessor for QuickSendActionsModule.Style(0);
        v116 = v183;
        sub_23B989CE8(v114 + *(int *)(v115 + 28), v183, type metadata accessor for CustomControlStyle);
        v117 = sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
        v118 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
        v119 = v160;
        v120 = v192;
        sub_23BB89D94();
        sub_23B989D9C(v116, type metadata accessor for CustomButtonStyle);
        sub_23B989D60((uint64_t)v47, &qword_256A5A5B8);
        v121 = v191;
        v122 = v184;
        v123 = v176;
        (*(void (**)(char *, char *, _QWORD *))(v191 + 32))(v184, v119, v176);
        (*(void (**)(char *, char *, _QWORD *))(v121 + 16))(v171, v122, v123);
        swift_storeEnumTagMultiPayload();
        v195 = (uint64_t)v106;
        v196 = v120;
        v197 = v117;
        v198 = v118;
        swift_getOpaqueTypeConformance2();
        v124 = sub_23B996E1C(&qword_256A59E68, &qword_256A59E30, (uint64_t)&unk_23BB94700);
        v125 = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
        v195 = v173;
        v196 = v174;
        v197 = v124;
        v198 = v125;
        swift_getOpaqueTypeConformance2();
        v126 = (uint64_t)v172;
        sub_23BB89944();
        (*(void (**)(char *, _QWORD *))(v121 + 8))(v122, v123);
      }
      else
      {
        sub_23B989CE8(v80, v168, type metadata accessor for QuickSendActionsModule);
        v127 = (*(unsigned __int8 *)(v161 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
        v128 = swift_allocObject();
        sub_23BA0CE00(v101, v128 + v127);
        v129 = sub_23BB897D0();
        v130 = v80;
        v132 = v131;
        v134 = v133;
        v136 = v135;
        v137 = v173;
        v138 = (uint64_t)v164;
        sub_23BB8986C();
        *(_QWORD *)v138 = &unk_256A5C750;
        *(_QWORD *)(v138 + 8) = v128;
        *(_QWORD *)(v138 + 16) = v129;
        *(_QWORD *)(v138 + 24) = v132;
        *(_BYTE *)(v138 + 32) = v134 & 1;
        *(_QWORD *)(v138 + 40) = v136;
        v139 = v130 + *(int *)(v185 + 40);
        v140 = type metadata accessor for QuickSendActionsModule.Style(0);
        v141 = v165;
        sub_23B989CE8(v139 + *(int *)(v140 + 28), v165, type metadata accessor for CustomControlStyle);
        v142 = sub_23B996E1C(&qword_256A59E68, &qword_256A59E30, (uint64_t)&unk_23BB94700);
        v143 = sub_23B97D0C8(&qword_256A59E70, type metadata accessor for CustomMenuStyle, (uint64_t)&unk_23BB96F0C);
        v144 = v163;
        v145 = v174;
        sub_23BB89F5C();
        sub_23B989D9C(v141, type metadata accessor for CustomMenuStyle);
        sub_23B989D60(v138, &qword_256A59E30);
        v146 = v167;
        v147 = v166;
        v148 = v175;
        (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v166, v144, v175);
        (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v171, v147, v148);
        swift_storeEnumTagMultiPayload();
        v149 = sub_23B996E1C(&qword_256A5A5B0, &qword_256A5A5B8, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
        v150 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
        v195 = (uint64_t)v159;
        v196 = v192;
        v197 = v149;
        v198 = v150;
        swift_getOpaqueTypeConformance2();
        v195 = v137;
        v196 = v145;
        v197 = v142;
        v198 = v143;
        swift_getOpaqueTypeConformance2();
        v126 = (uint64_t)v172;
        sub_23BB89944();
        (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v148);
      }
      sub_23B990D24(v126, v182, &qword_256A5C700);
      v99 = 0;
    }
    v151 = v182;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v178 + 56))(v182, v99, 1, v179);
    v152 = v193;
    v153 = v177;
    sub_23B989EFC(v193, v177, &qword_256A5C710);
    v154 = v180;
    sub_23B989EFC(v151, v180, &qword_256A5C708);
    v155 = v181;
    sub_23B989EFC(v153, v181, &qword_256A5C710);
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C730);
    sub_23B989EFC(v154, v155 + *(int *)(v156 + 48), &qword_256A5C708);
    sub_23B989D60(v154, &qword_256A5C708);
    sub_23B989D60(v153, &qword_256A5C710);
    sub_23B989EFC(v155, v186, &qword_256A5C6F0);
    swift_storeEnumTagMultiPayload();
    v157 = MEMORY[0x24BDF5428];
    sub_23B996E1C(&qword_256A5C738, &qword_256A5C720, MEMORY[0x24BDF5428]);
    sub_23B996E1C(&qword_256A5C740, &qword_256A5C6F0, v157);
    sub_23BB89944();
    sub_23B989D60(v155, &qword_256A5C6F0);
    sub_23B989D60(v151, &qword_256A5C708);
    return sub_23B989D60(v152, &qword_256A5C710);
  }
}

uint64_t sub_23BA0C8A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v1[4] = sub_23BB8A988();
  v1[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA0C914()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 16) + 24) + *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_23BA0C96C;
  return v3();
}

uint64_t sub_23BA0C96C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA0C9B8@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23BA0C9DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v1[4] = sub_23BB8A988();
  v1[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA0CA48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, _QWORD);

  v3 = (uint64_t (*)(uint64_t, _QWORD))(**(int **)(*(_QWORD *)(v0 + 16) + 104)
                                               + *(_QWORD *)(*(_QWORD *)(v0 + 16) + 104));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_23BA0CAA8;
  return v3(2, 0);
}

uint64_t sub_23BA0CAA8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA0CAF4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA0CB24@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23BA0CB40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  sub_23BB8A9F4();
  v1[3] = sub_23BB8A9E8();
  v1[4] = sub_23BB8A988();
  v1[5] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA0CBAC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  _QWORD *v9;
  uint64_t (*v11)(double, double, double, double, double, double);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (*(double (**)(void))(v1 + 8))();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v11 = (uint64_t (*)(double, double, double, double, double, double))(**(int **)(v1 + 120)
                                                                               + *(_QWORD *)(v1 + 120));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v9;
  *v9 = v0;
  v9[1] = sub_23BA0C96C;
  return v11(v2, v4, v2, v4, v6, v8);
}

uint64_t sub_23BA0CC4C@<X0>(uint64_t a1@<X8>)
{
  return sub_23B9959E4(a1);
}

uint64_t sub_23BA0CC70(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  sub_23BB8A9F4();
  v2[4] = sub_23BB8A9E8();
  v2[5] = sub_23BB8A988();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_23BA0CCDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD);

  v3 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0[3] + 104) + *(_QWORD *)(v0[3] + 104));
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_23B9A559C;
  return v3(v0[2], 0);
}

uint64_t sub_23BA0CD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(v3 + *(int *)(MEMORY[0x24BDAC7A8](a1, a2) + 40));
  sub_23B989CE8(v3, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for QuickSendActionsModule);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  result = sub_23BA0CE00((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(_QWORD *)a3 = v7;
  *(_WORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = sub_23BA0CE44;
  *(_QWORD *)(a3 + 24) = v9;
  return result;
}

uint64_t sub_23BA0CE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for QuickSendActionsModule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA0CE44@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for QuickSendActionsModule(0);
  return sub_23BA0B734(a1);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for QuickSendActionsModule(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(v1 + 40);
  v4 = (int *)type metadata accessor for QuickSendActionsModule.Style(0);
  v5 = v3 + v4[5];
  __swift_destroy_boxed_opaque_existential_1(v5);
  swift_release();
  v6 = (int *)type metadata accessor for CustomControlStyle(0);
  v7 = v5 + v6[6];
  v8 = sub_23BB8A334();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = v5 + v6[7];
  if ((*(_BYTE *)(v10 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v10);
  v11 = v5 + v6[8];
  type metadata accessor for CustomControlStyle.BackgroundSize(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = v3 + v4[6];
  __swift_destroy_boxed_opaque_existential_1(v13);
  swift_release();
  v9(v13 + v6[6], v8);
  v14 = v13 + v6[7];
  if ((*(_BYTE *)(v14 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v14);
  v15 = v13 + v6[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  v17 = v3 + v4[7];
  __swift_destroy_boxed_opaque_existential_1(v17);
  swift_release();
  v9(v17 + v6[6], v8);
  v18 = v17 + v6[7];
  if ((*(_BYTE *)(v18 + 40) & 1) != 0)
    swift_release();
  else
    __swift_destroy_boxed_opaque_existential_1(v18);
  v19 = v17 + v6[8];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  return swift_deallocObject();
}

uint64_t sub_23BA0D114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for QuickSendActionsModule(0) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B990D68;
  return sub_23BA0CC70(a1, v5);
}

uint64_t sub_23BA0D184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for QuickSendActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B97C964;
  return sub_23BA0C9DC(v3);
}

uint64_t sub_23BA0D1E8()
{
  swift_release();
  return swift_deallocObject();
}

double sub_23BA0D20C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B9B9D54(*(void (**)(__int128 *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_23BA0D218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for QuickSendActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BA0C8A8(v3);
}

uint64_t sub_23BA0D280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for QuickSendActionsModule(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23B990D68;
  return sub_23BA0CB40(v3);
}

uint64_t sub_23BA0D2E4()
{
  return sub_23B996E1C(&qword_256A5C790, &qword_256A5C798, (uint64_t)&unk_23BB985B0);
}

FindMyUICore::DynamicControlsStack __swiftcall DynamicControlsStack.init(controls:isSameWidthWhenHorizontal:isSameWidthWhenVertical:)(Swift::OpaquePointer controls, Swift::Bool isSameWidthWhenHorizontal, Swift::Bool isSameWidthWhenVertical)
{
  uint64_t v3;
  FindMyUICore::DynamicControlsStack result;

  *(Swift::OpaquePointer *)v3 = controls;
  *(_BYTE *)(v3 + 8) = isSameWidthWhenHorizontal;
  *(_BYTE *)(v3 + 9) = isSameWidthWhenVertical;
  result.controls = controls;
  result.isSameWidthWhenHorizontal = isSameWidthWhenHorizontal;
  return result;
}

uint64_t DynamicControlsStack.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  char v24;
  uint64_t v25;
  int v26;
  uint64_t KeyPath;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = a1;
  v2 = sub_23BB89578();
  v41 = *(_QWORD *)(v2 - 8);
  v42 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB89968();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7A0);
  MEMORY[0x24BDAC7A8](v38, v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7A8);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7B0);
  MEMORY[0x24BDAC7A8](v37, v18);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)v1;
  v21 = *(unsigned __int8 *)(v1 + 8);
  v34 = *(unsigned __int8 *)(v1 + 9);
  v35 = v21;
  v22 = sub_23BB89B78();
  v23 = sub_23BB89B90();
  v24 = sub_23BB89B84();
  sub_23BB89B84();
  if (sub_23BB89B84() != v22)
    v24 = sub_23BB89B84();
  sub_23BB89B84();
  if (sub_23BB89B84() != v23)
    v24 = sub_23BB89B84();
  *v12 = v24;
  v25 = (uint64_t)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7B8) + 44)];
  if (v34)
    v26 = 256;
  else
    v26 = 0;
  sub_23BA0D634(v36, v26 | v35, v25);
  sub_23BB8995C();
  sub_23B996E1C(&qword_256A5C7C0, &qword_256A5C7A0, MEMORY[0x24BDEBE40]);
  sub_23BB89E48();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v40);
  sub_23B989D60((uint64_t)v12, &qword_256A5C7A0);
  sub_23BB8956C();
  KeyPath = swift_getKeyPath();
  v28 = (uint64_t *)&v20[*(int *)(v37 + 36)];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7C8);
  v31 = v41;
  v30 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v28 + *(int *)(v29 + 28), v5, v42);
  *v28 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v17, v13);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v30);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return sub_23BA0DB34((uint64_t)v20, v43);
}

uint64_t sub_23BA0D634@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7E0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v30 = (uint64_t)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7E8);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v29 = (uint64_t)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)v28 - v17;
  *(_QWORD *)v18 = sub_23BB89788();
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  v28[1] = &v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7F0) + 44)];
  v32 = a1;
  v19 = swift_allocObject();
  v20 = a2 & 1;
  *(_BYTE *)(v19 + 16) = a2 & 1;
  *(_QWORD *)(v19 + 24) = a1;
  *(_BYTE *)(v19 + 32) = a2 & 1;
  v21 = (a2 >> 8) & 1;
  *(_BYTE *)(v19 + 33) = v21;
  swift_bridgeObjectRetain_n();
  v28[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7F8);
  sub_23B996E1C(&qword_256A5C800, &qword_256A5C7F8, MEMORY[0x24BEE12D8]);
  sub_23BA0DE00();
  sub_23BA0DE44();
  sub_23BB8A208();
  *(_QWORD *)v11 = sub_23BB89848();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C818);
  v32 = a1;
  v22 = swift_allocObject();
  *(_BYTE *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = a1;
  *(_BYTE *)(v22 + 32) = v20;
  *(_BYTE *)(v22 + 33) = v21;
  swift_bridgeObjectRetain_n();
  sub_23BB8A208();
  v23 = v29;
  sub_23B989EFC((uint64_t)v18, v29, &qword_256A5C7E8);
  v24 = v30;
  sub_23B989EFC((uint64_t)v11, v30, &qword_256A5C7E0);
  v25 = v31;
  sub_23B989EFC(v23, v31, &qword_256A5C7E8);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C820);
  sub_23B989EFC(v24, v25 + *(int *)(v26 + 48), &qword_256A5C7E0);
  sub_23B989D60((uint64_t)v11, &qword_256A5C7E0);
  sub_23B989D60((uint64_t)v18, &qword_256A5C7E8);
  sub_23B989D60(v24, &qword_256A5C7E0);
  return sub_23B989D60(v23, &qword_256A5C7E8);
}

uint64_t sub_23BA0D94C@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t KeyPath;
  char v17;
  uint64_t v18;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  v12 = a1[7];
  v13 = a1[8];
  if ((a2 & 1) != 0)
    swift_bridgeObjectRetain();
  else
    a3 = MEMORY[0x24BEE4AF8];
  sub_23BA0DEAC(v5, v6, v7, v8, v9, v10);
  sub_23BB8A0C4();
  KeyPath = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a4 = v5;
  *(_QWORD *)(a4 + 8) = v6;
  *(_QWORD *)(a4 + 16) = v7;
  *(_QWORD *)(a4 + 24) = v8;
  *(_QWORD *)(a4 + 32) = v9;
  *(_QWORD *)(a4 + 40) = v10;
  *(_QWORD *)(a4 + 48) = v11;
  *(_QWORD *)(a4 + 56) = v12;
  *(_QWORD *)(a4 + 64) = v13;
  *(_QWORD *)(a4 + 72) = a3;
  *(_BYTE *)(a4 + 80) = v17;
  *(_QWORD *)(a4 + 88) = v18;
  *(_QWORD *)(a4 + 96) = KeyPath;
  *(_BYTE *)(a4 + 104) = 0;
  *(_QWORD *)(a4 + 112) = result;
  *(_BYTE *)(a4 + 120) = 0;
  return result;
}

uint64_t sub_23BA0DA74()
{
  return sub_23BB89620();
}

uint64_t sub_23BA0DA94()
{
  return sub_23BB89620();
}

uint64_t sub_23BA0DAB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_23BB89578();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23BB8962C();
}

uint64_t sub_23BA0DB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA0DB7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA0DB90(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DynamicControlsStack(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for DynamicControlsStack(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicControlsStack(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 10))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicControlsStack(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicControlsStack()
{
  return &type metadata for DynamicControlsStack;
}

unint64_t sub_23BA0DD0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A5C7D0;
  if (!qword_256A5C7D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5C7B0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5C7A0);
    v2[3] = sub_23B996E1C(&qword_256A5C7C0, &qword_256A5C7A0, MEMORY[0x24BDEBE40]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23B996E1C(&qword_256A5C7D8, &qword_256A5C7C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5C7D0);
  }
  return result;
}

uint64_t sub_23BA0DDD8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23BA0DE00()
{
  unint64_t result;

  result = qword_256A5C808;
  if (!qword_256A5C808)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl, &type metadata for GenericControl);
    atomic_store(result, (unint64_t *)&qword_256A5C808);
  }
  return result;
}

unint64_t sub_23BA0DE44()
{
  unint64_t result;

  result = qword_256A5C810;
  if (!qword_256A5C810)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl.Info, &type metadata for GenericControl.Info);
    atomic_store(result, (unint64_t *)&qword_256A5C810);
  }
  return result;
}

uint64_t sub_23BA0DE88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BA0D94C(a1, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23BA0DEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 < 0)
  {
    sub_23BA0DF1C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_23BA0DF1C();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
}

uint64_t sub_23BA0DF1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA0DF3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _BYTE v35[224];
  _BYTE v36[232];

  v2 = v1;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_22;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v8)
      goto LABEL_29;
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_29;
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_29;
        v14 = *(_QWORD *)(v4 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v8)
            goto LABEL_29;
          v14 = *(_QWORD *)(v4 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_21:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_22:
    sub_23B989684(*(_QWORD *)(a1 + 56) + 224 * v12, (uint64_t)v35);
    sub_23B989684((uint64_t)v35, (uint64_t)v36);
    v16 = sub_23B990938((uint64_t)v36);
    result = sub_23B990944((uint64_t)v36);
    if (v16 == 1)
    {
      v17 = *(char *)(result + 216);
      if ((v17 & 0x80000000) == 0)
      {
        v32 = *(_QWORD *)(result + 208);
        v33 = *(_QWORD *)(result + 200);
        v18 = *(_QWORD *)(result + 176);
        v31 = *(_QWORD *)(result + 184);
        v29 = v2;
        v30 = *(_QWORD *)(result + 192);
        v19 = *(_QWORD *)(result + 168);
        v26 = (id)objc_opt_self();
        sub_23B990954((uint64_t)v35, sub_23B989738);
        v27 = v19;
        v28 = v18;
        sub_23B989888(v19, v18, v31, v30, v33, v32, v17);
        v20 = objc_msgSend(v26, sel_mainScreen);
        objc_msgSend(v20, sel_scale);
        v22 = v21;

        sub_23B990954((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_23BB631FC(0, v34[2] + 1, 1, v34);
          v34 = (_QWORD *)result;
        }
        v24 = v34[2];
        v23 = v34[3];
        if (v24 >= v23 >> 1)
        {
          result = (uint64_t)sub_23BB631FC((_QWORD *)(v23 > 1), v24 + 1, 1, v34);
          v34 = (_QWORD *)result;
        }
        v34[2] = v24 + 1;
        v25 = &v34[9 * v24];
        v2 = v29;
        v25[4] = v27;
        v25[5] = v28;
        v25[6] = v31;
        v25[7] = v30;
        v25[8] = v33;
        v25[9] = v32;
        *((_BYTE *)v25 + 80) = v17;
        v25[11] = v22;
        *((_BYTE *)v25 + 96) = 0;
      }
    }
  }
  v15 = v13 + 4;
  if (v15 >= v8)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_29;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t DevicesListController.state.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  *a1 = v3;
  a1[1] = v4;
  return sub_23BA0E458(v3);
}

uint64_t sub_23BA0E2BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 56);
  v5 = *(_QWORD *)(v3 + 64);
  *a2 = v4;
  a2[1] = v5;
  return sub_23BA0E458(v4);
}

uint64_t sub_23BA0E350(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_getKeyPath();
  sub_23BA0E458(v1);
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v1);
  return swift_release();
}

uint64_t type metadata accessor for DevicesListController()
{
  uint64_t result;

  result = qword_256A5C870;
  if (!qword_256A5C870)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA0E458(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t (*sub_23BA0E484(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23BA0E4C4;
}

uint64_t sub_23BA0E4C4(_QWORD *a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = a1[3];
    sub_23BA0FE30(&v9);
    v6 = v9;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath, v8);
    *a1 = v5;
    sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
    sub_23BB88A14();
    sub_23BA0FDE0(v6);
    return swift_release();
  }
  return result;
}

uint64_t DevicesListController.sort.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 72);
  return result;
}

uint64_t sub_23BA0E668@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 72);
  return result;
}

uint64_t sub_23BA0E70C()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t DevicesListController.sort.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BA0E860(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v6;

  swift_beginAccess();
  *(_BYTE *)(a1 + 72) = a2;
  sub_23BA0FE30(&v6);
  v4 = v6;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v4);
  return swift_release();
}

uint64_t sub_23BA0E950()
{
  uint64_t v0;

  return sub_23BA0E860(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void (*DevicesListController.sort.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC12FindMyUICore21DevicesListController___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v4[7] = sub_23BA0E484((uint64_t)v4);
  return sub_23BA0EA54;
}

void sub_23BA0EA54(_QWORD *a1)
{
  sub_23BA0F4A4(a1);
}

uint64_t (*sub_23BA0EA60(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23BA0E4C4;
}

uint64_t DevicesListController.search.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BA0EB48@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 88);
  *a2 = *(_QWORD *)(v3 + 80);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA0EBF0()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t DevicesListController.search.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA0ED64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  swift_beginAccess();
  *(_QWORD *)(a1 + 80) = a2;
  *(_QWORD *)(a1 + 88) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23BA0FE30(&v8);
  v6 = v8;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v6);
  return swift_release();
}

uint64_t sub_23BA0EE6C()
{
  uint64_t *v0;

  return sub_23BA0ED64(v0[2], v0[3], v0[4]);
}

void (*DevicesListController.search.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC12FindMyUICore21DevicesListController___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v4[7] = sub_23BA0EA60((uint64_t)v4);
  return sub_23BA0EF70;
}

void sub_23BA0EF70(_QWORD *a1)
{
  sub_23BA0F4A4(a1);
}

uint64_t (*sub_23BA0EF7C(uint64_t a1))(uint64_t result, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  return sub_23BA0EF8C;
}

uint64_t sub_23BA0EF8C(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  if ((a2 & 1) == 0)
  {
    v2 = (_QWORD *)result;
    v3 = *(_QWORD *)(result + 8);
    sub_23BA0FE30(&v7);
    v4 = v7;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath, v6);
    *v2 = v3;
    sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
    sub_23BB88A14();
    sub_23BA0FDE0(v4);
    return swift_release();
  }
  return result;
}

uint64_t DevicesListController.filterStorage.getter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  return swift_release();
}

uint64_t sub_23BA0F108()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  return swift_release();
}

uint64_t sub_23BA0F18C()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t DevicesListController.filterStorage.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BA0F2C8()
{
  uint64_t v0;
  uint64_t v2;

  sub_23BA0FE30(&v2);
  v0 = v2;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v0);
  return swift_release();
}

uint64_t sub_23BA0F398()
{
  return sub_23BA0F2C8();
}

void (*DevicesListController.filterStorage.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC12FindMyUICore21DevicesListController___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v4[7] = sub_23BA0EF7C((uint64_t)v4);
  return sub_23BA0F498;
}

void sub_23BA0F498(_QWORD *a1)
{
  sub_23BA0F4A4(a1);
}

void sub_23BA0F4A4(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t DevicesListController.filter.getter()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 80) & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(v2) & 0xF;
  if (!v3)
  {
    swift_getKeyPath();
    sub_23BB88A20();
    return swift_release();
  }
  return result;
}

uint64_t DevicesListController.filter.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t (*DevicesListController.filter.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  DevicesListController.filter.getter();
  return sub_23BA0F6AC;
}

uint64_t sub_23BA0F6AC(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  swift_getKeyPath();
  *a1 = v2;
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t DevicesListController.__allocating_init(initialState:sort:search:filterStorage:dependencies:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  uint64_t v11;
  uint64_t v12;

  v11 = swift_allocObject();
  DevicesListController.init(initialState:sort:search:filterStorage:dependencies:)(a1, a2, a3, a4, v12, a6);
  return v11;
}

uint64_t DevicesListController.init(initialState:sort:search:filterStorage:dependencies:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v7 = v6;
  v27 = a3;
  v28 = a4;
  v11 = sub_23BB889CC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[1];
  v26 = *a1;
  v17 = *a2;
  v18 = *((_QWORD *)a6 + 2);
  sub_23BB889C0();
  v19 = sub_23BB88990();
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25 = *a6;
  v22(v15, v11);
  *(_QWORD *)(v7 + 16) = v19;
  *(_QWORD *)(v7 + 24) = v21;
  *(_BYTE *)(v7 + 96) = 0;
  sub_23BB88A44();
  *(_BYTE *)(v7 + 72) = v17;
  v23 = v28;
  *(_QWORD *)(v7 + 80) = v27;
  *(_QWORD *)(v7 + 88) = v23;
  *(_OWORD *)(v7 + 32) = v25;
  *(_QWORD *)(v7 + 56) = v26;
  *(_QWORD *)(v7 + 64) = v16;
  *(_QWORD *)(v7 + 48) = v18;
  sub_23BA0F8E4();
  return v7;
}

uint64_t sub_23BA0F8E4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23BB88A08();
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v7);
  result = swift_release();
  if (*(_BYTE *)(v0 + 96) == 1)
  {
    swift_getKeyPath();
    sub_23B97D0C8((unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider);
    sub_23BB88A20();
    swift_release();
    swift_beginAccess();
    v2 = swift_bridgeObjectRetain();
    v3 = sub_23BA0DF3C(v2);
    v4 = sub_23BAE6620(v3);
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    sub_23BACB070(v4, v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *DevicesListController.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = v0[2];
  v7 = v0[3];
  v9 = v0[4];
  v10 = v0[5];
  v11 = v0[6];
  sub_23BB8A9F4();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v12 = sub_23BB8A9E8();
  v13 = (_QWORD *)swift_allocObject();
  v14 = MEMORY[0x24BEE6930];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v9;
  v13[5] = v8;
  v13[6] = v7;
  v13[7] = v10;
  v13[8] = v11;
  sub_23B989F54((uint64_t)v5, (uint64_t)&unk_256A5C840, (uint64_t)v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_23BA0FDE0(v1[7]);
  swift_bridgeObjectRelease();
  v15 = (char *)v1 + OBJC_IVAR____TtC12FindMyUICore21DevicesListController___observationRegistrar;
  v16 = sub_23BB88A50();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return v1;
}

uint64_t sub_23BA0FC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  sub_23BB8A9F4();
  v8[7] = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA0FC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_23B98ACB0(v2, v1);
  sub_23B98AF5C(v2, v1);
  sub_23B98B208(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA0FD08()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA0FD4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B990D68;
  return sub_23BA0FC20(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23BA0FDE0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t DevicesListController.__deallocating_deinit()
{
  DevicesListController.deinit();
  return swift_deallocClassInstance();
}

void sub_23BA0FE30(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE v18[16];
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 32);
  swift_getKeyPath();
  v25 = v3;
  sub_23B97D0C8((unint64_t *)&qword_256A59600, (uint64_t (*)(uint64_t))type metadata accessor for BeaconsInfoProvider, (uint64_t)&protocol conformance descriptor for BeaconsInfoProvider);
  sub_23BB88A20();
  swift_release();
  v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(v2 + 40);
  swift_getKeyPath();
  v24 = v6;
  sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v7 = *(void **)(v6 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  v8 = *(_QWORD *)(v2 + 48);
  swift_getKeyPath();
  v24 = v8;
  sub_23B97D0C8((unint64_t *)&qword_256A595F0, (uint64_t (*)(uint64_t))type metadata accessor for DeviceImageProvider, (uint64_t)&protocol conformance descriptor for DeviceImageProvider);
  v16 = v7;
  sub_23BB88A20();
  swift_release();
  v9 = (uint64_t *)(v8 + OBJC_IVAR____TtC12FindMyUICore19DeviceImageProvider__data);
  swift_beginAccess();
  v19 = *v9;
  v20 = v7;
  swift_bridgeObjectRetain();
  v10 = sub_23BA109D8(v5, (void (*)(__int128 *, _OWORD *))sub_23BA109D0, (uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v10;
  swift_getKeyPath();
  v22 = v2;
  sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  LOBYTE(v21) = *(_BYTE *)(v2 + 72);
  v21 = DevicesListController.Sort.sortDescriptors()();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C940);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C948);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C950);
  v11 = MEMORY[0x24BEE12C8];
  sub_23B996E1C(&qword_256A5C958, &qword_256A5C940, MEMORY[0x24BEE12C8]);
  sub_23B996E1C(&qword_256A5C960, &qword_256A5C948, v11);
  sub_23B996E1C(&qword_256A5C968, &qword_256A5C950, MEMORY[0x24BDCBF20]);
  v12 = sub_23BB8A898();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_23BA10D3C(v13, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  v15 = sub_23BA11084(v14, v2);
  swift_release();
  swift_bridgeObjectRelease();

  *a1 = v12;
  a1[1] = v15;
}

uint64_t sub_23BA101DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_23BB8A9F4();
  swift_retain();
  v6 = sub_23BB8A9E8();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  swift_release();
  sub_23B989F54((uint64_t)v3, (uint64_t)&unk_256A5C938, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_23BA1031C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  sub_23BB8A9F4();
  *(_QWORD *)(v4 + 48) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA10388()
{
  uint64_t v0;

  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23BA0F8E4();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23BA103F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void *v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[224];
  double v33[6];
  char v34;
  uint64_t v35;
  char v36;
  _BYTE v37[224];
  _BYTE v38[232];

  v8 = *a1;
  v7 = a1[1];
  sub_23B989684(a2, (uint64_t)v37);
  sub_23B989684((uint64_t)v37, (uint64_t)v38);
  v9 = sub_23B990938((uint64_t)v38);
  v10 = sub_23B990944((uint64_t)v38);
  if (v9 != 1)
    goto LABEL_9;
  v12 = *(_QWORD *)(v10 + 168);
  v11 = *(_QWORD *)(v10 + 176);
  v13 = *(char *)(v10 + 216);
  if (v13 < 0)
  {
    swift_bridgeObjectRetain();
    v24 = 1;
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(v10 + 192);
  v29 = v8;
  v30 = *(_QWORD *)(v10 + 184);
  v15 = *(_QWORD *)(v10 + 208);
  v28 = *(_QWORD *)(v10 + 200);
  v16 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = objc_msgSend(v16, sel_mainScreen);
  objc_msgSend(v17, sel_scale);
  v19 = v18;

  if (!*(_QWORD *)(a3 + 16))
  {
    sub_23B990BAC(v12, v11, v30, v14, v28, v15, v13);
    v12 = 0;
    v11 = 0;
    v24 = -1;
    v8 = v29;
    goto LABEL_10;
  }
  *(_QWORD *)&v33[0] = v12;
  *(_QWORD *)&v33[1] = v11;
  *(_QWORD *)&v33[2] = v30;
  *(_QWORD *)&v33[3] = v14;
  *(_QWORD *)&v33[4] = v28;
  *(_QWORD *)&v33[5] = v15;
  v34 = v13;
  v35 = v19;
  v36 = 0;
  v20 = sub_23B984960(v33);
  v8 = v29;
  if ((v21 & 1) == 0)
  {
    sub_23B990BAC(v12, v11, v30, v14, v28, v15, v13);
LABEL_9:
    v12 = 0;
    v11 = 0;
    v24 = -1;
    goto LABEL_10;
  }
  v22 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v20);
  v23 = v22;
  sub_23B990BAC(v12, v11, v30, v14, v28, v15, v13);
  v11 = 0;
  v24 = 0;
  v12 = (uint64_t)v22;
LABEL_10:
  sub_23B989684((uint64_t)v37, (uint64_t)v32);
  nullsub_1(v32);
  v25 = a5 + *(int *)(type metadata accessor for DeviceInfo() + 32);
  v26 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(_QWORD *)a5 = v8;
  *(_QWORD *)(a5 + 8) = v7;
  sub_23BA11334((uint64_t)v32, a5 + 16);
  *(_QWORD *)(a5 + 240) = v12;
  *(_QWORD *)(a5 + 248) = v11;
  *(_BYTE *)(a5 + 256) = v24;
  *(_QWORD *)(a5 + 264) = a4;
  swift_bridgeObjectRetain();
  sub_23B990954((uint64_t)v37, sub_23B989738);
  return a4;
}

Swift::Void __swiftcall DevicesListController.onAppear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 + 96) = 1;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v3 = sub_23B98F07C((uint64_t)&unk_250CA9A48);
  swift_arrayDestroy();
  sub_23B98DD3C(v3, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = sub_23B98F234((uint64_t)&unk_250CA9A78);
  swift_bridgeObjectRetain();
  sub_23B98D950(v4, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DevicesListController.onDisappear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + 96) = 0;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_23B98ACB0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98AF5C(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98B208(v1, v2);
  swift_bridgeObjectRelease();
}

uint64_t sub_23BA107AC()
{
  return DevicesListController.filter.getter();
}

uint64_t sub_23BA107D0()
{
  return type metadata accessor for DevicesListController();
}

uint64_t sub_23BA107D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88A50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DevicesListController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DevicesListController.__allocating_init(initialState:sort:search:filterStorage:dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t (*sub_23BA10898())()
{
  swift_allocObject();
  swift_weakInit();
  return sub_23BA10920;
}

uint64_t sub_23BA108E0()
{
  return sub_23BA114CC();
}

uint64_t sub_23BA108FC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BA10920()
{
  return sub_23BA101DC();
}

uint64_t sub_23BA10928()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA10954(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B97C964;
  return sub_23BA1031C(a1, v4, v5, v6);
}

id sub_23BA109D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23BA103F0(a1, a2, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), a3);
}

uint64_t sub_23BA109D8(uint64_t a1, void (*a2)(__int128 *, _OWORD *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  void (*v41)(__int128 *, _OWORD *);
  uint64_t v42;
  __int128 v43;
  _OWORD v44[12];
  _OWORD v45[2];
  _BYTE v46[224];
  __int128 v47;
  _OWORD v48[12];
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;

  v41 = a2;
  v42 = a3;
  v5 = type metadata accessor for DeviceInfo();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (!v9)
    return result;
  v32[1] = v3;
  v50 = MEMORY[0x24BEE4AF8];
  sub_23BB0053C(0, v9, 0);
  v11 = v50;
  result = sub_23BA1741C(a1);
  if (result < 0)
    goto LABEL_32;
  v13 = result;
  if (result >= 1 << *(_BYTE *)(a1 + 32))
    goto LABEL_32;
  v14 = a1 + 64;
  v38 = v44;
  v39 = v48;
  v33 = a1 + 80;
  v34 = v9;
  v15 = 1;
  v35 = v12;
  v36 = a1 + 64;
  v37 = a1;
  while (1)
  {
    v16 = v13 >> 6;
    if ((*(_QWORD *)(v14 + 8 * (v13 >> 6)) & (1 << v13)) == 0)
      break;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v12)
      goto LABEL_28;
    v51 = v15;
    v17 = *(_QWORD *)(a1 + 56);
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v19 = v11;
    v21 = *v18;
    v20 = v18[1];
    sub_23B989684(v17 + 224 * v13, (uint64_t)v46);
    *(_QWORD *)&v47 = v21;
    *((_QWORD *)&v47 + 1) = v20;
    sub_23B989684((uint64_t)v46, (uint64_t)v39);
    v44[11] = v48[11];
    v45[0] = v49[0];
    *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)((char *)v49 + 9);
    v44[7] = v48[7];
    v44[8] = v48[8];
    v44[9] = v48[9];
    v44[10] = v48[10];
    v44[3] = v48[3];
    v44[4] = v48[4];
    v44[5] = v48[5];
    v44[6] = v48[6];
    v43 = v47;
    v44[0] = v48[0];
    v44[1] = v48[1];
    v44[2] = v48[2];
    swift_bridgeObjectRetain();
    sub_23B990954((uint64_t)v46, sub_23B989738);
    swift_bridgeObjectRetain();
    sub_23B990954((uint64_t)v46, sub_23B989738);
    sub_23BA113B8((uint64_t)&v47);
    v41(&v43, v38);
    v11 = v19;
    sub_23BA113B8((uint64_t)&v47);
    v50 = v19;
    v22 = (uint64_t)v8;
    v24 = *(_QWORD *)(v11 + 16);
    v23 = *(_QWORD *)(v11 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_23BB0053C(v23 > 1, v24 + 1, 1);
      v11 = v50;
    }
    *(_QWORD *)(v11 + 16) = v24 + 1;
    result = sub_23BA112F0(v22, v11+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v24);
    a1 = v37;
    v25 = *(_BYTE *)(v37 + 32);
    if ((uint64_t)v13 >= 1 << v25)
      goto LABEL_29;
    v14 = v36;
    v26 = *(_QWORD *)(v36 + 8 * v16);
    if ((v26 & (1 << v13)) == 0)
      goto LABEL_30;
    LODWORD(v12) = v35;
    if (*(_DWORD *)(v37 + 36) != (_DWORD)v35)
      goto LABEL_31;
    v8 = (char *)v22;
    v27 = v26 & (-2 << (v13 & 0x3F));
    if (v27)
    {
      v13 = __clz(__rbit64(v27)) | v13 & 0xFFFFFFFFFFFFFFC0;
      v28 = v34;
      goto LABEL_21;
    }
    v29 = v16 + 1;
    v30 = (unint64_t)((1 << v25) + 63) >> 6;
    v28 = v34;
    if (v16 + 1 < v30)
    {
      v31 = *(_QWORD *)(v36 + 8 * v29);
      if (v31)
      {
LABEL_19:
        v13 = __clz(__rbit64(v31)) + (v29 << 6);
        goto LABEL_21;
      }
      while (v30 - 2 != v16)
      {
        v31 = *(_QWORD *)(v33 + 8 * v16++);
        if (v31)
        {
          v29 = v16 + 1;
          goto LABEL_19;
        }
      }
    }
    v13 = 1 << v25;
LABEL_21:
    if (v51 == v28)
      return v11;
    if ((v13 & 0x8000000000000000) == 0)
    {
      v15 = v51 + 1;
      if ((uint64_t)v13 < 1 << v25)
        continue;
    }
    goto LABEL_32;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_23BA10D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE v49[224];
  _QWORD v50[28];
  uint64_t v51;

  v5 = type metadata accessor for DeviceInfo();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v43 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (uint64_t *)((char *)&v35 - v11);
  v13 = MEMORY[0x24BEE4AF8];
  v51 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  v15 = OBJC_IVAR____TtC12FindMyUICore21DevicesListController___observationRegistrar;
  swift_beginAccess();
  if (v14)
  {
    v44 = v14;
    v35 = v2;
    v39 = a2 + v15;
    v16 = *(_QWORD *)(v6 + 72);
    v38 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v17 = a1 + v38;
    v37 = v12 + 2;
    v18 = a2;
    v19 = MEMORY[0x24BEE4AF8];
    v36 = v18;
    v42 = v12;
    v40 = v16;
    while (1)
    {
      sub_23BA112AC(v17, (uint64_t)v12);
      swift_getKeyPath();
      v50[0] = v18;
      sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
      sub_23BB88A20();
      swift_release();
      v21 = *(_QWORD *)(v18 + 80);
      v22 = *(_QWORD *)(v18 + 88);
      v23 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0)
        v23 = v21 & 0xFFFFFFFFFFFFLL;
      if (!v23)
        goto LABEL_15;
      sub_23BA11334((uint64_t)v37, (uint64_t)v49);
      sub_23BA11334((uint64_t)v49, (uint64_t)v50);
      v24 = sub_23B9CA8D8((uint64_t)v50);
      v41 = v19;
      if (v24 == 1
        || (sub_23B989684((uint64_t)v50, (uint64_t)&v45),
            v25 = sub_23B990938((uint64_t)&v45),
            v26 = sub_23B990944((uint64_t)&v45),
            v25 != 1))
      {
        v27 = 0;
        v28 = 0xE000000000000000;
      }
      else
      {
        v27 = *(_QWORD *)(v26 + 16);
        v28 = *(_QWORD *)(v26 + 24);
        swift_bridgeObjectRetain();
      }
      v45 = v27;
      v46 = v28;
      v47 = v21;
      v48 = v22;
      sub_23B9967E0();
      swift_bridgeObjectRetain();
      v29 = sub_23BB8ACF4();
      swift_bridgeObjectRelease();
      v30 = v42[1];
      v45 = *v42;
      v46 = v30;
      v47 = v21;
      v48 = v22;
      v31 = sub_23BB8ACF4();
      swift_bridgeObjectRelease();
      if ((v29 & 1) != 0 || (v31 & 1) != 0)
        break;
      v12 = v42;
      sub_23BA1137C((uint64_t)v42);
      v18 = v36;
      v20 = v40;
      v19 = v41;
LABEL_4:
      v17 += v20;
      if (!--v44)
        return v51;
    }
    v18 = v36;
    v19 = v41;
LABEL_15:
    v12 = v42;
    sub_23BA112F0((uint64_t)v42, v43);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_23BB0053C(0, *(_QWORD *)(v19 + 16) + 1, 1);
    v19 = v51;
    v33 = *(_QWORD *)(v51 + 16);
    v32 = *(_QWORD *)(v51 + 24);
    if (v33 >= v32 >> 1)
    {
      sub_23BB0053C(v32 > 1, v33 + 1, 1);
      v19 = v51;
    }
    *(_QWORD *)(v19 + 16) = v33 + 1;
    v20 = v40;
    sub_23BA112F0(v43, v19 + v38 + v33 * v40);
    goto LABEL_4;
  }
  return v13;
}

uint64_t sub_23BA11084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = type metadata accessor for DeviceInfo();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v25 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v22 - v10;
  v12 = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a1 + 16);
  v14 = OBJC_IVAR____TtC12FindMyUICore21DevicesListController___observationRegistrar;
  swift_beginAccess();
  if (v13)
  {
    v24 = a2 + v14;
    v23 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v15 = a1 + v23;
    v16 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_23BA112AC(v15, (uint64_t)v11);
      swift_getKeyPath();
      v26 = a2;
      sub_23B97D0C8(&qword_256A5C830, (uint64_t (*)(uint64_t))type metadata accessor for DevicesListController, (uint64_t)&protocol conformance descriptor for DevicesListController);
      sub_23BB88A20();
      swift_release();
      v17 = *(_QWORD *)(a2 + 88);
      v18 = *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFLL;
      if ((v17 & 0x2000000000000000) != 0)
        v18 = HIBYTE(v17) & 0xF;
      if (!v18)
      {
        swift_getKeyPath();
        v26 = a2;
        sub_23BB88A20();
        swift_release();
      }
      sub_23BA112F0((uint64_t)v11, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23BB0053C(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v27;
      }
      v20 = *(_QWORD *)(v12 + 16);
      v19 = *(_QWORD *)(v12 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_23BB0053C(v19 > 1, v20 + 1, 1);
        v12 = v27;
      }
      *(_QWORD *)(v12 + 16) = v20 + 1;
      sub_23BA112F0(v25, v12 + v23 + v20 * v16);
      v15 += v16;
      --v13;
    }
    while (v13);
  }
  return v12;
}

uint64_t sub_23BA112AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA112F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA11334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA1137C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BA113B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v19 = *(_OWORD *)(a1 + 96);
  v20 = *(_OWORD *)(a1 + 80);
  v17 = *(_OWORD *)(a1 + 128);
  v18 = *(_OWORD *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 160);
  v16 = *(_OWORD *)(a1 + 144);
  v13 = *(_OWORD *)(a1 + 192);
  v14 = *(_OWORD *)(a1 + 176);
  v12 = *(_OWORD *)(a1 + 208);
  v9 = *(_QWORD *)(a1 + 224);
  v10 = *(_BYTE *)(a1 + 232);
  swift_bridgeObjectRelease();
  sub_23B9909D0(v21, v2, v3, v4, v5, v6, v7, v8, v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v10);
  return a1;
}

uint64_t sub_23BA114CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 56) = v1;
  *(_QWORD *)(v2 + 64) = v3;
  sub_23BA0E458(v1);
  return sub_23BA0FDE0(v4);
}

uint64_t sub_23BA11514()
{
  return sub_23BA0E950();
}

uint64_t sub_23BA11528()
{
  return sub_23BA0EE6C();
}

void static MapsDirectionsProvider.mock()(_QWORD *a1@<X8>)
{
  *a1 = &unk_256A5C970;
  a1[1] = 0;
  a1[2] = sub_23BA1188C;
  a1[3] = 0;
}

uint64_t sub_23BA11558(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[2] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v3[5] = swift_task_alloc();
  v7 = sub_23BB8AF1C();
  v3[6] = v7;
  v3[7] = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v9 = *a2;
  v3[8] = v8;
  v3[9] = v9;
  v3[10] = *(_QWORD *)(a3 + 16);
  sub_23BB8A9F4();
  v3[11] = sub_23BB8A9E8();
  v3[12] = sub_23BB8A988();
  v3[13] = v10;
  return swift_task_switch();
}

uint64_t sub_23BA1162C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_23BA116AC;
  return v3(300000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BA116AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA11734()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 80);
  v2 = *(void **)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  swift_release();
  v7 = v2;
  v8 = v1;
  objc_msgSend(v7, sel_distanceFromLocation_, v8);
  v9 = objc_msgSend((id)objc_opt_self(), sel_meters);
  sub_23B97CD2C();
  sub_23BB88678();

  sub_23BB88684();
  v10 = sub_23BB8B384();
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  *(_BYTE *)v6 = 0;
  *(_QWORD *)(v6 + 8) = v10;
  *(_QWORD *)(v6 + 16) = v12;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA11840()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA1188C()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_meters);
  sub_23B97CD2C();
  return sub_23BB88678();
}

uint64_t _s14descr250CAD8B9V12DependenciesVwxx()
{
  swift_release();
  return swift_release();
}

uint64_t _s14descr250CAD8B9V12DependenciesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s14descr250CAD8B9V12DependenciesVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s14descr250CAD8B9V12DependenciesVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t _s14descr250CAD8B9V12DependenciesVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr250CAD8B9V12DependenciesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapsDirectionsProvider.Dependencies()
{
  return &type metadata for MapsDirectionsProvider.Dependencies;
}

uint64_t DeviceDetailsController.Dependencies.beaconsInfoProvider.getter()
{
  return swift_retain();
}

uint64_t DeviceDetailsController.Dependencies.userLocationProvider.getter()
{
  return swift_retain();
}

uint64_t DeviceDetailsController.Dependencies.deviceImageProvider.getter()
{
  return swift_retain();
}

uint64_t DeviceDetailsController.Dependencies.mapsDirectionsProvider.getter()
{
  return swift_retain();
}

uint64_t DeviceDetailsController.Dependencies.init(beaconsInfoProvider:userLocationProvider:deviceImageProvider:mapsDirectionsProvider:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t _s14descr250CAD949V12DependenciesVwxx()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s14descr250CAD949V12DependenciesVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s14descr250CAD949V12DependenciesVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s14descr250CAD949V12DependenciesVwta(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DeviceDetailsController.Dependencies()
{
  return &type metadata for DeviceDetailsController.Dependencies;
}

uint64_t Either.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  type metadata accessor for Either(0, a2, a3, v6);
  return swift_storeEnumTagMultiPayload();
}

{
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1, a2);
  type metadata accessor for Either(0, a2, a3, v6);
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for Either(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Either);
}

uint64_t Either.left.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, v3);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v11 + 32))(a2, v8, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
}

uint64_t Either.right.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, v3);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v11 + 32))(a2, v8, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  }
}

uint64_t static Either<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v42 = a5;
  v43 = a6;
  v47 = a1;
  v48 = a2;
  v46 = *(_QWORD *)(a4 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1, a2);
  v41 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v8, v11);
  v40 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Either(0, v13, v14, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)&v39 - v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v44 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v26 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2, v25);
  v28 = (char *)&v39 - v27;
  v29 = (char *)&v39 + *(int *)(v26 + 48) - v27;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v30((char *)&v39 - v27, v47, v15);
  v30(v29, v48, v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v30(v23, (uint64_t)v28, v15);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v35 = v45;
      v36 = v40;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v40, v29, a3);
      v33 = sub_23BB8A760();
      v37 = *(void (**)(char *, uint64_t))(v35 + 8);
      v37(v36, a3);
      v37(v23, a3);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v23, a3);
    goto LABEL_7;
  }
  v30(v20, (uint64_t)v28, v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v20, a4);
LABEL_7:
    v33 = 0;
    v16 = v44;
    v15 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v31 = v46;
  v32 = v41;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v41, v29, a4);
  v33 = sub_23BB8A760();
  v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v32, a4);
  v34(v20, a4);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v15);
  return v33 & 1;
}

uint64_t sub_23BA121A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Either<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8), *(_QWORD *)(a4 - 16));
}

uint64_t Either<>.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v22[1] = a4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v7, v10);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v18, v20, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v18, v5);
    sub_23BB8B24C();
    sub_23BB8A718();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v18, v11);
    sub_23BB8B24C();
    sub_23BB8A718();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t Either<>.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v7[72];

  sub_23BB8B240();
  Either<>.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_23BB8B270();
}

uint64_t sub_23BA1239C(uint64_t a1, uint64_t a2)
{
  return Either<>.hashValue.getter(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16));
}

uint64_t sub_23BA123A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Either<>.hash(into:)(a1, a2, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16));
}

uint64_t sub_23BA123B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *(_QWORD *)(a3 - 16);
  v4 = *(_QWORD *)(a3 - 8);
  sub_23BB8B240();
  Either<>.hash(into:)((uint64_t)v7, a2, v4, v5);
  return sub_23BB8B270();
}

uint64_t Either<>.id.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a3;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v6, v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v17, v19, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v17, v4);
    sub_23BB8AE20();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v17, v9);
    sub_23BB8AE20();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }
}

uint64_t sub_23BA1257C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[2];

  v3 = *(_QWORD *)(*(_QWORD *)(a3 - 16) + 8);
  v5[0] = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  v5[1] = v3;
  return MEMORY[0x24260D8DC](&protocol conformance descriptor for <> Either<A, B>, a1, v5);
}

uint64_t sub_23BA125B8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_23BA125DC(uint64_t a1, uint64_t a2)
{
  return Either<>.id.getter(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16));
}

uint64_t sub_23BA125E8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23BA12670(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v5 + 64) <= *(_QWORD *)(v4 + 64))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    v11 = *((unsigned __int8 *)a2 + v6);
    if (v11 >= 2)
    {
      if (v6 <= 3)
        v12 = v6;
      else
        v12 = 4;
      __asm { BR              X15 }
    }
    if (v11 == 1)
    {
      (*(void (**)(uint64_t *))(v5 + 16))(a1);
      *((_BYTE *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v6) = 0;
    }
  }
  else
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_23BA1279C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v5 + 64) > v4)
    v4 = *(_QWORD *)(v5 + 64);
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (v6 < 2)
  {
    if (v6 == 1)
      v3 = *(_QWORD *)(v2 - 8);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    if (v4 <= 3)
      v7 = v4;
    else
      v7 = 4;
    return ((uint64_t (*)(void))((char *)&loc_23BA127E8 + 4 * byte_23BB8F4A5[v7]))();
  }
}

uint64_t sub_23BA1283C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_23BA12910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_23BA12A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_23BA12B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_23BA12CDC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v3 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BA12DA4 + 4 * byte_23BB8F4C8[(v4 - 1)]))();
}

void sub_23BA12DF0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_23BA12F9C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (v2 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64))
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BA12FE8 + 4 * byte_23BB8F4D6[v3]))();
}

void sub_23BA13030(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  if (a2 > 1)
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16)
                                                                                              - 8)
                                                                                  + 64))
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    else
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    if (v4 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    a1[v4] = a2;
  }
}

uint64_t getEnumTagSinglePayload for BubbleMessageTemplateContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7D)
    goto LABEL_17;
  if (a2 + 131 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 131) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 131;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 131;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 131;
  }
LABEL_17:
  v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for BubbleMessageTemplateContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 131 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 131) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7C)
    return ((uint64_t (*)(void))((char *)&loc_23BA13204 + 4 * byte_23BB8F5F5[v4]))();
  *a1 = a2 - 125;
  return ((uint64_t (*)(void))((char *)sub_23BA13238 + 4 * byte_23BB8F5F0[v4]))();
}

uint64_t sub_23BA13238(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA13240(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA13248);
  return result;
}

uint64_t sub_23BA13260(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA13268);
  *(_BYTE *)result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_23BA1326C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA13274(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA13280(unsigned __int8 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (char)v1;
  v3 = v1 >> 6;
  v4 = (v1 | 0xFFFFFFFE) + 2 * (v1 >> 6);
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_BYTE *sub_23BA132A0(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_23BA132B0(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | ((_BYTE)a2 << 6);
  else
    *result = (a2 & 1 | ((a2 >> 1) << 6)) + 64;
  return result;
}

ValueMetadata *type metadata accessor for BubbleMessageTemplateContentType()
{
  return &type metadata for BubbleMessageTemplateContentType;
}

void sub_23BA132F4(uint64_t a1, uint64_t a2, char a3)
{
  sub_23BB89494();
  __asm { BR              X10 }
}

uint64_t static GenericControl.Info.offerLocationMenu(compactTitleOnly:fromEmailDescription:forceInProgressState:forceDisabledState:action:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  _QWORD *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t result;
  uint64_t v75;
  unint64_t v76;

  if ((a1 & 1) != 0)
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    if (qword_256A58CE8 != -1)
      swift_once();
    v8 = (void *)qword_256A5FB40;
    if (qword_256A5FB40)
    {
      swift_bridgeObjectRetain();
      v9 = v8;
      v10 = v9;
    }
    else
    {
      v11 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v10 = objc_msgSend(v11, sel_mainBundle);
      v9 = 0;
    }
    v12 = v9;
    v13 = (void *)sub_23BB8A784();
    v14 = (void *)sub_23BB8A784();
    v15 = objc_msgSend(v10, sel_localizedStringForKey_value_table_, v13, 0, v14);

    v16 = sub_23BB8A7B4();
    v18 = v17;

    swift_bridgeObjectRelease();
    v7 = sub_23BB63EE8(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v20 = v7[2];
    v19 = v7[3];
    if (v20 >= v19 >> 1)
      v7 = sub_23BB63EE8((_QWORD *)(v19 > 1), v20 + 1, 1, v7);
    v7[2] = v20 + 1;
    v21 = &v7[2 * v20];
    v21[4] = v16;
    v21[5] = v18;
    v22 = (void *)qword_256A5FB40;
    if (qword_256A5FB40)
    {
      swift_bridgeObjectRetain();
      v23 = v22;
      v24 = v23;
    }
    else
    {
      v25 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v24 = objc_msgSend(v25, sel_mainBundle);
      v23 = 0;
    }
    v26 = v23;
    v27 = (void *)sub_23BB8A784();
    v28 = (void *)sub_23BB8A784();
    v29 = objc_msgSend(v24, sel_localizedStringForKey_value_table_, v27, 0, v28);

    v30 = sub_23BB8A7B4();
    v32 = v31;

    swift_bridgeObjectRelease();
    v34 = v7[2];
    v33 = v7[3];
    if (v34 >= v33 >> 1)
      v7 = sub_23BB63EE8((_QWORD *)(v33 > 1), v34 + 1, 1, v7);
    v7[2] = v34 + 1;
    v35 = &v7[2 * v34];
    v35[4] = v30;
    v35[5] = v32;
  }
  if (qword_256A58CE8 != -1)
    swift_once();
  v36 = (void *)qword_256A5FB40;
  if (qword_256A5FB40)
  {
    swift_bridgeObjectRetain();
    v37 = v36;
    v38 = v37;
  }
  else
  {
    v39 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v38 = objc_msgSend(v39, sel_mainBundle);
    v37 = 0;
  }
  v40 = v37;
  v41 = (void *)sub_23BB8A784();
  v42 = (void *)sub_23BB8A784();
  v43 = objc_msgSend(v38, sel_localizedStringForKey_value_table_, v41, 0, v42);

  v44 = sub_23BB8A7B4();
  v46 = v45;

  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_23BB63EE8(0, v7[2] + 1, 1, v7);
  v48 = v7[2];
  v47 = v7[3];
  if (v48 >= v47 >> 1)
    v7 = sub_23BB63EE8((_QWORD *)(v47 > 1), v48 + 1, 1, v7);
  v7[2] = v48 + 1;
  v49 = &v7[2 * v48];
  v49[4] = v44;
  v49[5] = v46;
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
    v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_23BB8C510;
    *(_QWORD *)(v50 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v50 + 64) = sub_23B9A5C8C();
    *(_QWORD *)(v50 + 32) = a2;
    *(_QWORD *)(v50 + 40) = a3;
    v51 = (void *)qword_256A5FB40;
    if (qword_256A5FB40)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52 = v51;
      v53 = v52;
    }
    else
    {
      v57 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53 = objc_msgSend(v57, sel_mainBundle);
      v52 = 0;
    }
    v58 = v52;
    v59 = (void *)sub_23BB8A784();
    v60 = (void *)sub_23BB8A784();
    v61 = objc_msgSend(v53, sel_localizedStringForKey_value_table_, v59, 0, v60);

    sub_23BB8A7B4();
    v62 = sub_23BB8A7C0();
    v64 = v63;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    v54 = (void *)qword_256A5FB40;
    if (qword_256A5FB40)
    {
      swift_bridgeObjectRetain();
      v55 = v54;
      v56 = v55;
    }
    else
    {
      v65 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v56 = objc_msgSend(v65, sel_mainBundle);
      v55 = 0;
    }
    v66 = v55;
    v67 = (void *)sub_23BB8A784();
    v68 = (void *)sub_23BB8A784();
    v69 = objc_msgSend(v56, sel_localizedStringForKey_value_table_, v67, 0, v68);

    v62 = sub_23BB8A7B4();
    v64 = v70;

    swift_bridgeObjectRelease();
  }
  v71 = qword_256A58D88;
  swift_bridgeObjectRetain();
  if (v71 != -1)
    swift_once();
  swift_retain();
  v72 = swift_bridgeObjectRetain();
  v73 = sub_23BA13D40(v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  v75 = 0x10000;
  if ((a5 & 1) == 0)
    v75 = 0;
  v76 = 0x8000000000000001;
  *(_QWORD *)a6 = v7;
  *(_OWORD *)(a6 + 8) = xmmword_23BB8F630;
  if ((a4 & 1) != 0)
    v76 = 0x8000000000000101;
  *(_OWORD *)(a6 + 24) = xmmword_23BB8D460;
  *(_QWORD *)(a6 + 40) = v76 | v75;
  *(_QWORD *)(a6 + 48) = v62;
  *(_QWORD *)(a6 + 56) = v64;
  *(_QWORD *)(a6 + 64) = v73;
  return result;
}

uint64_t sub_23BA13C40(int *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  *(_QWORD *)(v3 + 16) = sub_23BB8A9F4();
  *(_QWORD *)(v3 + 24) = sub_23BB8A9E8();
  *(_BYTE *)(v3 + 40) = a3;
  v8 = (uint64_t (*)(uint64_t))((char *)a1 + *a1);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 32) = v6;
  *v6 = v3;
  v6[1] = sub_23BA13CD0;
  return v8(v3 + 40);
}

uint64_t sub_23BA13CD0()
{
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA13D40(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_23BB00568(0, v1, 0);
    v3 = *(unsigned __int8 *)(a1 + 32);
    sub_23BB1445C();
    __asm { BR              X8 }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23BA13EFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA13F20()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;

  v2 = *(int **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23B97C964;
  return sub_23BA13C40(v2, v3, v4);
}

uint64_t sub_23BA13F80(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  int64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t i;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = &qword_256A5AA60;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v52 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v45 - v8;
  v10 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)&v45 - v17;
  MEMORY[0x24BDAC7A8](v16, v19);
  v53 = (uint64_t)&v45 - v20;
  v21 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v51 = (unint64_t)(v22 + 63) >> 6;
  v56 = a1;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v49 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v27 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState;
  if (v24)
    goto LABEL_8;
LABEL_14:
  v39 = v26 + 1;
  if (!__OFADD__(v26, 1))
  {
    if (v39 < v51)
    {
      v40 = *(_QWORD *)(v50 + 8 * v39);
      ++v26;
      if (v40)
        goto LABEL_29;
      v26 = v39 + 1;
      if (v39 + 1 >= v51)
        goto LABEL_32;
      v40 = *(_QWORD *)(v50 + 8 * v26);
      if (v40)
        goto LABEL_29;
      v26 = v39 + 2;
      if (v39 + 2 >= v51)
        goto LABEL_32;
      v40 = *(_QWORD *)(v50 + 8 * v26);
      if (v40)
        goto LABEL_29;
      v26 = v39 + 3;
      if (v39 + 3 >= v51)
        goto LABEL_32;
      v40 = *(_QWORD *)(v50 + 8 * v26);
      if (v40)
      {
LABEL_29:
        v24 = (v40 - 1) & v40;
        for (i = __clz(__rbit64(v40)) + (v26 << 6); ; i = v31 | (v26 << 6))
        {
          v42 = v2;
          v43 = v53;
          sub_23B989CE8(*(_QWORD *)(v56 + 56) + *(_QWORD *)(v54 + 72) * i, v53, v27);
          sub_23B989CA4(v43, (uint64_t)v18, v27);
          v44 = v27;
          sub_23B989CE8((uint64_t)v18, (uint64_t)v14, v27);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v28 = v52;
            sub_23B989CA4((uint64_t)v14, v52, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
            v29 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
          }
          else
          {
            v29 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
            v28 = v52;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v52, 1, 1, v29);
          }
          v30 = v28;
          v2 = v42;
          sub_23B990D24(v30, (uint64_t)v9, v42);
          type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v9, 1, v29) == 1)
          {
            sub_23B989D60((uint64_t)v9, v42);
            v27 = v44;
            result = sub_23B989D9C((uint64_t)v18, v44);
            if (!v24)
              goto LABEL_14;
          }
          else
          {
            v33 = *(_QWORD *)v9;
            v47 = *((_QWORD *)v9 + 1);
            v48 = v33;
            v46 = v9[16];
            swift_bridgeObjectRetain();
            sub_23B989D9C((uint64_t)v9, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
            v27 = v44;
            sub_23B989D9C((uint64_t)v18, v44);
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = (uint64_t)sub_23BB63630(0, v49[2] + 1, 1, v49);
              v49 = (_QWORD *)result;
            }
            v35 = v49[2];
            v34 = v49[3];
            if (v35 >= v34 >> 1)
            {
              result = (uint64_t)sub_23BB63630((_QWORD *)(v34 > 1), v35 + 1, 1, v49);
              v49 = (_QWORD *)result;
            }
            v36 = v49;
            v49[2] = v35 + 1;
            v37 = &v36[3 * v35];
            v38 = v47;
            v37[4] = v48;
            v37[5] = v38;
            *((_BYTE *)v37 + 48) = v46;
            v2 = v42;
            if (!v24)
              goto LABEL_14;
          }
LABEL_8:
          v31 = __clz(__rbit64(v24));
          v24 &= v24 - 1;
        }
      }
      v41 = v39 + 4;
      if (v41 < v51)
      {
        v40 = *(_QWORD *)(v50 + 8 * v41);
        if (v40)
        {
          v26 = v41;
          goto LABEL_29;
        }
        while (1)
        {
          v26 = v41 + 1;
          if (__OFADD__(v41, 1))
            goto LABEL_34;
          if (v26 >= v51)
            break;
          v40 = *(_QWORD *)(v50 + 8 * v26);
          ++v41;
          if (v40)
            goto LABEL_29;
        }
      }
    }
LABEL_32:
    swift_release();
    return (uint64_t)v49;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t PeopleListController.state.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  *a1 = v3;
  a1[1] = v4;
  return sub_23BA0E458(v3);
}

uint64_t sub_23BA1446C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v3 + 72);
  *a2 = v4;
  a2[1] = v5;
  return sub_23BA0E458(v4);
}

uint64_t sub_23BA14500(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_getKeyPath();
  sub_23BA0E458(v1);
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v1);
  return swift_release();
}

uint64_t type metadata accessor for PeopleListController()
{
  uint64_t result;

  result = qword_256A5CA50;
  if (!qword_256A5CA50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t (*sub_23BA14608(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23BA14648;
}

uint64_t sub_23BA14648(_QWORD *a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = a1[3];
    sub_23BA164EC(&v9);
    v6 = v9;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath, v8);
    *a1 = v5;
    sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
    sub_23BB88A14();
    sub_23BA0FDE0(v6);
    return swift_release();
  }
  return result;
}

uint64_t PeopleListController.sort.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  v4 = *(_BYTE *)(v1 + 81);
  *a1 = *(_BYTE *)(v1 + 80);
  a1[1] = v4;
  return result;
}

uint64_t sub_23BA147F4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 81);
  *a2 = *(_BYTE *)(v3 + 80);
  a2[1] = v5;
  return result;
}

uint64_t sub_23BA148A0()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t PeopleListController.sort.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BA14A04(uint64_t a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v6;

  swift_beginAccess();
  *(_BYTE *)(a1 + 80) = a2 & 1;
  *(_BYTE *)(a1 + 81) = HIBYTE(a2) & 1;
  sub_23BA164EC(&v6);
  v4 = v6;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v4);
  return swift_release();
}

uint64_t sub_23BA14B00()
{
  return sub_23BA18720();
}

void (*PeopleListController.sort.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC12FindMyUICore20PeopleListController___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v4[7] = sub_23BA14608((uint64_t)v4);
  return sub_23BA14BFC;
}

void sub_23BA14BFC(_QWORD *a1)
{
  sub_23BA0F4A4(a1);
}

uint64_t (*sub_23BA14C08(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23BA14648;
}

uint64_t PeopleListController.search.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BA14CF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 96);
  *a2 = *(_QWORD *)(v3 + 88);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA14D98()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t PeopleListController.search.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA14F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  swift_beginAccess();
  *(_QWORD *)(a1 + 88) = a2;
  *(_QWORD *)(a1 + 96) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23BA164EC(&v8);
  v6 = v8;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v6);
  return swift_release();
}

uint64_t sub_23BA15014()
{
  uint64_t *v0;

  return sub_23BA14F0C(v0[2], v0[3], v0[4]);
}

void (*PeopleListController.search.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC12FindMyUICore20PeopleListController___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v4[7] = sub_23BA14C08((uint64_t)v4);
  return sub_23BA15118;
}

void sub_23BA15118(_QWORD *a1)
{
  sub_23BA0F4A4(a1);
}

uint64_t (*sub_23BA15124(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23BA14648;
}

uint64_t PeopleListController.filterStorage.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 104);
  return result;
}

uint64_t sub_23BA15204@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 104);
  return result;
}

uint64_t sub_23BA152A8()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t PeopleListController.filterStorage.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BA153FC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v6;

  swift_beginAccess();
  *(_BYTE *)(a1 + 104) = a2;
  sub_23BA164EC(&v6);
  v4 = v6;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v4);
  return swift_release();
}

uint64_t sub_23BA154EC()
{
  uint64_t v0;

  return sub_23BA153FC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void (*PeopleListController.filterStorage.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC12FindMyUICore20PeopleListController___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v4[7] = sub_23BA15124((uint64_t)v4);
  return sub_23BA155F0;
}

void sub_23BA155F0(_QWORD *a1)
{
  sub_23BA0F4A4(a1);
}

uint64_t PeopleListController.filter.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  char v6;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  result = swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 88) & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v4) & 0xF;
  if (v5)
  {
    v6 = 0;
  }
  else
  {
    swift_getKeyPath();
    sub_23BB88A20();
    swift_release();
    result = swift_beginAccess();
    v6 = *(_BYTE *)(v1 + 104);
  }
  *a1 = v6;
  return result;
}

uint64_t PeopleListController.filter.setter()
{
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t (*PeopleListController.filter.modify(uint64_t a1))(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  PeopleListController.filter.getter((_BYTE *)(a1 + 16));
  return sub_23BA157E4;
}

uint64_t sub_23BA157E4(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  swift_getKeyPath();
  *a1 = v2;
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  return swift_release();
}

uint64_t PeopleListController.__allocating_init(initialState:sort:search:filterStorage:dependencies:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, __int128 *a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  PeopleListController.init(initialState:sort:search:filterStorage:dependencies:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t PeopleListController.init(initialState:sort:search:filterStorage:dependencies:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, __int128 *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  v7 = v6;
  v32 = a3;
  v33 = a4;
  v12 = sub_23BB889CC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = a1[1];
  v19 = *a2;
  LODWORD(v15) = *a5;
  v30 = a2[1];
  v31 = v15;
  sub_23BB889C0();
  v20 = sub_23BB88990();
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24 = *a6;
  v28 = a6[1];
  v29 = v24;
  v23(v16, v12);
  *(_QWORD *)(v7 + 16) = v20;
  *(_QWORD *)(v7 + 24) = v22;
  *(_BYTE *)(v7 + 105) = 0;
  sub_23BB88A44();
  *(_QWORD *)(v7 + 64) = v17;
  *(_QWORD *)(v7 + 72) = v18;
  *(_BYTE *)(v7 + 80) = v19;
  *(_BYTE *)(v7 + 81) = v30;
  v25 = v33;
  *(_QWORD *)(v7 + 88) = v32;
  *(_QWORD *)(v7 + 96) = v25;
  *(_BYTE *)(v7 + 104) = v31;
  v26 = v28;
  *(_OWORD *)(v7 + 32) = v29;
  *(_OWORD *)(v7 + 48) = v26;
  sub_23BA15A5C();
  return v7;
}

uint64_t sub_23BA15A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  int64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v74 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v71 - v6;
  v78 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v8 = *(_QWORD *)(v78 - 8);
  v10 = MEMORY[0x24BDAC7A8](v78, v9);
  v12 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)v71 - v14;
  sub_23BB88A08();
  v16 = v84;
  v17 = v85;
  swift_getKeyPath();
  v81 = v0;
  v82 = v16;
  v83 = v17;
  v86 = v0;
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A14();
  sub_23BA0FDE0(v16);
  result = swift_release();
  if (*(_BYTE *)(v0 + 105) == 1)
  {
    v77 = v7;
    v79 = v15;
    v75 = v12;
    v19 = (uint64_t)v74;
    v72 = v0;
    v20 = *(_QWORD *)(v0 + 32);
    swift_getKeyPath();
    v84 = v20;
    sub_23B97D0C8((unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider);
    sub_23BB88A20();
    swift_release();
    v21 = (uint64_t *)(v20 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
    swift_beginAccess();
    v22 = *v21;
    swift_bridgeObjectRetain_n();
    v73 = v22;
    v23 = sub_23BA16B48(v22);
    v71[2] = 0;
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = v23 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v76 = *(_QWORD *)(v8 + 72);
      v71[1] = v23;
      swift_bridgeObjectRetain();
      v80 = MEMORY[0x24BEE4AF8];
      v26 = (uint64_t)v79;
      v27 = (uint64_t)v75;
      do
      {
        sub_23B989CE8(v25, v26, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
        sub_23B989CE8(v26, v27, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23B989CA4(v27, v19, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
          v28 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
          v29 = *(_QWORD *)(v28 - 8);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v19, 0, 1, v28);
        }
        else
        {
          v28 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
          v29 = *(_QWORD *)(v28 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v19, 1, 1, v28);
        }
        v30 = v19;
        v31 = (uint64_t)v77;
        sub_23B990D24(v19, (uint64_t)v77, &qword_256A5AA60);
        type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v28) == 1)
        {
          sub_23B989D60(v31, &qword_256A5AA60);
          v26 = (uint64_t)v79;
          sub_23B989D9C((uint64_t)v79, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
        }
        else
        {
          v33 = *(_QWORD *)v31;
          v32 = *(_QWORD *)(v31 + 8);
          v34 = v31;
          v35 = *(_BYTE *)(v31 + 16);
          swift_bridgeObjectRetain();
          sub_23B989D9C(v34, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
          sub_23B989D9C((uint64_t)v79, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v36 = (_QWORD *)v80;
          else
            v36 = sub_23BB63630(0, *(_QWORD *)(v80 + 16) + 1, 1, (_QWORD *)v80);
          v38 = v36[2];
          v37 = v36[3];
          if (v38 >= v37 >> 1)
            v36 = sub_23BB63630((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
          v36[2] = v38 + 1;
          v80 = (uint64_t)v36;
          v39 = &v36[3 * v38];
          v39[4] = v33;
          v39[5] = v32;
          *((_BYTE *)v39 + 48) = v35;
          v26 = (uint64_t)v79;
          v27 = (uint64_t)v75;
        }
        v25 += v76;
        --v24;
        v19 = v30;
      }
      while (v24);
      swift_bridgeObjectRelease_n();
      v40 = (_QWORD *)v80;
    }
    else
    {
      swift_bridgeObjectRelease();
      v40 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v41 = MEMORY[0x24BEE4AF8];
    v42 = v40[2];
    if (v42)
    {
      v86 = MEMORY[0x24BEE4AF8];
      v80 = (uint64_t)v40;
      sub_23BB005DC(0, v42, 0);
      v43 = v80;
      v44 = 0;
      v45 = v86;
      v46 = *(_QWORD *)(v86 + 16);
      v47 = 24 * v46;
      do
      {
        v49 = *(_QWORD *)(v43 + v44 + 32);
        v48 = *(_QWORD *)(v43 + v44 + 40);
        v50 = *(_BYTE *)(v43 + v44 + 48);
        v86 = v45;
        v51 = v46 + 1;
        v52 = *(_QWORD *)(v45 + 24);
        swift_bridgeObjectRetain();
        if (v46 >= v52 >> 1)
        {
          sub_23BB005DC(v52 > 1, v51, 1);
          v45 = v86;
        }
        *(_QWORD *)(v45 + 16) = v51;
        v53 = v45 + v47 + v44;
        *(_QWORD *)(v53 + 32) = v49;
        *(_QWORD *)(v53 + 40) = v48;
        *(_BYTE *)(v53 + 48) = v50;
        *(_BYTE *)(v53 + 49) = 1;
        v44 += 24;
        ++v46;
        --v42;
        v43 = v80;
      }
      while (v42);
      swift_bridgeObjectRelease();
      v41 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v45 = MEMORY[0x24BEE4AF8];
    }
    v54 = sub_23BA13F80(v73);
    v55 = *(_QWORD *)(v54 + 16);
    if (v55)
    {
      v79 = (char *)v45;
      v86 = v41;
      sub_23BB005B0(0, v55, 0);
      v56 = 0;
      v57 = v86;
      v58 = *(_QWORD *)(v86 + 16);
      v80 = 24 * v58;
      do
      {
        v59 = v54;
        v61 = *(_QWORD *)(v54 + v56 + 32);
        v60 = *(_QWORD *)(v54 + v56 + 40);
        v62 = *(_BYTE *)(v54 + v56 + 48);
        v86 = v57;
        v63 = v58 + 1;
        v64 = *(_QWORD *)(v57 + 24);
        swift_bridgeObjectRetain();
        if (v58 >= v64 >> 1)
        {
          sub_23BB005B0(v64 > 1, v63, 1);
          v57 = v86;
        }
        *(_QWORD *)(v57 + 16) = v63;
        v65 = (char *)(v57 + v80 + v56);
        *((_QWORD *)v65 + 4) = v61;
        *((_QWORD *)v65 + 5) = v60;
        v65[48] = v62;
        v56 += 24;
        ++v58;
        --v55;
        v54 = v59;
      }
      while (v55);
      swift_bridgeObjectRelease();
      v45 = (uint64_t)v79;
    }
    else
    {
      swift_bridgeObjectRelease();
      v57 = MEMORY[0x24BEE4AF8];
    }
    v66 = v72;
    v67 = sub_23BAE696C(v45);
    swift_bridgeObjectRelease();
    v68 = *(_QWORD *)(v66 + 16);
    v69 = *(_QWORD *)(v66 + 24);
    swift_bridgeObjectRetain();
    sub_23BACE960(v67, v68, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v70 = sub_23BAE6A0C(v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BACFD70(v70, v68, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *PeopleListController.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = v0[2];
  v7 = v0[3];
  v9 = v0[4];
  v10 = v0[5];
  v11 = v0[6];
  v12 = v0[7];
  sub_23BB8A9F4();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v13 = sub_23BB8A9E8();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v9;
  v14[5] = v8;
  v14[6] = v7;
  v14[7] = v10;
  v14[8] = v11;
  v14[9] = v12;
  sub_23B989F54((uint64_t)v5, (uint64_t)&unk_256A5CA20, (uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23BA0FDE0(v1[8]);
  swift_bridgeObjectRelease();
  v16 = (char *)v1 + OBJC_IVAR____TtC12FindMyUICore20PeopleListController___observationRegistrar;
  v17 = sub_23BB88A50();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  return v1;
}

uint64_t sub_23BA162D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  sub_23BB8A9F4();
  v8[8] = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA16354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  sub_23B98B760(v2, v1);
  sub_23B98BA0C(v2, v1);
  sub_23B98AF5C(v2, v1);
  sub_23B98BCB8(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA163DC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA16428(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B990D68;
  return sub_23BA162D8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t PeopleListController.__deallocating_deinit()
{
  PeopleListController.deinit();
  return swift_deallocClassInstance();
}

void sub_23BA164EC(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 32);
  swift_getKeyPath();
  v32 = v3;
  sub_23B97D0C8((unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider);
  sub_23BB88A20();
  swift_release();
  v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(v2 + 40);
  swift_getKeyPath();
  v31 = v6;
  sub_23B97D0C8((unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  swift_beginAccess();
  v8 = *v7;
  v9 = *(_QWORD *)(v2 + 48);
  swift_getKeyPath();
  v30 = v9;
  sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v10 = *(void **)(v9 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  v11 = *(_QWORD *)(v2 + 56);
  swift_getKeyPath();
  v30 = v11;
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  v21 = v10;
  sub_23BB88A20();
  swift_release();
  v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data);
  swift_beginAccess();
  v13 = *v12;
  v24 = v8;
  v25 = v13;
  v26 = v10;
  swift_bridgeObjectRetain();
  v14 = sub_23BA174A8(v5, (void (*)(uint64_t, uint64_t))sub_23BA186F0, (uint64_t)v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = v14;
  swift_getKeyPath();
  v28 = v2;
  sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  v15 = *(_BYTE *)(v2 + 81);
  LOBYTE(v27) = *(_BYTE *)(v2 + 80);
  BYTE1(v27) = v15;
  v27 = PeopleListController.Sort.sortDescriptors()();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CB20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CB28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CB30);
  v16 = MEMORY[0x24BEE12C8];
  sub_23B996E1C(&qword_256A5CB38, &qword_256A5CB20, MEMORY[0x24BEE12C8]);
  sub_23B996E1C(&qword_256A5CB40, &qword_256A5CB28, v16);
  sub_23B996E1C(&qword_256A5CB48, &qword_256A5CB30, MEMORY[0x24BDCBF20]);
  v17 = sub_23BB8A898();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_23BA17884(v18, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  v20 = sub_23BA17C3C(v19, v2);
  swift_release();
  swift_bridgeObjectRelease();

  *a1 = v17;
  a1[1] = v20;
}

uint64_t sub_23BA16934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_23BB8A9F4();
  swift_retain();
  v6 = sub_23BB8A9E8();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  swift_release();
  sub_23B989F54((uint64_t)v3, (uint64_t)&unk_256A5CB18, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_23BA16A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  sub_23BB8A9F4();
  *(_QWORD *)(v4 + 48) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA16AE0()
{
  uint64_t v0;

  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_23BA15A5C();
    swift_release();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA16B48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t i;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState(0);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v57 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v59 = (uint64_t)&v52 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v52 - v14;
  v61 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v63 = *(_QWORD *)(v61 - 8);
  v17 = MEMORY[0x24BDAC7A8](v61, v16);
  v53 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v22 = (char *)&v52 - v21;
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v60 = (uint64_t)&v52 - v25;
  result = MEMORY[0x24BDAC7A8](v24, v26);
  v29 = (char *)&v52 - v28;
  v30 = 0;
  v64 = MEMORY[0x24BEE4AF8];
  v31 = *(_QWORD *)(a1 + 64);
  v54 = v2;
  v55 = a1 + 64;
  v32 = 1 << *(_BYTE *)(a1 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & v31;
  v56 = (unint64_t)(v32 + 63) >> 6;
  v62 = a1;
  v58 = v22;
  if ((v33 & v31) != 0)
    goto LABEL_7;
LABEL_8:
  v37 = v30 + 1;
  if (!__OFADD__(v30, 1))
  {
    if (v37 < v56)
    {
      v38 = *(_QWORD *)(v55 + 8 * v37);
      ++v30;
      if (v38)
        goto LABEL_23;
      v30 = v37 + 1;
      if (v37 + 1 >= v56)
        goto LABEL_38;
      v38 = *(_QWORD *)(v55 + 8 * v30);
      if (v38)
        goto LABEL_23;
      v30 = v37 + 2;
      if (v37 + 2 >= v56)
        goto LABEL_38;
      v38 = *(_QWORD *)(v55 + 8 * v30);
      if (v38)
        goto LABEL_23;
      v30 = v37 + 3;
      if (v37 + 3 >= v56)
        goto LABEL_38;
      v38 = *(_QWORD *)(v55 + 8 * v30);
      if (v38)
      {
LABEL_23:
        v34 = (v38 - 1) & v38;
        for (i = __clz(__rbit64(v38)) + (v30 << 6); ; i = v35 | (v30 << 6))
        {
          v40 = *(_QWORD *)(v63 + 72);
          v41 = v60;
          sub_23B989CE8(*(_QWORD *)(v62 + 56) + v40 * i, v60, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
          sub_23B989CA4(v41, (uint64_t)v29, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
          sub_23B989CE8((uint64_t)v29, (uint64_t)v22, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_23B989CA4((uint64_t)v22, (uint64_t)v12, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
            v42 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 0, 1, v42);
          }
          else
          {
            v42 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 1, 1, v42);
          }
          v43 = v12;
          sub_23B990D24((uint64_t)v12, (uint64_t)v15, &qword_256A5AA60);
          type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v15, 1, v42) == 1)
            break;
          v44 = (uint64_t)&v15[*(int *)(v42 + 24)];
          v45 = v59;
          sub_23B989CE8(v44, v59, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
          sub_23B989D9C((uint64_t)v15, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
          sub_23B989CE8(v45, v57, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            v22 = v58;
            if (EnumCaseMultiPayload == 1)
              sub_23B989D60(v57, (uint64_t *)&unk_256A5E6B0);
            sub_23B989D9C(v59, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
LABEL_6:
            result = sub_23B989D9C((uint64_t)v29, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
            if (!v34)
              goto LABEL_8;
            goto LABEL_7;
          }
          v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
          v48 = v57;
          sub_23B989D60(v57 + *(int *)(v47 + 48), (uint64_t *)&unk_256A5E6B0);
          sub_23B989D60(v48, (uint64_t *)&unk_256A5E6B0);
          sub_23B989D9C(v59, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.FollowingState);
          sub_23B989CA4((uint64_t)v29, v53, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
          v49 = v64;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23BB00608(0, *(_QWORD *)(v49 + 16) + 1, 1);
            v49 = v64;
          }
          v51 = *(_QWORD *)(v49 + 16);
          v50 = *(_QWORD *)(v49 + 24);
          if (v51 >= v50 >> 1)
          {
            sub_23BB00608(v50 > 1, v51 + 1, 1);
            v49 = v64;
          }
          *(_QWORD *)(v49 + 16) = v51 + 1;
          result = sub_23B989CA4(v53, v49+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ v51 * v40, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
          v12 = v43;
          v22 = v58;
          if (!v34)
            goto LABEL_8;
LABEL_7:
          v35 = __clz(__rbit64(v34));
          v34 &= v34 - 1;
        }
        sub_23B989D60((uint64_t)v15, &qword_256A5AA60);
        v22 = v58;
        goto LABEL_6;
      }
      v39 = v37 + 4;
      if (v39 < v56)
      {
        v38 = *(_QWORD *)(v55 + 8 * v39);
        if (v38)
        {
          v30 = v39;
          goto LABEL_23;
        }
        while (1)
        {
          v30 = v39 + 1;
          if (__OFADD__(v39, 1))
            goto LABEL_40;
          if (v30 >= v56)
            break;
          v38 = *(_QWORD *)(v55 + 8 * v30);
          ++v39;
          if (v38)
            goto LABEL_23;
        }
      }
    }
LABEL_38:
    swift_release();
    return v64;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23BA170D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  char v24;
  void *v25;
  id v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _OWORD v32[8];
  uint64_t v33;
  _BYTE __dst[136];
  _BYTE v35[136];

  v11 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v12 = *(unsigned __int8 *)(a1 + 16);
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_23B9849D0(v11, v10, v12);
    if ((v15 & 1) != 0)
    {
      v16 = (_OWORD *)(*(_QWORD *)(a3 + 56) + 136 * v14);
      v32[0] = *v16;
      v17 = v16[4];
      v19 = v16[1];
      v18 = v16[2];
      v32[3] = v16[3];
      v32[4] = v17;
      v32[1] = v19;
      v32[2] = v18;
      v21 = v16[6];
      v20 = v16[7];
      v22 = v16[5];
      v33 = *((_QWORD *)v16 + 16);
      v32[6] = v21;
      v32[7] = v20;
      v32[5] = v22;
      memmove(__dst, v16, 0x88uLL);
      nullsub_1(__dst);
      sub_23B9894E4((uint64_t)v32);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  sub_23BA186FC((uint64_t)__dst);
LABEL_6:
  sub_23B990D24((uint64_t)__dst, (uint64_t)v35, &qword_256A5AA48);
  if (*(_QWORD *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    v23 = sub_23B984A70(v11, v10, v12);
    if ((v24 & 1) != 0)
    {
      v25 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v23);
      v26 = v25;
    }
    else
    {
      v25 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v27 = (int *)type metadata accessor for PersonInfo();
  sub_23B989CE8(a2, a6 + v27[5], type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
  v28 = a6 + v27[9];
  v29 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_QWORD *)a6 = v11;
  *(_QWORD *)(a6 + 8) = v10;
  *(_BYTE *)(a6 + 16) = v12;
  sub_23B990D24((uint64_t)v35, a6 + v27[6], &qword_256A5AA48);
  *(_QWORD *)(a6 + v27[7]) = a5;
  *(_QWORD *)(a6 + v27[8]) = v25;
  v30 = a5;
  return swift_bridgeObjectRetain();
}

Swift::Void __swiftcall PeopleListController.onAppear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 + 105) = 1;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v3 = sub_23B98FC9C((uint64_t)&unk_250CA9AC8);
  swift_arrayDestroy();
  sub_23B98E128(v3, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = sub_23B98F234((uint64_t)&unk_250CA9B00);
  swift_bridgeObjectRetain();
  sub_23B98D950(v4, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PeopleListController.onDisappear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + 105) = 0;
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_23B98B760(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98BA0C(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98AF5C(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98BCB8(v1, v2);
  swift_bridgeObjectRelease();
}

uint64_t sub_23BA17420(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23BA174A8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v59 = a2;
  v60 = a3;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CB50);
  v6 = MEMORY[0x24BDAC7A8](v58, v5);
  v57 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v56 = (uint64_t *)((char *)&v47 - v10);
  MEMORY[0x24BDAC7A8](v9, v11);
  v55 = (uint64_t *)((char *)&v47 - v12);
  v13 = type metadata accessor for PersonInfo();
  v54 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = MEMORY[0x24BEE4AF8];
  if (!v17)
    return v18;
  v47 = v3;
  v63 = MEMORY[0x24BEE4AF8];
  sub_23BB00584(0, v17, 0);
  result = sub_23BA17420(a1);
  v21 = result;
  v22 = 0;
  v23 = a1 + 64;
  v48 = a1 + 80;
  v49 = v17;
  v52 = v16;
  v53 = a1;
  v50 = v20;
  v51 = a1 + 64;
  while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << *(_BYTE *)(a1 + 32))
  {
    v26 = (unint64_t)v21 >> 6;
    if ((*(_QWORD *)(v23 + 8 * ((unint64_t)v21 >> 6)) & (1 << v21)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v20)
      goto LABEL_26;
    v61 = v22;
    v62 = 1 << v21;
    v27 = v58;
    v28 = (uint64_t)v55;
    v29 = (uint64_t)v55 + *(int *)(v58 + 48);
    v30 = *(_QWORD *)(a1 + 56);
    v31 = *(_QWORD *)(a1 + 48) + 24 * v21;
    v33 = *(_QWORD *)v31;
    v32 = *(_QWORD *)(v31 + 8);
    v34 = *(_BYTE *)(v31 + 16);
    *v55 = *(_QWORD *)v31;
    *(_QWORD *)(v28 + 8) = v32;
    *(_BYTE *)(v28 + 16) = v34;
    v35 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
    sub_23B989CE8(v30 + *(_QWORD *)(*(_QWORD *)(v35 - 8) + 72) * v21, v29, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v36 = (uint64_t)v56;
    *v56 = v33;
    *(_QWORD *)(v36 + 8) = v32;
    *(_BYTE *)(v36 + 16) = v34;
    sub_23B989CE8(v29, v36 + *(int *)(v27 + 48), type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
    v37 = v57;
    sub_23B990D24(v36, v57, &qword_256A5CB50);
    swift_bridgeObjectRetain_n();
    sub_23B989D60(v28, &qword_256A5CB50);
    v38 = *(int *)(v27 + 48);
    v39 = (uint64_t)v52;
    v59(v37, v37 + v38);
    sub_23B989D60(v37, &qword_256A5CB50);
    v18 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23BB00584(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v63;
    }
    v41 = *(_QWORD *)(v18 + 16);
    v40 = *(_QWORD *)(v18 + 24);
    a1 = v53;
    if (v41 >= v40 >> 1)
    {
      sub_23BB00584(v40 > 1, v41 + 1, 1);
      v18 = v63;
    }
    *(_QWORD *)(v18 + 16) = v41 + 1;
    result = sub_23B989CA4(v39, v18+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v41, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
    v24 = 1 << *(_BYTE *)(a1 + 32);
    if (v21 >= v24)
      goto LABEL_27;
    v23 = v51;
    v42 = *(_QWORD *)(v51 + 8 * v26);
    if ((v42 & v62) == 0)
      goto LABEL_28;
    LODWORD(v20) = v50;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v50)
      goto LABEL_29;
    v43 = v42 & (-2 << (v21 & 0x3F));
    if (v43)
    {
      v24 = __clz(__rbit64(v43)) | v21 & 0xFFFFFFFFFFFFFFC0;
      v25 = v49;
    }
    else
    {
      v44 = v26 + 1;
      v45 = (unint64_t)(v24 + 63) >> 6;
      v25 = v49;
      if (v26 + 1 < v45)
      {
        v46 = *(_QWORD *)(v51 + 8 * v44);
        if (v46)
        {
LABEL_22:
          v24 = __clz(__rbit64(v46)) + (v44 << 6);
        }
        else
        {
          while (v45 - 2 != v26)
          {
            v46 = *(_QWORD *)(v48 + 8 * v26++);
            if (v46)
            {
              v44 = v26 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v22 = v61 + 1;
    v21 = v24;
    if (v61 + 1 == v25)
      return v18;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23BA17884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v44 = type metadata accessor for PersonInfo();
  v5 = *(_QWORD *)(v44 - 8);
  v7 = MEMORY[0x24BDAC7A8](v44, v6);
  v48 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v43 = (uint64_t *)((char *)&v40 - v11);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v40 - v13;
  v15 = MEMORY[0x24BEE4AF8];
  v53 = MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(a1 + 16);
  v17 = OBJC_IVAR____TtC12FindMyUICore20PeopleListController___observationRegistrar;
  swift_beginAccess();
  if (v16)
  {
    v40 = v2;
    v47 = a2 + v17;
    v18 = *(_QWORD *)(v5 + 72);
    v45 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v46 = v18;
    v19 = a1 + v45;
    v20 = a2;
    v41 = (uint64_t *)v14;
    v42 = a2;
    while (1)
    {
      sub_23B989CE8(v19, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
      swift_getKeyPath();
      v51 = v20;
      sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
      sub_23BB88A20();
      swift_release();
      v22 = *(_QWORD *)(v20 + 88);
      v23 = *(_QWORD *)(v20 + 96);
      v24 = HIBYTE(v23) & 0xF;
      if ((v23 & 0x2000000000000000) == 0)
        v24 = v22 & 0xFFFFFFFFFFFFLL;
      if (!v24)
      {
LABEL_20:
        sub_23B989CA4((uint64_t)v14, v48, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
        v35 = v53;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23BB00584(0, *(_QWORD *)(v35 + 16) + 1, 1);
          v35 = v53;
        }
        v37 = *(_QWORD *)(v35 + 16);
        v36 = *(_QWORD *)(v35 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_23BB00584(v36 > 1, v37 + 1, 1);
          v35 = v53;
        }
        *(_QWORD *)(v35 + 16) = v37 + 1;
        v38 = v35 + v45;
        v21 = v46;
        sub_23B989CA4(v48, v38 + v37 * v46, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
        goto LABEL_4;
      }
      v25 = *(void **)&v14[*(int *)(v44 + 32)];
      if (!v25)
        break;
      swift_bridgeObjectRetain();
      v26 = objc_msgSend(v25, sel_givenName);
      v27 = sub_23BB8A7B4();
      v29 = v28;

      v30 = HIBYTE(v29) & 0xF;
      if ((v29 & 0x2000000000000000) == 0)
        v30 = v27 & 0xFFFFFFFFFFFFLL;
      if (!v30)
      {
        swift_bridgeObjectRelease();
        v31 = v43;
        goto LABEL_16;
      }
      v31 = v43;
      sub_23B989CE8((uint64_t)v14, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
      if (!v29)
        goto LABEL_17;
LABEL_18:
      sub_23B989D9C((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
      v51 = v27;
      v52 = v29;
      v49 = v22;
      v50 = v23;
      sub_23B9967E0();
      v32 = sub_23BB8ACF4();
      swift_bridgeObjectRelease();
      v33 = v41[1];
      v51 = *v41;
      v52 = v33;
      v49 = v22;
      v50 = v23;
      v14 = (char *)v41;
      v34 = sub_23BB8ACF4();
      swift_bridgeObjectRelease();
      v20 = v42;
      if ((v32 & 1) != 0 || (v34 & 1) != 0)
        goto LABEL_20;
      sub_23B989D9C((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
      v21 = v46;
LABEL_4:
      v19 += v21;
      if (!--v16)
        return v53;
    }
    swift_bridgeObjectRetain();
    v31 = v43;
LABEL_16:
    sub_23B989CE8((uint64_t)v14, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
LABEL_17:
    v27 = *v31;
    v29 = v31[1];
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  return v15;
}

uint64_t sub_23BA17C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int EnumCaseMultiPayload;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  char *v63;
  uint64_t v64;
  double v65;
  double v66;
  uint64_t (*v67)(char *, uint64_t);
  uint64_t result;
  double v69;
  id v70;
  char *v71;
  char *v72;
  void (*v73)(char *, uint64_t);
  _QWORD v74[2];
  id v75;
  id v76;
  id v77;
  char *v78;
  uint64_t *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96[16];
  _QWORD v97[17];
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v88 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  MEMORY[0x24BDAC7A8](v88, v4);
  v87 = (uint64_t)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA60);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v86 = (uint64_t)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)v74 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AA58);
  MEMORY[0x24BDAC7A8](v13, v14);
  v85 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59408);
  v17 = *(_QWORD *)(v16 - 8);
  v89 = v16;
  v90 = v17;
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v78 = (char *)v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v81 = (char *)v74 - v23;
  MEMORY[0x24BDAC7A8](v22, v24);
  v82 = (char *)v74 - v25;
  v91 = (int *)type metadata accessor for PersonInfo();
  v26 = *((_QWORD *)v91 - 1);
  v28 = MEMORY[0x24BDAC7A8](v91, v27);
  v94 = (uint64_t)v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = (char *)v74 - v31;
  v33 = MEMORY[0x24BEE4AF8];
  v100 = MEMORY[0x24BEE4AF8];
  v83 = a1;
  v34 = *(_QWORD *)(a1 + 16);
  v35 = OBJC_IVAR____TtC12FindMyUICore20PeopleListController___observationRegistrar;
  swift_beginAccess();
  swift_beginAccess();
  if (!v34)
    return v33;
  v93 = a2 + v35;
  v36 = *(_QWORD *)(v26 + 72);
  v92 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v37 = v83 + v92;
  v79 = &v99;
  v80 = v12 + 8;
  v83 = v36;
  v84 = v12;
  while (1)
  {
    sub_23B989CE8(v37, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
    swift_getKeyPath();
    v98 = a2;
    sub_23B97D0C8(&qword_256A5CA10, (uint64_t (*)(uint64_t))type metadata accessor for PeopleListController, (uint64_t)&protocol conformance descriptor for PeopleListController);
    sub_23BB88A20();
    swift_release();
    v38 = *(_QWORD *)(a2 + 96);
    v39 = *(_QWORD *)(a2 + 88) & 0xFFFFFFFFFFFFLL;
    if ((v38 & 0x2000000000000000) != 0)
      v39 = HIBYTE(v38) & 0xF;
    if (v39 || (swift_getKeyPath(), v98 = a2, sub_23BB88A20(), swift_release(), !*(_BYTE *)(a2 + 104)))
    {
LABEL_9:
      sub_23B989CA4((uint64_t)v32, v94, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
      v40 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23BB00584(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v40 = v100;
      }
      v42 = *(_QWORD *)(v40 + 16);
      v41 = *(_QWORD *)(v40 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_23BB00584(v41 > 1, v42 + 1, 1);
        v40 = v100;
      }
      *(_QWORD *)(v40 + 16) = v42 + 1;
      sub_23B989CA4(v94, v40 + v92 + v42 * v36, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
      goto LABEL_5;
    }
    if (*(_BYTE *)(a2 + 104) != 1)
    {
      v46 = v87;
      sub_23B989CE8((uint64_t)&v32[v91[5]], v87, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v48 = v86;
      if (EnumCaseMultiPayload == 1)
      {
        sub_23B989CA4(v46, v86, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
        v49 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
        v50 = *(_QWORD *)(v49 - 8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v48, 0, 1, v49);
      }
      else
      {
        v49 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
        v50 = *(_QWORD *)(v49 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v48, 1, 1, v49);
      }
      v54 = v48;
      v55 = (uint64_t)v84;
      sub_23B990D24(v54, (uint64_t)v84, &qword_256A5AA60);
      type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v55, 1, v49) == 1)
      {
        sub_23B989D60(v55, &qword_256A5AA60);
        v36 = v83;
      }
      else
      {
        v56 = v80[*(int *)(v49 + 28)];
        sub_23B989D9C(v55, type metadata accessor for PeopleRelationshipsProvider.RelationshipState.LoadedState);
        v36 = v83;
        if ((v56 & 1) == 0)
          goto LABEL_9;
      }
      goto LABEL_4;
    }
    sub_23B990D24((uint64_t)&v32[v91[6]], (uint64_t)v97, &qword_256A5AA48);
    sub_23B990D24((uint64_t)v97, (uint64_t)&v98, &qword_256A5AA48);
    v43 = sub_23B9BE120((uint64_t)&v98);
    v44 = v90;
    if (v43 == 1)
      goto LABEL_17;
    v51 = (uint64_t)v79;
    sub_23B990D24((uint64_t)v79, (uint64_t)v96, &qword_256A5AA50);
    v52 = sub_23B9B20A4(v96);
    v53 = v89;
    if (v52 != 1)
      break;
    v45 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v85, 1, 1, v89);
LABEL_31:
    sub_23B9BE3C8(v97, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE424);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v53) == 1)
      goto LABEL_32;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v82, v45, v53);
    v77 = objc_msgSend((id)objc_opt_self(), sel_kilometers);
    sub_23B97CD2C();
    v72 = v81;
    sub_23BB88678();
    LODWORD(v77) = sub_23BB8866C();
    v73 = *(void (**)(char *, uint64_t))(v90 + 8);
    v73(v72, v53);
    v73(v82, v53);
    if ((v77 & 1) != 0)
      goto LABEL_9;
LABEL_4:
    sub_23B989D9C((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for PersonInfo);
LABEL_5:
    v37 += v36;
    if (!--v34)
      return v100;
  }
  sub_23B990D24(v51, (uint64_t)&v95, &qword_256A5AA50);
  v57 = *(void **)&v32[v91[7]];
  if (!v57)
  {
LABEL_17:
    v45 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v85, 1, 1, v89);
LABEL_32:
    sub_23B989D60(v45, &qword_256A5AA58);
    goto LABEL_4;
  }
  v58 = v95;
  sub_23B9BE3C8(v97, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B9BE15C);
  v59 = v57;
  v60 = v58;
  v76 = v59;
  v77 = v60;
  objc_msgSend(v59, sel_distanceFromLocation_, v60);
  v61 = (void *)objc_opt_self();
  v62 = objc_msgSend(v61, sel_meters);
  v74[1] = sub_23B97CD2C();
  sub_23BB88678();

  v75 = v61;
  v77 = objc_msgSend(v61, sel_meters);
  v63 = v78;
  v64 = v89;
  sub_23BB88690();

  sub_23BB88684();
  v66 = v65;
  v67 = *(uint64_t (**)(char *, uint64_t))(v90 + 8);
  result = v67(v63, v64);
  v69 = v66 / 30.0;
  if ((~COERCE__INT64(v66 / 30.0) & 0x7FF0000000000000) != 0)
  {
    if (v69 <= -9.22337204e18)
      goto LABEL_38;
    if (v69 >= 9.22337204e18)
      goto LABEL_39;
    v70 = objc_msgSend(v75, sel_meters);
    v71 = v85;
    sub_23BB88678();
    v53 = v89;
    v67(v81, v89);
    v45 = (uint64_t)v71;
    v44 = v90;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v45, 0, 1, v53);

    goto LABEL_31;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23BA184A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = PeopleListController.filter.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_23BA184E4()
{
  return type metadata accessor for PeopleListController();
}

uint64_t sub_23BA184EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88A50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PeopleListController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeopleListController.__allocating_init(initialState:sort:search:filterStorage:dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t (*sub_23BA185B0())()
{
  swift_allocObject();
  swift_weakInit();
  return sub_23BA18638;
}

uint64_t sub_23BA185F8()
{
  return sub_23BA18750();
}

uint64_t sub_23BA18614()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BA18638()
{
  return sub_23BA16934();
}

uint64_t sub_23BA18640()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA1866C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B97C964;
  return sub_23BA16A74(a1, v4, v5, v6);
}

uint64_t sub_23BA186F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23BA170D0(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), a3);
}

double sub_23BA186FC(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_23BB8F630;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  return result;
}

uint64_t sub_23BA18720()
{
  uint64_t v0;
  __int16 v1;

  if (*(_BYTE *)(v0 + 25))
    v1 = 256;
  else
    v1 = 0;
  return sub_23BA14A04(*(_QWORD *)(v0 + 16), v1 | *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_23BA18750()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[2];
  v1 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = v1;
  *(_QWORD *)(v2 + 72) = v3;
  sub_23BA0E458(v1);
  return sub_23BA0FDE0(v4);
}

uint64_t sub_23BA18798()
{
  return sub_23BA154EC();
}

uint64_t sub_23BA187AC()
{
  return sub_23BA15014();
}

uint64_t sub_23BA187C0()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BA19230();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23BA1883C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BA19230();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA188B4()
{
  swift_getKeyPath();
  sub_23BA19230();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA18958()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_23BA19230();
  sub_23BB88A20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 88);
  sub_23B9B7598(v1);
  return v1;
}

uint64_t sub_23BA189D8@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *, unsigned __int8 *, uint64_t);

  v3 = *a1;
  swift_getKeyPath();
  sub_23BA19230();
  sub_23BB88A20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 88);
  v5 = *(_QWORD *)(v3 + 96);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_23BA192A8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *, uint64_t))v6;
  return sub_23B9B7598(v4);
}

uint64_t sub_23BA18A88(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(char, char, uint64_t, uint64_t, char);
  uint64_t KeyPath;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    v4 = sub_23BA1929C;
  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath, v6);
  sub_23B9B7598(v2);
  sub_23BA19230();
  sub_23BB88A14();
  sub_23B9BD73C((uint64_t)v4);
  return swift_release();
}

uint64_t sub_23BA18B94()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR___FMUIDiscoveredAccessory_productType);
  if (v1 >= 2)
  {
    if (v1 != 2)
    {
      result = sub_23BB8B1C8();
      __break(1u);
      return result;
    }
    if (qword_256A58DB0 != -1)
      swift_once();
    v2 = (void *)qword_256A73DF8;
    if (qword_256A73DF8)
      goto LABEL_11;
LABEL_12:
    v5 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v4 = objc_msgSend(v5, sel_mainBundle);
    v3 = 0;
    goto LABEL_13;
  }
  if (qword_256A58DA8 != -1)
    swift_once();
  v2 = (void *)qword_256A73DE0;
  if (!qword_256A73DE0)
    goto LABEL_12;
LABEL_11:
  swift_bridgeObjectRetain();
  v3 = v2;
  v4 = v3;
LABEL_13:
  v6 = v3;
  v7 = (void *)sub_23BB8A784();
  v8 = (void *)sub_23BB8A784();
  v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  v10 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_23BA18DD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void (*v4)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);

  v1 = v0[8];
  v2 = v0[9];
  __swift_project_boxed_opaque_existential_1(v0 + 5, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
  swift_getKeyPath();
  sub_23BA19230();
  sub_23BB88A20();
  result = swift_release();
  v4 = (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v0[11];
  if (v4)
  {
    swift_retain();
    v4(2, 2, 0, 0, 1);
    return sub_23B9BD73C((uint64_t)v4);
  }
  return result;
}

uint64_t sub_23BA18E94()
{
  uint64_t v0;
  uint64_t result;
  void (*v2)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t);

  swift_getKeyPath();
  sub_23BA19230();
  sub_23BB88A20();
  result = swift_release();
  v2 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(v0 + 88);
  if (v2)
  {
    swift_retain();
    v2(2, 2, 0, 0, 1);
    return sub_23B9BD73C((uint64_t)v2);
  }
  return result;
}

uint64_t sub_23BA18F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  sub_23B9BD73C(*(_QWORD *)(v0 + 88));
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore24AccountNotReadyViewModel___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BA18FA4()
{
  return type metadata accessor for AccountNotReadyViewModel();
}

uint64_t type metadata accessor for AccountNotReadyViewModel()
{
  uint64_t result;

  result = qword_256A5CB88;
  if (!qword_256A5CB88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA18FE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88A50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23BA19090()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_getKeyPath();
  sub_23BA19230();
  sub_23BB88A20();
  swift_release();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23BA1910C()
{
  return sub_23BA18B94();
}

uint64_t sub_23BA19134(uint64_t a1)
{
  swift_getKeyPath();
  sub_23B9B7598(a1);
  sub_23BA19230();
  sub_23BB88A14();
  sub_23B9BD73C(a1);
  return swift_release();
}

uint64_t sub_23BA191E8()
{
  return sub_23BA18DD0();
}

uint64_t sub_23BA19208()
{
  return sub_23BA18E94();
}

unint64_t sub_23BA19230()
{
  unint64_t result;
  uint64_t ready;

  result = qword_256A5CC40;
  if (!qword_256A5CC40)
  {
    ready = type metadata accessor for AccountNotReadyViewModel();
    result = MEMORY[0x24260D8DC](&unk_23BB8F960, ready);
    atomic_store(result, (unint64_t *)&qword_256A5CC40);
  }
  return result;
}

uint64_t sub_23BA19278()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA1929C(char a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return sub_23B9BCE78(a1, a2, a3, a4, a5 & 1, *(uint64_t (**)(char *, char *, _QWORD *))(v5 + 16));
}

uint64_t sub_23BA192A8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23B9BCD34(a1, a2, a3, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v3 + 16));
}

uint64_t sub_23BA192B0()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58DA8 != -1)
    swift_once();
  v0 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_23BA193FC()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58DA8 != -1)
    swift_once();
  v0 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_23BA19550()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (qword_256A58DA8 != -1)
    swift_once();
  v0 = (void *)qword_256A73DE0;
  if (qword_256A73DE0)
  {
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = v1;
  }
  else
  {
    v3 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v2 = objc_msgSend(v3, sel_mainBundle);
    v1 = 0;
  }
  v4 = v1;
  v5 = (void *)sub_23BB8A784();
  v6 = (void *)sub_23BB8A784();
  v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  v8 = sub_23BB8A7B4();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_23BA196A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, unsigned __int8 a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t *v20;
  uint64_t v21;

  if (!a2)
    goto LABEL_6;
  v10 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v10 = a1 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v11 = a1;
    v12 = a2;
  }
  else
  {
LABEL_6:
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v15 = (void *)sub_23BB8A784();
    v16 = objc_msgSend(v14, sel_localizedStringForKey_value_table_, v15, 0, 0);

    v11 = sub_23BB8A7B4();
    v12 = v17;
    swift_bridgeObjectRelease();

  }
  v18 = type metadata accessor for SessionLocation.Description(0);
  sub_23BA197F4(a3, a4, (uint64_t)a5 + *(int *)(v18 + 20));
  result = sub_23BA1B574();
  *a5 = v11;
  a5[1] = v12;
  v20 = (uint64_t *)((char *)a5 + *(int *)(v18 + 24));
  *v20 = result;
  v20[1] = v21;
  return result;
}

uint64_t sub_23BA197F4@<X0>(void *a1@<X2>, unsigned __int8 a2@<W3>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[5];
  uint64_t v20;
  uint64_t v21;

  v5 = a2;
  v6 = sub_23BB8B384();
  v8 = v7;
  v9 = objc_msgSend(a1, sel_timestamp);
  sub_23BB8896C();

  if (v5 == 2)
    static FindMyRelativeDate.RecencyKey.live(recencyDuration:)(v6, v8, v19);
  else
    static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(v6, v8, v19);
  v17 = v19[1];
  v18 = v19[0];
  v15 = v19[3];
  v16 = v19[2];
  v14 = v19[4];
  v10 = v20;
  v11 = v21;
  v12 = a3 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  *(_OWORD *)v12 = v18;
  *(_OWORD *)(v12 + 16) = v17;
  *(_OWORD *)(v12 + 32) = v16;
  *(_OWORD *)(v12 + 48) = v15;
  *(_OWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 80) = v10;
  *(_QWORD *)(v12 + 88) = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  return swift_storeEnumTagMultiPayload();
}

BOOL static SessionHandleType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SessionHandleType.hash(into:)()
{
  return sub_23BB8B24C();
}

uint64_t SessionHandleType.hashValue.getter()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

unint64_t sub_23BA19980()
{
  unint64_t result;

  result = qword_256A5CC48;
  if (!qword_256A5CC48)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for SessionHandleType, &type metadata for SessionHandleType);
    atomic_store(result, (unint64_t *)&qword_256A5CC48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SessionHandleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BA19A10 + 4 * byte_23BB8F9E5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BA19A44 + 4 * byte_23BB8F9E0[v4]))();
}

uint64_t sub_23BA19A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA19A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA19A54);
  return result;
}

uint64_t sub_23BA19A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA19A68);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BA19A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA19A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionHandleType()
{
  return &type metadata for SessionHandleType;
}

uint64_t sub_23BA19A94(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for SessionPreferenceStreamChange(uint64_t a1)
{
  return sub_23BA19ABC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int16 *)(a1 + 16), *(_BYTE *)(a1 + 18));
}

uint64_t sub_23BA19ABC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s12FindMyUICore29SessionPreferenceStreamChangeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 18);
  v6 = *(unsigned __int16 *)(a2 + 16);
  sub_23BA19A94(*(_QWORD *)a2, v4, v6, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 18) = v5;
  return a1;
}

uint64_t assignWithCopy for SessionPreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 18);
  v6 = *(unsigned __int16 *)(a2 + 16);
  sub_23BA19A94(*(_QWORD *)a2, v4, v6, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v9 = *(unsigned __int16 *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v6;
  v10 = *(_BYTE *)(a1 + 18);
  *(_BYTE *)(a1 + 18) = v5;
  sub_23BA19ABC(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SessionPreferenceStreamChange(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_WORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 18);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(unsigned __int16 *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 18);
  *(_BYTE *)(a1 + 18) = v4;
  sub_23BA19ABC(v5, v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionPreferenceStreamChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 19))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 18);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionPreferenceStreamChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_BYTE *)(result + 18) = -(char)a2;
  }
  return result;
}

uint64_t sub_23BA19C8C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 18) <= 1u)
    return *(unsigned __int8 *)(a1 + 18);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23BA19CA4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_WORD *)(result + 16) = 0;
  }
  *(_BYTE *)(result + 18) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SessionPreferenceStreamChange()
{
  return &type metadata for SessionPreferenceStreamChange;
}

uint64_t sub_23BA19CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12SubscriptionVwca_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SessionDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t _s12SubscriptionVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12SubscriptionVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionDevice()
{
  return &type metadata for SessionDevice;
}

char *sub_23BA19E60(char *a1, char *a2, uint64_t a3)
{
  return sub_23BA1A400(a1, a2, a3, type metadata accessor for SessionFollowingState);
}

uint64_t type metadata accessor for SessionFollowingState(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A5CCC0);
}

char *sub_23BA19E84(char *a1, char *a2, uint64_t a3)
{
  return sub_23BA1A82C(a1, a2, a3, type metadata accessor for SessionFollowingState);
}

uint64_t sub_23BA19E94()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23BA19EA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A5CCD0)
  {
    sub_23BB88984();
    v0 = sub_23BB8ACA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A5CCD0);
  }
}

uint64_t *_s17RelationshipStateO14FollowingStateOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_23BB88984();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
      if (v10(a2, 1, v8))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      if (v10((uint64_t *)v18, 1, v8))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v18, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
      }
      goto LABEL_16;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t _s17RelationshipStateO14FollowingStateOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23BB88984();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  else if (!(_DWORD)result)
  {
    v3 = sub_23BB88984();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (!v5(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(a1, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

char *_s17RelationshipStateO14FollowingStateOwcp(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_23BB88984();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v15 = &a1[v14];
    v16 = &a2[v14];
    if (v9(v16, 1, v7))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_23BA1A3F4(char *a1, char *a2, uint64_t a3)
{
  return sub_23BA1A400(a1, a2, a3, type metadata accessor for SessionFollowerState);
}

char *sub_23BA1A400(char *a1, char *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, a4);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_23BB88984();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(a1, a2, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v10(a2, 1, v8))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v16 = &a1[v15];
      v17 = &a2[v15];
      if (v10(v17, 1, v8))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v16, v17, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for SessionFollowerState(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5CD70);
}

char *_s17RelationshipStateO14FollowingStateOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_23BB88984();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
    v15 = &a1[v14];
    v16 = &a2[v14];
    if (v9(v16, 1, v7))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_23BA1A820(char *a1, char *a2, uint64_t a3)
{
  return sub_23BA1A82C(a1, a2, a3, type metadata accessor for SessionFollowerState);
}

char *sub_23BA1A82C(char *a1, char *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_23B989D9C((uint64_t)a1, a4);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_23BB88984();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a1, a2, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_23BB88984();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v10(a2, 1, v8))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      v16 = &a1[v15];
      v17 = &a2[v15];
      if (v10(v17, 1, v8))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v17, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositeAppViewState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for CompositeAppViewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void sub_23BA1AA54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD v3[6];

  sub_23BA19EA8();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

void _s14descr250CB21E1V10InputValueO11DestinationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for SessionLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for SessionLocation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SessionLocation(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for SessionLocation()
{
  return &type metadata for SessionLocation;
}

uint64_t *sub_23BA1AC00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_23BB88984();
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v13 = (char *)v9 + v12;
      v14 = (char *)v10 + v12;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v15 = *((_QWORD *)v14 + 3);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = v15;
      v16 = *((_QWORD *)v14 + 5);
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 5) = v16;
      v17 = *((_QWORD *)v14 + 7);
      *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
      *((_QWORD *)v13 + 7) = v17;
      v18 = *((_QWORD *)v14 + 9);
      *((_QWORD *)v13 + 8) = *((_QWORD *)v14 + 8);
      *((_QWORD *)v13 + 9) = v18;
      v19 = *((_QWORD *)v14 + 11);
      *((_QWORD *)v13 + 10) = *((_QWORD *)v14 + 10);
      *((_QWORD *)v13 + 11) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *v10;
      v22 = v10[1];
      *v9 = v21;
      v9[1] = v22;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v23 = *(int *)(a3 + 24);
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23BA1AD74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23BB88984();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    type metadata accessor for FindMyRelativeDate();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23BA1AE38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB88984();
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
    v12 = (char *)v8 + v11;
    v13 = (char *)v9 + v11;
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v14 = *((_QWORD *)v13 + 3);
    *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
    *((_QWORD *)v12 + 3) = v14;
    v15 = *((_QWORD *)v13 + 5);
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    *((_QWORD *)v12 + 5) = v15;
    v16 = *((_QWORD *)v13 + 7);
    *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
    *((_QWORD *)v12 + 7) = v16;
    v17 = *((_QWORD *)v13 + 9);
    *((_QWORD *)v12 + 8) = *((_QWORD *)v13 + 8);
    *((_QWORD *)v12 + 9) = v17;
    v18 = *((_QWORD *)v13 + 11);
    *((_QWORD *)v12 + 10) = *((_QWORD *)v13 + 10);
    *((_QWORD *)v12 + 11) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *v9;
    v20 = v9[1];
    *v8 = v19;
    v8[1] = v20;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v21 = *(int *)(a3 + 24);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23BA1AF80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_23BA1B130((uint64_t)a1 + v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_23BB88984();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      v10 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
      *((_QWORD *)v11 + 3) = *((_QWORD *)v12 + 3);
      *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
      *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
      *((_QWORD *)v11 + 6) = *((_QWORD *)v12 + 6);
      *((_QWORD *)v11 + 7) = *((_QWORD *)v12 + 7);
      *((_QWORD *)v11 + 8) = *((_QWORD *)v12 + 8);
      *((_QWORD *)v11 + 9) = *((_QWORD *)v12 + 9);
      *((_QWORD *)v11 + 10) = *((_QWORD *)v12 + 10);
      *((_QWORD *)v11 + 11) = *((_QWORD *)v12 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *v7 = *v8;
      v7[1] = v8[1];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23BA1B130(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_23BA1B170(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    v11 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = *((_OWORD *)v13 + 3);
    *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
    *((_OWORD *)v12 + 3) = v14;
    v15 = *((_OWORD *)v13 + 5);
    *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
    *((_OWORD *)v12 + 5) = v15;
    v16 = *((_OWORD *)v13 + 1);
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v16;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_23BA1B260(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_23BA1B130((uint64_t)a1 + v7);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      v12 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v13 = &v8[v12];
      v14 = &v9[v12];
      v15 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v15;
      v16 = *((_OWORD *)v14 + 5);
      *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
      *((_OWORD *)v13 + 5) = v16;
      v17 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v17;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v18 = *(int *)(a3 + 24);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23BA1B378()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA1B384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_23BA1B404()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA1B410(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SessionLocation.Description(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A5CE00);
}

void sub_23BA1B49C()
{
  unint64_t v0;

  sub_23BA1B518(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23BA1B518(uint64_t a1)
{
  uint64_t MyRelativeDate;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A5CE10)
  {
    MyRelativeDate = type metadata accessor for FindMyRelativeDate();
    v4 = type metadata accessor for Either(a1, MEMORY[0x24BEE0D00], MyRelativeDate, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A5CE10);
  }
}

uint64_t sub_23BA1B574()
{
  void *v0;
  id v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t result;

  if (qword_256A58CD8 != -1)
    swift_once();
  if (byte_256A5F830 == 1)
  {
    v0 = (void *)qword_256A5F828;
    swift_bridgeObjectRetain();
    v1 = v0;
    v2 = (void *)sub_23BB8A784();
    v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
      return 0;
  }
  else
  {
    swift_beginAccess();
    result = 0;
    if (byte_256A5F831 != 1)
      return result;
  }
  sub_23BB8A7D8();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23BB8A82C();
  swift_bridgeObjectRelease();
  return 0x203A677562656428;
}

uint64_t sub_23BA1B6F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(const void *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = type metadata accessor for SessionFriend(0);
    v9 = *(int *)(v8 + 24);
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = sub_23BB88984();
    v24 = *(_QWORD *)(v12 - 8);
    v13 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    v14 = v13(v11, 1, v12);
    if (EnumCaseMultiPayload == 1)
    {
      if (v14)
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v10, v11, v12);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v10, 0, 1, v12);
      }
      v18 = *(int *)(v8 + 28);
      v19 = (void *)(a1 + v18);
      v20 = (char *)a2 + v18;
      if (v13(v20, 1, v12))
      {
LABEL_13:
        v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v14)
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v10, v11, v12);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v10, 0, 1, v12);
      }
      v21 = *(int *)(v8 + 28);
      v19 = (void *)(a1 + v21);
      v20 = (char *)a2 + v21;
      if (v13(v20, 1, v12))
        goto LABEL_13;
    }
    (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v19, v20, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v12);
    goto LABEL_15;
  }
  v16 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for SessionFriend(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5CF48);
}

uint64_t sub_23BA1B9A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for SessionFriend(0);
  v3 = a1 + *(int *)(v2 + 24);
  v4 = sub_23BB88984();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v7 = a1 + *(int *)(v2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

uint64_t sub_23BA1BA7C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = type metadata accessor for SessionFriend(0);
  v7 = *(int *)(v6 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  v13 = v12(v9, 1, v10);
  if (EnumCaseMultiPayload != 1)
  {
    if (v13)
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v20 = *(int *)(v6 + 28);
    v17 = (void *)(a1 + v20);
    v18 = (const void *)(a2 + v20);
    if (v12(v18, 1, v10))
      goto LABEL_8;
LABEL_11:
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v17, v18, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    goto LABEL_12;
  }
  if (v13)
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v16 = *(int *)(v6 + 28);
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (!v12(v18, 1, v10))
    goto LABEL_11;
LABEL_8:
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
LABEL_12:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BA1BCE0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(const void *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_23B989D9C(a1, type metadata accessor for SessionFriendStreamChange);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
    v5 = type metadata accessor for SessionFriend(0);
    v6 = *(int *)(v5 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = sub_23BB88984();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    v12 = v11(v8, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v12)
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v15 = *(int *)(v5 + 28);
      v16 = (void *)(a1 + v15);
      v17 = (const void *)(a2 + v15);
      if (v11(v17, 1, v9))
      {
LABEL_9:
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_13:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v12)
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v19 = *(int *)(v5 + 28);
      v16 = (void *)(a1 + v19);
      v17 = (const void *)(a2 + v19);
      if (v11(v17, 1, v9))
        goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
    goto LABEL_13;
  }
  return a1;
}

uint64_t type metadata accessor for SessionFriendStreamChange(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5CEB8);
}

uint64_t sub_23BA1BF84(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(const void *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = type metadata accessor for SessionFriend(0);
  v6 = *(int *)(v5 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v8, 1, v9);
  if (EnumCaseMultiPayload != 1)
  {
    if (v12)
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v19 = *(int *)(v5 + 28);
    v16 = (void *)(a1 + v19);
    v17 = (const void *)(a2 + v19);
    if (v11(v17, 1, v9))
      goto LABEL_8;
LABEL_11:
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v16, v17, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
    goto LABEL_12;
  }
  if (v12)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v15 = *(int *)(v5 + 28);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (!v11(v17, 1, v9))
    goto LABEL_11;
LABEL_8:
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_12:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BA1C1D8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(const void *, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_23B989D9C(a1, type metadata accessor for SessionFriendStreamChange);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
    v5 = type metadata accessor for SessionFriend(0);
    v6 = *(int *)(v5 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = sub_23BB88984();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    v12 = v11(v8, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v12)
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v15 = *(int *)(v5 + 28);
      v16 = (void *)(a1 + v15);
      v17 = (const void *)(a2 + v15);
      if (v11(v17, 1, v9))
      {
LABEL_9:
        v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_13:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v12)
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v19 = *(int *)(v5 + 28);
      v16 = (void *)(a1 + v19);
      v17 = (const void *)(a2 + v19);
      if (v11(v17, 1, v9))
        goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v16, v17, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
    goto LABEL_13;
  }
  return a1;
}

uint64_t sub_23BA1C444()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionFriend(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_23BA1C4A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = *(int *)(a3 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 28);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13(v18, 1, v11))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_23BA1C628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 28);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

uint64_t sub_23BA1C6DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 28);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_23BA1C830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_23BA1CA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 28);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_23BA1CB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 28);
  v17 = (void *)(a1 + v16);
  v18 = (void *)(a2 + v16);
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t sub_23BA1CD44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA1CD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23BA1CDD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA1CDDC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_23BA1CE54()
{
  unint64_t v0;

  sub_23BA19EA8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for PublishedLocation.Priority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionLocation.LocationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23BA1CFAC + 4 * byte_23BB8F9EF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23BA1CFE0 + 4 * byte_23BB8F9EA[v4]))();
}

uint64_t sub_23BA1CFE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA1CFE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA1CFF0);
  return result;
}

uint64_t sub_23BA1CFFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA1D004);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23BA1D008(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA1D010(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionLocation.LocationType()
{
  return &type metadata for SessionLocation.LocationType;
}

unint64_t sub_23BA1D030()
{
  unint64_t result;

  result = qword_256A5CF88;
  if (!qword_256A5CF88)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB8FC28, &type metadata for SessionLocation.LocationType);
    atomic_store(result, (unint64_t *)&qword_256A5CF88);
  }
  return result;
}

uint64_t static ConditionsProvider.live()@<X0>(void (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;

  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB891B8();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = sub_23BA1D144;
  a1[1] = 0;
  a1[2] = sub_23BA1DF1C;
  a1[3] = 0;
  return result;
}

void sub_23BA1D144()
{
  sub_23BA1DF38((SEL *)&selRef_AirplaneMode, (uint64_t)sub_23BA1D160, (void (*)(id, uint64_t, _QWORD))sub_23BA1D164);
}

uint64_t sub_23BA1D164@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  id v46;
  const void *v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v69;
  void *v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  char *v85;
  uint64_t aBlock;
  uint64_t v87;
  uint64_t (*v88)(uint64_t);
  void *v89;
  uint64_t (*v90)(uint64_t);
  uint64_t v91;

  v82 = a3;
  v83 = a1;
  v84 = a2;
  v80 = a4;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF90);
  v4 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77, v5);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98);
  v78 = *(_QWORD *)(v8 - 8);
  v79 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0);
  v72 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v72 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v75 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v69 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v81 = (uint64_t)&v69 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v69 - v24;
  v26 = sub_23BB8A388();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B99231C();
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v30, *MEMORY[0x24BEE5490], v26);
  v31 = (void *)sub_23BB8AC34();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  v32 = objc_allocWithZone(MEMORY[0x24BE0CB48]);
  v33 = (void *)sub_23BB8A784();
  v71 = objc_msgSend(v32, sel_initWithIdentifier_targetQueue_waking_, v33, v31, 0);

  v34 = sub_23BB8A784();
  v70 = (void *)v34;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v73 = *(_QWORD *)(v74 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v25, 1, 1, v74);
  v85 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE6A10], v77);
  v77 = (uint64_t)v11;
  sub_23BB8AA6C();
  v76 = v25;
  v35 = (uint64_t)v25;
  v36 = v81;
  sub_23BA1E0A8(v35, v81);
  v37 = objc_msgSend(v83, sel_publisherWithUseCase_, v34);
  v90 = nullsub_1;
  v91 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v38 = MEMORY[0x24BDAC760];
  v87 = 1107296256;
  v88 = (uint64_t (*)(uint64_t))sub_23BA1E0F0;
  v89 = &block_descriptor_21;
  v39 = _Block_copy(&aBlock);
  sub_23BA1E0A8(v36, (uint64_t)v19);
  v40 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v41 = (v40 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = v41 + 16;
  v42 = swift_allocObject();
  sub_23BA1E2D4((uint64_t)v19, v42 + v40);
  v43 = (_QWORD *)(v42 + v41);
  v44 = v82;
  *v43 = v84;
  v43[1] = v44;
  v90 = sub_23BA1E31C;
  v91 = v42;
  aBlock = v38;
  v87 = 1107296256;
  v88 = (uint64_t (*)(uint64_t))sub_23BA1E0F0;
  v89 = &block_descriptor_27;
  v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v46 = objc_msgSend(v37, sel_sinkWithCompletion_receiveInput_, v39, v45);
  _Block_release(v45);
  v47 = v39;
  v48 = v70;
  _Block_release(v47);

  v49 = v71;
  v50 = objc_msgSend(v83, sel_DSLPublisherWithUseCase_, v48);
  v51 = objc_msgSend(v50, sel_subscribeOn_, v49);

  v52 = v81;
  sub_23BA1E0A8(v81, (uint64_t)v19);
  v53 = swift_allocObject();
  sub_23BA1E2D4((uint64_t)v19, v53 + v40);
  v90 = (uint64_t (*)(uint64_t))sub_23BA1E444;
  v91 = v53;
  v54 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v87 = 1107296256;
  v88 = (uint64_t (*)(uint64_t))sub_23BA1E0F0;
  v89 = &block_descriptor_33;
  v55 = _Block_copy(&aBlock);
  swift_release();
  sub_23BA1E0A8(v52, (uint64_t)v19);
  v56 = swift_allocObject();
  v57 = v56 + v40;
  v58 = v73;
  sub_23BA1E2D4((uint64_t)v19, v57);
  v59 = (_QWORD *)(v56 + v41);
  v60 = (uint64_t)v75;
  v61 = v82;
  *v59 = v84;
  v59[1] = v61;
  v90 = sub_23BA1E66C;
  v91 = v56;
  aBlock = v54;
  v87 = 1107296256;
  v88 = sub_23BA1E678;
  v89 = &block_descriptor_39;
  v62 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v63 = objc_msgSend(v51, sel_sinkWithCompletion_receiveInput_, v55, v62);
  _Block_release(v62);
  v64 = v55;
  v65 = v52;
  v66 = v74;
  _Block_release(v64);

  sub_23BA1E0A8(v65, v60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v66) == 1)
  {
    sub_23B989D60(v65, (uint64_t *)&unk_256A5CFA0);

    sub_23B989D60(v60, (uint64_t *)&unk_256A5CFA0);
  }
  else
  {
    *(_QWORD *)(swift_allocObject() + 16) = v63;
    v67 = v63;
    sub_23BB8AA24();

    sub_23B989D60(v65, (uint64_t *)&unk_256A5CFA0);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v66);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v80, v77, v79);
  return sub_23B989D60((uint64_t)v76, (uint64_t *)&unk_256A5CFA0);
}

uint64_t sub_23BA1D840@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  id v46;
  const void *v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v69;
  void *v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  char *v85;
  uint64_t aBlock;
  uint64_t v87;
  uint64_t (*v88)(uint64_t);
  void *v89;
  uint64_t (*v90)(uint64_t);
  uint64_t v91;

  v82 = a3;
  v83 = a1;
  v84 = a2;
  v80 = a4;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF90);
  v4 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77, v5);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CF98);
  v78 = *(_QWORD *)(v8 - 8);
  v79 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0);
  v72 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v72 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v75 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v69 - v18;
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v81 = (uint64_t)&v69 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v69 - v24;
  v26 = sub_23BB8A388();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B99231C();
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v30, *MEMORY[0x24BEE5490], v26);
  v31 = (void *)sub_23BB8AC34();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  v32 = objc_allocWithZone(MEMORY[0x24BE0CB48]);
  v33 = (void *)sub_23BB8A784();
  v71 = objc_msgSend(v32, sel_initWithIdentifier_targetQueue_waking_, v33, v31, 0);

  v34 = sub_23BB8A784();
  v70 = (void *)v34;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v73 = *(_QWORD *)(v74 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v25, 1, 1, v74);
  v85 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE6A10], v77);
  v77 = (uint64_t)v11;
  sub_23BB8AA6C();
  v76 = v25;
  v35 = (uint64_t)v25;
  v36 = v81;
  sub_23BA1E0A8(v35, v81);
  v37 = objc_msgSend(v83, sel_publisherWithUseCase_, v34);
  v90 = nullsub_1;
  v91 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v38 = MEMORY[0x24BDAC760];
  v87 = 1107296256;
  v88 = (uint64_t (*)(uint64_t))sub_23BA1E0F0;
  v89 = &block_descriptor_0;
  v39 = _Block_copy(&aBlock);
  sub_23BA1E0A8(v36, (uint64_t)v19);
  v40 = (*(unsigned __int8 *)(v72 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v41 = (v40 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = v41 + 16;
  v42 = swift_allocObject();
  sub_23BA1E2D4((uint64_t)v19, v42 + v40);
  v43 = (_QWORD *)(v42 + v41);
  v44 = v82;
  *v43 = v84;
  v43[1] = v44;
  v90 = sub_23BA1E31C;
  v91 = v42;
  aBlock = v38;
  v87 = 1107296256;
  v88 = (uint64_t (*)(uint64_t))sub_23BA1E0F0;
  v89 = &block_descriptor_3;
  v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v46 = objc_msgSend(v37, sel_sinkWithCompletion_receiveInput_, v39, v45);
  _Block_release(v45);
  v47 = v39;
  v48 = v70;
  _Block_release(v47);

  v49 = v71;
  v50 = objc_msgSend(v83, sel_DSLPublisherWithUseCase_, v48);
  v51 = objc_msgSend(v50, sel_subscribeOn_, v49);

  v52 = v81;
  sub_23BA1E0A8(v81, (uint64_t)v19);
  v53 = swift_allocObject();
  sub_23BA1E2D4((uint64_t)v19, v53 + v40);
  v90 = (uint64_t (*)(uint64_t))sub_23BA1E444;
  v91 = v53;
  v54 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v87 = 1107296256;
  v88 = (uint64_t (*)(uint64_t))sub_23BA1E0F0;
  v89 = &block_descriptor_9;
  v55 = _Block_copy(&aBlock);
  swift_release();
  sub_23BA1E0A8(v52, (uint64_t)v19);
  v56 = swift_allocObject();
  v57 = v56 + v40;
  v58 = v73;
  sub_23BA1E2D4((uint64_t)v19, v57);
  v59 = (_QWORD *)(v56 + v41);
  v60 = (uint64_t)v75;
  v61 = v82;
  *v59 = v84;
  v59[1] = v61;
  v90 = sub_23BA1E66C;
  v91 = v56;
  aBlock = v54;
  v87 = 1107296256;
  v88 = sub_23BA1E678;
  v89 = &block_descriptor_15;
  v62 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v63 = objc_msgSend(v51, sel_sinkWithCompletion_receiveInput_, v55, v62);
  _Block_release(v62);
  v64 = v55;
  v65 = v52;
  v66 = v74;
  _Block_release(v64);

  sub_23BA1E0A8(v65, v60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v66) == 1)
  {
    sub_23B989D60(v65, (uint64_t *)&unk_256A5CFA0);

    sub_23B989D60(v60, (uint64_t *)&unk_256A5CFA0);
  }
  else
  {
    *(_QWORD *)(swift_allocObject() + 16) = v63;
    v67 = v63;
    sub_23BB8AA24();

    sub_23B989D60(v65, (uint64_t *)&unk_256A5CFA0);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v60, v66);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v80, v77, v79);
  return sub_23B989D60((uint64_t)v76, (uint64_t *)&unk_256A5CFA0);
}

void sub_23BA1DF1C()
{
  sub_23BA1DF38((SEL *)&selRef_BluetoothPowerEnabled, (uint64_t)sub_23BA1D160, (void (*)(id, uint64_t, _QWORD))sub_23BA1D840);
}

void sub_23BA1DF38(SEL *a1, uint64_t a2, void (*a3)(id, uint64_t, _QWORD))
{
  id v6;
  id v7;
  id v8;

  v6 = objc_msgSend((id)BiomeLibrary(), sel_Device);
  swift_unknownObjectRelease();
  v7 = objc_msgSend(v6, sel_Wireless);
  swift_unknownObjectRelease();
  v8 = objc_msgSend(v7, *a1);
  swift_unknownObjectRelease();
  a3(v8, a2, 0);

}

id sub_23BA1E004@<X0>(id result@<X0>, _BYTE *a2@<X8>)
{
  if (result)
    result = objc_msgSend(result, sel_starting);
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_23BA1E034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23B989D60(a2, (uint64_t *)&unk_256A5CFA0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_23BA1E0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

id sub_23BA1E10C(void *a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id result;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _BYTE v21[15];
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = objc_msgSend(a1, sel_eventBody);
  if (result)
  {
    v15 = result;
    sub_23BA1E0A8(a2, (uint64_t)v9);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
    {

      sub_23B989D60((uint64_t)v9, (uint64_t *)&unk_256A5CFA0);
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5CFC0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
    }
    else
    {
      v19 = v15;
      a3(&v22, v15);

      sub_23BB8AA3C();
      (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v9, v16);
      v20 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5CFC0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 0, 1, v20);
    }
    return (id)sub_23B989D60((uint64_t)v13, &qword_256A5CFB8);
  }
  return result;
}

uint64_t sub_23BA1E2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA1E31C(uint64_t a1)
{
  return sub_23BA1E8A4(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))sub_23BA1E10C);
}

void sub_23BA1E328(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_23BA1E378(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA1E0A8(a2, (uint64_t)v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_23B989D60((uint64_t)v6, (uint64_t *)&unk_256A5CFA0);
  sub_23BB8AA48();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v6, v7);
}

uint64_t sub_23BA1E448(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v20;
  uint64_t v21;
  _BYTE v22[15];
  uint64_t v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_unknownObjectRetain();
  objc_opt_self();
  v13 = (void *)swift_dynamicCastObjCClass();
  if (!v13)
    return swift_unknownObjectRelease();
  v14 = objc_msgSend(v13, sel_eventBody);
  if (!v14)
    return swift_unknownObjectRelease();
  v15 = v14;
  sub_23BA1E0A8(a2, (uint64_t)v8);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {

    swift_unknownObjectRelease();
    sub_23B989D60((uint64_t)v8, (uint64_t *)&unk_256A5CFA0);
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5CFC0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
  }
  else
  {
    v20 = v15;
    a3(&v23, v15);

    sub_23BB8AA3C();
    swift_unknownObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v8, v16);
    v21 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5CFC0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v12, 0, 1, v21);
  }
  return sub_23B989D60((uint64_t)v12, &qword_256A5CFB8);
}

uint64_t sub_23BA1E66C(uint64_t a1)
{
  return sub_23BA1E8A4(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD))sub_23BA1E448);
}

uint64_t sub_23BA1E678(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23BA1E6C0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23BA1E6E4(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA1E034(a1, *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0) - 8)
                          + 80);
  v2 = (v1 + 16) & ~v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_23BA1E7A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0) - 8)
                          + 80);
  return sub_23BA1E378(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5CFB0);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA1E8A4(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5CFA0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(a1, v2 + v6, *v7, v7[1]);
}

id sub_23BA1E90C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_cancel);
}

uint64_t Destination.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *(_QWORD *)(a2 + 32);
  v27 = *(_QWORD *)(v28 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1, a2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v3, v6);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v9, v12);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v22, a2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v20, v7);
      sub_23BB8B24C();
      sub_23BB8A718();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      v26 = v27;
      v25 = v28;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v5, v20, v28);
      sub_23BB8B24C();
      sub_23BB8A718();
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v25);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v20, v13);
    sub_23BB8B24C();
    sub_23BB8A718();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
}

void static Destination.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[22];

  v19[13] = a1;
  v19[14] = a2;
  v19[7] = *(_QWORD *)(a5 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1, a2);
  v19[2] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[6] = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v19[1] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[9] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v9, v12);
  v19[15] = v13;
  v19[16] = v14;
  v19[4] = v15;
  v19[5] = v14;
  v19[8] = v16;
  v19[17] = v16;
  v19[18] = v17;
  v19[10] = v17;
  v19[3] = v18;
  v19[19] = v18;
  v19[20] = v15;
  type metadata accessor for Destination();
}

uint64_t sub_23BA1EC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[96];

  v5 = a1;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1, a2);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = &v37[-v12];
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = &v37[-v15];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 - 160) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v19 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2, v18);
  v21 = &v37[-v20];
  v22 = &v37[*(int *)(v19 + 48) - v20];
  *(_QWORD *)(v4 - 168) = v6;
  v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  v23(&v37[-v20], *(_BYTE **)(v4 - 152), v5);
  v23(v22, *(_BYTE **)(v4 - 144), v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23(v13, v21, v5);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v25 = *(_QWORD *)(v4 - 216);
        v26 = *(_QWORD *)(v4 - 208);
        v27 = *(_QWORD *)(v4 - 248);
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v26 + 32))(v27, v22, v25);
        v28 = sub_23BB8A760();
        v29 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v29(v27, v25);
        v30 = v13;
LABEL_9:
        v34 = v25;
LABEL_14:
        v29((uint64_t)v30, v34);
        v35 = *(_QWORD *)(v4 - 168);
        goto LABEL_15;
      }
      (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v4 - 208) + 8))(v13, *(_QWORD *)(v4 - 216));
    }
    else
    {
      v23(v9, v21, v5);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v32 = *(_QWORD *)(v4 - 200);
        v25 = *(_QWORD *)(v4 - 192);
        v33 = *(_QWORD *)(v4 - 240);
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v32 + 32))(v33, v22, v25);
        v28 = sub_23BB8A760();
        v29 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
        v29(v33, v25);
        v30 = v9;
        goto LABEL_9;
      }
      (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v4 - 200) + 8))(v9, *(_QWORD *)(v4 - 192));
    }
  }
  else
  {
    v31 = *(_QWORD *)(v4 - 184);
    v23(v16, v21, v5);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v31 + 32))(v2, v22, v3);
      v28 = sub_23BB8A760();
      v29 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v29(v2, v3);
      v30 = v16;
      v34 = v3;
      goto LABEL_14;
    }
    (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v16, v3);
  }
  v28 = 0;
  v35 = *(_QWORD *)(v4 - 160);
  v5 = TupleTypeMetadata2;
LABEL_15:
  (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v21, v5);
  return v28 & 1;
}

void type metadata accessor for Destination()
{
  JUMPOUT(0x24260D81CLL);
}

uint64_t Destination.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_23BB8B240();
  Destination.hash(into:)((uint64_t)v3, a1);
  return sub_23BB8B270();
}

uint64_t sub_23BA1EF94(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_23BB8B240();
  Destination.hash(into:)((uint64_t)v4, a2);
  return sub_23BB8B270();
}

void sub_23BA1EFD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static Destination.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_23BA1EFE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  MEMORY[0x24260D8DC](&protocol conformance descriptor for Destination<A, B, C>, a1);
  result = DestinationPath.id.getter();
  *a2 = result;
  return result;
}

uint64_t Destination.stack.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, v3);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if (EnumCaseMultiPayload)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v11 + 32))(a2, v8, *(_QWORD *)(a1 + 16));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
}

void sub_23BA1F114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v5 = a4 + a3;
  v14 = *(_OWORD *)(a4 + a3 - 48);
  v6 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = *(void (**)(char *, uint64_t))(v8 + 16);
  v10 = *(_OWORD *)(v5 - 32);
  v12 = *(_OWORD *)(v5 - 16);
  v13 = v10;
  v9((char *)&v12 - v11, a1);
  v15 = v14;
  v16 = v13;
  v17 = v12;
  type metadata accessor for Destination();
}

uint64_t sub_23BA1F1B0(uint64_t a1)
{
  uint64_t v1;

  return Destination.stack.setter(v1, a1);
}

uint64_t Destination.stack.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v2, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, a1, v5);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void (*Destination.stack.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = sub_23BB8ACA0();
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  Destination.stack.getter(a2, (uint64_t)v9);
  return sub_23BA1F2F4;
}

void sub_23BA1F2F4(uint64_t **a1, char a2)
{
  sub_23BA1F914(a1, a2, (void (*)(void *, uint64_t))Destination.stack.setter);
}

uint64_t Destination.sheet.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, v3);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v11 + 32))(a2, v8, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 24));
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  }
}

void sub_23BA1F3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v5 = a4 + a3;
  v6 = *(_QWORD *)(a4 + a3 - 48);
  v7 = *(_QWORD *)(a4 + a3 - 8);
  v14 = *(_OWORD *)(a4 + a3 - 40);
  v8 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = *(void (**)(char *, uint64_t))(v10 + 16);
  v13 = *(_OWORD *)(v5 - 24);
  v11((char *)&v13 - v12, a1);
  v15 = v6;
  v16 = v14;
  v17 = v13;
  v18 = v7;
  type metadata accessor for Destination();
}

uint64_t sub_23BA1F490(uint64_t a1)
{
  uint64_t v1;

  return Destination.sheet.setter(v1, a1);
}

uint64_t Destination.sheet.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v2, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, a1, v5);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void (*Destination.sheet.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = sub_23BB8ACA0();
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  Destination.sheet.getter(a2, (uint64_t)v9);
  return sub_23BA1F5D8;
}

void sub_23BA1F5D8(uint64_t **a1, char a2)
{
  sub_23BA1F914(a1, a2, (void (*)(void *, uint64_t))Destination.sheet.setter);
}

uint64_t Destination.alert.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, v3);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(v10 - 8);
  if (EnumCaseMultiPayload == 2)
  {
    (*(void (**)(uint64_t, char *, _QWORD))(v11 + 32))(a2, v8, *(_QWORD *)(a1 + 32));
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 56))(a2, 1, 1, *(_QWORD *)(a1 + 32));
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
  }
}

void sub_23BA1F6CC()
{
  type metadata accessor for Destination();
}

uint64_t sub_23BA1F70C()
{
  uint64_t (*v0)(void);

  return v0();
}

void sub_23BA1F728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v5 = a4 + a3;
  v14 = *(_OWORD *)(a4 + a3 - 32);
  v6 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = *(void (**)(char *, uint64_t))(v8 + 16);
  v10 = *(_OWORD *)(v5 - 16);
  v12 = *(_OWORD *)(v5 - 48);
  v13 = v10;
  v9((char *)&v12 - v11, a1);
  v15 = v12;
  v16 = v14;
  v17 = v13;
  type metadata accessor for Destination();
}

uint64_t sub_23BA1F7C4(uint64_t a1)
{
  uint64_t v1;

  return Destination.alert.setter(v1, a1);
}

uint64_t Destination.alert.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v2, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, a1, v5);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void (*Destination.alert.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = sub_23BB8ACA0();
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  Destination.alert.getter(a2, (uint64_t)v9);
  return sub_23BA1F908;
}

void sub_23BA1F908(uint64_t **a1, char a2)
{
  sub_23BA1F914(a1, a2, (void (*)(void *, uint64_t))Destination.alert.setter);
}

void sub_23BA1F914(uint64_t **a1, char a2, void (*a3)(void *, uint64_t))
{
  uint64_t *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = (void *)(*a1)[4];
  v6 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v7 = v4[2];
    v8 = v4[3];
    v9 = *v4;
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[4], v6, v7);
    a3(v5, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3((void *)(*a1)[5], *v4);
  }
  free(v6);
  free(v5);
  free(v4);
}

void (*sub_23BA1F9B8(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = Destination.stack.modify(v4, a2);
  return sub_23BA1FA04;
}

void (*sub_23BA1FA10(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = Destination.sheet.modify(v4, a2);
  return sub_23BA1FA04;
}

void (*sub_23BA1FA64(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = Destination.alert.modify(v4, a2);
  return sub_23BA1FA04;
}

uint64_t Optional<A>.stack.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a1);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 32))(v10, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
}

uint64_t Optional<A>.stack.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a3;
  v5 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_23BB8ACA0();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v22 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v22 - v18, a1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    v20 = v23;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v23, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v20, 1, 1, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v19, AssociatedTypeWitness);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v23, 1, v5))
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v10, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v22 + 40))(v16, v5);
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  }
}

void (*Optional<A>.stack.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  swift_getAssociatedTypeWitness();
  v8 = sub_23BB8ACA0();
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v11 = malloc(v10);
  v7[6] = v11;
  Optional<A>.stack.getter(a2, a3, (uint64_t)v11);
  return sub_23BA1FE84;
}

void sub_23BA1FE84(uint64_t **a1, char a2)
{
  sub_23BA2070C(a1, a2, (void (*)(void *, uint64_t, uint64_t))Optional<A>.stack.setter);
}

uint64_t Optional<A>.sheet.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a1);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 56))(v10, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
}

uint64_t Optional<A>.sheet.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a3;
  v5 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_23BB8ACA0();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v22 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v22 - v18, a1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    v20 = v23;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v23, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v20, 1, 1, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v19, AssociatedTypeWitness);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v23, 1, v5))
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v10, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v22 + 64))(v16, v5);
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  }
}

void (*Optional<A>.sheet.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  swift_getAssociatedTypeWitness();
  v8 = sub_23BB8ACA0();
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v11 = malloc(v10);
  v7[6] = v11;
  Optional<A>.sheet.getter(a2, a3, (uint64_t)v11);
  return sub_23BA20264;
}

void sub_23BA20264(uint64_t **a1, char a2)
{
  sub_23BA2070C(a1, a2, (void (*)(void *, uint64_t, uint64_t))Optional<A>.sheet.setter);
}

uint64_t Optional<A>.alert.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a1);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 80))(v10, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
}

uint64_t sub_23BA20388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(char *, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = *(_QWORD *)(a4 + a3 - 8);
  swift_getAssociatedTypeWitness();
  v9 = sub_23BB8ACA0();
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)&v16 - v11, a1);
  v14 = sub_23BB8ACA0();
  return a6(v12, v14, v8);
}

uint64_t Optional<A>.alert.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a3;
  v5 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness, v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_23BB8ACA0();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v22 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v22 - v18, a1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    v20 = v23;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(v23, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v20, 1, 1, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v19, AssociatedTypeWitness);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v23, 1, v5))
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v10, AssociatedTypeWitness);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v22 + 88))(v16, v5);
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  }
}

void (*Optional<A>.alert.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  swift_getAssociatedTypeWitness();
  v8 = sub_23BB8ACA0();
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v11 = malloc(v10);
  v7[6] = v11;
  Optional<A>.alert.getter(a2, a3, (uint64_t)v11);
  return sub_23BA20700;
}

void sub_23BA20700(uint64_t **a1, char a2)
{
  sub_23BA2070C(a1, a2, (void (*)(void *, uint64_t, uint64_t))Optional<A>.alert.setter);
}

void sub_23BA2070C(uint64_t **a1, char a2, void (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = (void *)(*a1)[5];
  v6 = (void *)(*a1)[6];
  if ((a2 & 1) != 0)
  {
    v7 = v4[3];
    v8 = v4[4];
    v9 = v4[1];
    v10 = *v4;
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[5], v6, v7);
    a3(v5, v10, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3((void *)(*a1)[6], *v4, v4[1]);
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_23BA207BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x24260D8DC](&protocol conformance descriptor for Destination<A, B, C>);
  result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Destination<A, B, C>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_23BA20800()
{
  JUMPOUT(0x24260D8DCLL);
}

void sub_23BA20810()
{
  sub_23BA1F6CC();
}

uint64_t sub_23BA20830()
{
  return 48;
}

__n128 sub_23BA2083C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

void sub_23BA20850()
{
  sub_23BA1F6CC();
}

uint64_t sub_23BA20870()
{
  return 48;
}

__n128 sub_23BA2087C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

void sub_23BA20890()
{
  sub_23BA1F6CC();
}

uint64_t sub_23BA208B0()
{
  return 48;
}

__n128 sub_23BA208BC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_23BA208D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_9Tm(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))Optional<A>.stack.getter);
}

uint64_t sub_23BA208DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA20388(a1, a2, a3, a4, (uint64_t)&associated type descriptor for ViewModelDestinationInterface.Stack, (uint64_t (*)(char *, uint64_t, uint64_t))Optional<A>.stack.setter);
}

uint64_t sub_23BA20900()
{
  return 16;
}

__n128 sub_23BA2090C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23BA20918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_9Tm(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))Optional<A>.sheet.getter);
}

uint64_t sub_23BA20924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA20388(a1, a2, a3, a4, (uint64_t)&associated type descriptor for ViewModelDestinationInterface.Sheet, (uint64_t (*)(char *, uint64_t, uint64_t))Optional<A>.sheet.setter);
}

uint64_t sub_23BA20948()
{
  return 16;
}

__n128 sub_23BA20954(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23BA20960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_9Tm(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))Optional<A>.alert.getter);
}

uint64_t keypath_get_9Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a3 + a2 - 8);
  v6 = sub_23BB8ACA0();
  return a4(v6, v5);
}

uint64_t sub_23BA209B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA20388(a1, a2, a3, a4, (uint64_t)&associated type descriptor for ViewModelDestinationInterface.Alert, (uint64_t (*)(char *, uint64_t, uint64_t))Optional<A>.alert.setter);
}

uint64_t sub_23BA209D8()
{
  return 16;
}

__n128 sub_23BA209E4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23BA209F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23BA20A98(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (v6 <= *(_QWORD *)(v4 + 64))
    v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(a3[4] - 8);
  if (*(_QWORD *)(v7 + 64) <= v6)
    v8 = v6;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80) | *(_BYTE *)(v7 + 80));
  if (v9 <= 7
    && v8 + 1 <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) == 0)
  {
    v13 = *((unsigned __int8 *)a2 + v8);
    if (v13 >= 3)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X17 }
    }
    if (v13 == 2)
    {
      (*(void (**)(uint64_t *))(v7 + 16))(a1);
      *((_BYTE *)v3 + v8) = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(uint64_t *))(v5 + 16))(a1);
      *((_BYTE *)v3 + v8) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v8) = 0;
    }
  }
  else
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v9 + 16) & ~v9));
    swift_retain();
  }
  return v3;
}

uint64_t sub_23BA20C00(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v2 = a2[3];
  v3 = *(_QWORD *)(a2[2] - 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64);
  if (v4 <= *(_QWORD *)(v3 + 64))
    v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(a2[4] - 8);
  if (*(_QWORD *)(v5 + 64) > v4)
    v4 = *(_QWORD *)(v5 + 64);
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (v6 < 3)
  {
    if (*(_BYTE *)(a1 + v4))
    {
      if (v6 == 2)
        return (*(uint64_t (**)(void))(v5 + 8))();
      v3 = *(_QWORD *)(v2 - 8);
    }
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    if (v4 <= 3)
      v7 = v4;
    else
      v7 = 4;
    return ((uint64_t (*)(void))((char *)&loc_23BA20C64 + 4 * byte_23BB8FC65[v7]))();
  }
}

uint64_t sub_23BA20CCC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (v7 <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  v8 = a3[4];
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= v7)
    v10 = v7;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X17 }
  }
  if (*(_BYTE *)(a2 + v10))
  {
    if (v11 == 2)
    {
      v13 = 2;
      v6 = *(_QWORD *)(v8 - 8);
    }
    else
    {
      v13 = 1;
    }
  }
  else
  {
    v13 = 0;
    v6 = *(_QWORD *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v6 + 16))(a1);
  *(_BYTE *)(a1 + v10) = v13;
  return a1;
}

uint64_t sub_23BA20DD8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v5 = a3[2];
    v6 = a3[3];
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    v10 = a3[4];
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_QWORD *)(v11 + 64) <= v8)
      v12 = v8;
    else
      v12 = *(_QWORD *)(v11 + 64);
    v13 = *(unsigned __int8 *)(a1 + v12);
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    v15 = *(_QWORD *)(v5 - 8);
    v16 = a3[2];
    if (*(_BYTE *)(a1 + v12))
    {
      v15 = *(_QWORD *)(v10 - 8);
      v16 = a3[4];
      if (v13 != 2)
      {
        v15 = *(_QWORD *)(v6 - 8);
        v16 = a3[3];
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v16);
    v17 = *(unsigned __int8 *)(a2 + v12);
    if (v17 >= 3)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (*(_BYTE *)(a2 + v12))
    {
      if (v17 == 2)
      {
        v19 = 2;
        v7 = v11;
        v5 = v10;
      }
      else
      {
        v19 = 1;
        v7 = v9;
        v5 = v6;
      }
    }
    else
    {
      v19 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v12) = v19;
  }
  return a1;
}

uint64_t sub_23BA20FAC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;

  v4 = a3[2];
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (v7 <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  v8 = a3[4];
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_QWORD *)(v9 + 64) <= v7)
    v10 = v7;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X17 }
  }
  if (*(_BYTE *)(a2 + v10))
  {
    if (v11 == 2)
    {
      v13 = 2;
      v6 = *(_QWORD *)(v8 - 8);
    }
    else
    {
      v13 = 1;
    }
  }
  else
  {
    v13 = 0;
    v6 = *(_QWORD *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v6 + 32))(a1);
  *(_BYTE *)(a1 + v10) = v13;
  return a1;
}

uint64_t sub_23BA210B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  if (a1 != a2)
  {
    v5 = a3[2];
    v6 = a3[3];
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v9 + 64) > v8)
      v8 = *(_QWORD *)(v9 + 64);
    v10 = a3[4];
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_QWORD *)(v11 + 64) <= v8)
      v12 = v8;
    else
      v12 = *(_QWORD *)(v11 + 64);
    v13 = *(unsigned __int8 *)(a1 + v12);
    if (v13 >= 3)
    {
      if (v12 <= 3)
        v14 = v12;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    v15 = *(_QWORD *)(v5 - 8);
    v16 = a3[2];
    if (*(_BYTE *)(a1 + v12))
    {
      v15 = *(_QWORD *)(v10 - 8);
      v16 = a3[4];
      if (v13 != 2)
      {
        v15 = *(_QWORD *)(v6 - 8);
        v16 = a3[3];
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v16);
    v17 = *(unsigned __int8 *)(a2 + v12);
    if (v17 >= 3)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (*(_BYTE *)(a2 + v12))
    {
      if (v17 == 2)
      {
        v19 = 2;
        v7 = v11;
        v5 = v10;
      }
      else
      {
        v19 = 1;
        v7 = v9;
        v5 = v6;
      }
    }
    else
    {
      v19 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v12) = v19;
  }
  return a1;
}

uint64_t sub_23BA2128C(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64) > v3)
    v3 = *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
  if (v4 <= v3)
    v4 = v3;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_23:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 3)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 254);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BA21368 + 4 * byte_23BB8FC88[(v5 - 1)]))();
}

void sub_23BA213B4(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(a4[3] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a4[4] - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(a4[4] - 8) + 64);
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_23BA21574(uint64_t a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2[2] - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64) > v2)
    v2 = *(_QWORD *)(*(_QWORD *)(a2[3] - 8) + 64);
  v3 = *(_QWORD *)(*(_QWORD *)(a2[4] - 8) + 64);
  if (v3 <= v2)
    v3 = v2;
  if (*(unsigned __int8 *)(a1 + v3) < 3u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23BA215D4 + 4 * byte_23BB8FC96[v4]))();
}

void sub_23BA2161C(_BYTE *a1, unsigned int a2, _QWORD *a3)
{
  size_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3[3] - 8) + 64);
  if (a2 > 2)
  {
    if (v4 <= *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64) <= v4)
      v5 = v4;
    else
      v5 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
    v6 = a2 - 3;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 3;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    if (v4 <= *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(a3[2] - 8) + 64);
    if (*(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64) > v4)
      v4 = *(_QWORD *)(*(_QWORD *)(a3[4] - 8) + 64);
    a1[v4] = a2;
  }
}

uint64_t dispatch thunk of ViewModelDestinationInterface.stack.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.stack.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.stack.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.sheet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.sheet.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.sheet.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.alert.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.alert.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of ViewModelDestinationInterface.alert.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t destroy for DetailsAppMapView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DetailsAppMapView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DetailsAppMapView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DetailsAppMapView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DetailsAppMapView()
{
  return &type metadata for DetailsAppMapView;
}

uint64_t sub_23BA218D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA218E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a3;
  v45 = a4;
  v42 = a2;
  v5 = a1;
  v36 = a1;
  v47 = a5;
  v6 = sub_23BB88FCC();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFBD48];
  MEMORY[0x24BDAC7A8](v6, v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B8);
  v46 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0C0);
  v40 = *(_QWORD *)(v16 - 8);
  v41 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0C8);
  MEMORY[0x24BDAC7A8](v39, v20);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0D0);
  MEMORY[0x24BDAC7A8](v38, v23);
  v37 = (uint64_t)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88F30();
  v25 = sub_23BB88F3C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
  v52 = MEMORY[0x24BEE4AF8];
  sub_23B97D0C8((unint64_t *)&qword_256A5D0D8, v7, MEMORY[0x24BDFBD58]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0E0);
  sub_23B996E1C(&qword_256A5D0E8, &qword_256A5D0E0, MEMORY[0x24BEE12C8]);
  sub_23BB8AD84();
  v48 = v5;
  LOBYTE(v5) = v42;
  v49 = v42;
  v27 = v44;
  v26 = v45;
  v50 = v44;
  v51 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0F0);
  sub_23B996E1C(&qword_256A5D0F8, &qword_256A5D0F0, MEMORY[0x24BDFBC20]);
  sub_23BB88EF4();
  sub_23B996E1C(&qword_256A5D100, &qword_256A5D0B8, MEMORY[0x24BDFBC78]);
  v28 = v43;
  sub_23BB89D4C();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v28);
  v30 = v40;
  v29 = v41;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v22, v19, v41);
  v22[*(int *)(v39 + 36)] = 0;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v29);
  v31 = v37;
  sub_23B989EFC((uint64_t)v22, v37, &qword_256A5D0C8);
  *(_BYTE *)(v31 + *(int *)(v38 + 36)) = 0;
  sub_23B989D60((uint64_t)v22, &qword_256A5D0C8);
  v32 = v36;
  v52 = v36;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v32;
  *(_BYTE *)(v33 + 24) = v5;
  *(_QWORD *)(v33 + 32) = v27;
  *(_QWORD *)(v33 + 40) = v26;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_23BA22258;
  *(_QWORD *)(v34 + 24) = v33;
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  sub_23BA22294();
  sub_23BA22410();
  sub_23BB89F14();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23B989D60(v31, &qword_256A5D0D0);
}

uint64_t sub_23BA21D54@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D148);
  v35 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v34 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D150);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v34 - v23;
  if ((a2 & 1) != 0)
  {
    sub_23BB89128();
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D158);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
  }
  else
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D158);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v24, 1, 1, v26);
  }
  v37 = a3;
  v38 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  sub_23BB8A0D0();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = a1;
  *(_BYTE *)(v27 + 24) = a2 & 1;
  *(_QWORD *)(v27 + 32) = a3;
  *(_QWORD *)(v27 + 40) = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  type metadata accessor for AnnotationContent();
  sub_23B996E1C(&qword_256A5D160, &qword_256A5A1B8, MEMORY[0x24BEE12D8]);
  sub_23B97D0C8(&qword_256A5D168, (uint64_t (*)(uint64_t))type metadata accessor for AnnotationContent, (uint64_t)&unk_23BB924F0);
  sub_23B97D0C8(&qword_256A5D170, (uint64_t (*)(uint64_t))type metadata accessor for Annotation, (uint64_t)&protocol conformance descriptor for Annotation);
  sub_23BB8A1F0();
  sub_23B989EFC((uint64_t)v24, (uint64_t)v21, &qword_256A5D150);
  v28 = v35;
  v29 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v29(v13, v16, v9);
  v30 = v36;
  sub_23B989EFC((uint64_t)v21, v36, &qword_256A5D150);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D178);
  v29((char *)(v30 + *(int *)(v31 + 48)), v13, v9);
  v32 = *(void (**)(char *, uint64_t))(v28 + 8);
  v32(v16, v9);
  sub_23B989D60((uint64_t)v24, &qword_256A5D150);
  v32(v13, v9);
  return sub_23B989D60((uint64_t)v21, &qword_256A5D150);
}

uint64_t sub_23BA22058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_23BA2252C(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  sub_23BB8A0D0();
  v3 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRelease();
  v4 = v3 < 2;
  sub_23BB8A0D0();
  v5 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for AnnotationContent();
  *(_BYTE *)(a2 + v6[5]) = v4;
  *(_BYTE *)(a2 + v6[6]) = v5 < 2;
  *(_BYTE *)(a2 + v6[7]) = 0;
  v7 = v6[8];
  sub_23BB89F98();
  v8 = sub_23BB8A004();
  result = swift_release();
  *(_QWORD *)(a2 + v7) = v8;
  return result;
}

uint64_t sub_23BA22140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(a1 + 16) && *(_QWORD *)(a2 + 16))
  {
    v2 = sub_23BB8A31C();
    MEMORY[0x24BDAC7A8](v2, v3);
    sub_23BB893F8();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
    return sub_23BB8A0DC();
  }
}

uint64_t sub_23BA22234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BA218E4(*(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23BA22244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BA21D54(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23BA22258(uint64_t a1, uint64_t a2)
{
  return sub_23BA22140(a1, a2);
}

uint64_t sub_23BA22268()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA2228C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_23BB25F40(a1, a2, *(uint64_t (**)(_QWORD, _QWORD))(v2 + 16));
}

unint64_t sub_23BA22294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5D108;
  if (!qword_256A5D108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D0D0);
    v2[0] = sub_23BA22318();
    v2[1] = sub_23B996E1C(&qword_256A5D120, &qword_256A5D128, MEMORY[0x24BDEFAD8]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5D108);
  }
  return result;
}

unint64_t sub_23BA22318()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256A5D110;
  if (!qword_256A5D110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D0C8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D0B8);
    v2[3] = sub_23B996E1C(&qword_256A5D100, &qword_256A5D0B8, MEMORY[0x24BDFBC78]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23BA223CC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5D110);
  }
  return result;
}

unint64_t sub_23BA223CC()
{
  unint64_t result;

  result = qword_256A5D118;
  if (!qword_256A5D118)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF08F0], MEMORY[0x24BDF0900]);
    atomic_store(result, (unint64_t *)&qword_256A5D118);
  }
  return result;
}

unint64_t sub_23BA22410()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A5D130;
  if (!qword_256A5D130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A1B8);
    v2 = sub_23B97D0C8(&qword_256A5D138, (uint64_t (*)(uint64_t))type metadata accessor for Annotation, (uint64_t)&protocol conformance descriptor for Annotation);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE12C0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A5D130);
  }
  return result;
}

uint64_t sub_23BA2248C()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D140);
  return sub_23BB8A0DC();
}

uint64_t objectdestroyTm_5()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA2251C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BA22058(a1, a2);
}

uint64_t sub_23BA2252C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Annotation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA22570()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D0D0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5A1B8);
  sub_23BA22294();
  sub_23BA22410();
  return swift_getOpaqueTypeConformance2();
}

uint64_t DeviceDetailsController.State.Loaded.init(deviceInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B989CA4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DeviceInfo);
}

uint64_t DeviceDetailsController.State.Loaded.deviceInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B989CE8(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for DeviceInfo);
}

uint64_t DeviceDetailsController.State.Loaded.deviceInfo.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA2262C(a1, v1);
}

uint64_t sub_23BA2262C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DeviceDetailsController.State.Loaded.deviceInfo.modify())()
{
  return nullsub_1;
}

uint64_t DeviceDetailsController.State.loaded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for DeviceDetailsController.State(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8(v1, (uint64_t)v6, v7);
  v8 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    sub_23B989CA4((uint64_t)v6, a1, type metadata accessor for DeviceDetailsController.State.Loaded);
    v10 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, v10, 1, v8);
}

uint64_t type metadata accessor for DeviceDetailsController.State(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A5D1F0);
}

uint64_t type metadata accessor for DeviceDetailsController.State.Loaded(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5D258);
}

uint64_t *_s14descr250CAE4E1V5StateOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;
  char v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void *v51;
  void (*v52)(char *, _QWORD, uint64_t, uint64_t);
  id v53;
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  void (*v72)(char *, _QWORD, uint64_t, uint64_t);
  id v73;
  id v74;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
    v8 = *(_QWORD *)(v7 - 8);
    v101 = v7;
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v8 + 48))(a2, 1))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[22];
      v12 = *((_BYTE *)a2 + 232);
      swift_bridgeObjectRetain();
      if ((v11 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (v12 & 0x70) == 0)
      {
        v22 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v22;
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *(_OWORD *)((char *)a1 + 217) = *(_OWORD *)((char *)a2 + 217);
        v23 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v23;
        v24 = *((_OWORD *)a2 + 10);
        *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
        *((_OWORD *)a1 + 10) = v24;
        v25 = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 4) = v25;
        v26 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v26;
        v27 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v27;
      }
      else
      {
        v14 = a2[2];
        v15 = a2[3];
        v16 = a2[4];
        v99 = v8;
        v78 = a2[10];
        v79 = a2[11];
        v80 = a2[12];
        v82 = a2[13];
        v83 = a2[14];
        v84 = a2[15];
        v85 = a2[16];
        v87 = a2[17];
        v88 = a2[18];
        v89 = a2[19];
        v90 = a2[20];
        v91 = a2[21];
        v92 = a2[23];
        v93 = a2[24];
        v94 = a2[25];
        v95 = a2[26];
        v96 = a2[27];
        v97 = a2[28];
        v77 = v12;
        v76 = v11;
        v17 = a2[5];
        v18 = a2[6];
        v86 = v12;
        v19 = a2[7];
        v81 = v11;
        v20 = a2[8];
        v21 = a2[9];
        sub_23B989738(v14, v15, v16, v17, v18, v19, v20, v21, v78, v79, v80, v82, v83, v84, v85, v87, v88, v89, v90,
          v91,
          v76,
          v92,
          v93,
          v94,
          v95,
          v96,
          v97,
          v77);
        a1[2] = v14;
        a1[3] = v15;
        a1[4] = v16;
        a1[5] = v17;
        a1[6] = v18;
        a1[7] = v19;
        v8 = v99;
        a1[8] = v20;
        a1[9] = v21;
        a1[10] = v78;
        a1[11] = v79;
        a1[12] = v80;
        a1[13] = v82;
        a1[14] = v83;
        a1[15] = v84;
        a1[16] = v85;
        a1[17] = v87;
        a1[18] = v88;
        a1[19] = v89;
        a1[20] = v90;
        a1[21] = v91;
        a1[22] = v81;
        a1[23] = v92;
        a1[24] = v93;
        a1[25] = v94;
        a1[26] = v95;
        a1[27] = v96;
        a1[28] = v97;
        *((_BYTE *)a1 + 232) = v86;
      }
      v28 = *((unsigned __int8 *)a2 + 256);
      if (v28 == 255)
      {
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_BYTE *)a1 + 256) = *((_BYTE *)a2 + 256);
      }
      else
      {
        v29 = v28 & 1;
        v30 = (void *)a2[30];
        v31 = (void *)a2[31];
        sub_23B9CA7A8(v30, v31, v28 & 1);
        a1[30] = (uint64_t)v30;
        a1[31] = (uint64_t)v31;
        *((_BYTE *)a1 + 256) = v29;
      }
      v32 = (void *)a2[33];
      a1[33] = (uint64_t)v32;
      v33 = *(int *)(type metadata accessor for DeviceInfo() + 32);
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      v39 = v32;
      if (v38(v35, 1, v36))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v41 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
        v42 = *(_QWORD *)(v41 - 8);
        v98 = v37;
        v100 = v8;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 1, v41))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v44 = sub_23BB88984();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v34, v35, v44);
          v45 = *(int *)(v41 + 20);
          v46 = *(void **)&v35[v45];
          *(_QWORD *)&v34[v45] = v46;
          v47 = *(int *)(v41 + 24);
          v48 = &v34[v47];
          v49 = &v35[v47];
          v50 = *((_QWORD *)v49 + 1);
          *(_QWORD *)v48 = *(_QWORD *)v49;
          *((_QWORD *)v48 + 1) = v50;
          v51 = (void *)*((_QWORD *)v49 + 2);
          *((_QWORD *)v48 + 2) = v51;
          v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56);
          v53 = v46;
          swift_bridgeObjectRetain();
          v54 = v51;
          v52(v34, 0, 1, v41);
        }
        v55 = *(int *)(v36 + 20);
        v56 = &v34[v55];
        v57 = &v35[v55];
        v58 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v59 = *(_QWORD *)(v58 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          v61 = sub_23BB88984();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v56, v57, v61);
          v62 = *(int *)(v41 + 20);
          v63 = *(void **)&v57[v62];
          *(_QWORD *)&v56[v62] = v63;
          v64 = *(int *)(v41 + 24);
          v65 = &v56[v64];
          v66 = &v57[v64];
          v67 = *((_QWORD *)v66 + 1);
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *((_QWORD *)v65 + 1) = v67;
          v68 = (void *)*((_QWORD *)v66 + 2);
          *((_QWORD *)v65 + 2) = v68;
          v69 = *(int *)(v58 + 20);
          v70 = &v56[v69];
          v71 = &v57[v69];
          *(_OWORD *)v70 = *(_OWORD *)v71;
          *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
          v72 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56);
          v73 = v63;
          swift_bridgeObjectRetain();
          v74 = v68;
          v72(v56, 0, 1, v58);
        }
        v8 = v100;
        v34[*(int *)(v36 + 24)] = v35[*(int *)(v36 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v34, 0, 1, v36);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v101);
    }
  }
  return a1;
}

void _s14descr250CAE4E1V5StateOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    v3 = *(_QWORD *)(a1 + 176);
    v4 = *(_BYTE *)(a1 + 232);
    if ((v3 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v4 & 0x70) != 0)
      sub_23B9909D0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
        *(_QWORD *)(a1 + 168),
        v3,
        *(_QWORD *)(a1 + 184),
        *(_QWORD *)(a1 + 192),
        *(_QWORD *)(a1 + 200),
        *(_QWORD *)(a1 + 208),
        *(_QWORD *)(a1 + 216),
        *(_QWORD *)(a1 + 224),
        v4);
    v6 = *(unsigned __int8 *)(a1 + 256);
    if (v6 != 255)
      sub_23B9CBA50(*(void **)(a1 + 240), *(id *)(a1 + 248), v6 & 1);

    v7 = a1 + *(int *)(type metadata accessor for DeviceInfo() + 32);
    v8 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      v9 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9))
      {
        v10 = sub_23BB88984();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);

        v11 = v7 + *(int *)(v9 + 24);
        swift_bridgeObjectRelease();

      }
      v12 = v7 + *(int *)(v8 + 20);
      v13 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
      {
        v14 = sub_23BB88984();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);

        v15 = v12 + *(int *)(v9 + 24);
        swift_bridgeObjectRelease();

      }
    }
  }
}

_QWORD *_s14descr250CAE4E1V5StateOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int v26;
  char v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void *v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  id v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  void (*v70)(char *, _QWORD, uint64_t, uint64_t);
  id v71;
  id v72;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v6 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v7 + 48))(a2, 1))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[22];
    v10 = *((_BYTE *)a2 + 232);
    swift_bridgeObjectRetain();
    if ((v9 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (v10 & 0x70) == 0)
    {
      v20 = *((_OWORD *)a2 + 12);
      *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
      *((_OWORD *)a1 + 12) = v20;
      *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
      *(_OWORD *)((char *)a1 + 217) = *(_OWORD *)((char *)a2 + 217);
      v21 = *((_OWORD *)a2 + 8);
      *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 8) = v21;
      v22 = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 10) = v22;
      v23 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v23;
      v24 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v24;
      v25 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v25;
    }
    else
    {
      v12 = a2[2];
      v13 = a2[3];
      v97 = v7;
      v76 = a2[10];
      v77 = a2[11];
      v78 = a2[12];
      v80 = a2[13];
      v81 = a2[14];
      v82 = a2[15];
      v83 = a2[16];
      v85 = a2[17];
      v86 = a2[18];
      v87 = a2[19];
      v88 = a2[20];
      v89 = a2[21];
      v90 = a2[23];
      v91 = a2[24];
      v92 = a2[25];
      v93 = a2[26];
      v94 = a2[27];
      v95 = a2[28];
      v75 = v10;
      v74 = v9;
      v14 = a2[4];
      v15 = a2[5];
      v16 = a2[6];
      v84 = v10;
      v17 = a2[7];
      v79 = v9;
      v18 = a2[8];
      v19 = a2[9];
      sub_23B989738(v12, v13, v14, v15, v16, v17, v18, v19, v76, v77, v78, v80, v81, v82, v83, v85, v86, v87, v88,
        v89,
        v74,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        v75);
      a1[2] = v12;
      a1[3] = v13;
      a1[4] = v14;
      a1[5] = v15;
      a1[6] = v16;
      a1[7] = v17;
      v7 = v97;
      a1[8] = v18;
      a1[9] = v19;
      a1[10] = v76;
      a1[11] = v77;
      a1[12] = v78;
      a1[13] = v80;
      a1[14] = v81;
      a1[15] = v82;
      a1[16] = v83;
      a1[17] = v85;
      a1[18] = v86;
      a1[19] = v87;
      a1[20] = v88;
      a1[21] = v89;
      a1[22] = v79;
      a1[23] = v90;
      a1[24] = v91;
      a1[25] = v92;
      a1[26] = v93;
      a1[27] = v94;
      a1[28] = v95;
      *((_BYTE *)a1 + 232) = v84;
    }
    v26 = *((unsigned __int8 *)a2 + 256);
    if (v26 == 255)
    {
      *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
      *((_BYTE *)a1 + 256) = *((_BYTE *)a2 + 256);
    }
    else
    {
      v27 = v26 & 1;
      v28 = (void *)a2[30];
      v29 = (void *)a2[31];
      sub_23B9CA7A8(v28, v29, v26 & 1);
      a1[30] = v28;
      a1[31] = v29;
      *((_BYTE *)a1 + 256) = v27;
    }
    v30 = (void *)a2[33];
    a1[33] = v30;
    v31 = *(int *)(type metadata accessor for DeviceInfo() + 32);
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    v37 = v30;
    if (v36(v33, 1, v34))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v96 = v35;
      v98 = v7;
      v39 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v42 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v32, v33, v42);
        v43 = *(int *)(v39 + 20);
        v44 = *(void **)&v33[v43];
        *(_QWORD *)&v32[v43] = v44;
        v45 = *(int *)(v39 + 24);
        v46 = &v32[v45];
        v47 = &v33[v45];
        v48 = *((_QWORD *)v47 + 1);
        *(_QWORD *)v46 = *(_QWORD *)v47;
        *((_QWORD *)v46 + 1) = v48;
        v49 = (void *)*((_QWORD *)v47 + 2);
        *((_QWORD *)v46 + 2) = v49;
        v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
        v51 = v44;
        swift_bridgeObjectRetain();
        v52 = v49;
        v50(v32, 0, 1, v39);
      }
      v53 = *(int *)(v34 + 20);
      v54 = &v32[v53];
      v55 = &v33[v53];
      v56 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v59 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v54, v55, v59);
        v60 = *(int *)(v39 + 20);
        v61 = *(void **)&v55[v60];
        *(_QWORD *)&v54[v60] = v61;
        v62 = *(int *)(v39 + 24);
        v63 = &v54[v62];
        v64 = &v55[v62];
        v65 = *((_QWORD *)v64 + 1);
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = v65;
        v66 = (void *)*((_QWORD *)v64 + 2);
        *((_QWORD *)v63 + 2) = v66;
        v67 = *(int *)(v56 + 20);
        v68 = &v54[v67];
        v69 = &v55[v67];
        *(_OWORD *)v68 = *(_OWORD *)v69;
        *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
        v70 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56);
        v71 = v61;
        swift_bridgeObjectRetain();
        v72 = v66;
        v70(v54, 0, 1, v56);
      }
      v32[*(int *)(v34 + 24)] = v33[*(int *)(v34 + 24)];
      v7 = v98;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v32, 0, 1, v34);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v99);
  }
  return a1;
}

uint64_t _s14descr250CAE4E1V5StateOwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  void *v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  char v25;
  BOOL v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int v48;
  __int128 v49;
  char v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  char v107;
  __int128 *v108;
  __int128 *v109;
  char *v110;
  int v111;
  char v112;
  __int128 v113;
  char v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  void *v126;
  void (*v127)(char *, _QWORD, uint64_t, uint64_t);
  id v128;
  id v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, _QWORD, uint64_t, uint64_t);
  id v146;
  id v147;
  char v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  id v154;
  uint64_t v155;
  _BYTE *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t (*v159)(_BYTE *, uint64_t, uint64_t);
  int v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t (*v167)(_BYTE *, uint64_t, uint64_t);
  int v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  void *v176;
  void (*v177)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  void *v186;
  void (*v187)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v188;
  id v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  void (*v206)(char *, _QWORD, uint64_t, uint64_t);
  id v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t (*v215)(char *, uint64_t, uint64_t);
  int v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  char *v222;
  char *v223;
  void *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  void (*v229)(char *, _QWORD, uint64_t, uint64_t);
  id v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  void *v236;
  id v237;
  uint64_t v238;
  _QWORD *v239;
  uint64_t v240;
  void *v241;
  void *v242;
  id v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  void *v247;
  id v248;
  uint64_t v249;
  char *v250;
  char *v251;
  void *v252;
  void *v253;
  id v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  void *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  void *v325;

  v6 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v11 = *(_BYTE *)(a2 + 232);
      v12 = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      if ((v12 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (v11 & 0x70) == 0)
      {
        v38 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v38;
        v39 = *(_OWORD *)(a2 + 48);
        v40 = *(_OWORD *)(a2 + 64);
        v41 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v41;
        *(_OWORD *)(a1 + 48) = v39;
        *(_OWORD *)(a1 + 64) = v40;
        v42 = *(_OWORD *)(a2 + 112);
        v43 = *(_OWORD *)(a2 + 128);
        v44 = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 160) = v44;
        *(_OWORD *)(a1 + 112) = v42;
        *(_OWORD *)(a1 + 128) = v43;
        v45 = *(_OWORD *)(a2 + 176);
        v46 = *(_OWORD *)(a2 + 192);
        v47 = *(_OWORD *)(a2 + 208);
        *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
        *(_OWORD *)(a1 + 192) = v46;
        *(_OWORD *)(a1 + 208) = v47;
        *(_OWORD *)(a1 + 176) = v45;
      }
      else
      {
        v14 = *(_QWORD *)(a2 + 16);
        v15 = *(_QWORD *)(a2 + 24);
        v16 = *(_QWORD *)(a2 + 40);
        v316 = v7;
        v17 = *(_QWORD *)(a2 + 48);
        v320 = *(_QWORD *)(a2 + 56);
        v259 = *(_QWORD *)(a2 + 72);
        v260 = *(_QWORD *)(a2 + 80);
        v261 = *(_QWORD *)(a2 + 88);
        v262 = *(_QWORD *)(a2 + 96);
        v268 = *(_QWORD *)(a2 + 104);
        v271 = *(_QWORD *)(a2 + 112);
        v274 = *(_QWORD *)(a2 + 120);
        v277 = *(_QWORD *)(a2 + 128);
        v280 = *(_QWORD *)(a2 + 136);
        v283 = *(_QWORD *)(a2 + 144);
        v286 = *(_QWORD *)(a2 + 152);
        v289 = *(_QWORD *)(a2 + 160);
        v292 = *(_QWORD *)(a2 + 168);
        v295 = *(_QWORD *)(a2 + 184);
        v298 = *(_QWORD *)(a2 + 192);
        v303 = *(_QWORD *)(a2 + 200);
        v306 = *(_QWORD *)(a2 + 208);
        v309 = *(_QWORD *)(a2 + 216);
        v313 = *(_QWORD *)(a2 + 224);
        v265 = v12;
        v258 = v12;
        v18 = *(_QWORD *)(a2 + 32);
        v19 = *(_QWORD *)(a2 + 64);
        sub_23B989738(v14, v15, v18, v16, v17, v320, v19, v259, v260, v261, v262, v268, v271, v274, v277, v280, v283, v286, v289,
          v292,
          v258,
          v295,
          v298,
          v303,
          v306,
          v309,
          v313,
          v11);
        *(_QWORD *)(a1 + 16) = v14;
        *(_QWORD *)(a1 + 24) = v15;
        *(_QWORD *)(a1 + 32) = v18;
        *(_QWORD *)(a1 + 40) = v16;
        *(_QWORD *)(a1 + 48) = v17;
        v7 = v316;
        *(_QWORD *)(a1 + 56) = v320;
        *(_QWORD *)(a1 + 64) = v19;
        *(_QWORD *)(a1 + 72) = v259;
        *(_QWORD *)(a1 + 80) = v260;
        *(_QWORD *)(a1 + 88) = v261;
        *(_QWORD *)(a1 + 96) = v262;
        *(_QWORD *)(a1 + 104) = v268;
        *(_QWORD *)(a1 + 112) = v271;
        *(_QWORD *)(a1 + 120) = v274;
        *(_QWORD *)(a1 + 128) = v277;
        *(_QWORD *)(a1 + 136) = v280;
        *(_QWORD *)(a1 + 144) = v283;
        *(_QWORD *)(a1 + 152) = v286;
        *(_QWORD *)(a1 + 160) = v289;
        *(_QWORD *)(a1 + 168) = v292;
        *(_QWORD *)(a1 + 176) = v265;
        *(_QWORD *)(a1 + 184) = v295;
        *(_QWORD *)(a1 + 192) = v298;
        *(_QWORD *)(a1 + 200) = v303;
        *(_QWORD *)(a1 + 208) = v306;
        *(_QWORD *)(a1 + 216) = v309;
        *(_QWORD *)(a1 + 224) = v313;
        *(_BYTE *)(a1 + 232) = v11;
      }
      v48 = *(unsigned __int8 *)(a2 + 256);
      if (v48 == 255)
      {
        v49 = *(_OWORD *)(a2 + 240);
        *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = v49;
      }
      else
      {
        v50 = v48 & 1;
        v51 = *(void **)(a2 + 240);
        v52 = *(void **)(a2 + 248);
        sub_23B9CA7A8(v51, v52, v48 & 1);
        *(_QWORD *)(a1 + 240) = v51;
        *(_QWORD *)(a1 + 248) = v52;
        *(_BYTE *)(a1 + 256) = v50;
      }
      v53 = *(void **)(a2 + 264);
      *(_QWORD *)(a1 + 264) = v53;
      v54 = *(int *)(type metadata accessor for DeviceInfo() + 32);
      v55 = (char *)(a1 + v54);
      v56 = (char *)(a2 + v54);
      v57 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
      v58 = *(_QWORD *)(v57 - 8);
      v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
      v60 = v53;
      if (v59(v56, 1, v57))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        v317 = v58;
        v62 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
        v63 = *(_QWORD *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v56, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          v120 = sub_23BB88984();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v55, v56, v120);
          v121 = *(int *)(v62 + 20);
          v122 = *(void **)&v56[v121];
          *(_QWORD *)&v55[v121] = v122;
          v123 = *(int *)(v62 + 24);
          v124 = &v55[v123];
          v125 = &v56[v123];
          *(_QWORD *)v124 = *(_QWORD *)v125;
          *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
          v126 = (void *)*((_QWORD *)v125 + 2);
          *((_QWORD *)v124 + 2) = v126;
          v127 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56);
          v128 = v122;
          swift_bridgeObjectRetain();
          v129 = v126;
          v127(v55, 0, 1, v62);
        }
        v130 = *(int *)(v57 + 20);
        v323 = &v55[v130];
        v131 = &v56[v130];
        v132 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v133 = *(_QWORD *)(v132 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
        {
          v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
          memcpy(v323, v131, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          v135 = sub_23BB88984();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v323, v131, v135);
          v136 = *(int *)(v62 + 20);
          v137 = *(void **)&v131[v136];
          *(_QWORD *)&v323[v136] = v137;
          v138 = *(int *)(v62 + 24);
          v139 = &v323[v138];
          v140 = &v131[v138];
          *(_QWORD *)v139 = *(_QWORD *)v140;
          *((_QWORD *)v139 + 1) = *((_QWORD *)v140 + 1);
          v312 = (void *)*((_QWORD *)v140 + 2);
          *((_QWORD *)v139 + 2) = v312;
          v141 = *(int *)(v132 + 20);
          v142 = &v323[v141];
          v143 = &v131[v141];
          v144 = *((_QWORD *)v143 + 2);
          *(_OWORD *)v142 = *(_OWORD *)v143;
          *((_QWORD *)v142 + 2) = v144;
          v145 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v133 + 56);
          v146 = v137;
          swift_bridgeObjectRetain();
          v147 = v312;
          v145(v323, 0, 1, v132);
        }
        v55[*(int *)(v57 + 24)] = v56[*(int *)(v57 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v317 + 56))(v55, 0, 1, v57);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_10;
  }
  if (v10)
  {
    sub_23B989D9C(a1, type metadata accessor for DeviceDetailsController.State.Loaded);
LABEL_10:
    v20 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v21 = (void *)a1;
LABEL_11:
    memcpy(v21, (const void *)a2, v20);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (_OWORD *)(a1 + 16);
  v23 = (_OWORD *)(a2 + 16);
  v24 = *(_QWORD *)(a2 + 176);
  v25 = *(_BYTE *)(a2 + 232);
  v27 = (v25 & 0x70) == 0 && (v24 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL;
  if ((*(_QWORD *)(a1 + 176) & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (*(_BYTE *)(a1 + 232) & 0x70) != 0)
  {
    if (v27)
    {
      sub_23B9CC9F4(a1 + 16);
      v65 = *(_OWORD *)(a2 + 32);
      *v22 = *v23;
      *(_OWORD *)(a1 + 32) = v65;
      v66 = *(_OWORD *)(a2 + 96);
      v68 = *(_OWORD *)(a2 + 48);
      v67 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v66;
      *(_OWORD *)(a1 + 48) = v68;
      *(_OWORD *)(a1 + 64) = v67;
      v69 = *(_OWORD *)(a2 + 160);
      v71 = *(_OWORD *)(a2 + 112);
      v70 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v69;
      *(_OWORD *)(a1 + 112) = v71;
      *(_OWORD *)(a1 + 128) = v70;
      v73 = *(_OWORD *)(a2 + 192);
      v72 = *(_OWORD *)(a2 + 208);
      v74 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
      *(_OWORD *)(a1 + 192) = v73;
      *(_OWORD *)(a1 + 208) = v72;
      *(_OWORD *)(a1 + 176) = v74;
    }
    else
    {
      v322 = *(_QWORD *)(a2 + 16);
      v264 = *(_QWORD *)(a2 + 72);
      v267 = *(_QWORD *)(a2 + 64);
      v270 = *(_QWORD *)(a2 + 80);
      v273 = *(_QWORD *)(a2 + 88);
      v276 = *(_QWORD *)(a2 + 96);
      v83 = *(_QWORD *)(a2 + 120);
      v279 = *(_QWORD *)(a2 + 104);
      v282 = *(_QWORD *)(a2 + 112);
      v285 = *(_QWORD *)(a2 + 128);
      v288 = *(_QWORD *)(a2 + 136);
      v291 = *(_QWORD *)(a2 + 144);
      v294 = *(_QWORD *)(a2 + 152);
      v297 = *(_QWORD *)(a2 + 160);
      v300 = *(_QWORD *)(a2 + 168);
      v302 = *(_QWORD *)(a2 + 184);
      v305 = *(_QWORD *)(a2 + 192);
      v308 = *(_QWORD *)(a2 + 200);
      v311 = *(_QWORD *)(a2 + 208);
      v315 = *(_QWORD *)(a2 + 216);
      v319 = *(_QWORD *)(a2 + 224);
      v84 = *(_QWORD *)(a2 + 24);
      v85 = *(_QWORD *)(a2 + 32);
      v86 = *(_QWORD *)(a2 + 40);
      v87 = *(_QWORD *)(a2 + 48);
      v88 = *(_QWORD *)(a2 + 56);
      sub_23B989738(v322, v84, v85, v86, v87, v88, v267, v264, v270, v273, v276, v279, v282, v83, v285, v288, v291, v294, v297,
        v300,
        v24,
        v302,
        v305,
        v308,
        v311,
        v315,
        v319,
        v25);
      v89 = *(_QWORD *)(a1 + 16);
      v90 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v322;
      *(_QWORD *)(a1 + 24) = v84;
      v91 = *(_QWORD *)(a1 + 32);
      v92 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v85;
      *(_QWORD *)(a1 + 40) = v86;
      v93 = *(void **)(a1 + 48);
      v94 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v87;
      *(_QWORD *)(a1 + 56) = v88;
      v95 = *(_QWORD *)(a1 + 64);
      v96 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v267;
      *(_QWORD *)(a1 + 72) = v264;
      v97 = *(_OWORD *)(a1 + 80);
      v98 = *(_OWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 80) = v270;
      *(_QWORD *)(a1 + 88) = v273;
      *(_QWORD *)(a1 + 96) = v276;
      *(_QWORD *)(a1 + 104) = v279;
      v99 = *(_OWORD *)(a1 + 112);
      v100 = *(_OWORD *)(a1 + 128);
      *(_QWORD *)(a1 + 112) = v282;
      *(_QWORD *)(a1 + 120) = v83;
      *(_QWORD *)(a1 + 128) = v285;
      *(_QWORD *)(a1 + 136) = v288;
      v101 = *(_OWORD *)(a1 + 144);
      v102 = *(_OWORD *)(a1 + 160);
      *(_QWORD *)(a1 + 144) = v291;
      *(_QWORD *)(a1 + 152) = v294;
      *(_QWORD *)(a1 + 160) = v297;
      v103 = *(_OWORD *)(a1 + 176);
      v104 = *(_OWORD *)(a1 + 192);
      *(_QWORD *)(a1 + 168) = v300;
      *(_QWORD *)(a1 + 176) = v24;
      *(_QWORD *)(a1 + 184) = v302;
      *(_QWORD *)(a1 + 192) = v305;
      *(_QWORD *)(a1 + 200) = v308;
      v105 = *(_OWORD *)(a1 + 208);
      *(_QWORD *)(a1 + 208) = v311;
      *(_QWORD *)(a1 + 216) = v315;
      v106 = *(_QWORD *)(a1 + 224);
      *(_QWORD *)(a1 + 224) = v319;
      v107 = *(_BYTE *)(a1 + 232);
      *(_BYTE *)(a1 + 232) = v25;
      sub_23B9909D0(v89, v90, v91, v92, v93, v94, v95, v96, v97, *((uint64_t *)&v97 + 1), v98, *((uint64_t *)&v98 + 1), v99, *((uint64_t *)&v99 + 1), v100, *((uint64_t *)&v100 + 1), v101, *((uint64_t *)&v101 + 1), v102,
        *((uint64_t *)&v102 + 1),
        v103,
        *((uint64_t *)&v103 + 1),
        v104,
        *((uint64_t *)&v104 + 1),
        v105,
        *((uint64_t *)&v105 + 1),
        v106,
        v107);
    }
  }
  else if (v27)
  {
    v28 = *(_OWORD *)(a2 + 32);
    *v22 = *v23;
    *(_OWORD *)(a1 + 32) = v28;
    v29 = *(_OWORD *)(a2 + 48);
    v30 = *(_OWORD *)(a2 + 64);
    v31 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v31;
    *(_OWORD *)(a1 + 48) = v29;
    *(_OWORD *)(a1 + 64) = v30;
    v32 = *(_OWORD *)(a2 + 112);
    v33 = *(_OWORD *)(a2 + 128);
    v34 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v34;
    *(_OWORD *)(a1 + 112) = v32;
    *(_OWORD *)(a1 + 128) = v33;
    v35 = *(_OWORD *)(a2 + 176);
    v36 = *(_OWORD *)(a2 + 192);
    v37 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
    *(_OWORD *)(a1 + 192) = v36;
    *(_OWORD *)(a1 + 208) = v37;
    *(_OWORD *)(a1 + 176) = v35;
  }
  else
  {
    v321 = *(_QWORD *)(a2 + 16);
    v263 = *(_QWORD *)(a2 + 80);
    v266 = *(_QWORD *)(a2 + 88);
    v269 = *(_QWORD *)(a2 + 96);
    v275 = *(_QWORD *)(a2 + 104);
    v278 = *(_QWORD *)(a2 + 112);
    v281 = *(_QWORD *)(a2 + 120);
    v284 = *(_QWORD *)(a2 + 128);
    v287 = *(_QWORD *)(a2 + 136);
    v290 = *(_QWORD *)(a2 + 144);
    v293 = *(_QWORD *)(a2 + 152);
    v296 = *(_QWORD *)(a2 + 160);
    v299 = *(_QWORD *)(a2 + 168);
    v301 = *(_QWORD *)(a2 + 184);
    v304 = *(_QWORD *)(a2 + 192);
    v307 = *(_QWORD *)(a2 + 200);
    v310 = *(_QWORD *)(a2 + 208);
    v314 = *(_QWORD *)(a2 + 216);
    v318 = *(_QWORD *)(a2 + 224);
    v75 = *(_QWORD *)(a2 + 24);
    v76 = *(_QWORD *)(a2 + 32);
    v77 = *(_QWORD *)(a2 + 40);
    v78 = *(_QWORD *)(a2 + 48);
    v79 = *(_QWORD *)(a2 + 56);
    v80 = *(_BYTE *)(a2 + 232);
    v81 = *(_QWORD *)(a2 + 64);
    v272 = *(_QWORD *)(a2 + 176);
    v82 = *(_QWORD *)(a2 + 72);
    sub_23B989738(v321, v75, v76, v77, v78, v79, v81, v82, v263, v266, v269, v275, v278, v281, v284, v287, v290, v293, v296,
      v299,
      v272,
      v301,
      v304,
      v307,
      v310,
      v314,
      v318,
      v80);
    *(_QWORD *)(a1 + 16) = v321;
    *(_QWORD *)(a1 + 24) = v75;
    *(_QWORD *)(a1 + 32) = v76;
    *(_QWORD *)(a1 + 40) = v77;
    *(_QWORD *)(a1 + 48) = v78;
    *(_QWORD *)(a1 + 56) = v79;
    *(_QWORD *)(a1 + 64) = v81;
    *(_QWORD *)(a1 + 72) = v82;
    *(_QWORD *)(a1 + 80) = v263;
    *(_QWORD *)(a1 + 88) = v266;
    *(_QWORD *)(a1 + 96) = v269;
    *(_QWORD *)(a1 + 104) = v275;
    *(_QWORD *)(a1 + 112) = v278;
    *(_QWORD *)(a1 + 120) = v281;
    *(_QWORD *)(a1 + 128) = v284;
    *(_QWORD *)(a1 + 136) = v287;
    *(_QWORD *)(a1 + 144) = v290;
    *(_QWORD *)(a1 + 152) = v293;
    *(_QWORD *)(a1 + 160) = v296;
    *(_QWORD *)(a1 + 168) = v299;
    *(_QWORD *)(a1 + 176) = v272;
    *(_QWORD *)(a1 + 184) = v301;
    *(_QWORD *)(a1 + 192) = v304;
    *(_QWORD *)(a1 + 200) = v307;
    *(_QWORD *)(a1 + 208) = v310;
    *(_QWORD *)(a1 + 216) = v314;
    *(_QWORD *)(a1 + 224) = v318;
    *(_BYTE *)(a1 + 232) = v80;
  }
  v108 = (__int128 *)(a1 + 240);
  v109 = (__int128 *)(a2 + 240);
  v110 = (char *)(a1 + 256);
  v111 = *(unsigned __int8 *)(a2 + 256);
  if (*(unsigned __int8 *)(a1 + 256) == 255)
  {
    if (v111 == 255)
    {
      v113 = *v109;
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *v108 = v113;
    }
    else
    {
      v149 = v111 & 1;
      v150 = *(void **)(a2 + 240);
      v151 = *(void **)(a2 + 248);
      sub_23B9CA7A8(v150, v151, v111 & 1);
      *(_QWORD *)(a1 + 240) = v150;
      *(_QWORD *)(a1 + 248) = v151;
      *v110 = v149;
    }
  }
  else if (v111 == 255)
  {
    sub_23BA243DC(a1 + 240);
    v112 = *(_BYTE *)(a2 + 256);
    *v108 = *v109;
    *(_BYTE *)(a1 + 256) = v112;
  }
  else
  {
    v114 = v111 & 1;
    v115 = *(void **)(a2 + 240);
    v116 = *(void **)(a2 + 248);
    sub_23B9CA7A8(v115, v116, v111 & 1);
    v117 = *(void **)(a1 + 240);
    v118 = *(void **)(a1 + 248);
    v119 = *v110;
    *(_QWORD *)(a1 + 240) = v115;
    *(_QWORD *)(a1 + 248) = v116;
    *v110 = v114;
    sub_23B9CBA50(v117, v118, v119);
  }
  v152 = *(void **)(a1 + 264);
  v153 = *(void **)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v153;
  v154 = v153;

  v155 = *(int *)(type metadata accessor for DeviceInfo() + 32);
  v156 = (_BYTE *)(a1 + v155);
  a2 += v155;
  v157 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v158 = *(_QWORD *)(v157 - 8);
  v159 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v158 + 48);
  v160 = v159(v156, 1, v157);
  v161 = v159((_BYTE *)a2, 1, v157);
  if (!v160)
  {
    if (v161)
    {
      sub_23B989D9C((uint64_t)v156, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_54;
    }
    v165 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v166 = *(_QWORD *)(v165 - 8);
    v167 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v166 + 48);
    v168 = v167(v156, 1, v165);
    v169 = v167((_BYTE *)a2, 1, v165);
    v324 = v165;
    if (v168)
    {
      if (!v169)
      {
        v170 = sub_23BB88984();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 16))(v156, a2, v170);
        v171 = *(int *)(v165 + 20);
        v172 = *(void **)(a2 + v171);
        *(_QWORD *)&v156[v171] = v172;
        v173 = *(int *)(v165 + 24);
        v174 = &v156[v173];
        v175 = (_QWORD *)(a2 + v173);
        *v174 = *v175;
        v174[1] = v175[1];
        v176 = (void *)v175[2];
        v174[2] = v176;
        v177 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v166 + 56);
        v178 = v172;
        swift_bridgeObjectRetain();
        v179 = v176;
        v177(v156, 0, 1, v165);
        goto LABEL_66;
      }
    }
    else
    {
      if (!v169)
      {
        v233 = sub_23BB88984();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v233 - 8) + 24))(v156, a2, v233);
        v234 = *(int *)(v165 + 20);
        v235 = *(void **)(a2 + v234);
        v236 = *(void **)&v156[v234];
        *(_QWORD *)&v156[v234] = v235;
        v237 = v235;

        v238 = *(int *)(v165 + 24);
        v239 = &v156[v238];
        v240 = a2 + v238;
        *v239 = *(_QWORD *)(a2 + v238);
        v239[1] = *(_QWORD *)(a2 + v238 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v241 = *(void **)(v240 + 16);
        v242 = (void *)v239[2];
        v239[2] = v241;
        v243 = v241;

LABEL_66:
        v210 = *(int *)(v157 + 20);
        v211 = &v156[v210];
        v212 = (char *)(a2 + v210);
        v213 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v214 = *(_QWORD *)(v213 - 8);
        v215 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v214 + 48);
        v216 = v215(v211, 1, v213);
        v217 = v215(v212, 1, v213);
        if (v216)
        {
          if (!v217)
          {
            v218 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v211, v212, v218);
            v219 = *(int *)(v324 + 20);
            v220 = *(void **)&v212[v219];
            *(_QWORD *)&v211[v219] = v220;
            v221 = *(int *)(v324 + 24);
            v222 = &v211[v221];
            v223 = &v212[v221];
            *(_QWORD *)v222 = *(_QWORD *)v223;
            *((_QWORD *)v222 + 1) = *((_QWORD *)v223 + 1);
            v224 = (void *)*((_QWORD *)v223 + 2);
            *((_QWORD *)v222 + 2) = v224;
            v225 = *(int *)(v213 + 20);
            v226 = &v211[v225];
            v227 = &v212[v225];
            v228 = *((_QWORD *)v227 + 2);
            *(_OWORD *)v226 = *(_OWORD *)v227;
            *((_QWORD *)v226 + 2) = v228;
            v229 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56);
            v230 = v220;
            swift_bridgeObjectRetain();
            v231 = v224;
            v229(v211, 0, 1, v213);
LABEL_72:
            v156[*(int *)(v157 + 24)] = *(_BYTE *)(a2 + *(int *)(v157 + 24));
            return a1;
          }
        }
        else
        {
          if (!v217)
          {
            v244 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 24))(v211, v212, v244);
            v245 = *(int *)(v324 + 20);
            v246 = *(void **)&v212[v245];
            v247 = *(void **)&v211[v245];
            *(_QWORD *)&v211[v245] = v246;
            v248 = v246;

            v249 = *(int *)(v324 + 24);
            v250 = &v211[v249];
            v251 = &v212[v249];
            *(_QWORD *)v250 = *(_QWORD *)&v212[v249];
            *((_QWORD *)v250 + 1) = *(_QWORD *)&v212[v249 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v252 = (void *)*((_QWORD *)v251 + 2);
            v253 = (void *)*((_QWORD *)v250 + 2);
            *((_QWORD *)v250 + 2) = v252;
            v254 = v252;

            v255 = *(int *)(v213 + 20);
            v256 = &v211[v255];
            v257 = &v212[v255];
            *v256 = *v257;
            *((_QWORD *)v256 + 1) = *((_QWORD *)v257 + 1);
            *((_QWORD *)v256 + 2) = *((_QWORD *)v257 + 2);
            goto LABEL_72;
          }
          sub_23B989D9C((uint64_t)v211, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
        goto LABEL_72;
      }
      sub_23B989D9C((uint64_t)v156, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v156, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
    goto LABEL_66;
  }
  if (v161)
  {
LABEL_54:
    v20 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8) - 8) + 64);
    v21 = v156;
    goto LABEL_11;
  }
  v162 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v163 = *(_QWORD *)(v162 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(a2, 1, v162))
  {
    v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v156, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
  }
  else
  {
    v180 = sub_23BB88984();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v156, a2, v180);
    v181 = *(int *)(v162 + 20);
    v182 = *(void **)(a2 + v181);
    *(_QWORD *)&v156[v181] = v182;
    v183 = *(int *)(v162 + 24);
    v184 = &v156[v183];
    v185 = (_QWORD *)(a2 + v183);
    *v184 = *v185;
    v184[1] = v185[1];
    v186 = (void *)v185[2];
    v184[2] = v186;
    v187 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v163 + 56);
    v188 = v182;
    swift_bridgeObjectRetain();
    v189 = v186;
    v187(v156, 0, 1, v162);
  }
  v190 = *(int *)(v157 + 20);
  v191 = &v156[v190];
  v192 = (char *)(a2 + v190);
  v193 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v194 = *(_QWORD *)(v193 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v192, 1, v193))
  {
    v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
  }
  else
  {
    v196 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v191, v192, v196);
    v197 = *(int *)(v162 + 20);
    v198 = *(void **)&v192[v197];
    *(_QWORD *)&v191[v197] = v198;
    v199 = *(int *)(v162 + 24);
    v200 = &v191[v199];
    v201 = &v192[v199];
    *(_QWORD *)v200 = *(_QWORD *)v201;
    *((_QWORD *)v200 + 1) = *((_QWORD *)v201 + 1);
    v325 = (void *)*((_QWORD *)v201 + 2);
    *((_QWORD *)v200 + 2) = v325;
    v202 = *(int *)(v193 + 20);
    v203 = &v191[v202];
    v204 = &v192[v202];
    v205 = *((_QWORD *)v204 + 2);
    *(_OWORD *)v203 = *(_OWORD *)v204;
    *((_QWORD *)v203 + 2) = v205;
    v206 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v194 + 56);
    v207 = v198;
    swift_bridgeObjectRetain();
    v208 = v325;
    v206(v191, 0, 1, v193);
  }
  v156[*(int *)(v157 + 24)] = *(_BYTE *)(a2 + *(int *)(v157 + 24));
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v156, 0, 1, v157);
  return a1;
}

uint64_t sub_23BA243DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5AFE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *_s14descr250CAE4E1V5StateOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[13];
    a1[12] = a2[12];
    a1[13] = v8;
    *(_OWORD *)((char *)a1 + 217) = *(_OWORD *)((char *)a2 + 217);
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    v14 = a2[3];
    a1[2] = a2[2];
    a1[3] = v14;
    a1[15] = a2[15];
    *((_BYTE *)a1 + 256) = *((_BYTE *)a2 + 256);
    *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
    v15 = *(int *)(type metadata accessor for DeviceInfo() + 32);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v42 = v19;
      v21 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v24 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v16, v17, v24);
        *(_QWORD *)&v16[*(int *)(v21 + 20)] = *(_QWORD *)&v17[*(int *)(v21 + 20)];
        v25 = *(int *)(v21 + 24);
        v26 = &v16[v25];
        v27 = &v17[v25];
        *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
        *(_OWORD *)v26 = *(_OWORD *)v27;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v16, 0, 1, v21);
      }
      v28 = *(int *)(v18 + 20);
      v29 = &v16[v28];
      v30 = &v17[v28];
      v31 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
      v41 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v30, 1, v31))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v33 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v29, v30, v33);
        *(_QWORD *)&v29[*(int *)(v21 + 20)] = *(_QWORD *)&v30[*(int *)(v21 + 20)];
        v34 = *(int *)(v21 + 24);
        v35 = &v29[v34];
        v36 = &v30[v34];
        *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
        *(_OWORD *)v35 = *(_OWORD *)v36;
        v37 = *(int *)(v31 + 20);
        v38 = &v29[v37];
        v39 = &v30[v37];
        *((_QWORD *)v38 + 2) = *((_QWORD *)v39 + 2);
        *(_OWORD *)v38 = *(_OWORD *)v39;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v29, 0, 1, v31);
      }
      v16[*(int *)(v18 + 24)] = v17[*(int *)(v18 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v16, 0, 1, v18);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t _s14descr250CAE4E1V5StateOwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD *v65;
  int v66;
  int v67;
  void *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(char *, uint64_t, uint64_t);
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(char *, uint64_t, uint64_t);
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v6 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_23B989D9C(a1, type metadata accessor for DeviceDetailsController.State.Loaded);
      goto LABEL_7;
    }
    v26 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v26;
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(a1 + 176);
    v28 = *(_BYTE *)(a1 + 232);
    if ((v27 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v28 & 0x70) != 0)
    {
      v30 = *(_QWORD *)(a2 + 176);
      v31 = *(_BYTE *)(a2 + 232);
      if ((v30 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (*(_BYTE *)(a2 + 232) & 0x70) != 0)
      {
        v41 = *(_QWORD *)(a1 + 16);
        v42 = *(_QWORD *)(a1 + 24);
        v43 = *(_QWORD *)(a1 + 32);
        v44 = *(_QWORD *)(a1 + 40);
        v45 = *(void **)(a1 + 48);
        v46 = *(_QWORD *)(a1 + 56);
        v47 = *(_QWORD *)(a1 + 64);
        v48 = *(_QWORD *)(a1 + 72);
        v49 = *(_OWORD *)(a1 + 80);
        v50 = *(_OWORD *)(a1 + 96);
        v51 = *(_OWORD *)(a1 + 112);
        v52 = *(_OWORD *)(a1 + 128);
        v53 = *(_OWORD *)(a1 + 144);
        v54 = *(_QWORD *)(a1 + 160);
        v55 = *(_QWORD *)(a1 + 168);
        v56 = *(_OWORD *)(a1 + 184);
        v57 = *(_OWORD *)(a1 + 200);
        v58 = *(_QWORD *)(a1 + 216);
        v59 = *(_QWORD *)(a1 + 224);
        v60 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v60;
        v61 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v61;
        v62 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v62;
        v63 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v63;
        v64 = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 160) = v64;
        *(_QWORD *)(a1 + 176) = v30;
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_BYTE *)(a1 + 232) = v31;
        sub_23B9909D0(v41, v42, v43, v44, v45, v46, v47, v48, v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54,
          v55,
          v27,
          v56,
          *((uint64_t *)&v56 + 1),
          v57,
          *((uint64_t *)&v57 + 1),
          v58,
          v59,
          v28);
LABEL_20:
        v65 = (_OWORD *)(a2 + 240);
        v66 = *(unsigned __int8 *)(a1 + 256);
        if (v66 != 255)
        {
          v67 = *(unsigned __int8 *)(a2 + 256);
          if (v67 != 255)
          {
            v68 = *(void **)(a1 + 240);
            v69 = *(void **)(a1 + 248);
            *(_OWORD *)(a1 + 240) = *v65;
            *(_BYTE *)(a1 + 256) = v67 & 1;
            sub_23B9CBA50(v68, v69, v66 & 1);
LABEL_25:
            v70 = *(void **)(a1 + 264);
            *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

            v71 = *(int *)(type metadata accessor for DeviceInfo() + 32);
            v72 = (char *)(a1 + v71);
            a2 += v71;
            v73 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
            v74 = *(_QWORD *)(v73 - 8);
            v75 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
            v76 = v75(v72, 1, v73);
            v77 = v75((char *)a2, 1, v73);
            if (v76)
            {
              if (!v77)
              {
                v78 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
                v79 = *(_QWORD *)(v78 - 8);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(a2, 1, v78))
                {
                  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
                  memcpy(v72, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
                }
                else
                {
                  v107 = sub_23BB88984();
                  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v72, a2, v107);
                  *(_QWORD *)&v72[*(int *)(v78 + 20)] = *(_QWORD *)(a2 + *(int *)(v78 + 20));
                  v108 = *(int *)(v78 + 24);
                  v109 = &v72[v108];
                  v110 = a2 + v108;
                  *((_QWORD *)v109 + 2) = *(_QWORD *)(v110 + 16);
                  *(_OWORD *)v109 = *(_OWORD *)v110;
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v72, 0, 1, v78);
                }
                v111 = *(int *)(v73 + 20);
                v112 = &v72[v111];
                v113 = (char *)(a2 + v111);
                v114 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
                v115 = *(_QWORD *)(v114 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
                {
                  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
                  memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
                }
                else
                {
                  v117 = sub_23BB88984();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v112, v113, v117);
                  *(_QWORD *)&v112[*(int *)(v78 + 20)] = *(_QWORD *)&v113[*(int *)(v78 + 20)];
                  v118 = *(int *)(v78 + 24);
                  v119 = &v112[v118];
                  v120 = &v113[v118];
                  *((_QWORD *)v119 + 2) = *((_QWORD *)v120 + 2);
                  *(_OWORD *)v119 = *(_OWORD *)v120;
                  v121 = *(int *)(v114 + 20);
                  v122 = &v112[v121];
                  v123 = &v113[v121];
                  *((_QWORD *)v122 + 2) = *((_QWORD *)v123 + 2);
                  *(_OWORD *)v122 = *(_OWORD *)v123;
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
                }
                v72[*(int *)(v73 + 24)] = *(_BYTE *)(a2 + *(int *)(v73 + 24));
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v72, 0, 1, v73);
                return a1;
              }
              goto LABEL_31;
            }
            if (v77)
            {
              sub_23B989D9C((uint64_t)v72, type metadata accessor for MapsDirectionsProvider.DirectionsState);
LABEL_31:
              v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8) - 8) + 64);
              v25 = v72;
              goto LABEL_8;
            }
            v98 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
            v99 = *(_QWORD *)(v98 - 8);
            v100 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48);
            v101 = v100(v72, 1, v98);
            v102 = v100((char *)a2, 1, v98);
            v162 = v98;
            if (v101)
            {
              if (!v102)
              {
                v103 = sub_23BB88984();
                (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v72, a2, v103);
                *(_QWORD *)&v72[*(int *)(v98 + 20)] = *(_QWORD *)(a2 + *(int *)(v98 + 20));
                v104 = *(int *)(v98 + 24);
                v105 = &v72[v104];
                v106 = a2 + v104;
                *((_QWORD *)v105 + 2) = *(_QWORD *)(v106 + 16);
                *(_OWORD *)v105 = *(_OWORD *)v106;
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v72, 0, 1, v98);
                goto LABEL_50;
              }
            }
            else
            {
              if (!v102)
              {
                v141 = sub_23BB88984();
                (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 40))(v72, a2, v141);
                v142 = *(int *)(v98 + 20);
                v143 = *(void **)&v72[v142];
                *(_QWORD *)&v72[v142] = *(_QWORD *)(a2 + v142);

                v144 = *(int *)(v98 + 24);
                v145 = &v72[v144];
                v146 = a2 + v144;
                v147 = *(_QWORD *)(a2 + v144 + 8);
                *(_QWORD *)v145 = *(_QWORD *)(a2 + v144);
                *((_QWORD *)v145 + 1) = v147;
                swift_bridgeObjectRelease();
                v148 = (void *)*((_QWORD *)v145 + 2);
                *((_QWORD *)v145 + 2) = *(_QWORD *)(v146 + 16);

LABEL_50:
                v125 = *(int *)(v73 + 20);
                v126 = &v72[v125];
                v127 = (char *)(a2 + v125);
                v128 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
                v129 = *(_QWORD *)(v128 - 8);
                v130 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 48);
                v131 = v130(v126, 1, v128);
                v132 = v130(v127, 1, v128);
                if (v131)
                {
                  if (!v132)
                  {
                    v133 = sub_23BB88984();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v126, v127, v133);
                    *(_QWORD *)&v126[*(int *)(v162 + 20)] = *(_QWORD *)&v127[*(int *)(v162 + 20)];
                    v134 = *(int *)(v162 + 24);
                    v135 = &v126[v134];
                    v136 = &v127[v134];
                    *((_QWORD *)v135 + 2) = *((_QWORD *)v136 + 2);
                    *(_OWORD *)v135 = *(_OWORD *)v136;
                    v137 = *(int *)(v128 + 20);
                    v138 = &v126[v137];
                    v139 = &v127[v137];
                    *((_QWORD *)v138 + 2) = *((_QWORD *)v139 + 2);
                    *(_OWORD *)v138 = *(_OWORD *)v139;
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
LABEL_56:
                    v72[*(int *)(v73 + 24)] = *(_BYTE *)(a2 + *(int *)(v73 + 24));
                    return a1;
                  }
                }
                else
                {
                  if (!v132)
                  {
                    v149 = sub_23BB88984();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 40))(v126, v127, v149);
                    v150 = *(int *)(v162 + 20);
                    v151 = *(void **)&v126[v150];
                    *(_QWORD *)&v126[v150] = *(_QWORD *)&v127[v150];

                    v152 = *(int *)(v162 + 24);
                    v153 = &v126[v152];
                    v154 = &v127[v152];
                    v155 = *(_QWORD *)&v127[v152 + 8];
                    *(_QWORD *)v153 = *(_QWORD *)&v127[v152];
                    *((_QWORD *)v153 + 1) = v155;
                    swift_bridgeObjectRelease();
                    v156 = (void *)*((_QWORD *)v153 + 2);
                    *((_QWORD *)v153 + 2) = *((_QWORD *)v154 + 2);

                    v157 = *(int *)(v128 + 20);
                    v158 = &v126[v157];
                    v159 = &v127[v157];
                    *v158 = *v159;
                    *(_OWORD *)(v158 + 8) = *(_OWORD *)(v159 + 8);
                    goto LABEL_56;
                  }
                  sub_23B989D9C((uint64_t)v126, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
                }
                v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
                memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
                goto LABEL_56;
              }
              sub_23B989D9C((uint64_t)v72, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
            }
            v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
            memcpy(v72, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
            goto LABEL_50;
          }
          sub_23BA243DC(a1 + 240);
        }
        *(_OWORD *)(a1 + 240) = *v65;
        *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
        goto LABEL_25;
      }
      sub_23B9CC9F4(a1 + 16);
    }
    v32 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v32;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
    v33 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v33;
    v34 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v34;
    v35 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v35;
    v36 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v36;
    v37 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v37;
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    v24 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v25 = (void *)a1;
LABEL_8:
    memcpy(v25, (const void *)a2, v24);
    return a1;
  }
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
  v12 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v12;
  v13 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v13;
  v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v14;
  v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v18 = *(int *)(type metadata accessor for DeviceInfo() + 32);
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v161 = v22;
    v38 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v20, 1, v38))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v81 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v19, v20, v81);
      *(_QWORD *)&v19[*(int *)(v38 + 20)] = *(_QWORD *)&v20[*(int *)(v38 + 20)];
      v82 = *(int *)(v38 + 24);
      v83 = &v19[v82];
      v84 = &v20[v82];
      *((_QWORD *)v83 + 2) = *((_QWORD *)v84 + 2);
      *(_OWORD *)v83 = *(_OWORD *)v84;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v19, 0, 1, v38);
    }
    v85 = *(int *)(v21 + 20);
    v86 = &v19[v85];
    v87 = &v20[v85];
    v88 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v160 = *(_QWORD *)(v88 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v87, 1, v88))
    {
      v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      v90 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v86, v87, v90);
      *(_QWORD *)&v86[*(int *)(v38 + 20)] = *(_QWORD *)&v87[*(int *)(v38 + 20)];
      v91 = *(int *)(v38 + 24);
      v92 = &v86[v91];
      v93 = &v87[v91];
      *((_QWORD *)v92 + 2) = *((_QWORD *)v93 + 2);
      *(_OWORD *)v92 = *(_OWORD *)v93;
      v94 = *(int *)(v88 + 20);
      v95 = &v86[v94];
      v96 = &v87[v94];
      *((_QWORD *)v95 + 2) = *((_QWORD *)v96 + 2);
      *(_OWORD *)v95 = *(_OWORD *)v96;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v86, 0, 1, v88);
    }
    v19[*(int *)(v21 + 24)] = v20[*(int *)(v21 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v19, 0, 1, v21);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s14descr250CAE4E1V5StateOwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA2512C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t _s14descr250CAE4E1V5StateOwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA25184(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23BA251D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_23BA2520C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceDetailsController.State.Loaded(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_23BA2524C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DeviceInfo();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t _s14descr250CAE4E1V5StateO6LoadedVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  char v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  id v69;
  id v70;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;

  v4 = type metadata accessor for DeviceInfo();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[22];
    v9 = *((_BYTE *)a2 + 232);
    swift_bridgeObjectRetain();
    if ((v8 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (v9 & 0x70) == 0)
    {
      v19 = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 192) = v19;
      *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 217) = *(_OWORD *)((char *)a2 + 217);
      v20 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v20;
      v21 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v21;
      v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v22;
      v23 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v23;
      v24 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v24;
    }
    else
    {
      v92 = a2[3];
      v93 = a2[2];
      v73 = a2[10];
      v74 = a2[11];
      v75 = a2[12];
      v76 = a2[13];
      v77 = a2[14];
      v78 = a2[15];
      v79 = a2[16];
      v80 = a2[17];
      v81 = a2[18];
      v82 = a2[19];
      v83 = a2[20];
      v84 = a2[21];
      v85 = a2[23];
      v86 = a2[24];
      v87 = a2[25];
      v88 = a2[26];
      v89 = a2[27];
      v90 = a2[28];
      v72 = v9;
      v11 = a2[4];
      v12 = a2[5];
      v13 = a2[6];
      v14 = v9;
      v15 = a2[7];
      v16 = a2[8];
      v91 = v6;
      v17 = a2[9];
      sub_23B989738(v93, v92, v11, v12, v13, v15, v16, v17, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83,
        v84,
        v8,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v72);
      *(_QWORD *)(a1 + 16) = v93;
      *(_QWORD *)(a1 + 24) = v92;
      *(_QWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 40) = v12;
      *(_QWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v16;
      *(_QWORD *)(a1 + 72) = v17;
      v6 = v91;
      *(_QWORD *)(a1 + 80) = v73;
      *(_QWORD *)(a1 + 88) = v74;
      *(_QWORD *)(a1 + 96) = v75;
      *(_QWORD *)(a1 + 104) = v76;
      *(_QWORD *)(a1 + 112) = v77;
      *(_QWORD *)(a1 + 120) = v78;
      *(_QWORD *)(a1 + 128) = v79;
      *(_QWORD *)(a1 + 136) = v80;
      *(_QWORD *)(a1 + 144) = v81;
      *(_QWORD *)(a1 + 152) = v82;
      *(_QWORD *)(a1 + 160) = v83;
      *(_QWORD *)(a1 + 168) = v84;
      *(_QWORD *)(a1 + 176) = v8;
      *(_QWORD *)(a1 + 184) = v85;
      *(_QWORD *)(a1 + 192) = v86;
      *(_QWORD *)(a1 + 200) = v87;
      *(_QWORD *)(a1 + 208) = v88;
      *(_QWORD *)(a1 + 216) = v89;
      *(_QWORD *)(a1 + 224) = v90;
      *(_BYTE *)(a1 + 232) = v14;
    }
    v25 = *((unsigned __int8 *)a2 + 256);
    if (v25 == 255)
    {
      *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
      *(_BYTE *)(a1 + 256) = *((_BYTE *)a2 + 256);
    }
    else
    {
      v26 = v25 & 1;
      v27 = (void *)a2[30];
      v28 = (void *)a2[31];
      sub_23B9CA7A8(v27, v28, v25 & 1);
      *(_QWORD *)(a1 + 240) = v27;
      *(_QWORD *)(a1 + 248) = v28;
      *(_BYTE *)(a1 + 256) = v26;
    }
    v29 = (void *)a2[33];
    *(_QWORD *)(a1 + 264) = v29;
    v30 = *(int *)(v6 + 32);
    v31 = (char *)(a1 + v30);
    v32 = (char *)a2 + v30;
    v33 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v29;
    if (v35(v32, 1, v33))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v41 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v31, v32, v41);
        v42 = *(int *)(v38 + 20);
        v43 = *(void **)&v32[v42];
        *(_QWORD *)&v31[v42] = v43;
        v44 = *(int *)(v38 + 24);
        v45 = &v31[v44];
        v46 = &v32[v44];
        v47 = *((_QWORD *)v46 + 1);
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = v47;
        v48 = (void *)*((_QWORD *)v46 + 2);
        *((_QWORD *)v45 + 2) = v48;
        v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
        v50 = v43;
        swift_bridgeObjectRetain();
        v51 = v48;
        v49(v31, 0, 1, v38);
      }
      v52 = *(int *)(v33 + 20);
      v53 = &v31[v52];
      v54 = &v32[v52];
      v55 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        v58 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v53, v54, v58);
        v59 = *(int *)(v38 + 20);
        v60 = *(void **)&v54[v59];
        *(_QWORD *)&v53[v59] = v60;
        v61 = *(int *)(v38 + 24);
        v62 = &v53[v61];
        v63 = &v54[v61];
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = v64;
        v94 = (void *)*((_QWORD *)v63 + 2);
        *((_QWORD *)v62 + 2) = v94;
        v65 = *(int *)(v55 + 20);
        v66 = &v53[v65];
        v67 = &v54[v65];
        *(_OWORD *)v66 = *(_OWORD *)v67;
        *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
        v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56);
        v69 = v60;
        swift_bridgeObjectRetain();
        v70 = v94;
        v68(v53, 0, 1, v55);
      }
      v31[*(int *)(v33 + 24)] = v32[*(int *)(v33 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
  }
  return a1;
}

void _s14descr250CAE4E1V5StateO6LoadedVwxx(uint64_t a1)
{
  uint64_t v2;
  char v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(a1 + 176);
  v3 = *(_BYTE *)(a1 + 232);
  if ((v2 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v3 & 0x70) != 0)
    sub_23B9909D0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160),
      *(_QWORD *)(a1 + 168),
      v2,
      *(_QWORD *)(a1 + 184),
      *(_QWORD *)(a1 + 192),
      *(_QWORD *)(a1 + 200),
      *(_QWORD *)(a1 + 208),
      *(_QWORD *)(a1 + 216),
      *(_QWORD *)(a1 + 224),
      v3);
  v5 = *(unsigned __int8 *)(a1 + 256);
  if (v5 != 255)
    sub_23B9CBA50(*(void **)(a1 + 240), *(id *)(a1 + 248), v5 & 1);

  v6 = a1 + *(int *)(type metadata accessor for DeviceInfo() + 32);
  v7 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8))
    {
      v9 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);

      v10 = v6 + *(int *)(v8 + 24);
      swift_bridgeObjectRelease();

    }
    v11 = v6 + *(int *)(v7 + 20);
    v12 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    {
      v13 = sub_23BB88984();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);

      v14 = v11 + *(int *)(v8 + 24);
      swift_bridgeObjectRelease();

    }
  }
}

uint64_t _s14descr250CAE4E1V5StateO6LoadedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;
  char v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  id v47;
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, _QWORD, uint64_t, uint64_t);
  id v66;
  id v67;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 176);
  v6 = *(_BYTE *)(a2 + 232);
  swift_bridgeObjectRetain();
  if ((v5 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (v6 & 0x70) == 0)
  {
    v16 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v16;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
    v17 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v17;
    v18 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v18;
    v19 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v19;
    v20 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v20;
    v21 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v21;
  }
  else
  {
    v90 = *(_QWORD *)(a2 + 16);
    v71 = *(_QWORD *)(a2 + 80);
    v72 = *(_QWORD *)(a2 + 88);
    v73 = *(_QWORD *)(a2 + 96);
    v75 = *(_QWORD *)(a2 + 104);
    v76 = *(_QWORD *)(a2 + 112);
    v77 = *(_QWORD *)(a2 + 120);
    v78 = *(_QWORD *)(a2 + 128);
    v79 = *(_QWORD *)(a2 + 136);
    v80 = *(_QWORD *)(a2 + 144);
    v81 = *(_QWORD *)(a2 + 152);
    v82 = *(_QWORD *)(a2 + 160);
    v83 = *(_QWORD *)(a2 + 168);
    v84 = *(_QWORD *)(a2 + 184);
    v85 = *(_QWORD *)(a2 + 192);
    v86 = *(_QWORD *)(a2 + 200);
    v87 = *(_QWORD *)(a2 + 208);
    v88 = *(_QWORD *)(a2 + 216);
    v89 = *(_QWORD *)(a2 + 224);
    v70 = v6;
    v69 = v5;
    v8 = *(_QWORD *)(a2 + 24);
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_QWORD *)(a2 + 48);
    v12 = *(_QWORD *)(a2 + 56);
    v13 = v6;
    v14 = *(_QWORD *)(a2 + 64);
    v74 = v5;
    v15 = *(_QWORD *)(a2 + 72);
    sub_23B989738(v90, v8, v9, v10, v11, v12, v14, v15, v71, v72, v73, v75, v76, v77, v78, v79, v80, v81, v82,
      v83,
      v69,
      v84,
      v85,
      v86,
      v87,
      v88,
      v89,
      v70);
    *(_QWORD *)(a1 + 16) = v90;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = v15;
    *(_QWORD *)(a1 + 80) = v71;
    *(_QWORD *)(a1 + 88) = v72;
    *(_QWORD *)(a1 + 96) = v73;
    *(_QWORD *)(a1 + 104) = v75;
    *(_QWORD *)(a1 + 112) = v76;
    *(_QWORD *)(a1 + 120) = v77;
    *(_QWORD *)(a1 + 128) = v78;
    *(_QWORD *)(a1 + 136) = v79;
    *(_QWORD *)(a1 + 144) = v80;
    *(_QWORD *)(a1 + 152) = v81;
    *(_QWORD *)(a1 + 160) = v82;
    *(_QWORD *)(a1 + 168) = v83;
    *(_QWORD *)(a1 + 176) = v74;
    *(_QWORD *)(a1 + 184) = v84;
    *(_QWORD *)(a1 + 192) = v85;
    *(_QWORD *)(a1 + 200) = v86;
    *(_QWORD *)(a1 + 208) = v87;
    *(_QWORD *)(a1 + 216) = v88;
    *(_QWORD *)(a1 + 224) = v89;
    *(_BYTE *)(a1 + 232) = v13;
  }
  v22 = *(unsigned __int8 *)(a2 + 256);
  if (v22 == 255)
  {
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  }
  else
  {
    v23 = v22 & 1;
    v24 = *(void **)(a2 + 240);
    v25 = *(void **)(a2 + 248);
    sub_23B9CA7A8(v24, v25, v22 & 1);
    *(_QWORD *)(a1 + 240) = v24;
    *(_QWORD *)(a1 + 248) = v25;
    *(_BYTE *)(a1 + 256) = v23;
  }
  v26 = *(void **)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v26;
  v27 = *(int *)(type metadata accessor for DeviceInfo() + 32);
  v28 = (char *)(a1 + v27);
  v29 = (char *)(a2 + v27);
  v30 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v26;
  if (v32(v29, 1, v30))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v29, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v28, v29, v38);
      v39 = *(int *)(v35 + 20);
      v40 = *(void **)&v29[v39];
      *(_QWORD *)&v28[v39] = v40;
      v41 = *(int *)(v35 + 24);
      v42 = &v28[v41];
      v43 = &v29[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v45 = (void *)*((_QWORD *)v43 + 2);
      *((_QWORD *)v42 + 2) = v45;
      v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56);
      v47 = v40;
      swift_bridgeObjectRetain();
      v48 = v45;
      v46(v28, 0, 1, v35);
    }
    v49 = *(int *)(v30 + 20);
    v50 = &v28[v49];
    v51 = &v29[v49];
    v52 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      v55 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v50, v51, v55);
      v56 = *(int *)(v35 + 20);
      v57 = *(void **)&v51[v56];
      *(_QWORD *)&v50[v56] = v57;
      v58 = *(int *)(v35 + 24);
      v59 = &v50[v58];
      v60 = &v51[v58];
      v61 = *((_QWORD *)v60 + 1);
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *((_QWORD *)v59 + 1) = v61;
      v91 = (void *)*((_QWORD *)v60 + 2);
      *((_QWORD *)v59 + 2) = v91;
      v62 = *(int *)(v52 + 20);
      v63 = &v50[v62];
      v64 = &v51[v62];
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_QWORD *)v63 + 2) = *((_QWORD *)v64 + 2);
      v65 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56);
      v66 = v57;
      swift_bridgeObjectRetain();
      v67 = v91;
      v65(v50, 0, 1, v52);
    }
    v28[*(int *)(v30 + 24)] = v29[*(int *)(v30 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  return a1;
}

uint64_t _s14descr250CAE4E1V5StateO6LoadedVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  char v7;
  BOOL v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  __int128 *v64;
  __int128 *v65;
  char *v66;
  int v67;
  char v68;
  __int128 v69;
  char v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  char v75;
  char v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  id v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(_BYTE *, uint64_t, uint64_t);
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(_BYTE *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  void *v105;
  void (*v106)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  void *v115;
  void (*v116)(_BYTE *, _QWORD, uint64_t, uint64_t);
  id v117;
  id v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, _QWORD, uint64_t, uint64_t);
  id v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t (*v144)(char *, uint64_t, uint64_t);
  int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  void *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  void (*v158)(char *, _QWORD, uint64_t, uint64_t);
  id v159;
  id v160;
  uint64_t v161;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  void *v166;
  id v167;
  uint64_t v168;
  _QWORD *v169;
  char *v170;
  void *v171;
  void *v172;
  id v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  void *v177;
  id v178;
  uint64_t v179;
  char *v180;
  char *v181;
  void *v182;
  void *v183;
  id v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void *v229;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 176);
  v7 = *(_BYTE *)(a2 + 232);
  v9 = (v7 & 0x70) == 0 && (v6 & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL;
  if ((*(_QWORD *)(a1 + 176) & 0xFFFFFFFFFFFFFEFELL) == 0x3FFFFFEFELL && (*(_BYTE *)(a1 + 232) & 0x70) == 0)
  {
    if (v9)
    {
      v21 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v21;
      v22 = *(_OWORD *)(a2 + 48);
      v23 = *(_OWORD *)(a2 + 64);
      v24 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v24;
      *(_OWORD *)(a1 + 48) = v22;
      *(_OWORD *)(a1 + 64) = v23;
      v25 = *(_OWORD *)(a2 + 112);
      v26 = *(_OWORD *)(a2 + 128);
      v27 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v27;
      *(_OWORD *)(a1 + 112) = v25;
      *(_OWORD *)(a1 + 128) = v26;
      v28 = *(_OWORD *)(a2 + 176);
      v29 = *(_OWORD *)(a2 + 192);
      v30 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
      *(_OWORD *)(a1 + 192) = v29;
      *(_OWORD *)(a1 + 208) = v30;
      *(_OWORD *)(a1 + 176) = v28;
    }
    else
    {
      v227 = *(_QWORD *)(a2 + 16);
      v189 = *(_QWORD *)(a2 + 80);
      v191 = *(_QWORD *)(a2 + 88);
      v193 = *(_QWORD *)(a2 + 96);
      v197 = *(_QWORD *)(a2 + 104);
      v199 = *(_QWORD *)(a2 + 112);
      v201 = *(_QWORD *)(a2 + 120);
      v203 = *(_QWORD *)(a2 + 128);
      v205 = *(_QWORD *)(a2 + 136);
      v207 = *(_QWORD *)(a2 + 144);
      v209 = *(_QWORD *)(a2 + 152);
      v211 = *(_QWORD *)(a2 + 160);
      v213 = *(_QWORD *)(a2 + 168);
      v215 = *(_QWORD *)(a2 + 184);
      v217 = *(_QWORD *)(a2 + 192);
      v219 = *(_QWORD *)(a2 + 200);
      v221 = *(_QWORD *)(a2 + 208);
      v223 = *(_QWORD *)(a2 + 216);
      v225 = *(_QWORD *)(a2 + 224);
      v56 = *(_QWORD *)(a2 + 24);
      v57 = *(_QWORD *)(a2 + 32);
      v58 = *(_QWORD *)(a2 + 40);
      v59 = *(_QWORD *)(a2 + 48);
      v60 = *(_QWORD *)(a2 + 56);
      v61 = *(_BYTE *)(a2 + 232);
      v62 = *(_QWORD *)(a2 + 64);
      v195 = *(_QWORD *)(a2 + 176);
      v63 = *(_QWORD *)(a2 + 72);
      sub_23B989738(v227, v56, v57, v58, v59, v60, v62, v63, v189, v191, v193, v197, v199, v201, v203, v205, v207, v209, v211,
        v213,
        v195,
        v215,
        v217,
        v219,
        v221,
        v223,
        v225,
        v61);
      *(_QWORD *)(a1 + 16) = v227;
      *(_QWORD *)(a1 + 24) = v56;
      *(_QWORD *)(a1 + 32) = v57;
      *(_QWORD *)(a1 + 40) = v58;
      *(_QWORD *)(a1 + 48) = v59;
      *(_QWORD *)(a1 + 56) = v60;
      *(_QWORD *)(a1 + 64) = v62;
      *(_QWORD *)(a1 + 72) = v63;
      *(_QWORD *)(a1 + 80) = v189;
      *(_QWORD *)(a1 + 88) = v191;
      *(_QWORD *)(a1 + 96) = v193;
      *(_QWORD *)(a1 + 104) = v197;
      *(_QWORD *)(a1 + 112) = v199;
      *(_QWORD *)(a1 + 120) = v201;
      *(_QWORD *)(a1 + 128) = v203;
      *(_QWORD *)(a1 + 136) = v205;
      *(_QWORD *)(a1 + 144) = v207;
      *(_QWORD *)(a1 + 152) = v209;
      *(_QWORD *)(a1 + 160) = v211;
      *(_QWORD *)(a1 + 168) = v213;
      *(_QWORD *)(a1 + 176) = v195;
      *(_QWORD *)(a1 + 184) = v215;
      *(_QWORD *)(a1 + 192) = v217;
      *(_QWORD *)(a1 + 200) = v219;
      *(_QWORD *)(a1 + 208) = v221;
      *(_QWORD *)(a1 + 216) = v223;
      *(_QWORD *)(a1 + 224) = v225;
      *(_BYTE *)(a1 + 232) = v61;
    }
  }
  else if (v9)
  {
    sub_23B9CC9F4(a1 + 16);
    v11 = *(_OWORD *)(a2 + 32);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v11;
    v12 = *(_OWORD *)(a2 + 96);
    v14 = *(_OWORD *)(a2 + 48);
    v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 48) = v14;
    *(_OWORD *)(a1 + 64) = v13;
    v15 = *(_OWORD *)(a2 + 160);
    v17 = *(_OWORD *)(a2 + 112);
    v16 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 128) = v16;
    v19 = *(_OWORD *)(a2 + 192);
    v18 = *(_OWORD *)(a2 + 208);
    v20 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
    *(_OWORD *)(a1 + 192) = v19;
    *(_OWORD *)(a1 + 208) = v18;
    *(_OWORD *)(a1 + 176) = v20;
  }
  else
  {
    v226 = *(_QWORD *)(a2 + 16);
    v188 = *(_QWORD *)(a2 + 72);
    v190 = *(_QWORD *)(a2 + 64);
    v192 = *(_QWORD *)(a2 + 80);
    v194 = *(_QWORD *)(a2 + 88);
    v196 = *(_QWORD *)(a2 + 96);
    v198 = *(_QWORD *)(a2 + 104);
    v31 = *(_QWORD *)(a2 + 120);
    v200 = *(_QWORD *)(a2 + 112);
    v202 = *(_QWORD *)(a2 + 128);
    v204 = *(_QWORD *)(a2 + 136);
    v206 = *(_QWORD *)(a2 + 144);
    v208 = *(_QWORD *)(a2 + 152);
    v210 = *(_QWORD *)(a2 + 160);
    v212 = *(_QWORD *)(a2 + 168);
    v214 = *(_QWORD *)(a2 + 184);
    v216 = *(_QWORD *)(a2 + 192);
    v218 = *(_QWORD *)(a2 + 200);
    v220 = *(_QWORD *)(a2 + 208);
    v222 = *(_QWORD *)(a2 + 216);
    v224 = *(_QWORD *)(a2 + 224);
    v32 = *(_QWORD *)(a2 + 24);
    v33 = *(_QWORD *)(a2 + 32);
    v34 = *(_QWORD *)(a2 + 40);
    v35 = *(_QWORD *)(a2 + 48);
    v36 = *(_QWORD *)(a2 + 56);
    sub_23B989738(v226, v32, v33, v34, v35, v36, v190, v188, v192, v194, v196, v198, v200, v31, v202, v204, v206, v208, v210,
      v212,
      v6,
      v214,
      v216,
      v218,
      v220,
      v222,
      v224,
      v7);
    v37 = *(_QWORD *)(a1 + 16);
    v38 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v226;
    *(_QWORD *)(a1 + 24) = v32;
    v39 = *(_QWORD *)(a1 + 32);
    v40 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v33;
    *(_QWORD *)(a1 + 40) = v34;
    v41 = *(void **)(a1 + 48);
    v42 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 48) = v35;
    *(_QWORD *)(a1 + 56) = v36;
    v43 = *(_QWORD *)(a1 + 64);
    v44 = *(_QWORD *)(a1 + 72);
    *(_QWORD *)(a1 + 64) = v190;
    *(_QWORD *)(a1 + 72) = v188;
    v45 = *(_OWORD *)(a1 + 80);
    v46 = *(_OWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 80) = v192;
    *(_QWORD *)(a1 + 88) = v194;
    *(_QWORD *)(a1 + 96) = v196;
    *(_QWORD *)(a1 + 104) = v198;
    v47 = *(_OWORD *)(a1 + 112);
    v48 = *(_OWORD *)(a1 + 128);
    *(_QWORD *)(a1 + 112) = v200;
    *(_QWORD *)(a1 + 120) = v31;
    *(_QWORD *)(a1 + 128) = v202;
    *(_QWORD *)(a1 + 136) = v204;
    v49 = *(_OWORD *)(a1 + 144);
    v50 = *(_OWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 144) = v206;
    *(_QWORD *)(a1 + 152) = v208;
    *(_QWORD *)(a1 + 160) = v210;
    v51 = *(_OWORD *)(a1 + 176);
    v52 = *(_OWORD *)(a1 + 192);
    *(_QWORD *)(a1 + 168) = v212;
    *(_QWORD *)(a1 + 176) = v6;
    *(_QWORD *)(a1 + 184) = v214;
    *(_QWORD *)(a1 + 192) = v216;
    *(_QWORD *)(a1 + 200) = v218;
    v53 = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(a1 + 208) = v220;
    *(_QWORD *)(a1 + 216) = v222;
    v54 = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 224) = v224;
    v55 = *(_BYTE *)(a1 + 232);
    *(_BYTE *)(a1 + 232) = v7;
    sub_23B9909D0(v37, v38, v39, v40, v41, v42, v43, v44, v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50,
      *((uint64_t *)&v50 + 1),
      v51,
      *((uint64_t *)&v51 + 1),
      v52,
      *((uint64_t *)&v52 + 1),
      v53,
      *((uint64_t *)&v53 + 1),
      v54,
      v55);
  }
  v64 = (__int128 *)(a1 + 240);
  v65 = (__int128 *)(a2 + 240);
  v66 = (char *)(a1 + 256);
  v67 = *(unsigned __int8 *)(a2 + 256);
  if (*(unsigned __int8 *)(a1 + 256) == 255)
  {
    if (v67 == 255)
    {
      v69 = *v65;
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *v64 = v69;
    }
    else
    {
      v76 = v67 & 1;
      v77 = *(void **)(a2 + 240);
      v78 = *(void **)(a2 + 248);
      sub_23B9CA7A8(v77, v78, v67 & 1);
      *(_QWORD *)(a1 + 240) = v77;
      *(_QWORD *)(a1 + 248) = v78;
      *v66 = v76;
    }
  }
  else if (v67 == 255)
  {
    sub_23BA243DC(a1 + 240);
    v68 = *(_BYTE *)(a2 + 256);
    *v64 = *v65;
    *(_BYTE *)(a1 + 256) = v68;
  }
  else
  {
    v70 = v67 & 1;
    v71 = *(void **)(a2 + 240);
    v72 = *(void **)(a2 + 248);
    sub_23B9CA7A8(v71, v72, v67 & 1);
    v73 = *(void **)(a1 + 240);
    v74 = *(void **)(a1 + 248);
    v75 = *v66;
    *(_QWORD *)(a1 + 240) = v71;
    *(_QWORD *)(a1 + 248) = v72;
    *v66 = v70;
    sub_23B9CBA50(v73, v74, v75);
  }
  v79 = *(void **)(a1 + 264);
  v80 = *(void **)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v80;
  v81 = v80;

  v82 = *(int *)(type metadata accessor for DeviceInfo() + 32);
  v83 = (_BYTE *)(a1 + v82);
  v84 = (_BYTE *)(a2 + v82);
  v85 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v86 = *(_QWORD *)(v85 - 8);
  v87 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v86 + 48);
  v88 = v87(v83, 1, v85);
  v89 = v87(v84, 1, v85);
  if (!v88)
  {
    if (v89)
    {
      sub_23B989D9C((uint64_t)v83, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_30;
    }
    v94 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v95 = *(_QWORD *)(v94 - 8);
    v96 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v95 + 48);
    v97 = v96(v83, 1, v94);
    v98 = v96(v84, 1, v94);
    v228 = v94;
    if (v97)
    {
      if (!v98)
      {
        v99 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v83, v84, v99);
        v100 = *(int *)(v94 + 20);
        v101 = *(void **)&v84[v100];
        *(_QWORD *)&v83[v100] = v101;
        v102 = *(int *)(v94 + 24);
        v103 = &v83[v102];
        v104 = &v84[v102];
        *v103 = *v104;
        v103[1] = v104[1];
        v105 = (void *)v104[2];
        v103[2] = v105;
        v106 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v95 + 56);
        v107 = v101;
        swift_bridgeObjectRetain();
        v108 = v105;
        v106(v83, 0, 1, v94);
        goto LABEL_42;
      }
    }
    else
    {
      if (!v98)
      {
        v163 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v163 - 8) + 24))(v83, v84, v163);
        v164 = *(int *)(v94 + 20);
        v165 = *(void **)&v84[v164];
        v166 = *(void **)&v83[v164];
        *(_QWORD *)&v83[v164] = v165;
        v167 = v165;

        v168 = *(int *)(v94 + 24);
        v169 = &v83[v168];
        v170 = &v84[v168];
        *v169 = *(_QWORD *)&v84[v168];
        v169[1] = *(_QWORD *)&v84[v168 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v171 = (void *)*((_QWORD *)v170 + 2);
        v172 = (void *)v169[2];
        v169[2] = v171;
        v173 = v171;

LABEL_42:
        v139 = *(int *)(v85 + 20);
        v140 = &v83[v139];
        v141 = &v84[v139];
        v142 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v143 = *(_QWORD *)(v142 - 8);
        v144 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v143 + 48);
        v145 = v144(v140, 1, v142);
        v146 = v144(v141, 1, v142);
        if (v145)
        {
          if (!v146)
          {
            v147 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v140, v141, v147);
            v148 = *(int *)(v228 + 20);
            v149 = *(void **)&v141[v148];
            *(_QWORD *)&v140[v148] = v149;
            v150 = *(int *)(v228 + 24);
            v151 = &v140[v150];
            v152 = &v141[v150];
            *(_QWORD *)v151 = *(_QWORD *)v152;
            *((_QWORD *)v151 + 1) = *((_QWORD *)v152 + 1);
            v153 = (void *)*((_QWORD *)v152 + 2);
            *((_QWORD *)v151 + 2) = v153;
            v154 = *(int *)(v142 + 20);
            v155 = &v140[v154];
            v156 = &v141[v154];
            v157 = *((_QWORD *)v156 + 2);
            *(_OWORD *)v155 = *(_OWORD *)v156;
            *((_QWORD *)v155 + 2) = v157;
            v158 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56);
            v159 = v149;
            swift_bridgeObjectRetain();
            v160 = v153;
            v158(v140, 0, 1, v142);
LABEL_48:
            v83[*(int *)(v85 + 24)] = v84[*(int *)(v85 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v146)
          {
            v174 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 24))(v140, v141, v174);
            v175 = *(int *)(v228 + 20);
            v176 = *(void **)&v141[v175];
            v177 = *(void **)&v140[v175];
            *(_QWORD *)&v140[v175] = v176;
            v178 = v176;

            v179 = *(int *)(v228 + 24);
            v180 = &v140[v179];
            v181 = &v141[v179];
            *(_QWORD *)v180 = *(_QWORD *)&v141[v179];
            *((_QWORD *)v180 + 1) = *(_QWORD *)&v141[v179 + 8];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v182 = (void *)*((_QWORD *)v181 + 2);
            v183 = (void *)*((_QWORD *)v180 + 2);
            *((_QWORD *)v180 + 2) = v182;
            v184 = v182;

            v185 = *(int *)(v142 + 20);
            v186 = &v140[v185];
            v187 = &v141[v185];
            *v186 = *v187;
            *((_QWORD *)v186 + 1) = *((_QWORD *)v187 + 1);
            *((_QWORD *)v186 + 2) = *((_QWORD *)v187 + 2);
            goto LABEL_48;
          }
          sub_23B989D9C((uint64_t)v140, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
        goto LABEL_48;
      }
      sub_23B989D9C((uint64_t)v83, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
    goto LABEL_42;
  }
  if (v89)
  {
LABEL_30:
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    return a1;
  }
  v90 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v91 = *(_QWORD *)(v90 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v91 + 48))(v84, 1, v90))
  {
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
  }
  else
  {
    v109 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v109 - 8) + 16))(v83, v84, v109);
    v110 = *(int *)(v90 + 20);
    v111 = *(void **)&v84[v110];
    *(_QWORD *)&v83[v110] = v111;
    v112 = *(int *)(v90 + 24);
    v113 = &v83[v112];
    v114 = &v84[v112];
    *v113 = *v114;
    v113[1] = v114[1];
    v115 = (void *)v114[2];
    v113[2] = v115;
    v116 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v91 + 56);
    v117 = v111;
    swift_bridgeObjectRetain();
    v118 = v115;
    v116(v83, 0, 1, v90);
  }
  v119 = *(int *)(v85 + 20);
  v120 = &v83[v119];
  v121 = &v84[v119];
  v122 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v123 = *(_QWORD *)(v122 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
  {
    v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
  }
  else
  {
    v125 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v120, v121, v125);
    v126 = *(int *)(v90 + 20);
    v127 = *(void **)&v121[v126];
    *(_QWORD *)&v120[v126] = v127;
    v128 = *(int *)(v90 + 24);
    v129 = &v120[v128];
    v130 = &v121[v128];
    *(_QWORD *)v129 = *(_QWORD *)v130;
    *((_QWORD *)v129 + 1) = *((_QWORD *)v130 + 1);
    v229 = (void *)*((_QWORD *)v130 + 2);
    *((_QWORD *)v129 + 2) = v229;
    v131 = *(int *)(v122 + 20);
    v132 = &v120[v131];
    v133 = &v121[v131];
    v134 = *((_QWORD *)v133 + 2);
    *(_OWORD *)v132 = *(_OWORD *)v133;
    *((_QWORD *)v132 + 2) = v134;
    v135 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56);
    v136 = v127;
    swift_bridgeObjectRetain();
    v137 = v229;
    v135(v120, 0, 1, v122);
  }
  v83[*(int *)(v85 + 24)] = v84[*(int *)(v85 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
  return a1;
}

uint64_t _s14descr250CAE4E1V5StateO6LoadedVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v4 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v4;
  *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
  v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v11 = *(int *)(type metadata accessor for DeviceInfo() + 32);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v14 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v12, v13, v20);
      *(_QWORD *)&v12[*(int *)(v17 + 20)] = *(_QWORD *)&v13[*(int *)(v17 + 20)];
      v21 = *(int *)(v17 + 24);
      v22 = &v12[v21];
      v23 = &v13[v21];
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    }
    v24 = *(int *)(v14 + 20);
    v25 = &v12[v24];
    v26 = &v13[v24];
    v27 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v25, v26, v30);
      *(_QWORD *)&v25[*(int *)(v17 + 20)] = *(_QWORD *)&v26[*(int *)(v17 + 20)];
      v31 = *(int *)(v17 + 24);
      v32 = &v25[v31];
      v33 = &v26[v31];
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v34 = *(int *)(v27 + 20);
      v35 = &v25[v34];
      v36 = &v26[v34];
      *((_QWORD *)v35 + 2) = *((_QWORD *)v36 + 2);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v12[*(int *)(v14 + 24)] = v13[*(int *)(v14 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t _s14descr250CAE4E1V5StateO6LoadedVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD *v41;
  int v42;
  int v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(_BYTE *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_BYTE *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(char *, uint64_t, uint64_t);
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  _QWORD *v107;
  char *v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 176);
  v6 = *(_BYTE *)(a1 + 232);
  if ((v5 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v6 & 0x70) != 0)
  {
    v8 = *(_QWORD *)(a2 + 176);
    v9 = *(_BYTE *)(a2 + 232);
    if ((v8 & 0xFFFFFFFFFFFFFEFELL) != 0x3FFFFFEFELL || (v9 & 0x70) != 0)
    {
      v11 = *(_QWORD *)(a1 + 16);
      v12 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a1 + 32);
      v14 = *(_QWORD *)(a1 + 40);
      v15 = *(void **)(a1 + 48);
      v16 = *(_QWORD *)(a1 + 56);
      v17 = *(_QWORD *)(a1 + 64);
      v18 = *(_QWORD *)(a1 + 72);
      v19 = *(_OWORD *)(a1 + 80);
      v20 = *(_OWORD *)(a1 + 96);
      v21 = *(_OWORD *)(a1 + 112);
      v22 = *(_OWORD *)(a1 + 128);
      v23 = *(_OWORD *)(a1 + 144);
      v24 = *(_QWORD *)(a1 + 160);
      v25 = *(_QWORD *)(a1 + 168);
      v26 = *(_OWORD *)(a1 + 184);
      v27 = *(_OWORD *)(a1 + 200);
      v28 = *(_QWORD *)(a1 + 216);
      v29 = *(_QWORD *)(a1 + 224);
      v30 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v30;
      v31 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v31;
      v32 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v32;
      v33 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v33;
      v34 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v34;
      *(_QWORD *)(a1 + 176) = v8;
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 232) = v9;
      sub_23B9909D0(v11, v12, v13, v14, v15, v16, v17, v18, v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
        v25,
        v5,
        v26,
        *((uint64_t *)&v26 + 1),
        v27,
        *((uint64_t *)&v27 + 1),
        v28,
        v29,
        v6);
      goto LABEL_12;
    }
    sub_23B9CC9F4(a1 + 16);
  }
  v35 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v35;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 217) = *(_OWORD *)(a2 + 217);
  v36 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v36;
  v37 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v37;
  v38 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v38;
  v39 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v39;
  v40 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v40;
LABEL_12:
  v41 = (_OWORD *)(a2 + 240);
  v42 = *(unsigned __int8 *)(a1 + 256);
  if (v42 == 255)
  {
LABEL_15:
    *(_OWORD *)(a1 + 240) = *v41;
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    goto LABEL_17;
  }
  v43 = *(unsigned __int8 *)(a2 + 256);
  if (v43 == 255)
  {
    sub_23BA243DC(a1 + 240);
    goto LABEL_15;
  }
  v44 = *(void **)(a1 + 240);
  v45 = *(void **)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *v41;
  *(_BYTE *)(a1 + 256) = v43 & 1;
  sub_23B9CBA50(v44, v45, v42 & 1);
LABEL_17:
  v46 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  v47 = *(int *)(type metadata accessor for DeviceInfo() + 32);
  v48 = (_BYTE *)(a1 + v47);
  v49 = (_BYTE *)(a2 + v47);
  v50 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (v54)
    {
      sub_23B989D9C((uint64_t)v48, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      goto LABEL_23;
    }
    v59 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
    v60 = *(_QWORD *)(v59 - 8);
    v61 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v60 + 48);
    v62 = v61(v48, 1, v59);
    v63 = v61(v49, 1, v59);
    v122 = v59;
    if (v62)
    {
      if (!v63)
      {
        v64 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v48, v49, v64);
        *(_QWORD *)&v48[*(int *)(v59 + 20)] = *(_QWORD *)&v49[*(int *)(v59 + 20)];
        v65 = *(int *)(v59 + 24);
        v66 = &v48[v65];
        v67 = &v49[v65];
        *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
        *(_OWORD *)v66 = *(_OWORD *)v67;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v48, 0, 1, v59);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v63)
      {
        v103 = sub_23BB88984();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v103 - 8) + 40))(v48, v49, v103);
        v104 = *(int *)(v59 + 20);
        v105 = *(void **)&v48[v104];
        *(_QWORD *)&v48[v104] = *(_QWORD *)&v49[v104];

        v106 = *(int *)(v59 + 24);
        v107 = &v48[v106];
        v108 = &v49[v106];
        v109 = *(_QWORD *)&v49[v106 + 8];
        *v107 = *(_QWORD *)&v49[v106];
        v107[1] = v109;
        swift_bridgeObjectRelease();
        v110 = (void *)v107[2];
        v107[2] = *((_QWORD *)v108 + 2);

LABEL_35:
        v86 = *(int *)(v50 + 20);
        v87 = &v48[v86];
        v88 = &v49[v86];
        v89 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
        v90 = *(_QWORD *)(v89 - 8);
        v91 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48);
        v92 = v91(v87, 1, v89);
        v93 = v91(v88, 1, v89);
        if (v92)
        {
          if (!v93)
          {
            v94 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v87, v88, v94);
            *(_QWORD *)&v87[*(int *)(v122 + 20)] = *(_QWORD *)&v88[*(int *)(v122 + 20)];
            v95 = *(int *)(v122 + 24);
            v96 = &v87[v95];
            v97 = &v88[v95];
            *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
            *(_OWORD *)v96 = *(_OWORD *)v97;
            v98 = *(int *)(v89 + 20);
            v99 = &v87[v98];
            v100 = &v88[v98];
            *((_QWORD *)v99 + 2) = *((_QWORD *)v100 + 2);
            *(_OWORD *)v99 = *(_OWORD *)v100;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
LABEL_41:
            v48[*(int *)(v50 + 24)] = v49[*(int *)(v50 + 24)];
            return a1;
          }
        }
        else
        {
          if (!v93)
          {
            v111 = sub_23BB88984();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 40))(v87, v88, v111);
            v112 = *(int *)(v122 + 20);
            v113 = *(void **)&v87[v112];
            *(_QWORD *)&v87[v112] = *(_QWORD *)&v88[v112];

            v114 = *(int *)(v122 + 24);
            v115 = &v87[v114];
            v116 = &v88[v114];
            v117 = *(_QWORD *)&v88[v114 + 8];
            *(_QWORD *)v115 = *(_QWORD *)&v88[v114];
            *((_QWORD *)v115 + 1) = v117;
            swift_bridgeObjectRelease();
            v118 = (void *)*((_QWORD *)v115 + 2);
            *((_QWORD *)v115 + 2) = *((_QWORD *)v116 + 2);

            v119 = *(int *)(v89 + 20);
            v120 = &v87[v119];
            v121 = &v88[v119];
            *v120 = *v121;
            *(_OWORD *)(v120 + 8) = *(_OWORD *)(v121 + 8);
            goto LABEL_41;
          }
          sub_23B989D9C((uint64_t)v87, type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult);
        }
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        goto LABEL_41;
      }
      sub_23B989D9C((uint64_t)v48, type metadata accessor for MapsDirectionsProvider.DirectionsState.Request);
    }
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_35;
  }
  if (v54)
  {
LABEL_23:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    return a1;
  }
  v55 = type metadata accessor for MapsDirectionsProvider.DirectionsState.Request(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v56 + 48))(v49, 1, v55))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593E0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    v68 = sub_23BB88984();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v48, v49, v68);
    *(_QWORD *)&v48[*(int *)(v55 + 20)] = *(_QWORD *)&v49[*(int *)(v55 + 20)];
    v69 = *(int *)(v55 + 24);
    v70 = &v48[v69];
    v71 = &v49[v69];
    *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
    *(_OWORD *)v70 = *(_OWORD *)v71;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v48, 0, 1, v55);
  }
  v72 = *(int *)(v50 + 20);
  v73 = &v48[v72];
  v74 = &v49[v72];
  v75 = type metadata accessor for MapsDirectionsProvider.DirectionsState.RequestAndResult(0);
  v76 = *(_QWORD *)(v75 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59400);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    v78 = sub_23BB88984();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v73, v74, v78);
    *(_QWORD *)&v73[*(int *)(v55 + 20)] = *(_QWORD *)&v74[*(int *)(v55 + 20)];
    v79 = *(int *)(v55 + 24);
    v80 = &v73[v79];
    v81 = &v74[v79];
    *((_QWORD *)v80 + 2) = *((_QWORD *)v81 + 2);
    *(_OWORD *)v80 = *(_OWORD *)v81;
    v82 = *(int *)(v75 + 20);
    v83 = &v73[v82];
    v84 = &v74[v82];
    *((_QWORD *)v83 + 2) = *((_QWORD *)v84 + 2);
    *(_OWORD *)v83 = *(_OWORD *)v84;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  v48[*(int *)(v50 + 24)] = v49[*(int *)(v50 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  return a1;
}

uint64_t _s14descr250CAE4E1V5StateO6LoadedVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA2729C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceInfo();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s14descr250CAE4E1V5StateO6LoadedVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA272E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DeviceInfo();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23BA27324()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DeviceInfo();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

Swift::String __swiftcall String.fmLocalized(replacements:table:)(Swift::OpaquePointer_optional replacements, FindMyUICore::FindMyLocalizationTable_optional *table)
{
  void *rawValue;
  void *v3;
  void *v4;
  BOOL v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  Swift::String result;

  rawValue = replacements.value._rawValue;
  v3 = *(void **)(*(_QWORD *)&replacements.is_nil + 8);
  v4 = *(void **)(*(_QWORD *)&replacements.is_nil + 16);
  if (v3)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v7 = (void *)sub_23BB8A784();
    if (!v3)
      goto LABEL_8;
  }
  else
  {
    v6 = v4;
    v7 = (void *)sub_23BB8A784();
  }
  v3 = (void *)sub_23BB8A784();
LABEL_8:
  v8 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v3);

  v9 = sub_23BB8A7B4();
  v11 = v10;

  if (rawValue)
  {
    v12 = sub_23BB8A7C0();
    v14 = v13;

    swift_bridgeObjectRelease();
    v15 = v12;
    v16 = v14;
  }
  else
  {

    v15 = v9;
    v16 = v11;
  }
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

uint64_t Text.init(_:localizationTable:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5;
  uint64_t v6;

  v5 = *(id *)(a5 + 16);
  swift_bridgeObjectRetain();
  v6 = sub_23BB89D1C();

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t FindMyLocalizationTable.tableName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *FindMyLocalizationTable.tableBundle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

FindMyUICore::FindMyLocalizationTable __swiftcall FindMyLocalizationTable.init(tableName:tableBundle:)(FindMyUICore::FindMyLocalizationTable tableName, NSBundle_optional tableBundle)
{
  Swift::String *v2;

  *v2 = tableName.tableName;
  v2[1]._countAndFlagsBits = (uint64_t)tableBundle.value.super.isa;
  tableName.tableBundle = tableBundle;
  return tableName;
}

_QWORD *sub_23BA275D8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for FindMyLocalizationTable(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

uint64_t _s14descr250CB21E1V10InputValueO11DestinationVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t _s14descr250CB21E1V10InputValueO11DestinationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr250CB21E1V10InputValueO11DestinationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyLocalizationTable()
{
  return &type metadata for FindMyLocalizationTable;
}

uint64_t CountDownTimerText.init(date:isNarrow:localizerContainer:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;

  v10 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  result = type metadata accessor for CountDownTimerText(0);
  *(_BYTE *)(a5 + *(int *)(result + 20)) = a2;
  v12 = (_QWORD *)(a5 + *(int *)(result + 24));
  *v12 = a3;
  v12[1] = a4;
  return result;
}

uint64_t type metadata accessor for CountDownTimerText(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5D2F8);
}

double CountDownTimerText.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  char v38;

  v3 = type metadata accessor for CountDownTimerText.FormatStyle(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D290);
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = type metadata accessor for CountDownTimerText(0);
  v10 = *(uint64_t (**)(void))(v1 + *(int *)(v9 + 24));
  if (v10)
  {
    v30 = a1;
    swift_retain();
    sub_23BB89464();
    sub_23BA27A88(*(unsigned __int8 *)(v1 + *(int *)(v9 + 20)), (uint64_t)v6);
    sub_23B97D0C8(&qword_256A5D298, type metadata accessor for CountDownTimerText.FormatStyle, (uint64_t)&unk_23BB90094);
    v11 = sub_23BB89D10();
    v13 = v12;
    v15 = v14 & 1;
    v16 = v10();
    v18 = v17;
    v20 = v19;
    v22 = v21 & 1;
    sub_23B9967D0(v11, v13, v15);
    swift_bridgeObjectRelease();
    v31 = v16;
    v32 = v18;
    v33 = v22;
    v34 = v20;
    v35 = 0;
    sub_23B996E5C(v16, v18, v22);
    swift_bridgeObjectRetain();
    sub_23BB89944();
    a1 = v30;
    sub_23B9BD73C((uint64_t)v10);
    sub_23B9967D0(v16, v18, v22);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BB89464();
    sub_23BA27A88(*(unsigned __int8 *)(v1 + *(int *)(v9 + 20)), (uint64_t)v6);
    sub_23B97D0C8(&qword_256A5D298, type metadata accessor for CountDownTimerText.FormatStyle, (uint64_t)&unk_23BB90094);
    v31 = sub_23BB89D10();
    v32 = v24;
    v33 = v23 & 1;
    v34 = v25;
    v35 = 1;
    sub_23BB89944();
  }
  result = *(double *)&v36;
  v27 = v37;
  v28 = v38;
  *(_OWORD *)a1 = v36;
  *(_OWORD *)(a1 + 16) = v27;
  *(_BYTE *)(a1 + 32) = v28;
  return result;
}

uint64_t type metadata accessor for CountDownTimerText.FormatStyle(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5D390);
}

uint64_t sub_23BA27A88@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v28 = a1;
  v37 = a2;
  v2 = sub_23BB8B180();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB8B2D0();
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB8B2B8();
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB8B33C();
  v29 = *(_QWORD *)(v14 - 8);
  v30 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23BB8B348();
  v26 = *(_QWORD *)(v18 - 8);
  v27 = v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D420);
  sub_23BB8B300();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_23BB8FEC0;
  sub_23BB8B2E8();
  sub_23BB8B2F4();
  sub_23B98F57C(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if ((v28 & 1) != 0)
    sub_23BB8B330();
  else
    sub_23BB8B318();
  sub_23BB8B2AC();
  v24 = v33;
  v23 = v34;
  (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v5, *MEMORY[0x24BEE38C0], v34);
  sub_23BB8B2C4();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v23);
  sub_23BB88618();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v30);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v37, v21, v27);
}

uint64_t sub_23BA27D54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA27D64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;

  v18 = a2;
  v20 = sub_23BB8B348();
  v17 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v4);
  v19 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D3F0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CountDownTimerText.FormatStyle(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA28C30();
  sub_23BB8B288();
  if (!v2)
  {
    sub_23B97D0C8(&qword_256A5D400, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0AF0], MEMORY[0x24BDD0B10]);
    sub_23BB8B090();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v19, v20);
    sub_23BA28C74((uint64_t)v14, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23BA27F28()
{
  return 1;
}

uint64_t sub_23BA27F30()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

uint64_t sub_23BA27F70()
{
  return sub_23BB8B24C();
}

uint64_t sub_23BA27F94()
{
  sub_23BB8B240();
  sub_23BB8B24C();
  return sub_23BB8B270();
}

unint64_t sub_23BA27FD0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23BA27FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BA28E80(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23BA28014()
{
  sub_23BA28C30();
  return sub_23BB8B390();
}

uint64_t sub_23BA2803C()
{
  sub_23BA28C30();
  return sub_23BB8B39C();
}

uint64_t sub_23BA28064@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BA2807C(a1, MEMORY[0x24BDD0980], a2);
}

uint64_t sub_23BA28070@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BA2807C(a1, MEMORY[0x24BDD0978], a2);
}

uint64_t sub_23BA2807C@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = a2(*a1, a1[1]);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v6 & 1;
  return result;
}

uint64_t sub_23BA280B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23BA280C8(a1, a2, a3, MEMORY[0x24BDCC9E8], a4);
}

uint64_t sub_23BA280BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23BA280C8(a1, a2, a3, MEMORY[0x24BDCC9E0], a4);
}

uint64_t sub_23BA280C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  uint64_t v7;
  char v8;

  result = a4(*a1, a1[1], a2, a3);
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = v7;
  *(_BYTE *)(a5 + 16) = v8 & 1;
  return result;
}

uint64_t sub_23BA28108@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  BOOL v3;
  uint64_t result;
  uint64_t v5;

  v2 = sub_23BB8B2A0();
  if (v2 < 0 && (v3 = __OFSUB__(0, v2), result = -v2, v3))
  {
    __break(1u);
  }
  else
  {
    result = sub_23BB8B30C();
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_23BA28178@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BA27D64(a1, a2);
}

uint64_t sub_23BA2818C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D408);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA28C30();
  sub_23BB8B294();
  sub_23BB8B348();
  sub_23B97D0C8(&qword_256A5D410, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0AF0], MEMORY[0x24BDD0B00]);
  sub_23BB8B0F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_23BA2829C()
{
  sub_23BB8B240();
  sub_23BB8B348();
  sub_23B97D0C8(&qword_256A5D418, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0AF0], MEMORY[0x24BDD0B08]);
  sub_23BB8A718();
  return sub_23BB8B270();
}

uint64_t sub_23BA28308()
{
  sub_23BB8B348();
  sub_23B97D0C8(&qword_256A5D418, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0AF0], MEMORY[0x24BDD0B08]);
  return sub_23BB8A718();
}

uint64_t sub_23BA28360()
{
  sub_23BB8B240();
  sub_23BB8B348();
  sub_23B97D0C8(&qword_256A5D418, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0AF0], MEMORY[0x24BDD0B08]);
  sub_23BB8A718();
  return sub_23BB8B270();
}

_QWORD *initializeBufferWithCopyOfBuffer for CountDownTimerText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23BB88984();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    if (*v10)
    {
      v11 = v10[1];
      *v9 = *v10;
      v9[1] = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
  }
  return a1;
}

uint64_t destroy for CountDownTimerText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_23BB88984();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for CountDownTimerText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*v9)
  {
    v10 = v9[1];
    *v8 = *v9;
    v8[1] = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t assignWithCopy for CountDownTimerText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7);
  v11 = *(_QWORD *)(a2 + v7);
  if (!v10)
  {
    if (v11)
    {
      v13 = *(_QWORD *)(v9 + 8);
      *v8 = v11;
      v8[1] = v13;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(v9 + 8);
  *v8 = v11;
  v8[1] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for CountDownTimerText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  if (*v9)
  {
    v11 = v9[1];
    *v8 = v10;
    v8[1] = v11;
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t assignWithTake for CountDownTimerText(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  if (!*(_QWORD *)(a1 + v7))
  {
    if (v10)
    {
      v12 = v9[1];
      *v8 = v10;
      v8[1] = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_7;
  }
  v11 = v9[1];
  *v8 = v10;
  v8[1] = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CountDownTimerText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA2874C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_23BB88984();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for CountDownTimerText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA287E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BB88984();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_23BA28858()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB88984();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BA288D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8B348();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23BA28914(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB8B348();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23BA28948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8B348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA2898C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8B348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA289D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8B348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA28A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8B348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA28A58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA28A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8B348();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23BA28AA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA28AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB8B348();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23BA28AEC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB8B348();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BA28B54()
{
  return sub_23B97D0C8(&qword_256A5D3C8, type metadata accessor for CountDownTimerText.FormatStyle, (uint64_t)&unk_23BB8FF84);
}

uint64_t sub_23BA28B80()
{
  return sub_23B97D0C8(&qword_256A5D3D0, type metadata accessor for CountDownTimerText.FormatStyle, (uint64_t)&unk_23BB90014);
}

uint64_t sub_23BA28BAC()
{
  return sub_23B97D0C8(&qword_256A5D3D8, type metadata accessor for CountDownTimerText.FormatStyle, (uint64_t)&unk_23BB8FFEC);
}

uint64_t sub_23BA28BD8()
{
  return sub_23B97D0C8(&qword_256A5D3E0, type metadata accessor for CountDownTimerText.FormatStyle, (uint64_t)&unk_23BB8FFAC);
}

uint64_t sub_23BA28C04()
{
  return sub_23B97D0C8(&qword_256A5D3E8, type metadata accessor for CountDownTimerText.FormatStyle, (uint64_t)&unk_23BB9003C);
}

unint64_t sub_23BA28C30()
{
  unint64_t result;

  result = qword_256A5D3F8;
  if (!qword_256A5D3F8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB901A0, &type metadata for CountDownTimerText.FormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5D3F8);
  }
  return result;
}

uint64_t sub_23BA28C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CountDownTimerText.FormatStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s14descr250CB5389O12SubscriptionOwet(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for CountDownTimerText.FormatStyle.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BA28D4C + 4 * byte_23BB8FED0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BA28D6C + 4 * byte_23BB8FED5[v4]))();
}

_BYTE *sub_23BA28D4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BA28D6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA28D74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA28D7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA28D84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA28D8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CountDownTimerText.FormatStyle.CodingKeys()
{
  return &type metadata for CountDownTimerText.FormatStyle.CodingKeys;
}

unint64_t sub_23BA28DAC()
{
  unint64_t result;

  result = qword_256A5D428;
  if (!qword_256A5D428)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90178, &type metadata for CountDownTimerText.FormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5D428);
  }
  return result;
}

unint64_t sub_23BA28DF4()
{
  unint64_t result;

  result = qword_256A5D430;
  if (!qword_256A5D430)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB900E8, &type metadata for CountDownTimerText.FormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5D430);
  }
  return result;
}

unint64_t sub_23BA28E3C()
{
  unint64_t result;

  result = qword_256A5D438;
  if (!qword_256A5D438)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90110, &type metadata for CountDownTimerText.FormatStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5D438);
  }
  return result;
}

uint64_t sub_23BA28E80(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x800000023BB9A4E0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23BA28F04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_23BB892F0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23BA29018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_23BB892F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_23BA290A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(a3 + 24);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_23BB892F0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23BA29180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_23B989D60(a1 + v6, &qword_256A5D440);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_23BB892F0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23BA292A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_23BB892F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23BA2935C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_23B989D60(a1 + v6, &qword_256A5D440);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_23BB892F0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23BA2946C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA29478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5D448);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23BA294F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA29504(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5D448);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CustomMapStyleToggle()
{
  uint64_t result;

  result = qword_256A5D4A8;
  if (!qword_256A5D4A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23BA295B8()
{
  unint64_t v0;

  sub_23BA29634();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23BA29634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A5D4B8[0])
  {
    sub_23BB892F0();
    v0 = sub_23BB892FC();
    if (!v1)
      atomic_store(v0, qword_256A5D4B8);
  }
}

uint64_t sub_23BA29688()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23BA29698@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5A428, &qword_256A5A430).n128_u64[0];
  return result;
}

uint64_t sub_23BA296F0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23BB8ABE0();
    v23 = (void *)sub_23BB89B6C();
    sub_23BB891A0();

  }
  sub_23BB8953C();
  v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  a9[4] = v13[4];
  *(_OWORD *)((char *)a9 + 74) = *(_OWORD *)((char *)v13 + 74);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[10] = v31;
  a9[11] = v32;
  a9[12] = v33;
  a9[6] = v27;
  a9[7] = v28;
  a9[8] = v29;
  a9[9] = v30;
  return sub_23BA2C0CC((uint64_t)v13);
}

uint64_t sub_23BA298A4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23BB8ABE0();
    v25 = (void *)sub_23BB89B6C();
    sub_23BB891A0();

  }
  sub_23BB8953C();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(_QWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;
  return swift_retain();
}

double sub_23BA29A4C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D600, &qword_256A5D608).n128_u64[0];
  return result;
}

__n128 sub_23BA29AA4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23BB8ABE0();
    v28 = (void *)sub_23BB89B6C();
    sub_23BB891A0();

    v19 = a17;
  }
  sub_23BB8953C();
  sub_23B989EFC(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_23BA29C70@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23BB8ABE0();
    v23 = (void *)sub_23BB89B6C();
    sub_23BB891A0();

  }
  sub_23BB8953C();
  v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  a9[4] = v13[4];
  *(_OWORD *)((char *)a9 + 73) = *(_OWORD *)((char *)v13 + 73);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[10] = v31;
  a9[11] = v32;
  a9[12] = v33;
  a9[6] = v27;
  a9[7] = v28;
  a9[8] = v29;
  a9[9] = v30;
  return sub_23BA2C3B4((uint64_t)v13);
}

double sub_23BA29E24@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA2A0EC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D610, &qword_256A5D618).n128_u64[0];
  return result;
}

uint64_t sub_23BA29E7C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23BB8ABE0();
    v23 = (void *)sub_23BB89B6C();
    sub_23BB891A0();

  }
  sub_23BB8953C();
  v24 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v24;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 152) = v31;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 88) = v27;
  *(_OWORD *)(a9 + 104) = v28;
  *(_BYTE *)(a9 + 80) = *(_BYTE *)(v13 + 80);
  *(_OWORD *)(a9 + 120) = v29;
  return sub_23BA2C378(v13);
}

double sub_23BA2A03C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D650, &qword_256A5D658).n128_u64[0];
  return result;
}

double sub_23BA2A094@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA2A0EC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D660, &qword_256A5D668).n128_u64[0];
  return result;
}

__n128 sub_23BA2A0EC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  uint64_t v29;
  _OWORD *v30;
  __n128 result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v19 = a16;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23BB8ABE0();
    v28 = (void *)sub_23BB89B6C();
    sub_23BB891A0();

    v19 = a16;
  }
  sub_23BB8953C();
  v29 = __swift_instantiateConcreteTypeFromMangledName(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a9, v17, v29);
  v30 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *v30 = v32;
  v30[1] = v33;
  result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_23BA2A2C8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D680, &qword_256A5D688).n128_u64[0];
  return result;
}

double sub_23BA2A320@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D670, &qword_256A5D678).n128_u64[0];
  return result;
}

double sub_23BA2A378@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D630, &qword_256A5D620).n128_u64[0];
  return result;
}

double sub_23BA2A3D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D620, &qword_256A5D628).n128_u64[0];
  return result;
}

double sub_23BA2A428@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D648, &qword_256A5D638).n128_u64[0];
  return result;
}

double sub_23BA2A480@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_23BA29AA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256A5D638, &qword_256A5D640).n128_u64[0];
  return result;
}

uint64_t sub_23BA2A4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t (*v70)(char *, uint64_t);
  int v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  __int128 v84;
  uint64_t v85;
  uint64_t KeyPath;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  ValueMetadata *v98;
  char v99;
  char v100;
  char v101;
  uint64_t v102;
  uint64_t OpaqueTypeConformance2;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  ValueMetadata *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  ValueMetadata *v152;
  uint64_t v153;
  unint64_t v154;
  _QWORD v155[2];
  __int128 v156;
  __int128 v157;
  __int128 v158;

  v147 = a1;
  v123 = type metadata accessor for CustomMapStyleToggle();
  v144 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123, v2);
  v145 = v3;
  v146 = (uint64_t)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_23BB894A0();
  v136 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138, v4);
  v134 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_23BB892F0();
  v121 = *(_QWORD *)(v122 - 8);
  v7 = MEMORY[0x24BDAC7A8](v122, v6);
  v148 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v150 = (uint64_t)&v118 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v120 = (char *)&v118 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v149 = (uint64_t)&v118 - v16;
  v126 = (char *)sub_23BB89524();
  MEMORY[0x24BDAC7A8](v126, v17);
  v19 = (_OWORD *)((char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_23BB8A2B0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D4F0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v118 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D4F8);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D500);
  MEMORY[0x24BDAC7A8](v119, v33);
  v35 = (char *)&v118 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D508);
  MEMORY[0x24BDAC7A8](v124, v36);
  v127 = (uint64_t)&v118 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D510);
  MEMORY[0x24BDAC7A8](v125, v38);
  v128 = (uint64_t)&v118 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D518);
  MEMORY[0x24BDAC7A8](v130, v40);
  v129 = (uint64_t)&v118 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D520);
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133, v42);
  v131 = (char *)&v118 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D528);
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142, v44);
  v140 = (char *)&v118 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D530);
  v137 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139, v46);
  v135 = (char *)&v118 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA2B08C(v1, (uint64_t)v28);
  sub_23BB8A298();
  v48 = sub_23BB89BA8();
  v49 = &v32[*(int *)(v29 + 36)];
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v49, v24, v20);
  v49[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A310) + 36)] = v48;
  sub_23B989EFC((uint64_t)v28, (uint64_t)v32, &qword_256A5D4F0);
  v50 = *(void (**)(char *, uint64_t))(v21 + 8);
  v143 = (ValueMetadata *)v20;
  v51 = v20;
  v52 = v1;
  v50(v24, v51);
  sub_23B989D60((uint64_t)v28, &qword_256A5D4F0);
  v53 = (char *)v19 + *((int *)v126 + 5);
  v54 = *MEMORY[0x24BDEEB68];
  v55 = sub_23BB89800();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 104))(v53, v54, v55);
  __asm { FMOV            V0.2D, #8.0 }
  *v19 = _Q0;
  v61 = (uint64_t)&v35[*(int *)(v119 + 36)];
  v62 = MEMORY[0x24BDED998];
  sub_23B989CE8((uint64_t)v19, v61, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v61 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5D538) + 36)) = 256;
  v63 = v121;
  v126 = v35;
  v64 = (uint64_t)v35;
  v65 = v122;
  sub_23B989EFC((uint64_t)v32, v64, &qword_256A5D4F8);
  sub_23B989D9C((uint64_t)v19, (uint64_t (*)(_QWORD))v62);
  v66 = (uint64_t)v32;
  v67 = v120;
  sub_23B989D60(v66, &qword_256A5D4F8);
  v68 = v149;
  sub_23BA83B30(v149);
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
  v69(v67, v68, v65);
  v70 = *(uint64_t (**)(char *, uint64_t))(v63 + 88);
  v71 = v70(v67, v65);
  v72 = *MEMORY[0x24BDEB480];
  v73 = *MEMORY[0x24BDEB490];
  v74 = *MEMORY[0x24BDEB498];
  v75 = 0x4046000000000000;
  if (v71 != *MEMORY[0x24BDEB480] && v71 != v73 && v71 != v74)
  {
    v75 = 0x404E000000000000;
    if (v71 != *MEMORY[0x24BDEB488] && v71 != *MEMORY[0x24BDEB470])
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v67, v65);
      v75 = 0x4046000000000000;
    }
  }
  v123 = v75;
  v76 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v76(v149, v65);
  v77 = v65;
  v78 = v150;
  sub_23BA83B30(v150);
  v79 = v148;
  v69(v148, v78, v77);
  v80 = v70(v79, v77);
  if (v80 != v72 && v80 != v73 && v80 != v74 && v80 != *MEMORY[0x24BDEB488] && v80 != *MEMORY[0x24BDEB470])
    v76((uint64_t)v148, v77);
  v76(v150, v77);
  sub_23BB8A2F8();
  sub_23BB8938C();
  v81 = (uint64_t)v126;
  v82 = v127;
  sub_23B989EFC((uint64_t)v126, v127, &qword_256A5D500);
  v83 = (_OWORD *)(v82 + *(int *)(v124 + 36));
  v84 = v157;
  *v83 = v156;
  v83[1] = v84;
  v83[2] = v158;
  sub_23B989D60(v81, &qword_256A5D500);
  v85 = sub_23BB89F74();
  KeyPath = swift_getKeyPath();
  v87 = v128;
  sub_23B989EFC(v82, v128, &qword_256A5D508);
  v88 = (uint64_t *)(v87 + *(int *)(v125 + 36));
  *v88 = KeyPath;
  v88[1] = v85;
  sub_23B989D60(v82, &qword_256A5D508);
  sub_23BB89FBC();
  v89 = sub_23BB8A004();
  swift_release();
  v90 = v129;
  sub_23B989EFC(v87, v129, &qword_256A5D510);
  v91 = v130;
  v92 = v90 + *(int *)(v130 + 36);
  *(_QWORD *)v92 = v89;
  *(_OWORD *)(v92 + 8) = xmmword_23BB90200;
  *(_QWORD *)(v92 + 24) = 0x4000000000000000;
  sub_23B989D60(v87, &qword_256A5D510);
  v93 = v136;
  v94 = v134;
  v95 = v138;
  (*(void (**)(char *, _QWORD, uint64_t))(v136 + 104))(v134, *MEMORY[0x24BDECF00], v138);
  v96 = sub_23B9B9770(&qword_256A5D540, &qword_256A5D518, (uint64_t (*)(void))sub_23BA2BB58, MEMORY[0x24BDEC468]);
  v97 = v131;
  sub_23BB89DE8();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
  sub_23B989D60(v90, &qword_256A5D518);
  v98 = *(ValueMetadata **)(v52 + 8);
  v99 = *(_BYTE *)(v52 + 16);
  v100 = *(_BYTE *)(v52 + 17);
  v101 = *(_BYTE *)(v52 + 18);
  v151 = *(_QWORD *)v52;
  v152 = v98;
  LOBYTE(v153) = v99;
  BYTE1(v153) = v100;
  BYTE2(v153) = v101;
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](v155, v102);
  v151 = v91;
  v152 = (ValueMetadata *)v96;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v104 = sub_23BA2BE50();
  v105 = v140;
  v106 = v133;
  sub_23BB89F14();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v97, v106);
  v107 = *(_QWORD *)(v52 + 32);
  LOBYTE(v155[0]) = *(_BYTE *)(v52 + 24);
  v155[1] = v107;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0E8();
  v108 = v146;
  sub_23B989CE8(v52, v146, (uint64_t (*)(_QWORD))type metadata accessor for CustomMapStyleToggle);
  v109 = (*(unsigned __int8 *)(v144 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
  v110 = swift_allocObject();
  sub_23BA2BF54(v108, v110 + v109);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5B8);
  v151 = v106;
  v152 = &type metadata for CustomMapStyle;
  v153 = OpaqueTypeConformance2;
  v154 = v104;
  swift_getOpaqueTypeConformance2();
  v111 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D5C0);
  v112 = type metadata accessor for CustomMapStyleSelector(255);
  v113 = sub_23B97D0C8(&qword_256A5D5C8, type metadata accessor for CustomMapStyleSelector, (uint64_t)&unk_23BB95DE8);
  v151 = v112;
  v152 = v143;
  v153 = v113;
  v154 = MEMORY[0x24BDF4E40];
  v114 = swift_getOpaqueTypeConformance2();
  v151 = v111;
  v152 = (ValueMetadata *)v114;
  swift_getOpaqueTypeConformance2();
  v115 = v135;
  v116 = v142;
  sub_23BB89F2C();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v105, v116);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v137 + 32))(v147, v115, v139);
}

uint64_t sub_23BA2B08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v34 = a2;
  v3 = sub_23BB8950C();
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BB89590();
  v29 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D578);
  v28 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D570);
  v17 = *(_QWORD *)(v16 - 8);
  v30 = v16;
  v31 = v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 32);
  v40 = *(_BYTE *)(a1 + 24);
  v41 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0E8();
  v35 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5F0);
  sub_23BA2C068();
  sub_23BB8A13C();
  sub_23BB89584();
  v22 = sub_23B996E1C(&qword_256A5D580, &qword_256A5D578, MEMORY[0x24BDF46D0]);
  v23 = sub_23B97D0C8(&qword_256A5D588, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDCD0], MEMORY[0x24BDEDCC0]);
  sub_23BB89DA0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v12);
  sub_23BB89500();
  v36 = v12;
  v37 = v8;
  v38 = v22;
  v39 = v23;
  swift_getOpaqueTypeConformance2();
  sub_23B97D0C8(&qword_256A5D590, (uint64_t (*)(uint64_t))MEMORY[0x24BDED868], MEMORY[0x24BDED858]);
  v24 = v30;
  v25 = v32;
  sub_23BB89D94();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v20, v24);
}

__n128 sub_23BA2B358@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  __n128 result;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  __n128 v40;

  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = *((_BYTE *)a1 + 17);
  v6 = *((_BYTE *)a1 + 18);
  v25 = *a1;
  v26 = v3;
  v27 = v4;
  v28 = v5;
  v29 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  MEMORY[0x24260C0DC](&v24, v7);
  v8 = sub_23BB8A064();
  v9 = sub_23BB8A2F8();
  sub_23BA298A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v25, 0.0, 1, INFINITY, 0, v9, v10, v8);
  swift_release();
  v11 = v26;
  v12 = v27;
  v13 = v30;
  v14 = v31;
  v15 = v32;
  v16 = v33;
  v17 = v34;
  v18 = v35;
  v19 = v36;
  v20 = v37;
  v21 = v38;
  v22 = v39;
  result = v40;
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v13;
  *(_BYTE *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v15;
  *(_BYTE *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v17;
  *(_BYTE *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v19;
  *(_BYTE *)(a2 + 80) = v20;
  *(_QWORD *)(a2 + 88) = v21;
  *(_BYTE *)(a2 + 96) = v22;
  *(__n128 *)(a2 + 104) = result;
  return result;
}

void sub_23BA2B4B4(uint64_t a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  id v5;
  int v6;
  int v7;
  id v8;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v8 = v5;
  if (v4)
    v6 = 0x10000;
  else
    v6 = 0;
  if (v3)
    v7 = 256;
  else
    v7 = 0;
  sub_23BB6C6C8(v5, v7 | v2 | v6);

}

uint64_t sub_23BA2B534@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;

  v50 = a2;
  v44 = sub_23BB8A2B0();
  v47 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44, v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB89C98();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CustomMapStyleSelector.MapAttribution(0);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v44 - v16;
  v18 = (int *)type metadata accessor for CustomMapStyleSelector(0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5C0);
  v23 = *(_QWORD *)(v22 - 8);
  v48 = v22;
  v49 = v23;
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a1[1];
  v28 = *((_BYTE *)a1 + 16);
  v29 = *((_BYTE *)a1 + 17);
  v30 = *((_BYTE *)a1 + 18);
  v55 = *a1;
  v56 = v27;
  v57 = v28;
  v58 = v29;
  v59 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5A8);
  sub_23BB8A1A8();
  v31 = v52;
  v32 = v53;
  v33 = BYTE1(v53);
  v34 = BYTE2(v53);
  *(_QWORD *)v21 = v51;
  *((_QWORD *)v21 + 1) = v31;
  v21[16] = v32;
  v21[17] = v33;
  v21[18] = v34;
  sub_23BB184B8((uint64_t)v17);
  sub_23B989CE8((uint64_t)v17, (uint64_t)v14, type metadata accessor for CustomMapStyleSelector.MapAttribution);
  sub_23BB8A0C4();
  sub_23B989D9C((uint64_t)v17, type metadata accessor for CustomMapStyleSelector.MapAttribution);
  v35 = &v21[v18[6]];
  *(_OWORD *)v35 = xmmword_23BB90210;
  *((_OWORD *)v35 + 1) = xmmword_23BB90220;
  *((_OWORD *)v35 + 2) = xmmword_23BB90230;
  *((_QWORD *)v35 + 6) = 0x407A400000000000;
  v36 = (uint64_t *)&v21[v18[7]];
  *v36 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1A0);
  swift_storeEnumTagMultiPayload();
  v37 = (uint64_t *)&v21[v18[8]];
  *v37 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5D0);
  swift_storeEnumTagMultiPayload();
  v51 = 0x4020000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v9, *MEMORY[0x24BDF18E8], v46);
  sub_23BA2C01C();
  sub_23BB89344();
  sub_23BB8A2A4();
  v38 = sub_23B97D0C8(&qword_256A5D5C8, type metadata accessor for CustomMapStyleSelector, (uint64_t)&unk_23BB95DE8);
  v39 = MEMORY[0x24BDF4E40];
  v40 = v44;
  sub_23BB89E54();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v40);
  sub_23B989D9C((uint64_t)v21, type metadata accessor for CustomMapStyleSelector);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5E0);
  sub_23BB897F4();
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_23BB8C510;
  sub_23BB897E8();
  sub_23B98FE88(v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v51 = (uint64_t)v18;
  v52 = v40;
  v53 = v38;
  v54 = v39;
  swift_getOpaqueTypeConformance2();
  v42 = v48;
  sub_23BB89E3C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v26, v42);
}

uint64_t sub_23BA2B99C()
{
  return sub_23BB895F0();
}

uint64_t sub_23BA2B9BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_23BB894A0();
  MEMORY[0x24BDAC7A8](v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23BB895FC();
}

uint64_t sub_23BA2BA38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D5E8);
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23B989EFC(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5D5E8);
  return sub_23BB89674();
}

uint64_t sub_23BA2BAB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB89608();
  *a1 = result;
  return result;
}

uint64_t sub_23BA2BAE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB89608();
  *a1 = result;
  return result;
}

uint64_t sub_23BA2BB08()
{
  swift_retain();
  return sub_23BB89614();
}

uint64_t sub_23BA2BB30()
{
  swift_retain();
  return sub_23BB89614();
}

unint64_t sub_23BA2BB58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5D548;
  if (!qword_256A5D548)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D510);
    v2[0] = sub_23B9B9770(&qword_256A5D550, &qword_256A5D508, (uint64_t (*)(void))sub_23BA2BBFC, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_23B996E1C(&qword_256A5A5C0, &qword_256A5A5C8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5D548);
  }
  return result;
}

unint64_t sub_23BA2BBFC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5D558;
  if (!qword_256A5D558)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D500);
    v2[0] = sub_23BA2BC80();
    v2[1] = sub_23B996E1C(&qword_256A5D5A0, &qword_256A5D538, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5D558);
  }
  return result;
}

unint64_t sub_23BA2BC80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5D560;
  if (!qword_256A5D560)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D4F8);
    v2[0] = sub_23BA2BD04();
    v2[1] = sub_23B996E1C(&qword_256A5D598, &qword_256A5A310, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5D560);
  }
  return result;
}

unint64_t sub_23BA2BD04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  _QWORD v6[5];

  result = qword_256A5D568;
  if (!qword_256A5D568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D4F0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D570);
    v3 = sub_23BB8950C();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D578);
    sub_23BB89590();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEDCD0];
    sub_23B996E1C(&qword_256A5D580, &qword_256A5D578, MEMORY[0x24BDF46D0]);
    sub_23B97D0C8(&qword_256A5D588, v5, MEMORY[0x24BDEDCC0]);
    v6[1] = v2;
    v6[2] = v3;
    v6[3] = swift_getOpaqueTypeConformance2();
    v6[4] = sub_23B97D0C8(&qword_256A5D590, v4, MEMORY[0x24BDED858]);
    v6[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF3F50], v1, v6);
    atomic_store(result, (unint64_t *)&qword_256A5D568);
  }
  return result;
}

unint64_t sub_23BA2BE50()
{
  unint64_t result;

  result = qword_256A5D5B0;
  if (!qword_256A5D5B0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB98664, &type metadata for CustomMapStyle);
    atomic_store(result, (unint64_t *)&qword_256A5D5B0);
  }
  return result;
}

uint64_t sub_23BA2BE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for CustomMapStyleToggle();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D440);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23BB892F0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_23BA2BF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomMapStyleToggle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA2BF98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CustomMapStyleToggle() - 8) + 80);
  return sub_23BA2B534((uint64_t *)(v1 + ((v3 + 16) & ~v3)), a1);
}

uint64_t sub_23BA2BFD4()
{
  return sub_23BB895F0();
}

uint64_t sub_23BA2BFF8()
{
  return sub_23BB89668();
}

unint64_t sub_23BA2C01C()
{
  unint64_t result;

  result = qword_256A5D5D8;
  if (!qword_256A5D5D8)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE13D0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_256A5D5D8);
  }
  return result;
}

double sub_23BA2C060@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_23BA2B358((uint64_t *)*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_23BA2C068()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5D5F8;
  if (!qword_256A5D5F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D5F0);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5D5F8);
  }
  return result;
}

uint64_t sub_23BA2C0CC(uint64_t a1)
{
  sub_23BA2C12C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_BYTE *)(a1 + 89));
  return a1;
}

id sub_23BA2C12C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12, char a13)
{
  if ((a13 & 1) != 0)
    return (id)sub_23BA2C158((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  else
    return sub_23B9C64C0(a1, a2, a3, BYTE2(a3) & 1);
}

uint64_t sub_23BA2C158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  id v13;
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v13 = a5;
    swift_retain();
    swift_retain();
    sub_23BA2C1E8(a9, a10 & 1);
    return sub_23BA2C1E8(a11, a12 & 1);
  }
  return result;
}

uint64_t sub_23BA2C1E8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_23BA2C1F4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D528);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D5B8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D520);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D518);
  sub_23B9B9770(&qword_256A5D540, &qword_256A5D518, (uint64_t (*)(void))sub_23BA2BB58, MEMORY[0x24BDEC468]);
  swift_getOpaqueTypeConformance2();
  sub_23BA2BE50();
  swift_getOpaqueTypeConformance2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5D5C0);
  type metadata accessor for CustomMapStyleSelector(255);
  sub_23BB8A2B0();
  sub_23B97D0C8(&qword_256A5D5C8, type metadata accessor for CustomMapStyleSelector, (uint64_t)&unk_23BB95DE8);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA2C378(uint64_t a1)
{
  sub_23B996364(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  return a1;
}

uint64_t sub_23BA2C3B4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23BA2C3FC()
{
  uint64_t v0;

  v0 = sub_23BB891C4();
  __swift_allocate_value_buffer(v0, qword_256A5D690);
  __swift_project_value_buffer(v0, (uint64_t)qword_256A5D690);
  return sub_23BB891B8();
}

void sub_23BA2C47C(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D3>, double a4@<D4>, double a5@<D5>)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  CLLocationCoordinate2D v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  double v35;
  double v36;
  double v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  MKMapPoint v54;
  unint64_t v55;
  unint64_t v56;
  int64_t v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  float64x2_t v73;
  float64x2_t *v74;
  uint64_t v75;
  unint64_t v76;
  float64x2_t *v77;
  float64x2_t v78;
  double v79;
  double x;
  double v81;
  double y;
  double v83;
  double width;
  double v85;
  double height;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  double v100;
  double v101;
  double v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  int64_t v110;
  CLLocationCoordinate2D v111;
  uint64_t v112;
  unint64_t v113;
  double v114;
  double v115;
  double v116;
  double v117;
  uint64_t v118[2];
  MKMapRect v119;
  MKMapRect v120;
  MKMapRect v121;

  if (qword_256A58CC8 != -1)
    swift_once();
  v10 = sub_23BB891C4();
  __swift_project_value_buffer(v10, (uint64_t)qword_256A5D690);
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v118[0] = v14;
    *(_DWORD *)v13 = 136315394;
    type metadata accessor for CGSize(0);
    v15 = sub_23BB8A7D8();
    sub_23BB7B69C(v15, v16, v118);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v115 = a3;
    v116 = a4;
    v117 = a5;
    v17 = sub_23BB8A7D8();
    v114 = COERCE_DOUBLE(sub_23BB7B69C(v17, v18, v118));
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "MKMapRect: CustomInit\n- viewSize: %s\n- edgeInsets: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);
  }

  v19 = *(_QWORD *)(a1 + 16);
  v20 = MEMORY[0x24BEE4AF8];
  if (v19)
  {
    swift_bridgeObjectRetain();
    v21 = 0;
    *(double *)&v22 = MEMORY[0x24BEE4AF8];
    do
    {
      v25 = a1 + 16 * v21;
      v26 = *(CLLocationCoordinate2D *)(v25 + 32);
      v27 = *(_QWORD *)(v25 + 40);
      v111 = v26;
      if (CLLocationCoordinate2DIsValid(v26))
      {
        v114 = *(double *)&v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23BB00658(0, *(_QWORD *)(v22 + 16) + 1, 1);
          *(double *)&v22 = v114;
        }
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_23BB00658(v23 > 1, v24 + 1, 1);
          *(double *)&v22 = v114;
        }
        *(_QWORD *)(v22 + 16) = v24 + 1;
        *(CLLocationCoordinate2D *)(v22 + 16 * v24 + 32) = v111;
      }
      ++v21;
    }
    while (v19 != v21);
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(a1 + 16);
  }
  else
  {
    v28 = 0;
    *(double *)&v22 = MEMORY[0x24BEE4AF8];
  }
  v29 = *(_QWORD *)(v22 + 16);
  if (v28 == v29)
  {
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v22 + 16);
    if (!v30)
      goto LABEL_18;
  }
  else
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    v38 = sub_23BB891AC();
    v39 = sub_23BB8ABEC();
    if (os_log_type_enabled(v38, v39))
    {
      v110 = v29;
      v40 = swift_slowAlloc();
      *(double *)&v109 = COERCE_DOUBLE(swift_slowAlloc());
      v114 = *(double *)&v109;
      *(_DWORD *)v40 = 136380931;
      type metadata accessor for CLLocationCoordinate2D(0);
      v42 = v41;
      v43 = swift_bridgeObjectRetain();
      v112 = a2;
      v44 = MEMORY[0x24260C844](v43, v42);
      v46 = v45;
      swift_bridgeObjectRelease();
      v118[0] = sub_23BB7B69C(v44, v46, (uint64_t *)&v114);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2081;
      v47 = swift_bridgeObjectRetain();
      v48 = MEMORY[0x24260C844](v47, v42);
      v50 = v49;
      swift_release();
      v118[0] = sub_23BB7B69C(v48, v50, (uint64_t *)&v114);
      a2 = v112;
      sub_23BB8ACB8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v38, v39, "MKMapRect: CustomInit - Invalid Coordinates\nAll: %{private}s\nValid: %{private}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v109, -1, -1);
      v51 = v40;
      v29 = v110;
      MEMORY[0x24260D9B4](v51, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    v30 = *(_QWORD *)(v22 + 16);
    if (!v30)
    {
LABEL_18:
      swift_release();
      v31 = sub_23BB891AC();
      v32 = sub_23BB8ABEC();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_23B979000, v31, v32, "MKMapRect: CustomInit - No valid coordinates", v33, 2u);
        MEMORY[0x24260D9B4](v33, -1, -1);
      }

      *(double *)&v34 = 0.0;
      v35 = 0.0;
      v36 = 0.0;
      v37 = 0.0;
      goto LABEL_56;
    }
  }
  v113 = v30;
  if (v29)
  {
    v114 = v20;
    sub_23BB00634(0, v29, 0);
    v20 = v114;
    v52 = v22 + 40;
    v53 = v29;
    do
    {
      v54 = MKMapPointForCoordinate(*(CLLocationCoordinate2D *)(v52 - 8));
      v114 = v20;
      v56 = *(_QWORD *)(*(_QWORD *)&v20 + 16);
      v55 = *(_QWORD *)(*(_QWORD *)&v20 + 24);
      v57 = v56 + 1;
      if (v56 >= v55 >> 1)
      {
        sub_23BB00634(v55 > 1, v56 + 1, 1);
        v20 = v114;
      }
      *(_QWORD *)(*(_QWORD *)&v20 + 16) = v57;
      *(MKMapPoint *)(*(_QWORD *)&v20 + 16 * v56 + 32) = v54;
      v52 += 16;
      --v53;
    }
    while (v53);
  }
  else
  {
    v57 = *(_QWORD *)(*(_QWORD *)&v20 + 16);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_23BB6437C(0, v57, 0, *(_QWORD **)&v20);
  MKMapRectBoundingMapPoints();
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  v66 = sub_23BB891AC();
  v67 = sub_23BB8ABC8();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc();
    v69 = swift_slowAlloc();
    *(_DWORD *)v68 = 136315138;
    v118[0] = v69;
    v114 = v59;
    v115 = v61;
    v116 = v63;
    v117 = v65;
    type metadata accessor for MKMapRect(0);
    v70 = sub_23BB8A7D8();
    v114 = COERCE_DOUBLE(sub_23BB7B69C(v70, v71, v118));
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v66, v67, "MKMapRect: CustomInit - coordinatesBoundingMapRect: %s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v69, -1, -1);
    MEMORY[0x24260D9B4](v68, -1, -1);
  }

  if (v113 >= 2)
  {
    v72 = v113 & 0x7FFFFFFFFFFFFFFELL;
    v74 = (float64x2_t *)(v22 + 48);
    v73 = 0uLL;
    v75 = v113 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v73 = vaddq_f64(vaddq_f64(v73, v74[-1]), *v74);
      v74 += 2;
      v75 -= 2;
    }
    while (v75);
    if (v113 == v72)
      goto LABEL_43;
  }
  else
  {
    v72 = 0;
    v73 = 0uLL;
  }
  v76 = v113 - v72;
  v77 = (float64x2_t *)(v22 + 16 * v72 + 32);
  do
  {
    v78 = *v77++;
    v73 = vaddq_f64(v73, v78);
    --v76;
  }
  while (v76);
LABEL_43:
  swift_release();
  MKMapRectMakeWithRadialDistance();
  x = v79;
  y = v81;
  width = v83;
  height = v85;
  v87 = sub_23BB891AC();
  v88 = sub_23BB8ABC8();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = (uint8_t *)swift_slowAlloc();
    v90 = swift_slowAlloc();
    *(_DWORD *)v89 = 136315138;
    v118[0] = v90;
    v114 = x;
    v115 = y;
    v116 = width;
    v117 = height;
    type metadata accessor for MKMapRect(0);
    v91 = sub_23BB8A7D8();
    v114 = COERCE_DOUBLE(sub_23BB7B69C(v91, v92, v118));
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v87, v88, "MKMapRect: CustomInit - minRadialDistanceMapRect: %s", v89, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v90, -1, -1);
    MEMORY[0x24260D9B4](v89, -1, -1);
  }

  if (v59 == *MEMORY[0x24BDDAFE0] && v61 == *(double *)(MEMORY[0x24BDDAFE0] + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (v63 != 0.0 && v65 != 0.0)
    {
      v119.origin.x = v59;
      v119.origin.y = v61;
      v119.size.width = v63;
      v119.size.height = v65;
      v121.origin.x = x;
      v121.origin.y = y;
      v121.size.width = width;
      v121.size.height = height;
      v120 = MKMapRectUnion(v119, v121);
      x = v120.origin.x;
      y = v120.origin.y;
      width = v120.size.width;
      height = v120.size.height;
    }
  }
  v93 = sub_23BB891AC();
  v94 = sub_23BB8ABC8();
  if (os_log_type_enabled(v93, v94))
  {
    v95 = (uint8_t *)swift_slowAlloc();
    v96 = swift_slowAlloc();
    *(_DWORD *)v95 = 136315138;
    v118[0] = v96;
    v114 = x;
    v115 = y;
    v116 = width;
    v117 = height;
    type metadata accessor for MKMapRect(0);
    v97 = sub_23BB8A7D8();
    v114 = COERCE_DOUBLE(sub_23BB7B69C(v97, v98, v118));
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v93, v94, "MKMapRect: CustomInit - adjustedMapRect: %s", v95, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v96, -1, -1);
    MEMORY[0x24260D9B4](v95, -1, -1);
  }

  _MKMapRectThatFits();
  v34 = v99;
  v35 = v100;
  v36 = v101;
  v37 = v102;
  v103 = sub_23BB891AC();
  v104 = sub_23BB8ABC8();
  if (os_log_type_enabled(v103, v104))
  {
    v105 = (uint8_t *)swift_slowAlloc();
    v106 = swift_slowAlloc();
    *(_DWORD *)v105 = 136315138;
    v118[0] = v106;
    v114 = *(double *)&v34;
    v115 = v35;
    v116 = v36;
    v117 = v37;
    type metadata accessor for MKMapRect(0);
    v107 = sub_23BB8A7D8();
    v114 = COERCE_DOUBLE(sub_23BB7B69C(v107, v108, v118));
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v103, v104, "MKMapRect: CustomInit - insetMapRect: %s", v105, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v106, -1, -1);
    MEMORY[0x24260D9B4](v105, -1, -1);
  }

  v30 = v113;
LABEL_56:
  *(double *)a2 = *(double *)&v34;
  *(double *)(a2 + 8) = v35;
  *(double *)(a2 + 16) = v36;
  *(double *)(a2 + 24) = v37;
  *(_BYTE *)(a2 + 32) = v30 == 0;
}

uint64_t sub_23BA2D080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB889CC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23BA2D0BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB889CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23BA2D0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA2D134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA2D178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA2D1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB889CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23BA2D200()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA2D20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB889CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23BA2D248()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA2D254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23BB889CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RepositorySubscriber()
{
  uint64_t result;

  result = qword_256A5D700;
  if (!qword_256A5D700)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA2D2D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB889CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BA2D338()
{
  sub_23BB8B240();
  sub_23BB889CC();
  sub_23B97D0C8(&qword_256A592F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BB8A718();
  return sub_23BB8B270();
}

uint64_t sub_23BA2D3A4()
{
  sub_23BB889CC();
  sub_23B97D0C8(&qword_256A592F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23BB8A718();
}

uint64_t sub_23BA2D3FC()
{
  sub_23BB8B240();
  sub_23BB889CC();
  sub_23B97D0C8(&qword_256A592F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23BB8A718();
  return sub_23BB8B270();
}

uint64_t sub_23BA2D46C()
{
  return sub_23B97D0C8(&qword_256A5D738, (uint64_t (*)(uint64_t))type metadata accessor for RepositorySubscriber, (uint64_t)&unk_23BB903E8);
}

uint64_t MessagesAppView.init(viewModel:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

__n128 MessagesAppView.body.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v3 = *v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D740);
  sub_23BB8A0C4();
  result = v5;
  *(_QWORD *)a1 = sub_23BA2D50C;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_23BA2D50C()
{
  return swift_retain();
}

__n128 sub_23BA2D514@<Q0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v3 = *v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D740);
  sub_23BB8A0C4();
  result = v5;
  *(_QWORD *)a1 = sub_23BA2EA14;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_23BA2D580()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x24260DA50](v0 + 24);
}

void sub_23BA2D5C0(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_23BA2D60C(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x24260DA50](v1 + 24);
  return sub_23BA2D674;
}

void sub_23BA2D674(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

uint64_t MessagesAppViewModel.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_256A58CF0 != -1)
    swift_once();
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  v1 = swift_retain();
  *(_QWORD *)(v0 + 16) = sub_23BB0ABC8(v1, 0xD000000000000013, 0x800000023BB9A570, 0, 0, 0, 0, 0, 0);
  return v0;
}

uint64_t MessagesAppViewModel.init()()
{
  uint64_t v0;
  uint64_t v1;

  swift_unknownObjectWeakInit();
  if (qword_256A58CF0 != -1)
    swift_once();
  type metadata accessor for CompositeAppViewModel();
  swift_allocObject();
  v1 = swift_retain();
  *(_QWORD *)(v0 + 16) = sub_23BB0ABC8(v1, 0xD000000000000013, 0x800000023BB9A570, 0, 0, 0, 0, 0, 0);
  return v0;
}

uint64_t MessagesAppViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58E00 != -1)
    swift_once();
  v6 = sub_23BB891C4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v7 = sub_23BB891AC();
  v8 = sub_23BB8ABC8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v17 = v1;
    v18 = v10;
    *(_DWORD *)v9 = 136315394;
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    v11 = sub_23BB8A7D8();
    v17 = sub_23BB7B69C(v11, v12, &v18);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v17 = sub_23BB7B69C(0x74696E696564, 0xE600000000000000, &v18);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v7, v8, "MessagesAppViewModel: %s - %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v13 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  v14 = *(_QWORD *)(v1 + 16);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v14;
  swift_retain();
  sub_23BA2DBDC((uint64_t)v5, (uint64_t)&unk_256A5D750, (uint64_t)v15);
  swift_release();
  sub_23B9907F8((uint64_t)v5);
  swift_release();
  swift_unknownObjectWeakDestroy();
  return v1;
}

uint64_t sub_23BA2DB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23BA2DB40()
{
  uint64_t v0;

  sub_23BB8A9F4();
  *(_QWORD *)(v0 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA2DBA8()
{
  uint64_t v0;

  swift_release();
  sub_23BB077BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA2DBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B9F4BA4(a1, (uint64_t)v9);
  v10 = sub_23BB8AA18();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_23B9907F8((uint64_t)v9);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_23BB8A988();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23BB8AA0C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v14;
  }
  return swift_task_create();
}

uint64_t MessagesAppViewModel.__deallocating_deinit()
{
  MessagesAppViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23BA2DD84(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136315394;
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    v7 = sub_23BB8A7D8();
    sub_23BB7B69C(v7, v8, &v10);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_23BB7B69C(0xD000000000000019, 0x800000023BB9A590, &v10);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "MessagesAppViewModel: %s - %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_23BB07280(a1);
}

uint64_t sub_23BA2DF8C()
{
  return sub_23BA2DFF8(0xD000000000000014, 0x800000023BB9A5B0, (uint64_t (*)(uint64_t))sub_23BB09C04);
}

uint64_t sub_23BA2DFB0()
{
  return sub_23BA2DFF8(0xD000000000000015, 0x800000023BB9A5D0, (uint64_t (*)(uint64_t))sub_23BB09F18);
}

uint64_t sub_23BA2DFD4()
{
  return sub_23BA2DFF8(0xD000000000000013, 0x800000023BB9A5F0, (uint64_t (*)(uint64_t))sub_23BB077BC);
}

uint64_t sub_23BA2DFF8(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_256A58E00 != -1)
    swift_once();
  v6 = sub_23BB891C4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v7 = sub_23BB891AC();
  v8 = sub_23BB8ABEC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315394;
    type metadata accessor for MessagesAppViewModel();
    swift_retain();
    v11 = sub_23BB8A7D8();
    sub_23BB7B69C(v11, v12, &v15);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    sub_23BB7B69C(a1, a2, &v15);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v7, v8, "MessagesAppViewModel: %s - %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

  }
  else
  {

    v13 = swift_release_n();
  }
  return a3(v13);
}

uint64_t sub_23BA2E1FC(uint64_t a1, uint64_t a2)
{
  return sub_23BA2E26C(a1, a2, &OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendLocationMessageHandler, (void (*)(void))sub_23B9B7598, (uint64_t (*)(uint64_t, uint64_t))sub_23B9BD73C);
}

uint64_t sub_23BA2E218(uint64_t a1, uint64_t a2)
{
  return sub_23BA2E26C(a1, a2, &OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectSendStaticLocationMessageHandler, (void (*)(void))sub_23BA2EA0C, sub_23BA2EA10);
}

uint64_t sub_23BA2E234(uint64_t a1, uint64_t a2)
{
  return sub_23BA2E26C(a1, a2, &OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_didSelectStopSharingHandler, (void (*)(void))sub_23BA2EA0C, sub_23BA2EA10);
}

uint64_t sub_23BA2E250(uint64_t a1, uint64_t a2)
{
  return sub_23BA2E26C(a1, a2, &OBJC_IVAR____TtC12FindMyUICore21CompositeAppViewModel_dismiss, (void (*)(void))sub_23BA2EA0C, sub_23BA2EA10);
}

uint64_t sub_23BA2E26C(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v6 = (uint64_t *)(*(_QWORD *)(v5 + 16) + *a3);
  v7 = *v6;
  v8 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  a4();
  return a5(v7, v8);
}

uint64_t sub_23BA2E2B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  sub_23BB8A9F4();
  v2[5] = sub_23BB8A9E8();
  v2[6] = sub_23BB8A988();
  v2[7] = v3;
  return swift_task_switch();
}

uint64_t sub_23BA2E320()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  swift_weakInit();
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_256A641D8 + dword_256A641D8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_23BA2E390;
  return v3(*(_QWORD *)(v0 + 24));
}

uint64_t sub_23BA2E390(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_BYTE *)(v4 + 88) = a1;
  *(_QWORD *)(v4 + 72) = a2;
  *(_QWORD *)(v4 + 80) = a3;
  swift_task_dealloc();
  swift_weakDestroy();
  return swift_task_switch();
}

uint64_t sub_23BA2E3F8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 88), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_23BA2E430(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  sub_23BB8A9F4();
  v2[4] = sub_23BB8A9E8();
  v2[5] = sub_23BB8A988();
  v2[6] = v3;
  return swift_task_switch();
}

uint64_t sub_23BA2E49C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_23BA2E4F0;
  return sub_23BA86524(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23BA2E4F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA2E550()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA2E584()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA2E5B8(char *a1@<X8>, CLLocationDegrees a2@<D0>, CLLocationDegrees a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  _QWORD v7[4];
  char v8;

  *(double *)v7 = a4;
  *(double *)&v7[1] = a5;
  *(double *)&v7[2] = a6;
  *(double *)&v7[3] = a7;
  v8 = 0;
  sub_23BA868CC((uint64_t)v7, a1, a2, a3);
}

uint64_t sub_23BA2E5F0()
{
  return sub_23BB0A500();
}

uint64_t sub_23BA2E610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MessagesAppViewModel();
  result = sub_23BB891E8();
  *a1 = result;
  return result;
}

uint64_t sub_23BA2E648()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA2E674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23B97C964;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t type metadata accessor for MessagesAppViewModel()
{
  return objc_opt_self();
}

uint64_t sub_23BA2E6F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA2E704@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 24;
  swift_beginAccess();
  result = MEMORY[0x24260DA50](v3);
  *a2 = result;
  return result;
}

uint64_t sub_23BA2E750()
{
  swift_beginAccess();
  return swift_unknownObjectWeakAssign();
}

ValueMetadata *type metadata accessor for MessagesAppView()
{
  return &type metadata for MessagesAppView;
}

uint64_t method lookup function for MessagesAppViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessagesAppViewModel.presenter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of MessagesAppViewModel.presenter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MessagesAppViewModel.presenter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MessagesAppViewModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of MessagesAppViewModel.startSubscriptions(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MessagesAppViewModel.pauseSubscriptions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MessagesAppViewModel.resumeSubscriptions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MessagesAppViewModel.stopSubscriptions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDidSelectSendLocationMessageHandler(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDidSelectSendStaticLocationMessageHandler(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDidSelectStopSharingHandler(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MessagesAppViewModel.setDismiss(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of MessagesAppViewModel.validateAndInitiate(message:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 192) + *(_QWORD *)(*(_QWORD *)v1 + 192));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23BA2E8A8;
  return v6(a1);
}

uint64_t sub_23BA2E8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  v8 = *v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3);
}

uint64_t dispatch thunk of MessagesAppViewModel.createMapsURLForThisDeviceCurrentLocation()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 200) + *(_QWORD *)(*(_QWORD *)v1 + 200));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B97C964;
  return v6(a1);
}

uint64_t dispatch thunk of MessagesAppViewModel.createMapsURL(for:region:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MessagesAppViewModel.willTransition(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

unint64_t sub_23BA2E9A4()
{
  unint64_t result;

  result = qword_256A5D898;
  if (!qword_256A5D898)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB94984, &type metadata for CompositeAppView);
    atomic_store(result, (unint64_t *)&qword_256A5D898);
  }
  return result;
}

uint64_t sub_23BA2E9E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Annotation.init(id:title:contact:coordinate:showPulseAnimationEndDate:horizontalAccuracy:badge:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>)
{
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  char *v35;
  __int128 v36;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a4;
  v41 = a6;
  v42 = a8;
  v20 = (int *)type metadata accessor for Annotation();
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a7;
  v38 = a7[1];
  v39 = v28;
  v29 = *((_QWORD *)a7 + 4);
  sub_23BA2F0B0(a6, (uint64_t)v27);
  v30 = (uint64_t)&v23[v20[7]];
  v31 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = &v23[v20[10]];
  *((_QWORD *)v32 + 4) = 0;
  *(_OWORD *)v32 = 0u;
  *((_OWORD *)v32 + 1) = 0u;
  *(_QWORD *)v23 = a1;
  *((_QWORD *)v23 + 1) = a2;
  v33 = v40;
  *((_QWORD *)v23 + 2) = a3;
  *((_QWORD *)v23 + 3) = v33;
  *((double *)v23 + 4) = a9;
  *((double *)v23 + 5) = a10;
  v34 = a5;
  sub_23B9A141C((uint64_t)v27, v30);
  *(double *)&v23[v20[8]] = a11;
  v35 = &v23[v20[9]];
  *(_QWORD *)v35 = a5;
  *((_QWORD *)v35 + 1) = 0;
  *((_QWORD *)v35 + 2) = 0;
  *((_QWORD *)v35 + 3) = 0;
  v35[32] = 0;
  sub_23B9A1464(*(_QWORD *)v32, *((_QWORD *)v32 + 1));
  v36 = v38;
  *(_OWORD *)v32 = v39;
  *((_OWORD *)v32 + 1) = v36;
  *((_QWORD *)v32 + 4) = v29;
  sub_23BA2F0F8((uint64_t)v23, v42);

  return sub_23BA2F13C(v41);
}

uint64_t Annotation.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Annotation.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Annotation.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Annotation.title.modify())()
{
  return nullsub_1;
}

double Annotation.coordinate.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void Annotation.coordinate.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

uint64_t (*Annotation.coordinate.modify())()
{
  return nullsub_1;
}

uint64_t Annotation.showPulseAnimationEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Annotation() + 28);
  return sub_23BA2F0B0(v3, a1);
}

uint64_t Annotation.showPulseAnimationEndDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Annotation() + 28);
  return sub_23B9A141C(a1, v3);
}

uint64_t (*Annotation.showPulseAnimationEndDate.modify())(_QWORD)
{
  type metadata accessor for Annotation();
  return nullsub_1;
}

double Annotation.horizontalAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for Annotation() + 32));
}

uint64_t Annotation.horizontalAccuracy.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Annotation();
  *(double *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*Annotation.horizontalAccuracy.modify())(_QWORD)
{
  type metadata accessor for Annotation();
  return nullsub_1;
}

id Annotation.icon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = v1 + *(int *)(type metadata accessor for Annotation() + 36);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_BYTE *)(v3 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  return sub_23B9A618C(v4, v5, v6, v7, v8);
}

__n128 Annotation.icon.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = v1 + *(int *)(type metadata accessor for Annotation() + 36);
  sub_23B9A6310(*(void **)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_BYTE *)(v5 + 32));
  result = v7;
  *(__n128 *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  *(_BYTE *)(v5 + 32) = v4;
  return result;
}

uint64_t (*Annotation.icon.modify())(_QWORD)
{
  type metadata accessor for Annotation();
  return nullsub_1;
}

uint64_t Annotation.badge.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Annotation() + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_23BA2F17C(v4, v5);
}

__n128 Annotation.badge.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 *v3;
  __n128 result;
  __n128 v5;
  __n128 v6;

  v5 = a1[1];
  v6 = *a1;
  v2 = a1[2].n128_u64[0];
  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for Annotation() + 40));
  sub_23B9A1464(v3->n128_u64[0], v3->n128_i64[1]);
  result = v5;
  *v3 = v6;
  v3[1] = v5;
  v3[2].n128_u64[0] = v2;
  return result;
}

uint64_t (*Annotation.badge.modify())(_QWORD)
{
  type metadata accessor for Annotation();
  return nullsub_1;
}

__n128 Annotation.init(id:title:coordinate:showPulseAnimationEndDate:horizontalAccuracy:icon:badge:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>)
{
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 result;
  char v27;
  __int128 v28;
  uint64_t v30;
  __n128 v31;
  __int128 v32;

  v28 = *a6;
  v20 = *((_QWORD *)a6 + 2);
  v19 = *((_QWORD *)a6 + 3);
  v27 = *((_BYTE *)a6 + 32);
  v31 = (__n128)a7[1];
  v32 = *a7;
  v30 = *((_QWORD *)a7 + 4);
  v21 = (int *)type metadata accessor for Annotation();
  v22 = a8 + v21[7];
  v23 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = a8 + v21[10];
  *(_QWORD *)(v24 + 32) = 0;
  *(_OWORD *)v24 = 0u;
  *(_OWORD *)(v24 + 16) = 0u;
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(double *)(a8 + 32) = a9;
  *(double *)(a8 + 40) = a10;
  sub_23B9A141C(a5, v22);
  *(double *)(a8 + v21[8]) = a11;
  v25 = a8 + v21[9];
  *(_OWORD *)v25 = v28;
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v19;
  *(_BYTE *)(v25 + 32) = v27;
  sub_23B9A1464(*(_QWORD *)v24, *(_QWORD *)(v24 + 8));
  result = v31;
  *(_OWORD *)v24 = v32;
  *(__n128 *)(v24 + 16) = v31;
  *(_QWORD *)(v24 + 32) = v30;
  return result;
}

uint64_t type metadata accessor for Annotation()
{
  uint64_t result;

  result = qword_256A5D8F8;
  if (!qword_256A5D8F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA2F0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA2F0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Annotation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA2F13C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BA2F17C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

void Annotation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  char v18;

  v1 = sub_23BB88984();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB8A808();
  sub_23BB8A808();
  sub_23BB8B264();
  sub_23BB8B264();
  v10 = (int *)type metadata accessor for Annotation();
  sub_23BA2F0B0(v0 + v10[7], (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
  {
    sub_23BB8B258();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v9, v1);
    sub_23BB8B258();
    sub_23B97D0C8(&qword_256A59AD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23BB8A718();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  sub_23BB8B264();
  v11 = v0 + v10[9];
  v12 = *(_BYTE *)(v11 + 32);
  v13 = *(_OWORD *)(v11 + 16);
  v17[0] = *(_OWORD *)v11;
  v17[1] = v13;
  v18 = v12;
  PlatterWithIcon.Icon.hash(into:)();
  v14 = (uint64_t *)(v0 + v10[10]);
  v15 = v14[1];
  if (v15)
  {
    v16 = *v14;
    sub_23BA2F17C(*v14, v14[1]);
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_23BB89FB0();
    swift_release();
    sub_23B9A1464(v16, v15);
  }
}

BOOL static Annotation.== infix(_:_:)()
{
  uint64_t v0;

  sub_23BB8B240();
  Annotation.hash(into:)();
  v0 = sub_23BB8B270();
  sub_23BB8B240();
  Annotation.hash(into:)();
  return v0 == sub_23BB8B270();
}

uint64_t Annotation.hashValue.getter()
{
  sub_23BB8B240();
  Annotation.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA2F4E4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA2F4F0()
{
  sub_23BB8B240();
  Annotation.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA2F530()
{
  sub_23BB8B240();
  Annotation.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA2F568()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_23BA2F574()
{
  return sub_23B97D0C8(&qword_256A5D138, (uint64_t (*)(uint64_t))type metadata accessor for Annotation, (uint64_t)&protocol conformance descriptor for Annotation);
}

BOOL sub_23BA2F5A0()
{
  uint64_t v0;

  sub_23BB8B240();
  Annotation.hash(into:)();
  v0 = sub_23BB8B270();
  sub_23BB8B240();
  Annotation.hash(into:)();
  return v0 == sub_23BB8B270();
}

_QWORD *initializeBufferWithCopyOfBuffer for Annotation(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a3[7];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v12 = sub_23BB88984();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v18 = (char *)v4 + v17;
    v19 = *(void **)((char *)a2 + v17);
    v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    v21 = *(uint64_t *)((char *)a2 + v17 + 16);
    v22 = *(uint64_t *)((char *)a2 + v17 + 24);
    v23 = *((_BYTE *)a2 + v17 + 32);
    sub_23B9A618C(v19, v20, v21, v22, v23);
    *(_QWORD *)v18 = v19;
    *((_QWORD *)v18 + 1) = v20;
    *((_QWORD *)v18 + 2) = v21;
    *((_QWORD *)v18 + 3) = v22;
    v18[32] = v23;
    v24 = a3[10];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    if (v27)
    {
      *v25 = *v26;
      v25[1] = v27;
      v28 = v26[3];
      v25[2] = v26[2];
      v25[3] = v28;
      v25[4] = v26[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      v25[4] = v26[4];
    }
  }
  return v4;
}

uint64_t destroy for Annotation(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[9];
  sub_23B9A6310(*(void **)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_BYTE *)(v7 + 32));
  result = *(_QWORD *)(a1 + a2[10] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for Annotation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = a3[7];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v16 = a1 + v15;
  v17 = *(void **)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  v19 = *(_QWORD *)(a2 + v15 + 16);
  v20 = *(_QWORD *)(a2 + v15 + 24);
  v21 = *(_BYTE *)(a2 + v15 + 32);
  sub_23B9A618C(v17, v18, v19, v20, v21);
  *(_QWORD *)v16 = v17;
  *(_QWORD *)(v16 + 8) = v18;
  *(_QWORD *)(v16 + 16) = v19;
  *(_QWORD *)(v16 + 24) = v20;
  *(_BYTE *)(v16 + 32) = v21;
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  if (v25)
  {
    *v23 = *v24;
    v23[1] = v25;
    v26 = v24[3];
    v23[2] = v24[2];
    v23[3] = v26;
    v23[4] = v24[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v27 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v27;
    v23[4] = v24[4];
  }
  return a1;
}

_QWORD *assignWithCopy for Annotation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(id *)v17;
  v19 = *((_QWORD *)v17 + 1);
  v20 = *((_QWORD *)v17 + 2);
  v21 = *((_QWORD *)v17 + 3);
  v22 = v17[32];
  sub_23B9A618C(*(id *)v17, v19, v20, v21, v22);
  v23 = *(void **)v16;
  v24 = *((_QWORD *)v16 + 1);
  v25 = *((_QWORD *)v16 + 2);
  v26 = *((_QWORD *)v16 + 3);
  *(_QWORD *)v16 = v18;
  *((_QWORD *)v16 + 1) = v19;
  *((_QWORD *)v16 + 2) = v20;
  *((_QWORD *)v16 + 3) = v21;
  v27 = v16[32];
  v16[32] = v22;
  sub_23B9A6310(v23, v24, v25, v26, v27);
  v28 = a3[10];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = *(_QWORD *)((char *)a1 + v28 + 8);
  v32 = v30[1];
  if (v31)
  {
    if (v32)
    {
      *v29 = *v30;
      v29[1] = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29[2] = v30[2];
      v29[3] = v30[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29[4] = v30[4];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_23B9A6BDC((uint64_t)v29);
      v33 = v30[4];
      v34 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v34;
      v29[4] = v33;
    }
  }
  else if (v32)
  {
    *v29 = *v30;
    v29[1] = v30[1];
    v29[2] = v30[2];
    v29[3] = v30[3];
    v29[4] = v30[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v35 = *(_OWORD *)v30;
    v36 = *((_OWORD *)v30 + 1);
    v29[4] = v30[4];
    *(_OWORD *)v29 = v35;
    *((_OWORD *)v29 + 1) = v36;
  }
  return a1;
}

_OWORD *initializeWithTake for Annotation(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  v14[32] = v15[32];
  v17 = a3[10];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
  return a1;
}

uint64_t assignWithTake for Annotation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = a3[7];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 32);
  v21 = *(void **)v18;
  v22 = *(_QWORD *)(v18 + 8);
  v23 = *(_QWORD *)(v18 + 16);
  v24 = *(_QWORD *)(v18 + 24);
  v25 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v25;
  v26 = *(_BYTE *)(v18 + 32);
  *(_BYTE *)(v18 + 32) = v20;
  sub_23B9A6310(v21, v22, v23, v24, v26);
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  if (!*(_QWORD *)(a1 + v27 + 8))
  {
LABEL_11:
    v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
    return a1;
  }
  v30 = *(_QWORD *)(v29 + 8);
  if (!v30)
  {
    sub_23B9A6BDC(v28);
    goto LABEL_11;
  }
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_QWORD *)(v28 + 8) = v30;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v29 + 24);
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  *(_QWORD *)(v28 + 24) = v31;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v28 + 32) = *(_QWORD *)(v29 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Annotation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA2FFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Annotation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA30040(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_23BA300B8()
{
  unint64_t v0;

  sub_23BA19EA8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23BA30158()
{
  sub_23BB8B240();
  sub_23BB8A808();
  return sub_23BB8B270();
}

uint64_t sub_23BA3019C()
{
  return sub_23BB8A808();
}

uint64_t sub_23BA301A8()
{
  sub_23BB8B240();
  sub_23BB8A808();
  return sub_23BB8B270();
}

void sub_23BA301E8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[10];
  uint64_t v16;

  v16 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DC20);
  v15[7] = *(_QWORD *)(v3 - 8);
  v15[8] = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v15[6] = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DC28);
  v15[4] = *(_QWORD *)(v6 - 8);
  v15[5] = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v15[3] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DC30);
  v15[1] = *(_QWORD *)(v9 - 8);
  v15[2] = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DC38);
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DC40);
  v15[9] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA36620();
  sub_23BB8B294();
  __asm { BR              X10 }
}

uint64_t sub_23BA303A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_23BA36730();
  sub_23BB8B0A8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

uint64_t sub_23BA304D4(_QWORD *a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB48);
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB50);
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB58);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA35EC4();
  sub_23BB8B294();
  if ((a2 & 0xFF00) == 0x200)
  {
    v30 = 1;
    sub_23BA35F08();
    sub_23BB8B0A8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  else
  {
    v29 = 0;
    sub_23BA35F4C();
    sub_23BB8B0A8();
    v28 = a2;
    v27 = 0;
    sub_23BA36018();
    v19 = v24;
    v18 = v25;
    sub_23BB8B0F0();
    if (!v18)
    {
      v26 = 1;
      sub_23BB8B0D8();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
}

uint64_t sub_23BA30724(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23BA30758 + 4 * byte_23BB906D4[a1]))(0x656475746974616CLL, 0xE800000000000000);
}

uint64_t sub_23BA30758()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_23BA30774(uint64_t a1)
{
  return a1 + 2805;
}

unint64_t sub_23BA3077C()
{
  return 0xD000000000000012;
}

unint64_t sub_23BA3079C()
{
  return 0xD000000000000010;
}

uint64_t sub_23BA307B8()
{
  return 0x657372756F63;
}

uint64_t sub_23BA307CC()
{
  return 0x6341657372756F63;
}

uint64_t sub_23BA307F0()
{
  return 0x6465657073;
}

uint64_t sub_23BA30804()
{
  return 0x6363416465657073;
}

uint64_t sub_23BA30828()
{
  return 0x6D617473656D6974;
}

uint64_t sub_23BA30848(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA35FD4();
  sub_23BB8B294();
  v9[15] = 0;
  sub_23BB8B0E4();
  if (!v1)
  {
    v9[14] = 1;
    sub_23BB8B0E4();
    v9[13] = 2;
    sub_23BB8B0E4();
    v9[12] = 3;
    sub_23BB8B0E4();
    v9[11] = 4;
    sub_23BB8B0E4();
    v9[10] = 5;
    sub_23BB8B0E4();
    v9[9] = 6;
    sub_23BB8B0E4();
    v9[8] = 7;
    sub_23BB8B0E4();
    v9[7] = 8;
    sub_23BB8B0E4();
    v9[6] = 9;
    sub_23BB8B0E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_23BA30A9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[5];
  char v17;
  char v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DAD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA344A0();
  sub_23BB8B294();
  LOBYTE(v16[0]) = 0;
  sub_23BB8B0CC();
  if (!v2)
  {
    LOWORD(v16[0]) = *(_WORD *)(v3 + 16);
    v18 = 1;
    sub_23BA3456C();
    sub_23BB8B0F0();
    v10 = type metadata accessor for MessagePayload.ContentV0(0);
    LOBYTE(v16[0]) = 2;
    sub_23BB88984();
    sub_23B97D0C8(&qword_256A59AF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23BB8B0C0();
    v11 = v3 + *(int *)(v10 + 28);
    v12 = *(_BYTE *)(v11 + 80);
    v13 = *(_OWORD *)(v11 + 16);
    v16[0] = *(_OWORD *)v11;
    v16[1] = v13;
    v14 = *(_OWORD *)(v11 + 48);
    v16[2] = *(_OWORD *)(v11 + 32);
    v16[3] = v14;
    v16[4] = *(_OWORD *)(v11 + 64);
    v17 = v12;
    v18 = 3;
    sub_23BA345B0();
    sub_23BB8B0C0();
    LOBYTE(v16[0]) = 4;
    sub_23BB8B0B4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_23BA30CC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  char v36;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DAB0);
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23BA344A0();
  sub_23BB8B288();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  v17 = (uint64_t)v7;
  LOBYTE(v30) = 0;
  v18 = v28;
  *(_QWORD *)v15 = sub_23BB8B06C();
  *((_QWORD *)v15 + 1) = v19;
  v36 = 1;
  sub_23BA344E4();
  sub_23BB8B090();
  *((_WORD *)v15 + 8) = v30;
  sub_23BB88984();
  LOBYTE(v30) = 2;
  sub_23B97D0C8(&qword_256A59B28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23BB8B060();
  sub_23BA31BCC(v17, (uint64_t)&v15[v12[6]]);
  v36 = 3;
  sub_23BA34528();
  sub_23BB8B060();
  v20 = v35;
  v21 = &v15[v12[7]];
  v22 = v31;
  *(_OWORD *)v21 = v30;
  *((_OWORD *)v21 + 1) = v22;
  v23 = v33;
  *((_OWORD *)v21 + 2) = v32;
  *((_OWORD *)v21 + 3) = v23;
  *((_OWORD *)v21 + 4) = v34;
  v21[80] = v20;
  LOBYTE(v30) = 4;
  v24 = sub_23BB8B054();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v18);
  v15[v12[8]] = v24;
  sub_23B989CE8((uint64_t)v15, v27, type metadata accessor for MessagePayload.ContentV0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_23B989D9C((uint64_t)v15, type metadata accessor for MessagePayload.ContentV0);
}

uint64_t sub_23BA31028@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23BB8B024();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_23BA31078(_QWORD *a1@<X8>)
{
  *a1 = 12406;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_23BA31088()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23BA310B8 + 4 * byte_23BB906DE[*v0]))(0x72756F48656E6FLL, 0xE700000000000000);
}

uint64_t sub_23BA310B8()
{
  return 0x796144664F646E65;
}

uint64_t sub_23BA310D0()
{
  return 0x696E696665646E69;
}

uint64_t sub_23BA310F0()
{
  return 0x636974617473;
}

uint64_t sub_23BA31104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BA349E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BA31128(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23BA31134()
{
  sub_23BA36620();
  return sub_23BB8B390();
}

uint64_t sub_23BA3115C()
{
  sub_23BA36620();
  return sub_23BB8B39C();
}

uint64_t sub_23BA31184()
{
  sub_23BA366EC();
  return sub_23BB8B390();
}

uint64_t sub_23BA311AC()
{
  sub_23BA366EC();
  return sub_23BB8B39C();
}

uint64_t sub_23BA311D4()
{
  sub_23BA366A8();
  return sub_23BB8B390();
}

uint64_t sub_23BA311FC()
{
  sub_23BA366A8();
  return sub_23BB8B39C();
}

uint64_t sub_23BA31224()
{
  sub_23BA36730();
  return sub_23BB8B390();
}

uint64_t sub_23BA3124C()
{
  sub_23BA36730();
  return sub_23BB8B39C();
}

uint64_t sub_23BA31274()
{
  sub_23BA36664();
  return sub_23BB8B390();
}

uint64_t sub_23BA3129C()
{
  sub_23BA36664();
  return sub_23BB8B39C();
}

uint64_t sub_23BA312C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BA34BA8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23BA312EC(_QWORD *a1)
{
  unsigned __int8 *v1;

  sub_23BA301E8(a1, *v1);
}

uint64_t sub_23BA31304()
{
  _BYTE *v0;

  if (*v0)
    return 0x74736575716572;
  else
    return 0x6572616873;
}

uint64_t sub_23BA3133C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BA34FCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA31360()
{
  sub_23BA35EC4();
  return sub_23BB8B390();
}

uint64_t sub_23BA31388()
{
  sub_23BA35EC4();
  return sub_23BB8B39C();
}

uint64_t sub_23BA313B0()
{
  sub_23BA35F08();
  return sub_23BB8B390();
}

uint64_t sub_23BA313D8()
{
  sub_23BA35F08();
  return sub_23BB8B39C();
}

uint64_t sub_23BA31400()
{
  _BYTE *v0;

  if (*v0)
    return 0x65526D6F72467369;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_23BA31448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BA350B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA3146C()
{
  sub_23BA35F4C();
  return sub_23BB8B390();
}

uint64_t sub_23BA31494()
{
  sub_23BA35F4C();
  return sub_23BB8B39C();
}

uint64_t sub_23BA314BC@<X0>(_QWORD *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23BA351C8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_23BA314E4(_QWORD *a1)
{
  __int16 *v1;

  return sub_23BA304D4(a1, *v1);
}

uint64_t sub_23BA314FC()
{
  unsigned __int8 *v0;

  return sub_23BA30724(*v0);
}

uint64_t sub_23BA31504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BA35598(a1, a2);
  *a3 = result;
  return result;
}

void sub_23BA31528(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_23BA31534()
{
  sub_23BA35FD4();
  return sub_23BB8B390();
}

uint64_t sub_23BA3155C()
{
  sub_23BA35FD4();
  return sub_23BB8B39C();
}

__n128 sub_23BA31584@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_23BA359BC(a1, v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_23BA315CC(_QWORD *a1)
{
  return sub_23BA30848(a1);
}

uint64_t sub_23BA315E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23BA31604 + 4 * byte_23BB906E2[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_23BA31604()
{
  return 1684957547;
}

uint64_t sub_23BA31614()
{
  return 0x6D617473656D6974;
}

uint64_t sub_23BA31630()
{
  return 0x4C6C616974696E69;
}

uint64_t sub_23BA31654()
{
  return 0x65526D6F72467369;
}

uint64_t sub_23BA31674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23BA35C88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23BA31698()
{
  sub_23BA344A0();
  return sub_23BB8B390();
}

uint64_t sub_23BA316C0()
{
  sub_23BA344A0();
  return sub_23BB8B39C();
}

uint64_t sub_23BA316E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23BA30CC0(a1, a2);
}

uint64_t sub_23BA316FC(_QWORD *a1)
{
  return sub_23BA30A9C(a1);
}

uint64_t MessagePayload.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void MessagePayload.kind.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  int v5;

  v3 = *(unsigned __int16 *)(v1 + 16);
  if ((v3 & 0xFF00) == 0x200)
  {
    v4 = 0;
    LOWORD(v5) = 2;
  }
  else
  {
    v4 = *(_WORD *)(v1 + 16);
    v5 = (v3 >> 8) & 1 | ((*(_BYTE *)(v1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 32)) & 1) << 8);
  }
  *(_QWORD *)a1 = v4;
  *(_WORD *)(a1 + 8) = v5;
}

uint64_t type metadata accessor for MessagePayload.ContentV0(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5DA60);
}

uint64_t MessagePayload.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 24);
  return sub_23BA2F0B0(v3, a1);
}

id MessagePayload.initialLocation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  uint64_t v19;
  double v20;

  v1 = sub_23BB88984();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = 0;
  v7 = v0 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 28);
  if ((*(_BYTE *)(v7 + 80) & 1) == 0)
  {
    v8 = *(_QWORD *)(v7 + 64);
    v9 = *(double *)(v7 + 48);
    v20 = *(double *)(v7 + 56);
    v11 = *(double *)(v7 + 32);
    v10 = *(double *)(v7 + 40);
    v13 = *(double *)(v7 + 16);
    v12 = *(double *)(v7 + 24);
    v15 = *(double *)v7;
    v14 = *(double *)(v7 + 8);
    sub_23BB88900();
    v16 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
    v17 = (void *)sub_23BB888D0();
    v6 = objc_msgSend(v16, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v17, v15, v14, v13, v12, v11, v10, v9, v20, v8);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v6;
}

uint64_t MessagePayload.init(id:kind:timestamp:initialLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned int v17;
  id v18;
  __int16 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v12 = sub_23BB88984();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *((unsigned __int16 *)a3 + 4);
  if (*((_WORD *)a3 + 4) == 2)
  {
    LODWORD(v18) = 0;
    v19 = 512;
    if (a5)
    {
LABEL_3:
      v20 = a5;
      v48 = (int)v18;
      v18 = v20;
      v49 = a1;
      v21 = a2;
      v22 = a4;
      objc_msgSend(v20, sel_coordinate);
      v51 = v23;
      objc_msgSend(v18, sel_coordinate);
      v50 = v24;
      objc_msgSend(v18, sel_altitude);
      v26 = v25;
      objc_msgSend(v18, sel_horizontalAccuracy);
      v28 = v27;
      objc_msgSend(v18, sel_verticalAccuracy);
      v30 = v29;
      objc_msgSend(v18, sel_course);
      v32 = v31;
      objc_msgSend(v18, sel_courseAccuracy);
      v34 = v33;
      objc_msgSend(v18, sel_speed);
      v36 = v35;
      objc_msgSend(v18, sel_speedAccuracy);
      v38 = v37;
      v39 = objc_msgSend(v18, sel_timestamp);
      sub_23BB8896C();

      a4 = v22;
      a2 = v21;
      a1 = v49;
      sub_23BB8890C();
      v41 = v40;

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      LOBYTE(v18) = v48;
LABEL_7:
      *(_QWORD *)a6 = a1;
      *(_QWORD *)(a6 + 8) = a2;
      *(_WORD *)(a6 + 16) = v19;
      v43 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
      result = sub_23BA31BCC(a4, a6 + v43[6]);
      v45 = a6 + v43[7];
      v46 = v50;
      *(_QWORD *)v45 = v51;
      *(_QWORD *)(v45 + 8) = v46;
      *(_QWORD *)(v45 + 16) = v26;
      *(_QWORD *)(v45 + 24) = v28;
      *(_QWORD *)(v45 + 32) = v30;
      *(_QWORD *)(v45 + 40) = v32;
      *(_QWORD *)(v45 + 48) = v34;
      *(_QWORD *)(v45 + 56) = v36;
      *(_QWORD *)(v45 + 64) = v38;
      *(_QWORD *)(v45 + 72) = v41;
      *(_BYTE *)(v45 + 80) = a5 == 0;
      *(_BYTE *)(a6 + v43[8]) = (_BYTE)v18;
      return result;
    }
LABEL_6:
    v50 = 0;
    v51 = 0;
    v26 = 0;
    v28 = 0;
    v30 = 0;
    v32 = 0;
    v34 = 0;
    v36 = 0;
    v38 = 0;
    v41 = 0;
    goto LABEL_7;
  }
  v42 = *a3;
  if ((unint64_t)*a3 < 4)
  {
    LODWORD(v18) = (v17 >> 8) & 1;
    v19 = v42 | ((v17 & 1) << 8);
    if (a5)
      goto LABEL_3;
    goto LABEL_6;
  }
  v52 = *a3;
  result = sub_23BB8B1C8();
  __break(1u);
  return result;
}

uint64_t sub_23BA31BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MessagePayload.init(from:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint8_t *v48;
  uint8_t *v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint8_t *v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, uint64_t);
  char *v69;
  char *v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  void (*v78)(char *, const char *, uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint8_t *v87;
  void *v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  char *v95;
  char *v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint8_t *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint8_t *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  void *v121;
  void *v122;
  id v123;
  id v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  _QWORD *v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  uint8_t *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160[3];

  v155 = a2;
  v160[1] = *(id *)MEMORY[0x24BDAC8D0];
  v156 = sub_23BB8884C();
  v3 = *(uint8_t **)(v156 - 8);
  v5 = MEMORY[0x24BDAC7A8](v156, v4);
  v7 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v151 = (char *)&v138 - v9;
  v144 = type metadata accessor for MessagePayload.ContentV0(0);
  MEMORY[0x24BDAC7A8](v144, v10);
  v146 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D948);
  MEMORY[0x24BDAC7A8](v12, v13);
  v145 = (char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_23BB88714();
  v15 = *(_QWORD *)(v158 - 8);
  v17 = MEMORY[0x24BDAC7A8](v158, v16);
  v153 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v147 = (char *)&v138 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)&v138 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v149 = (char *)&v138 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v150 = (char *)&v138 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D950);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v138 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23BB8878C();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (char *)&v138 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  sub_23BB88738();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
  {
    sub_23B989D60((uint64_t)v34, &qword_256A5D950);
LABEL_8:
    v55 = v156;
    if (qword_256A58E00 != -1)
      swift_once();
    v56 = sub_23BB891C4();
    __swift_project_value_buffer(v56, (uint64_t)qword_256A73E80);
    (*((void (**)(char *, char *, uint64_t))v3 + 2))(v7, v40, v55);
    v57 = sub_23BB891AC();
    v58 = sub_23BB8ABD4();
    v59 = os_log_type_enabled(v57, v58);
    v60 = v155;
    if (v59)
    {
      v61 = swift_slowAlloc();
      v148 = v3;
      v62 = v55;
      v63 = (uint8_t *)v61;
      v64 = (void *)swift_slowAlloc();
      v160[0] = v64;
      v152 = v40;
      *(_DWORD *)v63 = 136315138;
      sub_23B97D0C8(&qword_256A5D958, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v65 = sub_23BB8B150();
      v159 = sub_23BB7B69C(v65, v66, (uint64_t *)v160);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      v67 = (void (*)(char *, uint64_t))*((_QWORD *)v148 + 1);
      v67(v7, v62);
      _os_log_impl(&dword_23B979000, v57, v58, "MessagePayload: Expected our components to have queryItems - %s", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v64, -1, -1);
      MEMORY[0x24260D9B4](v63, -1, -1);

      v67(v152, v62);
    }
    else
    {

      v68 = (void (*)(char *, uint64_t))*((_QWORD *)v3 + 1);
      v68(v7, v55);
      v68(v40, v55);
    }
    goto LABEL_32;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v39, v34, v35);
  v154 = sub_23BB88720();
  if (!v154)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
    goto LABEL_8;
  }
  v157 = v15;
  v152 = a1;
  if (qword_256A58E00 != -1)
LABEL_62:
    swift_once();
  v41 = sub_23BB891C4();
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_256A73E80);
  v43 = v154;
  swift_bridgeObjectRetain_n();
  v140 = v42;
  v44 = sub_23BB891AC();
  v45 = sub_23BB8ABC8();
  v46 = os_log_type_enabled(v44, v45);
  v47 = v156;
  v142 = v39;
  v143 = v35;
  v141 = v36;
  if (v46)
  {
    v48 = v3;
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = (void *)swift_slowAlloc();
    v160[0] = v50;
    *(_DWORD *)v49 = 136315138;
    v148 = v49 + 4;
    swift_bridgeObjectRetain();
    v51 = MEMORY[0x24260C844](v154, v158);
    v53 = v52;
    swift_bridgeObjectRelease();
    v159 = sub_23BB7B69C(v51, v53, (uint64_t *)v160);
    v43 = v154;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v44, v45, "MessagePayload: queryItems - %s", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v50, -1, -1);
    v54 = v49;
    v3 = v48;
    MEMORY[0x24260D9B4](v54, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v69 = v152;
  v70 = *(char **)(v43 + 16);
  if (!v70)
    goto LABEL_28;
  v148 = v3;
  v71 = v43 + ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80));
  v3 = *(uint8_t **)(v157 + 72);
  v36 = *(_QWORD *)(v157 + 16);
  swift_bridgeObjectRetain();
  v72 = v71;
  v139 = v70;
  v73 = v70;
  v74 = v158;
  while (1)
  {
    ((void (*)(const char *, unint64_t, uint64_t))v36)(v25, v72, v74);
    if (sub_23BB886FC() == 0xD00000000000001ELL && v75 == 0x800000023BB9A660)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v76 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v76 & 1) != 0)
      break;
    v74 = v158;
    (*(void (**)(const char *, uint64_t))(v157 + 8))(v25, v158);
    v72 += (unint64_t)v3;
    if (!--v73)
    {
      swift_bridgeObjectRelease();
      v69 = v152;
      v47 = v156;
      v3 = v148;
      goto LABEL_28;
    }
  }
  v74 = v158;
LABEL_23:
  swift_bridgeObjectRelease();
  v77 = v157;
  v78 = *(void (**)(char *, const char *, uint64_t))(v157 + 32);
  v79 = v149;
  v78(v149, v25, v74);
  v80 = v150;
  v78(v150, v79, v74);
  sub_23BB88708();
  v69 = v152;
  v47 = v156;
  if (!v81)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v74);
    goto LABEL_27;
  }
  v82 = sub_23BB8B024();
  swift_bridgeObjectRelease();
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v158);
LABEL_27:
    v3 = v148;
LABEL_28:
    swift_bridgeObjectRelease();
    v83 = v151;
    (*((void (**)(char *, char *, uint64_t))v3 + 2))(v151, v69, v47);
    v84 = sub_23BB891AC();
    v85 = sub_23BB8ABD4();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = v47;
      v87 = (uint8_t *)swift_slowAlloc();
      v88 = (void *)swift_slowAlloc();
      v160[0] = v88;
      *(_DWORD *)v87 = 136315138;
      sub_23B97D0C8(&qword_256A5D958, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v89 = sub_23BB8B150();
      v159 = sub_23BB7B69C(v89, v90, (uint64_t *)v160);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      v91 = (void (*)(char *, uint64_t))*((_QWORD *)v3 + 1);
      v91(v83, v86);
      _os_log_impl(&dword_23B979000, v84, v85, "MessagePayload: Version not found - %s", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v88, -1, -1);
      MEMORY[0x24260D9B4](v87, -1, -1);

      v91(v152, v86);
    }
    else
    {

      v92 = (void (*)(char *, uint64_t))*((_QWORD *)v3 + 1);
      v92(v83, v47);
      v92(v69, v47);
    }
    goto LABEL_31;
  }
  v149 = (char *)v78;
  swift_bridgeObjectRetain();
  v39 = 0;
  v25 = "FindMyMessagePayloadVersionKey";
  v151 = (char *)0x800000023BB9A680;
  v35 = v158;
  while (1)
  {
    v95 = v39 + 1;
    if (__OFADD__(v39, 1))
    {
      __break(1u);
      goto LABEL_62;
    }
    ((void (*)(char *, unint64_t, uint64_t))v36)(v153, v71, v35);
    if (sub_23BB886FC() == 0xD000000000000021 && v96 == v151)
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    v97 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v97 & 1) != 0)
      break;
    v35 = v158;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v153, v158);
    ++v39;
    v71 += (unint64_t)v3;
    if (v95 == v139)
    {
      swift_bridgeObjectRelease();
      v98 = 1;
      v99 = v156;
      v101 = v147;
      v100 = v148;
      v102 = (uint64_t)v145;
      v103 = (uint64_t)v146;
      goto LABEL_43;
    }
  }
  v35 = v158;
LABEL_42:
  swift_bridgeObjectRelease();
  v102 = (uint64_t)v145;
  ((void (*)(char *, char *, uint64_t))v149)(v145, v153, v35);
  v98 = 0;
  v99 = v156;
  v101 = v147;
  v100 = v148;
  v103 = (uint64_t)v146;
LABEL_43:
  v104 = v157;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v157 + 56))(v102, v98, 1, v35);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v102, 1, v35) == 1)
  {
    sub_23B989D60(v102, &qword_256A5D948);
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t))v149)(v101, v102, v35);
    sub_23BB88708();
    if (v105)
    {
      v106 = objc_allocWithZone(MEMORY[0x24BDBCE50]);
      v107 = (void *)sub_23BB8A784();
      swift_bridgeObjectRelease();
      v108 = objc_msgSend(v106, sel_initWithBase64EncodedString_options_, v107, 0);

      if (v108)
      {
        v160[0] = 0;
        v109 = objc_msgSend(v108, sel_decompressedDataUsingAlgorithm_error_, 3, v160);
        v110 = v160[0];
        if (v109)
        {
          v111 = sub_23BB88864();
          v113 = v112;

          sub_23BB8863C();
          swift_allocObject();
          sub_23BB88630();
          sub_23B97D0C8(&qword_256A5D960, type metadata accessor for MessagePayload.ContentV0, (uint64_t)&unk_23BB90888);
          sub_23BB88624();
          sub_23B9BDAD0(v111, v113);
          swift_release();

          (*((void (**)(char *, uint64_t))v100 + 1))(v69, v156);
          v134 = v158;
          v135 = *(void (**)(char *, uint64_t))(v157 + 8);
          v135(v101, v158);
          v135(v150, v134);
          (*(void (**)(char *, uint64_t))(v141 + 8))(v142, v143);
          v136 = v155;
          sub_23BA3333C(v103, v155);
          v137 = type metadata accessor for MessagePayload(0);
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v136, 0, 1, v137);
        }
        v121 = v110;
        v122 = (void *)sub_23BB887C8();

        swift_willThrow();
        v123 = v122;
        v124 = v122;
        v125 = sub_23BB891AC();
        v126 = sub_23BB8ABD4();
        if (os_log_type_enabled(v125, v126))
        {
          v127 = (uint8_t *)swift_slowAlloc();
          v128 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v127 = 138412290;
          v101 = v147;
          v129 = v122;
          v130 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v160[0] = v130;
          v69 = v152;
          sub_23BB8ACB8();
          *v128 = v130;
          v100 = v148;

          _os_log_impl(&dword_23B979000, v125, v126, "MessagePayload: Can't load from URL: %@", v127, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
          swift_arrayDestroy();
          MEMORY[0x24260D9B4](v128, -1, -1);
          MEMORY[0x24260D9B4](v127, -1, -1);

        }
        else
        {

        }
        v131 = v156;

        (*((void (**)(char *, uint64_t))v100 + 1))(v69, v131);
      }
      else
      {
        v118 = sub_23BB891AC();
        v119 = sub_23BB8ABD4();
        if (os_log_type_enabled(v118, v119))
        {
          v120 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v120 = 0;
          _os_log_impl(&dword_23B979000, v118, v119, "MessagePayload: Couldn't read zippedData", v120, 2u);
          MEMORY[0x24260D9B4](v120, -1, -1);
        }

        (*((void (**)(char *, uint64_t))v100 + 1))(v69, v156);
      }
      v132 = v158;
      v133 = *(void (**)(char *, uint64_t))(v157 + 8);
      v133(v101, v158);
      v133(v150, v132);
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v157 + 8))(v101, v35);
  }
  v114 = sub_23BB891AC();
  v115 = sub_23BB8ABD4();
  if (os_log_type_enabled(v114, v115))
  {
    v116 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v116 = 0;
    _os_log_impl(&dword_23B979000, v114, v115, "MessagePayload: Couldn't read zippedString", v116, 2u);
    v117 = v116;
    v99 = v156;
    MEMORY[0x24260D9B4](v117, -1, -1);
  }

  (*((void (**)(char *, uint64_t))v100 + 1))(v69, v99);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v150, v158);
LABEL_31:
  (*(void (**)(char *, uint64_t))(v141 + 8))(v142, v143);
  v60 = v155;
LABEL_32:
  v93 = type metadata accessor for MessagePayload(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v60, 1, 1, v93);
}

uint64_t MessagePayload.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  char *v63;
  char *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70[2];

  v68 = a1;
  v70[1] = *(id *)MEMORY[0x24BDAC8D0];
  v67 = type metadata accessor for MessagePayload(0);
  MEMORY[0x24BDAC7A8](v67, v2);
  v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v57 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23BB8878C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88660();
  swift_allocObject();
  sub_23BB88654();
  type metadata accessor for MessagePayload.ContentV0(0);
  sub_23B97D0C8(&qword_256A5D968, type metadata accessor for MessagePayload.ContentV0, (uint64_t)&unk_23BB90860);
  v18 = sub_23BB88648();
  v64 = v8;
  v65 = v12;
  v62 = (uint8_t *)v1;
  v63 = v4;
  v66 = v14;
  v30 = v18;
  v32 = v31;
  swift_release();
  v33 = (void *)sub_23BB88858();
  v70[0] = 0;
  v34 = objc_msgSend(v33, sel_compressedDataUsingAlgorithm_error_, 3, v70);

  if (v34)
  {
    v59 = v30;
    v60 = v32;
    v61 = v13;
    v35 = v70[0];
    v36 = objc_msgSend(v34, sel_base64EncodedStringWithOptions_, 0);
    sub_23BB8A7B4();

    v37 = v17;
    sub_23BB88780();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D970);
    sub_23BB88714();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_23BB8FEC0;
    sub_23BB886F0();
    sub_23BB886F0();
    swift_bridgeObjectRelease();
    sub_23BB8872C();
    v38 = (uint64_t)v65;
    sub_23BB88744();
    v39 = sub_23BB8884C();
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39) == 1)
    {
      v58 = v34;
      sub_23B989D60(v38, &qword_256A599B8);
      if (qword_256A58E00 != -1)
        swift_once();
      v41 = sub_23BB891C4();
      __swift_project_value_buffer(v41, (uint64_t)qword_256A73E80);
      v42 = (uint64_t)v64;
      sub_23B989CE8((uint64_t)v62, (uint64_t)v64, type metadata accessor for MessagePayload);
      v43 = sub_23BB891AC();
      v44 = sub_23BB8ABD4();
      v45 = os_log_type_enabled(v43, v44);
      v46 = (uint64_t)v63;
      if (v45)
      {
        v47 = (uint8_t *)swift_slowAlloc();
        v65 = (void *)swift_slowAlloc();
        v70[0] = v65;
        *(_DWORD *)v47 = 136315138;
        v62 = v47 + 4;
        sub_23B989CE8(v42, v46, type metadata accessor for MessagePayload);
        v48 = sub_23BB8A7D8();
        v69 = sub_23BB7B69C(v48, v49, (uint64_t *)v70);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        sub_23B989D9C(v42, type metadata accessor for MessagePayload);
        _os_log_impl(&dword_23B979000, v43, v44, "MessagePayload: Can't create URL: %s", v47, 0xCu);
        v50 = v65;
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v50, -1, -1);
        MEMORY[0x24260D9B4](v47, -1, -1);
        sub_23B9BDAD0(v59, v60);

      }
      else
      {
        sub_23B9BDAD0(v59, v60);

        sub_23B989D9C(v42, type metadata accessor for MessagePayload);
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v61);
      v55 = v68;
      v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
      v56 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v66 + 8))(v17, v61);
      sub_23B9BDAD0(v59, v60);

      v53 = v68;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v68, v38, v39);
      v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
      v55 = v53;
      v56 = 0;
    }
    return v54(v55, v56, 1, v39);
  }
  else
  {
    v51 = v70[0];
    v52 = (void *)sub_23BB887C8();

    swift_willThrow();
    sub_23B9BDAD0(v30, v32);
    if (qword_256A58E00 != -1)
      swift_once();
    v19 = sub_23BB891C4();
    __swift_project_value_buffer(v19, (uint64_t)qword_256A73E80);
    v20 = v52;
    v21 = v52;
    v22 = sub_23BB891AC();
    v23 = sub_23BB8ABD4();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      v26 = v52;
      v27 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v70[0] = v27;
      sub_23BB8ACB8();
      *v25 = v27;

      _os_log_impl(&dword_23B979000, v22, v23, "MessagePayload: Can't create URL: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v25, -1, -1);
      MEMORY[0x24260D9B4](v24, -1, -1);

    }
    else
    {

    }
    v28 = sub_23BB8884C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v68, 1, 1, v28);
  }
}

uint64_t type metadata accessor for MessagePayload(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5D9D0);
}

uint64_t sub_23BA3333C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessagePayload.ContentV0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for MessagePayload(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  v4 = type metadata accessor for MessagePayload.ContentV0(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = *(int *)(v4 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(v6 + 28);
    v17 = a1 + v16;
    v18 = (uint64_t)a2 + v16;
    v19 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 48) = v19;
    *(_OWORD *)(v17 + 64) = *(_OWORD *)(v18 + 64);
    *(_BYTE *)(v17 + 80) = *(_BYTE *)(v18 + 80);
    v20 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v20;
    *(_BYTE *)(a1 + *(int *)(v6 + 32)) = *((_BYTE *)a2 + *(int *)(v6 + 32));
  }
  return a1;
}

uint64_t destroy for MessagePayload(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for MessagePayload.ContentV0(0) + 24);
  v3 = sub_23BB88984();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

uint64_t initializeWithCopy for MessagePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  v6 = v5[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = v5[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
  *(_BYTE *)(v14 + 80) = *(_BYTE *)(v15 + 80);
  v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  return a1;
}

uint64_t assignWithCopy for MessagePayload(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  v5 = v4[6];
  v6 = (void *)(a1 + v5);
  v7 = (void *)(a2 + v5);
  v8 = sub_23BB88984();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v6, v7, v8);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
LABEL_7:
  v14 = v4[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  v18 = *(_OWORD *)(v16 + 32);
  v19 = *(_OWORD *)(v16 + 48);
  v20 = *(_OWORD *)(v16 + 64);
  *(_BYTE *)(v15 + 80) = *(_BYTE *)(v16 + 80);
  *(_OWORD *)(v15 + 48) = v19;
  *(_OWORD *)(v15 + 64) = v20;
  *(_OWORD *)(v15 + 32) = v18;
  *(_BYTE *)(a1 + v4[8]) = *(_BYTE *)(a2 + v4[8]);
  return a1;
}

uint64_t initializeWithTake for MessagePayload(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  v5 = v4[6];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_23BB88984();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v11 = v4[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v14;
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_BYTE *)(v12 + 80) = *(_BYTE *)(v13 + 80);
  v15 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v15;
  *(_BYTE *)(a1 + v4[8]) = *(_BYTE *)(a2 + v4[8]);
  return a1;
}

uint64_t assignWithTake for MessagePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = (int *)type metadata accessor for MessagePayload.ContentV0(0);
  v6 = v5[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = v5[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
  v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  *(_BYTE *)(a1 + v5[8]) = *(_BYTE *)(a2 + v5[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagePayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA33A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessagePayload.ContentV0(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MessagePayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA33ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MessagePayload.ContentV0(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23BA33AFC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MessagePayload.ContentV0(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MessagePayload.Version(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BA33BB0 + 4 * byte_23BB906E7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BA33BD0 + 4 * byte_23BB906EC[v4]))();
}

_BYTE *sub_23BA33BB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BA33BD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA33BD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA33BE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA33BE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA33BF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.Version()
{
  return &type metadata for MessagePayload.Version;
}

_QWORD *sub_23BA33C0C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v8 = a3[6];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_23BB88984();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    v17 = a3[8];
    v18 = (char *)v4 + v16;
    v19 = (uint64_t)a2 + v16;
    v20 = *(_OWORD *)(v19 + 48);
    *((_OWORD *)v18 + 2) = *(_OWORD *)(v19 + 32);
    *((_OWORD *)v18 + 3) = v20;
    *((_OWORD *)v18 + 4) = *(_OWORD *)(v19 + 64);
    v18[80] = *(_BYTE *)(v19 + 80);
    v21 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v21;
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
  }
  return v4;
}

uint64_t sub_23BA33D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_23BA33DCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
  v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  return a1;
}

uint64_t sub_23BA33EE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  v19 = *(_OWORD *)(v17 + 32);
  v20 = *(_OWORD *)(v17 + 48);
  v21 = *(_OWORD *)(v17 + 64);
  *(_BYTE *)(v16 + 80) = *(_BYTE *)(v17 + 80);
  *(_OWORD *)(v16 + 48) = v20;
  *(_OWORD *)(v16 + 64) = v21;
  *(_OWORD *)(v16 + 32) = v19;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_23BA34054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  v16 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
  *(_BYTE *)(v14 + 80) = *(_BYTE *)(v15 + 80);
  v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t sub_23BA3415C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[7];
  v17 = a3[8];
  v18 = a1 + v16;
  v19 = a2 + v16;
  v20 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(v19 + 80);
  v21 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v21;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t sub_23BA342B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA342C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23BA34344()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA34350(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_23BA343C8()
{
  unint64_t v0;

  sub_23BA19EA8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_23BA3445C()
{
  unint64_t result;

  result = qword_256A5DAA8;
  if (!qword_256A5DAA8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90838, &type metadata for MessagePayload.Version);
    atomic_store(result, (unint64_t *)&qword_256A5DAA8);
  }
  return result;
}

unint64_t sub_23BA344A0()
{
  unint64_t result;

  result = qword_256A5DAB8;
  if (!qword_256A5DAB8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90A24, &type metadata for MessagePayload.ContentV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DAB8);
  }
  return result;
}

unint64_t sub_23BA344E4()
{
  unint64_t result;

  result = qword_256A5DAC0;
  if (!qword_256A5DAC0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB909FC, &type metadata for MessagePayload.ContentV0.Kind);
    atomic_store(result, (unint64_t *)&qword_256A5DAC0);
  }
  return result;
}

unint64_t sub_23BA34528()
{
  unint64_t result;

  result = qword_256A5DAC8;
  if (!qword_256A5DAC8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB909D4, &type metadata for MessagePayload.ContentV0.Location);
    atomic_store(result, (unint64_t *)&qword_256A5DAC8);
  }
  return result;
}

unint64_t sub_23BA3456C()
{
  unint64_t result;

  result = qword_256A5DAD8;
  if (!qword_256A5DAD8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB909AC, &type metadata for MessagePayload.ContentV0.Kind);
    atomic_store(result, (unint64_t *)&qword_256A5DAD8);
  }
  return result;
}

unint64_t sub_23BA345B0()
{
  unint64_t result;

  result = qword_256A5DAE0;
  if (!qword_256A5DAE0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90984, &type metadata for MessagePayload.ContentV0.Location);
    atomic_store(result, (unint64_t *)&qword_256A5DAE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ContentV0.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23BA34640 + 4 * byte_23BB906F6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23BA34674 + 4 * byte_23BB906F1[v4]))();
}

uint64_t sub_23BA34674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA3467C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA34684);
  return result;
}

uint64_t sub_23BA34690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA34698);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23BA3469C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA346A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ContentV0.Location(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ContentV0.Location(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Location()
{
  return &type metadata for MessagePayload.ContentV0.Location;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ContentV0.Kind(uint64_t a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *(unsigned __int8 *)(a1 + 1);
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23BA3478C + 4 * byte_23BB906FB[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ContentV0.Kind(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23BA34848 + 4 * byte_23BB90705[v5]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_23BA3487C + 4 * byte_23BB90700[v5]))();
}

uint64_t sub_23BA3487C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BA34884(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x23BA3488CLL);
  return result;
}

uint64_t sub_23BA34898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x23BA348A0);
  *(_BYTE *)(result + 1) = a2 + 2;
  return result;
}

uint64_t sub_23BA348A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BA348AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_23BA348B8(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 1);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_23BA348D4(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind()
{
  return &type metadata for MessagePayload.ContentV0.Kind;
}

unint64_t sub_23BA3490C()
{
  unint64_t result;

  result = qword_256A5DAE8;
  if (!qword_256A5DAE8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9095C, &type metadata for MessagePayload.ContentV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DAE8);
  }
  return result;
}

unint64_t sub_23BA34954()
{
  unint64_t result;

  result = qword_256A5DAF0;
  if (!qword_256A5DAF0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB908CC, &type metadata for MessagePayload.ContentV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DAF0);
  }
  return result;
}

unint64_t sub_23BA3499C()
{
  unint64_t result;

  result = qword_256A5DAF8;
  if (!qword_256A5DAF8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB908F4, &type metadata for MessagePayload.ContentV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DAF8);
  }
  return result;
}

uint64_t sub_23BA349E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72756F48656E6FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796144664F646E65 && a2 == 0xE800000000000000 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696E696665646E69 && a2 == 0xEC000000796C6574 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x636974617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23BA34BA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD v28[12];
  _QWORD *v29;
  uint64_t v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DBD0);
  v28[10] = *(_QWORD *)(v2 - 8);
  v28[11] = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v28[9] = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DBD8);
  v28[5] = *(_QWORD *)(v5 - 8);
  v28[6] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v28[8] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DBE0);
  v28[3] = *(_QWORD *)(v8 - 8);
  v28[4] = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v28[7] = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DBE8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DBF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_23BA36620();
  v22 = v30;
  sub_23BB8B288();
  if (!v22)
  {
    v28[1] = v11;
    v28[2] = v15;
    v28[0] = v12;
    v30 = v17;
    v23 = sub_23BB8B09C();
    if (*(_QWORD *)(v23 + 16) == 1)
      __asm { BR              X9 }
    v24 = sub_23BB8AE68();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59AC8);
    *v26 = &type metadata for MessagePayload.ContentV0.Kind.ShareDuration;
    sub_23BB8B048();
    sub_23BB8AE5C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v16);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v16;
}

void sub_23BA34ECC()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_23BA366EC();
  sub_23BB8B03C();
  if (!v0)
    JUMPOUT(0x23BA34FA0);
  JUMPOUT(0x23BA34E80);
}

void sub_23BA34F10()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_23BA366A8();
  sub_23BB8B03C();
  if (!v0)
    JUMPOUT(0x23BA34F50);
  JUMPOUT(0x23BA34E80);
}

void sub_23BA34F5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_23BA36664();
  sub_23BB8B03C();
  if (!v0)
    JUMPOUT(0x23BA34FA0);
  JUMPOUT(0x23BA34E80);
}

uint64_t sub_23BA34FCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6572616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BA350B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65526D6F72467369 && a2 == 0xED00007473657571)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23BA351C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  char v38;
  unsigned __int8 v39;
  char v40;
  char v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB00);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB10);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v35 = a1;
  v16 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23BA35EC4();
  v17 = v36;
  sub_23BB8B288();
  if (!v17)
  {
    v18 = v34;
    v31 = v6;
    v36 = v11;
    v19 = sub_23BB8B09C();
    if (*(_QWORD *)(v19 + 16) == 1)
    {
      v20 = v36;
      if ((*(_BYTE *)(v19 + 32) & 1) != 0)
      {
        v41 = 1;
        sub_23BA35F08();
        sub_23BB8B03C();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v33);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v10);
        v16 = 512;
      }
      else
      {
        v24 = v36;
        v40 = 0;
        sub_23BA35F4C();
        sub_23BB8B03C();
        v38 = 0;
        sub_23BA35F90();
        v25 = v9;
        v26 = v5;
        sub_23BB8B090();
        v28 = v39;
        v37 = 1;
        v29 = sub_23BB8B078();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v10);
        if ((v29 & 1) != 0)
          v30 = 256;
        else
          v30 = 0;
        v16 = v30 | v28;
      }
    }
    else
    {
      v21 = sub_23BB8AE68();
      swift_allocError();
      v23 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59AC8);
      *v23 = &type metadata for MessagePayload.ContentV0.Kind;
      v16 = (uint64_t)v14;
      sub_23BB8B048();
      sub_23BB8AE5C();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v10);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v16;
}

uint64_t sub_23BA35598(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023BB9A6B0 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023BB9A6D0 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657372756F63 && a2 == 0xE600000000000000 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6341657372756F63 && a2 == 0xEE00796361727563 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6363416465657073 && a2 == 0xED00007963617275 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_23BA359BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DB38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23BA35FD4();
  sub_23BB8B288();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v43 = 0;
  sub_23BB8B084();
  v11 = v10;
  v42 = 1;
  sub_23BB8B084();
  v13 = v12;
  v41 = 2;
  sub_23BB8B084();
  v15 = v14;
  v40 = 3;
  sub_23BB8B084();
  v17 = v16;
  v39 = 4;
  sub_23BB8B084();
  v19 = v18;
  v38 = 5;
  sub_23BB8B084();
  v21 = v20;
  v37 = 6;
  sub_23BB8B084();
  v23 = v22;
  v36 = 7;
  sub_23BB8B084();
  v33 = v24;
  v35 = 8;
  sub_23BB8B084();
  v26 = v25;
  v34 = 9;
  sub_23BB8B084();
  v32 = v27;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v11;
  a2[1] = v13;
  a2[2] = v15;
  a2[3] = v17;
  a2[4] = v19;
  a2[5] = v21;
  v29 = v33;
  a2[6] = v23;
  a2[7] = v29;
  v30 = v32;
  a2[8] = v26;
  a2[9] = v30;
  return result;
}

uint64_t sub_23BA35C88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C6C616974696E69 && a2 == 0xEF6E6F697461636FLL || (sub_23BB8B1A4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65526D6F72467369 && a2 == 0xEC000000646E6573)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23BB8B1A4();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_23BA35EC4()
{
  unint64_t result;

  result = qword_256A5DB18;
  if (!qword_256A5DB18)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90ED0, &type metadata for MessagePayload.ContentV0.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB18);
  }
  return result;
}

unint64_t sub_23BA35F08()
{
  unint64_t result;

  result = qword_256A5DB20;
  if (!qword_256A5DB20)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90E80, &type metadata for MessagePayload.ContentV0.Kind.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB20);
  }
  return result;
}

unint64_t sub_23BA35F4C()
{
  unint64_t result;

  result = qword_256A5DB28;
  if (!qword_256A5DB28)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90E30, &type metadata for MessagePayload.ContentV0.Kind.ShareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB28);
  }
  return result;
}

unint64_t sub_23BA35F90()
{
  unint64_t result;

  result = qword_256A5DB30;
  if (!qword_256A5DB30)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90E08, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration);
    atomic_store(result, (unint64_t *)&qword_256A5DB30);
  }
  return result;
}

unint64_t sub_23BA35FD4()
{
  unint64_t result;

  result = qword_256A5DB40;
  if (!qword_256A5DB40)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90DB8, &type metadata for MessagePayload.ContentV0.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB40);
  }
  return result;
}

unint64_t sub_23BA36018()
{
  unint64_t result;

  result = qword_256A5DB60;
  if (!qword_256A5DB60)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90D90, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration);
    atomic_store(result, (unint64_t *)&qword_256A5DB60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MessagePayload.ContentV0.Location.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagePayload.ContentV0.Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23BA36138 + 4 * byte_23BB90713[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23BA3616C + 4 * byte_23BB9070E[v4]))();
}

uint64_t sub_23BA3616C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA36174(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA3617CLL);
  return result;
}

uint64_t sub_23BA36188(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA36190);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23BA36194(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA3619C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Location.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Location.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.CodingKeys;
}

uint64_t _s12FindMyUICore14MessagePayloadV9ContentV0V4KindO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BA36218 + 4 * byte_23BB9071D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BA3624C + 4 * byte_23BB90718[v4]))();
}

uint64_t sub_23BA3624C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA36254(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA3625CLL);
  return result;
}

uint64_t sub_23BA36268(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA36270);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BA36274(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA3627C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.RequestCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.RequestCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration;
}

unint64_t sub_23BA362C4()
{
  unint64_t result;

  result = qword_256A5DB70;
  if (!qword_256A5DB70)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90AF0, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration);
    atomic_store(result, (unint64_t *)&qword_256A5DB70);
  }
  return result;
}

unint64_t sub_23BA3630C()
{
  unint64_t result;

  result = qword_256A5DB78;
  if (!qword_256A5DB78)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90BF8, &type metadata for MessagePayload.ContentV0.Kind.ShareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB78);
  }
  return result;
}

unint64_t sub_23BA36354()
{
  unint64_t result;

  result = qword_256A5DB80;
  if (!qword_256A5DB80)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90CB0, &type metadata for MessagePayload.ContentV0.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB80);
  }
  return result;
}

unint64_t sub_23BA3639C()
{
  unint64_t result;

  result = qword_256A5DB88;
  if (!qword_256A5DB88)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90D68, &type metadata for MessagePayload.ContentV0.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB88);
  }
  return result;
}

unint64_t sub_23BA363E4()
{
  unint64_t result;

  result = qword_256A5DB90;
  if (!qword_256A5DB90)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90CD8, &type metadata for MessagePayload.ContentV0.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB90);
  }
  return result;
}

unint64_t sub_23BA3642C()
{
  unint64_t result;

  result = qword_256A5DB98;
  if (!qword_256A5DB98)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90D00, &type metadata for MessagePayload.ContentV0.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DB98);
  }
  return result;
}

unint64_t sub_23BA36474()
{
  unint64_t result;

  result = qword_256A5DBA0;
  if (!qword_256A5DBA0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90B68, &type metadata for MessagePayload.ContentV0.Kind.ShareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DBA0);
  }
  return result;
}

unint64_t sub_23BA364BC()
{
  unint64_t result;

  result = qword_256A5DBA8;
  if (!qword_256A5DBA8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90B90, &type metadata for MessagePayload.ContentV0.Kind.ShareCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DBA8);
  }
  return result;
}

unint64_t sub_23BA36504()
{
  unint64_t result;

  result = qword_256A5DBB0;
  if (!qword_256A5DBB0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90B18, &type metadata for MessagePayload.ContentV0.Kind.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DBB0);
  }
  return result;
}

unint64_t sub_23BA3654C()
{
  unint64_t result;

  result = qword_256A5DBB8;
  if (!qword_256A5DBB8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90B40, &type metadata for MessagePayload.ContentV0.Kind.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DBB8);
  }
  return result;
}

unint64_t sub_23BA36594()
{
  unint64_t result;

  result = qword_256A5DBC0;
  if (!qword_256A5DBC0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90C20, &type metadata for MessagePayload.ContentV0.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DBC0);
  }
  return result;
}

unint64_t sub_23BA365DC()
{
  unint64_t result;

  result = qword_256A5DBC8;
  if (!qword_256A5DBC8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90C48, &type metadata for MessagePayload.ContentV0.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DBC8);
  }
  return result;
}

unint64_t sub_23BA36620()
{
  unint64_t result;

  result = qword_256A5DBF8;
  if (!qword_256A5DBF8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB912CC, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DBF8);
  }
  return result;
}

unint64_t sub_23BA36664()
{
  unint64_t result;

  result = qword_256A5DC00;
  if (!qword_256A5DC00)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9127C, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.StaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC00);
  }
  return result;
}

unint64_t sub_23BA366A8()
{
  unint64_t result;

  result = qword_256A5DC08;
  if (!qword_256A5DC08)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9122C, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.IndefinitelyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC08);
  }
  return result;
}

unint64_t sub_23BA366EC()
{
  unint64_t result;

  result = qword_256A5DC10;
  if (!qword_256A5DC10)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB911DC, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.EndOfDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC10);
  }
  return result;
}

unint64_t sub_23BA36730()
{
  unint64_t result;

  result = qword_256A5DC18;
  if (!qword_256A5DC18)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9118C, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.OneHourCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC18);
  }
  return result;
}

uint64_t _s12FindMyUICore14MessagePayloadV9ContentV0V4KindO13ShareDurationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23BA367C0 + 4 * byte_23BB90727[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23BA367F4 + 4 * byte_23BB90722[v4]))();
}

uint64_t sub_23BA367F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA367FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA36804);
  return result;
}

uint64_t sub_23BA36810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA36818);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23BA3681C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA36824(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.OneHourCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.OneHourCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.EndOfDayCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.EndOfDayCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.IndefinitelyCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.IndefinitelyCodingKeys;
}

ValueMetadata *type metadata accessor for MessagePayload.ContentV0.Kind.ShareDuration.StaticCodingKeys()
{
  return &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.StaticCodingKeys;
}

unint64_t sub_23BA36884()
{
  unint64_t result;

  result = qword_256A5DC48;
  if (!qword_256A5DC48)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB91164, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC48);
  }
  return result;
}

unint64_t sub_23BA368CC()
{
  unint64_t result;

  result = qword_256A5DC50;
  if (!qword_256A5DC50)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB91084, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.OneHourCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC50);
  }
  return result;
}

unint64_t sub_23BA36914()
{
  unint64_t result;

  result = qword_256A5DC58;
  if (!qword_256A5DC58)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB910AC, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.OneHourCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC58);
  }
  return result;
}

unint64_t sub_23BA3695C()
{
  unint64_t result;

  result = qword_256A5DC60;
  if (!qword_256A5DC60)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB91034, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.EndOfDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC60);
  }
  return result;
}

unint64_t sub_23BA369A4()
{
  unint64_t result;

  result = qword_256A5DC68;
  if (!qword_256A5DC68)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9105C, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.EndOfDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC68);
  }
  return result;
}

unint64_t sub_23BA369EC()
{
  unint64_t result;

  result = qword_256A5DC70;
  if (!qword_256A5DC70)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90FE4, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.IndefinitelyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC70);
  }
  return result;
}

unint64_t sub_23BA36A34()
{
  unint64_t result;

  result = qword_256A5DC78;
  if (!qword_256A5DC78)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9100C, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.IndefinitelyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC78);
  }
  return result;
}

unint64_t sub_23BA36A7C()
{
  unint64_t result;

  result = qword_256A5DC80;
  if (!qword_256A5DC80)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90F94, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.StaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC80);
  }
  return result;
}

unint64_t sub_23BA36AC4()
{
  unint64_t result;

  result = qword_256A5DC88;
  if (!qword_256A5DC88)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB90FBC, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.StaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC88);
  }
  return result;
}

unint64_t sub_23BA36B0C()
{
  unint64_t result;

  result = qword_256A5DC90;
  if (!qword_256A5DC90)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB910D4, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC90);
  }
  return result;
}

unint64_t sub_23BA36B54()
{
  unint64_t result;

  result = qword_256A5DC98;
  if (!qword_256A5DC98)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB910FC, &type metadata for MessagePayload.ContentV0.Kind.ShareDuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256A5DC98);
  }
  return result;
}

uint64_t sub_23BA36BA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v3 = sub_23BB88C78();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return MEMORY[0x24BEE4AF8];
  v14[1] = v1;
  v15 = MEMORY[0x24BEE4AF8];
  sub_23BB006A8(0, v8, 0);
  v9 = v15;
  v10 = a1 + 40;
  do
  {
    swift_bridgeObjectRetain();
    sub_23BB88C6C();
    v15 = v9;
    v12 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    if (v12 >= v11 >> 1)
    {
      sub_23BB006A8(v11 > 1, v12 + 1, 1);
      v9 = v15;
    }
    v10 += 24;
    *(_QWORD *)(v9 + 16) = v12 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, v7, v3);
    --v8;
  }
  while (v8);
  return v9;
}

uint64_t SessionLive.__allocating_init()()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23BA36D68;
  return SessionLive.init()();
}

uint64_t sub_23BA36D68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t SessionLive.init()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  v1[3] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A780);
  v1[4] = swift_task_alloc();
  v2 = sub_23BB88AE0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = swift_task_alloc();
  v1[5] = v4;
  sub_23BB88AF8();
  v1[6] = swift_task_alloc();
  swift_defaultActor_initialize();
  if (qword_256A58E00 != -1)
    swift_once();
  v5 = sub_23BB891C4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256A73E80);
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v13 = v2;
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v1[2] = sub_23BB7B69C(0x292874696E69, 0xE600000000000000, &v14);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v6, v7, "SessionLive: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    v10 = v8;
    v2 = v13;
    MEMORY[0x24260D9B4](v10, -1, -1);
  }

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v4, *MEMORY[0x24BE31D68], v2);
  sub_23BB88B04();
  sub_23BB88D8C();
  swift_allocObject();
  v11 = (_QWORD *)swift_task_alloc();
  v1[7] = v11;
  *v11 = v1;
  v11[1] = sub_23BA3703C;
  return sub_23BB88D98();
}

uint64_t sub_23BA3703C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 32);
  v5 = *(_QWORD **)(*v1 + 24);
  v8 = *v1;
  swift_task_dealloc();
  v5[14] = a1;
  sub_23BB88B34();
  v6 = sub_23BB889E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v5[15] = sub_23BB88B28();
  sub_23BB88B1C();
  swift_allocObject();
  v5[16] = sub_23BB88B10();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v8 + 8))(*(_QWORD *)(v3 + 24));
}

uint64_t SessionLive.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = v0;
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v8 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_23BB7B69C(0x74696E696564, 0xE600000000000000, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "SessionLive: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }

  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t SessionLive.__deallocating_deinit()
{
  SessionLive.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23BA372C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE10);
  v2[8] = swift_task_alloc();
  v3 = sub_23BB88C0C();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA37354()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[13] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[5] = sub_23BB7B69C(0xD00000000000001DLL, 0x800000023BB9A8E0, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[14] = v6;
  *v6 = v0;
  v6[1] = sub_23BA37504;
  return sub_23BB88D38();
}

uint64_t sub_23BA37504()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23BA37570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  __int16 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v5, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v10 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_23BB7B69C(0xD00000000000001DLL, 0x800000023BB9A8E0, &v26);
    sub_23BB8ACB8();
    *(_WORD *)(v10 + 12) = 2080;
    sub_23BA44AD8(&qword_256A5DE18, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE32060], MEMORY[0x24BE32080]);
    v11 = sub_23BB8B150();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v11, v12, &v26);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    v13 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v13(v8, v9);
    _os_log_impl(&dword_23B979000, v6, v7, "SessionLive: didReceive %s - %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v25, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8);
    v13(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  }

  v14 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 48);
  v17 = sub_23BB88BF4();
  v19 = v18;
  v20 = sub_23BB88BE8();
  v21 = sub_23BB88C00();
  v13(v14, v15);
  if ((v21 & 1) != 0)
    v22 = 256;
  else
    v22 = 0;
  *(_QWORD *)v16 = v17;
  *(_QWORD *)(v16 + 8) = v19;
  *(_WORD *)(v16 + 16) = v22 & 0xFFFE | v20 & 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA377FC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 56))(v1, 1, 1, *(_QWORD *)(v0 + 72));
  sub_23B989D60(v1, &qword_256A5DE10);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000001DLL, 0x800000023BB9A8E0, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: didReceive %s - no activeLocationSharingDevice ", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_WORD *)(v6 + 16) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA37990()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_23BA379A8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[5] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[3] = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9A9F0, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[6] = v6;
  *v6 = v0;
  v6[1] = sub_23BA37B50;
  return sub_23BB88D50();
}

uint64_t sub_23BA37B50(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 60) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(0);
  else
    return swift_task_switch();
}

uint64_t sub_23BA37BC8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(unsigned __int8 *)(v0 + 60);
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v7 = v5;
    *(_DWORD *)v4 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9A9F0, &v7);
    sub_23BB8ACB8();
    *(_WORD *)(v4 + 12) = 1024;
    *(_DWORD *)(v0 + 56) = v3;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive %s - %{BOOL}d", (uint8_t *)v4, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 60));
}

uint64_t sub_23BA37D2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[4] = a1;
  v2[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v2[6] = swift_task_alloc();
  v2[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE58);
  v2[8] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE60);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE68);
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
  v2[17] = v6;
  v2[18] = *(_QWORD *)(v6 - 8);
  v2[19] = swift_task_alloc();
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE70) - 8);
  v2[20] = v7;
  v2[21] = *(_QWORD *)(v7 + 64);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA37E90()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v14 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[3] = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9AA10, &v14);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = v0[23];
  v7 = v0[24];
  v9 = v0[15];
  v8 = v0[16];
  v10 = v0[14];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE78);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  *(_QWORD *)(swift_task_alloc() + 16) = v7;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v8, *MEMORY[0x24BEE6A10], v10);
  sub_23BB8AA6C();
  swift_task_dealloc();
  sub_23B989EFC(v7, v6, &qword_256A5DE70);
  v12 = (_QWORD *)swift_task_alloc();
  v0[26] = v12;
  *v12 = v0;
  v12[1] = sub_23BA380E8;
  return sub_23BB88D68();
}

uint64_t sub_23BA380E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA3814C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_23BA44D98(&qword_256A5DE88, &qword_256A5DE58);
  sub_23BB8B144();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v26 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9AA10, &v26);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 176);
  v18 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 192);
  v22 = *(_QWORD *)(v0 + 144);
  v23 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = *(_QWORD *)(v0 + 104);
  v20 = v5;
  v10 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  v19 = v12;
  v21 = *(_QWORD *)(v0 + 32);
  v13 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v7, v8, v11);
  sub_23B989EFC(v5, v6, &qword_256A5DE70);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v9 + *(unsigned __int8 *)(v18 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v16 + v14, v7, v11);
  sub_23B990D24(v6, v16 + v15, &qword_256A5DE70);
  sub_23B989F54(v19, (uint64_t)&unk_256A5DE98, v16);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v11);
  sub_23B989D60(v20, &qword_256A5DE70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v24, v23);
  sub_23B989D60(v25, &qword_256A5DE70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3848C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 136);
  sub_23B989D60(*(_QWORD *)(v0 + 184), &qword_256A5DE70);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_23B989D60(v1, &qword_256A5DE70);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA38574(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_23BB88C0C();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE10);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v4 = sub_23BB88BAC();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA38630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int16 v25;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x24BE31F88])
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 96))(v5, *(_QWORD *)(v0 + 72));
    sub_23B990D24(v5, v6, &qword_256A5DE10);
    sub_23B989EFC(v6, v7, &qword_256A5DE10);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    v11 = *(_QWORD *)(v0 + 64);
    if (v10 == 1)
    {
      v12 = *(_QWORD *)(v0 + 16);
      sub_23B989D60(*(_QWORD *)(v0 + 64), &qword_256A5DE10);
      *(_QWORD *)v12 = 0;
      *(_QWORD *)(v12 + 8) = 0;
      *(_DWORD *)(v12 + 15) = 0;
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 48);
      v18 = *(_QWORD *)(v0 + 32);
      v19 = *(_QWORD *)(v0 + 40);
      v20 = *(_QWORD *)(v0 + 16);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v17, *(_QWORD *)(v0 + 56), v18);
      v21 = sub_23BB88BF4();
      v23 = v22;
      v24 = sub_23BB88BE8();
      if ((sub_23BB88C00() & 1) != 0)
        v25 = 256;
      else
        v25 = 0;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      sub_23B989D60(v11, &qword_256A5DE10);
      *(_QWORD *)v20 = v21;
      *(_QWORD *)(v20 + 8) = v23;
      *(_BYTE *)(v20 + 18) = 0;
      *(_WORD *)(v20 + 16) = v25 & 0xFFFE | v24 & 1;
    }
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(unsigned __int8 **)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 16);
    if (v4 == *MEMORY[0x24BE31F80])
    {
      (*(void (**)(_QWORD, uint64_t))(v13 + 96))(*(_QWORD *)(v0 + 88), v15);
      *(_QWORD *)v16 = *v14;
      *(_QWORD *)(v16 + 8) = 0;
      *(_BYTE *)(v16 + 18) = 1;
      *(_WORD *)(v16 + 16) = 0;
    }
    else
    {
      *(_QWORD *)v16 = 0;
      *(_QWORD *)(v16 + 8) = 0;
      *(_BYTE *)(v16 + 18) = 2;
      *(_WORD *)(v16 + 16) = 0;
      (*(void (**)(unsigned __int8 *, uint64_t))(v13 + 8))(v14, v15);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA38838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[15] = a4;
  v5[16] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEA0);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE70);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE58);
  v5[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEA8);
  v5[22] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEB0);
  v5[23] = v6;
  v5[24] = *(_QWORD *)(v6 - 8);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA38940()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;
  uint64_t v9;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[14] = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9AA10, &v9);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: %s - will await", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE60);
  sub_23BB8AF4C();
  sub_23BA44D98(&qword_256A5DE88, &qword_256A5DE58);
  sub_23BB8AAD8();
  sub_23BB8AF64();
  sub_23BB8B12C();
  v8 = (char *)&dword_256A64A20 + dword_256A64A20;
  v6 = (_QWORD *)swift_task_alloc();
  v0[27] = v6;
  *v6 = v0;
  v6[1] = sub_23BA38BA4;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD *))v8)(v0 + 2, 0, 0, v0 + 12);
}

uint64_t sub_23BA38BA4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA38BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(unsigned __int8 *)(v0 + 34) == 255)
  {
    v2 = *(_QWORD *)(v0 + 152);
    v3 = *(_QWORD *)(v0 + 128);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    sub_23B989EFC(v3, v2, &qword_256A5DE70);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE78);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
    v7 = *(_QWORD *)(v0 + 152);
    if (v6 == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 152), &qword_256A5DE70);
    }
    else
    {
      sub_23BB8AA48();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 24);
    v9 = *(unsigned __int16 *)(v0 + 32) | (*(unsigned __int8 *)(v0 + 34) << 16);
    sub_23BA19A94(*(_QWORD *)(v0 + 16), v8, v9, SBYTE2(v9));
    sub_23BA19A94(v1, v8, v9, SBYTE2(v9));
    v10 = sub_23BB891AC();
    v11 = sub_23BB8ABC8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v12 = 136315394;
      *(_QWORD *)(v0 + 88) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9AA10, &v27);
      sub_23BB8ACB8();
      *(_WORD *)(v12 + 12) = 2080;
      *(_QWORD *)(v0 + 40) = v1;
      *(_QWORD *)(v0 + 48) = v8;
      *(_WORD *)(v0 + 56) = v9;
      *(_BYTE *)(v0 + 58) = BYTE2(v9);
      sub_23BA19A94(v1, v8, v9, SBYTE2(v9));
      v13 = sub_23BB8A7D8();
      *(_QWORD *)(v0 + 104) = sub_23BB7B69C(v13, v14, &v27);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23BA44C5C(v1, v8, v9);
      sub_23BA44C5C(v1, v8, v9);
      _os_log_impl(&dword_23B979000, v10, v11, "SessionLive: %s - %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v25, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
    }
    else
    {
      sub_23BA44C5C(v1, v8, v9);
      sub_23BA44C5C(v1, v8, v9);
    }

    v16 = *(_QWORD *)(v0 + 144);
    sub_23B989EFC(*(_QWORD *)(v0 + 128), v16, &qword_256A5DE70);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE78);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
    v21 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 144);
    if (v19 == 1)
    {
      sub_23BA44C5C(v1, v8, v9);
      sub_23B989D60(v20, &qword_256A5DE70);
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEB8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    }
    else
    {
      *(_QWORD *)(v0 + 64) = v1;
      *(_QWORD *)(v0 + 72) = v8;
      *(_WORD *)(v0 + 80) = v9;
      *(_BYTE *)(v0 + 82) = BYTE2(v9);
      sub_23BB8AA3C();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEB8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 0, 1, v23);
    }
    sub_23B989D60(*(_QWORD *)(v0 + 136), &qword_256A5DEA0);
    v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256A64A20 + dword_256A64A20);
    v24 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v24;
    *v24 = v0;
    v24[1] = sub_23BA38BA4;
    return v26(v0 + 16, 0, 0);
  }
}

uint64_t sub_23BA3907C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 33) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  v4 = sub_23BB88AC8();
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA390E0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26[2];

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  v25 = v0;
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v26[0] = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 56) = sub_23BB7B69C(0xD00000000000002ALL, 0x800000023BB9AA40, v26);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s - locationsStream", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (_BYTE *)(swift_bridgeObjectRetain() + 48);
    do
    {
      v9 = *((_QWORD *)v8 - 2);
      v10 = *((_QWORD *)v8 - 1);
      v11 = *v8;
      swift_bridgeObjectRetain_n();
      v12 = sub_23BB891AC();
      v13 = sub_23BB8ABEC();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        v26[0] = v15;
        *(_DWORD *)v14 = 141558275;
        *(_QWORD *)(v14 + 4) = 1752392040;
        *(_WORD *)(v14 + 12) = 2081;
        *(_QWORD *)(v25 + 16) = v9;
        *(_QWORD *)(v25 + 24) = v10;
        *(_BYTE *)(v25 + 32) = v11;
        swift_bridgeObjectRetain();
        v16 = sub_23BB8A7D8();
        *(_QWORD *)(v14 + 14) = sub_23BB7B69C(v16, v17, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23B979000, v12, v13, "SessionLive: locationsStream added: %{private,mask.hash}s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v15, -1, -1);
        MEMORY[0x24260D9B4](v14, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v8 += 24;
      --v7;
    }
    while (v7);
    v0 = v25;
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v25 + 64);
  }
  v19 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(unsigned __int8 *)(v0 + 33);
  *(_QWORD *)(v0 + 112) = sub_23BA36BA4(v6);
  v22 = (unsigned int *)MEMORY[0x24BE31D00];
  if (!v21)
    v22 = (unsigned int *)MEMORY[0x24BE31D08];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v18, *v22, v20);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v23;
  *v23 = v0;
  v23[1] = sub_23BA39464;
  return sub_23BB88D2C();
}

uint64_t sub_23BA39464()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[11] + 8))(v2[12], v2[10]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BA394EC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v6 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD00000000000002ALL, 0x800000023BB9AA40, &v6);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA39634()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA39668(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 33) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  v4 = sub_23BB88AC8();
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA396CC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26[2];

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  v25 = v0;
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v26[0] = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 56) = sub_23BB7B69C(0xD00000000000002FLL, 0x800000023BB9A9C0, v26);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s - locationsStream", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (_BYTE *)(swift_bridgeObjectRetain() + 48);
    do
    {
      v9 = *((_QWORD *)v8 - 2);
      v10 = *((_QWORD *)v8 - 1);
      v11 = *v8;
      swift_bridgeObjectRetain_n();
      v12 = sub_23BB891AC();
      v13 = sub_23BB8ABEC();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = swift_slowAlloc();
        v15 = swift_slowAlloc();
        v26[0] = v15;
        *(_DWORD *)v14 = 141558275;
        *(_QWORD *)(v14 + 4) = 1752392040;
        *(_WORD *)(v14 + 12) = 2081;
        *(_QWORD *)(v25 + 16) = v9;
        *(_QWORD *)(v25 + 24) = v10;
        *(_BYTE *)(v25 + 32) = v11;
        swift_bridgeObjectRetain();
        v16 = sub_23BB8A7D8();
        *(_QWORD *)(v14 + 14) = sub_23BB7B69C(v16, v17, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23B979000, v12, v13, "SessionLive: locationsStream removed: %{private,mask.hash}s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v15, -1, -1);
        MEMORY[0x24260D9B4](v14, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v8 += 24;
      --v7;
    }
    while (v7);
    v0 = v25;
    swift_bridgeObjectRelease();
    v6 = *(_QWORD *)(v25 + 64);
  }
  v19 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 80);
  v21 = *(unsigned __int8 *)(v0 + 33);
  *(_QWORD *)(v0 + 112) = sub_23BA36BA4(v6);
  v22 = (unsigned int *)MEMORY[0x24BE31D00];
  if (!v21)
    v22 = (unsigned int *)MEMORY[0x24BE31D08];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v18, *v22, v20);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v23;
  *v23 = v0;
  v23[1] = sub_23BA39A4C;
  return sub_23BB88CF0();
}

uint64_t sub_23BA39A4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[11] + 8))(v2[12], v2[10]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BA39AD4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v6 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD00000000000002FLL, 0x800000023BB9A9C0, &v6);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA39C1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v2[7] = swift_task_alloc();
  v3 = sub_23BB88AC8();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF48);
  v2[12] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF50);
  v2[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 + 64);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF58);
  v2[18] = v6;
  v2[19] = *(_QWORD *)(v6 - 8);
  v2[20] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB40);
  v2[21] = v7;
  v2[22] = *(_QWORD *)(v7 - 8);
  v2[23] = swift_task_alloc();
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF60) - 8);
  v2[24] = v8;
  v2[25] = *(_QWORD *)(v8 + 64);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA39DA8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v18 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[4] = sub_23BB7B69C(0xD000000000000011, 0x800000023BB9AA90, &v18);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: %s - locationsStream", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v7 = v0[27];
  v6 = v0[28];
  v8 = v0[19];
  v9 = v0[20];
  v10 = v0[18];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  *(_QWORD *)(swift_task_alloc() + 16) = v6;
  v0[30] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF70);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v9, *MEMORY[0x24BEE6A10], v10);
  sub_23BB8AA6C();
  swift_task_dealloc();
  sub_23B989EFC(v6, v7, &qword_256A5DF60);
  v12 = sub_23BB891AC();
  v13 = sub_23BB8ABEC();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v18 = v15;
    *(_DWORD *)v14 = 136315138;
    v0[3] = sub_23BB7B69C(0xD000000000000011, 0x800000023BB9AA90, &v18);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v12, v13, "SessionLive: willCall %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v15, -1, -1);
    MEMORY[0x24260D9B4](v14, -1, -1);
  }

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[9] + 104))(v0[10], *MEMORY[0x24BE31D08], v0[8]);
  v16 = (_QWORD *)swift_task_alloc();
  v0[31] = v16;
  *v16 = v0;
  v16[1] = sub_23BA3A138;
  return sub_23BB88D14();
}

uint64_t sub_23BA3A138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA3A1C4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_23BA44D98(&qword_256A5DF80, &qword_256A5DF48);
  sub_23BB8B144();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v27 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000011, 0x800000023BB9AA90, &v27);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 192);
  v25 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 224);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 136);
  v21 = v5;
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 56);
  v20 = v12;
  v22 = *(_QWORD *)(v0 + 40);
  v13 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v11);
  sub_23B989EFC(v5, v6, &qword_256A5DF60);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = (v10 + *(unsigned __int8 *)(v19 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v17 + v15, v14, v11);
  sub_23B990D24(v6, v17 + v16, &qword_256A5DF60);
  sub_23B989F54(v20, (uint64_t)&unk_256A5DF90, v17);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
  sub_23B989D60(v21, &qword_256A5DF60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v22, v25, v24);
  sub_23B989D60(v26, &qword_256A5DF60);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3A518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 168);
  sub_23B989D60(*(_QWORD *)(v0 + 216), &qword_256A5DF60);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_23B989D60(v1, &qword_256A5DF60);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3A60C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;

  sub_23B989D60(a2, a3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_23BA3A67C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_23BB88C78();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = sub_23BB88E40();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v5 = sub_23BB88BA0();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA3A73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  FindMyUICore::Handle v38;
  FindMyUICore::Handle v39;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == *MEMORY[0x24BE31F40])
  {
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(char **)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 48);
    v32 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 40);
    v34 = v10;
    v12 = *(_QWORD *)(v0 + 16);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 96))(v5, *(_QWORD *)(v0 + 88));
    v13 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFB8) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v32);
    v14 = v13;
    v15 = v11;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v14, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v32);
    v33 = sub_23BA44518(v8);
    v17 = v16;
    v19 = v18;
    LOBYTE(v11) = v20;
    v21._countAndFlagsBits = sub_23BB88C54();
    v38 = Handle.init(rawValue:)(v21);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v34 + 8))(v9, v15, *(_QWORD *)&v38.kind);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v32);
    *(_QWORD *)v12 = v33;
    *(_QWORD *)(v12 + 8) = v17;
    *(_QWORD *)(v12 + 16) = v19;
    *(_QWORD *)(v12 + 24) = v11;
    *(_QWORD *)(v12 + 32) = v35;
    *(_QWORD *)(v12 + 40) = v36;
    *(_BYTE *)(v12 + 48) = v37;
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 88);
    if (v4 == *MEMORY[0x24BE31F38])
    {
      v26 = *(_QWORD *)(v0 + 40);
      v25 = *(_QWORD *)(v0 + 48);
      v27 = *(_QWORD *)(v0 + 32);
      v28 = *(_QWORD *)(v0 + 16);
      (*(void (**)(_QWORD, uint64_t))(v22 + 96))(*(_QWORD *)(v0 + 104), v24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v23, v27);
      v29._countAndFlagsBits = sub_23BB88C54();
      v39 = Handle.init(rawValue:)(v29);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v26 + 8))(v25, v27, *(_QWORD *)&v39.kind);
      *(_OWORD *)v28 = 0u;
      *(_OWORD *)(v28 + 16) = 0u;
      *(_QWORD *)(v28 + 32) = v35;
      *(_QWORD *)(v28 + 40) = v36;
      *(_BYTE *)(v28 + 48) = v37;
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 16);
      *(_BYTE *)(v30 + 48) = 0;
      *(_OWORD *)(v30 + 16) = 0u;
      *(_OWORD *)(v30 + 32) = 0u;
      *(_OWORD *)v30 = 0u;
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t Handle.sessionHandle.getter()
{
  Swift::String v0;

  v0._countAndFlagsBits = sub_23BB88C54();
  return (unint64_t)Handle.init(rawValue:)(v0);
}

uint64_t sub_23BA3A9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[27] = a4;
  v5[28] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF98);
  v5[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF60);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF48);
  v5[33] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFA0);
  v5[34] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFA8);
  v5[35] = v6;
  v5[36] = *(_QWORD *)(v6 - 8);
  v5[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA3AAAC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;
  uint64_t v9;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[38] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[26] = sub_23BB7B69C(0xD000000000000011, 0x800000023BB9AA90, &v9);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: %s - locationsStream - will await", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF50);
  sub_23BB8AF4C();
  sub_23BA44D98(&qword_256A5DF80, &qword_256A5DF48);
  sub_23BB8AAD8();
  sub_23BB8AF64();
  v0[39] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF70);
  sub_23BB8B12C();
  v8 = (char *)&dword_256A64A40 + dword_256A64A40;
  v6 = (_QWORD *)swift_task_alloc();
  v0[40] = v6;
  *v6 = v0;
  v6[1] = sub_23BA3AD1C;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD, _QWORD *))v8)(v0 + 2, 0, 0, v0 + 24);
}

uint64_t sub_23BA3AD1C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA3AD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  NSObject *log;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 56);
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 24);
    v3 = *(void **)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    v31 = *(_QWORD *)(v0 + 48);
    v6 = *(_BYTE *)(v0 + 64);
    sub_23BA44F90(v1, v4, v3);
    swift_bridgeObjectRetain();
    sub_23BA44F90(v1, v4, v3);
    swift_bridgeObjectRetain();
    v7 = sub_23BB891AC();
    v8 = sub_23BB8ABC8();
    v32 = v6;
    v30 = v3;
    if (os_log_type_enabled(v7, v8))
    {
      log = v7;
      v9 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v34 = v29;
      *(_DWORD *)v9 = 136315394;
      *(_QWORD *)(v0 + 184) = sub_23BB7B69C(0xD000000000000011, 0x800000023BB9AA90, &v34);
      sub_23BB8ACB8();
      *(_WORD *)(v9 + 12) = 2080;
      *(_QWORD *)(v0 + 72) = v1;
      *(_QWORD *)(v0 + 80) = v4;
      *(_QWORD *)(v0 + 88) = v3;
      *(_BYTE *)(v0 + 96) = v5;
      *(_QWORD *)(v0 + 104) = v31;
      *(_QWORD *)(v0 + 112) = v2;
      *(_BYTE *)(v0 + 120) = v6;
      sub_23BA44F90(v1, v4, v3);
      swift_bridgeObjectRetain();
      v10 = sub_23BB8A7D8();
      *(_QWORD *)(v0 + 200) = sub_23BB7B69C(v10, v11, &v34);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23BA44FC0(v1, v4, v3, v5, v31, v2);
      sub_23BA44FC0(v1, v4, v3, v5, v31, v2);
      _os_log_impl(&dword_23B979000, log, v8, "SessionLive: %s - %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v29, -1, -1);
      MEMORY[0x24260D9B4](v9, -1, -1);

    }
    else
    {
      sub_23BA44FC0(v1, v4, v3, v5, v31, v2);
      sub_23BA44FC0(v1, v4, v3, v5, v31, v2);

    }
    v18 = *(_QWORD *)(v0 + 240);
    sub_23B989EFC(*(_QWORD *)(v0 + 224), v18, &qword_256A5DF60);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF68);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
    v23 = *(_QWORD *)(v0 + 232);
    v22 = *(_QWORD *)(v0 + 240);
    if (v21 == 1)
    {
      sub_23BA44FC0(v1, v4, v30, v5, v31, v2);
      sub_23B989D60(v22, &qword_256A5DF60);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    }
    else
    {
      *(_QWORD *)(v0 + 128) = v1;
      *(_QWORD *)(v0 + 136) = v4;
      *(_QWORD *)(v0 + 144) = v30;
      *(_BYTE *)(v0 + 152) = v5;
      *(_QWORD *)(v0 + 160) = v31;
      *(_QWORD *)(v0 + 168) = v2;
      *(_BYTE *)(v0 + 176) = v32;
      sub_23BA44F90(v1, v4, v30);
      swift_bridgeObjectRetain();
      sub_23BB8AA3C();
      sub_23BA44FC0(v1, v4, v30, v5, v31, v2);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v19);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFB0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v23, 0, 1, v25);
    }
    sub_23B989D60(*(_QWORD *)(v0 + 232), &qword_256A5DF98);
    v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256A64A40 + dword_256A64A40);
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v26;
    *v26 = v0;
    v26[1] = sub_23BA3AD1C;
    return v33(v0 + 16, 0, 0);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 224);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
    sub_23B989EFC(v13, v12, &qword_256A5DF60);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF68);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
    v17 = *(_QWORD *)(v0 + 248);
    if (v16 == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 248), &qword_256A5DF60);
    }
    else
    {
      sub_23BB8AA48();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BA3B2D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  return swift_task_switch();
}

uint64_t sub_23BA3B2E8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[5] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[3] = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9A920, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[6] = v6;
  *v6 = v0;
  v6[1] = sub_23BA3B48C;
  return sub_23BB88D08();
}

uint64_t sub_23BA3B48C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_23BA3B4F4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v6 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9A920, &v6);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3B634(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v2[4] = swift_task_alloc();
  v2[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DED0);
  v2[6] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DED8);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 + 64);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEE0);
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEE8);
  v2[15] = v6;
  v2[16] = *(_QWORD *)(v6 - 8);
  v2[17] = swift_task_alloc();
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEF0) - 8);
  v2[18] = v7;
  v2[19] = *(_QWORD *)(v7 + 64);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA3B798()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[21];
  v2 = v0[22];
  v4 = v0[13];
  v3 = v0[14];
  v5 = v0[12];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  *(_QWORD *)(swift_task_alloc() + 16) = v2;
  v0[23] = type metadata accessor for SessionFriendStreamChange(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BEE6A10], v5);
  sub_23BB8AA6C();
  swift_task_dealloc();
  sub_23B989EFC(v2, v1, &qword_256A5DEF0);
  v7 = (_QWORD *)swift_task_alloc();
  v0[24] = v7;
  *v7 = v0;
  v7[1] = sub_23BA3B8C4;
  return sub_23BB88CE4();
}

uint64_t sub_23BA3B8C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA3B928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 168);
  v13 = *(_QWORD *)(v0 + 160);
  v15 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v16 = *(_QWORD *)(v0 + 16);
  sub_23BA44D98(&qword_256A5DF08, &qword_256A5DED0);
  sub_23BB8B144();
  v7 = sub_23BB8AA18();
  v8 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  sub_23B989EFC(v1, v13, &qword_256A5DEF0);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (v14 + *(unsigned __int8 *)(v15 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v3, v5);
  sub_23B990D24(v13, v11 + v10, &qword_256A5DEF0);
  sub_23B989F54(v8, (uint64_t)&unk_256A5DF18, v11);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  sub_23B989D60(v1, &qword_256A5DEF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v19, v18);
  sub_23B989D60(v20, &qword_256A5DEF0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3BB74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  sub_23B989D60(*(_QWORD *)(v0 + 168), &qword_256A5DEF0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_23B989D60(v1, &qword_256A5DEF0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3BC5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_23BB88B7C();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA3BCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(v1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_23BA3BD10(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3BD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v52 = a2;
  v3 = sub_23BB88C48();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v46 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v47 = (char *)&v46 - v9;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v46 - v12;
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v46 - v16;
  v18 = sub_23BB88B7C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for SessionFriendStreamChange(0);
  v50 = *(_QWORD *)(v23 - 8);
  v51 = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v46 - v29;
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v48 = (uint64_t)&v46 - v34;
  v49 = a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))(v22, a1, v18, v33);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v22, v18);
  if (v35 == *MEMORY[0x24BE31EA8])
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v18);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v17, v22, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v13, v17, v3);
    sub_23BA3D048((uint64_t)v13, (uint64_t)v30);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v49, v18);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
    v36 = v51;
    swift_storeEnumTagMultiPayload();
LABEL_6:
    v42 = v50;
    v43 = v48;
    sub_23B989CA4((uint64_t)v30, v48, type metadata accessor for SessionFriendStreamChange);
    v44 = v43;
    v41 = v52;
    sub_23B989CA4(v44, v52, type metadata accessor for SessionFriendStreamChange);
    v40 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, v40, 1, v36);
  }
  if (v35 == *MEMORY[0x24BE31EB0])
  {
    (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v18);
    v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v47, v22, v3);
    v38 = (uint64_t)v46;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v46, v37, v3);
    sub_23BA3D048(v38, (uint64_t)v26);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v49, v18);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v37, v3);
    v36 = v51;
    swift_storeEnumTagMultiPayload();
    v30 = v26;
    goto LABEL_6;
  }
  v39 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v39(v49, v18);
  v39((uint64_t)v22, v18);
  v40 = 1;
  v36 = v51;
  v41 = v52;
  v42 = v50;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, v40, 1, v36);
}

uint64_t sub_23BA3C2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[6] = a4;
  v5[7] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF20);
  v5[8] = swift_task_alloc();
  v6 = type metadata accessor for SessionFriendStreamChange(0);
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEF0);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB00);
  v5[16] = swift_task_alloc();
  v5[17] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DED0);
  v5[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF28);
  v5[19] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF30);
  v5[20] = v7;
  v5[21] = *(_QWORD *)(v7 - 8);
  v5[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA3C418()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;
  uint64_t v9;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[23] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[5] = sub_23BB7B69C(0xD000000000000012, 0x800000023BB9AA70, &v9);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: %s - willStartUpdatingFriends", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DED8);
  sub_23BB8AF4C();
  sub_23BA44D98(&qword_256A5DF08, &qword_256A5DED0);
  sub_23BB8AAD8();
  sub_23BB8AF64();
  sub_23BB8B12C();
  v8 = (char *)&dword_256A64A38 + dword_256A64A38;
  v6 = (_QWORD *)swift_task_alloc();
  v0[24] = v6;
  *v6 = v0;
  v6[1] = sub_23BA3C678;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD *))v8)(v0[16], 0, 0, v0 + 2);
}

uint64_t sub_23BA3C678()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA3C6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 48))(v1, 1, *(_QWORD *)(v0 + 72)) == 1)
  {
    v2 = *(_QWORD *)(v0 + 120);
    v3 = *(_QWORD *)(v0 + 56);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    sub_23B989EFC(v3, v2, &qword_256A5DEF0);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEF8);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4);
    v7 = *(_QWORD *)(v0 + 120);
    if (v6 == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 120), &qword_256A5DEF0);
    }
    else
    {
      sub_23BB8AA48();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 104);
    sub_23B989CA4(v1, v8, type metadata accessor for SessionFriendStreamChange);
    sub_23B989CE8(v8, v9, type metadata accessor for SessionFriendStreamChange);
    v10 = sub_23BB891AC();
    v11 = sub_23BB8ABC8();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 96);
    if (v12)
    {
      v14 = *(_QWORD *)(v0 + 88);
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v32 = v16;
      *(_DWORD *)v15 = 136315394;
      *(_QWORD *)(v0 + 24) = sub_23BB7B69C(0xD000000000000012, 0x800000023BB9AA70, &v32);
      sub_23BB8ACB8();
      *(_WORD *)(v15 + 12) = 2080;
      sub_23B989CE8(v13, v14, type metadata accessor for SessionFriendStreamChange);
      v17 = sub_23BB8A7D8();
      *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v17, v18, &v32);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease();
      sub_23B989D9C(v13, type metadata accessor for SessionFriendStreamChange);
      _os_log_impl(&dword_23B979000, v10, v11, "SessionLive: %s - %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v16, -1, -1);
      MEMORY[0x24260D9B4](v15, -1, -1);
    }
    else
    {
      sub_23B989D9C(*(_QWORD *)(v0 + 96), type metadata accessor for SessionFriendStreamChange);
    }

    v20 = *(_QWORD *)(v0 + 112);
    sub_23B989EFC(*(_QWORD *)(v0 + 56), v20, &qword_256A5DEF0);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEF8);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
    v25 = *(_QWORD *)(v0 + 104);
    v24 = *(_QWORD *)(v0 + 112);
    if (v23 == 1)
    {
      v26 = *(_QWORD *)(v0 + 64);
      sub_23B989D9C(*(_QWORD *)(v0 + 104), type metadata accessor for SessionFriendStreamChange);
      sub_23B989D60(v24, &qword_256A5DEF0);
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
    }
    else
    {
      v28 = *(_QWORD *)(v0 + 64);
      sub_23B989CE8(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88), type metadata accessor for SessionFriendStreamChange);
      sub_23BB8AA3C();
      sub_23B989D9C(v25, type metadata accessor for SessionFriendStreamChange);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF38);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
    }
    sub_23B989D60(*(_QWORD *)(v0 + 64), &qword_256A5DF20);
    v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256A64A38 + dword_256A64A38);
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v30;
    *v30 = v0;
    v30[1] = sub_23BA3C678;
    return v31(*(_QWORD *)(v0 + 128), 0, 0);
  }
}

uint64_t sub_23BA3CB60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = v0;
  return swift_task_switch();
}

uint64_t sub_23BA3CB78()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[21] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v17 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[10] = sub_23BB77834(1);
    v0[11] = v6;
    v0[12] = v7;
    v0[13] = v8;
    sub_23BA444D4();
    v9 = sub_23BB8ACDC();
    v11 = v10;
    swift_bridgeObjectRelease();
    v18 = v9;
    v19 = v11;
    v0[14] = sub_23BB778BC(1uLL, 0xD000000000000016, 0x800000023BB9A940);
    v0[15] = v12;
    v0[16] = v13;
    v0[17] = v14;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[19] = sub_23BB7B69C(v18, v19, &v17);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v15 = (_QWORD *)swift_task_alloc();
  v0[22] = v15;
  *v15 = v0;
  v15[1] = sub_23BA3CDDC;
  return sub_23BB88CC0();
}

uint64_t sub_23BA3CDDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_23BA3CE44()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 24) = v4;
    *(_QWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 40) = v6;
    sub_23BA444D4();
    v7 = sub_23BB8ACDC();
    v9 = v8;
    swift_bridgeObjectRelease();
    v16 = v7;
    v17 = v9;
    *(_QWORD *)(v0 + 48) = sub_23BB778BC(1uLL, 0xD000000000000016, 0x800000023BB9A940);
    *(_QWORD *)(v0 + 56) = v10;
    *(_QWORD *)(v0 + 64) = v11;
    *(_QWORD *)(v0 + 72) = v12;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = sub_23BB7B69C(v16, v17, &v15);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive%s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3D048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  FindMyUICore::Handle v39;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB88AD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v33 - v13;
  v15 = sub_23BB88C78();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BB88C30();
  v20._countAndFlagsBits = sub_23BB88C54();
  v39 = Handle.init(rawValue:)(v20);
  v21 = a1;
  v22 = v38;
  (*(void (**)(char *, uint64_t, _QWORD))(v16 + 8))(v19, v15, *(_QWORD *)&v39.kind);
  v23 = v36;
  v24 = v37;
  *(_QWORD *)v22 = v35;
  *(_QWORD *)(v22 + 8) = v23;
  *(_BYTE *)(v22 + 16) = v24;
  sub_23BB88C18();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v14, v6);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v25 == *MEMORY[0x24BE31D40])
  {
    v26 = 0;
  }
  else if (v25 == *MEMORY[0x24BE31D48])
  {
    v26 = 1;
  }
  else if (v25 == *MEMORY[0x24BE31D28])
  {
    v26 = 2;
  }
  else if (v25 == *MEMORY[0x24BE31D30])
  {
    v26 = 3;
  }
  else
  {
    if (v25 != *MEMORY[0x24BE31D20])
    {
      sub_23BA44A94();
      swift_allocError();
      swift_willThrow();
      v31 = *(void (**)(char *, uint64_t))(v7 + 8);
      v31(v10, v6);
      v32 = sub_23BB88C48();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v21, v32);
      v31(v14, v6);
      return swift_bridgeObjectRelease();
    }
    v26 = 4;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  *(_BYTE *)(v22 + 17) = v26;
  v27 = type metadata accessor for SessionFriend(0);
  sub_23BB88C3C();
  v28 = (uint64_t)v34;
  sub_23BB88C24();
  v29 = sub_23BB88C48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v21, v29);
  return sub_23B990D24(v28, v22 + *(int *)(v27 + 28), (uint64_t *)&unk_256A5E6B0);
}

uint64_t sub_23BA3D334()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[20] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v1[21] = swift_task_alloc();
  v2 = sub_23BB88AD4();
  v1[22] = v2;
  v1[23] = *(_QWORD *)(v2 - 8);
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v3 = sub_23BB88C78();
  v1[26] = v3;
  v1[27] = *(_QWORD *)(v3 - 8);
  v1[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDC8);
  v1[29] = swift_task_alloc();
  v4 = type metadata accessor for SessionFriend(0);
  v1[30] = v4;
  v1[31] = *(_QWORD *)(v4 - 8);
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v5 = sub_23BB88C48();
  v1[35] = v5;
  v1[36] = *(_QWORD *)(v5 - 8);
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA3D490()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[39] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v17 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[10] = sub_23BB77834(1);
    v0[11] = v6;
    v0[12] = v7;
    v0[13] = v8;
    sub_23BA444D4();
    v9 = sub_23BB8ACDC();
    v11 = v10;
    swift_bridgeObjectRelease();
    v18 = v9;
    v19 = v11;
    v0[14] = sub_23BB778BC(1uLL, 0xD00000000000001CLL, 0x800000023BB9A7D0);
    v0[15] = v12;
    v0[16] = v13;
    v0[17] = v14;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[19] = sub_23BB7B69C(v18, v19, &v17);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v15 = (_QWORD *)swift_task_alloc();
  v0[40] = v15;
  *v15 = v0;
  v15[1] = sub_23BA3D6F4;
  return sub_23BB88CA8();
}

uint64_t sub_23BA3D6F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 328) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23BA3D800()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  unsigned __int8 v32;
  char v33;
  BOOL v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  unint64_t v62;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v78 = swift_slowAlloc();
    v80 = v78;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 24) = v4;
    *(_QWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 40) = v6;
    sub_23BA444D4();
    v7 = sub_23BB8ACDC();
    v9 = v8;
    swift_bridgeObjectRelease();
    v81 = v7;
    v82 = v9;
    *(_QWORD *)(v0 + 48) = sub_23BB778BC(1uLL, 0xD00000000000001CLL, 0x800000023BB9A7D0);
    *(_QWORD *)(v0 + 56) = v10;
    *(_QWORD *)(v0 + 64) = v11;
    *(_QWORD *)(v0 + 72) = v12;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = sub_23BB7B69C(v81, v82, &v80);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive%s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v78, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v13 = *(_QWORD *)(v0 + 328);
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v62 = MEMORY[0x24BEE4AF8];
    goto LABEL_36;
  }
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 264);
  v75 = *(_QWORD *)(v0 + 248);
  v68 = *(_QWORD *)(v0 + 240);
  v73 = *(_QWORD *)(v0 + 216);
  v79 = *(_QWORD *)(v0 + 184);
  v17 = v13 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v69 = v15;
  v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v72 = *(_QWORD *)(v15 + 72);
  v70 = *MEMORY[0x24BE31D40];
  v67 = *MEMORY[0x24BE31D48];
  v66 = *MEMORY[0x24BE31D28];
  v65 = *MEMORY[0x24BE31D30];
  v64 = *MEMORY[0x24BE31D20];
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x24BEE4AF8];
  v74 = v16;
  do
  {
    v76 = v14;
    v77 = v18;
    v20 = *(_QWORD *)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 304);
    v21 = *(_QWORD *)(v0 + 280);
    v71(v19, v17, v21);
    v71(v20, v19, v21);
    sub_23BB88C30();
    v22 = sub_23BB88C54();
    v24 = v23;
    v25 = sub_23BB8A7E4();
    v27 = v26;
    v28 = HIBYTE(v24) & 0xF;
    if ((v24 & 0x2000000000000000) == 0)
      v28 = v22 & 0xFFFFFFFFFFFFLL;
    if (v28)
    {
      sub_23BA44A58();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_23BB8C510;
      *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v29 + 64) = sub_23B9A5C8C();
      *(_QWORD *)(v29 + 32) = 0xD000000000000029;
      *(_QWORD *)(v29 + 40) = 0x800000023BB9A7A0;
      v30 = (void *)sub_23BB8ABB0();
      v31 = (void *)sub_23BB8A784();
      v32 = objc_msgSend(v30, sel_evaluateWithObject_, v31);

      if ((v32 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v33 = 1;
      }
      else
      {
        v34 = sub_23BB4E730(v22, v24);
        swift_bridgeObjectRelease();
        if (v34)
          v33 = 0;
        else
          v33 = 2;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v33 = 2;
    }
    v35 = *(uint64_t **)(v0 + 264);
    v36 = *(_QWORD *)(v0 + 200);
    v37 = *(_QWORD *)(v0 + 192);
    v38 = *(_QWORD *)(v0 + 176);
    (*(void (**)(_QWORD, _QWORD))(v73 + 8))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
    *v35 = v25;
    *(_QWORD *)(v74 + 8) = v27;
    *(_BYTE *)(v74 + 16) = v33;
    sub_23BB88C18();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v37, v36, v38);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 88))(v37, v38);
    if (v39 == v70)
    {
      v40 = 0;
LABEL_26:
      v41 = *(_QWORD *)(v0 + 296);
      v42 = *(_QWORD *)(v0 + 280);
      v43 = *(_QWORD *)(v0 + 264);
      v44 = *(_QWORD *)(v0 + 232);
      v45 = *(_QWORD *)(v0 + 168);
      (*(void (**)(_QWORD, _QWORD))(v79 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
      *(_BYTE *)(v74 + 17) = v40;
      sub_23BB88C3C();
      sub_23BB88C24();
      v46 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v46(v41, v42);
      sub_23B990D24(v45, v43 + *(int *)(v68 + 28), (uint64_t *)&unk_256A5E6B0);
      sub_23B989CA4(v43, v44, type metadata accessor for SessionFriend);
      v47 = 0;
      goto LABEL_27;
    }
    if (v39 == v67)
    {
      v40 = 1;
      goto LABEL_26;
    }
    if (v39 == v66)
    {
      v40 = 2;
      goto LABEL_26;
    }
    if (v39 == v65)
    {
      v40 = 3;
      goto LABEL_26;
    }
    if (v39 == v64)
    {
      v40 = 4;
      goto LABEL_26;
    }
    v57 = *(_QWORD *)(v0 + 296);
    v58 = *(_QWORD *)(v0 + 280);
    v59 = *(_QWORD *)(v0 + 200);
    v60 = *(_QWORD *)(v0 + 176);
    v61 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    v61(*(_QWORD *)(v0 + 192), v60);
    v46 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v46(v57, v58);
    v61(v59, v60);
    swift_bridgeObjectRelease();
    v47 = 1;
LABEL_27:
    v48 = *(_QWORD *)(v0 + 304);
    v49 = *(_QWORD *)(v0 + 280);
    v51 = *(_QWORD *)(v0 + 232);
    v50 = *(_QWORD *)(v0 + 240);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v51, v47, 1, v50);
    v46(v48, v49);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v51, 1, v50) == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 232), &qword_256A5DDC8);
      v18 = v77;
    }
    else
    {
      v52 = *(_QWORD *)(v0 + 272);
      v53 = *(_QWORD *)(v0 + 256);
      sub_23B989CA4(*(_QWORD *)(v0 + 232), v52, type metadata accessor for SessionFriend);
      sub_23B989CA4(v52, v53, type metadata accessor for SessionFriend);
      v18 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_23BB644B0(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
      v55 = *(_QWORD *)(v18 + 16);
      v54 = *(_QWORD *)(v18 + 24);
      if (v55 >= v54 >> 1)
        v18 = sub_23BB644B0(v54 > 1, v55 + 1, 1, v18);
      v56 = *(_QWORD *)(v0 + 256);
      *(_QWORD *)(v18 + 16) = v55 + 1;
      sub_23B989CA4(v56, v18+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(_QWORD *)(v75 + 72) * v55, type metadata accessor for SessionFriend);
    }
    v17 += v72;
    v14 = v76 - 1;
  }
  while (v76 != 1);
  swift_bridgeObjectRelease_n();
  v62 = v18;
LABEL_36:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v62);
}

uint64_t sub_23BA3DFA8(uint64_t a1, _OWORD *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v5 + 192) = a3;
  *(_QWORD *)(v5 + 200) = v4;
  *(_BYTE *)(v5 + 392) = a4;
  *(_QWORD *)(v5 + 184) = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DD80);
  *(_QWORD *)(v5 + 208) = v7;
  *(_QWORD *)(v5 + 216) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 224) = swift_task_alloc();
  v8 = sub_23BB88B4C();
  *(_QWORD *)(v5 + 232) = v8;
  *(_QWORD *)(v5 + 240) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 248) = swift_task_alloc();
  v9 = sub_23BB889CC();
  *(_QWORD *)(v5 + 256) = v9;
  *(_QWORD *)(v5 + 264) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 272) = swift_task_alloc();
  *(_QWORD *)(v5 + 280) = swift_task_alloc();
  v10 = sub_23BB88B94();
  *(_QWORD *)(v5 + 288) = v10;
  *(_QWORD *)(v5 + 296) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 304) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DD88);
  *(_QWORD *)(v5 + 312) = swift_task_alloc();
  v11 = sub_23BB88BC4();
  *(_QWORD *)(v5 + 320) = v11;
  *(_QWORD *)(v5 + 328) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v5 + 336) = swift_task_alloc();
  *(_OWORD *)(v5 + 344) = *a2;
  return swift_task_switch();
}

uint64_t sub_23BA3E100()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t result;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[45] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v24 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[6] = sub_23BB77834(1);
    v0[7] = v6;
    v0[8] = v7;
    v0[9] = v8;
    sub_23BA444D4();
    v9 = sub_23BB8ACDC();
    v11 = v10;
    swift_bridgeObjectRelease();
    v25 = v9;
    v26 = v11;
    v0[2] = sub_23BB778BC(1uLL, 0xD00000000000002CLL, 0x800000023BB9A840);
    v0[3] = v12;
    v0[4] = v13;
    v0[5] = v14;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[22] = sub_23BB7B69C(v25, v26, &v24);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v15 = v0[44];
  v0[46] = sub_23BA36BA4(v0[23]);
  if (v15)
  {
    v16 = v0[39];
    swift_bridgeObjectRetain();
    sub_23BA44160(MEMORY[0x24BEE4AF8]);
    sub_23BB88C6C();
    v17 = sub_23BB88C78();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
  }
  else
  {
    v18 = v0[39];
    v19 = sub_23BB88C78();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  }
  v20 = v0[24];
  v21 = (unsigned int *)MEMORY[0x24BE31F10];
  switch(v20)
  {
    case 0:
      goto LABEL_12;
    case 1:
      v21 = (unsigned int *)MEMORY[0x24BE31F18];
      goto LABEL_12;
    case 2:
      v21 = (unsigned int *)MEMORY[0x24BE31F08];
LABEL_12:
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[37] + 104))(v0[38], *v21, v0[36]);
      v23 = (_QWORD *)swift_task_alloc();
      v0[47] = v23;
      *v23 = v0;
      v23[1] = sub_23BA3E52C;
      result = sub_23BB88CB4();
      break;
    case 3:
      result = sub_23BB8AFC4();
      break;
    default:
      v0[20] = v20;
      result = sub_23BB8B1C8();
      break;
  }
  return result;
}

uint64_t sub_23BA3E52C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc();
  v4 = v2[38];
  v3 = v2[39];
  v5 = v2[36];
  v6 = v2[37];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_23B989D60(v3, &qword_256A5DD88);
  return swift_task_switch();
}

uint64_t sub_23BA3E5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v1 = *(_QWORD *)(v0 + 280);
  v35 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 264);
  v32 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  v8 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 216);
  sub_23BB88BB8();
  sub_23BB88B40();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  sub_23BB885C4();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v35, v1, v32);
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABEC();
  if (os_log_type_enabled(v9, v10))
  {
    v38 = *(_QWORD *)(v0 + 264);
    v31 = *(_QWORD *)(v0 + 256);
    v33 = *(_QWORD *)(v0 + 272);
    v11 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v40 = v36;
    *(_DWORD *)v11 = 136315394;
    *(_QWORD *)(v0 + 80) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 88) = v12;
    *(_QWORD *)(v0 + 96) = v13;
    *(_QWORD *)(v0 + 104) = v14;
    sub_23BA444D4();
    v15 = sub_23BB8ACDC();
    v17 = v16;
    swift_bridgeObjectRelease();
    v41 = v15;
    v42 = v17;
    *(_QWORD *)(v0 + 112) = sub_23BB778BC(1uLL, 0xD00000000000002CLL, 0x800000023BB9A840);
    *(_QWORD *)(v0 + 120) = v18;
    *(_QWORD *)(v0 + 128) = v19;
    *(_QWORD *)(v0 + 136) = v20;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = sub_23BB7B69C(v41, v42, &v40);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_23BA44AD8(&qword_256A5AEC8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v21 = sub_23BB8B150();
    *(_QWORD *)(v0 + 152) = sub_23BB7B69C(v21, v22, &v40);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    v39 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v39(v33, v31);
    _os_log_impl(&dword_23B979000, v9, v10, "SessionLive: didReceive%s - %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v36, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);
  }
  else
  {
    v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 264) + 8);
    v39(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 256));
  }

  v24 = *(_QWORD *)(v0 + 328);
  v23 = *(_QWORD *)(v0 + 336);
  v25 = *(_QWORD *)(v0 + 320);
  v26 = *(_QWORD *)(v0 + 280);
  v27 = *(_QWORD *)(v0 + 256);
  v28 = sub_23BB88990();
  v34 = v29;
  v37 = v28;
  v39(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v37, v34);
}

uint64_t sub_23BA3E978()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Handle.fmlHandle.getter()
{
  swift_bridgeObjectRetain();
  sub_23BA44160(MEMORY[0x24BEE4AF8]);
  return sub_23BB88C6C();
}

uint64_t sub_23BA3EA5C(uint64_t a1, _OWORD *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v4 + 352) = a3;
  *(_QWORD *)(v4 + 176) = a1;
  *(_QWORD *)(v4 + 184) = v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DD80);
  *(_QWORD *)(v4 + 192) = v6;
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 208) = swift_task_alloc();
  v7 = sub_23BB88B4C();
  *(_QWORD *)(v4 + 216) = v7;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 232) = swift_task_alloc();
  v8 = sub_23BB889CC();
  *(_QWORD *)(v4 + 240) = v8;
  *(_QWORD *)(v4 + 248) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 256) = swift_task_alloc();
  *(_QWORD *)(v4 + 264) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DD88);
  *(_QWORD *)(v4 + 272) = swift_task_alloc();
  v9 = sub_23BB88BC4();
  *(_QWORD *)(v4 + 280) = v9;
  *(_QWORD *)(v4 + 288) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 296) = swift_task_alloc();
  *(_OWORD *)(v4 + 304) = *a2;
  return swift_task_switch();
}

uint64_t sub_23BA3EB84()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[40] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v22 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[14] = sub_23BB77834(1);
    v0[15] = v6;
    v0[16] = v7;
    v0[17] = v8;
    sub_23BA444D4();
    v9 = sub_23BB8ACDC();
    v11 = v10;
    swift_bridgeObjectRelease();
    v23 = v9;
    v24 = v11;
    v0[2] = sub_23BB778BC(1uLL, 0xD000000000000029, 0x800000023BB9A750);
    v0[3] = v12;
    v0[4] = v13;
    v0[5] = v14;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[21] = sub_23BB7B69C(v23, v24, &v22);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v15 = v0[39];
  v0[41] = sub_23BA36BA4(v0[22]);
  if (v15)
  {
    v16 = v0[34];
    swift_bridgeObjectRetain();
    sub_23BA44160(MEMORY[0x24BEE4AF8]);
    sub_23BB88C6C();
    v17 = sub_23BB88C78();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
  }
  else
  {
    v18 = v0[34];
    v19 = sub_23BB88C78();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  }
  v20 = (_QWORD *)swift_task_alloc();
  v0[42] = v20;
  *v20 = v0;
  v20[1] = sub_23BA3EEB0;
  return sub_23BB88C90();
}

uint64_t sub_23BA3EEB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 344) = v0;
  swift_task_dealloc();
  sub_23B989D60(*(_QWORD *)(v2 + 272), &qword_256A5DD88);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BA3EF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v1 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 248);
  v38 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v8 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  sub_23BB88BB8();
  sub_23BB88B40();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  sub_23BB885C4();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v40, v1, v38);
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABEC();
  if (os_log_type_enabled(v9, v10))
  {
    v41 = *(_QWORD *)(v0 + 280);
    v42 = *(_QWORD *)(v0 + 296);
    v37 = *(_QWORD *)(v0 + 264);
    v39 = *(_QWORD *)(v0 + 288);
    v34 = *(_QWORD *)(v0 + 256);
    v35 = *(_QWORD *)(v0 + 248);
    v33 = *(_QWORD *)(v0 + 240);
    v11 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v43 = v36;
    *(_DWORD *)v11 = 136315394;
    *(_QWORD *)(v0 + 48) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 56) = v12;
    *(_QWORD *)(v0 + 64) = v13;
    *(_QWORD *)(v0 + 72) = v14;
    sub_23BA444D4();
    v15 = sub_23BB8ACDC();
    v17 = v16;
    swift_bridgeObjectRelease();
    v44 = v15;
    v45 = v17;
    *(_QWORD *)(v0 + 80) = sub_23BB778BC(1uLL, 0xD000000000000029, 0x800000023BB9A750);
    *(_QWORD *)(v0 + 88) = v18;
    *(_QWORD *)(v0 + 96) = v19;
    *(_QWORD *)(v0 + 104) = v20;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 152) = sub_23BB7B69C(v44, v45, &v43);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_23BA44AD8(&qword_256A5AEC8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v21 = sub_23BB8B150();
    *(_QWORD *)(v0 + 144) = sub_23BB7B69C(v21, v22, &v43);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    v23 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v23(v34, v33);
    _os_log_impl(&dword_23B979000, v9, v10, "SessionLive: didReceive%s - %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v36, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);

    v23(v37, v33);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v41);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 288);
    v24 = *(_QWORD *)(v0 + 296);
    v26 = *(_QWORD *)(v0 + 280);
    v28 = *(_QWORD *)(v0 + 256);
    v27 = *(_QWORD *)(v0 + 264);
    v29 = *(_QWORD *)(v0 + 240);
    v30 = *(_QWORD *)(v0 + 248);

    v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v31(v28, v29);
    v31(v27, v29);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3F300()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3F37C(uint64_t *a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v3 + 168) = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DD80);
  *(_QWORD *)(v3 + 176) = v6;
  *(_QWORD *)(v3 + 184) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  v7 = sub_23BB88B4C();
  *(_QWORD *)(v3 + 200) = v7;
  *(_QWORD *)(v3 + 208) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 216) = swift_task_alloc();
  v8 = sub_23BB889CC();
  *(_QWORD *)(v3 + 224) = v8;
  *(_QWORD *)(v3 + 232) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 240) = swift_task_alloc();
  *(_QWORD *)(v3 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DD88);
  *(_QWORD *)(v3 + 256) = swift_task_alloc();
  v9 = sub_23BB88C78();
  *(_QWORD *)(v3 + 264) = v9;
  *(_QWORD *)(v3 + 272) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 280) = swift_task_alloc();
  v10 = sub_23BB88BC4();
  *(_QWORD *)(v3 + 288) = v10;
  *(_QWORD *)(v3 + 296) = *(_QWORD *)(v10 - 8);
  v11 = swift_task_alloc();
  v12 = *a1;
  v13 = a1[1];
  *(_QWORD *)(v3 + 304) = v11;
  *(_QWORD *)(v3 + 312) = v12;
  *(_QWORD *)(v3 + 320) = v13;
  *(_OWORD *)(v3 + 328) = *a2;
  return swift_task_switch();
}

uint64_t sub_23BA3F4D8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[43] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v20 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[14] = sub_23BB77834(1);
    v0[15] = v6;
    v0[16] = v7;
    v0[17] = v8;
    sub_23BA444D4();
    v9 = sub_23BB8ACDC();
    v11 = v10;
    swift_bridgeObjectRelease();
    v21 = v9;
    v22 = v11;
    v0[10] = sub_23BB778BC(1uLL, 0xD000000000000019, 0x800000023BB9A900);
    v0[11] = v12;
    v0[12] = v13;
    v0[13] = v14;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[20] = sub_23BB7B69C(v21, v22, &v20);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v15 = v0[42];
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x24BEE4AF8];
  sub_23BA44160(MEMORY[0x24BEE4AF8]);
  sub_23BB88C6C();
  if (v15)
  {
    swift_bridgeObjectRetain();
    sub_23BA44160(v16);
    sub_23BB88C6C();
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0[34] + 56))(v0[32], v17, 1, v0[33]);
  v18 = (_QWORD *)swift_task_alloc();
  v0[44] = v18;
  *v18 = v0;
  v18[1] = sub_23BA3F7F8;
  return sub_23BB88CD8();
}

uint64_t sub_23BA3F7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 280);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  *(_QWORD *)(*(_QWORD *)v1 + 360) = v0;
  swift_task_dealloc();
  sub_23B989D60(v5, &qword_256A5DD88);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA3F894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v1 = *(_QWORD *)(v0 + 248);
  v35 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 232);
  v32 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  sub_23BB88BB8();
  sub_23BB88B40();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  sub_23BB885C4();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v35, v1, v32);
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABEC();
  if (os_log_type_enabled(v9, v10))
  {
    v38 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 240);
    v11 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v40 = v36;
    *(_DWORD *)v11 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB77834(1);
    *(_QWORD *)(v0 + 24) = v12;
    *(_QWORD *)(v0 + 32) = v13;
    *(_QWORD *)(v0 + 40) = v14;
    sub_23BA444D4();
    v15 = sub_23BB8ACDC();
    v17 = v16;
    swift_bridgeObjectRelease();
    v41 = v15;
    v42 = v17;
    *(_QWORD *)(v0 + 48) = sub_23BB778BC(1uLL, 0xD000000000000019, 0x800000023BB9A900);
    *(_QWORD *)(v0 + 56) = v18;
    *(_QWORD *)(v0 + 64) = v19;
    *(_QWORD *)(v0 + 72) = v20;
    sub_23BA44A14();
    swift_bridgeObjectRetain();
    sub_23BB8A820();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 152) = sub_23BB7B69C(v41, v42, &v40);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    sub_23BA44AD8(&qword_256A5AEC8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v21 = sub_23BB8B150();
    *(_QWORD *)(v0 + 144) = sub_23BB7B69C(v21, v22, &v40);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    v39 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v39(v33, v31);
    _os_log_impl(&dword_23B979000, v9, v10, "SessionLive: didReceive%s - %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v36, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);
  }
  else
  {
    v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
    v39(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  }

  v24 = *(_QWORD *)(v0 + 296);
  v23 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 288);
  v26 = *(_QWORD *)(v0 + 248);
  v27 = *(_QWORD *)(v0 + 224);
  v28 = sub_23BB88990();
  v34 = v29;
  v37 = v28;
  v39(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v37, v34);
}

uint64_t sub_23BA3FC40()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA3FCC8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 136) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(type metadata accessor for SessionFollowerState(0) - 8);
  *(_QWORD *)(v3 + 40) = swift_task_alloc();
  *(_QWORD *)(v3 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA3FD38()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[7] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall friendsFollowingMyLocation", v4, 2u);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }
  v5 = v0[3];

  v0[8] = *(_QWORD *)(v5 + 112);
  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_23BA3FE44;
  return sub_23BB88C9C();
}

uint64_t sub_23BA3FE44(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23BA3FEC8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive friendsFollowingMyLocation", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23B979000, v4, v5, "SessionLive: willCall friendsWithPendingOffers", v6, 2u);
    MEMORY[0x24260D9B4](v6, -1, -1);
  }

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v7;
  *v7 = v0;
  v7[1] = sub_23BA3FFFC;
  return sub_23BB88D20();
}

uint64_t sub_23BA3FFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA40068()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive friendsWithPendingOffers", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23B979000, v4, v5, "SessionLive: willCall friendsRequestedMyLocation", v6, 2u);
    MEMORY[0x24260D9B4](v6, -1, -1);
  }

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v7;
  *v7 = v0;
  v7[1] = sub_23BA4019C;
  return sub_23BB88CA8();
}

uint64_t sub_23BA4019C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA40208()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  _QWORD *v16;
  int isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t result;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];
  unsigned __int8 v38;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive friendsRequestedMyLocation", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }
  v4 = *(_QWORD *)(v0 + 16);

  v5 = sub_23B97DAAC(MEMORY[0x24BEE4AF8]);
  v6 = *(_QWORD *)(v4 + 16);
  v36 = v5;
  if (v6)
  {
    v31 = *(_QWORD *)(v0 + 32);
    v7 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    v32 = v0;
    while (1)
    {
      v9 = *(_QWORD *)(v0 + 120);
      v10 = *(_QWORD *)(v0 + 96);
      v11 = *(_QWORD *)(v0 + 80);
      v12 = *(_QWORD *)(v0 + 48);
      v34 = v6;
      v35 = *(_QWORD *)(v0 + 40);
      v14 = *((_QWORD *)v7 - 2);
      v13 = *((_QWORD *)v7 - 1);
      v33 = v7;
      v15 = *v7;
      v37[0] = v14;
      v37[1] = v13;
      v38 = v15;
      swift_bridgeObjectRetain();
      sub_23BA405D0(v37, v11, v10, v9, v12);
      sub_23B989CE8(v12, v35, type metadata accessor for SessionFollowerState);
      v16 = (_QWORD *)v36;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v37[0] = v36;
      v19 = sub_23B9849D4(v14, v13, v15);
      v20 = *(_QWORD *)(v36 + 16);
      v21 = (v18 & 1) == 0;
      result = v20 + v21;
      if (__OFADD__(v20, v21))
        break;
      v23 = v18;
      if (*(_QWORD *)(v36 + 24) >= result)
      {
        v0 = v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23B98875C();
          v16 = (_QWORD *)v37[0];
        }
      }
      else
      {
        sub_23BB4CB2C(result, isUniquelyReferenced_nonNull_native);
        v16 = (_QWORD *)v37[0];
        v24 = sub_23B9849D4(v14, v13, v15);
        v0 = v32;
        if ((v23 & 1) != (v25 & 1))
          return sub_23BB8B1E0();
        v19 = v24;
      }
      v26 = *(_QWORD *)(v0 + 40);
      v36 = (uint64_t)v16;
      if ((v23 & 1) != 0)
      {
        sub_23BA44B18(v26, v16[7] + *(_QWORD *)(v31 + 72) * v19, type metadata accessor for SessionFollowerState);
      }
      else
      {
        v16[(v19 >> 6) + 8] |= 1 << v19;
        v27 = v16[6] + 24 * v19;
        *(_QWORD *)v27 = v14;
        *(_QWORD *)(v27 + 8) = v13;
        *(_BYTE *)(v27 + 16) = v15;
        result = sub_23B989CA4(v26, v16[7] + *(_QWORD *)(v31 + 72) * v19, type metadata accessor for SessionFollowerState);
        v28 = v16[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_20;
        v16[2] = v30;
        swift_bridgeObjectRetain();
      }
      v7 = v33 + 24;
      v8 = *(_QWORD *)(v0 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B989D9C(v8, type metadata accessor for SessionFollowerState);
      v6 = v34 - 1;
      if (v34 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v36);
  }
  return result;
}

uint64_t sub_23BA40540()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA40584()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA405D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void *v65;
  void *v66;
  unsigned __int8 v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  void *v83;
  void *v84;
  unsigned __int8 v85;
  uint64_t v86;
  BOOL v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  char *v119;
  char *v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  char *v126;
  char v127;
  void (*v128)(char *, uint64_t);
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  __int128 v148;
  __int128 v149;
  void (*v150)(char *, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v145 = a5;
  v141 = sub_23BB88984();
  v138 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141, v9);
  v130 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDF0);
  MEMORY[0x24BDAC7A8](v137, v11);
  v139 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v142 = (uint64_t)&v130 - v19;
  MEMORY[0x24BDAC7A8](v20, v21);
  v140 = (char *)&v130 - v22;
  MEMORY[0x24BDAC7A8](v23, v24);
  v143 = (char *)&v130 - v25;
  v26 = sub_23BB88C78();
  v155 = *(_QWORD *)(v26 - 8);
  v156 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v153 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v158 = (char *)&v130 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDF8);
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v130 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23BB88C48();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v38);
  v40 = (char *)&v130 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v42);
  v131 = (char *)&v130 - v43;
  MEMORY[0x24BDAC7A8](v44, v45);
  v132 = (char *)&v130 - v46;
  MEMORY[0x24BDAC7A8](v47, v48);
  v50 = (char *)&v130 - v49;
  MEMORY[0x24BDAC7A8](v51, v52);
  v146 = (char *)&v130 - v53;
  v159 = *a1;
  v157 = a1[1];
  v154 = *((unsigned __int8 *)a1 + 16);
  v161 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BA79B20(a3);
  v54 = *(_QWORD *)(v161 + 16);
  v151 = v36;
  v152 = v37;
  v136 = v16;
  v144 = a4;
  if (!v54)
  {
    v70 = 1;
    goto LABEL_22;
  }
  v134 = v35;
  v135 = v40;
  v55 = v161 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  *(_QWORD *)&v149 = *(_QWORD *)(v37 + 72);
  v150 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v133 = v161;
  swift_bridgeObjectRetain();
  v148 = xmmword_23BB8C510;
  v147 = 0x800000023BB9A7A0;
  while (1)
  {
    v150(v50, v55, v36);
    sub_23BB88C30();
    v56 = sub_23BB88C54();
    v58 = v57;
    v59 = sub_23BB8A7E4();
    v61 = v60;
    v62 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0)
      v62 = v56 & 0xFFFFFFFFFFFFLL;
    if (v62)
    {
      sub_23BA44A58();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v148;
      *(_QWORD *)(v63 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v63 + 64) = sub_23B9A5C8C();
      v64 = v147;
      *(_QWORD *)(v63 + 32) = 0xD000000000000029;
      *(_QWORD *)(v63 + 40) = v64;
      v65 = (void *)sub_23BB8ABB0();
      v66 = (void *)sub_23BB8A784();
      v67 = objc_msgSend(v65, sel_evaluateWithObject_, v66);

      if ((v67 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v68 = 1;
      }
      else
      {
        v69 = sub_23BB4E730(v56, v58);
        swift_bridgeObjectRelease();
        if (v69)
          v68 = 0;
        else
          v68 = 2;
      }
      v36 = v151;
      v37 = v152;
    }
    else
    {
      swift_bridgeObjectRelease();
      v68 = 2;
    }
    (*(void (**)(char *, uint64_t))(v155 + 8))(v158, v156);
    if ((v59 != v159 || v61 != v157) && (sub_23BB8B1A4() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    if (v68 == v154)
      break;
LABEL_4:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v50, v36);
    v55 += v149;
    if (!--v54)
    {
      swift_bridgeObjectRelease();
      v70 = 1;
      a4 = v144;
      v40 = v135;
      v35 = v134;
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  v35 = v134;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v134, v50, v36);
  v70 = 0;
  a4 = v144;
  v40 = v135;
LABEL_22:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v35, v70, 1, v36);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) != 1)
  {
    v88 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v89 = v146;
    v88(v146, v35, v36);
    if (qword_256A58E00 != -1)
      swift_once();
    v90 = sub_23BB891C4();
    __swift_project_value_buffer(v90, (uint64_t)qword_256A73E80);
    v91 = sub_23BB891AC();
    v92 = sub_23BB8ABEC();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      v94 = swift_slowAlloc();
      v161 = v94;
      *(_DWORD *)v93 = 136315138;
      v160 = sub_23BB7B69C(0xD00000000000006ELL, 0x800000023BB9A870, &v161);
      v89 = v146;
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v91, v92, "SessionLive: %s - Friend is following my location", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v94, -1, -1);
      MEMORY[0x24260D9B4](v93, -1, -1);
    }

    v95 = (uint64_t)v143;
    sub_23BB88C24();
    v96 = sub_23BB891AC();
    v97 = sub_23BB8ABEC();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = (uint8_t *)swift_slowAlloc();
      v99 = swift_slowAlloc();
      v161 = v99;
      *(_DWORD *)v98 = 136315138;
      v160 = sub_23BB7B69C(0xD00000000000006ELL, 0x800000023BB9A870, &v161);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v96, v97, "SessionLive: %s - ExpiryDate exist for groupID", v98, 0xCu);
      swift_arrayDestroy();
      v100 = v99;
      v95 = (uint64_t)v143;
      MEMORY[0x24260D9B4](v100, -1, -1);
      MEMORY[0x24260D9B4](v98, -1, -1);
    }

    v101 = v141;
    v102 = (uint64_t)v140;
    v103 = v142;
    sub_23BB88870();
    v104 = v138;
    v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56);
    v105(v103, 0, 1, v101);
    v106 = v139;
    v107 = v139 + *(int *)(v137 + 48);
    sub_23B989EFC(v95, v139, (uint64_t *)&unk_256A5E6B0);
    sub_23B989EFC(v103, v107, (uint64_t *)&unk_256A5E6B0);
    v108 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
    if (v108(v106, 1, v101) == 1)
    {
      sub_23B989D60(v103, (uint64_t *)&unk_256A5E6B0);
      v109 = v108(v107, 1, v101);
      v110 = v151;
      if (v109 == 1)
      {
        sub_23B989D60(v106, (uint64_t *)&unk_256A5E6B0);
        v111 = v145;
LABEL_66:
        v105(v102, 1, 1, v101);
        goto LABEL_67;
      }
    }
    else
    {
      v112 = (uint64_t)v136;
      sub_23B989EFC(v106, (uint64_t)v136, (uint64_t *)&unk_256A5E6B0);
      if (v108(v107, 1, v101) != 1)
      {
        v126 = v130;
        (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(v130, v107, v101);
        sub_23BA44AD8(&qword_256A5DE00, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
        v127 = sub_23BB8A760();
        v128 = *(void (**)(char *, uint64_t))(v104 + 8);
        v128(v126, v101);
        sub_23B989D60(v142, (uint64_t *)&unk_256A5E6B0);
        v128((char *)v112, v101);
        v95 = (uint64_t)v143;
        sub_23B989D60(v106, (uint64_t *)&unk_256A5E6B0);
        v111 = v145;
        v89 = v146;
        v110 = v151;
        if ((v127 & 1) != 0)
          goto LABEL_66;
LABEL_53:
        sub_23B989EFC(v95, v102, (uint64_t *)&unk_256A5E6B0);
LABEL_67:
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
        sub_23B989EFC(v102, v111, (uint64_t *)&unk_256A5E6B0);
        sub_23BB88C3C();
        sub_23B989D60(v102, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v95, (uint64_t *)&unk_256A5E6B0);
        (*(void (**)(char *, uint64_t))(v152 + 8))(v89, v110);
        goto LABEL_68;
      }
      sub_23B989D60(v142, (uint64_t *)&unk_256A5E6B0);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v112, v101);
      v89 = v146;
      v110 = v151;
    }
    sub_23B989D60(v106, &qword_256A5DDF0);
    v111 = v145;
    goto LABEL_53;
  }
  sub_23B989D60((uint64_t)v35, &qword_256A5DDF8);
  v71 = *(_QWORD *)(a4 + 16);
  if (!v71)
  {
LABEL_55:
    if (qword_256A58E00 != -1)
      swift_once();
    v113 = sub_23BB891C4();
    __swift_project_value_buffer(v113, (uint64_t)qword_256A73E80);
    v114 = sub_23BB891AC();
    v115 = sub_23BB8ABEC();
    if (os_log_type_enabled(v114, v115))
    {
      v116 = (uint8_t *)swift_slowAlloc();
      v117 = swift_slowAlloc();
      v161 = v117;
      *(_DWORD *)v116 = 136315138;
      v160 = sub_23BB7B69C(0xD00000000000006ELL, 0x800000023BB9A870, &v161);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v114, v115, "SessionLive: %s notShared", v116, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v117, -1, -1);
      MEMORY[0x24260D9B4](v116, -1, -1);
    }

    goto LABEL_68;
  }
  v72 = a4 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  v150 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 72);
  v158 = *(char **)(v37 + 16);
  swift_bridgeObjectRetain();
  v149 = xmmword_23BB8C510;
  v147 = 0x800000023BB9A7A0;
  *(_QWORD *)&v148 = 0xD000000000000029;
  while (2)
  {
    ((void (*)(char *, uint64_t, uint64_t))v158)(v40, v72, v36);
    v73 = v40;
    sub_23BB88C30();
    v74 = sub_23BB88C54();
    v76 = v75;
    v77 = sub_23BB8A7E4();
    v79 = v78;
    v80 = HIBYTE(v76) & 0xF;
    if ((v76 & 0x2000000000000000) == 0)
      v80 = v74 & 0xFFFFFFFFFFFFLL;
    if (v80)
    {
      sub_23BA44A58();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = v149;
      *(_QWORD *)(v81 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v81 + 64) = sub_23B9A5C8C();
      v82 = v147;
      *(_QWORD *)(v81 + 32) = v148;
      *(_QWORD *)(v81 + 40) = v82;
      v83 = (void *)sub_23BB8ABB0();
      v84 = (void *)sub_23BB8A784();
      v85 = objc_msgSend(v83, sel_evaluateWithObject_, v84);

      if ((v85 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v86 = 1;
      }
      else
      {
        v87 = sub_23BB4E730(v74, v76);
        swift_bridgeObjectRelease();
        if (v87)
          v86 = 0;
        else
          v86 = 2;
      }
      v36 = v151;
      v37 = v152;
    }
    else
    {
      swift_bridgeObjectRelease();
      v86 = 2;
    }
    (*(void (**)(char *, uint64_t))(v155 + 8))(v153, v156);
    if ((v77 != v159 || v79 != v157) && (sub_23BB8B1A4() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_26:
      v40 = v73;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v73, v36);
      v72 += (uint64_t)v150;
      if (!--v71)
      {
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  if (v86 != v154)
    goto LABEL_26;
  swift_bridgeObjectRelease();
  v118 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v119 = v131;
  v118(v131, v73, v36);
  v120 = v132;
  v118(v132, v119, v36);
  if (qword_256A58E00 != -1)
    swift_once();
  v121 = sub_23BB891C4();
  __swift_project_value_buffer(v121, (uint64_t)qword_256A73E80);
  v122 = sub_23BB891AC();
  v123 = sub_23BB8ABEC();
  if (os_log_type_enabled(v122, v123))
  {
    v124 = (uint8_t *)swift_slowAlloc();
    v125 = swift_slowAlloc();
    v161 = v125;
    *(_DWORD *)v124 = 136315138;
    v160 = sub_23BB7B69C(0xD00000000000006ELL, 0x800000023BB9A870, &v161);
    v36 = v151;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v122, v123, "SessionLive: %s - Friend requested my location", v124, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v125, -1, -1);
    MEMORY[0x24260D9B4](v124, -1, -1);
  }

  sub_23BB88C3C();
  (*(void (**)(char *, uint64_t))(v152 + 8))(v120, v36);
LABEL_68:
  type metadata accessor for SessionFollowerState(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BA41624(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 112) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(type metadata accessor for SessionFollowingState(0) - 8);
  *(_QWORD *)(v3 + 40) = swift_task_alloc();
  *(_QWORD *)(v3 + 48) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA41694()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[7] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall friendsSharingLocationsWithMe", v4, 2u);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }
  v5 = v0[3];

  v0[8] = *(_QWORD *)(v5 + 112);
  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_23BA417A0;
  return sub_23BB88D5C();
}

uint64_t sub_23BA417A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23BA41824()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;

  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive friendsSharingLocationsWithMe", v3, 2u);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_23B979000, v4, v5, "SessionLive: willCall friendsRequestedToShareLocationWithMe", v6, 2u);
    MEMORY[0x24260D9B4](v6, -1, -1);
  }

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v7;
  *v7 = v0;
  v7[1] = sub_23BA41958;
  return sub_23BB88D74();
}

uint64_t sub_23BA41958(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA419C4()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  _QWORD *v15;
  int isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t result;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[2];
  unsigned __int8 v37;

  v0 = sub_23BB891AC();
  v1 = sub_23BB8ABEC();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_23B979000, v0, v1, "SessionLive: didReceive friendsRequestedToShareLocationWithMe", v2, 2u);
    MEMORY[0x24260D9B4](v2, -1, -1);
  }
  v3 = v31;
  v4 = *(_QWORD *)(v31 + 16);

  v5 = sub_23B97DA88(MEMORY[0x24BEE4AF8]);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (v6)
  {
    v30 = *(_QWORD *)(v31 + 32);
    v7 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      v9 = *(_QWORD *)(v3 + 96);
      v10 = *(_QWORD *)(v3 + 80);
      v11 = *(_QWORD *)(v3 + 48);
      v33 = v6;
      v34 = *(_QWORD *)(v3 + 40);
      v13 = *((_QWORD *)v7 - 2);
      v12 = *((_QWORD *)v7 - 1);
      v32 = v7;
      v14 = *v7;
      v36[0] = v13;
      v36[1] = v12;
      v37 = v14;
      swift_bridgeObjectRetain();
      sub_23BA41D38(v36, v10, v9, v11);
      sub_23B989CE8(v11, v34, type metadata accessor for SessionFollowingState);
      v15 = (_QWORD *)v35;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36[0] = v35;
      v18 = sub_23B9849D4(v13, v12, v14);
      v19 = *(_QWORD *)(v35 + 16);
      v20 = (v17 & 1) == 0;
      result = v19 + v20;
      if (__OFADD__(v19, v20))
        break;
      v22 = v17;
      if (*(_QWORD *)(v35 + 24) >= result)
      {
        v3 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23B9889D8();
          v15 = (_QWORD *)v36[0];
        }
      }
      else
      {
        sub_23BB4CB40(result, isUniquelyReferenced_nonNull_native);
        v15 = (_QWORD *)v36[0];
        v23 = sub_23B9849D4(v13, v12, v14);
        v3 = v31;
        if ((v22 & 1) != (v24 & 1))
          return sub_23BB8B1E0();
        v18 = v23;
      }
      v25 = *(_QWORD *)(v3 + 40);
      v35 = (uint64_t)v15;
      if ((v22 & 1) != 0)
      {
        sub_23BA44B18(v25, v15[7] + *(_QWORD *)(v30 + 72) * v18, type metadata accessor for SessionFollowingState);
      }
      else
      {
        v15[(v18 >> 6) + 8] |= 1 << v18;
        v26 = v15[6] + 24 * v18;
        *(_QWORD *)v26 = v13;
        *(_QWORD *)(v26 + 8) = v12;
        *(_BYTE *)(v26 + 16) = v14;
        result = sub_23B989CA4(v25, v15[7] + *(_QWORD *)(v30 + 72) * v18, type metadata accessor for SessionFollowingState);
        v27 = v15[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_20;
        v15[2] = v29;
        swift_bridgeObjectRetain();
      }
      v7 = v32 + 24;
      v8 = *(_QWORD *)(v3 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23B989D9C(v8, type metadata accessor for SessionFollowingState);
      v6 = v33 - 1;
      if (v33 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v3 + 8))(v35);
  }
  return result;
}

uint64_t sub_23BA41CF4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA41D38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void *v68;
  void *v69;
  unsigned __int8 v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  unsigned __int8 v89;
  uint64_t v90;
  BOOL v91;
  void (*v92)(uint64_t, char *, uint64_t);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  _BOOL4 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t, uint64_t);
  int v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  char *v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char v129;
  void (*v130)(char *, uint64_t);
  char *v131;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  unint64_t v150;
  __int128 v151;
  char *v152;
  char *v153;
  __int128 v154;
  void (*v155)(char *, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v148 = a4;
  v7 = sub_23BB88984();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDF0);
  MEMORY[0x24BDAC7A8](v143, v12);
  v144 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v19);
  v145 = (uint64_t)&v133 - v20;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v133 - v23;
  MEMORY[0x24BDAC7A8](v25, v26);
  v142 = (char *)&v133 - v27;
  v28 = sub_23BB88C78();
  v158 = *(_QWORD *)(v28 - 8);
  v159 = v28;
  MEMORY[0x24BDAC7A8](v28, v29);
  v149 = (char *)&v133 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v152 = (char *)&v133 - v33;
  v34 = sub_23BB88C48();
  v160 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](a2, v35);
  v153 = (char *)&v133 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v38);
  v139 = (char *)&v133 - v39;
  MEMORY[0x24BDAC7A8](v40, v41);
  v140 = (char *)&v133 - v42;
  MEMORY[0x24BDAC7A8](v43, v44);
  v46 = (char *)&v133 - v45;
  MEMORY[0x24BDAC7A8](v47, v48);
  MEMORY[0x24BDAC7A8](v49, v50);
  v147 = (char *)&v133 - v53;
  v54 = *a1;
  v161 = a1[1];
  v162 = v54;
  v55 = *((unsigned __int8 *)a1 + 16);
  v156 = v34;
  v157 = v55;
  v56 = *(_QWORD *)(a2 + 16);
  v146 = a3;
  if (v56)
  {
    v136 = v52;
    v134 = v17;
    v133 = v11;
    v138 = v8;
    v135 = v24;
    v137 = v7;
    v57 = v51 + ((*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80));
    *(_QWORD *)&v154 = *(_QWORD *)(v160 + 72);
    v155 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 16);
    v141 = v51;
    swift_bridgeObjectRetain();
    v151 = xmmword_23BB8C510;
    v150 = 0x800000023BB9A7A0;
    v58 = v152;
    while (1)
    {
      v155(v46, v57, v34);
      sub_23BB88C30();
      v59 = sub_23BB88C54();
      v61 = v60;
      v62 = sub_23BB8A7E4();
      v64 = v63;
      v65 = HIBYTE(v61) & 0xF;
      if ((v61 & 0x2000000000000000) == 0)
        v65 = v59 & 0xFFFFFFFFFFFFLL;
      if (v65)
      {
        sub_23BA44A58();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
        v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = v151;
        *(_QWORD *)(v66 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v66 + 64) = sub_23B9A5C8C();
        v67 = v150;
        *(_QWORD *)(v66 + 32) = 0xD000000000000029;
        *(_QWORD *)(v66 + 40) = v67;
        v68 = (void *)sub_23BB8ABB0();
        v69 = (void *)sub_23BB8A784();
        v70 = objc_msgSend(v68, sel_evaluateWithObject_, v69);

        if ((v70 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v71 = 1;
        }
        else
        {
          v72 = sub_23BB4E730(v59, v61);
          swift_bridgeObjectRelease();
          if (v72)
            v71 = 0;
          else
            v71 = 2;
        }
        v34 = v156;
        v58 = v152;
      }
      else
      {
        swift_bridgeObjectRelease();
        v71 = 2;
      }
      (*(void (**)(char *, uint64_t))(v158 + 8))(v58, v159);
      if (v62 == v162 && v64 == v161 || (sub_23BB8B1A4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (v71 == v157)
        {
          swift_bridgeObjectRelease();
          v92 = *(void (**)(uint64_t, char *, uint64_t))(v160 + 32);
          v93 = v136;
          v92((uint64_t)v136, v46, v34);
          v92((uint64_t)v147, v93, v34);
          v94 = v137;
          if (qword_256A58E00 != -1)
            swift_once();
          v95 = sub_23BB891C4();
          __swift_project_value_buffer(v95, (uint64_t)qword_256A73E80);
          v96 = sub_23BB891AC();
          v97 = sub_23BB8ABEC();
          v98 = os_log_type_enabled(v96, v97);
          v99 = v148;
          v100 = (uint64_t)v144;
          v101 = v145;
          if (v98)
          {
            v102 = (uint8_t *)swift_slowAlloc();
            v103 = swift_slowAlloc();
            v164 = v103;
            *(_DWORD *)v102 = 136315138;
            v163 = sub_23BB7B69C(0xD000000000000059, 0x800000023BB9A960, &v164);
            sub_23BB8ACB8();
            _os_log_impl(&dword_23B979000, v96, v97, "SessionLive: %s - Friend is sharing location with me", v102, 0xCu);
            swift_arrayDestroy();
            v104 = v103;
            v34 = v156;
            MEMORY[0x24260D9B4](v104, -1, -1);
            MEMORY[0x24260D9B4](v102, -1, -1);
          }

          v105 = (uint64_t)v142;
          sub_23BB88C24();
          sub_23BB88870();
          v106 = v138;
          v107 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56);
          v107(v101, 0, 1, v94);
          v108 = v100 + *(int *)(v143 + 48);
          sub_23B989EFC(v105, v100, (uint64_t *)&unk_256A5E6B0);
          sub_23B989EFC(v101, v108, (uint64_t *)&unk_256A5E6B0);
          v109 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
          if (v109(v100, 1, v94) == 1)
          {
            sub_23B989D60(v101, (uint64_t *)&unk_256A5E6B0);
            v110 = v109(v108, 1, v94);
            v111 = (uint64_t)v135;
            if (v110 == 1)
            {
              sub_23B989D60(v100, (uint64_t *)&unk_256A5E6B0);
              goto LABEL_61;
            }
LABEL_58:
            sub_23B989D60(v100, &qword_256A5DDF0);
            goto LABEL_59;
          }
          v126 = (uint64_t)v134;
          sub_23B989EFC(v100, (uint64_t)v134, (uint64_t *)&unk_256A5E6B0);
          if (v109(v108, 1, v94) == 1)
          {
            sub_23B989D60(v145, (uint64_t *)&unk_256A5E6B0);
            (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v126, v94);
            v111 = (uint64_t)v135;
            goto LABEL_58;
          }
          v127 = v138;
          v128 = v133;
          (*(void (**)(char *, uint64_t, uint64_t))(v138 + 32))(v133, v108, v94);
          sub_23BA44AD8(&qword_256A5DE00, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
          v129 = sub_23BB8A760();
          v130 = *(void (**)(char *, uint64_t))(v127 + 8);
          v130(v128, v94);
          sub_23B989D60(v145, (uint64_t *)&unk_256A5E6B0);
          v130((char *)v126, v94);
          v34 = v156;
          sub_23B989D60(v100, (uint64_t *)&unk_256A5E6B0);
          v111 = (uint64_t)v135;
          if ((v129 & 1) != 0)
LABEL_61:
            v107(v111, 1, 1, v94);
          else
LABEL_59:
            sub_23B989EFC(v105, v111, (uint64_t *)&unk_256A5E6B0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
          sub_23B989EFC(v111, v99, (uint64_t *)&unk_256A5E6B0);
          v131 = v147;
          sub_23BB88C3C();
          sub_23B989D60(v111, (uint64_t *)&unk_256A5E6B0);
          sub_23B989D60(v105, (uint64_t *)&unk_256A5E6B0);
          (*(void (**)(char *, uint64_t))(v160 + 8))(v131, v34);
          goto LABEL_63;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v160 + 8))(v46, v34);
      v57 += v154;
      if (!--v56)
      {
        swift_bridgeObjectRelease();
        a3 = v146;
        break;
      }
    }
  }
  v73 = *(_QWORD *)(a3 + 16);
  if (!v73)
  {
LABEL_46:
    if (qword_256A58E00 != -1)
      swift_once();
    v112 = sub_23BB891C4();
    __swift_project_value_buffer(v112, (uint64_t)qword_256A73E80);
    v113 = sub_23BB891AC();
    v114 = sub_23BB8ABEC();
    if (os_log_type_enabled(v113, v114))
    {
      v115 = (uint8_t *)swift_slowAlloc();
      v116 = swift_slowAlloc();
      v164 = v116;
      *(_DWORD *)v115 = 136315138;
      v163 = sub_23BB7B69C(0xD000000000000059, 0x800000023BB9A960, &v164);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v113, v114, "SessionLive: %s notShared", v115, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v116, -1, -1);
      MEMORY[0x24260D9B4](v115, -1, -1);
    }

    goto LABEL_63;
  }
  v74 = a3 + ((*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80));
  v155 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 72);
  v75 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 16);
  swift_bridgeObjectRetain();
  v154 = xmmword_23BB8C510;
  v152 = (char *)0xD000000000000029;
  *(_QWORD *)&v151 = 0x800000023BB9A7A0;
  v76 = v149;
  v77 = v153;
  while (1)
  {
    v75(v77, v74, v34);
    sub_23BB88C30();
    v78 = sub_23BB88C54();
    v80 = v79;
    v81 = sub_23BB8A7E4();
    v83 = v82;
    v84 = HIBYTE(v80) & 0xF;
    if ((v80 & 0x2000000000000000) == 0)
      v84 = v78 & 0xFFFFFFFFFFFFLL;
    if (v84)
    {
      sub_23BA44A58();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A641D0);
      v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = v154;
      *(_QWORD *)(v85 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v85 + 64) = sub_23B9A5C8C();
      v86 = v151;
      *(_QWORD *)(v85 + 32) = v152;
      *(_QWORD *)(v85 + 40) = v86;
      v87 = (void *)sub_23BB8ABB0();
      v88 = (void *)sub_23BB8A784();
      v89 = objc_msgSend(v87, sel_evaluateWithObject_, v88);

      if ((v89 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v90 = 1;
      }
      else
      {
        v91 = sub_23BB4E730(v78, v80);
        swift_bridgeObjectRelease();
        if (v91)
          v90 = 0;
        else
          v90 = 2;
      }
      v34 = v156;
      v76 = v149;
    }
    else
    {
      swift_bridgeObjectRelease();
      v90 = 2;
    }
    (*(void (**)(char *, uint64_t))(v158 + 8))(v76, v159);
    if ((v81 != v162 || v83 != v161) && (sub_23BB8B1A4() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    if (v90 == v157)
      break;
LABEL_23:
    v77 = v153;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v153, v34);
    v74 += (uint64_t)v155;
    if (!--v73)
    {
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease();
  v117 = *(void (**)(char *, char *, uint64_t))(v160 + 32);
  v118 = v139;
  v117(v139, v153, v34);
  v119 = v140;
  v117(v140, v118, v34);
  if (qword_256A58E00 != -1)
    swift_once();
  v120 = sub_23BB891C4();
  __swift_project_value_buffer(v120, (uint64_t)qword_256A73E80);
  v121 = sub_23BB891AC();
  v122 = sub_23BB8ABEC();
  if (os_log_type_enabled(v121, v122))
  {
    v123 = (uint8_t *)swift_slowAlloc();
    v124 = swift_slowAlloc();
    v164 = v124;
    *(_DWORD *)v123 = 136315138;
    v163 = sub_23BB7B69C(0xD000000000000059, 0x800000023BB9A960, &v164);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v121, v122, "SessionLive: %s - Friend I've requested location", v123, 0xCu);
    swift_arrayDestroy();
    v125 = v124;
    v34 = v156;
    MEMORY[0x24260D9B4](v125, -1, -1);
    MEMORY[0x24260D9B4](v123, -1, -1);
  }

  sub_23BB88C3C();
  (*(void (**)(char *, uint64_t))(v160 + 8))(v119, v34);
LABEL_63:
  type metadata accessor for SessionFollowingState(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BA42BEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3[16] = a1;
  v3[17] = v2;
  v5 = sub_23BB88C78();
  v3[18] = v5;
  v3[19] = *(_QWORD *)(v5 - 8);
  v3[20] = swift_task_alloc();
  v6 = sub_23BB88C84();
  v3[21] = v6;
  v3[22] = *(_QWORD *)(v6 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v7 = sub_23BB88B88();
  v3[25] = v7;
  v3[26] = *(_QWORD *)(v7 - 8);
  v3[27] = swift_task_alloc();
  v8 = sub_23BB88AEC();
  v3[28] = v8;
  v3[29] = *(_QWORD *)(v8 - 8);
  v3[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDB0);
  v3[31] = swift_task_alloc();
  sub_23BB88984();
  v3[32] = swift_task_alloc();
  v9 = sub_23BB88E40();
  v3[33] = v9;
  v3[34] = *(_QWORD *)(v9 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  v10 = swift_task_alloc();
  v11 = *a2;
  v12 = a2[1];
  v3[37] = v10;
  v3[38] = v11;
  v3[39] = v12;
  return swift_task_switch();
}

uint64_t sub_23BA42D70()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v17)(uint64_t);
  void (*v18)(uint64_t);
  _QWORD *v19;
  uint64_t (*v21)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v22;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 320) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v22 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 120) = sub_23BB7B69C(0xD000000000000026, 0x800000023BB9AAB0, &v22);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = *(void **)(v0 + 128);
  objc_msgSend(v6, sel_coordinate);
  objc_msgSend(v6, sel_coordinate);
  objc_msgSend(v6, sel_horizontalAccuracy);
  objc_msgSend(v6, sel_verticalAccuracy);
  objc_msgSend(v6, sel_speed);
  objc_msgSend(v6, sel_altitude);
  v7 = objc_msgSend(v6, sel_floor);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_level);

  }
  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 240);
  v12 = *(_QWORD *)(v0 + 216);
  v13 = *(_QWORD *)(v0 + 208);
  v14 = objc_msgSend(*(id *)(v0 + 128), sel_timestamp, *(_QWORD *)(v0 + 200));
  sub_23BB8896C();

  v15 = sub_23BB88EA0();
  *(_QWORD *)(v0 + 328) = v15;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  *(_QWORD *)(v0 + 336) = v16;
  v16(v9, 1, 1, v15);
  *(_DWORD *)(v0 + 44) = *MEMORY[0x24BE31D98];
  v17 = *(void (**)(uint64_t))(v10 + 104);
  *(_QWORD *)(v0 + 344) = v17;
  v17(v11);
  *(_DWORD *)(v0 + 76) = *MEMORY[0x24BE31EF0];
  v18 = *(void (**)(uint64_t))(v13 + 104);
  *(_QWORD *)(v0 + 352) = v18;
  v18(v12);
  sub_23BB88E10();
  swift_bridgeObjectRetain();
  sub_23BA44160(MEMORY[0x24BEE4AF8]);
  sub_23BB88C6C();
  v21 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE31E38] + MEMORY[0x24BE31E38]);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v19;
  *v19 = v0;
  v19[1] = sub_23BA43148;
  return v21(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 296), 0);
}

uint64_t sub_23BA43148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA431D4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int v40;
  void (*v41)(uint64_t, _QWORD, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  void (*v45)(uint64_t, _QWORD, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(void **)(v0 + 128);
  objc_msgSend(v1, sel_coordinate);
  objc_msgSend(v1, sel_coordinate);
  objc_msgSend(v1, sel_horizontalAccuracy);
  objc_msgSend(v1, sel_verticalAccuracy);
  objc_msgSend(v1, sel_speed);
  objc_msgSend(v1, sel_altitude);
  v2 = objc_msgSend(v1, sel_floor);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_level);

  }
  v44 = *(_DWORD *)(v0 + 76);
  v40 = *(_DWORD *)(v0 + 44);
  v37 = *(_QWORD *)(v0 + 328);
  v41 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 344);
  v42 = *(_QWORD *)(v0 + 288);
  v45 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 352);
  v47 = *(_QWORD *)(v0 + 272);
  v50 = *(char **)(v0 + 280);
  v53 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 216);
  v36 = *(_QWORD *)(v0 + 224);
  v7 = *(_QWORD *)(v0 + 192);
  v38 = *(_QWORD *)(v0 + 200);
  v39 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 336);
  v9 = *(_QWORD *)(v0 + 176);
  v8 = *(_QWORD *)(v0 + 184);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = objc_msgSend(*(id *)(v0 + 128), sel_timestamp);
  sub_23BB8896C();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
  sub_23BB88E94();
  v39(v4, 0, 1, v37);
  v41(v5, v40, v36);
  v45(v6, v44, v38);
  sub_23BB88E10();
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v50, v42, v53);
  v12 = sub_23BA44518(v50);
  v14 = v13;
  v16 = v15;
  *(_QWORD *)(v0 + 16) = v12;
  *(_QWORD *)(v0 + 24) = v13;
  *(_QWORD *)(v0 + 32) = v15;
  *(_BYTE *)(v0 + 40) = 4;
  swift_bridgeObjectRetain_n();
  v17 = v16;
  v18 = sub_23BB891AC();
  v19 = sub_23BB8ABEC();
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(_QWORD *)(v0 + 296);
  v22 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 192);
  if (v20)
  {
    v51 = *(_QWORD *)(v0 + 176);
    v54 = *(_QWORD *)(v0 + 168);
    v46 = *(_QWORD *)(v0 + 272);
    v48 = *(_QWORD *)(v0 + 288);
    v56 = *(_QWORD *)(v0 + 296);
    v24 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v58 = v43;
    *(_DWORD *)v24 = 136315394;
    *(_QWORD *)(v0 + 104) = sub_23BB7B69C(0xD000000000000026, 0x800000023BB9AAB0, &v58);
    sub_23BB8ACB8();
    *(_WORD *)(v24 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = v12;
    *(_QWORD *)(v0 + 56) = v14;
    *(_QWORD *)(v0 + 64) = v17;
    *(_BYTE *)(v0 + 72) = 4;
    swift_bridgeObjectRetain();
    v25 = v17;
    v26 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 112) = sub_23BB7B69C(v26, v27, &v58);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    _os_log_impl(&dword_23B979000, v18, v19, "SessionLive: didReceive %s - l: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v43, -1, -1);
    MEMORY[0x24260D9B4](v24, -1, -1);

    v28 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v28(v48, v22);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v23, v54);
    v29 = v56;
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 168);
    v31 = *(_QWORD *)(v0 + 288);
    v32 = *(_QWORD *)(v0 + 176);
    v33 = v18;
    v34 = *(_QWORD *)(v0 + 272);

    swift_bridgeObjectRelease_n();
    v28 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v28(v31, v22);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v23, v30);
    v29 = v21;
  }
  v28(v29, v22);
  swift_beginAccess();
  v55 = *(_QWORD *)(v0 + 24);
  v57 = *(_QWORD *)(v0 + 16);
  v52 = *(_QWORD *)(v0 + 32);
  v49 = *(unsigned __int8 *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 8))(v57, v55, v52, v49);
}

uint64_t sub_23BA43750()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 8))(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 264));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA43818(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_23BB88B88();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v4 = sub_23BB88AEC();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDB0);
  v2[13] = swift_task_alloc();
  sub_23BB88984();
  v2[14] = swift_task_alloc();
  v5 = sub_23BB88E40();
  v2[15] = v5;
  v2[16] = *(_QWORD *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA43928()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD, uint64_t);
  uint64_t v27;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v27 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(0xD000000000000018, 0x800000023BB9A780, &v27);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "SessionLive: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = *(void **)(v0 + 40);
  objc_msgSend(v6, sel_coordinate);
  objc_msgSend(v6, sel_coordinate);
  objc_msgSend(v6, sel_horizontalAccuracy);
  objc_msgSend(v6, sel_verticalAccuracy);
  objc_msgSend(v6, sel_speed);
  objc_msgSend(v6, sel_altitude);
  v7 = objc_msgSend(v6, sel_floor);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_level);

  }
  v9 = *(_QWORD *)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 64);
  v15 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 128);
  v16 = objc_msgSend(*(id *)(v0 + 40), sel_timestamp, *(_QWORD *)(v0 + 56));
  sub_23BB8896C();

  v17 = sub_23BB88EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x24BE31D98], v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v15, *MEMORY[0x24BE31EF0], v22);
  sub_23BB88E10();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  *(_QWORD *)(v0 + 168) = v18;
  v18(v24, v9, v25);
  sub_23BB88BDC();
  swift_allocObject();
  v19 = sub_23BB88BD0();
  *(_QWORD *)(v0 + 176) = v19;
  v26 = (uint64_t (*)(_QWORD, uint64_t))((int)*MEMORY[0x24BE31E08] + MEMORY[0x24BE31E08]);
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v20;
  *v20 = v0;
  v20[1] = sub_23BA43CF4;
  return v26(*(_QWORD *)(v0 + 144), v19);
}

uint64_t sub_23BA43CF4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA43D68()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(char **)(v0 + 136);
  (*(void (**)(char *, _QWORD, _QWORD))(v0 + 168))(v1, *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
  v20 = sub_23BA44518(v1);
  v3 = v2;
  v5 = v4;
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v18 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 128);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v21 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 24) = sub_23BB7B69C(0xD000000000000018, 0x800000023BB9A780, &v21);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v6, v7, "SessionLive: didReceive %s - shiftedLocation", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

    v11 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v11(v18, v8);
    v12 = v19;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);

    v11 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v11(v14, v8);
    v12 = v13;
  }
  v11(v12, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v20, v3, v5, 4);
}

uint64_t sub_23BA43F80()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  swift_release();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABD4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v9 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000018, 0x800000023BB9A780, &v9);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "SessionLive: didReceive %s - error receiving shiftedLocation", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 120);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SessionLive.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23BA44144()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_23BA44160(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DDA0);
  v2 = (_QWORD *)sub_23BB8B000();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_23BA44270(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23BA44270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23BB8B240();
  sub_23BB8A808();
  v4 = sub_23BB8B270();
  return sub_23BA442D4(a1, a2, v4);
}

unint64_t sub_23BA442D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_23BB8B1A4() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_23BB8B1A4() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_23BB8B1A4() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_23BA44418(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23BA44AD8(&qword_256A5DCB0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SessionLive, (uint64_t)&protocol conformance descriptor for SessionLive);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SessionLive()
{
  return objc_opt_self();
}

uint64_t method lookup function for SessionLive()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionLive.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(v0 + 112) + *(_QWORD *)(v0 + 112));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23BA450FC;
  return v4();
}

unint64_t sub_23BA444D4()
{
  unint64_t result;

  result = qword_256A5DD90;
  if (!qword_256A5DD90)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256A5DD90);
  }
  return result;
}

uint64_t sub_23BA44518(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  char *v43;
  id v44;
  void *v45;
  char *v46;
  int v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  v2 = sub_23BB88AEC();
  v59 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v58 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB88984();
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v54 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BB88DA4();
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23BB88E40();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58E00 != -1)
    swift_once();
  v17 = sub_23BB891C4();
  __swift_project_value_buffer(v17, (uint64_t)qword_256A73E80);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, a1, v12);
  v18 = sub_23BB891AC();
  v19 = sub_23BB8ABC8();
  v20 = os_log_type_enabled(v18, v19);
  v57 = v12;
  if (v20)
  {
    v21 = swift_slowAlloc();
    v51 = v2;
    v22 = v21;
    v50 = swift_slowAlloc();
    v61[0] = v50;
    *(_DWORD *)v22 = 136315394;
    v60 = sub_23BB7B69C(0x636F6C2874696E69, 0xEF293A6E6F697461, v61);
    sub_23BB8ACB8();
    *(_WORD *)(v22 + 12) = 2080;
    v49 = v22 + 14;
    sub_23BA44AD8(&qword_256A5DDB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE32430], MEMORY[0x24BE32440]);
    v23 = sub_23BB8B150();
    v60 = sub_23BB7B69C(v23, v24, v61);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    v25(v16, v12);
    _os_log_impl(&dword_23B979000, v18, v19, "SessionLive: %s - %s", (uint8_t *)v22, 0x16u);
    v26 = v50;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v26, -1, -1);
    v27 = v22;
    v2 = v51;
    MEMORY[0x24260D9B4](v27, -1, -1);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t))(v13 + 8);
    v25(v16, v12);
  }

  v29 = v52;
  v28 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v11, *MEMORY[0x24BE323B0], v53);
  v30 = sub_23BB88DD4();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
  sub_23BB88E1C();
  v32 = v31;
  sub_23BB88E28();
  v34 = v33;
  sub_23BB88E04();
  v36 = v35;
  sub_23BB88DC8();
  v38 = v37;
  sub_23BB88DBC();
  v40 = v39;
  sub_23BB88DE0();
  v42 = v41;
  sub_23BB88E34();
  v43 = v54;
  sub_23BB88900();
  v44 = objc_allocWithZone(MEMORY[0x24BDBFA80]);
  v45 = (void *)sub_23BB888D0();
  objc_msgSend(v44, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v45, v32, v34, v36, v38, v40, 0.0, 0.0, v42, 0);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v56);
  v46 = v58;
  sub_23BB88DB0();
  v47 = (*(uint64_t (**)(char *, uint64_t))(v59 + 88))(v46, v2);
  if (v47 != *MEMORY[0x24BE31DA8]
    && v47 != *MEMORY[0x24BE31D98]
    && v47 != *MEMORY[0x24BE31DA0]
    && v47 != *MEMORY[0x24BE31DB0])
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v2);
  }
  v25(a1, v57);
  return v30;
}

unint64_t sub_23BA44A14()
{
  unint64_t result;

  result = qword_256A5DD98;
  if (!qword_256A5DD98)
  {
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_256A5DD98);
  }
  return result;
}

unint64_t sub_23BA44A58()
{
  unint64_t result;

  result = qword_256A5DDD0;
  if (!qword_256A5DDD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256A5DDD0);
  }
  return result;
}

unint64_t sub_23BA44A94()
{
  unint64_t result;

  result = qword_256A5DDD8;
  if (!qword_256A5DDD8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9144C, &type metadata for SessionFriendError);
    atomic_store(result, &qword_256A5DDD8);
  }
  return result;
}

uint64_t sub_23BA44AD8(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24260D8DC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BA44B18(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BA44B5C(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA3A60C(a1, *(_QWORD *)(v1 + 16), &qword_256A5DE70, &qword_256A5DE78);
}

uint64_t sub_23BA44B84()
{
  return objectdestroyTm_6(&qword_256A5DE60, &qword_256A5DE70, &qword_256A5DE78);
}

uint64_t sub_23BA44BA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE60) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DE70) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B990D68;
  return sub_23BA38838(a1, v9, v10, v11, v12);
}

uint64_t sub_23BA44C5C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE2(a3) != 255)
    return sub_23BA19ABC(result, a2, a3, SBYTE2(a3));
  return result;
}

uint64_t sub_23BA44C70(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA3A60C(a1, *(_QWORD *)(v1 + 16), &qword_256A5DEF0, &qword_256A5DEF8);
}

uint64_t sub_23BA44C98()
{
  return objectdestroyTm_6(&qword_256A5DED8, &qword_256A5DEF0, &qword_256A5DEF8);
}

uint64_t sub_23BA44CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DED8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEF0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B990D68;
  return sub_23BA3C2A8(a1, v9, v10, v11, v12);
}

uint64_t sub_23BA44D70(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA3A60C(a1, *(_QWORD *)(v1 + 16), &qword_256A5DF60, &qword_256A5DF68);
}

uint64_t sub_23BA44D98(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BEE6AA8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23BA44DD8()
{
  return objectdestroyTm_6(&qword_256A5DF50, &qword_256A5DF60, &qword_256A5DF68);
}

uint64_t objectdestroyTm_6(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  v11 = (v8 + v9 + v10) & ~v10;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v3 + v8, v6);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v3 + v11, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v3 + v11, v12);
  return swift_deallocObject();
}

uint64_t sub_23BA44ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF50) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DF60) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23B97C964;
  return sub_23BA3A9A4(a1, v9, v10, v11, v12);
}

id sub_23BA44F90(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

uint64_t sub_23BA44FC0(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_23BA44FEC(result, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23BA44FEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result;

  if (a3)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SessionFriendError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BA45058 + 4 * byte_23BB91334[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BA45078 + 4 * byte_23BB91339[v4]))();
}

_BYTE *sub_23BA45058(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BA45078(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA45080(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA45088(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA45090(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA45098(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SessionFriendError()
{
  return &type metadata for SessionFriendError;
}

unint64_t sub_23BA450B8()
{
  unint64_t result;

  result = qword_256A5DFC8;
  if (!qword_256A5DFC8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB91424, &type metadata for SessionFriendError);
    atomic_store(result, (unint64_t *)&qword_256A5DFC8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MessagesFeatureFlag(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23BA45144 + 4 * byte_23BB91490[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23BA45164 + 4 * byte_23BB91495[v4]))();
}

_BYTE *sub_23BA45144(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23BA45164(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA4516C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA45174(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23BA4517C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23BA45184(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MessagesFeatureFlag()
{
  return &type metadata for MessagesFeatureFlag;
}

unint64_t sub_23BA451A4()
{
  unint64_t result;

  result = qword_256A5DFD0;
  if (!qword_256A5DFD0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB914F4, &type metadata for MessagesFeatureFlag);
    atomic_store(result, (unint64_t *)&qword_256A5DFD0);
  }
  return result;
}

const char *sub_23BA451E8()
{
  return "Messages";
}

const char *sub_23BA451FC()
{
  return "waldoCPolish";
}

uint64_t AvatarView.init(contact:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

double AvatarView.body.getter@<D0>(uint64_t a1@<X8>)
{
  void **v1;
  void *v3;
  id v4;
  double result;
  __int128 v6;
  __int16 v7;
  char v8;

  v3 = *v1;
  if (objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0) == (id)3)
    v4 = v3;
  else
    sub_23BB89FA4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DFD8);
  sub_23BA455F8();
  sub_23BA4563C();
  sub_23BB89944();
  result = *(double *)&v6;
  *(_OWORD *)a1 = v6;
  *(_WORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 18) = v8;
  return result;
}

void sub_23BA452F0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  unint64_t v13;

  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = (void *)v5;
    v13 = MEMORY[0x24BEE4AF8];
    if (a3)
    {
      v7 = a3;
      MEMORY[0x24260C820](a1);
      if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23BB8A928();
      sub_23BB8A958();
      sub_23BB8A904();
      v8 = v13;
    }
    else
    {
      v9 = a1;
      v8 = MEMORY[0x24BEE4AF8];
    }

    v10 = objc_msgSend(v6, sel_contacts);
    sub_23B9C7670();
    v11 = sub_23BB8A8EC();

    LOBYTE(v10) = sub_23BA45980(v11, v8);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = (id)sub_23BB8A8E0();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setContacts_, v12);

    }
  }
}

id sub_23BA45494()
{
  id v0;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAE50]), sel_init);
  objc_msgSend(v0, sel_setUserInteractionEnabled_, 0);
  return v0;
}

void sub_23BA454DC(void *a1, uint64_t a2)
{
  void **v2;

  sub_23BA452F0(a1, a2, *v2);
}

uint64_t sub_23BA454F4()
{
  return sub_23BB898C0();
}

uint64_t sub_23BA45534()
{
  sub_23BA45878();
  return sub_23BB89920();
}

uint64_t sub_23BA45584()
{
  sub_23BA45878();
  return sub_23BB898CC();
}

void sub_23BA455D4()
{
  sub_23BA45878();
  sub_23BB89914();
  __break(1u);
}

unint64_t sub_23BA455F8()
{
  unint64_t result;

  result = qword_256A5DFE0;
  if (!qword_256A5DFE0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB91668, &type metadata for AvatarViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_256A5DFE0);
  }
  return result;
}

unint64_t sub_23BA4563C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5DFE8;
  if (!qword_256A5DFE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5DFD8);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEB358], v1);
    atomic_store(result, (unint64_t *)&qword_256A5DFE8);
  }
  return result;
}

uint64_t sub_23BA45688()
{
  return swift_getOpaqueTypeConformance2();
}

void **_s16DeviceImageStateOwCP(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void _s16DeviceImageStateOwxx(id *a1)
{

}

void **assignWithCopy for AvatarView(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for AvatarView(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for AvatarView()
{
  return &type metadata for AvatarView;
}

unint64_t sub_23BA4574C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5DFF0;
  if (!qword_256A5DFF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5DFF8);
    v2[0] = sub_23BA455F8();
    v2[1] = sub_23BA4563C();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5DFF0);
  }
  return result;
}

uint64_t _s12FindMyUICore10AvatarViewVwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s12FindMyUICore10AvatarViewVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AvatarViewRepresentable()
{
  return &type metadata for AvatarViewRepresentable;
}

unint64_t sub_23BA45878()
{
  unint64_t result;

  result = qword_256A5E000;
  if (!qword_256A5E000)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB915D8, &type metadata for AvatarViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_256A5E000);
  }
  return result;
}

uint64_t sub_23BA458BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_23BB8B1A4(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_23BB8B1A4() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

id sub_23BA45980(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_23BB8AFD0();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_23BB8AFD0();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x24260CD9C](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x24260CD9C](0, v2);
LABEL_21:
    v14 = v13;
    sub_23B9C7670();
    v15 = sub_23BB8AC70();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x24260CD9C](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x24260CD9C](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_23BB8AC70();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_23BB8AC70();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_23BA45C74()
{
  return sub_23BB896C8();
}

uint64_t CloseButton.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BA45CD8()
{
  return sub_23BB896C8();
}

uint64_t CloseButton.makeUIView(context:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E008);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_23B9C60B4(0, &qword_256A5E010);
  sub_23B9C60B4(0, &qword_256A5B090);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_23BB8AC88();
  return sub_23BB8AC94();
}

uint64_t sub_23BA45E40()
{
  void (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E008);
  sub_23BB89A7C();
  v0 = *(void (**)(uint64_t))(v3 + 16);
  swift_retain();
  v1 = swift_release();
  v0(v1);
  return swift_release();
}

uint64_t CloseButton.updateUIView(_:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = v0;
  v2 = type metadata accessor for CloseButton();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E008);
  sub_23BB89A7C();
  v6 = v10[1];
  sub_23BA45FC8(v1, (uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  sub_23BA46010((uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *(_QWORD *)(v6 + 16) = sub_23BA46054;
  *(_QWORD *)(v6 + 24) = v8;
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for CloseButton()
{
  uint64_t result;

  result = qword_256A5E078;
  if (!qword_256A5E078)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA45FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloseButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA46010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloseButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t CloseButton.makeCoordinator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v1 = type metadata accessor for CloseButton();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1, v4);
  v5 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA45FC8(v0, (uint64_t)v5);
  v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v7 = swift_allocObject();
  sub_23BA46010((uint64_t)v5, v7 + v6);
  type metadata accessor for CloseButton.Coordinator();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_23BA46054;
  *(_QWORD *)(result + 24) = v7;
  return result;
}

uint64_t sub_23BA46108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_23BB893B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA83AFC((uint64_t)v4);
  sub_23BB893A4();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_23BA4618C()
{
  type metadata accessor for CloseButton();
  return sub_23BA46108();
}

uint64_t type metadata accessor for CloseButton.Coordinator()
{
  return objc_opt_self();
}

uint64_t CloseButton.Coordinator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CloseButton.Coordinator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23BA4621C()
{
  return sub_23BA46B10(&qword_256A5E018, (uint64_t)&protocol conformance descriptor for CloseButton);
}

uint64_t sub_23BA46240(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E008);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  sub_23B9C60B4(0, &qword_256A5E010);
  sub_23B9C60B4(0, &qword_256A5B090);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_23BB8AC88();
  return sub_23BB8AC94();
}

uint64_t sub_23BA46388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v4 = v3;
  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E008);
  sub_23BB89A7C();
  v7 = v11[1];
  sub_23BA45FC8(v4, (uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  sub_23BA46010((uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(_QWORD *)(v7 + 16) = sub_23BA46054;
  *(_QWORD *)(v7 + 24) = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_23BA46460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  sub_23BA45FC8(v3, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  sub_23BA46010((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  type metadata accessor for CloseButton.Coordinator();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_23BA46054;
  *(_QWORD *)(result + 24) = v8;
  *a3 = result;
  return result;
}

uint64_t sub_23BA46518()
{
  sub_23BA46B10(&qword_256A5E168, (uint64_t)&protocol conformance descriptor for CloseButton);
  return sub_23BB89920();
}

uint64_t sub_23BA46578()
{
  sub_23BA46B10(&qword_256A5E168, (uint64_t)&protocol conformance descriptor for CloseButton);
  return sub_23BB898CC();
}

void sub_23BA465D8()
{
  sub_23BA46B10(&qword_256A5E168, (uint64_t)&protocol conformance descriptor for CloseButton);
  sub_23BB89914();
  __break(1u);
}

uint64_t *initializeBufferWithCopyOfBuffer for CloseButton(uint64_t *a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_23BB893B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CloseButton(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_23BB893B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for CloseButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23BB893B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for CloseButton(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_23BA46880((uint64_t)a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_23BB893B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23BA46880(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for CloseButton(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_23BB893B0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for CloseButton(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_23BA46880((uint64_t)a1);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_23BB893B0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CloseButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA46A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CloseButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA46A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A230);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_23BA46A9C()
{
  unint64_t v0;

  sub_23B9B1F04();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t method lookup function for CloseButton.Coordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23BA46B10(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CloseButton();
    result = MEMORY[0x24260D8DC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CloseButton() - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A228);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23BB893B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + ((v1 + 16) & ~v1), v2);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E008);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BA46C5C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E008);
  return sub_23BA45E40();
}

uint64_t BeaconsInfoProvider.data.getter()
{
  return sub_23BA47118();
}

uint64_t BeaconsInfoProvider.storage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  return sub_23BA478DC(v3, a1);
}

uint64_t sub_23BA46D48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  return sub_23BA478DC(v4, a2);
}

uint64_t sub_23BA46DE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59628);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23BA478DC(a1, (uint64_t)v7);
  v8 = *a2;
  swift_getKeyPath();
  v11 = v8;
  v12 = v7;
  v13 = v8;
  sub_23BA47850();
  sub_23BB88A14();
  swift_release();
  return sub_23BA4793C((uint64_t)v7);
}

uint64_t BeaconsInfoProvider.storage.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A14();
  swift_release();
  return sub_23BA4793C(a1);
}

uint64_t sub_23BA46F50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  sub_23BA4B804(a2, v3);
  return swift_endAccess();
}

void (*BeaconsInfoProvider.storage.modify(_QWORD *a1))(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  swift_getKeyPath();
  v4[4] = OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar;
  *v4 = v2;
  v4[5] = sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  return sub_23BA4709C;
}

void sub_23BA4709C(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  swift_endAccess();
  *v1 = v1[3];
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  free(v1);
}

uint64_t sub_23BA47104()
{
  return sub_23BA47118();
}

uint64_t sub_23BA47118()
{
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA471A0()
{
  swift_getKeyPath();
  sub_23BA47850();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA47240(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__loadingStateResetTaskBySubscription);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t BeaconsInfoProvider.isLoading.getter()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__isLoading);
}

uint64_t sub_23BA47320@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__isLoading);
  return result;
}

uint64_t sub_23BA4739C()
{
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A14();
  return swift_release();
}

uint64_t sub_23BA4742C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_23BB891C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v23 = v0;
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v7 = v0 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v7, v2);
  swift_retain_n();
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABC8();
  if (os_log_type_enabled(v8, v9))
  {
    v19 = v2;
    v10 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v22 = v17;
    v18 = v3;
    *(_DWORD *)v10 = 136315138;
    v16 = v10 + 4;
    swift_getKeyPath();
    v21 = v1;
    sub_23BB88A20();
    swift_release();
    swift_beginAccess();
    sub_23BA4B29C();
    swift_bridgeObjectRetain();
    v11 = sub_23BB8A6C4();
    v13 = v12;
    swift_bridgeObjectRelease();
    v20 = sub_23BB7B69C(v11, v13, &v22);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v8, v9, "BeaconsInfoProvider: data - %s", v10, 0xCu);
    v14 = v17;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

uint64_t sub_23BA476F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BA4770C(a1, &OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data, a2);
}

uint64_t sub_23BA4770C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA477AC()
{
  swift_getKeyPath();
  sub_23BA47850();
  swift_bridgeObjectRetain();
  sub_23BB88A14();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23BA47850()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A59600;
  if (!qword_256A59600)
  {
    v1 = type metadata accessor for BeaconsInfoProvider();
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for BeaconsInfoProvider, v1);
    atomic_store(result, (unint64_t *)&qword_256A59600);
  }
  return result;
}

uint64_t type metadata accessor for BeaconsInfoProvider()
{
  uint64_t result;

  result = qword_256A5E250;
  if (!qword_256A5E250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA478DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA47924()
{
  uint64_t v0;

  return sub_23BA46F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BA4793C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59628);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BA47984(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_23BA4742C();
}

uint64_t sub_23BA479FC()
{
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  return swift_retain();
}

uint64_t sub_23BA47A74@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__valuePublisher);
  return swift_retain();
}

uint64_t sub_23BA47AF4()
{
  swift_getKeyPath();
  sub_23BA47850();
  swift_retain();
  sub_23BB88A14();
  swift_release();
  return swift_release();
}

uint64_t BeaconsInfoProvider.__allocating_init(dependencies:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  BeaconsInfoProvider.init(dependencies:)(a1);
  return v2;
}

_OWORD *BeaconsInfoProvider.init(dependencies:)(__int128 *a1)
{
  _OWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  __int128 v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char *v36;

  v2 = v1;
  v4 = sub_23BB889CC();
  MEMORY[0x24BDAC7A8](v4, v5);
  v36 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB891C4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10);
  v11 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v33 - v14;
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A59628);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(int *)(v20 + 36);
  *(_QWORD *)&v19[v21] = sub_23B97E388(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v19[v16[10]] = MEMORY[0x24BEE4B08];
  v19[v16[11]] = 0;
  sub_23BB891B8();
  v22 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23 = *a1;
  v34 = a1[1];
  v35 = v23;
  v33 = a1[2];
  v22(v19, v15, v7);
  v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v24(v11, v15, v7);
  v25 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v26 = swift_allocObject();
  v24((char *)(v26 + v25), v11, v7);
  v27 = (uint64_t (**)())&v19[v16[12]];
  *v27 = sub_23B988EB4;
  v27[1] = (uint64_t (*)())v26;
  sub_23BA4AF2C((uint64_t)v19, (uint64_t)v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage);
  v28 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__loadingStateResetTaskBySubscription) = sub_23B97E094(MEMORY[0x24BEE4AF8]);
  v29 = OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider_taskQueue;
  v30 = (uint64_t)v36;
  sub_23BB889C0();
  type metadata accessor for SerialTaskQueue(0);
  swift_allocObject();
  *(_QWORD *)((char *)v2 + v29) = sub_23B9C7D14(0xD000000000000018, 0x800000023BB9AB60, v30);
  *((_BYTE *)v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__isLoading) = 0;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data) = sub_23B97E1B4(v28);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__valuePublisher) = 0;
  sub_23BB88A44();
  v31 = v34;
  v2[1] = v35;
  v2[2] = v31;
  v2[3] = v33;
  return v2;
}

uint64_t sub_23BA47EA0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t j;
  uint64_t i;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD v95[28];
  _QWORD *v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  _OWORD v110[2];
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  _OWORD v123[3];

  v2 = v1;
  v4 = *(_QWORD *)result;
  v3 = *(_QWORD *)(result + 8);
  if (!*(_BYTE *)(result + 16))
  {
    v44 = *(_QWORD *)(v4 + 16);
    if (!v44)
      return result;
    v90 = *(_QWORD *)(result + 8);
    v45 = v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar;
    v94 = (_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
    swift_bridgeObjectRetain();
    v46 = *(_OWORD *)(v4 + 208);
    v121 = *(_OWORD *)(v4 + 192);
    v122 = v46;
    v123[0] = *(_OWORD *)(v4 + 224);
    *(_OWORD *)((char *)v123 + 9) = *(_OWORD *)(v4 + 233);
    v47 = *(_OWORD *)(v4 + 144);
    v117 = *(_OWORD *)(v4 + 128);
    v118 = v47;
    v48 = *(_OWORD *)(v4 + 176);
    v119 = *(_OWORD *)(v4 + 160);
    v120 = v48;
    v49 = *(_OWORD *)(v4 + 80);
    v113 = *(_OWORD *)(v4 + 64);
    v114 = v49;
    v50 = *(_OWORD *)(v4 + 112);
    v115 = *(_OWORD *)(v4 + 96);
    v116 = v50;
    v51 = *(_OWORD *)(v4 + 48);
    v111 = *(_OWORD *)(v4 + 32);
    v112 = v51;
    v88 = v4;
    v52 = (__int128 *)(v4 + 256);
    v53 = *((_QWORD *)&v111 + 1);
    for (i = v44 - 1; ; --i)
    {
      v54 = v111;
      swift_getKeyPath();
      *(_QWORD *)&v98 = v2;
      sub_23BA4B4CC((uint64_t)&v111);
      sub_23BA4B4CC((uint64_t)&v111);
      sub_23BA47850();
      swift_bridgeObjectRetain();
      sub_23BB88A20();
      swift_release();
      v55 = v2;
      *(_QWORD *)&v98 = v2;
      swift_getKeyPath();
      v56 = v45;
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v96 = (_QWORD *)*v94;
      v58 = v96;
      *v94 = 0x8000000000000000;
      v60 = sub_23B984880(v54, v53);
      v61 = v58[2];
      v62 = (v59 & 1) == 0;
      v63 = v61 + v62;
      if (__OFADD__(v61, v62))
        break;
      v64 = v59;
      if (v58[3] >= v63)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23B987268();
      }
      else
      {
        sub_23BB4A4B0(v63, isUniquelyReferenced_nonNull_native);
        v65 = sub_23B984880(v54, v53);
        if ((v64 & 1) != (v66 & 1))
          goto LABEL_40;
        v60 = v65;
      }
      v45 = v56;
      v108 = v121;
      v109 = v122;
      v110[0] = v123[0];
      *(_OWORD *)((char *)v110 + 9) = *(_OWORD *)((char *)v123 + 9);
      v104 = v117;
      v105 = v118;
      v106 = v119;
      v107 = v120;
      v100 = v113;
      v101 = v114;
      v102 = v115;
      v103 = v116;
      v98 = v111;
      v99 = v112;
      sub_23BA4B5D0((uint64_t)&v98);
      v2 = v55;
      if ((v64 & 1) != 0)
      {
        v67 = v96;
        v68 = v96[7] + 224 * v60;
        sub_23B989684(v68, (uint64_t)v95);
        sub_23B990954((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
        sub_23B989684((uint64_t)&v98, v68);
      }
      else
      {
        v67 = v96;
        v96[(v60 >> 6) + 8] |= 1 << v60;
        v69 = (_QWORD *)(v67[6] + 16 * v60);
        *v69 = v54;
        v69[1] = v53;
        sub_23B989684((uint64_t)&v98, v67[7] + 224 * v60);
        v70 = v67[2];
        v32 = __OFADD__(v70, 1);
        v71 = v70 + 1;
        if (v32)
          goto LABEL_39;
        v67[2] = v71;
        swift_bridgeObjectRetain();
      }
      *v94 = v67;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_23BA4742C();
      v95[0] = v55;
      swift_getKeyPath();
      sub_23BB88A2C();
      swift_release();
      sub_23BA4B5F4((uint64_t)&v111);
      if (!i)
      {
        v84 = v88;
        v85 = v90;
        v86 = 0;
        return sub_23BA4B494(v84, v85, v86);
      }
      v72 = v52[1];
      v111 = *v52;
      v112 = v72;
      v73 = v52[2];
      v74 = v52[3];
      v75 = v52[5];
      v115 = v52[4];
      v116 = v75;
      v113 = v73;
      v114 = v74;
      v76 = v52[6];
      v77 = v52[7];
      v78 = v52[9];
      v119 = v52[8];
      v120 = v78;
      v117 = v76;
      v118 = v77;
      v79 = v52[10];
      v80 = v52[11];
      v81 = v52[12];
      *(_OWORD *)((char *)v123 + 9) = *(__int128 *)((char *)v52 + 201);
      v122 = v80;
      v123[0] = v81;
      v121 = v79;
      v53 = *((_QWORD *)&v111 + 1);
      v52 += 14;
    }
    goto LABEL_37;
  }
  if (*(_BYTE *)(result + 16) != 1)
  {
    LOBYTE(v98) = 0;
    sub_23BA4B27C((uint64_t)&v98);
    sub_23B989684((uint64_t)&v98, (uint64_t)&v111);
    swift_getKeyPath();
    sub_23BA47850();
    swift_bridgeObjectRetain();
    sub_23BB88A20();
    swift_release();
    v95[0] = v1;
    swift_getKeyPath();
    sub_23BB88A38();
    swift_release();
    v82 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
    swift_beginAccess();
    v83 = swift_isUniquelyReferenced_nonNull_native();
    v97 = *v82;
    *v82 = 0x8000000000000000;
    sub_23BAAECA4((uint64_t)&v111, v4, v3, v83);
    *v82 = v97;
    swift_bridgeObjectRelease();
    sub_23BA4B494(v4, v3, 2u);
    swift_endAccess();
    sub_23BA4742C();
    v95[0] = v1;
    swift_getKeyPath();
    sub_23BB88A2C();
    return swift_release();
  }
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v89 = *(_QWORD *)(result + 8);
    v6 = v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar;
    v93 = (_QWORD *)(v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
    swift_bridgeObjectRetain();
    v7 = *(_OWORD *)(v4 + 208);
    v121 = *(_OWORD *)(v4 + 192);
    v122 = v7;
    v123[0] = *(_OWORD *)(v4 + 224);
    *(_OWORD *)((char *)v123 + 9) = *(_OWORD *)(v4 + 233);
    v8 = *(_OWORD *)(v4 + 144);
    v117 = *(_OWORD *)(v4 + 128);
    v118 = v8;
    v9 = *(_OWORD *)(v4 + 176);
    v119 = *(_OWORD *)(v4 + 160);
    v120 = v9;
    v10 = *(_OWORD *)(v4 + 80);
    v113 = *(_OWORD *)(v4 + 64);
    v114 = v10;
    v11 = *(_OWORD *)(v4 + 112);
    v115 = *(_OWORD *)(v4 + 96);
    v116 = v11;
    v12 = *(_OWORD *)(v4 + 48);
    v111 = *(_OWORD *)(v4 + 32);
    v112 = v12;
    v87 = v4;
    v13 = (__int128 *)(v4 + 256);
    v14 = *((_QWORD *)&v111 + 1);
    for (j = v5 - 1; ; --j)
    {
      v15 = v111;
      swift_getKeyPath();
      *(_QWORD *)&v98 = v2;
      sub_23BA4B4CC((uint64_t)&v111);
      sub_23BA4B4CC((uint64_t)&v111);
      sub_23BA47850();
      swift_bridgeObjectRetain();
      sub_23BB88A20();
      swift_release();
      v16 = v2;
      *(_QWORD *)&v98 = v2;
      swift_getKeyPath();
      v17 = v6;
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      v18 = swift_isUniquelyReferenced_nonNull_native();
      v96 = (_QWORD *)*v93;
      v19 = v96;
      *v93 = 0x8000000000000000;
      v21 = sub_23B984880(v15, v14);
      v22 = v19[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        break;
      v25 = v20;
      if (v19[3] >= v24)
      {
        if ((v18 & 1) == 0)
          sub_23B987268();
      }
      else
      {
        sub_23BB4A4B0(v24, v18);
        v26 = sub_23B984880(v15, v14);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_40;
        v21 = v26;
      }
      v6 = v17;
      v108 = v121;
      v109 = v122;
      v110[0] = v123[0];
      *(_OWORD *)((char *)v110 + 9) = *(_OWORD *)((char *)v123 + 9);
      v104 = v117;
      v105 = v118;
      v106 = v119;
      v107 = v120;
      v100 = v113;
      v101 = v114;
      v102 = v115;
      v103 = v116;
      v98 = v111;
      v99 = v112;
      sub_23BA4B5D0((uint64_t)&v98);
      v2 = v16;
      if ((v25 & 1) != 0)
      {
        v28 = v96;
        v29 = v96[7] + 224 * v21;
        sub_23B989684(v29, (uint64_t)v95);
        sub_23B990954((uint64_t)v95, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
        sub_23B989684((uint64_t)&v98, v29);
      }
      else
      {
        v28 = v96;
        v96[(v21 >> 6) + 8] |= 1 << v21;
        v30 = (_QWORD *)(v28[6] + 16 * v21);
        *v30 = v15;
        v30[1] = v14;
        sub_23B989684((uint64_t)&v98, v28[7] + 224 * v21);
        v31 = v28[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_38;
        v28[2] = v33;
        swift_bridgeObjectRetain();
      }
      *v93 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_23BA4742C();
      v95[0] = v16;
      swift_getKeyPath();
      sub_23BB88A2C();
      swift_release();
      sub_23BA4B5F4((uint64_t)&v111);
      if (!j)
      {
        v84 = v87;
        v85 = v89;
        v86 = 1;
        return sub_23BA4B494(v84, v85, v86);
      }
      v34 = v13[1];
      v111 = *v13;
      v112 = v34;
      v35 = v13[2];
      v36 = v13[3];
      v37 = v13[5];
      v115 = v13[4];
      v116 = v37;
      v113 = v35;
      v114 = v36;
      v38 = v13[6];
      v39 = v13[7];
      v40 = v13[9];
      v119 = v13[8];
      v120 = v40;
      v117 = v38;
      v118 = v39;
      v41 = v13[10];
      v42 = v13[11];
      v43 = v13[12];
      *(_OWORD *)((char *)v123 + 9) = *(__int128 *)((char *)v13 + 201);
      v122 = v42;
      v123[0] = v43;
      v121 = v41;
      v14 = *((_QWORD *)&v111 + 1);
      v13 += 14;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    result = sub_23BB8B1E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23BA48758()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[6] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[7] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E330);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 + 64);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = sub_23BB8A9F4();
  v1[14] = sub_23BB8A9E8();
  v1[15] = sub_23BB8A988();
  v1[16] = v4;
  return swift_task_switch();
}

uint64_t sub_23BA4882C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v1 = v0[6];
  swift_getKeyPath();
  v2 = OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar;
  v0[2] = v1;
  v0[17] = v2;
  v0[18] = sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__valuePublisher))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  v3 = v0[6];
  swift_getKeyPath();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  v0[3] = v3;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = 1;
  v0[4] = v3;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  v8 = (uint64_t (*)(_QWORD))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  v6 = (_QWORD *)swift_task_alloc();
  v0[19] = v6;
  *v6 = v0;
  v6[1] = sub_23BA489EC;
  return v8(v0[12]);
}

uint64_t sub_23BA489EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA48A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v19 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v20 = v5;
  v6 = *(_QWORD *)(v0 + 48);
  swift_release();
  v7 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = v3;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v11 = v2;
  v10(v2, v1, v4);
  swift_retain();
  v12 = sub_23BB8A9E8();
  v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v13, v11, v4);
  *(_QWORD *)(v14 + ((v19 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  swift_release();
  v16 = sub_23B989F54(v20, (uint64_t)&unk_256A5E340, v14);
  swift_getKeyPath();
  v17 = swift_task_alloc();
  *(_QWORD *)(v17 + 16) = v6;
  *(_QWORD *)(v17 + 24) = v16;
  *(_QWORD *)(v0 + 40) = v6;
  sub_23BB88A14();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA48C54()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA48CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[19] = a4;
  v5[20] = a5;
  v6 = sub_23BB891C4();
  v5[21] = v6;
  v5[22] = *(_QWORD *)(v6 - 8);
  v5[23] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E348);
  v5[24] = v7;
  v5[25] = *(_QWORD *)(v7 - 8);
  v5[26] = swift_task_alloc();
  v5[27] = sub_23BB8A9F4();
  v5[28] = sub_23BB8A9E8();
  v5[29] = sub_23BB8A988();
  v5[30] = v8;
  return swift_task_switch();
}

uint64_t sub_23BA48D74()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E330);
  sub_23BB8AA54();
  swift_beginAccess();
  v0[31] = 0;
  v0[32] = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[33] = v1;
  *v1 = v0;
  v1[1] = sub_23BA48E38;
  return sub_23BB8AA60();
}

uint64_t sub_23BA48E38()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA48E8C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(unsigned __int8 *)(v0 + 80);
  if (v2 == 255)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 72);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    swift_release();
    sub_23BA4B480(v1, v3, v2);
    goto LABEL_7;
  }
  v5 = Strong;
  v6 = *(_QWORD *)(v0 + 184);
  v21 = *(_QWORD *)(v0 + 176);
  v23 = *(_QWORD *)(v0 + 168);
  swift_getKeyPath();
  *(_QWORD *)(v0 + 136) = v5;
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v7 = v5 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v6, v7, v23);
  sub_23BA4B4B0(v1, v3, v2);
  sub_23BA4B4B0(v1, v3, v2);
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABEC();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 184);
  v24 = *(_QWORD *)(v0 + 176);
  v12 = *(_QWORD *)(v0 + 168);
  if (v10)
  {
    v22 = *(_QWORD *)(v0 + 168);
    v13 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v25 = v20;
    *(_DWORD *)v13 = 136315138;
    *(_QWORD *)(v0 + 112) = v1;
    *(_QWORD *)(v0 + 120) = v3;
    *(_BYTE *)(v0 + 128) = v2;
    sub_23BA4B4B0(v1, v3, v2);
    v14 = sub_23BB8A7D8();
    *(_QWORD *)(v13 + 4) = sub_23BB7B69C(v14, v15, &v25);
    swift_bridgeObjectRelease();
    sub_23BA4B480(v1, v3, v2);
    sub_23BA4B480(v1, v3, v2);
    _os_log_impl(&dword_23B979000, v8, v9, "BeaconsInfoProvider: change - %s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v20, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v22);
  }
  else
  {
    sub_23BA4B480(v1, v3, v2);
    sub_23BA4B480(v1, v3, v2);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v12);
  }
  v17 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 96) = v3;
  *(_BYTE *)(v0 + 104) = v2;
  sub_23BA47EA0(v0 + 88);
  sub_23BA4B480(v1, v3, v2);
  swift_getKeyPath();
  v18 = swift_task_alloc();
  *(_QWORD *)(v18 + 16) = v5;
  *(_BYTE *)(v18 + 24) = 0;
  *(_QWORD *)(v0 + 144) = v5;
  sub_23BB88A14();
  swift_release();
  swift_release();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 248) = v17;
  *(_QWORD *)(v0 + 256) = sub_23BB8A9E8();
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v19;
  *v19 = v0;
  v19[1] = sub_23BA48E38;
  return sub_23BB8AA60();
}

uint64_t sub_23BA49294()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  sub_23BB8A9F4();
  v1[6] = sub_23BB8A9E8();
  v1[7] = sub_23BB8A988();
  v1[8] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA49300()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = v0[5];
  swift_getKeyPath();
  v0[2] = v1;
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__valuePublisher))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  v2 = v0[5];
  swift_getKeyPath();
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 0;
  v0[3] = v2;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = 0;
  v0[4] = v2;
  sub_23BB88A14();
  swift_release();
  swift_task_dealloc();
  v7 = (uint64_t (*)(void))(**(int **)(v2 + 32) + *(_QWORD *)(v2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_23BA494AC;
  return v7();
}

uint64_t sub_23BA494AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA4950C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA49540()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA49574(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[272];
  _QWORD v41[29];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v9 = a1[1];
  v11 = (*(uint64_t (**)(uint64_t))(v2 + 48))(v6);
  v35 = v12;
  swift_getKeyPath();
  v41[0] = v2;
  sub_23BA47850();
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__loadingStateResetTaskBySubscription);
  swift_beginAccess();
  v14 = *(_QWORD *)(*v13 + 16);
  v36 = v11;
  v37 = v8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_23B984880(v10, v9);
    if ((v15 & 1) != 0)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BB8AA78();
      swift_release();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_getKeyPath();
  v41[0] = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v41[0] = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  sub_23BA77444(v10, v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  v41[0] = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  swift_getKeyPath();
  v41[0] = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
  swift_beginAccess();
  v17 = *v16;
  if (!*(_QWORD *)(*v16 + 16))
  {
    v34 = v13;
    v22 = v10;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v18 = sub_23B984880(v10, v9);
  if ((v19 & 1) == 0)
  {
    v34 = v13;
    v22 = v10;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_23B989684(*(_QWORD *)(v17 + 56) + 224 * v18, (uint64_t)v40);
  sub_23B990954((uint64_t)v40, sub_23B989738);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B989684((uint64_t)v40, (uint64_t)v41);
  v20 = sub_23B990938((uint64_t)v41);
  sub_23B990944((uint64_t)v41);
  if (v20 == 1)
    return sub_23B990954((uint64_t)v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
  v34 = v13;
  v22 = v10;
LABEL_14:
  v40[0] = 1;
  sub_23BA4B27C((uint64_t)v40);
  sub_23B989684((uint64_t)v40, (uint64_t)v41);
  swift_getKeyPath();
  v39 = v2;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v39 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = *v16;
  *v16 = 0x8000000000000000;
  sub_23BAAECA4((uint64_t)v41, v22, v9, isUniquelyReferenced_nonNull_native);
  *v16 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_23BA4742C();
  v39 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  swift_release();
  v24 = sub_23BB8AA18();
  v25 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v37, 1, 1, v24);
  sub_23BB8A9F4();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v26 = sub_23BB8A9E8();
  v27 = (_QWORD *)swift_allocObject();
  v28 = MEMORY[0x24BEE6930];
  v27[2] = v26;
  v27[3] = v28;
  v29 = v35;
  v27[4] = v36;
  v27[5] = v29;
  v27[6] = v2;
  v27[7] = v22;
  v27[8] = v9;
  v30 = sub_23B989F54(v25, (uint64_t)&unk_256A5E358, (uint64_t)v27);
  swift_getKeyPath();
  v39 = v2;
  sub_23BB88A20();
  swift_release();
  v39 = v2;
  swift_getKeyPath();
  sub_23BB88A38();
  swift_release();
  v31 = v34;
  swift_beginAccess();
  v32 = swift_isUniquelyReferenced_nonNull_native();
  v38 = *v31;
  *v31 = 0x8000000000000000;
  sub_23BAAF24C(v30, v22, v9, v32);
  *v31 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v39 = v2;
  swift_getKeyPath();
  sub_23BB88A2C();
  return swift_release();
}

uint64_t sub_23BA49BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = sub_23BB891C4();
  v8[14] = v9;
  v8[15] = *(_QWORD *)(v9 - 8);
  v8[16] = swift_task_alloc();
  v10 = sub_23BB8AF1C();
  v8[17] = v10;
  v8[18] = *(_QWORD *)(v10 - 8);
  v8[19] = swift_task_alloc();
  sub_23BB8A9F4();
  v8[20] = sub_23BB8A9E8();
  v8[21] = sub_23BB8A988();
  v8[22] = v11;
  return swift_task_switch();
}

uint64_t sub_23BA49C64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  v0[23] = v1;
  *v1 = v0;
  v1[1] = sub_23BA49CDC;
  return v3(v0[9], v0[10], 0, 0, 1);
}

uint64_t sub_23BA49CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA49D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4[2];

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  v4[0] = v2;
  v4[1] = v1;
  sub_23BA4A03C(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA49DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 56) = v4;
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v5 = v4 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  swift_bridgeObjectRetain_n();
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABC8();
  if (os_log_type_enabled(v6, v7))
  {
    v18 = *(id *)(v0 + 192);
    v19 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315138;
    v22 = v11;
    *(_QWORD *)(v0 + 40) = v9;
    *(_QWORD *)(v0 + 48) = v8;
    swift_bridgeObjectRetain();
    v12 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 64) = sub_23BB7B69C(v12, v13, &v22);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B979000, v6, v7, "PeopleLocationsProvider: loadingStateResetTaskBySubscription was cancelled - identifier: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 112);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA4A03C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  _BYTE v11[224];
  _BYTE v12[224];
  _BYTE v13[224];
  _QWORD v14[28];

  v3 = *a1;
  v2 = a1[1];
  swift_getKeyPath();
  v14[0] = v1;
  sub_23BA47850();
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
  swift_beginAccess();
  v5 = *v4;
  if (!*(_QWORD *)(*v4 + 16))
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6 = sub_23B984880(v3, v2);
  if ((v7 & 1) != 0)
  {
    sub_23B989684(*(_QWORD *)(v5 + 56) + 224 * v6, (uint64_t)v12);
    sub_23B990954((uint64_t)v12, sub_23B989738);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B989684((uint64_t)v12, (uint64_t)v13);
    if (sub_23B990938((uint64_t)v13) == 1)
    {
      sub_23B990944((uint64_t)v13);
      return sub_23B990954((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23B9909D0);
    }
    else
    {
      sub_23B990944((uint64_t)v13);
      v11[0] = 0;
      sub_23BA4B27C((uint64_t)v11);
      sub_23B989684((uint64_t)v11, (uint64_t)v14);
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      sub_23BB88A20();
      swift_release();
      swift_getKeyPath();
      sub_23BB88A38();
      swift_release();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v10 = *v4;
      *v4 = 0x8000000000000000;
      sub_23BAAECA4((uint64_t)v14, v3, v2, isUniquelyReferenced_nonNull_native);
      *v4 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_23BA4742C();
      swift_getKeyPath();
      sub_23BB88A2C();
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t BeaconsInfoProvider.didAddNewUniqueSubscriptions(addedSubscriptions:wasEmpty:)(uint64_t a1, int a2)
{
  return sub_23BA4A5C0(a1, a2, (void (*)(_QWORD *))sub_23BA49574, (uint64_t)&unk_250CAF6A8, (uint64_t)&unk_256A5E1B0);
}

uint64_t sub_23BA4A2DC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 40) = a3;
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 48) = v4;
  *v4 = v3;
  v4[1] = sub_23BA4A340;
  return sub_23BA48758();
}

uint64_t sub_23BA4A340()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23BA4A3AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 56);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000003ALL, 0x800000023BB9AC40, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v10 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v10, v11, &v14);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "PeopleLocationsProvider: %s - error: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 56);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BeaconsInfoProvider.didRemoveUniqueSubscriptions(removedSubscriptions:isEmpty:)(uint64_t a1, int a2)
{
  return sub_23BA4A5C0(a1, a2, (void (*)(_QWORD *))sub_23BA4A03C, (uint64_t)&unk_250CAF6D0, (uint64_t)&unk_256A5E1C0);
}

uint64_t sub_23BA4A5C0(uint64_t a1, int a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];

  v36 = a5;
  v33 = a4;
  v7 = v5;
  v34 = a2;
  v35 = sub_23BB891C4();
  v9 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v10);
  v31[1] = v11;
  v32 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(a1 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  while (v15)
  {
    v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v20 = v19 | (v18 << 6);
LABEL_20:
    v24 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v20);
    v25 = v24[1];
    if (v25)
    {
      v37[0] = *v24;
      v37[1] = v25;
      swift_bridgeObjectRetain();
      a3(v37);
      result = swift_bridgeObjectRelease();
    }
  }
  v21 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v21 >= v16)
    goto LABEL_22;
  v22 = *(_QWORD *)(v12 + 8 * v21);
  ++v18;
  if (v22)
    goto LABEL_19;
  v18 = v21 + 1;
  if (v21 + 1 >= v16)
    goto LABEL_22;
  v22 = *(_QWORD *)(v12 + 8 * v18);
  if (v22)
    goto LABEL_19;
  v18 = v21 + 2;
  if (v21 + 2 >= v16)
    goto LABEL_22;
  v22 = *(_QWORD *)(v12 + 8 * v18);
  if (v22)
  {
LABEL_19:
    v15 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_20;
  }
  v23 = v21 + 3;
  if (v23 >= v16)
  {
LABEL_22:
    swift_release();
    swift_getKeyPath();
    v37[0] = v5;
    sub_23BA47850();
    sub_23BB88A20();
    swift_release();
    v26 = v5 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
    swift_beginAccess();
    v27 = v32;
    v28 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v32, v26, v35);
    v29 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v30 = swift_allocObject();
    *(_BYTE *)(v30 + 16) = v34 & 1;
    *(_QWORD *)(v30 + 24) = v7;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v30 + v29, v27, v28);
    swift_retain();
    sub_23B9C7824(v36, v30);
    return swift_release();
  }
  v22 = *(_QWORD *)(v12 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v16)
      goto LABEL_22;
    v22 = *(_QWORD *)(v12 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_19;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_23BA4A870(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 40) = a3;
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 48) = v4;
  *v4 = v3;
  v4[1] = sub_23BA4A8D4;
  return sub_23BA49294();
}

uint64_t sub_23BA4A8D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23BA4A940()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 56);
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v14 = v8;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000003BLL, 0x800000023BB9AC00, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 24) = v6;
    v9 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    v10 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(v10, v11, &v14);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "PeopleLocationsProvider: %s - error: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 56);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BeaconsInfoProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  sub_23BA4793C(v0 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BeaconsInfoProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  swift_release();
  sub_23BA4793C(v0 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider___observationRegistrar;
  v2 = sub_23BB88A50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23BA4ACBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__storage;
  swift_beginAccess();
  return sub_23BA478DC(v3, a1);
}

uint64_t sub_23BA4AD54(uint64_t a1)
{
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A14();
  swift_release();
  return sub_23BA4793C(a1);
}

void (*sub_23BA4ADE8(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = BeaconsInfoProvider.storage.modify(v2);
  return sub_23B98479C;
}

uint64_t sub_23BA4AE34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  swift_getKeyPath();
  sub_23BA47850();
  sub_23BB88A20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__data);
  swift_beginAccess();
  *a1 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA4AECC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23BA4AF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA4AF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v0 + ((v2 + 32) & ~v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23B990D68;
  return sub_23BA4A2DC(v3, v4, v5);
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB891C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BA4B06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_23BB891C4() - 8) + 80);
  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = v0 + ((v2 + 32) & ~v2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23B990D68;
  return sub_23BA4A870(v3, v4, v5);
}

unint64_t sub_23BA4B0EC(uint64_t a1)
{
  unint64_t result;

  result = sub_23BA47850();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23BA4B110()
{
  return type metadata accessor for BeaconsInfoProvider();
}

void sub_23BA4B118()
{
  unint64_t v0;
  unint64_t v1;

  sub_23BA4B1F0(319);
  if (v0 <= 0x3F)
  {
    sub_23BB88A50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for BeaconsInfoProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BeaconsInfoProvider.__allocating_init(dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_23BA4B1F0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256A5E260)
  {
    v2 = sub_23B9907B4();
    v4 = type metadata accessor for SubscriptionManagerStorage(a1, (uint64_t)&type metadata for BeaconsInfoProvider.BeaconsSubscription, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256A5E260);
  }
}

uint64_t sub_23BA4B250()
{
  return sub_23BA4B440();
}

void sub_23BA4B264()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__isLoading) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_23BA4B27C(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 216) & 0x8F;
  *(_QWORD *)(result + 160) &= 0x101uLL;
  *(_BYTE *)(result + 216) = v1;
  return result;
}

unint64_t sub_23BA4B29C()
{
  unint64_t result;

  result = qword_256A5E320;
  if (!qword_256A5E320)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Device.ServerIdentifier, &type metadata for Device.ServerIdentifier);
    atomic_store(result, &qword_256A5E320);
  }
  return result;
}

uint64_t sub_23BA4B2E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BA4B304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E330);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA4B398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E330) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B97C964;
  return sub_23BA48CB0(a1, v6, v7, v8, v9);
}

uint64_t sub_23BA4B440()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__valuePublisher) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_23BA4B480(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_23BA4B494(a1, a2, a3);
  return a1;
}

uint64_t sub_23BA4B494(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23BA4B4B0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23BA4B4CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 184);
  v4 = *(_QWORD *)(a1 + 192);
  v5 = *(_QWORD *)(a1 + 200);
  v6 = *(_QWORD *)(a1 + 208);
  v7 = *(_BYTE *)(a1 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23B989540(v10);
  sub_23B989888(v9, v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_23BA4B5D0(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 216) & 0x8F | 0x40;
  *(_QWORD *)(result + 160) &= 0x101uLL;
  *(_BYTE *)(result + 216) = v1;
  return result;
}

uint64_t sub_23BA4B5F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  void *v10;

  v10 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 184);
  v4 = *(_QWORD *)(a1 + 192);
  v5 = *(_QWORD *)(a1 + 200);
  v6 = *(_QWORD *)(a1 + 208);
  v7 = *(_BYTE *)(a1 + 216);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B990B20(v10);
  sub_23B990BAC(v9, v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_23BA4B6FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23BA4770C(a1, &OBJC_IVAR____TtC12FindMyUICore19BeaconsInfoProvider__loadingStateResetTaskBySubscription, a2);
}

uint64_t sub_23BA4B724()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BA4B758(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23B990D68;
  return sub_23BA49BA0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23BA4B7EC()
{
  uint64_t v0;

  return sub_23BA47240(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BA4B804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59628);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA4B84C()
{
  uint64_t v0;

  return sub_23BA47984(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BA4B864()
{
  return sub_23BA47924();
}

void sub_23BA4B878()
{
  sub_23BA4B264();
}

uint64_t ContactsProvider.Dependencies.init(contactForSubscription:contactStoreStream:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

void static ContactsProvider.mock()(id (**a1)(uint64_t *a1)@<X8>)
{
  *a1 = sub_23BA4B8B4;
  a1[1] = 0;
  a1[2] = (id (*)(uint64_t *))sub_23BA4B9C4;
  a1[3] = 0;
}

id sub_23BA4B8B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v2 = *a1;
  v1 = a1[1];
  if ((char)a1[2] < 0)
  {
    v6 = objc_allocWithZone(MEMORY[0x24BDBACA0]);
    swift_bridgeObjectRetain();
    v4 = (void *)sub_23BB8A784();
    sub_23B9894DC();
    v5 = objc_msgSend(v6, sel_initWithIdentifier_, v4);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61430);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_23BB8C510;
    *(_QWORD *)(v3 + 32) = v2;
    *(_QWORD *)(v3 + 40) = v1;
    swift_bridgeObjectRetain();
    v4 = (void *)sub_23BB8A8E0();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend((id)objc_opt_self(), sel_contactWithDisplayName_handleStrings_, 0, v4);
  }
  v7 = v5;

  return v7;
}

uint64_t sub_23BA4B9C4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E360);
  v2 = MEMORY[0x24BDAC7A8](v0, v1);
  (*(void (**)(char *, _QWORD, __n128))(v4 + 104))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BEE6A10], v2);
  return sub_23BB8AA6C();
}

ValueMetadata *type metadata accessor for ContactsProvider.Dependencies()
{
  return &type metadata for ContactsProvider.Dependencies;
}

uint64_t sub_23BA4BA70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  sub_23BB8A9F4();
  v12 = sub_23BB8A9E8();
  v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, v6, v2);
  sub_23BB6BAC0((uint64_t)v10, (uint64_t)&unk_256A5E370, v14);
  return swift_release();
}

uint64_t sub_23BA4BBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E378);
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v6 = sub_23BB8AF04();
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v7 = sub_23BB8AF1C();
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = swift_task_alloc();
  sub_23BB8A9F4();
  v4[18] = sub_23BB8A9E8();
  v4[19] = sub_23BB8A988();
  v4[20] = v8;
  return swift_task_switch();
}

uint64_t sub_23BA4BCBC()
{
  uint64_t v0;

  sub_23BB8AF10();
  *(_OWORD *)(v0 + 40) = xmmword_23BB919C0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return swift_task_switch();
}

uint64_t sub_23BA4BD10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  sub_23B97D0C8(&qword_256A5AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_23BB8B1EC();
  sub_23B97D0C8((unint64_t *)&unk_256A5E9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_23BB8AF28();
  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[21] = v4;
  v4(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[22] = v5;
  *v5 = v0;
  v5[1] = sub_23BA4BE1C;
  return sub_23BB8B1F8();
}

uint64_t sub_23BA4BE1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 168))(*(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 88));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 128);
    v3 = *(_QWORD *)(v2 + 136);
    v5 = *(_QWORD *)(v2 + 120);
    (*(void (**)(_QWORD, _QWORD))(v2 + 168))(*(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 88));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_23BA4BEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  sub_23BB8AA30();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_23BB8AF10();
  *(_OWORD *)(v0 + 40) = xmmword_23BB919C0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  return swift_task_switch();
}

uint64_t sub_23BA4BF3C()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD))(v0[16] + 8))(v0[17], v0[15]);
  return swift_task_switch();
}

uint64_t sub_23BA4BF7C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA4BFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BA4C058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A613F0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B97C964;
  return sub_23BA4BBC4(a1, v5, v6, v7);
}

uint64_t sub_23BA4C0E0(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BA4C16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_23BB8B240();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    v6 = sub_23BB8B270();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_23BB8B1A4() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_23BB8B1A4() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_23BA4C2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;

  if (*(_QWORD *)(a4 + 16))
  {
    sub_23BB8B240();
    sub_23BAAB000();
    v5 = sub_23BB8B270() & ~(-1 << *(_BYTE *)(a4 + 32));
    if (((*(_QWORD *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_23BA4C5C4(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  uint64_t inited;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  char v51;

  v2 = type metadata accessor for SessionFollowingState(0);
  v44 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v40 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v39 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6E0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[1];
  v46 = *a1;
  v47 = v13;
  v48 = a1[2];
  v49 = *((_QWORD *)a1 + 6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  v15 = v48;
  v51 = v48;
  v50 = v47;
  *(_OWORD *)(inited + 32) = v47;
  *(_BYTE *)(inited + 48) = v15;
  v16 = *((_QWORD *)&v48 + 1);
  sub_23B9A14A0((uint64_t)&v46);
  sub_23B9A14A0((uint64_t)&v46);
  swift_bridgeObjectRetain();
  sub_23B9A14EC((uint64_t)&v50);
  v17 = sub_23BA7CF04(v16, (uint64_t)&v46);
  sub_23B9A1514((uint64_t)&v46);
  swift_bridgeObjectRelease();
  v45 = inited;
  sub_23BA78CA0(v17);
  sub_23B9A1514((uint64_t)&v46);
  v18 = v45;
  v19 = *(_QWORD *)(v45 + 16);
  if (!v19)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v39 = v18;
  v20 = (unsigned __int8 *)(v18 + 48);
  v43 = v2;
  while (1)
  {
    v22 = *((_QWORD *)v20 - 2);
    v21 = *((_QWORD *)v20 - 1);
    v23 = *v20;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain_n();
    sub_23BB89230();
    swift_release();
    swift_release();
    v24 = v45;
    v25 = *(_QWORD *)(v45 + 16);
    v42 = v22;
    v41 = v23;
    if (v25)
    {
      v26 = sub_23B9849D4(v22, v21, v23);
      if ((v27 & 1) != 0)
      {
        sub_23B989CE8(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v44 + 72) * v26, (uint64_t)v12, type metadata accessor for SessionFollowingState);
        v28 = 0;
      }
      else
      {
        v28 = 1;
      }
      v29 = v43;
    }
    else
    {
      v28 = 1;
      v29 = v43;
    }
    v30 = v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v12, v28, 1, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v12, 1, v29))
      break;
    sub_23B989D60((uint64_t)v12, (uint64_t *)&unk_256A5E6E0);
LABEL_4:
    v20 += 24;
    swift_bridgeObjectRelease();
    if (!--v19)
      goto LABEL_14;
  }
  sub_23B989CE8((uint64_t)v12, (uint64_t)v8, type metadata accessor for SessionFollowingState);
  sub_23B989D60((uint64_t)v12, (uint64_t *)&unk_256A5E6E0);
  v31 = v40;
  sub_23B989CE8((uint64_t)v8, v40, type metadata accessor for SessionFollowingState);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23B989D9C(v31, type metadata accessor for SessionFollowingState);
    sub_23B989D9C((uint64_t)v8, type metadata accessor for SessionFollowingState);
    goto LABEL_4;
  }
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
  sub_23B989D60(v31 + *(int *)(v34 + 48), (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(v31, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D9C((uint64_t)v8, type metadata accessor for SessionFollowingState);
  swift_bridgeObjectRelease_n();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  v35 = v45;
  if (!*(_QWORD *)(v45 + 16) || (v36 = sub_23B9849D4(v42, v21, v41), (v37 & 1) == 0))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v38 = *(_QWORD *)(v35 + 56) + 32 * v36;
  v32 = *(_QWORD *)v38;
  sub_23B9894A0(*(_QWORD *)v38, *(_QWORD *)(v38 + 8), *(void **)(v38 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_23BA4CA74()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23BA4CAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v3 = sub_23BA6CFF8(a1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  sub_23BA6D28C(v3, v5, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA4CB8C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  uint64_t inited;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  char v14;

  v3 = a1[1];
  v9 = *a1;
  v10 = v3;
  v11 = a1[2];
  v12 = *((_QWORD *)a1 + 6);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  v5 = v11;
  v14 = v11;
  v13 = v10;
  *(_OWORD *)(inited + 32) = v10;
  *(_BYTE *)(inited + 48) = v5;
  sub_23B9A14A0((uint64_t)&v9);
  sub_23B9A14A0((uint64_t)&v9);
  sub_23B9A14EC((uint64_t)&v13);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23BA7CF04(v6, (uint64_t)&v9);
  sub_23B9A1514((uint64_t)&v9);
  swift_bridgeObjectRelease();
  sub_23BA78CA0(v7);
  sub_23B9A1514((uint64_t)&v9);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  sub_23BA6D28C(inited, inited, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_23BA4CCE0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  _BOOL8 v18;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  id v36[2];
  uint64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_QWORD *)a1 + 3);
  v3 = *((_BYTE *)a1 + 32);
  v34 = *(__int128 *)((char *)a1 + 40);
  v35 = *a1;
  if (qword_256A58E00 != -1)
    swift_once();
  v4 = sub_23BB891C4();
  __swift_project_value_buffer(v4, (uint64_t)qword_256A73E80);
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABEC();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v33 = v1;
    v8 = (void *)swift_slowAlloc();
    v36[0] = v8;
    *(_DWORD *)v7 = 136315138;
    sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B030, (uint64_t *)v36);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v5, v6, "Repository: willCall %s", v7, 0xCu);
    swift_arrayDestroy();
    v9 = v8;
    v1 = v33;
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }

  if ((sub_23BA6E8C8() & 1) == 0)
  {
    v14 = sub_23BB891AC();
    v15 = sub_23BB8ABEC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "CompositeAppViewModel: Don't show FindMy button";
LABEL_14:
      _os_log_impl(&dword_23B979000, v14, v15, v17, v16, 2u);
      MEMORY[0x24260D9B4](v16, -1, -1);
    }
LABEL_15:

    return 0;
  }
  *(_OWORD *)v36 = v35;
  v37 = v1;
  v38 = v2;
  v39 = v3;
  v40 = v34;
  v10 = sub_23BA4C5C4((__int128 *)v36);
  v13 = v12;
  if ((unint64_t)v12 < 2)
  {
    sub_23B9A1394(v10, v11, v12);
    goto LABEL_12;
  }
  if (v12 == (void *)2)
  {
LABEL_12:
    v14 = sub_23BB891AC();
    v15 = sub_23BB8ABEC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "CompositeAppViewModel: No location for friend";
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  v20 = v36[0];
  if (!v36[0])
  {
    v30 = sub_23BB891AC();
    v31 = sub_23BB8ABD4();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_23B979000, v30, v31, "CompositeAppViewModel: No thisDeviceLastLocation at the moment", v32, 2u);
      MEMORY[0x24260D9B4](v32, -1, -1);

    }
    else
    {

    }
    swift_bridgeObjectRelease();
    return 0;
  }
  objc_msgSend(v36[0], sel_distanceFromLocation_, v13);
  v22 = v21;
  objc_msgSend(v20, sel_horizontalAccuracy);
  v24 = v23;
  objc_msgSend(v13, sel_horizontalAccuracy);
  v18 = v22 / sqrt(v24 * v24 + v25 * v25 + 3600.0) < 1.5;
  v26 = sub_23BB891AC();
  v27 = sub_23BB8ABEC();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v29 = (void *)swift_slowAlloc();
    v36[0] = v29;
    *(_DWORD *)v28 = 136315394;
    sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B030, (uint64_t *)v36);
    sub_23BB8ACB8();
    *(_WORD *)(v28 + 12) = 1024;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v26, v27, "CompositeAppViewModel: %s - isNearby: %{BOOL}d", (uint8_t *)v28, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v29, -1, -1);
    MEMORY[0x24260D9B4](v28, -1, -1);

  }
  else
  {

  }
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_23BA4D22C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t inited;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  char v77;

  v4 = type metadata accessor for DirectionsState();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v63 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v69 = (uint64_t)&v60 - v11;
  MEMORY[0x24BDAC7A8](v10, v12);
  v68 = (uint64_t)&v60 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CA8);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v67 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v60 - v20;
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = (char *)&v60 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)&v60 - v27;
  v29 = a1[1];
  v72 = *a1;
  v73 = v29;
  v74 = a1[2];
  v75 = *((_QWORD *)a1 + 6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  v30 = v76;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  v32 = v74;
  v77 = v74;
  v76 = v73;
  *(_OWORD *)(inited + 32) = v73;
  *(_BYTE *)(inited + 48) = v32;
  sub_23B9A14A0((uint64_t)&v72);
  sub_23B9A14A0((uint64_t)&v72);
  sub_23B9A14EC((uint64_t)&v76);
  v33 = swift_bridgeObjectRetain();
  v34 = sub_23BA7CF04(v33, (uint64_t)&v72);
  sub_23B9A1514((uint64_t)&v72);
  swift_bridgeObjectRelease();
  v71 = inited;
  sub_23BA78CA0(v34);
  sub_23B9A1514((uint64_t)&v72);
  v35 = v71;
  v70 = v5;
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v66(v28, 1, 1, v4);
  v62 = v28;
  sub_23B989EFC((uint64_t)v28, (uint64_t)v25, &qword_256A59CA8);
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v65 = v4;
    v61 = a2;
    swift_bridgeObjectRetain();
    v60 = v35;
    v37 = (unsigned __int8 *)(v35 + 48);
    v38 = type metadata accessor for DirectionsState;
    v64 = v30;
    while (1)
    {
      v39 = *((_QWORD *)v37 - 1);
      if (*(_QWORD *)(v30 + 16))
      {
        v40 = *((_QWORD *)v37 - 2);
        v41 = *v37;
        swift_bridgeObjectRetain();
        v42 = sub_23B9849D4(v40, v39, v41);
        if ((v43 & 1) != 0)
        {
          v44 = v70;
          v45 = v69;
          sub_23B989CE8(*(_QWORD *)(v30 + 56) + *(_QWORD *)(v70 + 72) * v42, v69, (uint64_t (*)(_QWORD))v38);
          v46 = v38;
          v47 = v68;
          sub_23B989CA4(v45, v68, (uint64_t (*)(_QWORD))v46);
          v48 = v67;
          sub_23B989EFC((uint64_t)v25, v67, &qword_256A59CA8);
          v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
          v50 = v48;
          v51 = v48;
          v52 = v65;
          if (v49(v51, 1, v65) == 1)
          {
            sub_23B989D60(v50, &qword_256A59CA8);
            v53 = v47;
          }
          else
          {
            v54 = v50;
            v55 = v63;
            sub_23B989CA4(v54, v63, (uint64_t (*)(_QWORD))v46);
            v56 = sub_23BB888DC();
            v57 = (v56 & 1) == 0;
            if ((v56 & 1) != 0)
              v58 = v55;
            else
              v58 = v47;
            if (!v57)
              v55 = v47;
            sub_23B989D9C(v58, (uint64_t (*)(_QWORD))v46);
            v53 = v55;
          }
          sub_23B989CA4(v53, (uint64_t)v21, (uint64_t (*)(_QWORD))v46);
          v66(v21, 0, 1, v52);
          v38 = v46;
          v30 = v64;
          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_23B989EFC((uint64_t)v25, (uint64_t)v21, &qword_256A59CA8);
LABEL_5:
      swift_bridgeObjectRelease();
      sub_23B989D60((uint64_t)v25, &qword_256A59CA8);
      sub_23B990D24((uint64_t)v21, (uint64_t)v25, &qword_256A59CA8);
      v37 += 24;
      if (!--v36)
      {
        swift_bridgeObjectRelease();
        a2 = v61;
        break;
      }
    }
  }
  sub_23B990D24((uint64_t)v25, a2, &qword_256A59CA8);
  sub_23B989D60((uint64_t)v62, &qword_256A59CA8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA4D6EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 72) = a4;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  v5 = sub_23BB88A98();
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA4D778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_BYTE *)(v0 + 72) == 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 16))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 64);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 32);
    sub_23B989EFC(*(_QWORD *)(v0 + 24), v2, &qword_256A59710);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v5, v3);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
    v7 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 16);
    if (v6 == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v9 + 32))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
      sub_23B989D60(v7, &qword_256A59710);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v9 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v10, v7, v8);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA4D880(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_23BB88A98();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAB0);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v4 = sub_23BB8AF04();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA4D990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 56);
  *(_QWORD *)(v0 + 144) = v7;
  v7(v1, 1, 1, v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAA0);
  *(_QWORD *)(v0 + 152) = v8;
  v9 = *(int *)(v8 + 60);
  *(_DWORD *)(v0 + 200) = v9;
  sub_23B989EFC(v6 + v9, v4, &qword_256A5EAB0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 160) = v10;
  if (v10(v4, 1, v2) == 1)
  {
    v11 = *(_QWORD *)(v0 + 88);
    sub_23BB8AF1C();
    sub_23B97D0C8(&qword_256A5AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    sub_23BB8B1EC();
    sub_23B989D60(v11, &qword_256A5EAB0);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  sub_23BB88A74();
  sub_23B97D0C8(&qword_256A59720, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5158], MEMORY[0x24BEE5160]);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v12;
  *v12 = v0;
  v12[1] = sub_23BA4DB14;
  return sub_23BB8A9C4();
}

uint64_t sub_23BA4DB14()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA4DB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
    sub_23B989D60(v4, &qword_256A59710);
    sub_23B989D60(v1, &qword_256A59710);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 32), 1, 1, *(_QWORD *)(v0 + 48));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    *(_QWORD *)(v0 + 184) = v9;
    v9(v7, v1, v2);
    v11 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(v8 + *(int *)(v6 + 72))
                                                         + *(_QWORD *)(v8 + *(int *)(v6 + 72)));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v10;
    *v10 = v0;
    v10[1] = sub_23BA4DDB8;
    return v11(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 72));
  }
}

uint64_t sub_23BA4DD04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  sub_23B989D60(v1, &qword_256A59710);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA4DDB8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA4DE0C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned int (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 56);
  v24 = *(_QWORD *)(v0 + 48);
  sub_23BB8AF1C();
  sub_23B97D0C8(&qword_256A5AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_23BB8B1EC();
  sub_23B97D0C8((unint64_t *)&unk_256A5E9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_23BB8AF34();
  v2 = sub_23BB8B360();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v25, v24);
  sub_23B989D60(v26, &qword_256A59710);
  if ((v2 & 1) == 0)
    goto LABEL_4;
  v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 160);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  sub_23B989EFC(*(_QWORD *)(v0 + 40) + *(int *)(v0 + 200), v5, &qword_256A5EAB0);
  if (v3(v5, 1, v4) == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 80), &qword_256A5EAB0);
LABEL_4:
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 184);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 32);
    v13 = *(_QWORD *)(v0 + 40) + *(int *)(v0 + 200);
    (*(void (**)(_QWORD, uint64_t))(v9 + 8))(*(_QWORD *)(v0 + 120), v8);
    sub_23B989D60(v13, &qword_256A5EAB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v13, v7, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
    v6(v12, v10, v11);
    (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 32), 0, 1, *(_QWORD *)(v0 + 48));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 184);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 144);
  v19 = *(_QWORD *)(v0 + 104);
  v18 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 96);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 48);
  sub_23B989D60(*(_QWORD *)(v0 + 80), &qword_256A5EAB0);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  v15(v16, v21, v22);
  v17(v16, 0, 1, v22);
  sub_23BB88A74();
  sub_23B97D0C8(&qword_256A59720, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5158], MEMORY[0x24BEE5160]);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v23;
  *v23 = v0;
  v23[1] = sub_23BA4DB14;
  return sub_23BB8A9C4();
}

void sub_23BA4E13C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16)
                          + ((*(unsigned int *)(**(_QWORD **)(v0 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v1);
  sub_23BA4E2E0();
  v3 = v2;
  v5 = v4;
  os_unfair_lock_unlock(v1);
  if (v3)
  {
    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      sub_23BB8A9B8();
      sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_retain();
      swift_bridgeObjectRetain();
      v7 = 0;
      do
      {
        ++v7;
        v8 = swift_allocError();
        sub_23BB8A6AC();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
        swift_allocError();
        *v9 = v8;
        swift_continuation_throwingResumeWithError();
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    sub_23BB8AA78();
    sub_23B9F4C34(v3);
    swift_release();
  }
}

void sub_23BA4E2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  MEMORY[0x24BDAC7A8](v1, v2);
  MEMORY[0x24BDAC7A8](v3, v4);
  MEMORY[0x24BDAC7A8](v5, v6);
  MEMORY[0x24BDAC7A8](v7, v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23B989EFC(v0, (uint64_t)&v13 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5E8B0);
  v12 = (char *)&loc_23BA4E400 + *((int *)qword_23BA4E838 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BA4E414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C8);
  v2 = v0 + *(int *)(v1 + 48);
  sub_23B989D60(v0 + *(int *)(v1 + 64), &qword_256A5E870);
  v3 = sub_23BB88A80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0, v4);
  return 0;
}

uint64_t sub_23BA4E854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t i;
  uint64_t v12;
  unsigned __int16 v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v15)) + (v8 << 6))
  {
    v12 = *(_QWORD *)(a1 + 48) + 24 * i;
    v13 = *(_WORD *)(v12 + 16);
    if ((v13 & 0xC000) != 0)
    {
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v22 = *(_QWORD *)v12;
      v21 = *(_QWORD *)(v12 + 8);
      sub_23B9906EC(*(_QWORD *)v12, v21, v13);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_23BB63630(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v18 = v9[2];
      v17 = v9[3];
      v19 = v9;
      if (v18 >= v17 >> 1)
      {
        result = (uint64_t)sub_23BB63630((_QWORD *)(v17 > 1), v18 + 1, 1, v9);
        v19 = (_QWORD *)result;
      }
      v19[2] = v18 + 1;
      v9 = v19;
      v20 = &v19[3 * v18];
      v20[4] = v22;
      v20[5] = v21;
      *((_BYTE *)v20 + 48) = v13;
      if (v5)
        goto LABEL_4;
    }
LABEL_7:
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v14 >= v6)
      goto LABEL_29;
    v15 = *(_QWORD *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v6)
        goto LABEL_29;
      v15 = *(_QWORD *)(v2 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v6)
          goto LABEL_29;
        v15 = *(_QWORD *)(v2 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v6)
            goto LABEL_29;
          v15 = *(_QWORD *)(v2 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v15 - 1) & v15;
  }
  v16 = v14 + 4;
  if (v16 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  v15 = *(_QWORD *)(v2 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v15 = *(_QWORD *)(v2 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23BA4EA64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v27 - v10;
  v32 = v2;
  sub_23B989EFC(v2, (uint64_t)&v27 - v10, &qword_256A5E8B0);
  if (swift_getEnumCaseMultiPayload())
    __asm { BR              X10 }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C8);
  v30 = &v11[*(int *)(v13 + 48)];
  v29 = &v11[*(int *)(v13 + 64)];
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D8);
  v15 = (char *)v7 + v14[12];
  v16 = v14[20];
  v27 = v14[16];
  v28 = v16;
  *v7 = a1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  v18 = &v15[*(int *)(v17 + 48)];
  v19 = &v15[*(int *)(v17 + 64)];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  *((_WORD *)v15 + 8) = 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C0);
  v21 = &v18[*(int *)(v20 + 76)];
  v22 = sub_23BB88A98();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  *(_QWORD *)v18 = 0;
  v18[*(int *)(v20 + 80)] = 0;
  v23(&v19[*(int *)(v20 + 76)], 1, 1, v22);
  *(_QWORD *)v19 = 0;
  v19[*(int *)(v20 + 80)] = 0;
  *(_QWORD *)((char *)v7 + v27) = v31;
  swift_retain();
  *(_QWORD *)((char *)v7 + v28) = *(_QWORD *)sub_23BB89158();
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_23BA7FA40((uint64_t)v7, v32, &qword_256A5E8B0);
  sub_23B989D60((uint64_t)v29, &qword_256A5E870);
  v24 = sub_23BB88A80();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v30, v24);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v11, v25);
}

void sub_23BA4ECC4()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B8) + 48);
  swift_release();
  sub_23B989D60(v1, &qword_256A5E8A8);
  __break(1u);
  JUMPOUT(0x23BA4ED30);
}

void sub_23BA4ED4C(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  _QWORD v75[22];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v79 = a4;
  v77 = a5;
  v78 = a3;
  v7 = sub_23BB88A98();
  v8 = *(_QWORD *)(v7 - 8);
  v75[20] = v7;
  v75[21] = v8;
  MEMORY[0x24BDAC7A8](v7, v9);
  v75[0] = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v75[1] = (char *)v75 - v13;
  MEMORY[0x24BDAC7A8](v14, v15);
  v75[3] = (char *)v75 - v16;
  MEMORY[0x24BDAC7A8](v17, v18);
  v75[14] = (char *)v75 - v19;
  MEMORY[0x24BDAC7A8](v20, v21);
  v75[8] = (char *)v75 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  v75[16] = *(_QWORD *)(v23 - 8);
  v75[17] = v23;
  MEMORY[0x24BDAC7A8](v23, v24);
  v75[6] = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v75[11] = (char *)v75 - v28;
  MEMORY[0x24BDAC7A8](v29, v30);
  v75[12] = (char *)v75 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  MEMORY[0x24BDAC7A8](v32, v33);
  v75[4] = (char *)v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35, v36);
  v75[15] = (char *)v75 - v37;
  MEMORY[0x24BDAC7A8](v38, v39);
  v75[2] = (char *)v75 - v40;
  MEMORY[0x24BDAC7A8](v41, v42);
  v75[10] = (char *)v75 - v43;
  MEMORY[0x24BDAC7A8](v44, v45);
  v75[5] = (char *)v75 - v46;
  MEMORY[0x24BDAC7A8](v47, v48);
  v75[7] = (char *)v75 - v49;
  MEMORY[0x24BDAC7A8](v50, v51);
  v75[9] = (char *)v75 - v52;
  MEMORY[0x24BDAC7A8](v53, v54);
  v75[13] = (char *)v75 - v55;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  MEMORY[0x24BDAC7A8](v76, v56);
  v75[19] = (char *)v75 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v58, v59);
  v75[18] = (char *)v75 - v60;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  MEMORY[0x24BDAC7A8](v61, v62);
  v64 = (char *)v75 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E960);
  MEMORY[0x24BDAC7A8](v65, v66);
  MEMORY[0x24BDAC7A8](v67, v68);
  MEMORY[0x24BDAC7A8](v69, v70);
  v72 = (char *)v75 - v71;
  *(_QWORD *)v72 = a1;
  v72[8] = a2 & 1;
  sub_23B989EFC(v78, (uint64_t)v75 + *(int *)(v73 + 48) - v71, &qword_256A59710);
  sub_23B989EFC(v79, (uint64_t)&v72[*(int *)(v65 + 64)], &qword_256A59710);
  sub_23B989EFC(v80, (uint64_t)v64, &qword_256A5E8B0);
  v79 = v61;
  v74 = (char *)&loc_23BA4F180 + *((int *)qword_23BA50130 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BA4F190()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  int v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  *(_QWORD *)(v6 - 256) = *v1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B8);
  v8 = (char *)v1 + *(int *)(v7 + 48);
  *(_QWORD *)(v6 - 304) = v7;
  v9 = *(_QWORD *)((char *)v1 + *(int *)(v7 + 64));
  v10 = *(_QWORD *)(v6 - 160);
  v11 = *(int *)(v10 + 48);
  v12 = *(_QWORD *)(v6 - 192);
  v13 = v12 + v11;
  v14 = *(int *)(v10 + 64);
  v15 = v12 + v14;
  v16 = (uint64_t)&v8[v11];
  v17 = (uint64_t)&v8[v14];
  LOBYTE(v11) = v8[16];
  LOBYTE(v14) = v8[17];
  *(_OWORD *)v12 = *(_OWORD *)v8;
  *(_BYTE *)(v12 + 16) = v11;
  *(_BYTE *)(v12 + 17) = v14;
  *(_QWORD *)(v6 - 144) = v13;
  sub_23B990D24(v16, v13, &qword_256A5E8C0);
  *(_QWORD *)(v6 - 184) = v15;
  sub_23B990D24(v17, v15, &qword_256A5E8C0);
  *(_QWORD *)(v6 - 112) = v9;
  sub_23B989D60(*(_QWORD *)(v6 - 128), &qword_256A5E8B0);
  swift_storeEnumTagMultiPayload();
  v18 = v2 + *(int *)(v3 + 48);
  v19 = v2 + *(int *)(v3 + 64);
  v20 = *(_QWORD *)v5;
  LOBYTE(v15) = *(_BYTE *)(v5 + 8);
  *(_QWORD *)v2 = *(_QWORD *)v5;
  *(_BYTE *)(v2 + 8) = v15;
  sub_23B989EFC(v0, v18, &qword_256A59710);
  sub_23B989EFC(v4, v19, &qword_256A59710);
  v22 = *(_QWORD *)(v6 - 176);
  v21 = *(_QWORD *)(v6 - 168);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  *(_QWORD *)(v6 - 216) = v18;
  v24 = v23(v18, 1, v22);
  if ((v15 & 1) != 0)
  {
    if (v24 != 1)
    {
      v57 = *(_QWORD *)(v6 - 216);
      v58 = *(_QWORD *)(v6 - 264);
      sub_23B989EFC(v57, v58, &qword_256A59710);
      if (v23(v19, 1, v22) == 1)
      {
        v59 = v21;
        v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
        v61 = *(_QWORD *)(v6 - 272);
        v60(v61, v58, v22);
        v62 = *(_QWORD *)(v6 - 192);
        v40 = *(_QWORD *)(v6 - 184);
        if ((*(_BYTE *)(v62 + 16) & 1) == 0)
        {
          v63 = *(_QWORD *)(v62 + 8);
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C0);
          v65 = v40 + *(int *)(v64 + 76);
          v66 = *(_QWORD *)(v6 - 200);
          v67 = *(_QWORD **)(v6 - 248);
          v68 = (char *)v67 + *(int *)(v66 + 48);
          v69 = (uint64_t)v67 + *(int *)(v66 + 64);
          *v67 = v63;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v68, v61, v22);
          sub_23B989EFC(v65, v69, &qword_256A59710);
          v70 = *(_QWORD *)(v6 - 112);
          v71 = *(_QWORD *)(v70 + 24);
          v72 = v71 + 1;
          if (!__OFADD__(v71, 1))
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (*(_QWORD *)(v70 + 16) < v72 || (isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23BA79DF0(v72);
              v70 = *(_QWORD *)(v6 - 112);
            }
            v74 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 208) + 80);
            v75 = (_QWORD *)(v70 + 16);
            v76 = v70 + ((v74 + 40) & ~v74);
            v77 = *(_QWORD *)(v6 - 248);
            sub_23BA7A22C(v75, v76, v77);
            sub_23B989D60(v77, &qword_256A5E868);
            sub_23B989D60(v5, &qword_256A5E960);
            v78 = *(_QWORD *)(v6 - 144) + *(int *)(v64 + 76);
            sub_23B989D60(v78, &qword_256A59710);
            v60(v78, v61, v22);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 168) + 56))(v78, 0, 1, v22);
LABEL_28:
            v12 = *(_QWORD *)(v6 - 192);
            goto LABEL_29;
          }
LABEL_32:
          __break(1u);
          JUMPOUT(0x23BA50054);
        }
      }
      else
      {
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v58, v22);
        __break(1u);
      }
      swift_release();
      __break(1u);
      JUMPOUT(0x23BA5010CLL);
    }
    v25 = v23(v19, 1, v22);
    v57 = *(_QWORD *)(v6 - 216);
    if (v25 == 1)
    {
      swift_release();
      __break(1u);
    }
    else
    {
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 32);
      v26(*(char **)(v6 - 224), v19, v22);
      v27 = *(_QWORD *)(v6 - 280);
      if ((*(_BYTE *)(v12 + 16) & 1) == 0)
      {
        v28 = *(_QWORD *)(v12 + 8);
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C0);
        sub_23B989EFC(*(_QWORD *)(v6 - 144) + *(int *)(v29 + 76), v27, &qword_256A59710);
        if (v23(v27, 1, v22) != 1)
        {
          v30 = *(_QWORD *)(v6 - 168);
          v31 = *(_QWORD *)(v6 - 296);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 16))(v31, *(_QWORD *)(v6 - 224), v22);
          v32 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56);
          v32(v31, 0, 1, v22);
          v33 = *(_QWORD *)(v6 - 200);
          v34 = *(_QWORD **)(v6 - 288);
          v35 = (char *)v34 + *(int *)(v33 + 48);
          v36 = (uint64_t)v34 + *(int *)(v33 + 64);
          *v34 = v28;
          v26(v35, v27, v22);
          sub_23B990D24(v31, v36, &qword_256A59710);
          v37 = *(_QWORD *)(v6 - 112);
          v38 = *(_QWORD *)(v37 + 24);
          v39 = v38 + 1;
          v40 = *(_QWORD *)(v6 - 184);
          if (!__OFADD__(v38, 1))
          {
            v41 = swift_isUniquelyReferenced_nonNull_native();
            if (*(_QWORD *)(v37 + 16) < v39 || (v41 & 1) == 0)
            {
              sub_23BA79DF0(v39);
              v37 = *(_QWORD *)(v6 - 112);
            }
            v42 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 208) + 80);
            sub_23BA7A22C((_QWORD *)(v37 + 16), v37 + ((v42 + 40) & ~v42), (uint64_t)v34);
            sub_23B989D60((uint64_t)v34, &qword_256A5E868);
            sub_23B989D60(v5, &qword_256A5E960);
            v43 = v40 + *(int *)(v29 + 76);
            sub_23B989D60(v43, &qword_256A59710);
            v26((char *)v43, *(_QWORD *)(v6 - 224), v22);
            v32(v43, 0, 1, v22);
            goto LABEL_28;
          }
          goto LABEL_31;
        }
LABEL_37:
        swift_release();
        __break(1u);
        JUMPOUT(0x23BA500D0);
      }
    }
    swift_release();
    __break(1u);
    goto LABEL_37;
  }
  if (v24 != 1)
  {
    swift_release();
    __break(1u);
LABEL_33:
    swift_release();
    __break(1u);
    goto LABEL_34;
  }
  v44 = v23(v19, 1, v22);
  v45 = *(_QWORD *)(v6 - 232);
  if (v44 != 1)
    goto LABEL_33;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C0);
  sub_23B989EFC(*(_QWORD *)(v6 - 144) + *(int *)(v46 + 76), v45, &qword_256A59710);
  if (v23(v45, 1, v22) == 1)
  {
LABEL_34:
    swift_release();
    __break(1u);
    JUMPOUT(0x23BA50084);
  }
  v40 = *(_QWORD *)(v6 - 184);
  v47 = v40 + *(int *)(v46 + 76);
  v48 = *(_QWORD *)(v6 - 200);
  v49 = *(_QWORD **)(v6 - 240);
  v50 = (char *)v49 + *(int *)(v48 + 48);
  v51 = (uint64_t)v49 + *(int *)(v48 + 64);
  *v49 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v50, v45, v22);
  sub_23B989EFC(v47, v51, &qword_256A59710);
  v52 = *(_QWORD *)(v6 - 112);
  v53 = *(_QWORD *)(v52 + 24);
  v54 = v53 + 1;
  if (__OFADD__(v53, 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v55 = swift_isUniquelyReferenced_nonNull_native();
  if (*(_QWORD *)(v52 + 16) < v54 || (v55 & 1) == 0)
  {
    sub_23BA79DF0(v54);
    v52 = *(_QWORD *)(v6 - 112);
  }
  v56 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 208) + 80);
  sub_23BA7A22C((_QWORD *)(v52 + 16), v52 + ((v56 + 40) & ~v56), (uint64_t)v49);
  sub_23B989D60((uint64_t)v49, &qword_256A5E868);
  sub_23B989D60(v5, &qword_256A5E960);
  *(_QWORD *)(v12 + 8) = v20;
  *(_BYTE *)(v12 + 16) = 0;
  v57 = *(_QWORD *)(v6 - 216);
LABEL_29:
  sub_23B989D60(v57, &qword_256A59710);
  v79 = *(_QWORD **)(v6 - 128);
  sub_23B989D60((uint64_t)v79, &qword_256A5E8B0);
  v80 = *(_QWORD *)(v6 - 304);
  v81 = (char *)v79 + *(int *)(v80 + 48);
  v82 = *(int *)(v80 + 64);
  *v79 = *(_QWORD *)(v6 - 256);
  v83 = *(_QWORD *)(v6 - 160);
  v84 = (uint64_t)&v81[*(int *)(v83 + 48)];
  v85 = (uint64_t)&v81[*(int *)(v83 + 64)];
  LOBYTE(v80) = *(_BYTE *)(v12 + 16);
  LOBYTE(v83) = *(_BYTE *)(v12 + 17);
  *(_OWORD *)v81 = *(_OWORD *)v12;
  v81[16] = v80;
  v81[17] = v83;
  sub_23B989EFC(*(_QWORD *)(v6 - 144), v84, &qword_256A5E8C0);
  sub_23B989EFC(v40, v85, &qword_256A5E8C0);
  *(_QWORD *)((char *)v79 + v82) = *(_QWORD *)(v6 - 112);
  swift_storeEnumTagMultiPayload();
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E958);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(*(_QWORD *)(v6 - 152), 1, 1, v86);
  return sub_23B989D60(v12, &qword_256A5E8A8);
}

void sub_23BA5014C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[6];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  MEMORY[0x24BDAC7A8](v1, v2);
  MEMORY[0x24BDAC7A8](v3, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v14[5] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23B989EFC(v0, (uint64_t)v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5E8B0);
  v13 = (char *)&loc_23BA50294 + *((int *)qword_23BA50D80 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

unint64_t sub_23BA502A8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;

  *(_QWORD *)(v5 - 88) = *v0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B8);
  v7 = (char *)v0 + *(int *)(v6 + 48);
  *(_QWORD *)(v5 - 96) = *(_QWORD *)((char *)v0 + *(int *)(v6 + 64));
  v8 = *(int *)(v3 + 48);
  v9 = *(int *)(v3 + 64);
  v10 = (uint64_t)&v7[v9];
  v11 = v7[16];
  v12 = v7[17];
  *(_OWORD *)v1 = *(_OWORD *)v7;
  *(_BYTE *)(v1 + 16) = v11;
  *(_QWORD *)(v5 - 112) = v1 + v8;
  *(_QWORD *)(v5 - 104) = v1;
  *(_BYTE *)(v1 + 17) = v12;
  sub_23B990D24((uint64_t)&v7[v8], v1 + v8, &qword_256A5E8C0);
  v13 = v10;
  v14 = (_QWORD *)(v1 + v9);
  sub_23B990D24(v13, v1 + v9, &qword_256A5E8C0);
  sub_23B989D60((uint64_t)v2, &qword_256A5E8B0);
  swift_storeEnumTagMultiPayload();
  if (v4)
  {
    if (v4 != 1)
    {
      v8 = v9;
      if (v4 != 2)
      {
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x23BA50D6CLL);
      }
    }
    v15 = *(_QWORD *)(v5 - 104);
    *(_BYTE *)(v15 + v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C0) + 80)) = 1;
    v16 = v14;
    v17 = *(_QWORD **)(v5 - 112);
    if (*(_BYTE *)(v15 + 17) != 1)
      goto LABEL_14;
  }
  else
  {
    v17 = *(_QWORD **)(v5 - 112);
    v15 = *(_QWORD *)(v5 - 104);
    *(_BYTE *)(v15 + 17) = 1;
    v16 = v14;
  }
  v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C0) + 80);
  if (*((_BYTE *)v17 + v18) == 1)
  {
    if (*((_BYTE *)v16 + v18) == 1)
    {
      v19 = *(_QWORD *)(v5 - 96);
      v20 = *(_QWORD *)(v19 + 24);
      sub_23B989D60((uint64_t)v2, &qword_256A5E8B0);
      if (v20)
      {
        *v2 = v19;
        swift_storeEnumTagMultiPayload();
        swift_retain();
      }
      else
      {
        swift_storeEnumTagMultiPayload();
      }
      v30 = *(_QWORD *)v15;
      v31 = *v17;
      v32 = *v16;
      v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (*(_QWORD *)v15)
      {
        v33 = sub_23BB63864(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v35 = v33[2];
        v34 = v33[3];
        if (v35 >= v34 >> 1)
          v33 = sub_23BB63864((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
        v33[2] = v35 + 1;
        v33[v35 + 4] = v30;
      }
      if (v31)
      {
        v36 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v36 = sub_23BB63864(0, v36[2] + 1, 1, v36);
        v33 = v36;
        v38 = v36[2];
        v37 = v36[3];
        if (v38 >= v37 >> 1)
          v33 = sub_23BB63864((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
        v33[2] = v38 + 1;
        v33[v38 + 4] = v31;
      }
      if (!v32)
        goto LABEL_44;
      goto LABEL_27;
    }
    if (*(_QWORD *)((char *)v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E968) + 68)) == 2)
    {
      v21 = *(_QWORD *)(v5 - 96);
      v22 = *(_QWORD *)(v21 + 24);
      sub_23B989D60((uint64_t)v2, &qword_256A5E8B0);
      if (v22)
      {
        *v2 = v21;
        swift_storeEnumTagMultiPayload();
        swift_retain();
      }
      else
      {
        swift_storeEnumTagMultiPayload();
      }
      v43 = *(_QWORD *)v15;
      v44 = *v17;
      v32 = *v16;
      v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (*(_QWORD *)v15)
      {
        v33 = sub_23BB63864(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v46 = v33[2];
        v45 = v33[3];
        if (v46 >= v45 >> 1)
          v33 = sub_23BB63864((_QWORD *)(v45 > 1), v46 + 1, 1, v33);
        v33[2] = v46 + 1;
        v33[v46 + 4] = v43;
      }
      if (v44)
      {
        v47 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v47 = sub_23BB63864(0, v47[2] + 1, 1, v47);
        v33 = v47;
        v49 = v47[2];
        v48 = v47[3];
        if (v49 >= v48 >> 1)
          v33 = sub_23BB63864((_QWORD *)(v48 > 1), v49 + 1, 1, v47);
        v33[2] = v49 + 1;
        v33[v49 + 4] = v44;
      }
      if (!v32)
        goto LABEL_44;
LABEL_27:
      v39 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v39 = sub_23BB63864(0, v39[2] + 1, 1, v39);
      v40 = v39;
      v42 = v39[2];
      v41 = v39[3];
      if (v42 >= v41 >> 1)
        v40 = sub_23BB63864((_QWORD *)(v41 > 1), v42 + 1, 1, v39);
      v40[2] = v42 + 1;
      v40[v42 + 4] = v32;
LABEL_44:
      swift_release();
      sub_23B989D60(v15, &qword_256A5E8A8);
      return *(_QWORD *)(v5 - 88);
    }
  }
LABEL_14:
  sub_23B989D60((uint64_t)v2, &qword_256A5E8B0);
  v23 = (char *)v2 + *(int *)(v6 + 48);
  v24 = *(int *)(v6 + 64);
  *v2 = *(_QWORD *)(v5 - 88);
  v25 = (uint64_t)&v23[*(int *)(v3 + 48)];
  v26 = (uint64_t)&v23[*(int *)(v3 + 64)];
  v27 = *(_BYTE *)(v15 + 16);
  v28 = *(_BYTE *)(v15 + 17);
  *(_OWORD *)v23 = *(_OWORD *)v15;
  v23[16] = v27;
  v23[17] = v28;
  sub_23B990D24((uint64_t)v17, v25, &qword_256A5E8C0);
  sub_23B990D24((uint64_t)v16, v26, &qword_256A5E8C0);
  *(_QWORD *)((char *)v2 + v24) = *(_QWORD *)(v5 - 96);
  swift_storeEnumTagMultiPayload();
  return 0xF000000000000007;
}

void sub_23BA50D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[10];

  v19[9] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v19[8] = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v19[6] = (char *)v19 - v7;
  MEMORY[0x24BDAC7A8](v8, v9);
  MEMORY[0x24BDAC7A8](v10, v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  v19[7] = (char *)v19 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23B989EFC(v1, (uint64_t)v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5E8B0);
  v18 = (char *)&loc_23BA50EEC + dword_23BA5161C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BA50F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;

  *(_QWORD *)(v5 - 120) = *v4;
  v6 = (char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B8) + 48);
  swift_release();
  v7 = *(int *)(v2 + 48);
  v8 = *(uint64_t **)(v5 - 104);
  v9 = (uint64_t)v8 + v7;
  v10 = *(int *)(v2 + 64);
  v11 = (uint64_t)v8 + v10;
  *(_QWORD *)(v5 - 144) = (char *)v8 + v10;
  v12 = (uint64_t)&v6[v7];
  v13 = (uint64_t)&v6[v10];
  LOBYTE(v7) = v6[16];
  LOBYTE(v10) = v6[17];
  *(_OWORD *)v8 = *(_OWORD *)v6;
  *((_BYTE *)v8 + 16) = v7;
  *((_BYTE *)v8 + 17) = v10;
  v14 = v9;
  sub_23B990D24(v12, v9, &qword_256A5E8C0);
  sub_23B990D24(v13, v11, &qword_256A5E8C0);
  sub_23B989D60((uint64_t)v3, &qword_256A5E8B0);
  *v3 = *(_QWORD *)(v5 - 88);
  swift_storeEnumTagMultiPayload();
  v15 = v0 + *(int *)(v2 + 48);
  *(_QWORD *)(v5 - 96) = v15;
  v16 = v0 + *(int *)(v2 + 64);
  v17 = *v8;
  v18 = v8[1];
  v19 = *((unsigned __int8 *)v8 + 16);
  *(_DWORD *)(v5 - 152) = v19;
  LOBYTE(v11) = *((_BYTE *)v8 + 17);
  *(_QWORD *)v0 = v17;
  *(_QWORD *)(v0 + 8) = v18;
  *(_QWORD *)(v5 - 136) = v17;
  *(_QWORD *)(v5 - 128) = v16;
  *(_BYTE *)(v0 + 16) = v19;
  *(_BYTE *)(v0 + 17) = v11;
  sub_23B989EFC(v14, v15, &qword_256A5E8C0);
  v20 = *(_QWORD *)(v5 - 144);
  sub_23B989EFC(v20, v16, &qword_256A5E8C0);
  v21 = (uint64_t *)(v1 + *(int *)(v2 + 48));
  v22 = v1 + *(int *)(v2 + 64);
  *(_QWORD *)v1 = v17;
  *(_QWORD *)(v1 + 8) = v18;
  *(_BYTE *)(v1 + 16) = *(_DWORD *)(v5 - 152);
  *(_BYTE *)(v1 + 17) = v11;
  sub_23B989EFC(v14, (uint64_t)v21, &qword_256A5E8C0);
  sub_23B989EFC(v20, v22, &qword_256A5E8C0);
  v23 = *v21;
  v24 = *(id *)(v5 - 88);
  sub_23B989D60((uint64_t)v21, &qword_256A5E8C0);
  v25 = *(_QWORD *)(v5 - 112);
  v26 = v25 + *(int *)(v2 + 48);
  v27 = (uint64_t *)(v25 + *(int *)(v2 + 64));
  v28 = *((_BYTE *)v8 + 16);
  v29 = *((_BYTE *)v8 + 17);
  *(_OWORD *)v25 = *(_OWORD *)v8;
  *(_BYTE *)(v25 + 16) = v28;
  *(_BYTE *)(v25 + 17) = v29;
  sub_23B989EFC(v14, v26, &qword_256A5E8C0);
  sub_23B989EFC(v20, (uint64_t)v27, &qword_256A5E8C0);
  v30 = *v27;
  sub_23B989D60((uint64_t)v27, &qword_256A5E8C0);
  sub_23B989D60(v26, &qword_256A5E8C0);
  v31 = v22;
  v32 = *(_QWORD *)(v5 - 136);
  sub_23B989D60(v31, &qword_256A5E8C0);
  sub_23B989D60(*(_QWORD *)(v5 - 128), &qword_256A5E8C0);
  sub_23B989D60(*(_QWORD *)(v5 - 96), &qword_256A5E8C0);
  if (!v32)
  {
    v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!v23)
      goto LABEL_12;
    goto LABEL_7;
  }
  v33 = sub_23BB63864(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v35 = v33[2];
  v34 = v33[3];
  if (v35 >= v34 >> 1)
    v33 = sub_23BB63864((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
  v33[2] = v35 + 1;
  v33[v35 + 4] = v32;
  if (v23)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_23BB63864(0, v33[2] + 1, 1, v33);
    v37 = v33[2];
    v36 = v33[3];
    if (v37 >= v36 >> 1)
      v33 = sub_23BB63864((_QWORD *)(v36 > 1), v37 + 1, 1, v33);
    v33[2] = v37 + 1;
    v33[v37 + 4] = v23;
  }
LABEL_12:
  if (v30)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v33 = sub_23BB63864(0, v33[2] + 1, 1, v33);
    v39 = v33[2];
    v38 = v33[3];
    if (v39 >= v38 >> 1)
      v33 = sub_23BB63864((_QWORD *)(v38 > 1), v39 + 1, 1, v33);
    v33[2] = v39 + 1;
    v33[v39 + 4] = v30;
  }
  sub_23B989D60(*(_QWORD *)(v5 - 104), &qword_256A5E8A8);
  return *(_QWORD *)(v5 - 120);
}

void sub_23BA51638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[10];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v16[9] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v5);
  MEMORY[0x24BDAC7A8](v6, v7);
  MEMORY[0x24BDAC7A8](v8, v9);
  MEMORY[0x24BDAC7A8](v10, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23B989EFC(v0, (uint64_t)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5E8B0);
  v15 = (char *)&loc_23BA5177C + dword_23BA51F34[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_23BA51790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C8);
  v3 = v1 + *(int *)(v2 + 48);
  v4 = v1 + *(int *)(v2 + 64);
  sub_23B989D60(v0, &qword_256A5E8B0);
  swift_storeEnumTagMultiPayload();
  sub_23B989D60(v4, &qword_256A5E870);
  v5 = sub_23BB88A80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v1, v6);
  return 0xF000000000000007;
}

void sub_23BA51F50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E860);
  MEMORY[0x24BDAC7A8](v3, v4);
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  MEMORY[0x24BDAC7A8](v7, v8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  MEMORY[0x24BDAC7A8](v17, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23B989EFC(v2, (uint64_t)&v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5E8B0);
  v15 = (char *)&loc_23BA520CC + dword_23BA529EC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BA520DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C8);
  v3 = v0 + *(int *)(v2 + 48);
  v4 = v0 + *(int *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v6 = *(_QWORD *)(v1 - 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v6, v0, v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8F0);
  v8 = v6 + *(int *)(v7 + 48);
  v9 = sub_23BB88A80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, v3, v9);
  sub_23B990D24(v4, v6 + *(int *)(v7 + 64), &qword_256A5E870);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8E0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BA52A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a2;
  v37 = a3;
  v34 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E870);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23BB88A80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E968);
  MEMORY[0x24BDAC7A8](v33, v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v32 = (uint64_t)&v32 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a1, v13, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v36, v8);
  sub_23B989EFC(v37, (uint64_t)v7, &qword_256A5E870);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8C8);
  v26 = &v20[*(int *)(v25 + 48)];
  v27 = (uint64_t)&v20[*(int *)(v25 + 64)];
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v17, v13);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v12, v8);
  sub_23B989EFC((uint64_t)v7, v27, &qword_256A5E870);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  swift_storeEnumTagMultiPayload();
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  sub_23B989D60((uint64_t)v7, &qword_256A5E870);
  v28 = 2;
  if ((_DWORD)v12 != 1)
    v28 = 3;
  *(_QWORD *)&v20[*(int *)(v33 + 68)] = v28;
  v29 = v32;
  sub_23B990D24((uint64_t)v20, v32, &qword_256A5E968);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E990);
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + ((*(unsigned int *)(*(_QWORD *)v30 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_23B989EFC(v29, v30 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v30 + 16), &qword_256A5E968);
  sub_23B989D60(v29, &qword_256A5E968);
  sub_23B989D60(v37, &qword_256A5E870);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v36, v8);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
  result = v35;
  *(_QWORD *)(v35 + 16) = v30;
  return result;
}

uint64_t sub_23BA52D18(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA52D84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = v0[11];
  v0[7] = v0[12];
  v0[2] = v0;
  v0[3] = sub_23BA52E58;
  v2 = swift_continuation_init();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_23BA52F24(v4, v2, v1);
  v0[14] = 0;
  os_unfair_lock_unlock(v5);
  return swift_continuation_await();
}

uint64_t sub_23BA52E58()
{
  uint64_t v0;

  sub_23B990D24(*(_QWORD *)(*(_QWORD *)v0 + 96), *(_QWORD *)(*(_QWORD *)v0 + 104), &qword_256A5E8D0);
  return swift_task_switch();
}

uint64_t sub_23BA52EB4()
{
  uint64_t v0;

  sub_23BA53500(*(_QWORD *)(v0 + 80));
  sub_23B989D60(*(_QWORD *)(v0 + 104), &qword_256A5E8D0);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA52F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v43 = a3;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  MEMORY[0x24BDAC7A8](v39, v5);
  v38 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v47 = (char *)&v38 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v52 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E870);
  v41 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v41 + 64);
  MEMORY[0x24BDAC7A8](v13, v15);
  v42 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v17);
  v51 = (char *)&v38 - v18;
  v50 = sub_23BB88A80();
  v55 = *(_QWORD *)(v50 - 8);
  v19 = *(_QWORD *)(v55 + 64);
  MEMORY[0x24BDAC7A8](v50, v20);
  v46 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v49 = (char *)&v38 - v23;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v54 = *(_QWORD *)(v48 - 8);
  v24 = *(_QWORD *)(v54 + 64);
  MEMORY[0x24BDAC7A8](v48, v25);
  v45 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v53 = (char *)&v38 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8E0);
  MEMORY[0x24BDAC7A8](v29, v30);
  v32 = (char *)&v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v34);
  v36 = (char *)&v38 - v35;
  v44 = a2;
  v40 = a1;
  sub_23BA51F50(a2, (uint64_t)&v38 - v35);
  sub_23B989EFC((uint64_t)v36, (uint64_t)v32, &qword_256A5E8E0);
  v37 = (char *)sub_23BA531BC + 4 * byte_23BB919E4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BA531BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8F0);
  v6 = v1 + *(int *)(v5 + 48);
  v7 = v1 + *(int *)(v5 + 64);
  v8 = *(_QWORD *)(v4 - 104);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 32);
  *(_QWORD *)(v4 - 216) = v9;
  v10 = v1;
  v11 = *(_QWORD *)(v4 - 144);
  v9(v8, v10, v11);
  v12 = *(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 88) + 32);
  *(_QWORD *)(v4 - 152) = v12;
  v13 = *(_QWORD *)(v4 - 136);
  v12(v13, v6, *(_QWORD *)(v4 - 128));
  v14 = *(_QWORD *)(v4 - 120);
  sub_23B990D24(v7, v14, &qword_256A5E870);
  v15 = sub_23BB8AA18();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(*(_QWORD *)(v4 - 112), 1, 1, v15);
  v16 = *(_QWORD *)(v4 - 96);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v16 + 16))(*(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 104), v11);
  v17 = *(_QWORD *)(v4 - 88);
  v18 = v13;
  v19 = *(_QWORD *)(v4 - 128);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 16))(*(_QWORD *)(v4 - 160), v18, v19);
  v20 = v14;
  v21 = *(_QWORD *)(v4 - 192);
  sub_23B989EFC(v20, v21, &qword_256A5E870);
  v22 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v23 = (v2 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (*(unsigned __int8 *)(v17 + 80) + v23 + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v25 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 200) + 80);
  v26 = (v3 + v25 + v24) & ~v25;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  v28 = *(_QWORD *)(v4 - 144);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v4 - 216))(v27 + v22, *(_QWORD *)(v4 - 168), v28);
  *(_QWORD *)(v27 + v23) = *(_QWORD *)(v4 - 184);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v4 - 152))(v27 + v24, *(_QWORD *)(v4 - 160), v19);
  sub_23B990D24(v21, v27 + v26, &qword_256A5E870);
  swift_retain();
  v29 = sub_23B989F54(*(_QWORD *)(v4 - 112), (uint64_t)&unk_256A5E900, v27);
  sub_23BA4EA64(v29, *(_QWORD *)(v4 - 176));
  swift_release();
  sub_23B989D60(*(_QWORD *)(v4 - 120), &qword_256A5E870);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 88) + 8))(*(_QWORD *)(v4 - 136), v19);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(*(_QWORD *)(v4 - 104), v28);
  return sub_23B989D60(v0, &qword_256A5E8E0);
}

void sub_23BA53500(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (void **)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23B989EFC(v2, (uint64_t)v7, &qword_256A5E8D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *v7;
    v8 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
    swift_willThrowTypedImpl();
    v11 = v8;
    if (sub_23BB8B174())
    {

    }
    else
    {
      swift_allocError();
      *v9 = v11;
    }
  }
  else
  {
    sub_23B990D24((uint64_t)v7, a1, &qword_256A5E860);
  }
}

void sub_23BA53638(uint64_t a1)
{
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 16)
                          + ((*(unsigned int *)(**(_QWORD **)(a1 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v1);
  sub_23BA536A8();
  os_unfair_lock_unlock(v1);
}

void sub_23BA536A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23BA51638();
  if ((~v5 & 0xF000000000000007) != 0)
  {
    v8 = v5;
    v23 = v6;
    if (v5 < 0)
    {
      v13 = v5 & 0x7FFFFFFFFFFFFFFFLL;
      v14 = *(_QWORD *)(v6 + 16);
      if (v14)
      {
        v21 = v5;
        v22 = v0;
        sub_23BB8A9B8();
        sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        v20 = v13;
        swift_retain();
        swift_bridgeObjectRetain();
        v15 = 0;
        do
        {
          ++v15;
          v16 = swift_allocError();
          sub_23BB8A6AC();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
          swift_allocError();
          *v17 = v16;
          swift_continuation_throwingResumeWithError();
        }
        while (v14 != v15);
        swift_bridgeObjectRelease();
        v8 = v21;
      }
      else
      {
        swift_retain();
      }
      sub_23BB8AA78();
      sub_23B9F4CBC(v8);
      swift_release();
    }
    else
    {
      v9 = *(_QWORD *)(v7 + 16);
      if (v9)
      {
        v19 = v4;
        v20 = v1;
        v21 = v5;
        v22 = v0;
        sub_23BB8A9B8();
        sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        swift_retain();
        swift_bridgeObjectRetain();
        v10 = 0;
        do
        {
          ++v10;
          v11 = swift_allocError();
          sub_23BB8A6AC();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
          swift_allocError();
          *v12 = v11;
          swift_continuation_throwingResumeWithError();
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        v8 = v21;
        v4 = v19;
      }
      else
      {
        swift_retain();
      }
      sub_23BB8AA78();
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
      swift_storeEnumTagMultiPayload();
      sub_23B990D24((uint64_t)v4, *(_QWORD *)(*(_QWORD *)(v8 + 64) + 40), &qword_256A5E8D0);
      swift_continuation_resume();
      swift_release();
      sub_23B9F4CBC(v8);
    }
  }
}

uint64_t sub_23BA539EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23BA53A0C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_23BA070C4;
  return sub_23BB8B030();
}

uint64_t sub_23BA53AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[5] = a5;
  v6[6] = a6;
  v6[3] = a3;
  v6[4] = a4;
  v6[2] = a2;
  v6[7] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  v6[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E870);
  v6[9] = swift_task_alloc();
  v7 = sub_23BB88A80();
  v6[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[11] = v8;
  v6[12] = *(_QWORD *)(v8 + 64);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v6[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[16] = v10;
  v6[17] = *(_QWORD *)(v10 + 64);
  v6[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v6[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA53BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(unint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  v31 = *(_QWORD *)(v0 + 112);
  v33 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 88);
  v30 = *(_QWORD *)(v0 + 80);
  v36 = *(_QWORD *)(v0 + 72);
  v34 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v26 = *(_QWORD *)(v0 + 32);
  v27 = *(_QWORD *)(v0 + 40);
  v7 = sub_23BB8AA18();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v2, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v5);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v10 + v9, v1, v5);
  *(_QWORD *)(v10 + ((v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
  swift_retain();
  sub_23B9DA570(v2, (uint64_t)&unk_256A5E920, v10);
  sub_23B989D60(v2, (uint64_t *)&unk_256A613D0);
  v24 = v7;
  v25 = v8;
  v8(v2, 1, 1, v7);
  v11 = v27;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  v28(v31, v11, v30);
  v12 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v13 = (v33 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  v15 = v31;
  v32 = *(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 32);
  v32(v14 + v12, v15, v30);
  *(_QWORD *)(v14 + v13) = v26;
  swift_retain();
  sub_23B9DA570(v2, (uint64_t)&unk_256A5E930, v14);
  sub_23B989D60(v2, (uint64_t *)&unk_256A613D0);
  sub_23B989EFC(v34, v36, &qword_256A5E870);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v36, 1, v30) == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 72), &qword_256A5E870);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 80);
    v37 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 32);
    v35 = v17;
    v32(v17, *(_QWORD *)(v0 + 72), v19);
    v25(v16, 1, 1, v24);
    v28(v18, v17, v19);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = 0;
    v32(v21 + v12, v18, v19);
    *(_QWORD *)(v21 + v13) = v20;
    swift_retain();
    sub_23B9DA570(v16, (uint64_t)&unk_256A5E948, v21);
    sub_23B989D60(v16, (uint64_t *)&unk_256A613D0);
    (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v35, v19);
  }
  *(_QWORD *)(v0 + 160) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v23 = v0;
    v23[1] = sub_23BA53FCC;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23BA53FCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA54030()
{
  uint64_t v0;
  _QWORD *v2;

  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v2 = v0;
    v2[1] = sub_23BA53FCC;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23BA54130()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16)
                          + ((*(unsigned int *)(**(_QWORD **)(*(_QWORD *)(v0 + 32) + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_23BA50D9C(v1);
  if ((~(v5 & v3) & 0xF000000000000007) != 0)
  {
    v7 = v3;
    v8 = v4;
    v9 = v5;
    if (v5 < 0)
    {
      v14 = *(_QWORD *)(v6 + 16);
      if (v14)
      {
        v25 = v5;
        v27 = v3;
        v28 = v2;
        v15 = v4;
        sub_23BB8A9B8();
        sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        swift_retain();
        swift_bridgeObjectRetain();
        v16 = 0;
        do
        {
          ++v16;
          v17 = swift_allocError();
          sub_23BB8A6AC();
          swift_allocError();
          *v18 = v17;
          swift_continuation_throwingResumeWithError();
        }
        while (v14 != v16);
        swift_bridgeObjectRelease();
        v7 = v27;
        v2 = v28;
        v9 = v25;
      }
      else
      {
        v19 = v4;
        swift_retain();
      }
      v20 = *(_QWORD **)(v0 + 64);
      sub_23BB8AA78();
      *v20 = v8;
      swift_storeEnumTagMultiPayload();
      sub_23B990D24((uint64_t)v20, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40), &qword_256A5E8D0);
      swift_continuation_resume();
      swift_release();
      sub_23B9F53AC(v7, v8, v9);
    }
    else
    {
      v10 = v4[2];
      if (v10)
      {
        v24 = v5;
        sub_23BB8A9B8();
        sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        v26 = v7;
        swift_retain();
        swift_bridgeObjectRetain();
        v11 = 0;
        do
        {
          ++v11;
          v12 = swift_allocError();
          sub_23BB8A6AC();
          swift_allocError();
          *v13 = v12;
          swift_continuation_throwingResumeWithError();
        }
        while (v10 != v11);
        swift_bridgeObjectRelease();
        v7 = v26;
        v9 = v24;
      }
      else
      {
        swift_retain();
      }
      sub_23BB8AA78();
      sub_23B9F53AC(v7, v8, v9);
      swift_release();
    }
  }
  v21 = *(void **)(v0 + 176);
  os_unfair_lock_unlock(v2);
  sub_23BB8AACC();

  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v23 = v0;
    v23[1] = sub_23BA53FCC;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23BA5456C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[12] = a4;
  v5[13] = a5;
  v5[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E950);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  v5[22] = swift_task_alloc();
  v5[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  v5[24] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v5[25] = v6;
  v5[26] = *(_QWORD *)(v6 - 8);
  v5[27] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E978);
  v5[28] = v7;
  v5[29] = *(_QWORD *)(v7 - 8);
  v5[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA546EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 16))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 200));
  sub_23B996E1C(&qword_256A5E980, &qword_256A5E838, MEMORY[0x24BEE6AA8]);
  sub_23BB8AAD8();
  v2 = *(uint64_t **)(v1 + 16);
  *(_QWORD *)(v0 + 248) = v2;
  v3 = *v2;
  *(_DWORD *)(v0 + 92) = *(_DWORD *)(v3 + 48);
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(*MEMORY[0x24BEE27A8] + v3 + 16);
  return swift_task_switch();
}

void sub_23BA547A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  char *v5;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = v1 + *(_QWORD *)(v0 + 256);
  v4 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 92) + 3) & 0x1FFFFFFFCLL));
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23BA54ABC;
  swift_continuation_init();
  os_unfair_lock_lock(v4);
  sub_23B989EFC(v3, v2, &qword_256A5E8B0);
  v5 = (char *)&loc_23BA54838 + *((int *)qword_23BA54AA0 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BA54848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(uint64_t **)(v1 + 192);
  v4 = *(_QWORD *)(v1 + 168);
  v3 = *(_QWORD *)(v1 + 176);
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 248) + *(_QWORD *)(v1 + 256));
  v23 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B8);
  v7 = (char *)v2 + *(int *)(v6 + 48);
  v24 = *(uint64_t *)((char *)v2 + *(int *)(v6 + 64));
  v8 = *(int *)(v4 + 48);
  v9 = v3 + v8;
  v10 = *(int *)(v4 + 64);
  v11 = v3 + v10;
  v21 = v3 + v8;
  v22 = v3 + v10;
  v12 = (uint64_t)&v7[v8];
  v13 = (uint64_t)&v7[v10];
  LOBYTE(v8) = v7[16];
  LOBYTE(v10) = v7[17];
  *(_OWORD *)v3 = *(_OWORD *)v7;
  *(_BYTE *)(v3 + 16) = v8;
  *(_BYTE *)(v3 + 17) = v10;
  sub_23B990D24(v12, v9, &qword_256A5E8C0);
  sub_23B990D24(v13, v11, &qword_256A5E8C0);
  sub_23B989D60((uint64_t)v5, &qword_256A5E8B0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v3 = v0;
  sub_23B989D60((uint64_t)v5, &qword_256A5E8B0);
  v14 = (char *)v5 + *(int *)(v6 + 48);
  v15 = *(int *)(v6 + 64);
  *v5 = v23;
  v16 = (uint64_t)&v14[*(int *)(v4 + 48)];
  v17 = (uint64_t)&v14[*(int *)(v4 + 64)];
  v18 = *(_BYTE *)(v3 + 16);
  v19 = *(_BYTE *)(v3 + 17);
  *(_OWORD *)v14 = *(_OWORD *)v3;
  v14[16] = v18;
  v14[17] = v19;
  sub_23B990D24(v21, v16, &qword_256A5E8C0);
  sub_23B990D24(v22, v17, &qword_256A5E8C0);
  *(_QWORD *)((char *)v5 + v15) = v24;
  swift_storeEnumTagMultiPayload();
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v1 + 248) + ((*(unsigned int *)(v1 + 92) + 3) & 0x1FFFFFFFCLL)));
  return swift_continuation_await();
}

uint64_t sub_23BA54ABC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[33] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_23B996E1C(&qword_256A5E988, &qword_256A5E978, MEMORY[0x24BEE6A88]);
    v4 = (_QWORD *)swift_task_alloc();
    v1[34] = v4;
    *v4 = v1;
    v4[1] = sub_23BA54B98;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23BA54B98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA54BFC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA54CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(unsigned int *)(v0 + 92);
  v2 = *(_QWORD *)(v0 + 248);
  if ((*(_BYTE *)(v0 + 88) & 1) != 0)
  {
    v3 = (os_unfair_lock_s *)(v2 + ((v1 + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v3);
    sub_23BA5014C();
    v5 = v4;
    v7 = v6;
    v9 = v8;
    os_unfair_lock_unlock(v3);
    if ((~v5 & 0xF000000000000007) != 0)
    {
      if (v5 < 0)
      {
        v29 = v5 & 0x7FFFFFFFFFFFFFFFLL;
        v30 = *(_QWORD *)(v9 + 16);
        if (v30)
        {
          v36 = v5 & 0x7FFFFFFFFFFFFFFFLL;
          v38 = v5;
          sub_23BB8A9B8();
          sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
          swift_retain();
          swift_bridgeObjectRetain();
          v31 = 0;
          do
          {
            ++v31;
            v32 = swift_allocError();
            sub_23BB8A6AC();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
            swift_allocError();
            *v33 = v32;
            swift_continuation_throwingResumeWithError();
          }
          while (v30 != v31);
          swift_bridgeObjectRelease();
          v29 = v36;
          v5 = v38;
        }
        else
        {
          swift_retain();
        }
        v34 = *(_QWORD *)(v0 + 128);
        sub_23BB8AA78();
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
        swift_storeEnumTagMultiPayload();
        sub_23B990D24(v34, *(_QWORD *)(*(_QWORD *)(v29 + 64) + 40), &qword_256A5E8D0);
        swift_continuation_resume();
      }
      else
      {
        v10 = *(_QWORD *)(v7 + 16);
        if (v10)
        {
          sub_23BB8A9B8();
          sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
          v37 = v5;
          swift_retain();
          swift_bridgeObjectRetain();
          v11 = 0;
          do
          {
            ++v11;
            v12 = swift_allocError();
            sub_23BB8A6AC();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
            swift_allocError();
            *v13 = v12;
            swift_continuation_throwingResumeWithError();
          }
          while (v10 != v11);
          swift_bridgeObjectRelease();
          v5 = v37;
        }
        else
        {
          swift_retain();
        }
        sub_23BB8AA78();
      }
      swift_release();
      sub_23B9F532C(v5);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 80);
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + ((v1 + 3) & 0x1FFFFFFFCLL)));
    v19 = sub_23BB88A98();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
    v20(v16, 1, 1, v19);
    v20(v17, 1, 1, v19);
    sub_23BA4ED4C(v18, 0, v16, v17, v15);
    sub_23B989D60(v17, &qword_256A59710);
    sub_23B989D60(v16, &qword_256A59710);
    sub_23B989EFC(v15, v14, &qword_256A5E950);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E958);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v14, 1, v21) != 1)
    {
      v22 = *(uint64_t **)(v0 + 152);
      v23 = *(_QWORD *)(v0 + 120);
      v24 = *(_QWORD *)(v0 + 128);
      v25 = *v22;
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8E8);
      sub_23B990D24((uint64_t)v22 + *(int *)(v26 + 48), v24, &qword_256A5E8D0);
      sub_23B989EFC(v24, v23, &qword_256A5E8D0);
      sub_23B990D24(v23, *(_QWORD *)(*(_QWORD *)(v25 + 64) + 40), &qword_256A5E8D0);
      swift_continuation_resume();
      sub_23B989D60(v24, &qword_256A5E8D0);
    }
    v27 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 248) + ((*(unsigned int *)(v0 + 92) + 3) & 0x1FFFFFFFCLL));
    sub_23B989D60(*(_QWORD *)(v0 + 160), &qword_256A5E950);
    os_unfair_lock_unlock(v27);
    return swift_task_switch();
  }
}

uint64_t sub_23BA551F4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA552C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[10] = a4;
  v5[11] = a5;
  v5[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E950);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v6 = sub_23BB88A98();
  v5[20] = v6;
  v5[21] = *(_QWORD *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  v5[24] = swift_task_alloc();
  v5[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  v5[26] = swift_task_alloc();
  v7 = sub_23BB88A80();
  v5[27] = v7;
  v5[28] = *(_QWORD *)(v7 - 8);
  v5[29] = swift_task_alloc();
  v8 = sub_23BB88A74();
  v5[30] = v8;
  v5[31] = *(_QWORD *)(v8 - 8);
  v5[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA5546C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 16))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 216));
  sub_23B97D0C8(&qword_256A596E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5168], MEMORY[0x24BEE5178]);
  sub_23BB8AAD8();
  v2 = *(uint64_t **)(v1 + 16);
  *(_QWORD *)(v0 + 264) = v2;
  v3 = *v2;
  *(_DWORD *)(v0 + 304) = *(_DWORD *)(v3 + 48);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(*MEMORY[0x24BEE27A8] + v3 + 16);
  return swift_task_switch();
}

void sub_23BA55524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  char *v5;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = v1 + *(_QWORD *)(v0 + 272);
  v4 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23BA5584C;
  swift_continuation_init();
  os_unfair_lock_lock(v4);
  sub_23B989EFC(v3, v2, &qword_256A5E8B0);
  v5 = (char *)&loc_23BA555B8 + *((int *)qword_23BA55830 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BA555C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(uint64_t **)(v1 + 208);
  v4 = *(_QWORD *)(v1 + 184);
  v3 = *(_QWORD *)(v1 + 192);
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 264) + *(_QWORD *)(v1 + 272));
  v22 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B8);
  v7 = (char *)v2 + *(int *)(v6 + 48);
  v23 = *(uint64_t *)((char *)v2 + *(int *)(v6 + 64));
  v8 = *(int *)(v4 + 48);
  v9 = (_QWORD *)(v3 + v8);
  v10 = *(int *)(v4 + 64);
  v11 = v3 + v10;
  v21 = v3 + v10;
  v12 = (uint64_t)&v7[v8];
  v13 = (uint64_t)&v7[v10];
  LOBYTE(v8) = v7[16];
  LOBYTE(v10) = v7[17];
  *(_OWORD *)v3 = *(_OWORD *)v7;
  *(_BYTE *)(v3 + 16) = v8;
  *(_BYTE *)(v3 + 17) = v10;
  sub_23B990D24(v12, (uint64_t)v9, &qword_256A5E8C0);
  sub_23B990D24(v13, v11, &qword_256A5E8C0);
  sub_23B989D60((uint64_t)v5, &qword_256A5E8B0);
  swift_storeEnumTagMultiPayload();
  *v9 = v0;
  sub_23B989D60((uint64_t)v5, &qword_256A5E8B0);
  v14 = (char *)v5 + *(int *)(v6 + 48);
  v15 = *(int *)(v6 + 64);
  *v5 = v22;
  v16 = (uint64_t)&v14[*(int *)(v4 + 48)];
  v17 = (uint64_t)&v14[*(int *)(v4 + 64)];
  v18 = *(_BYTE *)(v3 + 16);
  v19 = *(_BYTE *)(v3 + 17);
  *(_OWORD *)v14 = *(_OWORD *)v3;
  v14[16] = v18;
  v14[17] = v19;
  sub_23B990D24((uint64_t)v9, v16, &qword_256A5E8C0);
  sub_23B990D24(v21, v17, &qword_256A5E8C0);
  *(_QWORD *)((char *)v5 + v15) = v23;
  swift_storeEnumTagMultiPayload();
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v1 + 264) + ((*(unsigned int *)(v1 + 304) + 3) & 0x1FFFFFFFCLL)));
  return swift_continuation_await();
}

uint64_t sub_23BA5584C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[35] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_23B97D0C8(&qword_256A59720, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5158], MEMORY[0x24BEE5160]);
    v4 = (_QWORD *)swift_task_alloc();
    v1[36] = v4;
    *v4 = v1;
    v4[1] = sub_23BA55924;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23BA55924()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA55988()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA55A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  v5 = *(unsigned int *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 264);
  if (v4 == 1)
  {
    v7 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    sub_23B989D60(v3, &qword_256A59710);
    os_unfair_lock_lock(v7);
    sub_23BA5014C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    os_unfair_lock_unlock(v7);
    if ((~v9 & 0xF000000000000007) != 0)
    {
      if (v9 < 0)
      {
        v35 = v9 & 0x7FFFFFFFFFFFFFFFLL;
        v36 = *(_QWORD *)(v13 + 16);
        if (v36)
        {
          v42 = v9 & 0x7FFFFFFFFFFFFFFFLL;
          v45 = v9;
          sub_23BB8A9B8();
          sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
          swift_retain();
          swift_bridgeObjectRetain();
          v37 = 0;
          do
          {
            ++v37;
            v38 = swift_allocError();
            sub_23BB8A6AC();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
            swift_allocError();
            *v39 = v38;
            swift_continuation_throwingResumeWithError();
          }
          while (v36 != v37);
          swift_bridgeObjectRelease();
          v35 = v42;
          v9 = v45;
        }
        else
        {
          swift_retain();
        }
        v40 = *(_QWORD *)(v0 + 112);
        sub_23BB8AA78();
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
        swift_storeEnumTagMultiPayload();
        sub_23B990D24(v40, *(_QWORD *)(*(_QWORD *)(v35 + 64) + 40), &qword_256A5E8D0);
        swift_continuation_resume();
      }
      else
      {
        v14 = *(_QWORD *)(v11 + 16);
        if (v14)
        {
          sub_23BB8A9B8();
          sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
          v43 = v9;
          swift_retain();
          swift_bridgeObjectRetain();
          v15 = 0;
          do
          {
            ++v15;
            v16 = swift_allocError();
            sub_23BB8A6AC();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
            swift_allocError();
            *v17 = v16;
            swift_continuation_throwingResumeWithError();
          }
          while (v14 != v15);
          swift_bridgeObjectRelease();
          v9 = v43;
        }
        else
        {
          swift_retain();
        }
        sub_23BB8AA78();
      }
      swift_release();
      sub_23B9F532C(v9);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 128);
    v44 = *(_QWORD *)(v0 + 120);
    v22 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v18, v3, v2);
    os_unfair_lock_lock(v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v19, v18, v2);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v23(v19, 0, 1, v2);
    v23(v20, 1, 1, v2);
    sub_23BA4ED4C(0, 1, v19, v20, v21);
    sub_23B989D60(v20, &qword_256A59710);
    sub_23B989D60(v19, &qword_256A59710);
    sub_23B989EFC(v21, v44, &qword_256A5E950);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E958);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v44, 1, v24) != 1)
    {
      v25 = *(_QWORD *)(v0 + 112);
      v26 = *(uint64_t **)(v0 + 120);
      v27 = *(_QWORD *)(v0 + 104);
      v28 = *v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8E8);
      sub_23B990D24((uint64_t)v26 + *(int *)(v29 + 48), v25, &qword_256A5E8D0);
      sub_23B989EFC(v25, v27, &qword_256A5E8D0);
      sub_23B990D24(v27, *(_QWORD *)(*(_QWORD *)(v28 + 64) + 40), &qword_256A5E8D0);
      swift_continuation_resume();
      sub_23B989D60(v25, &qword_256A5E8D0);
    }
    v31 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 264) + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
    sub_23B989D60(*(_QWORD *)(v0 + 128), &qword_256A5E950);
    os_unfair_lock_unlock(v33);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    return swift_task_switch();
  }
}

uint64_t sub_23BA56028()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA56114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[10] = a4;
  v5[11] = a5;
  v5[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8D0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E950);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v6 = sub_23BB88A98();
  v5[20] = v6;
  v5[21] = *(_QWORD *)(v6 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8A8);
  v5[24] = swift_task_alloc();
  v5[25] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B0);
  v5[26] = swift_task_alloc();
  v7 = sub_23BB88A80();
  v5[27] = v7;
  v5[28] = *(_QWORD *)(v7 - 8);
  v5[29] = swift_task_alloc();
  v8 = sub_23BB88A74();
  v5[30] = v8;
  v5[31] = *(_QWORD *)(v8 - 8);
  v5[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA562C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 16))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 216));
  sub_23B97D0C8(&qword_256A596E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5168], MEMORY[0x24BEE5178]);
  sub_23BB8AAD8();
  v2 = *(uint64_t **)(v1 + 16);
  *(_QWORD *)(v0 + 264) = v2;
  v3 = *v2;
  *(_DWORD *)(v0 + 304) = *(_DWORD *)(v3 + 48);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(*MEMORY[0x24BEE27A8] + v3 + 16);
  return swift_task_switch();
}

void sub_23BA56378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  char *v5;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = v1 + *(_QWORD *)(v0 + 272);
  v4 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23BA56694;
  swift_continuation_init();
  os_unfair_lock_lock(v4);
  sub_23B989EFC(v3, v2, &qword_256A5E8B0);
  v5 = (char *)&loc_23BA5640C + *((int *)qword_23BA56678 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BA5641C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(uint64_t **)(v1 + 208);
  v4 = *(_QWORD *)(v1 + 184);
  v3 = *(_QWORD *)(v1 + 192);
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 264) + *(_QWORD *)(v1 + 272));
  v22 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8B8);
  v7 = (char *)v2 + *(int *)(v6 + 48);
  v23 = *(uint64_t *)((char *)v2 + *(int *)(v6 + 64));
  v8 = *(int *)(v4 + 48);
  v9 = v3 + v8;
  v21 = v3 + v8;
  v10 = *(int *)(v4 + 64);
  v11 = (_QWORD *)(v3 + v10);
  v12 = (uint64_t)&v7[v8];
  v13 = (uint64_t)&v7[v10];
  LOBYTE(v8) = v7[16];
  LOBYTE(v10) = v7[17];
  *(_OWORD *)v3 = *(_OWORD *)v7;
  *(_BYTE *)(v3 + 16) = v8;
  *(_BYTE *)(v3 + 17) = v10;
  sub_23B990D24(v12, v9, &qword_256A5E8C0);
  sub_23B990D24(v13, (uint64_t)v11, &qword_256A5E8C0);
  sub_23B989D60((uint64_t)v5, &qword_256A5E8B0);
  swift_storeEnumTagMultiPayload();
  *v11 = v0;
  sub_23B989D60((uint64_t)v5, &qword_256A5E8B0);
  v14 = (char *)v5 + *(int *)(v6 + 48);
  v15 = *(int *)(v6 + 64);
  *v5 = v22;
  v16 = (uint64_t)&v14[*(int *)(v4 + 48)];
  v17 = (uint64_t)&v14[*(int *)(v4 + 64)];
  v18 = *(_BYTE *)(v3 + 16);
  v19 = *(_BYTE *)(v3 + 17);
  *(_OWORD *)v14 = *(_OWORD *)v3;
  v14[16] = v18;
  v14[17] = v19;
  sub_23B990D24(v21, v16, &qword_256A5E8C0);
  sub_23B990D24((uint64_t)v11, v17, &qword_256A5E8C0);
  *(_QWORD *)((char *)v5 + v15) = v23;
  swift_storeEnumTagMultiPayload();
  os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v1 + 264) + ((*(unsigned int *)(v1 + 304) + 3) & 0x1FFFFFFFCLL)));
  return swift_continuation_await();
}

uint64_t sub_23BA56694()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[35] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_23B97D0C8(&qword_256A59720, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5158], MEMORY[0x24BEE5160]);
    v4 = (_QWORD *)swift_task_alloc();
    v1[36] = v4;
    *v4 = v1;
    v4[1] = sub_23BA5676C;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23BA5676C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA567D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2);
  v5 = *(unsigned int *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 264);
  if (v4 == 1)
  {
    v7 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    sub_23B989D60(v3, &qword_256A59710);
    os_unfair_lock_lock(v7);
    sub_23BA5014C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    os_unfair_lock_unlock(v7);
    if ((~v9 & 0xF000000000000007) != 0)
    {
      if (v9 < 0)
      {
        v35 = v9 & 0x7FFFFFFFFFFFFFFFLL;
        v36 = *(_QWORD *)(v13 + 16);
        if (v36)
        {
          v42 = v9 & 0x7FFFFFFFFFFFFFFFLL;
          v45 = v9;
          sub_23BB8A9B8();
          sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
          swift_retain();
          swift_bridgeObjectRetain();
          v37 = 0;
          do
          {
            ++v37;
            v38 = swift_allocError();
            sub_23BB8A6AC();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
            swift_allocError();
            *v39 = v38;
            swift_continuation_throwingResumeWithError();
          }
          while (v36 != v37);
          swift_bridgeObjectRelease();
          v35 = v42;
          v9 = v45;
        }
        else
        {
          swift_retain();
        }
        v40 = *(_QWORD *)(v0 + 112);
        sub_23BB8AA78();
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
        swift_storeEnumTagMultiPayload();
        sub_23B990D24(v40, *(_QWORD *)(*(_QWORD *)(v35 + 64) + 40), &qword_256A5E8D0);
        swift_continuation_resume();
      }
      else
      {
        v14 = *(_QWORD *)(v11 + 16);
        if (v14)
        {
          sub_23BB8A9B8();
          sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
          v43 = v9;
          swift_retain();
          swift_bridgeObjectRetain();
          v15 = 0;
          do
          {
            ++v15;
            v16 = swift_allocError();
            sub_23BB8A6AC();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
            swift_allocError();
            *v17 = v16;
            swift_continuation_throwingResumeWithError();
          }
          while (v14 != v15);
          swift_bridgeObjectRelease();
          v9 = v43;
        }
        else
        {
          swift_retain();
        }
        sub_23BB8AA78();
      }
      swift_release();
      sub_23B9F532C(v9);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 144);
    v21 = *(_QWORD *)(v0 + 128);
    v44 = *(_QWORD *)(v0 + 120);
    v22 = (os_unfair_lock_s *)(v6 + ((v5 + 3) & 0x1FFFFFFFCLL));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v18, v3, v2);
    os_unfair_lock_lock(v22);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v23(v19, 1, 1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v20, v18, v2);
    v23(v20, 0, 1, v2);
    sub_23BA4ED4C(0, 1, v19, v20, v21);
    sub_23B989D60(v20, &qword_256A59710);
    sub_23B989D60(v19, &qword_256A59710);
    sub_23B989EFC(v21, v44, &qword_256A5E950);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E958);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v44, 1, v24) != 1)
    {
      v25 = *(_QWORD *)(v0 + 112);
      v26 = *(uint64_t **)(v0 + 120);
      v27 = *(_QWORD *)(v0 + 104);
      v28 = *v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E8E8);
      sub_23B990D24((uint64_t)v26 + *(int *)(v29 + 48), v25, &qword_256A5E8D0);
      sub_23B989EFC(v25, v27, &qword_256A5E8D0);
      sub_23B990D24(v27, *(_QWORD *)(*(_QWORD *)(v28 + 64) + 40), &qword_256A5E8D0);
      swift_continuation_resume();
      sub_23B989D60(v25, &qword_256A5E8D0);
    }
    v31 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 264) + ((*(unsigned int *)(v0 + 304) + 3) & 0x1FFFFFFFCLL));
    sub_23B989D60(*(_QWORD *)(v0 + 128), &qword_256A5E950);
    os_unfair_lock_unlock(v33);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    return swift_task_switch();
  }
}

uint64_t sub_23BA56D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v18 - v9;
  sub_23B989EFC(v1, (uint64_t)&v18 - v9, &qword_256A5EB80);
  if (swift_getEnumCaseMultiPayload())
    __asm { BR              X10 }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB88);
  v13 = &v10[*(int *)(v12 + 48)];
  v14 = (uint64_t)&v10[*(int *)(v12 + 64)];
  swift_retain();
  v15 = *(_QWORD *)sub_23BB89158();
  *v6 = a1;
  v6[1] = v15;
  v6[2] = MEMORY[0x24BEE4AF8];
  v6[3] = 0;
  v6[4] = 0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_23BA7FA40((uint64_t)v6, v1, &qword_256A5EB80);
  sub_23B989D60(v14, &qword_256A5EB90);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  return sub_23B989D60((uint64_t)v10, &qword_256A5EBA0);
}

void sub_23BA56F00()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __break(1u);
}

void sub_23BA56F20()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 8);
  swift_release();

  __break(1u);
  JUMPOUT(0x23BA56F34);
}

void sub_23BA56F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23B989EFC(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5EB80);
  v4 = (char *)&loc_23BA56FCC + dword_23BA5715C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BA56FDC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;

  v4 = *v2;
  v3 = v2[1];
  v5 = (_QWORD *)v2[2];
  if (v2[4])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = v2[3];
    sub_23B989D60((uint64_t)v1, &qword_256A5EB80);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v5 = sub_23BB63864(0, v5[2] + 1, 1, v5);
    v8 = v5[2];
    v9 = v5[3];
    v10 = v8 + 1;
    if (v8 >= v9 >> 1)
    {
      v11 = v5;
      v12 = v5[2];
      v13 = sub_23BB63864((_QWORD *)(v9 > 1), v8 + 1, 1, v11);
      v8 = v12;
      v5 = v13;
    }
    v5[2] = v10;
    v5[v8 + 4] = v0;
    sub_23B989D60((uint64_t)v1, &qword_256A5EB80);
    *v1 = v4;
    v1[1] = v3;
    v1[2] = v5;
    v1[3] = v7;
    v1[4] = 0;
    swift_storeEnumTagMultiPayload();
    return 0;
  }
  return v0;
}

void sub_23BA57170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23B989EFC(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_256A5EB80);
  v4 = (char *)&loc_23BA57200 + dword_23BA5757C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BA57210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB88);
  v3 = v1 + *(int *)(v2 + 48);
  v4 = v1 + *(int *)(v2 + 64);
  sub_23B990D24(v1, v0, &qword_256A5EBA0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBB0);
  v6 = v0 + *(int *)(v5 + 48);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v3, v7);
  sub_23B990D24(v4, v0 + *(int *)(v5 + 64), &qword_256A5EB90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA8);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23BA57590(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23B989EFC((uint64_t)v1, (uint64_t)v6, &qword_256A5EB80);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
    __asm { BR              X10 }
  v9 = *v6;
  v8 = v6[1];
  v10 = v6[2];
  if (v6[4])
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x23BA57724);
  }
  v11 = v6[3];
  sub_23B989D60((uint64_t)v1, &qword_256A5EB80);
  *v1 = v9;
  v1[1] = v8;
  v1[2] = MEMORY[0x24BEE4AF8];
  v1[3] = v11;
  v1[4] = a1;
  swift_storeEnumTagMultiPayload();
  return v10;
}

uint64_t sub_23BA57738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a1;
  v39 = a3;
  v34 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB90);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0);
  v40 = *(_QWORD *)(v15 - 8);
  v41 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC20);
  MEMORY[0x24BDAC7A8](v38, v19);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v35 = (uint64_t)&v34 - v24;
  v25 = (_DWORD *)swift_slowAlloc();
  *v25 = 0;
  *(_QWORD *)(v3 + 16) = v25;
  sub_23B989EFC(a1, (uint64_t)v18, &qword_256A5EBA0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  v26 = v39;
  sub_23B989EFC(v39, (uint64_t)v9, &qword_256A5EB90);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB88);
  v28 = &v21[*(int *)(v27 + 48)];
  v29 = (uint64_t)&v21[*(int *)(v27 + 64)];
  sub_23B990D24((uint64_t)v18, (uint64_t)v21, &qword_256A5EBA0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v28, v14, v10);
  sub_23B989EFC((uint64_t)v9, v29, &qword_256A5EB90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  swift_storeEnumTagMultiPayload();
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v41);
  sub_23B989D60((uint64_t)v9, &qword_256A5EB90);
  v30 = 2;
  if ((_DWORD)v14 != 1)
    v30 = 3;
  *(_QWORD *)&v21[*(int *)(v38 + 68)] = v30;
  v31 = v35;
  sub_23B990D24((uint64_t)v21, v35, &qword_256A5EC20);
  sub_23B989D60(v26, &qword_256A5EB90);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v34, v10);
  sub_23B989D60(v36, &qword_256A5EBA0);
  v32 = v37;
  sub_23B990D24(v31, v37 + *(_QWORD *)(*(_QWORD *)v37 + 136), &qword_256A5EC20);
  return v32;
}

uint64_t sub_23BA57A00(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[40] = a1;
  v2[41] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v2[42] = swift_task_alloc();
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB90) - 8);
  v2[43] = v3;
  v2[44] = *(_QWORD *)(v3 + 64);
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  v2[47] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[48] = v5;
  v2[49] = *(_QWORD *)(v5 + 64);
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0) - 8);
  v2[52] = v6;
  v2[53] = *(_QWORD *)(v6 + 64);
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA8);
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  return swift_task_switch();
}

void sub_23BA57B4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v2 = v0[57];
  v1 = v0[58];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0[41] + 16));
  swift_beginAccess();
  sub_23BA57170();
  swift_endAccess();
  sub_23B989EFC(v1, v2, &qword_256A5EBA8);
  v3 = (char *)sub_23BA57C00 + 4 * byte_23BB919E8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BA57C00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v0[57];
  v17 = v0[55];
  v3 = v0[51];
  v19 = v0[54];
  v20 = v0[50];
  v4 = v0[48];
  v25 = v0[53];
  v26 = v0[49];
  v6 = v0[46];
  v5 = v0[47];
  v23 = v0[52];
  v21 = v0[45];
  v22 = v0[43];
  *(_QWORD *)(v1 - 88) = v0[42];
  v27 = v0[41];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBB0);
  v8 = v2 + *(int *)(v7 + 48);
  v9 = v2 + *(int *)(v7 + 64);
  sub_23B990D24(v2, v17, &qword_256A5EBA0);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v18 = v5;
  v24(v3, v8, v5);
  sub_23B990D24(v9, v6, &qword_256A5EB90);
  swift_beginAccess();
  v10 = sub_23BB8AA18();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(*(_QWORD *)(v1 - 88), 1, 1, v10);
  sub_23B989EFC(v17, v19, &qword_256A5EBA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v20, v3, v5);
  sub_23B989EFC(v6, v21, &qword_256A5EB90);
  v11 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v12 = (v25 + *(unsigned __int8 *)(v4 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = (v26 + *(unsigned __int8 *)(v22 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v27;
  sub_23B990D24(v19, (uint64_t)v14 + v11, &qword_256A5EBA0);
  v24((uint64_t)v14 + v12, v20, v18);
  sub_23B990D24(v21, (uint64_t)v14 + v13, &qword_256A5EB90);
  swift_retain();
  v15 = sub_23B989F54(*(_QWORD *)(v1 - 88), (uint64_t)&unk_256A5EBC8, (uint64_t)v14);
  sub_23BA56D84(v15);
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA580EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[41];
  v0[7] = v0 + 25;
  v0[2] = v0;
  v0[3] = sub_23BA58144;
  v2 = swift_continuation_init();
  sub_23BA58604(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_23BA58144()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  __int128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 472) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 320);
    v4 = *(_BYTE *)(v1 + 248);
    v5 = *(_OWORD *)(v1 + 216);
    v6 = *(_OWORD *)(v1 + 232);
    *(_OWORD *)v3 = *(_OWORD *)(v1 + 200);
    *(_OWORD *)(v3 + 16) = v5;
    *(_OWORD *)(v3 + 32) = v6;
    *(_BYTE *)(v3 + 48) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23BA581D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 384);
  sub_23B989D60(*(_QWORD *)(v0 + 368), &qword_256A5EB90);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_23B989D60(v2, &qword_256A5EBA0);
  sub_23B989D60(v1, &qword_256A5EBA8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA582BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  sub_23B989D60(*(_QWORD *)(v0 + 368), &qword_256A5EB90);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_23B989D60(v1, &qword_256A5EBA0);
  sub_23B989D60(*(_QWORD *)(v0 + 464), &qword_256A5EBA8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA583B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[41];
  v0[15] = v0 + 18;
  v0[10] = v0;
  v0[11] = sub_23BA58410;
  v2 = swift_continuation_init();
  sub_23BA58604(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_23BA58410()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  __int128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 480) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 320);
    v4 = *(_BYTE *)(v1 + 192);
    v5 = *(_OWORD *)(v1 + 160);
    v6 = *(_OWORD *)(v1 + 176);
    *(_OWORD *)v3 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)(v3 + 16) = v5;
    *(_OWORD *)(v3 + 32) = v6;
    *(_BYTE *)(v3 + 48) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23BA58498()
{
  uint64_t v0;

  sub_23B989D60(*(_QWORD *)(v0 + 464), &qword_256A5EBA8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA58544()
{
  uint64_t v0;

  sub_23B989D60(*(_QWORD *)(v0 + 464), &qword_256A5EBA8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA58604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t i;

  swift_beginAccess();
  v4 = sub_23BA57590(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v5; ++i)
      swift_continuation_throwingResume();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_23BA586A4(uint64_t a1)
{
  os_unfair_lock_s *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  char v22;

  v2 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v2);
  sub_23BA5899C(a1);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  os_unfair_lock_unlock(v2);
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      v9 = *(_QWORD *)(v6 + 16);
      if (v9)
      {
        v17 = v4;
        sub_23BB8A9B8();
        sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
        swift_retain();
        swift_bridgeObjectRetain();
        v10 = 0;
        do
        {
          ++v10;
          v11 = swift_allocError();
          sub_23BB8A6AC();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
          swift_allocError();
          *v12 = v11;
          swift_continuation_throwingResumeWithError();
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        v4 = v17;
      }
      else
      {
        swift_retain();
      }
      sub_23BB8AA78();
      sub_23B9F46F8(v4);
      swift_release();
    }
  }
  else
  {
    v13 = *(_QWORD *)(v8 + 16);
    if (v13)
    {
      v18 = v4;
      sub_23BB8A9B8();
      sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_retain();
      swift_bridgeObjectRetain();
      v14 = 0;
      do
      {
        ++v14;
        v15 = swift_allocError();
        sub_23BB8A6AC();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
        swift_allocError();
        *v16 = v15;
        swift_continuation_throwingResumeWithError();
      }
      while (v13 != v14);
      swift_bridgeObjectRelease();
      v4 = v18;
    }
    else
    {
      swift_retain();
    }
    sub_23BB8AA78();
    memset(v19, 0, sizeof(v19));
    v20 = 0;
    v21 = 2;
    v22 = 0;
    sub_23B990D24((uint64_t)v19, *(_QWORD *)(*(_QWORD *)(v4 + 64) + 40), &qword_256A5EB70);
    swift_continuation_throwingResume();
    swift_release();
    sub_23B9F46F8(v4);
  }
}

void sub_23BA5899C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 136);
  swift_beginAccess();
  sub_23B989EFC(v6, (uint64_t)v5, &qword_256A5EB80);
  v7 = (char *)&loc_23BA58A44 + *((int *)qword_23BA58B88 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

unint64_t sub_23BA58A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB88);
  v3 = v1 + *(int *)(v2 + 48);
  v4 = v1 + *(int *)(v2 + 64);
  sub_23B989D60(v0, &qword_256A5EB80);
  swift_storeEnumTagMultiPayload();
  sub_23B989D60(v4, &qword_256A5EB90);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  sub_23B989D60(v1, &qword_256A5EBA0);
  return 0x8000000000000000;
}

void sub_23BA58B40()
{
  uint64_t v0;

  swift_release();
  sub_23B989D60(v0, &qword_256A5EB80);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23BA58B18);
}

uint64_t sub_23BA58B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23BA58BBC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_23B9E0288;
  return sub_23BB8B030();
}

uint64_t sub_23BA58C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[5] = a2;
  v6[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  v6[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB90);
  v6[12] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  v6[13] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 + 64);
  v6[16] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = *(_QWORD *)(v10 + 64);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v6[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA58D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v29 = v3;
  v32 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v27 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 104);
  v31 = *(_QWORD *)(v0 + 96);
  v30 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 48);
  v25 = *(_QWORD *)(v0 + 64);
  v8 = sub_23BB8AA18();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v2, 1, 1, v8);
  sub_23B989EFC(v6, v1, &qword_256A5EBA0);
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  sub_23B990D24(v1, v11 + v10, &qword_256A5EBA0);
  v24 = (v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v11 + v24) = v7;
  swift_retain();
  sub_23B9DA570(v2, (uint64_t)&unk_256A5EBE8, v11);
  sub_23B989D60(v2, (uint64_t *)&unk_256A613D0);
  v23 = v8;
  v9(v2, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v27, v25, v26);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v13 + v12, v27, v26);
  *(_QWORD *)(v13 + ((v28 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_retain();
  sub_23B9DA570(v2, (uint64_t)&unk_256A5EBF8, v13);
  sub_23B989D60(v2, (uint64_t *)&unk_256A613D0);
  sub_23B989EFC(v30, v31, &qword_256A5EB90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v32) == 1)
  {
    v14 = *(_QWORD *)(v0 + 96);
    v15 = &qword_256A5EB90;
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 48);
    sub_23B990D24(*(_QWORD *)(v0 + 96), v18, &qword_256A5EBA0);
    v9(v16, 1, 1, v23);
    sub_23B989EFC(v18, v17, &qword_256A5EBA0);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = 0;
    *(_QWORD *)(v20 + 24) = 0;
    sub_23B990D24(v17, v20 + v10, &qword_256A5EBA0);
    *(_QWORD *)(v20 + v24) = v19;
    swift_retain();
    sub_23B9DA570(v16, (uint64_t)&unk_256A5EC00, v20);
    sub_23B989D60(v16, (uint64_t *)&unk_256A613D0);
    v14 = v18;
    v15 = &qword_256A5EBA0;
  }
  sub_23B989D60(v14, v15);
  *(_QWORD *)(v0 + 184) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 192) = *(_QWORD *)(**(_QWORD **)(v0 + 48) + 136);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v22 = v0;
    v22[1] = sub_23BA59164;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23BA59164()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA591C8()
{
  uint64_t v0;
  _QWORD *v2;

  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v2 = v0;
    v2[1] = sub_23BA59164;
    return sub_23BB8AAB4();
  }
}

void sub_23BA592CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v1 = v0[11];
  v2 = v0[6];
  v3 = v2 + v0[24];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  swift_beginAccess();
  sub_23B989EFC(v3, v1, &qword_256A5EB80);
  v4 = (char *)&loc_23BA59354 + *((int *)qword_23BA59808 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BA5936C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  int v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  void *v28;
  _QWORD *v30;
  void *v31;
  int v32;
  int v33;

  v2 = *(uint64_t **)(v0 + 88);
  v4 = *v2;
  v3 = v2[1];
  v5 = (_QWORD *)v2[2];
  v6 = v2[4];
  if (v6)
  {
    v32 = v6;
    v7 = *(_QWORD *)(v3 + 24);
    swift_release();
    if (v7)
    {
      __break(1u);
      JUMPOUT(0x23BA59800);
    }
    v8 = *(void **)(v0 + 208);
    sub_23B989D60(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 192), &qword_256A5EB80);
    swift_storeEnumTagMultiPayload();
    v9 = v8;
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    v10 = v5[2];
    v11 = *(void **)(v0 + 208);
    if (v10)
    {
      v31 = v8;
      v12 = v11;
      sub_23BB8A9B8();
      sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_retain();
      swift_bridgeObjectRetain();
      v13 = 0;
      do
      {
        ++v13;
        v14 = swift_allocError();
        sub_23BB8A6AC();
        swift_allocError();
        *v15 = v14;
        swift_continuation_throwingResumeWithError();
      }
      while (v10 != v13);
      swift_bridgeObjectRelease();
      v8 = v31;
    }
    else
    {
      v24 = v11;
      swift_retain();
    }
    v25 = *(_QWORD *)(v0 + 208);
    sub_23BB8AA78();
    swift_allocError();
    *v26 = v25;
    v23 = v32;
    swift_continuation_throwingResumeWithError();
    swift_release();
    v27 = v4 | 0x4000000000000000;
  }
  else
  {
    v33 = v4;
    v16 = *(void **)(v0 + 208);
    v17 = (_QWORD *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 192));
    sub_23B989D60((uint64_t)v17, &qword_256A5EB80);
    *v17 = v3;
    v17[1] = v16;
    swift_storeEnumTagMultiPayload();
    v18 = v16;
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    v19 = v5[2];
    if (v19)
    {
      sub_23BB8A9B8();
      sub_23B97D0C8((unint64_t *)&qword_256A5E8A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
      swift_retain();
      swift_bridgeObjectRetain();
      v20 = 0;
      do
      {
        ++v20;
        v21 = swift_allocError();
        sub_23BB8A6AC();
        swift_allocError();
        *v22 = v21;
        swift_continuation_throwingResumeWithError();
      }
      while (v19 != v20);
      swift_bridgeObjectRelease();
      v23 = v33;
    }
    else
    {
      v23 = v33;
      swift_retain();
    }
    v8 = v5;
    sub_23BB8AA78();
    swift_release();
    v27 = 0;
  }
  v28 = *(void **)(v0 + 208);
  sub_23BB8AACC();
  sub_23B9F49F0(v23, v8, v27);

  if ((sub_23BB8AAC0() & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5B820);
    *v30 = v0;
    v30[1] = sub_23BA59164;
    return sub_23BB8AAB4();
  }
}

uint64_t sub_23BA5981C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[38] = a4;
  v5[39] = a5;
  v5[40] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  v5[43] = v6;
  v5[44] = *(_QWORD *)(v6 - 8);
  v5[45] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC08);
  v5[46] = v7;
  v5[47] = *(_QWORD *)(v7 - 8);
  v5[48] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA598E4()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[39];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[44] + 16))(v0[45], v0[38], v0[43]);
  sub_23B996E1C(&qword_256A5EC10, &qword_256A5EB98, MEMORY[0x24BEE6F08]);
  sub_23BB8AAD8();
  v0[49] = v1[2];
  v0[50] = *(_QWORD *)(*v1 + 136);
  return swift_task_switch();
}

uint64_t sub_23BA59984()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = (os_unfair_lock_s *)v0[49];
  v0[2] = v0;
  v0[3] = sub_23BA59A7C;
  swift_continuation_init();
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  sub_23BA56F48();
  v3 = v2;
  swift_endAccess();
  os_unfair_lock_unlock(v1);
  if (v3 >> 62)
  {
    if (v3 >> 62 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
      swift_allocError();
      *v4 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return swift_continuation_await();
}

uint64_t sub_23BA59A7C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = (_QWORD *)*v0;
  v2 = v1[6];
  v1[51] = v2;
  if (v2)
  {
    swift_willThrow();
    return swift_task_switch();
  }
  else
  {
    sub_23B996E1C(&qword_256A5EC18, &qword_256A5EC08, MEMORY[0x24BEE6EE0]);
    v4 = (_QWORD *)swift_task_alloc();
    v1[52] = v4;
    *v4 = v1;
    v4[1] = sub_23BA59B58;
    return sub_23BB8A9C4();
  }
}

uint64_t sub_23BA59B58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA59BBC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA59C28()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;

  v1 = (os_unfair_lock_s *)v0[49];
  v2 = v0[39] + v0[50];
  if (v0[22] == 2)
  {
    v3 = v0[41];
    os_unfair_lock_lock(v1);
    sub_23B989EFC(v2, v3, &qword_256A5EB80);
    v4 = (char *)&loc_23BA59CA4 + *((int *)qword_23BA5A468 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  v5 = v0[42];
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  sub_23B989EFC(v2, v5, &qword_256A5EB80);
  v6 = (char *)&loc_23BA59DC0 + dword_23BA5A454[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23BA59DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  os_unfair_lock_s *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char v42;
  uint64_t v43;
  unint64_t v44;

  v2 = *(uint64_t **)(v0 + 336);
  v4 = *v2;
  v3 = (_QWORD *)v2[1];
  v6 = v2[2];
  v5 = v2[3];
  v7 = v2[4];
  if (!v7)
  {
    v34 = *v2;
    v35 = v2[2];
    v36 = v2[3];
    v16 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 400);
    *(_QWORD *)(v0 + 296) = v3;
    sub_23B989D60(v16, &qword_256A5EB80);
    swift_storeEnumTagMultiPayload();
    v17 = v3[3];
    v18 = v17 + 1;
    v19 = *(_QWORD *)(v1 - 80);
    if (__OFADD__(v17, 1))
    {
      __break(1u);
    }
    else
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (v3[2] < v18 || (isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23BA7A02C(v18);
        v3 = (_QWORD *)*v37;
      }
      v22 = v3[3];
      v21 = v3[4];
      v25 = __OFADD__(v21, v22);
      v23 = v21 + v22;
      if (!v25)
      {
        if (v22 < 0)
        {
          if ((v23 & 0x8000000000000000) == 0 || (v27 = v3[2], v25 = __OFADD__(v23, v27), v23 += v27, !v25))
          {
LABEL_16:
            v28 = &v3[7 * v23];
            v28[5] = v43;
            v28[6] = v40;
            v28[7] = v41;
            v28[8] = v19;
            v28[9] = v39;
            v28[10] = v44;
            *((_BYTE *)v28 + 88) = v42;
            v29 = v3[3];
            v25 = __OFADD__(v29, 1);
            v30 = v29 + 1;
            if (!v25)
            {
              v31 = (_QWORD *)(*(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 400));
              v3[3] = v30;
              sub_23BA7FDA0(v43, v40, v41, v19, v39, v44);
              sub_23B989D60((uint64_t)v31, &qword_256A5EB80);
              *v31 = v34;
              v31[1] = v3;
              v31[2] = v35;
              v31[3] = v36;
              v31[4] = 0;
              swift_storeEnumTagMultiPayload();
              v7 = 0;
              v11 = 0;
              v13 = 0;
              v12 = 0;
              v8 = 0;
              v14 = 0;
              v10 = 0;
              v15 = 0;
              goto LABEL_18;
            }
            goto LABEL_24;
          }
        }
        else
        {
          v24 = v3[2];
          v25 = __OFSUB__(v23, v24);
          v26 = v23 - v24;
          if (v26 < 0 != v25)
            goto LABEL_16;
          v23 = v26;
          if (!v25)
            goto LABEL_16;
        }
LABEL_25:
        __break(1u);
        JUMPOUT(0x23BA5A0C0);
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = *(_QWORD *)(v1 - 80);
  if (v3[3])
  {
    __break(1u);
    JUMPOUT(0x23BA5A42CLL);
  }
  v9 = (_QWORD *)(*(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 400));
  sub_23B989D60((uint64_t)v9, &qword_256A5EB80);
  *v9 = v4;
  v9[1] = v3;
  v9[2] = v6;
  v9[3] = v5;
  v9[4] = 0;
  swift_storeEnumTagMultiPayload();
  v11 = v43;
  v10 = v44;
  v13 = v40;
  v12 = v41;
  v14 = v39;
  v15 = v42;
  sub_23BA7F770(v43, v40, v41, v8, v39, v44);
LABEL_18:
  v32 = *(os_unfair_lock_s **)(v0 + 392);
  swift_endAccess();
  os_unfair_lock_unlock(v32);
  if (v7)
  {
    *(_QWORD *)(v0 + 192) = v11;
    *(_QWORD *)(v0 + 200) = v13;
    *(_QWORD *)(v0 + 208) = v12;
    *(_QWORD *)(v0 + 216) = v8;
    *(_QWORD *)(v0 + 224) = v14;
    *(_QWORD *)(v0 + 232) = v10;
    *(_BYTE *)(v0 + 240) = v15;
    sub_23B990D24(v38, *(_QWORD *)(*(_QWORD *)(v7 + 64) + 40), &qword_256A5EB70);
    swift_continuation_throwingResume();
  }
  sub_23BA7F7A0(v43, v40, v41, *(_QWORD *)(v1 - 80), v39, v44);
  return swift_task_switch();
}

void sub_23BA59E74()
{
  uint64_t v0;

  sub_23B989D60(*(_QWORD *)(v0 + 328), &qword_256A5EB80);
  JUMPOUT(0x23BA5A0ECLL);
}

void sub_23BA59E88()
{
  uint64_t v0;

  sub_23B989D60(*(_QWORD *)(v0 + 336), &qword_256A5EB80);
  JUMPOUT(0x23BA5A2C0);
}

uint64_t sub_23BA5A47C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 384), *(_QWORD *)(v0 + 368));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA5A4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[38] = a4;
  v5[39] = a5;
  v5[40] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB80);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBC0);
  v5[43] = v6;
  v5[44] = *(_QWORD *)(v6 - 8);
  v5[45] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC38);
  v5[46] = v7;
  v5[47] = *(_QWORD *)(v7 - 8);
  v5[48] = swift_task_alloc();
  v5[49] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0);
  v5[50] = swift_task_alloc();
  v5[51] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC40);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA5A610()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v1 = v0[52];
  v2 = v0[50];
  v14 = v0[51];
  v3 = v0[48];
  v4 = v0[49];
  v6 = v0[46];
  v5 = v0[47];
  v8 = v0[44];
  v7 = v0[45];
  v9 = v0[43];
  v15 = (_QWORD *)v0[39];
  v16 = v0[53];
  sub_23B989EFC(v0[38], v2, &qword_256A5EBA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v2, v9);
  sub_23B996E1C(&qword_256A5EC48, &qword_256A5EBC0, MEMORY[0x24BEE6F08]);
  sub_23BB8AAD8();
  v10 = *(_QWORD *)(v2 + *(int *)(v4 + 52));
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v0[54] = (uint64_t)v11;
  v11(v1, 1, 1, v6);
  v12 = (uint64_t *)(v1 + *(int *)(v14 + 52));
  *v12 = 1;
  v12[1] = 0;
  swift_bridgeObjectRetain();
  sub_23B989D60(v1, &qword_256A5EC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v3, v6);
  v11(v1, 0, 1, v6);
  sub_23BA7FDB0(*v12);
  *v12 = v10;
  v12[1] = 0;
  sub_23B990D24(v1, v16, &qword_256A5EC40);
  sub_23B989D60(v2, &qword_256A5EBA0);
  v0[55] = v15[2];
  v0[56] = *(_QWORD *)(*v15 + 136);
  return swift_task_switch();
}

uint64_t sub_23BA5A798()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;

  v1 = (os_unfair_lock_s *)v0[55];
  v0[2] = v0;
  v0[3] = sub_23BA5A890;
  swift_continuation_init();
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  sub_23BA56F48();
  v3 = v2;
  swift_endAccess();
  os_unfair_lock_unlock(v1);
  if (v3 >> 62)
  {
    if (v3 >> 62 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
      swift_allocError();
      *v4 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      swift_continuation_throwingResumeWithError();
    }
  }
  else
  {
    swift_continuation_throwingResume();
  }
  return swift_continuation_await();
}

uint64_t sub_23BA5A890()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 456) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23BA5A8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 376) + 48))(v1, 1, v2))
  {
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 432);
    v4 = *(_QWORD *)(v0 + 408);
    sub_23B989D60(v1, &qword_256A5EC50);
    v3(v1, 1, 1, v2);
    v5 = (uint64_t *)(v1 + *(int *)(v4 + 52));
    if (*v5 != 1)
    {
      v6 = sub_23BB8AA90();
      v7 = *v5;
      if ((v6 & 1) == 0)
      {
        if (v7)
        {
          v8 = v5[1];
          v9 = *(_QWORD *)(v7 + 16);
          if (v8 != v9)
          {
            if (v8 < v9)
            {
              v15 = v8 + 1;
              v16 = (_QWORD *)(v7 + 56 * v8);
              v17 = v16[8];
              v18 = v16[9];
              v19 = (void *)v16[6];
              v20 = v16[7];
              v21 = v16[4];
              v22 = v16[5];
              v5[1] = v15;
              sub_23BA7F770(v21, v22, v19, v20, v17, v18);
              v23 = *(_QWORD *)(v0 + 336);
              v24 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 448);
              os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 440));
              swift_beginAccess();
              sub_23B989EFC(v24, v23, &qword_256A5EB80);
              v25 = (char *)&loc_23BA5ADEC + *((int *)qword_23BA5B268 + swift_getEnumCaseMultiPayload());
              __asm { BR              X10 }
            }
            __break(1u);
            JUMPOUT(0x23BA5B244);
          }
        }
      }
      swift_bridgeObjectRelease();
      *v5 = 0;
      v5[1] = 0;
    }
    v10 = *(_QWORD *)(v0 + 328);
    v11 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 448);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 440));
    sub_23B989EFC(v11, v10, &qword_256A5EB80);
    v12 = (char *)&loc_23BA5A9F0 + dword_23BA5B27C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23B996E1C(&qword_256A5EC58, &qword_256A5EC38, MEMORY[0x24BEE6EE0]);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v13;
  *v13 = v0;
  v13[1] = sub_23BA5B290;
  return sub_23BB8A9C4();
}

uint64_t sub_23BA5B290()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_23BA5B2F4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;

  if (*(_QWORD *)(v0 + 176) == 2)
  {
    v1 = *(_QWORD *)(v0 + 424);
    v2 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 432);
    v3 = *(_QWORD *)(v0 + 408);
    v4 = *(_QWORD *)(v0 + 368);
    sub_23B989D60(v1, &qword_256A5EC50);
    v2(v1, 1, 1, v4);
    v5 = (uint64_t *)(v1 + *(int *)(v3 + 52));
    if (*v5 == 1)
      goto LABEL_7;
    v6 = sub_23BB8AA90();
    v7 = *v5;
    if ((v6 & 1) != 0 || !v7 || (v8 = v5[1], v9 = *(_QWORD *)(v7 + 16), v8 == v9))
    {
      swift_bridgeObjectRelease();
      *v5 = 0;
      v5[1] = 0;
LABEL_7:
      v10 = *(_QWORD *)(v0 + 328);
      v11 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 448);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 440));
      sub_23B989EFC(v11, v10, &qword_256A5EB80);
      v12 = (char *)&loc_23BA5B3D8 + dword_23BA5BC1C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    if (v8 >= v9)
    {
      __break(1u);
      JUMPOUT(0x23BA5BBF4);
    }
    v16 = v8 + 1;
    v17 = (_QWORD *)(v7 + 56 * v8);
    v19 = v17[8];
    v18 = v17[9];
    v21 = (void *)v17[6];
    v20 = v17[7];
    v22 = v17[4];
    v23 = v17[5];
    v5[1] = v16;
    sub_23BA7F770(v22, v23, v21, v20, v19, v18);
  }
  v13 = *(_QWORD *)(v0 + 336);
  v14 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 448);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 440));
  swift_beginAccess();
  sub_23B989EFC(v14, v13, &qword_256A5EB80);
  v15 = (char *)&loc_23BA5B500 + *((int *)qword_23BA5BC08 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_23BA5BC30()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 368);
  sub_23B989D60(v1, &qword_256A5EC50);
  v2(v1, 1, 1, v4);
  v5 = (uint64_t *)(v1 + *(int *)(v3 + 52));
  sub_23BA7FDB0(*v5);
  *(_OWORD *)v5 = xmmword_23BB91DB0;
  swift_willThrow();
  sub_23B989D60(*(_QWORD *)(v0 + 424), &qword_256A5EC40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA5BD2C()
{
  uint64_t v0;

  sub_23B989D60(*(_QWORD *)(v0 + 424), &qword_256A5EC40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA5BDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB90);
  MEMORY[0x24BDAC7A8](v2, v3);
  v42 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB38);
  MEMORY[0x24BDAC7A8](v38, v8);
  v36 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB40);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBC0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0);
  v37 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC60);
  v25 = MEMORY[0x24BDAC7A8](v35, v24);
  v27 = (char *)&v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v14, v1, v10, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC30);
  sub_23B996E1C(&qword_256A5EC70, &qword_256A5EB40, MEMORY[0x24BEE6AA8]);
  sub_23BB8AF94();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v23, v19, v15);
  *(_QWORD *)&v23[*(int *)(v20 + 52)] = &unk_250CA99F0;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB48);
  sub_23B989EFC(v1 + *(int *)(v28 + 68), v36, &qword_256A5EB38);
  v29 = &v27[*(int *)(v35 + 52)];
  sub_23B996E1C(&qword_256A5EC80, &qword_256A5EB38, (uint64_t)&unk_23BB8EED8);
  sub_23BB8AF94();
  sub_23B990D24((uint64_t)v23, (uint64_t)v27, &qword_256A5EBA0);
  sub_23B989EFC((uint64_t)v27, (uint64_t)v23, &qword_256A5EBA0);
  v30 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v39, v29, v41);
  v31 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v42, 1, 1, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC88);
  swift_allocObject();
  v32 = sub_23BA57738((uint64_t)v23, v30, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC90);
  *(_QWORD *)(swift_allocObject() + 16) = v32;
  sub_23B989D60((uint64_t)v27, &qword_256A5EC60);
  return *(_QWORD *)(v1 + *(int *)(v28 + 72));
}

uint64_t sub_23BA5C1A8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA5C1C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 1;
  *(_BYTE *)(v1 + 48) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA5C1E0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    sub_23BA7D0E4();
    v5 = sub_23BB8A6C4();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_23BB7B69C(v5, v7, &v8);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: locationStateByHandle - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23BA5C3F8()
{
  return sub_23BA5CC10();
}

void sub_23BA5C40C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    type metadata accessor for DirectionsState();
    sub_23BA7D0E4();
    v5 = sub_23BB8A6C4();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_23BB7B69C(v5, v7, &v8);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: directionsStateByHandle - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23BA5C62C()
{
  return sub_23BA5CC10();
}

uint64_t sub_23BA5C640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v8;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = sub_23BB8923C();
  return a7(v8);
}

uint64_t sub_23BA5C6C8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E488);
    v5 = sub_23BB8A7D8();
    sub_23BB7B69C(v5, v6, &v8);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: thisDeviceLastLocation - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6C8);
  sub_23B996E1C((unint64_t *)&unk_256A5E6D0, &qword_256A5E6C8, MEMORY[0x24BDB9CA8]);
  return sub_23BB89218();
}

uint64_t sub_23BA5C90C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23BA5C97C()
{
  return sub_23BA5CC10();
}

uint64_t sub_23BA5C990(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), const char *a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  if (qword_256A58E00 != -1)
    swift_once();
  v6 = sub_23BB891C4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v7 = sub_23BB891AC();
  v8 = sub_23BB8ABEC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    a3(0);
    sub_23BA7D0E4();
    v11 = sub_23BB8A6C4();
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_23BB7B69C(v11, v13, &v15);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v7, v8, a4, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6C8);
  sub_23B996E1C((unint64_t *)&unk_256A5E6D0, &qword_256A5E6C8, MEMORY[0x24BDB9CA8]);
  return sub_23BB89218();
}

uint64_t sub_23BA5CBFC()
{
  return sub_23BA5CC10();
}

uint64_t sub_23BA5CC10()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23BA5CC78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23BA5CCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD), const char *a8)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23BB8923C();
  return sub_23BA5C990(a5, a6, a7, a8);
}

void sub_23BA5CD98()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E4B8);
    v5 = sub_23BB8A7D8();
    sub_23BB7B69C(v5, v6, &v7);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: activeLocationSharingDevice - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23BA5CFA0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  return swift_release();
}

void sub_23BA5D004()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    if (v7)
      v5 = 1702195828;
    else
      v5 = 0x65736C6166;
    if (v7)
      v6 = 0xE400000000000000;
    else
      v6 = 0xE500000000000000;
    sub_23BB7B69C(v5, v6, &v8);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: friendRequestsAllowed - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23BA5D210()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  return v1;
}

void sub_23BA5D280()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    sub_23BB88984();
    v5 = sub_23BB8A6C4();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_23BB7B69C(v5, v7, &v8);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: lastMessageTimestampByKey - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_23BA5D49C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v0 = sub_23BB891C4();
  __swift_project_value_buffer(v0, (uint64_t)qword_256A73E80);
  swift_retain_n();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABEC();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    *(_DWORD *)v3 = 136315138;
    v8 = v4;
    swift_beginAccess();
    type metadata accessor for RepositorySubscriber();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA68);
    sub_23B97D0C8(&qword_256A5EA70, (uint64_t (*)(uint64_t))type metadata accessor for RepositorySubscriber, (uint64_t)&unk_23BB90438);
    v5 = sub_23BB8A6C4();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_23BB7B69C(v5, v7, &v8);
    sub_23BB8ACB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: subscriptionsBySubscriber: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23BA5D6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  void *v81;
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147[2];
  __int16 v148;

  v5 = v4;
  v124 = a4;
  v123 = a3;
  v122 = a2;
  v145 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6F8);
  v138 = *(_QWORD *)(v6 - 8);
  v139 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v137 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_23BB8AC1C();
  v126 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143, v9);
  v133 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E700);
  v125 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132, v11);
  v130 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E708);
  MEMORY[0x24BDAC7A8](v131, v13);
  v129 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E710);
  MEMORY[0x24BDAC7A8](v142, v15);
  v141 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E718);
  v135 = *(_QWORD *)(v17 - 8);
  v136 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v128 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v127 = (char *)&v105 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v134 = (char *)&v105 - v26;
  MEMORY[0x24BDAC7A8](v25, v27);
  v144 = (char *)&v105 - v28;
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E720);
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121, v29);
  v119 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E728);
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118, v31);
  v116 = (char *)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E730);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115, v33);
  v113 = (char *)&v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E738);
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112, v35);
  v110 = (char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E740);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109, v37);
  v39 = (char *)&v105 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E748);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107, v40);
  v42 = (char *)&v105 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E750);
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v45);
  v47 = (char *)&v105 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E758);
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48, v50);
  v52 = (char *)&v105 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__locationStateByHandle;
  v147[0] = sub_23B97DAD0(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E468);
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v53, v52, v48);
  v54 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__directionsStateByHandle;
  v55 = MEMORY[0x24BEE4AF8];
  v147[0] = sub_23B97DC30(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E478);
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v54, v47, v43);
  v56 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__thisDeviceLastLocation;
  v147[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E488);
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 32))(v56, v42, v107);
  v57 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__followerStateByHandle;
  v147[0] = sub_23B97DAAC(v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E498);
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v57, v39, v109);
  v58 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__followingStateByHandle;
  v147[0] = sub_23B97DA88(v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E4A8);
  v59 = v110;
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v111 + 32))(v58, v59, v112);
  v60 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__activeLocationSharingDevice;
  v147[0] = 0;
  v147[1] = 0;
  v148 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E4B8);
  v61 = v113;
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 32))(v60, v61, v115);
  v62 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__friendRequestsAllowed;
  LOBYTE(v147[0]) = 1;
  v63 = v116;
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v117 + 32))(v62, v63, v118);
  v64 = v5 + OBJC_IVAR____TtC12FindMyUICore10Repository__lastMessageTimestampByKey;
  v147[0] = sub_23B97DD5C(v55);
  __swift_instantiateConcreteTypeFromMangledName(qword_256A5E4D0);
  v65 = v119;
  sub_23BB89224();
  (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v64, v65, v121);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_isValidatingMessage) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_thisDeviceCurrentLocationTask) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_preferenceChangesTask) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipStreamTask) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationsStreamTask) = 0;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask) = 0;
  v66 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetLocations) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_handlesToGetFriendshipStatus) = v66;
  v67 = OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsBySubscriber;
  *(_QWORD *)(v5 + v67) = sub_23B97DEFC(v55);
  v68 = OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind;
  *(_QWORD *)(v5 + v68) = sub_23B988F54(v55);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_cancellables) = v55;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion) = 0;
  v69 = OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeThisDeviceLocation;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6C8);
  swift_allocObject();
  *(_QWORD *)(v5 + v69) = sub_23BB891F4();
  v70 = OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeFollowersLocations;
  swift_allocObject();
  *(_QWORD *)(v5 + v70) = sub_23BB891F4();
  v71 = OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeFollowingFollowerState;
  swift_allocObject();
  *(_QWORD *)(v5 + v71) = sub_23BB891F4();
  if (qword_256A58E00 != -1)
    swift_once();
  v72 = sub_23BB891C4();
  __swift_project_value_buffer(v72, (uint64_t)qword_256A73E80);
  v73 = sub_23BB891AC();
  v74 = sub_23BB8ABEC();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = (uint8_t *)swift_slowAlloc();
    v76 = swift_slowAlloc();
    v147[0] = v76;
    *(_DWORD *)v75 = 136315138;
    v146 = sub_23BB7B69C(0xD00000000000001DLL, 0x800000023BB9B080, v147);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v73, v74, "Repository: %s", v75, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v76, -1, -1);
    MEMORY[0x24260D9B4](v75, -1, -1);
  }

  v77 = (_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
  v78 = v122;
  *v77 = v145;
  v77[1] = v78;
  v79 = (uint64_t *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_sourceBundleId);
  v140 = v5;
  v80 = v124;
  *v79 = v123;
  v79[1] = v80;
  v81 = (void *)objc_opt_self();
  swift_unknownObjectRetain();
  v82 = objc_msgSend(v81, sel_standardUserDefaults);
  sub_23BA5E534(v82);

  v147[0] = *(_QWORD *)(v5 + OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeThisDeviceLocation);
  v83 = v147[0];
  v124 = sub_23B996E1C((unint64_t *)&unk_256A5E760, &qword_256A5E6C8, MEMORY[0x24BDB9CB0]);
  sub_23BB89254();
  v147[0] = v83;
  v84 = v130;
  sub_23BB8926C();
  v85 = v133;
  sub_23BB8AC10();
  sub_23B99231C();
  v86 = (void *)sub_23BB8AC28();
  v147[0] = (uint64_t)v86;
  v123 = sub_23B996E1C(&qword_256A5E770, &qword_256A5E700, MEMORY[0x24BDB96F8]);
  v122 = sub_23B97D0C8(&qword_256A5E778, (uint64_t (*)(uint64_t))sub_23B99231C, MEMORY[0x24BEE5670]);
  v87 = v132;
  sub_23BB89260();

  v126 = *(_QWORD *)(v126 + 8);
  ((void (*)(char *, uint64_t))v126)(v85, v143);
  v125 = *(_QWORD *)(v125 + 8);
  ((void (*)(char *, uint64_t))v125)(v84, v87);
  v121 = sub_23B996E1C(&qword_256A5E780, &qword_256A5E710, MEMORY[0x24BDB9770]);
  v120 = sub_23B996E1C(&qword_256A5E788, &qword_256A5E708, MEMORY[0x24BDB9988]);
  sub_23BB891D0();
  v147[0] = *(_QWORD *)(v140 + OBJC_IVAR____TtC12FindMyUICore10Repository_didChangeFollowersLocations);
  v88 = v147[0];
  sub_23BB89254();
  v147[0] = v88;
  sub_23BB8926C();
  sub_23BB8AC04();
  v89 = (void *)sub_23BB8AC28();
  v147[0] = (uint64_t)v89;
  sub_23BB89260();

  ((void (*)(char *, uint64_t))v126)(v85, v143);
  ((void (*)(char *, uint64_t))v125)(v84, v87);
  v90 = v134;
  sub_23BB891D0();
  v92 = v135;
  v91 = v136;
  v93 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
  v94 = v144;
  v93(v127, v144, v136);
  v93(v128, v90, v91);
  sub_23B996E1C(&qword_256A5E790, &qword_256A5E718, MEMORY[0x24BDB9530]);
  v95 = v137;
  sub_23BB891DC();
  v96 = swift_allocObject();
  v97 = v140;
  swift_weakInit();
  v98 = swift_allocObject();
  *(_QWORD *)(v98 + 16) = sub_23BA7D264;
  *(_QWORD *)(v98 + 24) = v96;
  sub_23B996E1C(&qword_256A5E798, &qword_256A5E6F8, MEMORY[0x24BDB9798]);
  v99 = v139;
  v100 = sub_23BB89278();
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v95, v99);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7A0);
  v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = xmmword_23BB91DC0;
  *(_QWORD *)(v101 + 32) = v100;
  v147[0] = v101;
  sub_23BB8A904();
  v102 = v147[0];
  swift_unknownObjectRelease();
  v103 = *(void (**)(char *, uint64_t))(v92 + 8);
  v103(v90, v91);
  v103(v94, v91);
  *(_QWORD *)(v97 + OBJC_IVAR____TtC12FindMyUICore10Repository_cancellables) = v102;
  swift_bridgeObjectRelease();
  return v97;
}

void sub_23BA5E534(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  _OWORD v5[2];
  _QWORD v6[4];

  v2 = (void *)sub_23BB8A784();
  v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_23BB8AD18();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_23B990D24((uint64_t)v5, (uint64_t)v6, &qword_256A5E7F0);
  if (v6[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_256A5E4D0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v6[0] = v4;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5D280();
    }
  }
  else
  {
    sub_23B989D60((uint64_t)v6, &qword_256A5E7F0);
  }
}

uint64_t sub_23BA5E670()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23BA5E6C4();
    return swift_release();
  }
  return result;
}

uint64_t sub_23BA5E6C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  int v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[4];

  v71 = *v0;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB88984();
  v83 = *(_QWORD *)(v5 - 8);
  v84 = v5;
  v6 = *(_QWORD **)(v83 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v79 = (char *)v69 - (((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v78 = (char *)v69 - v10;
  v72 = v0;
  v11 = (char *)v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind;
  swift_beginAccess();
  v12 = *(_QWORD *)v11;
  if (*(_QWORD *)(*(_QWORD *)v11 + 16) && (v13 = sub_23B984B98(3), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v15 = MEMORY[0x24BEE4B08];
  }
  v80 = v4;
  if (qword_256A58E00 != -1)
LABEL_47:
    swift_once();
  v16 = sub_23BB891C4();
  __swift_project_value_buffer(v16, (uint64_t)qword_256A73E80);
  swift_bridgeObjectRetain_n();
  v17 = sub_23BB891AC();
  v18 = sub_23BB8ABEC();
  v19 = os_log_type_enabled(v17, v18);
  v73 = v15;
  if (v19)
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v94[0] = v21;
    *(_DWORD *)v20 = 136315394;
    v89 = sub_23BB7B69C(0xD000000000000012, 0x800000023BB9B0A0, v94);
    sub_23BB8ACB8();
    *(_WORD *)(v20 + 12) = 2080;
    sub_23BA7D430();
    swift_bridgeObjectRetain();
    v22 = sub_23BB8AAFC();
    v24 = v23;
    swift_bridgeObjectRelease();
    v25 = v22;
    v15 = v73;
    v89 = sub_23BB7B69C(v25, v24, v94);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v17, v18, "Repository: %s - %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v21, -1, -1);
    MEMORY[0x24260D9B4](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v26 = 0;
  v27 = *(_QWORD *)(v15 + 56);
  v87 = v15 + 56;
  v28 = 1 << *(_BYTE *)(v15 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & v27;
  v88 = (unint64_t)(v28 + 63) >> 6;
  v70 = (uint64_t)v6 + 7;
  v69[1] = MEMORY[0x24BEE4AE0] + 8;
  v6 = v72;
  while (v30)
  {
    v31 = __clz(__rbit64(v30));
    v30 &= v30 - 1;
    v32 = v31 | (v26 << 6);
LABEL_30:
    v36 = *(_QWORD *)(v15 + 48) + 24 * v32;
    v37 = *(_WORD *)(v36 + 16);
    if ((v37 & 0xC000) == 0x4000)
    {
      v39 = *(_QWORD *)v36;
      v38 = *(_QWORD *)(v36 + 8);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain_n();
      sub_23BB89230();
      swift_release();
      swift_release();
      v40 = v94[0];
      if (!*(_QWORD *)(v94[0] + 16) || (v41 = sub_23B9849D4(v39, v38, v37), (v42 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        sub_23B9906D4(v39, v38, v37);
        goto LABEL_13;
      }
      v43 = *(_QWORD *)(v40 + 56) + 32 * v41;
      v44 = *(_QWORD *)(v43 + 8);
      v45 = *(void **)(v43 + 16);
      v46 = *(unsigned __int8 *)(v43 + 24);
      v86 = *(_QWORD *)v43;
      v85 = v46;
      sub_23B9894A0(v86, v44, v45);
      swift_bridgeObjectRelease();
      sub_23B9906D4(v39, v38, v37);
      if ((unint64_t)v45 >= 2)
      {
        v82 = v44;
        v47 = v78;
        sub_23BB88978();
        v48 = sub_23BB8AA18();
        v49 = *(_QWORD *)(v48 - 8);
        v76 = v48;
        v77 = v49;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v80, 1, 1, v48);
        v50 = v6;
        v51 = v83;
        (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v79, v47, v84);
        sub_23BB8A9F4();
        swift_bridgeObjectRetain();
        v81 = v45;
        swift_retain();
        v74 = sub_23BB8A9E8();
        v52 = (*(unsigned __int8 *)(v51 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        v53 = (v70 + v52) & 0xFFFFFFFFFFFFFFF8;
        v75 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
        v54 = (v53 + 39) & 0xFFFFFFFFFFFFFFF8;
        v55 = swift_allocObject();
        *(_QWORD *)(v55 + 16) = v74;
        v56 = v86;
        *(_QWORD *)(v55 + 24) = MEMORY[0x24BEE6930];
        *(_QWORD *)(v55 + 32) = v56;
        v57 = v81;
        *(_QWORD *)(v55 + 40) = v82;
        *(_QWORD *)(v55 + 48) = v57;
        *(_BYTE *)(v55 + 56) = v85;
        v58 = v55 + v52;
        v59 = v76;
        (*(void (**)(unint64_t, char *, uint64_t))(v83 + 32))(v58, v79, v84);
        *(_QWORD *)(v55 + v53) = v50;
        v60 = v55 + v75;
        *(_QWORD *)v60 = v39;
        *(_QWORD *)(v60 + 8) = v38;
        v61 = v77;
        v62 = (uint64_t)v80;
        *(_BYTE *)(v60 + 16) = v37;
        *(_QWORD *)(v55 + v54) = v71;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v62, 1, v59) == 1)
        {
          sub_23B989D60(v62, (uint64_t *)&unk_256A613D0);
        }
        else
        {
          sub_23BB8AA0C();
          (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v62, v59);
        }
        v15 = v73;
        if (*(_QWORD *)(v55 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v63 = sub_23BB8A988();
          v65 = v64;
          swift_unknownObjectRelease();
        }
        else
        {
          v63 = 0;
          v65 = 0;
        }
        v66 = v81;
        v67 = swift_allocObject();
        *(_QWORD *)(v67 + 16) = &unk_256A5E7B8;
        *(_QWORD *)(v67 + 24) = v55;
        if (v65 | v63)
        {
          v90 = 0;
          v91 = 0;
          v92 = v63;
          v93 = v65;
        }
        v6 = v72;
        swift_task_create();

        swift_bridgeObjectRelease();
        swift_release();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v78, v84);
      }
      else
      {
        sub_23B9A13A4(v86, v44, v45);
LABEL_13:
        sub_23B9906D4(v39, v38, v37);
      }
    }
  }
  v33 = v26 + 1;
  if (__OFADD__(v26, 1))
  {
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v33 >= v88)
    return swift_release();
  v34 = *(_QWORD *)(v87 + 8 * v33);
  ++v26;
  if (v34)
    goto LABEL_29;
  v26 = v33 + 1;
  if (v33 + 1 >= v88)
    return swift_release();
  v34 = *(_QWORD *)(v87 + 8 * v26);
  if (v34)
    goto LABEL_29;
  v26 = v33 + 2;
  if (v33 + 2 >= v88)
    return swift_release();
  v34 = *(_QWORD *)(v87 + 8 * v26);
  if (v34)
  {
LABEL_29:
    v30 = (v34 - 1) & v34;
    v32 = __clz(__rbit64(v34)) + (v26 << 6);
    goto LABEL_30;
  }
  v35 = v33 + 3;
  if (v35 < v88)
  {
    v34 = *(_QWORD *)(v87 + 8 * v35);
    if (!v34)
    {
      while (1)
      {
        v26 = v35 + 1;
        if (__OFADD__(v35, 1))
          goto LABEL_46;
        if (v26 >= v88)
          return swift_release();
        v34 = *(_QWORD *)(v87 + 8 * v26);
        ++v35;
        if (v34)
          goto LABEL_29;
      }
    }
    v26 = v35;
    goto LABEL_29;
  }
  return swift_release();
}

uint64_t sub_23BA5EEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v1 = v0;
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v26 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_23BB7B69C(0x74696E696564, 0xE600000000000000, &v26);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "Repository: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }

  v7 = OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion) = 0;

  v9 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__locationStateByHandle;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E758);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__directionsStateByHandle;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__thisDeviceLastLocation;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  v15 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__followerStateByHandle;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  v17 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__followingStateByHandle;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  v19 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__activeLocationSharingDevice;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  v21 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__friendRequestsAllowed;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E728);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
  v23 = v1 + OBJC_IVAR____TtC12FindMyUICore10Repository__lastMessageTimestampByKey;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23BA5F2E0()
{
  sub_23BA5EEF0();
  return swift_deallocClassInstance();
}

uint64_t sub_23BA5F304()
{
  return type metadata accessor for Repository();
}

uint64_t type metadata accessor for Repository()
{
  uint64_t result;

  result = qword_256A5E450;
  if (!qword_256A5E450)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23BA5F348()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_23BA5F594(319, &qword_256A5E460, &qword_256A5E468);
  if (v0 <= 0x3F)
  {
    sub_23BA5F594(319, &qword_256A5E470, &qword_256A5E478);
    if (v1 <= 0x3F)
    {
      sub_23BA5F594(319, &qword_256A5E480, &qword_256A5E488);
      if (v2 <= 0x3F)
      {
        sub_23BA5F594(319, &qword_256A5E490, &qword_256A5E498);
        if (v3 <= 0x3F)
        {
          sub_23BA5F594(319, &qword_256A5E4A0, &qword_256A5E4A8);
          if (v4 <= 0x3F)
          {
            sub_23BA5F594(319, &qword_256A5E4B0, &qword_256A5E4B8);
            if (v5 <= 0x3F)
            {
              sub_23BA5F540();
              if (v6 <= 0x3F)
              {
                sub_23BA5F594(319, &qword_256A5E4C8, qword_256A5E4D0);
                if (v7 <= 0x3F)
                  swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

void sub_23BA5F540()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A5E4C0)
  {
    v0 = sub_23BB89248();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A5E4C0);
  }
}

void sub_23BA5F594(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_23BB89248();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23BA5F5E0(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  NSObject *oslog;
  uint64_t v6;

  *(_BYTE *)(a1 + OBJC_IVAR____TtC12FindMyUICore10Repository_isValidatingMessage) = 0;
  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  oslog = sub_23BB891AC();
  v2 = sub_23BB8ABC8();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v6 = v4;
    *(_DWORD *)v3 = 136315138;
    sub_23BB7B69C(0xD00000000000002BLL, 0x800000023BB9B1B0, &v6);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, oslog, v2, "Repository: %s - isValidatingMessage: false", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_23BA5F774(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = a1[1];
  *(_QWORD *)(v2 + 184) = v1;
  *(_QWORD *)(v2 + 192) = v3;
  *(_QWORD *)(v2 + 200) = v4;
  *(_BYTE *)(v2 + 288) = *((_BYTE *)a1 + 16);
  sub_23BB8A9F4();
  *(_QWORD *)(v2 + 208) = sub_23BB8A9E8();
  *(_QWORD *)(v2 + 216) = sub_23BB8A988();
  *(_QWORD *)(v2 + 224) = v5;
  return swift_task_switch();
}

uint64_t sub_23BA5F7F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned __int16 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  BOOL v42;
  uint64_t v43;
  char v44;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t inited;
  _QWORD *v55;
  __int16 v56;
  char v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[9];

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind);
  swift_beginAccess();
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_23B984B98(4), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v5 = MEMORY[0x24BEE4B08];
  }
  if (qword_256A58E00 != -1)
    swift_once();
  v6 = sub_23BB891C4();
  *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(v6, (uint64_t)qword_256A73E80);
  swift_bridgeObjectRetain_n();
  v7 = sub_23BB891AC();
  v8 = sub_23BB8ABEC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    v62[0] = v60;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 168) = sub_23BB7B69C(0xD000000000000016, 0x800000023BB9B340, v62);
    sub_23BB8ACB8();
    *(_WORD *)(v9 + 12) = 2080;
    sub_23BA7D430();
    swift_bridgeObjectRetain();
    v10 = sub_23BB8AAFC();
    v12 = v11;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 176) = sub_23BB7B69C(v10, v12, v62);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B979000, v7, v8, "Repository: %s - %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v60, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (!*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  v13 = *(unsigned __int8 *)(v0 + 288);
  v14 = *(_QWORD *)(v0 + 200);
  sub_23BB8B240();
  sub_23BB8B24C();
  swift_bridgeObjectRetain();
  sub_23BB8A808();
  sub_23BB8B24C();
  sub_23BB8B258();
  v15 = sub_23BB8B270();
  v16 = -1 << *(_BYTE *)(v5 + 32);
  v17 = v15 & ~v16;
  v61 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {
    v29 = 0;
    goto LABEL_33;
  }
  v18 = v5;
  v56 = v13;
  v19 = v13 | 0x8100;
  v20 = ~v16;
  do
  {
    v22 = *(_QWORD *)(v18 + 48) + 24 * v17;
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)(v22 + 8);
    v25 = *(unsigned __int16 *)(v22 + 16);
    if (v25 >> 14 < 2 || v25 >> 14 != 2)
    {
LABEL_13:
      v21 = *(_QWORD *)(v0 + 192);
      swift_bridgeObjectRetain();
      sub_23B9906EC(v23, v24, v25);
      sub_23B9906D4(v23, v24, v25);
      sub_23B9906D4(v21, v14, v19);
      goto LABEL_14;
    }
    v27 = v23 == *(_QWORD *)(v0 + 192) && v24 == v14;
    v28 = *(_QWORD *)v22;
    if (!v27)
    {
      if ((sub_23BB8B1A4() & 1) == 0)
        goto LABEL_13;
      v28 = *(_QWORD *)(v0 + 192);
    }
    v58 = *(unsigned __int8 *)(v0 + 288);
    swift_bridgeObjectRetain();
    sub_23B9906EC(v23, v24, v25);
    sub_23B9906D4(v23, v24, v25);
    sub_23B9906D4(v28, v14, v19);
    if ((v25 & 0x100) != 0 && v58 == v25)
    {
      v29 = 1;
      goto LABEL_31;
    }
LABEL_14:
    v17 = (v17 + 1) & v20;
  }
  while (((*(_QWORD *)(v61 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0);
  v29 = 0;
LABEL_31:
  v5 = v18;
  v13 = v56;
LABEL_33:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 16))
  {
    sub_23BB8B240();
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    sub_23BB8B24C();
    sub_23BB8B258();
    v30 = sub_23BB8B270();
    v31 = -1 << *(_BYTE *)(v5 + 32);
    v32 = v30 & ~v31;
    if (((*(_QWORD *)(v61 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) != 0)
    {
      v57 = v29;
      v33 = v5;
      v34 = v13 | 0x8000;
      v35 = ~v31;
      while (1)
      {
        v37 = *(_QWORD *)(v33 + 48) + 24 * v32;
        v38 = *(_QWORD *)v37;
        v39 = *(_QWORD *)(v37 + 8);
        v40 = *(unsigned __int16 *)(v37 + 16);
        if (v40 >> 14 >= 2 && v40 >> 14 == 2)
        {
          v42 = v38 == *(_QWORD *)(v0 + 192) && v39 == v14;
          v43 = *(_QWORD *)v37;
          if (v42)
            goto LABEL_49;
          if ((sub_23BB8B1A4() & 1) != 0)
            break;
        }
        v36 = *(_QWORD *)(v0 + 192);
        swift_bridgeObjectRetain();
        sub_23B9906EC(v38, v39, v40);
        sub_23B9906D4(v38, v39, v40);
        sub_23B9906D4(v36, v14, v34);
LABEL_37:
        v32 = (v32 + 1) & v35;
        if (((*(_QWORD *)(v61 + ((v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v57 & 1) != 0)
            goto LABEL_58;
LABEL_55:
          swift_release();
          sub_23BA60608();
          return (*(uint64_t (**)(void))(v0 + 8))();
        }
      }
      v43 = *(_QWORD *)(v0 + 192);
LABEL_49:
      v59 = *(unsigned __int8 *)(v0 + 288);
      swift_bridgeObjectRetain();
      sub_23B9906EC(v38, v39, v40);
      sub_23B9906D4(v38, v39, v40);
      sub_23B9906D4(v43, v14, v34);
      if ((v40 & 0x100) == 0 && v59 == v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v57 & 1) != 0)
        {
          v44 = 1;
          goto LABEL_59;
        }
        v51 = *(_BYTE *)(v0 + 288);
        v53 = *(_QWORD *)(v0 + 192);
        v52 = *(_QWORD *)(v0 + 200);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
        inited = swift_initStackObject();
        *(_QWORD *)(v0 + 264) = inited;
        *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
        *(_QWORD *)(inited + 32) = v53;
        *(_QWORD *)(inited + 40) = v52;
        *(_BYTE *)(inited + 48) = v51;
        swift_bridgeObjectRetain();
        v55 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 272) = v55;
        *v55 = v0;
        v55[1] = sub_23BA60314;
        return sub_23BA3907C(inited, 0);
      }
      goto LABEL_37;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
    goto LABEL_55;
LABEL_58:
  v44 = 0;
LABEL_59:
  *(_BYTE *)(v0 + 289) = v44;
  v46 = *(_BYTE *)(v0 + 288);
  v48 = *(_QWORD *)(v0 + 192);
  v47 = *(_QWORD *)(v0 + 200);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
  v49 = swift_initStackObject();
  *(_QWORD *)(v0 + 240) = v49;
  *(_OWORD *)(v49 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v49 + 32) = v48;
  *(_QWORD *)(v49 + 40) = v47;
  *(_BYTE *)(v49 + 48) = v46;
  swift_bridgeObjectRetain();
  v50 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v50;
  *v50 = v0;
  v50[1] = sub_23BA5FF74;
  return sub_23BA3907C(v49, 1);
}

uint64_t sub_23BA5FF74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return swift_task_switch();
}

uint64_t sub_23BA60004()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;

  if ((*(_BYTE *)(v0 + 289) & 1) != 0)
  {
    v1 = *(_BYTE *)(v0 + 288);
    v3 = *(_QWORD *)(v0 + 192);
    v2 = *(_QWORD *)(v0 + 200);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
    inited = swift_initStackObject();
    *(_QWORD *)(v0 + 264) = inited;
    *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
    *(_QWORD *)(inited + 32) = v3;
    *(_QWORD *)(inited + 40) = v2;
    *(_BYTE *)(inited + 48) = v1;
    swift_bridgeObjectRetain();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v5;
    *v5 = v0;
    v5[1] = sub_23BA60314;
    return sub_23BA3907C(inited, 0);
  }
  else
  {
    swift_release();
    sub_23BA60608();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23BA600EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 256);
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 160) = sub_23BB7B69C(0xD000000000000016, 0x800000023BB9B340, &v12);
    sub_23BB8ACB8();
    *(_WORD *)(v6 + 12) = 2112;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 152) = v10;
    sub_23BB8ACB8();
    *v7 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "Repository: %s - Error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA60314()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return swift_task_switch();
}

uint64_t sub_23BA603A4()
{
  uint64_t v0;

  swift_release();
  sub_23BA60608();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA603DC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(void **)(v0 + 280);
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 160) = sub_23BB7B69C(0xD000000000000016, 0x800000023BB9B340, &v12);
    sub_23BB8ACB8();
    *(_WORD *)(v6 + 12) = 2112;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 152) = v10;
    sub_23BB8ACB8();
    *v7 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "Repository: %s - Error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v6, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA60608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  char v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v45 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  *(_QWORD *)(v1 + v5) = 0;
  swift_release();
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind);
  swift_beginAccess();
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16) && (v8 = sub_23B984B98(2), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v10 = MEMORY[0x24BEE4B08];
  }
  v46 = v1;
  if (qword_256A58E00 != -1)
    swift_once();
  v11 = sub_23BB891C4();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_256A73E80);
  swift_bridgeObjectRetain_n();
  v49 = v12;
  v13 = sub_23BB891AC();
  v14 = sub_23BB8ABEC();
  v15 = os_log_type_enabled(v13, v14);
  v16 = MEMORY[0x24BEE4AD8];
  if (v15)
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v52 = v18;
    *(_DWORD *)v17 = 136315394;
    v51 = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v52);
    sub_23BB8ACB8();
    *(_WORD *)(v17 + 12) = 2080;
    sub_23BA7D430();
    v19 = v16;
    swift_bridgeObjectRetain();
    v20 = sub_23BB8AAFC();
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = v20;
    v16 = v19;
    v51 = sub_23BB7B69C(v23, v22, &v52);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B979000, v13, v14, "Repository: %s - %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v18, -1, -1);
    MEMORY[0x24260D9B4](v17, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v24 = sub_23BA4E854(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v25 = sub_23BB891AC();
  v26 = sub_23BB8ABEC();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v52 = v28;
    *(_DWORD *)v27 = 136315394;
    v51 = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v52);
    sub_23BB8ACB8();
    *(_WORD *)(v27 + 12) = 2048;
    v51 = *(_QWORD *)(v24 + 16);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v25, v26, "Repository: %s - handlesToGetFriendshipStatus- count: %ld, handles:", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v28, -1, -1);
    MEMORY[0x24260D9B4](v27, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v29 = *(_QWORD *)(v24 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    v44 = v24;
    v30 = (char *)(v24 + 48);
    *(_QWORD *)&v31 = 141558275;
    v48 = v31;
    v47 = v16 + 8;
    do
    {
      v32 = *v30;
      swift_bridgeObjectRetain_n();
      v33 = sub_23BB891AC();
      v34 = sub_23BB8ABEC();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc();
        v36 = swift_slowAlloc();
        v51 = v36;
        *(_DWORD *)v35 = v48;
        *(_QWORD *)(v35 + 4) = 1752392040;
        *(_WORD *)(v35 + 12) = 2081;
        v52 = 91;
        v53 = 0xE100000000000000;
        v50 = v32;
        sub_23BB8A7D8();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        swift_bridgeObjectRetain();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        *(_QWORD *)(v35 + 14) = sub_23BB7B69C(v52, v53, &v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23B979000, v33, v34, "Handle: %{private,mask.hash}s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v36, -1, -1);
        MEMORY[0x24260D9B4](v35, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v30 += 24;
      --v29;
    }
    while (v29);
    v24 = v44;
    swift_bridgeObjectRelease();
  }
  v37 = sub_23BB8AA18();
  v38 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v45, 1, 1, v37);
  sub_23BB8A9F4();
  v39 = v46;
  swift_retain();
  v40 = sub_23BB8A9E8();
  v41 = (_QWORD *)swift_allocObject();
  v42 = MEMORY[0x24BEE6930];
  v41[2] = v40;
  v41[3] = v42;
  v41[4] = v24;
  v41[5] = v39;
  sub_23B989F54(v38, (uint64_t)&unk_256A5EA08, (uint64_t)v41);
  return swift_release();
}

uint64_t sub_23BA60CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[210] = a5;
  v5[209] = a4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v5[211] = swift_task_alloc();
  v6 = sub_23BB88984();
  v5[212] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[213] = v7;
  v5[214] = *(_QWORD *)(v7 + 64);
  v5[215] = swift_task_alloc();
  v5[216] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6E0);
  v5[217] = swift_task_alloc();
  v5[218] = swift_task_alloc();
  v8 = type metadata accessor for SessionFollowingState(0);
  v5[219] = v8;
  v5[220] = *(_QWORD *)(v8 - 8);
  v5[221] = swift_task_alloc();
  v5[222] = swift_task_alloc();
  v5[223] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA10);
  v5[224] = swift_task_alloc();
  v5[225] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  v5[226] = swift_task_alloc();
  v5[227] = swift_task_alloc();
  v9 = type metadata accessor for SessionFollowerState(0);
  v5[228] = v9;
  v5[229] = *(_QWORD *)(v9 - 8);
  v5[230] = swift_task_alloc();
  v5[231] = swift_task_alloc();
  v5[232] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA18);
  v5[233] = swift_task_alloc();
  v5[234] = swift_task_alloc();
  v5[235] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v5[236] = swift_task_alloc();
  v5[237] = swift_task_alloc();
  v5[238] = swift_task_alloc();
  v5[239] = swift_task_alloc();
  v5[240] = swift_task_alloc();
  v5[241] = swift_task_alloc();
  v5[242] = swift_task_alloc();
  v5[243] = sub_23BB8A9F4();
  v5[244] = sub_23BB8A9E8();
  v5[245] = sub_23BB8A988();
  v5[246] = v10;
  return swift_task_switch();
}

uint64_t sub_23BA60F44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v8 = v0[242];
  v1 = v0[213];
  v9 = v0[212];
  v2 = v0[210];
  v3 = v0[209];
  v4 = *(_QWORD *)(v3 + 16) > 1uLL;
  v5 = swift_task_alloc();
  v0[247] = v5;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  *(_BYTE *)(v5 + 32) = v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5E498);
  swift_asyncLet_begin();
  v6 = swift_task_alloc();
  v0[248] = v6;
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v3;
  *(_BYTE *)(v6 + 32) = v4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5E4A8);
  swift_asyncLet_begin();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v8, 1, 1, v9);
  return swift_asyncLet_get_throwing();
}

uint64_t sub_23BA61074()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 1992) = v0;
  return swift_task_switch();
}

uint64_t sub_23BA6109C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  int isUniquelyReferenced_nonNull_native;
  void (*v36)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  void (*v72)(uint64_t, _QWORD, uint64_t, uint64_t);
  os_log_type_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[2];

  v70 = *(_QWORD *)(v0 + 1872);
  v68 = *(_QWORD *)(v0 + 1864);
  v75 = *(_QWORD *)(v0 + 1832);
  v1 = *(_QWORD *)(v0 + 1648);
  v2 = *(_QWORD *)(v1 + 64);
  v64 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & v2;
  v67 = (unint64_t)(63 - v4) >> 6;
  v69 = *(_QWORD *)(v0 + 1648);
  result = swift_bridgeObjectRetain();
  v71 = 0;
  v7 = type metadata accessor for SessionFollowerState;
  if (!v5)
    goto LABEL_6;
LABEL_4:
  v8 = __clz(__rbit64(v5));
  v9 = (v5 - 1) & v5;
  v10 = v8 | (v71 << 6);
  while (2)
  {
    v11 = *(_QWORD **)(v0 + 1864);
    v12 = *(_QWORD *)(v69 + 48) + 24 * v10;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    LOBYTE(v12) = *(_BYTE *)(v12 + 16);
    *v11 = v13;
    *(_QWORD *)(v68 + 8) = v14;
    *(_BYTE *)(v68 + 16) = v12;
    v15 = *(_QWORD *)(v69 + 56) + *(_QWORD *)(v75 + 72) * v10;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA58);
    sub_23B989CE8(v15, (uint64_t)v11 + *(int *)(v16 + 48), v7);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 0, 1, v16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v22 = *(_QWORD *)(v0 + 1872);
      sub_23B990D24(*(_QWORD *)(v0 + 1864), v22, &qword_256A5EA18);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA58);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23) == 1)
      {
        swift_release();
        return swift_asyncLet_get_throwing();
      }
      v74 = v9;
      v24 = *(uint64_t **)(v0 + 1872);
      v25 = *(_QWORD *)(v0 + 1856);
      v26 = *(_QWORD *)(v0 + 1824);
      v27 = *(_QWORD *)(v0 + 1816);
      v28 = v7;
      v76 = *v24;
      v29 = *(_QWORD *)(v70 + 8);
      v30 = *(_BYTE *)(v70 + 16);
      sub_23B989CA4((uint64_t)v24 + *(int *)(v23 + 48), v25, v7);
      sub_23B989CE8(v25, v27, v7);
      v72 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56);
      v72(v27, 0, 1, v26);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      sub_23BB89230();
      swift_release();
      swift_release();
      v31 = *(_QWORD *)(v0 + 1624);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v27, 1, v26) == 1)
      {
        sub_23B989D60(*(_QWORD *)(v0 + 1816), &qword_256A59C78);
        swift_bridgeObjectRetain();
        v32 = sub_23B9849D4(v76, v29, v30);
        v34 = v33;
        swift_bridgeObjectRelease();
        if ((v34 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v77[0] = v31;
          v36 = v72;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_23B98875C();
            v31 = v77[0];
          }
          v37 = *(_QWORD *)(v0 + 1808);
          swift_bridgeObjectRelease();
          sub_23B989CA4(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v75 + 72) * v32, v37, type metadata accessor for SessionFollowerState);
          sub_23B986838(v32, v31);
          swift_bridgeObjectRelease();
          v38 = 0;
        }
        else
        {
          v38 = 1;
          v36 = v72;
        }
        v41 = *(_QWORD *)(v0 + 1808);
        v36(v41, v38, 1, *(_QWORD *)(v0 + 1824));
        swift_bridgeObjectRelease();
        sub_23B989D60(v41, &qword_256A59C78);
        v28 = type metadata accessor for SessionFollowerState;
      }
      else
      {
        v39 = *(_QWORD *)(v0 + 1848);
        sub_23B989CA4(*(_QWORD *)(v0 + 1816), v39, v7);
        v40 = swift_isUniquelyReferenced_nonNull_native();
        v77[0] = v31;
        sub_23BAAFDBC(v39, v76, v29, v30, v40);
        v31 = v77[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v42 = *(_QWORD *)(v0 + 1856);
      v43 = *(_QWORD *)(v0 + 1840);
      swift_getKeyPath();
      swift_getKeyPath();
      *(_QWORD *)(v0 + 1632) = v31;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5C990((uint64_t)&unk_23BB91AB8, (uint64_t)&unk_23BB91AE0, (void (*)(_QWORD))v28, "Repository: followerStateByHandle - %s");
      sub_23B989CE8(v42, v43, v28);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v45 = *(_QWORD *)(v0 + 1840);
      if (EnumCaseMultiPayload)
      {
        v7 = v28;
        sub_23B989D9C(*(_QWORD *)(v0 + 1856), v28);
        swift_bridgeObjectRelease();
        result = sub_23B989D9C(v45, v28);
        v5 = v74;
        if (v74)
          goto LABEL_4;
      }
      else
      {
        v46 = *(_QWORD *)(v0 + 1928);
        v47 = v45 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        sub_23B990D24(v45, v46, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v47, (uint64_t *)&unk_256A5E6B0);
        if (qword_256A58E00 != -1)
          swift_once();
        v48 = *(_QWORD *)(v0 + 1928);
        v49 = *(_QWORD *)(v0 + 1920);
        v50 = sub_23BB891C4();
        __swift_project_value_buffer(v50, (uint64_t)qword_256A73E80);
        sub_23B989EFC(v48, v49, (uint64_t *)&unk_256A5E6B0);
        swift_bridgeObjectRetain();
        v51 = sub_23BB891AC();
        v52 = sub_23BB8ABC8();
        v53 = os_log_type_enabled(v51, v52);
        v54 = *(_QWORD *)(v0 + 1920);
        if (v53)
        {
          v65 = *(_QWORD *)(v0 + 1912);
          v73 = v52;
          v55 = swift_slowAlloc();
          v66 = swift_slowAlloc();
          v77[0] = v66;
          *(_DWORD *)v55 = 136315650;
          *(_QWORD *)(v0 + 1640) = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, v77);
          sub_23BB8ACB8();
          *(_WORD *)(v55 + 12) = 2080;
          *(_QWORD *)(v0 + 1464) = v76;
          *(_QWORD *)(v0 + 1472) = v29;
          *(_BYTE *)(v0 + 1480) = v30;
          swift_bridgeObjectRetain();
          v56 = sub_23BB8A7D8();
          *(_QWORD *)(v0 + 1656) = sub_23BB7B69C(v56, v57, v77);
          sub_23BB8ACB8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v55 + 22) = 2080;
          sub_23B989EFC(v54, v65, (uint64_t *)&unk_256A5E6B0);
          v58 = sub_23BB8A7D8();
          *(_QWORD *)(v0 + 1664) = sub_23BB7B69C(v58, v59, v77);
          sub_23BB8ACB8();
          swift_bridgeObjectRelease();
          sub_23B989D60(v54, (uint64_t *)&unk_256A5E6B0);
          _os_log_impl(&dword_23B979000, v51, v73, "Repository: %s - follower: %s - expiryDate %s", (uint8_t *)v55, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x24260D9B4](v66, -1, -1);
          MEMORY[0x24260D9B4](v55, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_23B989D60(v54, (uint64_t *)&unk_256A5E6B0);
        }

        v5 = v74;
        v60 = *(_QWORD *)(v0 + 1936);
        v61 = *(_QWORD *)(v0 + 1928);
        v62 = *(_QWORD *)(v0 + 1912);
        v63 = *(_QWORD *)(v0 + 1856);
        sub_23BA6336C(v60, v61, v62);
        sub_23B989D60(v61, (uint64_t *)&unk_256A5E6B0);
        v7 = type metadata accessor for SessionFollowerState;
        sub_23B989D9C(v63, type metadata accessor for SessionFollowerState);
        result = sub_23BA7FA40(v62, v60, (uint64_t *)&unk_256A5E6B0);
        if (v74)
          goto LABEL_4;
      }
LABEL_6:
      v17 = v71 + 1;
      if (__OFADD__(v71, 1))
      {
        __break(1u);
        goto LABEL_45;
      }
      if (v17 < v67)
      {
        v18 = *(_QWORD *)(v64 + 8 * v17);
        if (v18)
          goto LABEL_9;
        v19 = v71 + 2;
        ++v71;
        if (v17 + 1 < v67)
        {
          v18 = *(_QWORD *)(v64 + 8 * v19);
          if (v18)
            goto LABEL_12;
          v71 = v17 + 1;
          if (v17 + 2 < v67)
          {
            v18 = *(_QWORD *)(v64 + 8 * (v17 + 2));
            if (v18)
            {
              v17 += 2;
              goto LABEL_9;
            }
            v19 = v17 + 3;
            v71 = v17 + 2;
            if (v17 + 3 < v67)
              break;
          }
        }
      }
LABEL_23:
      v20 = *(_QWORD *)(v0 + 1864);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA58);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
      v9 = 0;
    }
    v18 = *(_QWORD *)(v64 + 8 * v19);
    if (v18)
    {
LABEL_12:
      v17 = v19;
LABEL_9:
      v9 = (v18 - 1) & v18;
      v10 = __clz(__rbit64(v18)) + (v17 << 6);
      v71 = v17;
      continue;
    }
    break;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v67)
    {
      v71 = v67 - 1;
      goto LABEL_23;
    }
    v18 = *(_QWORD *)(v64 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_9;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_23BA619B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 2000) = v0;
  return swift_task_switch();
}

uint64_t sub_23BA619DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t);
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  int isUniquelyReferenced_nonNull_native;
  void (*v36)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(unint64_t, uint64_t, uint64_t);
  double v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  void (*v103)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[2];

  v101 = v0[225];
  v99 = v0[224];
  v107 = v0[220];
  v1 = v0[198];
  v2 = *(_QWORD *)(v1 + 64);
  v96 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & v2;
  v98 = (unint64_t)(63 - v4) >> 6;
  v100 = v0[198];
  result = swift_bridgeObjectRetain();
  v102 = 0;
  v7 = type metadata accessor for SessionFollowingState;
  if (!v5)
    goto LABEL_6;
LABEL_4:
  v8 = __clz(__rbit64(v5));
  v9 = (v5 - 1) & v5;
  v10 = v8 | (v102 << 6);
LABEL_5:
  v11 = *(_QWORD **)(v111 + 1792);
  v12 = *(_QWORD *)(v100 + 48) + 24 * v10;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  LOBYTE(v12) = *(_BYTE *)(v12 + 16);
  *v11 = v13;
  *(_QWORD *)(v99 + 8) = v14;
  *(_BYTE *)(v99 + 16) = v12;
  v15 = *(_QWORD *)(v100 + 56) + *(_QWORD *)(v107 + 72) * v10;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA50);
  sub_23B989CE8(v15, (uint64_t)v11 + *(int *)(v16 + 48), v7);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 0, 1, v16);
  swift_bridgeObjectRetain();
  while (1)
  {
    v22 = *(_QWORD *)(v111 + 1800);
    sub_23B990D24(*(_QWORD *)(v111 + 1792), v22, &qword_256A5EA10);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23) == 1)
    {
      swift_release();
      v64 = *(_QWORD *)(v111 + 1888);
      v65 = *(_QWORD *)(v111 + 1704);
      v66 = *(_QWORD *)(v111 + 1696);
      sub_23B989EFC(*(_QWORD *)(v111 + 1936), v64, (uint64_t *)&unk_256A5E6B0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v64, 1, v66) == 1)
      {
        sub_23B989D60(*(_QWORD *)(v111 + 1888), (uint64_t *)&unk_256A5E6B0);
      }
      else
      {
        v67 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 + 1704) + 32);
        v67(*(_QWORD *)(v111 + 1728), *(_QWORD *)(v111 + 1888), *(_QWORD *)(v111 + 1696));
        sub_23BB888F4();
        if (v68 > 0.0)
        {
          v69 = v68;
          v70 = *(_QWORD *)(v111 + 1728);
          v106 = v70;
          v71 = *(_QWORD *)(v111 + 1720);
          v72 = *(_QWORD *)(v111 + 1712);
          v73 = *(_QWORD *)(v111 + 1704);
          v74 = *(_QWORD *)(v111 + 1696);
          v75 = *(_QWORD *)(v111 + 1688);
          v108 = v75;
          v110 = *(_QWORD *)(v111 + 1936);
          v76 = *(_QWORD *)(v111 + 1680);
          v77 = sub_23BB8AA18();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v75, 1, 1, v77);
          v78 = v71;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v71, v70, v74);
          swift_retain();
          v79 = sub_23BB8A9E8();
          v80 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
          v81 = (v72 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
          v82 = swift_allocObject();
          v83 = MEMORY[0x24BEE6930];
          *(_QWORD *)(v82 + 16) = v79;
          *(_QWORD *)(v82 + 24) = v83;
          v67(v82 + v80, v78, v74);
          *(double *)(v82 + v81) = v69;
          *(_QWORD *)(v82 + ((v81 + 15) & 0xFFFFFFFFFFFFFFF8)) = v76;
          v84 = sub_23B989F54(v108, (uint64_t)&unk_256A5EA48, v82);
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v106, v74);
          *(_QWORD *)(v76 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask) = v84;
          swift_release();
          v85 = v110;
          goto LABEL_53;
        }
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v111 + 1704) + 8))(*(_QWORD *)(v111 + 1728), *(_QWORD *)(v111 + 1696));
      }
      if (qword_256A58E00 != -1)
        goto LABEL_55;
      goto LABEL_49;
    }
    v105 = v9;
    v24 = *(uint64_t **)(v111 + 1800);
    v25 = *(_QWORD *)(v111 + 1784);
    v26 = *(_QWORD *)(v111 + 1752);
    v27 = *(_QWORD *)(v111 + 1744);
    v109 = *v24;
    v28 = *(_QWORD *)(v101 + 8);
    v29 = *(_BYTE *)(v101 + 16);
    sub_23B989CA4((uint64_t)v24 + *(int *)(v23 + 48), v25, v7);
    sub_23B989CE8(v25, v27, v7);
    v30 = v7;
    v103 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56);
    v103(v27, 0, 1, v26);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_23BB89230();
    swift_release();
    swift_release();
    v31 = *(_QWORD *)(v111 + 1560);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v27, 1, v26) == 1)
    {
      sub_23B989D60(*(_QWORD *)(v111 + 1744), (uint64_t *)&unk_256A5E6E0);
      swift_bridgeObjectRetain();
      v32 = sub_23B9849D4(v109, v28, v29);
      v34 = v33;
      swift_bridgeObjectRelease();
      if ((v34 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v112[0] = v31;
        v36 = v103;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_23B9889D8();
          v31 = v112[0];
        }
        v37 = *(_QWORD *)(v111 + 1736);
        swift_bridgeObjectRelease();
        sub_23B989CA4(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v107 + 72) * v32, v37, type metadata accessor for SessionFollowingState);
        sub_23B986844(v32, v31);
        swift_bridgeObjectRelease();
        v38 = 0;
      }
      else
      {
        v38 = 1;
        v36 = v103;
      }
      v41 = *(_QWORD *)(v111 + 1736);
      v36(v41, v38, 1, *(_QWORD *)(v111 + 1752));
      swift_bridgeObjectRelease();
      sub_23B989D60(v41, (uint64_t *)&unk_256A5E6E0);
      v30 = type metadata accessor for SessionFollowingState;
    }
    else
    {
      v39 = *(_QWORD *)(v111 + 1776);
      sub_23B989CA4(*(_QWORD *)(v111 + 1744), v39, v7);
      v40 = swift_isUniquelyReferenced_nonNull_native();
      v112[0] = v31;
      sub_23BAAFDD8(v39, v109, v28, v29, v40);
      v31 = v112[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v42 = *(_QWORD *)(v111 + 1784);
    v43 = *(_QWORD *)(v111 + 1768);
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v111 + 1568) = v31;
    swift_retain();
    sub_23BB8923C();
    sub_23BA5C990((uint64_t)&unk_23BB91B00, (uint64_t)&unk_23BB91B28, (void (*)(_QWORD))v30, "Repository: followingStateByHandle - %s");
    sub_23B989CE8(v42, v43, v30);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v45 = *(_QWORD *)(v111 + 1768);
    v7 = v30;
    if (EnumCaseMultiPayload)
    {
      sub_23B989D9C(*(_QWORD *)(v111 + 1784), v30);
      swift_bridgeObjectRelease();
      result = sub_23B989D9C(v45, v30);
      v5 = v105;
      if (v105)
        goto LABEL_4;
    }
    else
    {
      v46 = *(_QWORD *)(v111 + 1904);
      v47 = v45 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
      sub_23B990D24(v45, v46, (uint64_t *)&unk_256A5E6B0);
      sub_23B989D60(v47, (uint64_t *)&unk_256A5E6B0);
      if (qword_256A58E00 != -1)
        swift_once();
      v48 = *(_QWORD *)(v111 + 1904);
      v49 = *(_QWORD *)(v111 + 1896);
      v50 = sub_23BB891C4();
      __swift_project_value_buffer(v50, (uint64_t)qword_256A73E80);
      sub_23B989EFC(v48, v49, (uint64_t *)&unk_256A5E6B0);
      swift_bridgeObjectRetain();
      v51 = sub_23BB891AC();
      v52 = sub_23BB8ABC8();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = *(_QWORD *)(v111 + 1912);
        v97 = *(_QWORD *)(v111 + 1896);
        v54 = swift_slowAlloc();
        v104 = swift_slowAlloc();
        v112[0] = v104;
        *(_DWORD *)v54 = 136315650;
        *(_QWORD *)(v111 + 1576) = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, v112);
        sub_23BB8ACB8();
        *(_WORD *)(v54 + 12) = 2080;
        *(_QWORD *)(v111 + 1400) = v109;
        *(_QWORD *)(v111 + 1408) = v28;
        *(_BYTE *)(v111 + 1416) = v29;
        swift_bridgeObjectRetain();
        v55 = sub_23BB8A7D8();
        *(_QWORD *)(v111 + 1592) = sub_23BB7B69C(v55, v56, v112);
        v7 = type metadata accessor for SessionFollowingState;
        sub_23BB8ACB8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v54 + 22) = 2080;
        sub_23B989EFC(v97, v53, (uint64_t *)&unk_256A5E6B0);
        v57 = sub_23BB8A7D8();
        *(_QWORD *)(v111 + 1600) = sub_23BB7B69C(v57, v58, v112);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        sub_23B989D60(v97, (uint64_t *)&unk_256A5E6B0);
        _os_log_impl(&dword_23B979000, v51, v52, "Repository: %s - following: %s - expiryDate %s", (uint8_t *)v54, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v104, -1, -1);
        MEMORY[0x24260D9B4](v54, -1, -1);
      }
      else
      {
        v59 = *(_QWORD *)(v111 + 1896);
        swift_bridgeObjectRelease_n();
        sub_23B989D60(v59, (uint64_t *)&unk_256A5E6B0);
      }

      v5 = v105;
      v60 = *(_QWORD *)(v111 + 1936);
      v61 = *(_QWORD *)(v111 + 1912);
      v62 = *(_QWORD *)(v111 + 1904);
      v63 = *(_QWORD *)(v111 + 1784);
      sub_23BA6336C(v60, v62, v61);
      sub_23B989D60(v62, (uint64_t *)&unk_256A5E6B0);
      sub_23B989D9C(v63, v7);
      result = sub_23BA7FA40(v61, v60, (uint64_t *)&unk_256A5E6B0);
      if (v105)
        goto LABEL_4;
    }
LABEL_6:
    v17 = v102 + 1;
    if (__OFADD__(v102, 1))
      break;
    if (v17 < v98)
    {
      v18 = *(_QWORD *)(v96 + 8 * v17);
      if (v18)
        goto LABEL_9;
      v19 = v102 + 2;
      ++v102;
      if (v17 + 1 < v98)
      {
        v18 = *(_QWORD *)(v96 + 8 * v19);
        if (v18)
          goto LABEL_12;
        v102 = v17 + 1;
        if (v17 + 2 < v98)
        {
          v18 = *(_QWORD *)(v96 + 8 * (v17 + 2));
          if (v18)
          {
            v17 += 2;
            goto LABEL_9;
          }
          v19 = v17 + 3;
          v102 = v17 + 2;
          if (v17 + 3 < v98)
          {
            v18 = *(_QWORD *)(v96 + 8 * v19);
            if (!v18)
            {
              while (1)
              {
                v17 = v19 + 1;
                if (__OFADD__(v19, 1))
                  break;
                if (v17 >= v98)
                {
                  v102 = v98 - 1;
                  goto LABEL_23;
                }
                v18 = *(_QWORD *)(v96 + 8 * v17);
                ++v19;
                if (v18)
                  goto LABEL_9;
              }
              __break(1u);
              return result;
            }
LABEL_12:
            v17 = v19;
LABEL_9:
            v9 = (v18 - 1) & v18;
            v10 = __clz(__rbit64(v18)) + (v17 << 6);
            v102 = v17;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v20 = *(_QWORD *)(v111 + 1792);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
    v9 = 0;
  }
  __break(1u);
LABEL_55:
  swift_once();
LABEL_49:
  v86 = sub_23BB891C4();
  __swift_project_value_buffer(v86, (uint64_t)qword_256A73E80);
  v87 = sub_23BB891AC();
  v88 = sub_23BB8ABC8();
  v89 = os_log_type_enabled(v87, v88);
  v90 = *(_QWORD *)(v111 + 1936);
  if (v89)
  {
    v91 = *(_QWORD *)(v111 + 1912);
    v92 = swift_slowAlloc();
    v93 = swift_slowAlloc();
    v112[0] = v93;
    *(_DWORD *)v92 = 136315394;
    *(_QWORD *)(v111 + 1528) = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, v112);
    sub_23BB8ACB8();
    *(_WORD *)(v92 + 12) = 2080;
    swift_beginAccess();
    sub_23B989EFC(v90, v91, (uint64_t *)&unk_256A5E6B0);
    v94 = sub_23BB8A7D8();
    *(_QWORD *)(v111 + 1536) = sub_23BB7B69C(v94, v95, v112);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v87, v88, "Repository: %s - Not scheduling timer: %s", (uint8_t *)v92, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v93, -1, -1);
    MEMORY[0x24260D9B4](v92, -1, -1);
  }

  v85 = v90;
LABEL_53:
  sub_23B989D60(v85, (uint64_t *)&unk_256A5E6B0);
  return swift_asyncLet_finish();
}

uint64_t sub_23BA626F4()
{
  return swift_task_switch();
}

uint64_t sub_23BA62708()
{
  swift_task_dealloc();
  return swift_asyncLet_finish();
}

uint64_t sub_23BA6275C()
{
  return swift_task_switch();
}

uint64_t sub_23BA62770()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA62910()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = (void *)v0[249];
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = (void *)v0[249];
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v11;
    *(_DWORD *)v9 = 136315394;
    v0[201] = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v15);
    sub_23BB8ACB8();
    *(_WORD *)(v9 + 12) = 2112;
    v12 = v8;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[202] = v13;
    sub_23BB8ACB8();
    *v10 = v13;

    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - Followers - %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

  }
  else
  {

  }
  return swift_asyncLet_get_throwing();
}

uint64_t sub_23BA62B68()
{
  _QWORD *v0;
  __objc2_prop_list **p_base_props;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(unint64_t, uint64_t, uint64_t);
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  p_base_props = &MapsDirectionsProvider.base_props;
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = (void *)v0[250];
  v3 = sub_23BB891C4();
  __swift_project_value_buffer(v3, (uint64_t)qword_256A73E80);
  v4 = v2;
  v5 = v2;
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABD4();
  v8 = os_log_type_enabled(v6, v7);
  v9 = (void *)v0[250];
  if (v8)
  {
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v49 = v3;
    v12 = swift_slowAlloc();
    v52 = v12;
    *(_DWORD *)v10 = 136315394;
    v0[193] = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v52);
    sub_23BB8ACB8();
    *(_WORD *)(v10 + 12) = 2112;
    v13 = v9;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[194] = v14;
    sub_23BB8ACB8();
    *v11 = v14;

    _os_log_impl(&dword_23B979000, v6, v7, "Repository: %s - Followings - %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    swift_arrayDestroy();
    v15 = v12;
    v3 = v49;
    MEMORY[0x24260D9B4](v15, -1, -1);
    v16 = v10;
    p_base_props = (__objc2_prop_list **)(&MapsDirectionsProvider + 64);
    MEMORY[0x24260D9B4](v16, -1, -1);

  }
  else
  {

  }
  v17 = v0[236];
  v18 = v0[213];
  v19 = v0[212];
  sub_23B989EFC(v0[242], v17, (uint64_t *)&unk_256A5E6B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v17, 1, v19) == 1)
  {
    sub_23B989D60(v0[236], (uint64_t *)&unk_256A5E6B0);
  }
  else
  {
    v20 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0[213] + 32);
    v20(v0[216], v0[236], v0[212]);
    sub_23BB888F4();
    if (v21 > 0.0)
    {
      v22 = v21;
      v23 = v0[216];
      v24 = v0[215];
      v48 = v23;
      v25 = v0[214];
      v26 = v0[213];
      v27 = v0[212];
      v28 = v0[211];
      v50 = v28;
      v51 = v0[242];
      v29 = v0[210];
      v30 = sub_23BB8AA18();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v28, 1, 1, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v23, v27);
      swift_retain();
      v31 = sub_23BB8A9E8();
      v32 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v33 = (v25 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      v34 = swift_allocObject();
      v35 = MEMORY[0x24BEE6930];
      *(_QWORD *)(v34 + 16) = v31;
      *(_QWORD *)(v34 + 24) = v35;
      v20(v34 + v32, v24, v27);
      *(double *)(v34 + v33) = v22;
      *(_QWORD *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
      v36 = sub_23B989F54(v50, (uint64_t)&unk_256A5EA48, v34);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v48, v27);
      *(_QWORD *)(v29 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipRefresherTask) = v36;
      swift_release();
      v37 = v51;
      goto LABEL_17;
    }
    (*(void (**)(_QWORD, _QWORD))(v0[213] + 8))(v0[216], v0[212]);
  }
  if (p_base_props[448] != (__objc2_prop_list *)-1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_256A73E80);
  v38 = sub_23BB891AC();
  v39 = sub_23BB8ABC8();
  v40 = os_log_type_enabled(v38, v39);
  v41 = v0[242];
  if (v40)
  {
    v42 = v0[239];
    v43 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v52 = v44;
    *(_DWORD *)v43 = 136315394;
    v0[191] = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v52);
    sub_23BB8ACB8();
    *(_WORD *)(v43 + 12) = 2080;
    swift_beginAccess();
    sub_23B989EFC(v41, v42, (uint64_t *)&unk_256A5E6B0);
    v45 = sub_23BB8A7D8();
    v0[192] = sub_23BB7B69C(v45, v46, &v52);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v38, v39, "Repository: %s - Not scheduling timer: %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v44, -1, -1);
    MEMORY[0x24260D9B4](v43, -1, -1);
  }

  v37 = v41;
LABEL_17:
  sub_23B989D60(v37, (uint64_t *)&unk_256A5E6B0);
  return swift_asyncLet_finish();
}

uint64_t sub_23BA6315C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 56) = a4;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA6317C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23BA631DC;
  return sub_23BA3FCC8(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 56));
}

uint64_t sub_23BA631DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA63258()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA63270(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 56) = a4;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA63290()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_23BA632F0;
  return sub_23BA41624(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 56));
}

uint64_t sub_23BA632F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA6336C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v28 - v12;
  v14 = sub_23BB88984();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v28 - v21;
  sub_23B989EFC(a1, (uint64_t)v13, (uint64_t *)&unk_256A5E6B0);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v23(v13, 1, v14) == 1)
  {
    sub_23B989D60((uint64_t)v13, (uint64_t *)&unk_256A5E6B0);
    return sub_23B989EFC(a2, a3, (uint64_t *)&unk_256A5E6B0);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v25(v22, v13, v14);
    sub_23B989EFC(a2, (uint64_t)v9, (uint64_t *)&unk_256A5E6B0);
    if (v23(v9, 1, v14) == 1)
    {
      sub_23B989D60((uint64_t)v9, (uint64_t *)&unk_256A5E6B0);
      v25((char *)a3, v22, v14);
    }
    else
    {
      v25(v18, v9, v14);
      sub_23B97D0C8((unint64_t *)&qword_256A5E6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      if ((sub_23BB8A73C() & 1) != 0)
        v26 = v18;
      else
        v26 = v22;
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(a3, v26, v14);
      v27 = *(void (**)(char *, uint64_t))(v15 + 8);
      v27(v18, v14);
      v27(v22, v14);
    }
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
  }
}

uint64_t sub_23BA635A4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 96) = a6;
  *(double *)(v6 + 88) = a1;
  *(_QWORD *)(v6 + 80) = a5;
  v7 = sub_23BB8AF1C();
  *(_QWORD *)(v6 + 104) = v7;
  *(_QWORD *)(v6 + 112) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 120) = swift_task_alloc();
  v8 = sub_23BB88984();
  *(_QWORD *)(v6 + 128) = v8;
  *(_QWORD *)(v6 + 136) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 144) = swift_task_alloc();
  *(_QWORD *)(v6 + 152) = swift_task_alloc();
  sub_23BB8A9F4();
  *(_QWORD *)(v6 + 160) = sub_23BB8A9E8();
  *(_QWORD *)(v6 + 168) = sub_23BB8A988();
  *(_QWORD *)(v6 + 176) = v9;
  return swift_task_switch();
}

uint64_t sub_23BA63678()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*type)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v25;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = v0[10];
  v2 = v0[19];
  v3 = v0[16];
  v4 = v0[17];
  v5 = sub_23BB891C4();
  v0[23] = __swift_project_value_buffer(v5, (uint64_t)qword_256A73E80);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[24] = v6;
  v6(v2, v1, v3);
  v7 = sub_23BB891AC();
  v8 = sub_23BB8ABEC();
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[19];
  v11 = v0[16];
  if (v9)
  {
    v12 = v0[11];
    v22 = v0[17];
    v13 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v25 = v23;
    *(_DWORD *)v13 = 136315650;
    v0[7] = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v25);
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2080;
    sub_23B97D0C8(&qword_256A5EA60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v14 = sub_23BB8B150();
    v0[8] = sub_23BB7B69C(v14, v15, &v25);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v16(v10, v11);
    *(_WORD *)(v13 + 22) = 2048;
    v0[9] = v12;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v7, v8, "Repository: %s - Scheduling timer: %s - %f", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v23, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(v0[17] + 8);
    v16(v0[19], v0[16]);
  }

  v0[25] = v16;
  v17 = sub_23BB8B384();
  v19 = v18;
  sub_23BB8AF10();
  type = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v20 = (_QWORD *)swift_task_alloc();
  v0[26] = v20;
  *v20 = v0;
  v20[1] = sub_23BA63964;
  return type(v17, v19, 0, 0, 1);
}

uint64_t sub_23BA63964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA639EC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release();
  v1(v2, v4, v3);
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABEC();
  if (os_log_type_enabled(v5, v6))
  {
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 88);
    v10 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v10 = 136315650;
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v16);
    sub_23BB8ACB8();
    *(_WORD *)(v10 + 12) = 2080;
    sub_23B97D0C8(&qword_256A5EA60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    v11 = sub_23BB8B150();
    *(_QWORD *)(v0 + 40) = sub_23BB7B69C(v11, v12, &v16);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    v15(v7, v8);
    *(_WORD *)(v10 + 22) = 2048;
    *(_QWORD *)(v0 + 48) = v9;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - Timer will trigger: %s - %f", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  }

  sub_23BA60608();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA63C40()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 216);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 216);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B290, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v10;
    sub_23BB8ACB8();
    *v8 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "Repository: %s - timer error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 216);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA63E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  *(_BYTE *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 48) = v12;
  *(_QWORD *)(v8 + 56) = v14;
  *(_OWORD *)(v8 + 32) = v11;
  *(_QWORD *)(v8 + 16) = a6;
  *(_QWORD *)(v8 + 24) = a8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CA8);
  *(_QWORD *)(v8 + 64) = swift_task_alloc();
  sub_23BB8A9F4();
  *(_QWORD *)(v8 + 72) = sub_23BB8A9E8();
  *(_QWORD *)(v8 + 80) = sub_23BB8A988();
  *(_QWORD *)(v8 + 88) = v9;
  return swift_task_switch();
}

uint64_t sub_23BA63F1C()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  _QWORD *v5;

  objc_msgSend(*(id *)(v0 + 16), sel_coordinate);
  v2 = v1;
  v4 = v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v5;
  *v5 = v0;
  v5[1] = sub_23BA63F94;
  return sub_23BA64068(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 24), v2, v4);
}

uint64_t sub_23BA63F94()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA63FE0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  char v7;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release();
  v6[0] = v4;
  v6[1] = v3;
  v7 = v2;
  swift_bridgeObjectRetain();
  sub_23BA64944(v1, (uint64_t)v6);
  swift_bridgeObjectRelease();
  sub_23B989D60(v1, &qword_256A59CA8);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA64068(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 152) = a2;
  *(double *)(v4 + 136) = a3;
  *(double *)(v4 + 144) = a4;
  *(_QWORD *)(v4 + 128) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v4 + 160) = sub_23BB8A9E8();
  *(_QWORD *)(v4 + 168) = sub_23BB8A988();
  *(_QWORD *)(v4 + 176) = v5;
  return swift_task_switch();
}

uint64_t sub_23BA640DC()
{
  double *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  double v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v14;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *((_QWORD *)v0 + 23) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v14 = v5;
    *(_DWORD *)v4 = 136315138;
    *((_QWORD *)v0 + 10) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B0E0, &v14);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "CompositeAppViewModel: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v7 = v0[17];
  v6 = v0[18];
  v8 = objc_msgSend((id)objc_opt_self(), sel_mapItemForCurrentLocation);
  *((_QWORD *)v0 + 24) = v8;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB160]), sel_initWithCoordinate_, v7, v6);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0F0]), sel_initWithPlacemark_, v9);
  *((_QWORD *)v0 + 25) = v10;

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB058]), sel_init);
  *((_QWORD *)v0 + 26) = v11;
  objc_msgSend(v11, sel_setSource_, v8);
  objc_msgSend(v11, sel_setDestination_, v10);
  objc_msgSend(v11, sel_setTransportType_, 3);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB050]), sel_initWithRequest_, v11);
  *((_QWORD *)v0 + 27) = v12;
  *((_QWORD *)v0 + 7) = v0 + 15;
  *((_QWORD *)v0 + 2) = v0;
  *((_QWORD *)v0 + 3) = sub_23BA643B8;
  *((_QWORD *)v0 + 14) = swift_continuation_init();
  *((_QWORD *)v0 + 10) = MEMORY[0x24BDAC760];
  *((_QWORD *)v0 + 11) = 0x40000000;
  *((_QWORD *)v0 + 12) = sub_23BA4C0E0;
  *((_QWORD *)v0 + 13) = &block_descriptor_1;
  objc_msgSend(v12, sel_calculateETAWithCompletionHandler_, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_23BA643B8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 224) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23BA64414()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  v1 = *(id *)(v0 + 120);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v22 = v20;
    *(_DWORD *)v4 = 136315394;
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B0E0, &v22);
    sub_23BB8ACB8();
    *(_WORD *)(v4 + 12) = 2112;
    *(_QWORD *)(v0 + 80) = v1;
    v5 = v1;
    sub_23BB8ACB8();
    *v19 = v1;

    _os_log_impl(&dword_23B979000, v2, v3, "CompositeAppViewModel: didReceive %s - %@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v20, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }
  else
  {

  }
  v7 = *(void **)(v0 + 208);
  v6 = *(void **)(v0 + 216);
  v9 = *(void **)(v0 + 192);
  v8 = *(void **)(v0 + 200);
  v21 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 128);
  v11 = objc_msgSend(v1, sel_transportType) == (id)2;
  objc_msgSend(v1, sel_expectedTravelTime);
  v12 = sub_23BB8B384();
  v14 = v13;

  v15 = type metadata accessor for DirectionsState();
  v16 = v10 + *(int *)(v15 + 24);
  v17 = sub_23BB88984();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v21, v17);
  *(_BYTE *)v10 = v11;
  *(_QWORD *)(v10 + 8) = v12;
  *(_QWORD *)(v10 + 16) = v14;
  *(_BYTE *)(v10 + 24) = 0;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 0, 1, v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA646AC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *log;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;

  v1 = *(void **)(v0 + 224);
  swift_release();
  swift_willThrow();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 224);
    v20 = *(void **)(v0 + 216);
    v21 = *(void **)(v0 + 208);
    v22 = *(void **)(v0 + 200);
    v23 = *(void **)(v0 + 192);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    log = v4;
    v9 = swift_slowAlloc();
    v24 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B0E0, &v24);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v6;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, log, v5, "CompositeAppViewModel: didReceive %s %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 216);
    v13 = *(void **)(v0 + 224);
    v15 = *(void **)(v0 + 200);
    v14 = *(void **)(v0 + 208);

  }
  v16 = *(_QWORD *)(v0 + 128);
  v17 = type metadata accessor for DirectionsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA64944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  void (*v116)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(uint64_t, uint64_t, uint64_t);
  unsigned int v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59CA8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v122 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v119 = (uint64_t)&v116 - v11;
  MEMORY[0x24BDAC7A8](v12, v13);
  v121 = (uint64_t)&v116 - v14;
  MEMORY[0x24BDAC7A8](v15, v16);
  v118 = (uint64_t)&v116 - v17;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v116 - v20;
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v116 - v24;
  v26 = type metadata accessor for DirectionsState();
  v27 = *(_QWORD **)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v28);
  v30 = (char *)&v116 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31, v32);
  v120 = (uint64_t)&v116 - v33;
  MEMORY[0x24BDAC7A8](v34, v35);
  v124 = (uint64_t)&v116 - v36;
  MEMORY[0x24BDAC7A8](v37, v38);
  v117 = (uint64_t)&v116 - v39;
  MEMORY[0x24BDAC7A8](v40, v41);
  v123 = (uint64_t)&v116 - v42;
  MEMORY[0x24BDAC7A8](v43, v44);
  v46 = (char *)&v116 - v45;
  v47 = *(_QWORD *)(a2 + 8);
  v127 = *(_QWORD *)a2;
  v126 = *(unsigned __int8 *)(a2 + 16);
  v49 = v48;
  sub_23B989EFC(a1, (uint64_t)v25, &qword_256A59CA8);
  v125 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v27[6];
  if (v125((uint64_t)v25, 1, v49) != 1)
  {
    sub_23B989CA4((uint64_t)v25, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_23BB89230();
    swift_release();
    swift_release();
    v58 = v129;
    v59 = v3;
    if (*(_QWORD *)(v129 + 16) && (v60 = sub_23B9849D4(v127, v47, v126), (v61 & 1) != 0))
    {
      sub_23B989CE8(*(_QWORD *)(v58 + 56) + v27[9] * v60, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      v62 = 0;
    }
    else
    {
      v62 = 1;
    }
    v63 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v27[7];
    v63(v21, v62, 1, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v125((uint64_t)v21, 1, v49) == 1)
    {
      v64 = v49;
      sub_23B989D60((uint64_t)v21, &qword_256A59CA8);
      if (qword_256A58E00 != -1)
        swift_once();
      v65 = sub_23BB891C4();
      __swift_project_value_buffer(v65, (uint64_t)qword_256A73E80);
      sub_23B989CE8((uint64_t)v46, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      swift_bridgeObjectRetain_n();
      v66 = sub_23BB891AC();
      v67 = sub_23BB8ABEC();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = swift_slowAlloc();
        v122 = v46;
        v69 = v68;
        v123 = swift_slowAlloc();
        v131 = v123;
        *(_DWORD *)v69 = 136315907;
        v129 = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B0C0, &v131);
        v116 = v63;
        sub_23BB8ACB8();
        *(_WORD *)(v69 + 12) = 2160;
        v129 = 1752392040;
        sub_23BB8ACB8();
        *(_WORD *)(v69 + 22) = 2081;
        v129 = 91;
        v130 = 0xE100000000000000;
        v128 = v126;
        sub_23BB8A7D8();
        v120 = v59;
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        swift_bridgeObjectRetain();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        v129 = sub_23BB7B69C(v129, v130, &v131);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v69 + 32) = 2080;
        sub_23B989CE8((uint64_t)v30, v124, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        v70 = sub_23BB8A7D8();
        v129 = sub_23BB7B69C(v70, v71, &v131);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        v63 = v116;
        sub_23B989D9C((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        _os_log_impl(&dword_23B979000, v66, v67, "Repository: %s - Add Direction - %{private,mask.hash}s %s", (uint8_t *)v69, 0x2Au);
        v72 = v123;
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v72, -1, -1);
        v73 = v69;
        v46 = v122;
        MEMORY[0x24260D9B4](v73, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23B989D9C((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      }

      v92 = v119;
      sub_23B989CE8((uint64_t)v46, v119, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      v63((char *)v92, 0, 1, v64);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      sub_23BB89230();
      swift_release();
      swift_release();
      v93 = v129;
      if (v125(v92, 1, v64) == 1)
      {
        sub_23B989D60(v92, &qword_256A59CA8);
        v94 = v121;
        sub_23BA77988(v127, v47, v126, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23B9849D4, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (void (*)(uint64_t, uint64_t))sub_23B986850, (void (*)(void))sub_23B9889EC, v121);
        swift_bridgeObjectRelease();
        sub_23B989D60(v94, &qword_256A59CA8);
        v95 = v129;
      }
      else
      {
        v106 = v92;
        v107 = v124;
        sub_23B989CA4(v106, v124, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v131 = v93;
        sub_23BAAFF68(v107, v127, v47, v126, isUniquelyReferenced_nonNull_native);
        v95 = v131;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v131 = v95;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5C40C();
      v105 = (uint64_t)v46;
      goto LABEL_41;
    }
    sub_23B989CA4((uint64_t)v21, v123, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    if ((sub_23BB888DC() & 1) != 0)
    {
      if (qword_256A58E00 != -1)
        swift_once();
      v78 = sub_23BB891C4();
      __swift_project_value_buffer(v78, (uint64_t)qword_256A73E80);
      v79 = v117;
      sub_23B989CE8((uint64_t)v46, v117, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      swift_bridgeObjectRetain_n();
      v80 = sub_23BB891AC();
      v81 = sub_23BB8ABEC();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = swift_slowAlloc();
        v116 = v63;
        v83 = v82;
        v84 = swift_slowAlloc();
        v122 = v46;
        v85 = v84;
        v131 = v84;
        *(_DWORD *)v83 = 136315907;
        v129 = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B0C0, &v131);
        v119 = v49;
        sub_23BB8ACB8();
        *(_WORD *)(v83 + 12) = 2160;
        v129 = 1752392040;
        sub_23BB8ACB8();
        *(_WORD *)(v83 + 22) = 2081;
        v129 = 91;
        v130 = 0xE100000000000000;
        v128 = v126;
        sub_23BB8A7D8();
        v120 = v59;
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        swift_bridgeObjectRetain();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        v129 = sub_23BB7B69C(v129, v130, &v131);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 32) = 2080;
        sub_23B989CE8(v79, v124, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        v86 = sub_23BB8A7D8();
        v129 = sub_23BB7B69C(v86, v87, &v131);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        v49 = v119;
        sub_23B989D9C(v79, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        _os_log_impl(&dword_23B979000, v80, v81, "Repository: %s - Replace Existing Directions - %{private,mask.hash}s %s", (uint8_t *)v83, 0x2Au);
        swift_arrayDestroy();
        v88 = v85;
        v46 = v122;
        MEMORY[0x24260D9B4](v88, -1, -1);
        v89 = v83;
        v63 = v116;
        MEMORY[0x24260D9B4](v89, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23B989D9C(v79, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      }

      v109 = v118;
      sub_23B989CE8((uint64_t)v46, v118, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      v63((char *)v109, 0, 1, v49);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      sub_23BB89230();
      swift_release();
      swift_release();
      v110 = v129;
      if (v125(v109, 1, v49) == 1)
      {
        sub_23B989D60(v109, &qword_256A59CA8);
        v111 = v121;
        sub_23BA77988(v127, v47, v126, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23B9849D4, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (void (*)(uint64_t, uint64_t))sub_23B986850, (void (*)(void))sub_23B9889EC, v121);
        swift_bridgeObjectRelease();
        sub_23B989D60(v111, &qword_256A59CA8);
        v112 = v129;
      }
      else
      {
        v113 = v109;
        v114 = v124;
        sub_23B989CA4(v113, v124, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        v115 = swift_isUniquelyReferenced_nonNull_native();
        v131 = v110;
        sub_23BAAFF68(v114, v127, v47, v126, v115);
        v112 = v131;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v131 = v112;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5C40C();
    }
    else
    {
      if (qword_256A58E00 != -1)
        swift_once();
      v96 = sub_23BB891C4();
      __swift_project_value_buffer(v96, (uint64_t)qword_256A73E80);
      v97 = v120;
      sub_23B989CE8((uint64_t)v46, v120, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      swift_bridgeObjectRetain_n();
      v98 = sub_23BB891AC();
      v99 = sub_23BB8ABEC();
      if (os_log_type_enabled(v98, v99))
      {
        v100 = swift_slowAlloc();
        v101 = swift_slowAlloc();
        v119 = v49;
        v102 = v101;
        v131 = v101;
        *(_DWORD *)v100 = 136315907;
        v129 = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B0C0, &v131);
        sub_23BB8ACB8();
        *(_WORD *)(v100 + 12) = 2160;
        v129 = 1752392040;
        sub_23BB8ACB8();
        *(_WORD *)(v100 + 22) = 2081;
        v129 = 91;
        v130 = 0xE100000000000000;
        v128 = v126;
        sub_23BB8A7D8();
        v122 = v46;
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        swift_bridgeObjectRetain();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        v129 = sub_23BB7B69C(v129, v130, &v131);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v100 + 32) = 2080;
        sub_23B989CE8(v97, v124, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        v103 = sub_23BB8A7D8();
        v129 = sub_23BB7B69C(v103, v104, &v131);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease();
        sub_23B989D9C(v97, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        _os_log_impl(&dword_23B979000, v98, v99, "Repository: %s - Not Replace Existing Directions - %{private,mask.hash}s %s", (uint8_t *)v100, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v102, -1, -1);
        MEMORY[0x24260D9B4](v100, -1, -1);

        sub_23B989D9C(v123, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        v105 = (uint64_t)v122;
LABEL_41:
        sub_23B989D9C(v105, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
        return;
      }

      sub_23B989D9C(v97, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
      swift_bridgeObjectRelease_n();
    }
    sub_23B989D9C(v123, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v105 = (uint64_t)v46;
    goto LABEL_41;
  }
  v120 = v3;
  sub_23B989D60((uint64_t)v25, &qword_256A59CA8);
  if (qword_256A58E00 != -1)
    swift_once();
  v50 = sub_23BB891C4();
  __swift_project_value_buffer(v50, (uint64_t)qword_256A73E80);
  v51 = v47;
  swift_bridgeObjectRetain_n();
  v52 = sub_23BB891AC();
  v53 = sub_23BB8ABEC();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v119 = v49;
    v56 = v55;
    v131 = v55;
    *(_DWORD *)v54 = 136315651;
    v129 = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B0C0, &v131);
    sub_23BB8ACB8();
    *(_WORD *)(v54 + 12) = 2160;
    v129 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v54 + 22) = 2081;
    v129 = 91;
    v130 = 0xE100000000000000;
    v128 = v126;
    sub_23BB8A7D8();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    swift_bridgeObjectRetain();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    v129 = sub_23BB7B69C(v129, v130, &v131);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v52, v53, "Repository: %s - Remove Direction - %{private,mask.hash}s", (uint8_t *)v54, 0x20u);
    swift_arrayDestroy();
    v57 = v56;
    v49 = v119;
    MEMORY[0x24260D9B4](v57, -1, -1);
    MEMORY[0x24260D9B4](v54, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v74 = (uint64_t)v122;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v27[7])(v122, 1, 1, v49);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_23BB89230();
  swift_release();
  swift_release();
  v75 = v129;
  if (v125(v74, 1, v49) == 1)
  {
    sub_23B989D60(v74, &qword_256A59CA8);
    v76 = v121;
    sub_23BA77988(v127, v51, v126, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23B9849D4, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (void (*)(uint64_t, uint64_t))sub_23B986850, (void (*)(void))sub_23B9889EC, v121);
    swift_bridgeObjectRelease();
    sub_23B989D60(v76, &qword_256A59CA8);
    v77 = v129;
  }
  else
  {
    v90 = v124;
    sub_23B989CA4(v74, v124, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v91 = swift_isUniquelyReferenced_nonNull_native();
    v131 = v75;
    sub_23BAAFF68(v90, v127, v51, v126, v91);
    v77 = v131;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v131 = v77;
  swift_retain();
  sub_23BB8923C();
  sub_23BA5C40C();
}

id sub_23BA65CB4()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;

  v1 = OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager;
  result = *(id *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager);
  if (!result)
  {
    v3 = v0;
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_sourceBundleId + 8);
    if (v4)
    {
      v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_sourceBundleId);
      v6 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v7 = objc_msgSend(v6, sel_mainBundle);
      v8 = objc_msgSend(v7, sel_bundleIdentifier);

      if (!v8)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      v9 = sub_23BB8A7B4();
      v11 = v10;

      if (v5 != v9 || v4 != v11)
      {
        v13 = sub_23BB8B1A4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
          goto LABEL_13;
LABEL_11:
        v14 = objc_allocWithZone((Class)type metadata accessor for Repository.MockDelegate());
        swift_bridgeObjectRetain();
        v15 = objc_msgSend(v14, sel_init);
        sub_23B99231C();
        v16 = (void *)sub_23BB8AC28();
        v17 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
        v18 = (void *)sub_23BB8A784();
        swift_bridgeObjectRelease();
        v19 = objc_msgSend(v17, sel_initWithEffectiveBundleIdentifier_delegate_onQueue_, v18, v15, v16);

        v20 = *(void **)(v3 + v1);
        *(_QWORD *)(v3 + v1) = v19;

        v21 = (void *)objc_opt_self();
        v22 = (void *)sub_23BB8A784();
        v23 = (void *)sub_23BB8A784();
        v24 = objc_msgSend(v21, sel_newAssertionForBundleIdentifier_withReason_, v22, v23);

        v25 = *(void **)(v3 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion);
        *(_QWORD *)(v3 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion) = v24;
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_13:
    v26 = objc_msgSend((id)objc_opt_self(), sel_sharedManager);
    v25 = *(void **)(v3 + v1);
    *(_QWORD *)(v3 + v1) = v26;
LABEL_14:

    result = *(id *)(v3 + v1);
    if (!result)
      return result;
  }
  return objc_msgSend(result, sel_requestWhenInUseAuthorization);
}

uint64_t sub_23BA65F38()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[22] = v0;
  v2 = sub_23BB88984();
  v1[23] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[24] = v3;
  v1[25] = *(_QWORD *)(v3 + 64);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = sub_23BB8A9F4();
  v1[31] = sub_23BB8A9E8();
  v1[32] = sub_23BB8A988();
  v1[33] = v4;
  return swift_task_switch();
}

uint64_t sub_23BA65FFC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _BYTE *v28;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  id v60;
  _QWORD *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65[2];

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  *(_QWORD *)(v0 + 272) = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v65[0] = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 168) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v65);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = *(_QWORD *)(v0 + 176);
  sub_23BB88978();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  v7 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 280) = v7;
  sub_23BA65CB4();
  v8 = *(void **)(v6 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager);
  *(_QWORD *)(v0 + 288) = v8;
  if (!v8)
  {
    swift_release();
    v18 = sub_23BB891AC();
    v19 = sub_23BB8ABD4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v65[0] = v21;
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)(v0 + 24) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v65);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v18, v19, "Repository: %s - Not Location Manager", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v21, -1, -1);
      MEMORY[0x24260D9B4](v20, -1, -1);
    }

    v22 = *(_QWORD *)(v0 + 192);
    sub_23BA7D47C();
    swift_allocError();
    *v23 = 0;
    swift_willThrow();
    goto LABEL_15;
  }
  v9 = v8;
  if ((sub_23B99AD3C((uint64_t)objc_msgSend(v9, sel_authorizationStatus), (uint64_t)&unk_250CA9B60) & 1) == 0)
  {
    swift_release();
    v24 = sub_23BB891AC();
    v25 = sub_23BB8ABD4();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v65[0] = v27;
      *(_DWORD *)v26 = 136315138;
      *(_QWORD *)(v0 + 32) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v65);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v24, v25, "Repository: %s - Not authorized", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v27, -1, -1);
      MEMORY[0x24260D9B4](v26, -1, -1);
    }

    v22 = *(_QWORD *)(v0 + 192);
    sub_23BA7D47C();
    swift_allocError();
    *v28 = 0;
    swift_willThrow();

LABEL_15:
    (*(void (**)(_QWORD, _QWORD))(v22 + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 184));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = v7;
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABEC();
  v63 = v9;
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v65[0] = v14;
    *(_DWORD *)v13 = 136315394;
    *(_QWORD *)(v0 + 144) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v65);
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2080;
    *(_QWORD *)(v0 + 152) = v7;
    v15 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E488);
    v16 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 160) = sub_23BB7B69C(v16, v17, v65);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v11, v12, "Repository: %s - alreadyFetchedLocation: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);
  }
  else
  {

  }
  if (v7)
  {
    v30 = v10;
    if (sub_23BA67D94(0.0))
    {
      swift_release();
      v31 = sub_23BB891AC();
      v32 = sub_23BB8ABEC();
      v33 = os_log_type_enabled(v31, v32);
      v34 = *(_QWORD *)(v0 + 232);
      v35 = *(_QWORD *)(v0 + 184);
      v36 = *(_QWORD *)(v0 + 192);
      if (v33)
      {
        v64 = *(_QWORD *)(v0 + 232);
        v37 = (uint8_t *)swift_slowAlloc();
        v62 = v35;
        v38 = swift_slowAlloc();
        v65[0] = v38;
        *(_DWORD *)v37 = 136315138;
        *(_QWORD *)(v0 + 136) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v65);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v31, v32, "Repository: %s - alreadyFetchedLocation: Accepted", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v38, -1, -1);
        MEMORY[0x24260D9B4](v37, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v64, v62);
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(id))(v0 + 8))(v30);
    }

  }
  v39 = sub_23BB891AC();
  v40 = sub_23BB8ABEC();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v65[0] = v42;
    *(_DWORD *)v41 = 136315138;
    *(_QWORD *)(v0 + 128) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v65);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v39, v40, "Repository: %s - alreadyFetchedLocation: Not Accepted", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v42, -1, -1);
    MEMORY[0x24260D9B4](v41, -1, -1);
  }

  v43 = sub_23BB891AC();
  v44 = sub_23BB8ABEC();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v65[0] = v46;
    *(_DWORD *)v45 = 136315138;
    *(_QWORD *)(v0 + 120) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v65);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v43, v44, "Repository: %s - will listen to stream", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v46, -1, -1);
    MEMORY[0x24260D9B4](v45, -1, -1);
  }

  v47 = *(_QWORD *)(v0 + 232);
  v49 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 224);
  v51 = *(_QWORD *)(v0 + 200);
  v50 = *(_QWORD *)(v0 + 208);
  v53 = *(_QWORD *)(v0 + 184);
  v52 = *(_QWORD *)(v0 + 192);
  sub_23BB88978();
  sub_23BB8B384();
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
  v54(v49, v48, v53);
  v54(v50, v47, v53);
  v55 = *(unsigned __int8 *)(v52 + 80);
  v56 = (v55 + 24) & ~v55;
  v57 = (v51 + v55 + v56) & ~v55;
  v58 = swift_allocObject();
  *(_QWORD *)(v0 + 296) = v58;
  *(_QWORD *)(v58 + 16) = v63;
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
  v59(v58 + v56, v49, v53);
  v59(v58 + v57, v50, v53);
  v60 = v63;
  *(_QWORD *)(v0 + 304) = sub_23BB8A9E8();
  v61 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v61;
  *(_QWORD *)(v0 + 320) = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E488);
  *v61 = v0;
  v61[1] = sub_23BA66B5C;
  return sub_23BB885F4();
}

uint64_t sub_23BA66B5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA66BE4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 40);
  return swift_task_switch();
}

uint64_t sub_23BA66C2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49[2];

  v1 = *(void **)(v0 + 336);
  if (v1)
  {
    v2 = v1;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 344) = v3;
    *v3 = v0;
    v3[1] = sub_23BA672D4;
    return sub_23BA43818((uint64_t)v2);
  }
  swift_release();
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v49[0] = v8;
    *(_DWORD *)v7 = 136315138;
    *(_QWORD *)(v0 + 88) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v49);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - No Location from CL", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);
  }

  v9 = *(id *)(v0 + 280);
  v10 = sub_23BB891AC();
  v11 = sub_23BB8ABEC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = *(void **)(v0 + 280);
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v49[0] = v14;
    *(_DWORD *)v13 = 136315394;
    *(_QWORD *)(v0 + 64) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v49);
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2080;
    *(_QWORD *)(v0 + 72) = v12;
    v15 = v12;
    v16 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(v16, v17, v49);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v10, v11, "Repository: %s - Will try alreadyFetchedLocation again: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

  }
  else
  {
    v18 = *(void **)(v0 + 280);

  }
  v19 = *(void **)(v0 + 280);
  if (v19)
  {
    v20 = v19;
    if (sub_23BA67D94(3.0))
    {
      v21 = sub_23BB891AC();
      v22 = sub_23BB8ABEC();
      v23 = os_log_type_enabled(v21, v22);
      v25 = *(void **)(v0 + 280);
      v24 = *(void **)(v0 + 288);
      v27 = *(_QWORD *)(v0 + 224);
      v26 = *(_QWORD *)(v0 + 232);
      v28 = *(_QWORD *)(v0 + 184);
      v29 = *(_QWORD *)(v0 + 192);
      if (v23)
      {
        v47 = *(void **)(v0 + 288);
        v48 = *(_QWORD *)(v0 + 224);
        v30 = (uint8_t *)swift_slowAlloc();
        v46 = v26;
        v31 = swift_slowAlloc();
        v49[0] = v31;
        *(_DWORD *)v30 = 136315138;
        *(_QWORD *)(v0 + 56) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v49);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v21, v22, "Repository: %s - alreadyFetchedLocation: Accepted", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v31, -1, -1);
        MEMORY[0x24260D9B4](v30, -1, -1);

        v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v32(v48, v28);
        v33 = v46;
      }
      else
      {

        v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v32(v27, v28);
        v33 = v26;
      }
      v32(v33, v28);
      v45 = *(_QWORD *)(v0 + 280);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v45);
    }

  }
  v34 = sub_23BB891AC();
  v35 = sub_23BB8ABEC();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v49[0] = v37;
    *(_DWORD *)v36 = 136315138;
    *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v49);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v34, v35, "Repository: %s - alreadyFetchedLocation: Not Accepted", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v37, -1, -1);
    MEMORY[0x24260D9B4](v36, -1, -1);
  }

  v39 = *(void **)(v0 + 280);
  v38 = *(void **)(v0 + 288);
  v40 = *(_QWORD *)(v0 + 224);
  v41 = *(_QWORD *)(v0 + 184);
  v42 = *(_QWORD *)(v0 + 192);
  sub_23BA7D47C();
  swift_allocError();
  *v43 = 0;
  swift_willThrow();

  v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v44(v40, v41);
  v44(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 184));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA672D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  v6 = (_QWORD *)*v4;
  v6[44] = a3;
  v6[45] = v3;
  swift_task_dealloc();
  if (!v3)
    v6[46] = a2;
  return swift_task_switch();
}

uint64_t sub_23BA67348()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 328);
  swift_release();

  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA67394()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46[2];

  swift_release();
  v1 = sub_23BB891AC();
  v2 = sub_23BB8ABD4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v46[0] = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 88) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v46);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v1, v2, "Repository: %s - No Location from CL", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v4, -1, -1);
    MEMORY[0x24260D9B4](v3, -1, -1);
  }

  v5 = *(id *)(v0 + 280);
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 280);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v46[0] = v10;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 64) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v46);
    sub_23BB8ACB8();
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 72) = v8;
    v11 = v8;
    v12 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 80) = sub_23BB7B69C(v12, v13, v46);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v6, v7, "Repository: %s - Will try alreadyFetchedLocation again: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 280);

  }
  v15 = *(void **)(v0 + 280);
  if (v15)
  {
    v16 = v15;
    if (sub_23BA67D94(3.0))
    {
      v17 = sub_23BB891AC();
      v18 = sub_23BB8ABEC();
      v19 = os_log_type_enabled(v17, v18);
      v21 = *(void **)(v0 + 280);
      v20 = *(void **)(v0 + 288);
      v23 = *(_QWORD *)(v0 + 224);
      v22 = *(_QWORD *)(v0 + 232);
      v24 = *(_QWORD *)(v0 + 184);
      v25 = *(_QWORD *)(v0 + 192);
      if (v19)
      {
        v44 = *(void **)(v0 + 288);
        v45 = *(_QWORD *)(v0 + 224);
        v26 = (uint8_t *)swift_slowAlloc();
        v43 = v22;
        v27 = swift_slowAlloc();
        v46[0] = v27;
        *(_DWORD *)v26 = 136315138;
        *(_QWORD *)(v0 + 56) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v46);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v17, v18, "Repository: %s - alreadyFetchedLocation: Accepted", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v27, -1, -1);
        MEMORY[0x24260D9B4](v26, -1, -1);

        v28 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        v28(v45, v24);
        v29 = v43;
      }
      else
      {

        v28 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        v28(v23, v24);
        v29 = v22;
      }
      v28(v29, v24);
      v42 = *(_QWORD *)(v0 + 280);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v42);
    }

  }
  v30 = sub_23BB891AC();
  v31 = sub_23BB8ABEC();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v46[0] = v33;
    *(_DWORD *)v32 = 136315138;
    *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, v46);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v30, v31, "Repository: %s - alreadyFetchedLocation: Not Accepted", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v33, -1, -1);
    MEMORY[0x24260D9B4](v32, -1, -1);
  }

  v35 = *(void **)(v0 + 280);
  v34 = *(void **)(v0 + 288);
  v36 = *(_QWORD *)(v0 + 224);
  v37 = *(_QWORD *)(v0 + 184);
  v38 = *(_QWORD *)(v0 + 192);
  sub_23BA7D47C();
  swift_allocError();
  *v39 = 0;
  swift_willThrow();

  v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v40(v36, v37);
  v40(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 184));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA679CC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(void **)(v0 + 352);
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)(v0 + 96) = v1;
  v2 = v1;
  swift_retain();
  sub_23BB8923C();
  sub_23BA5C6C8();
  v3 = v2;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABEC();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 352);
    v27 = *(void **)(v0 + 336);
    v28 = *(void **)(v0 + 288);
    v32 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 192);
    v30 = *(void **)(v0 + 280);
    v31 = *(_QWORD *)(v0 + 184);
    v7 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    v34 = v26;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 104) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, &v34);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2080;
    v8 = v6;
    v9 = objc_msgSend(v8, sel_description);
    v10 = sub_23BB8A7B4();
    v12 = v11;

    *(_QWORD *)(v0 + 112) = sub_23BB7B69C(v10, v12, &v34);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23B979000, v4, v5, "Repository: %s - Finish with location: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v26, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

    v13 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v13(v32, v31);
    v14 = v33;
    v15 = v31;
  }
  else
  {
    v16 = *(void **)(v0 + 352);
    v17 = *(void **)(v0 + 336);
    v19 = *(void **)(v0 + 280);
    v18 = *(void **)(v0 + 288);
    v21 = *(_QWORD *)(v0 + 224);
    v20 = *(_QWORD *)(v0 + 232);
    v22 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 192);

    v13 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v13(v21, v22);
    v14 = v20;
    v15 = v22;
  }
  v13(v14, v15);
  v24 = *(_QWORD *)(v0 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
}

uint64_t sub_23BA67CEC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 336);
  v3 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 192);
  swift_release();

  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 184));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_23BA67D94(double a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v3 = sub_23BB88984();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, sel_horizontalAccuracy);
  v9 = v8;
  v10 = a1 * 170.0 + 30.0;
  if (a1 < 0.0)
    v10 = 30.0;
  if (a1 <= 1.0)
    v11 = v10;
  else
    v11 = 200.0;
  objc_msgSend(v1, sel_horizontalAccuracy, v10);
  v13 = v12;
  v14 = objc_msgSend(v1, sel_timestamp);
  sub_23BB8896C();

  sub_23BB8887C();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  if (qword_256A58E00 != -1)
    swift_once();
  v17 = sub_23BB891C4();
  __swift_project_value_buffer(v17, (uint64_t)qword_256A73E80);
  v18 = sub_23BB891AC();
  v19 = sub_23BB8ABC8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v32 = v21;
    *(_DWORD *)v20 = 136315394;
    v31 = sub_23BB7B69C(0xD00000000000003FLL, 0x800000023BB9B150, &v32);
    sub_23BB8ACB8();
    *(_WORD *)(v20 + 12) = 1024;
    LODWORD(v31) = v16 < 300.0;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v18, v19, "CompositeAppViewModel: %s - isAgeOk: %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v21, -1, -1);
    MEMORY[0x24260D9B4](v20, -1, -1);
  }

  v22 = sub_23BB891AC();
  v23 = sub_23BB8ABC8();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v32 = v25;
    *(_DWORD *)v24 = 136315394;
    v31 = sub_23BB7B69C(0xD00000000000003FLL, 0x800000023BB9B150, &v32);
    sub_23BB8ACB8();
    *(_WORD *)(v24 + 12) = 1024;
    LODWORD(v31) = v9 < 30.0;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v22, v23, "CompositeAppViewModel: %s - isAccuracy: %{BOOL}d", (uint8_t *)v24, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v25, -1, -1);
    MEMORY[0x24260D9B4](v24, -1, -1);
  }

  v26 = sub_23BB891AC();
  v27 = sub_23BB8ABC8();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v32 = v29;
    *(_DWORD *)v28 = 136315394;
    v31 = sub_23BB7B69C(0xD00000000000003FLL, 0x800000023BB9B150, &v32);
    sub_23BB8ACB8();
    *(_WORD *)(v28 + 12) = 1024;
    LODWORD(v31) = v13 < v11;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v26, v27, "CompositeAppViewModel: %s - isAccuracyOkConsideringTimePassed: %{BOOL}d", (uint8_t *)v28, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v29, -1, -1);
    MEMORY[0x24260D9B4](v28, -1, -1);
  }

  if (v16 >= 300.0)
    return 0;
  if (v13 < v11)
    return 1;
  return v9 < 30.0;
}

uint64_t sub_23BA6827C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E820);
  v4[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E828);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v5 = sub_23BB88A68();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = sub_23BB88A80();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E830);
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v4[19] = v8;
  v4[20] = *(_QWORD *)(v8 - 8);
  v4[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA683BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 152);
  v14 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v15 = *(_OWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 104))(*(_QWORD *)(v0 + 144), *MEMORY[0x24BEE6A10], *(_QWORD *)(v0 + 128));
  sub_23BB8AA6C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x24BEE5148], v5);
  sub_23BB8ABF8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v7, v1, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v7 + *(int *)(v6 + 52), v2, v14);
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v8;
  *(_OWORD *)(v8 + 16) = v15;
  *(_QWORD *)&v15 = (char *)&dword_256A5E850 + dword_256A5E850;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v9;
  *v9 = v0;
  v9[1] = sub_23BA6853C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(*(_QWORD *)(v0 + 72), (uint64_t)&unk_256A5E848, v8);
}

uint64_t sub_23BA6853C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23B989D60(v1, &qword_256A5E820);
  return swift_task_switch();
}

uint64_t sub_23BA685AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64);
  sub_23B989EFC(*(_QWORD *)(v0 + 72), v1, &qword_256A5E828);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E858);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  v4 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(uint64_t **)(v0 + 16);
  if (v3 == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 72), &qword_256A5E828);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v5);
    sub_23B989D60(v9, &qword_256A5E828);
    *v11 = 0;
  }
  else
  {
    v12 = v9 + *(int *)(v2 + 48);
    v13 = sub_23BB88A8C();
    sub_23B989D60(v10, &qword_256A5E828);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v5);
    *v11 = v13;
    v14 = sub_23BB88A98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA6874C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E998);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_23BB6BAC0((uint64_t)v9, (uint64_t)&unk_256A5E9A8, v12);
  return swift_release();
}

uint64_t sub_23BA68884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[8] = a4;
  v5 = sub_23BB8AF04();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v6 = sub_23BB8AF1C();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E9B0);
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA68948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  _QWORD *v7;
  uint64_t v9;

  sub_23BB8AA9C();
  *(_QWORD *)(v0 + 152) = 0;
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 56) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E998);
  sub_23BB8AA3C();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  sub_23BB8AF10();
  *(_OWORD *)(v0 + 40) = xmmword_23BB91DD0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_23B97D0C8(&qword_256A5AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_23BB8B1EC();
  sub_23B97D0C8((unint64_t *)&unk_256A5E9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_23BB8AF28();
  v6 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  *(_QWORD *)(v0 + 160) = v6;
  v6(v4, v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v7;
  *v7 = v0;
  v7[1] = sub_23BA68B1C;
  return sub_23BB8B1F8();
}

uint64_t sub_23BA68B1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 160))(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 72));
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 112);
    v3 = *(_QWORD *)(v2 + 120);
    v5 = *(_QWORD *)(v2 + 104);
    (*(void (**)(_QWORD, _QWORD))(v2 + 160))(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 72));
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  return swift_task_switch();
}

uint64_t sub_23BA68BBC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(double *)(v0 + 152);
  sub_23BB8AA9C();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(double *)(v0 + 152) = v2 + 1.0;
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 72);
    *(double *)(v0 + 56) = v2 + 1.0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E998);
    sub_23BB8AA3C();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    sub_23BB8AF10();
    *(_OWORD *)(v0 + 40) = xmmword_23BB91DD0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 16) = 0;
    *(_BYTE *)(v0 + 32) = 1;
    sub_23B97D0C8(&qword_256A5AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
    sub_23BB8B1EC();
    sub_23B97D0C8((unint64_t *)&unk_256A5E9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
    sub_23BB8AF28();
    v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    *(_QWORD *)(v0 + 160) = v9;
    v9(v7, v8);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v10;
    *v10 = v0;
    v10[1] = sub_23BA68B1C;
    return sub_23BB8B1F8();
  }
}

uint64_t sub_23BA68DA8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA68E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v4 = sub_23BB88984();
  v3[7] = v4;
  v3[8] = *(_QWORD *)(v4 - 8);
  v3[9] = swift_task_alloc();
  v3[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E858);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA68EC8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  double v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v36;
  os_log_type_t type;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD **)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = sub_23BB891C4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256A73E80);
  v6 = *(int *)(v4 + 48);
  v7 = (char *)v2 + v6;
  v8 = (char *)v1 + v6;
  *v2 = *v1;
  v9 = sub_23BB88A98();
  v39 = *(_QWORD *)(v9 - 8);
  v38 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v38(v7, v8, v9);
  sub_23B990D24((uint64_t)v2, v3, &qword_256A5E858);
  v10 = sub_23BB891AC();
  v11 = sub_23BB8ABC8();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(uint64_t **)(v0 + 104);
  if (v12)
  {
    v14 = v4;
    type = v11;
    v15 = *(_QWORD **)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 96);
    v17 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v40 = v36;
    *(_DWORD *)v17 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000014, 0x800000023BB9B130, &v40);
    sub_23BB8ACB8();
    *(_WORD *)(v17 + 12) = 2080;
    v18 = *(int *)(v14 + 48);
    v19 = (char *)(v16 + v18);
    v20 = *v13;
    v38(v19, (char *)v13 + v18, v9);
    v21 = (char *)v15 + *(int *)(v14 + 48);
    *v15 = v20;
    v22 = v19;
    v4 = v14;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v21, v22, v9);
    v23 = sub_23BB8A7D8();
    *(_QWORD *)(v0 + 24) = sub_23BB7B69C(v23, v24, &v40);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    sub_23B989D60((uint64_t)v13, &qword_256A5E858);
    _os_log_impl(&dword_23B979000, v10, type, "Repository: %s - proposed location: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v36, -1, -1);
    MEMORY[0x24260D9B4](v17, -1, -1);
  }
  else
  {
    sub_23B989D60(*(_QWORD *)(v0 + 104), &qword_256A5E858);
  }

  v25 = *(_QWORD **)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 64);
  v26 = *(_QWORD *)(v0 + 72);
  v28 = *(_QWORD *)(v0 + 56);
  v29 = *(_QWORD **)(v0 + 32);
  sub_23BB88978();
  sub_23BB8887C();
  v31 = v30;
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  v32 = (char *)v25 + *(int *)(v4 + 48);
  *v25 = *v29;
  v38(v32, v8, v9);
  v33 = sub_23BB88A8C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v9);
  if (v33)
  {
    v34 = (id)v33;
    LOBYTE(v33) = sub_23BA67D94(v31 / 3.0);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v33 & 1);
}

uint64_t sub_23BA69270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E858);
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = swift_task_alloc();
  v4[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E860);
  v4[13] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  v4[14] = v6;
  v4[15] = *(_QWORD *)(v6 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E828);
  v4[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E870);
  v4[20] = swift_task_alloc();
  v7 = sub_23BB88A80();
  v4[21] = v7;
  v4[22] = *(_QWORD *)(v7 - 8);
  v4[23] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v4[24] = v8;
  v4[25] = *(_QWORD *)(v8 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E820);
  v4[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23BA6940C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  _QWORD *v12;

  v2 = v0[27];
  v1 = v0[28];
  v4 = v0[25];
  v3 = v0[26];
  v6 = v0[23];
  v5 = v0[24];
  v8 = v0[21];
  v7 = v0[22];
  v9 = v0[20];
  sub_23B989EFC(v0[8], v1, &qword_256A5E820);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v1 + *(int *)(v2 + 52), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E878);
  swift_allocObject();
  v10 = sub_23BA52A08(v3, v6, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E880);
  inited = swift_initStackObject();
  v0[29] = inited;
  *(_QWORD *)(inited + 16) = v10;
  sub_23B989D60(v1, &qword_256A5E820);
  v12 = (_QWORD *)swift_task_alloc();
  v0[30] = (uint64_t)v12;
  *v12 = v0;
  v12[1] = sub_23BA69578;
  return sub_23BB8B1B0();
}

uint64_t sub_23BA69578()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 248) = v0;
  return swift_task_switch();
}

uint64_t sub_23BA695DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(uint64_t **)(v0 + 104);
  v3 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 48))(v2, 1, v1);
  v4 = *(_QWORD *)(v0 + 152);
  if (v3 == 1)
  {
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    sub_23B989D60((uint64_t)v2, &qword_256A5E860);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v7(v4, 1, 1, v5);
  }
  else
  {
    v9 = *(_QWORD **)(v0 + 136);
    v8 = *(uint64_t **)(v0 + 144);
    v38 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD **)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 72);
    v33 = v11;
    v34 = *(_QWORD **)(v0 + 128);
    v12 = *(int *)(v1 + 48);
    v13 = (char *)v8 + v12;
    v14 = *(int *)(v1 + 64);
    v31 = (uint64_t)v8 + v14;
    v15 = (char *)v2 + v12;
    v35 = (uint64_t)v2 + v14;
    v16 = *v2;
    *v8 = *v2;
    v17 = sub_23BB88A98();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v37 = v18;
    v19(v13, v15, v17);
    sub_23B990D24(v35, v31, &qword_256A59710);
    v20 = *(int *)(v11 + 48);
    v21 = v10;
    v32 = (char *)v10 + v20;
    v36 = (char *)v9 + *(int *)(v1 + 48);
    v22 = (uint64_t)v9 + *(int *)(v1 + 64);
    *v9 = v16;
    (*(void (**)(void))(v18 + 16))();
    sub_23B989EFC(v31, v22, &qword_256A59710);
    *v21 = v16;
    v23 = (char *)v34 + *(int *)(v1 + 48);
    v24 = (uint64_t)v34 + *(int *)(v1 + 64);
    *v34 = v16;
    v19(v23, v13, v17);
    sub_23B990D24(v31, v24, &qword_256A59710);
    v19(v32, v23, v17);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
    v7((uint64_t)v21, 0, 1, v33);
    sub_23B989D60(v24, &qword_256A59710);
    sub_23B989D60(v22, &qword_256A59710);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v17);
  }
  *(_QWORD *)(v0 + 256) = v7;
  v25 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 48))(v25, 1, v26) == 1)
  {
    v27 = *(_QWORD *)(v0 + 40);
    swift_setDeallocating();
    sub_23BA4E13C();
    swift_release();
    v7(v27, 1, 1, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v29 = *(int **)(v0 + 48);
    sub_23B990D24(v25, *(_QWORD *)(v0 + 88), &qword_256A5E858);
    v39 = (uint64_t (*)(_QWORD))((char *)v29 + *v29);
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v30;
    *v30 = v0;
    v30[1] = sub_23BA699F4;
    return v39(*(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_23BA6992C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA699F4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 272) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23B989D60(*(_QWORD *)(v4 + 88), &qword_256A5E858);
    swift_release();
  }
  else
  {
    *(_BYTE *)(v4 + 288) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_23BA69A88()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  if (*(_BYTE *)(v0 + 288) == 1)
  {
    v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 256);
    v2 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 40);
    swift_setDeallocating();
    sub_23BA4E13C();
    swift_release();
    sub_23B990D24(v2, v4, &qword_256A5E858);
    v1(v4, 0, 1, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_23B989D60(*(_QWORD *)(v0 + 88), &qword_256A5E858);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v6;
    *v6 = v0;
    v6[1] = sub_23BA69CE4;
    return sub_23BB8B1B0();
  }
}

uint64_t sub_23BA69C24()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA69CE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 248) = v0;
  return swift_task_switch();
}

uint64_t sub_23BA69D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  __int128 v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  void *v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  isUniquelyReferenced_nonNull_native = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v59 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58E00 != -1)
LABEL_34:
    swift_once();
  v7 = sub_23BB891C4();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_256A73E80);
  swift_bridgeObjectRetain_n();
  v62 = v8;
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABEC();
  v11 = os_log_type_enabled(v9, v10);
  v12 = MEMORY[0x24BEE4AD8];
  v64 = isUniquelyReferenced_nonNull_native;
  if (v11)
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v66 = v14;
    *(_DWORD *)v13 = 136315394;
    v65 = sub_23BB7B69C(0xD00000000000001DLL, 0x800000023BB9B3A0, &v66);
    sub_23BB8ACB8();
    *(_WORD *)(v13 + 12) = 2080;
    v15 = swift_bridgeObjectRetain();
    v16 = MEMORY[0x24260C844](v15, &type metadata for Handle);
    v18 = v17;
    swift_bridgeObjectRelease();
    v65 = sub_23BB7B69C(v16, v18, &v66);
    isUniquelyReferenced_nonNull_native = v64;
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v9, v10, "Repository: %s - %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

    v19 = *(_QWORD *)(a1 + 16);
    if (!v19)
      goto LABEL_31;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v19 = *(_QWORD *)(a1 + 16);
    if (!v19)
    {
LABEL_31:
      v51 = sub_23BB8AA18();
      v52 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v59, 1, 1, v51);
      sub_23BB8A9F4();
      swift_bridgeObjectRetain();
      swift_retain();
      v53 = sub_23BB8A9E8();
      v54 = (_QWORD *)swift_allocObject();
      v55 = MEMORY[0x24BEE6930];
      v54[2] = v53;
      v54[3] = v55;
      v54[4] = a1;
      v54[5] = isUniquelyReferenced_nonNull_native;
      sub_23B989F54(v52, (uint64_t)&unk_256A5ECA0, (uint64_t)v54);
      return swift_release();
    }
  }
  swift_bridgeObjectRetain();
  v58 = a1;
  v20 = (unsigned __int8 *)(a1 + 48);
  *(_QWORD *)&v21 = 136315138;
  v61 = v21;
  v60 = v12 + 8;
  while (1)
  {
    v22 = *((_QWORD *)v20 - 2);
    a1 = *((_QWORD *)v20 - 1);
    v23 = *v20;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain_n();
    sub_23BB89230();
    swift_release();
    swift_release();
    v24 = v66;
    if (!*(_QWORD *)(v66 + 16))
      break;
    v25 = sub_23B9849D4(v22, a1, v23);
    if ((v26 & 1) == 0)
      break;
    v27 = (uint64_t *)(*(_QWORD *)(v24 + 56) + 32 * v25);
    v28 = (void *)v27[2];
    sub_23B9894A0(*v27, v27[1], v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
      if (v28 == (void *)1)
        goto LABEL_16;
      swift_bridgeObjectRelease();

    }
    swift_bridgeObjectRelease();
LABEL_9:
    v20 += 24;
    if (!--v19)
    {
      a1 = v58;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_16:
  v63 = v19;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23BB89230();
  swift_release();
  swift_release();
  v29 = v66;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v66 = v29;
  v31 = sub_23B9849D4(v22, a1, v23);
  v32 = *(_QWORD *)(v29 + 16);
  v33 = (v30 & 1) == 0;
  v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v35 = v30;
  if (*(_QWORD *)(v29 + 24) >= v34)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = v66;
      if ((v30 & 1) != 0)
        goto LABEL_23;
    }
    else
    {
      sub_23B9883AC();
      isUniquelyReferenced_nonNull_native = v66;
      if ((v35 & 1) != 0)
        goto LABEL_23;
    }
LABEL_26:
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * (v31 >> 6) + 64) |= 1 << v31;
    v39 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 24 * v31;
    *(_QWORD *)v39 = v22;
    *(_QWORD *)(v39 + 8) = a1;
    *(_BYTE *)(v39 + 16) = v23;
    v40 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 32 * v31;
    *(_QWORD *)v40 = 0;
    *(_QWORD *)(v40 + 8) = 0;
    *(_BYTE *)(v40 + 24) = 0;
    *(_QWORD *)(v40 + 16) = 0;
    v41 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_33;
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v43;
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  sub_23BB4C494(v34, isUniquelyReferenced_nonNull_native);
  v36 = sub_23B9849D4(v22, a1, v23);
  if ((v35 & 1) == (v37 & 1))
  {
    v31 = v36;
    isUniquelyReferenced_nonNull_native = v66;
    if ((v35 & 1) == 0)
      goto LABEL_26;
LABEL_23:
    v38 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 32 * v31;
    sub_23B9A13A4(*(_QWORD *)v38, *(_QWORD *)(v38 + 8), *(void **)(v38 + 16));
    *(_QWORD *)v38 = 0;
    *(_QWORD *)(v38 + 8) = 0;
    *(_BYTE *)(v38 + 24) = 0;
    *(_QWORD *)(v38 + 16) = 0;
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    v66 = isUniquelyReferenced_nonNull_native;
    isUniquelyReferenced_nonNull_native = v64;
    swift_retain();
    sub_23BB8923C();
    swift_retain_n();
    v44 = sub_23BB891AC();
    v45 = sub_23BB8ABEC();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v66 = v47;
      *(_DWORD *)v46 = v61;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23BB89230();
      swift_release();
      swift_release();
      sub_23BA7D0E4();
      v48 = sub_23BB8A6C4();
      v50 = v49;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v46 + 4) = sub_23BB7B69C(v48, v50, &v66);
      swift_release_n();
      isUniquelyReferenced_nonNull_native = v64;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v44, v45, "Repository: locationStateByHandle - %s", (uint8_t *)v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v47, -1, -1);
      MEMORY[0x24260D9B4](v46, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v19 = v63;
    goto LABEL_9;
  }
  result = sub_23BB8B1E0();
  __break(1u);
  return result;
}

uint64_t sub_23BA6A4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[10] = a4;
  v5[11] = a5;
  v6 = sub_23BB8AF1C();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = swift_task_alloc();
  sub_23BB8A9F4();
  v5[15] = sub_23BB8A9E8();
  v5[16] = sub_23BB8A988();
  v5[17] = v7;
  return swift_task_switch();
}

uint64_t sub_23BA6A554()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_23BA6A5D4;
  return v3(0x8AC7230489E80000, 0, 0, 0, 1);
}

uint64_t sub_23BA6A5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA6A65C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  swift_release();
  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  swift_bridgeObjectRetain_n();
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v39 = v38;
    *(_DWORD *)v4 = 136315394;
    *(_QWORD *)(v0 + 64) = sub_23BB7B69C(0xD00000000000001DLL, 0x800000023BB9B3A0, &v39);
    sub_23BB8ACB8();
    *(_WORD *)(v4 + 12) = 2080;
    v5 = swift_bridgeObjectRetain();
    v6 = MEMORY[0x24260C844](v5, &type metadata for Handle);
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_23BB7B69C(v6, v8, &v39);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: %s - Will remove .loading - %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v38, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 16);
  if (v9)
  {
    v10 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    v11 = &unk_23BB91C00;
    do
    {
      v13 = *((_QWORD *)v10 - 2);
      v12 = *((_QWORD *)v10 - 1);
      v14 = *v10;
      swift_getKeyPath();
      v15 = v11;
      swift_getKeyPath();
      swift_bridgeObjectRetain_n();
      sub_23BB89230();
      swift_release();
      swift_release();
      v16 = *(_QWORD *)(v0 + 32);
      if (*(_QWORD *)(v16 + 16) && (v17 = sub_23B9849D4(v13, v12, v14), (v18 & 1) != 0))
      {
        v19 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 32 * v17);
        v20 = (void *)v19[2];
        sub_23B9894A0(*v19, v19[1], v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20)
        {
          if (v20 != (void *)1)
          {
            swift_bridgeObjectRelease();

          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_getKeyPath();
          swift_getKeyPath();
          sub_23BB89230();
          swift_release();
          swift_release();
          v21 = *(_QWORD *)(v0 + 40);
          swift_bridgeObjectRetain();
          v22 = sub_23B9849D4(v13, v12, v14);
          v24 = v23;
          swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v39 = v21;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_23B9883AC();
              v21 = v39;
            }
            swift_bridgeObjectRelease();
            v26 = (uint64_t *)(*(_QWORD *)(v21 + 56) + 32 * v22);
            v27 = *v26;
            v28 = v26[1];
            v29 = (void *)v26[2];
            sub_23B986624(v22, v21);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23B9A13A4(v27, v28, v29);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_getKeyPath();
          swift_getKeyPath();
          *(_QWORD *)(v0 + 48) = v21;
          swift_retain();
          sub_23BB8923C();
          swift_retain_n();
          v30 = sub_23BB891AC();
          v31 = sub_23BB8ABEC();
          if (os_log_type_enabled(v30, v31))
          {
            v36 = swift_slowAlloc();
            v37 = swift_slowAlloc();
            v39 = v37;
            *(_DWORD *)v36 = 136315138;
            swift_getKeyPath();
            swift_getKeyPath();
            sub_23BB89230();
            swift_release();
            swift_release();
            sub_23BA7D0E4();
            v32 = sub_23BB8A6C4();
            v34 = v33;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v36 + 4) = sub_23BB7B69C(v32, v34, &v39);
            swift_bridgeObjectRelease();
            swift_release_n();
            _os_log_impl(&dword_23B979000, v30, v31, "Repository: locationStateByHandle - %s", (uint8_t *)v36, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24260D9B4](v37, -1, -1);
            MEMORY[0x24260D9B4](v36, -1, -1);
          }
          else
          {
            swift_release_n();
          }

        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      v10 += 24;
      --v9;
      v11 = v15;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA6ACA4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  swift_release();
  if (qword_256A58E00 != -1)
    swift_once();
  v1 = *(void **)(v0 + 152);
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 152);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v11;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000001DLL, 0x800000023BB9B3A0, &v15);
    sub_23BB8ACB8();
    *(_WORD *)(v9 + 12) = 2112;
    v12 = v8;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v13;
    sub_23BB8ACB8();
    *v10 = v13;

    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - Error: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA6AEFC(uint64_t a1, unint64_t a2, void *a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  void *v39;
  unsigned __int8 v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  id v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  unint64_t v88;
  void *v89;
  char v90;
  uint64_t v91;
  uint64_t v92[2];

  v6 = v5;
  v84 = a4;
  v83 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23BB88984();
  v80 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v79 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v78 = (char *)&v74 - v19;
  v20 = *(_QWORD *)(a5 + 8);
  v85 = *(_QWORD *)a5;
  v86 = *(unsigned __int8 *)(a5 + 16);
  if (qword_256A58E00 != -1)
    swift_once();
  v21 = sub_23BB891C4();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_256A73E80);
  swift_bridgeObjectRetain_n();
  v23 = a3;
  swift_bridgeObjectRetain_n();
  v24 = v23;
  v82 = v22;
  v25 = sub_23BB891AC();
  v26 = sub_23BB8ABEC();
  v27 = os_log_type_enabled(v25, v26);
  v81 = v24;
  if (v27)
  {
    v28 = swift_slowAlloc();
    v75 = v14;
    v29 = v24;
    v30 = v28;
    v31 = swift_slowAlloc();
    v77 = v13;
    v74 = v31;
    v92[0] = v31;
    *(_DWORD *)v30 = 136315907;
    v87 = sub_23BB7B69C(0xD000000000000025, 0x800000023BB9B400, v92);
    v76 = v6;
    sub_23BB8ACB8();
    *(_WORD *)(v30 + 12) = 2160;
    v87 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v30 + 22) = 2081;
    v87 = 91;
    v88 = 0xE100000000000000;
    LOBYTE(v91) = v86;
    sub_23BB8A7D8();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    swift_bridgeObjectRetain();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    v87 = sub_23BB7B69C(v87, v88, v92);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 32) = 2080;
    v87 = v83;
    v88 = a2;
    v89 = v29;
    v90 = v84;
    swift_bridgeObjectRetain();
    v32 = v29;
    v14 = v75;
    v33 = v32;
    v34 = sub_23BB8A7D8();
    v87 = sub_23BB7B69C(v34, v35, v92);
    sub_23BB8ACB8();

    v6 = v76;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v25, v26, "Repository: %s - Insert Message Location - %{private,mask.hash}s %s", (uint8_t *)v30, 0x2Au);
    v36 = v74;
    swift_arrayDestroy();
    v13 = v77;
    MEMORY[0x24260D9B4](v36, -1, -1);
    MEMORY[0x24260D9B4](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (qword_256A58CD8 != -1)
    swift_once();
  if (byte_256A5F830 == 1)
  {
    v37 = (void *)qword_256A5F828;
    swift_bridgeObjectRetain();
    v38 = v37;
    v39 = (void *)sub_23BB8A784();
    v40 = objc_msgSend(v38, sel_BOOLForKey_, v39);

    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
      goto LABEL_10;
LABEL_15:
    v48 = sub_23BB891AC();
    v49 = sub_23BB8ABEC();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v92[0] = v51;
      *(_DWORD *)v50 = 136315138;
      v91 = sub_23BB7B69C(0xD000000000000025, 0x800000023BB9B400, v92);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v48, v49, "Repository: %s - Skipping", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v51, -1, -1);
      MEMORY[0x24260D9B4](v50, -1, -1);
    }

    return;
  }
  swift_beginAccess();
  if ((byte_256A5F831 & 1) != 0)
    goto LABEL_15;
LABEL_10:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_23BB89230();
  swift_release();
  swift_release();
  v41 = v92[0];
  if (!*(_QWORD *)(v92[0] + 16) || (v42 = sub_23B9849D4(v85, v20, v86), (v43 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v44 = (uint64_t *)(*(_QWORD *)(v41 + 56) + 32 * v42);
  v45 = *v44;
  v46 = v44[1];
  v47 = (void *)v44[2];
  sub_23B9894A0(*v44, v46, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)v47 < 2)
  {
    sub_23B9A13A4(v45, v46, v47);
LABEL_19:
    v52 = v81;
    v53 = sub_23BB8AA18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v13, 1, 1, v53);
    sub_23BB8A9F4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = v52;
    swift_retain();
    v55 = sub_23BB8A9E8();
    v56 = swift_allocObject();
    v57 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v56 + 16) = v55;
    *(_QWORD *)(v56 + 24) = v57;
    v58 = v83;
    *(_QWORD *)(v56 + 32) = v6;
    *(_QWORD *)(v56 + 40) = v58;
    *(_QWORD *)(v56 + 48) = a2;
    *(_QWORD *)(v56 + 56) = v54;
    *(_BYTE *)(v56 + 64) = v84;
    *(_QWORD *)(v56 + 72) = v85;
    *(_QWORD *)(v56 + 80) = v20;
    *(_BYTE *)(v56 + 88) = v86;
    sub_23B989F54((uint64_t)v13, (uint64_t)&unk_256A5ECB0, v56);
    swift_release();
    return;
  }
  v77 = (char *)v46;
  v59 = objc_msgSend(v81, sel_timestamp);
  v60 = v78;
  sub_23BB8896C();

  v61 = objc_msgSend(v47, sel_timestamp);
  v62 = v79;
  sub_23BB8896C();

  LOBYTE(v61) = sub_23BB888DC();
  v63 = *(void (**)(char *, uint64_t))(v80 + 8);
  v63(v62, v14);
  v63(v60, v14);
  if ((v61 & 1) != 0)
  {
    v64 = sub_23BB8AA18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v13, 1, 1, v64);
    sub_23BB8A9F4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65 = v81;
    swift_retain();
    v66 = sub_23BB8A9E8();
    v67 = swift_allocObject();
    v68 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v67 + 16) = v66;
    *(_QWORD *)(v67 + 24) = v68;
    v69 = v83;
    *(_QWORD *)(v67 + 32) = v6;
    *(_QWORD *)(v67 + 40) = v69;
    *(_QWORD *)(v67 + 48) = a2;
    *(_QWORD *)(v67 + 56) = v65;
    *(_BYTE *)(v67 + 64) = v84;
    *(_QWORD *)(v67 + 72) = v85;
    *(_QWORD *)(v67 + 80) = v20;
    *(_BYTE *)(v67 + 88) = v86;
    sub_23B989F54((uint64_t)v13, (uint64_t)&unk_256A5ECB8, v67);

    swift_release();
  }
  else
  {
    v70 = sub_23BB891AC();
    v71 = sub_23BB8ABEC();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v92[0] = v73;
      *(_DWORD *)v72 = 136315138;
      v91 = sub_23BB7B69C(0xD000000000000025, 0x800000023BB9B400, v92);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v70, v71, "Repository: %s - Not Using Message Location", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v73, -1, -1);
      MEMORY[0x24260D9B4](v72, -1, -1);
    }

  }
  swift_bridgeObjectRelease();
}

uint64_t sub_23BA6B8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_BYTE *)(v8 + 34) = v13;
  *(_QWORD *)(v8 + 88) = v11;
  *(_QWORD *)(v8 + 96) = v12;
  *(_BYTE *)(v8 + 33) = a8;
  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 56) = a4;
  *(_QWORD *)(v8 + 64) = a5;
  sub_23BB8A9F4();
  *(_QWORD *)(v8 + 104) = sub_23BB8A9E8();
  *(_QWORD *)(v8 + 112) = sub_23BB8A988();
  *(_QWORD *)(v8 + 120) = v9;
  return swift_task_switch();
}

uint64_t sub_23BA6B944()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_BYTE *)(v0 + 34);
  v2 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v3;
  *v3 = v0;
  v3[1] = sub_23BA6B9BC;
  return sub_23BA42BEC(*(_QWORD *)(v0 + 80), (uint64_t *)(v0 + 16));
}

uint64_t sub_23BA6B9BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v10;

  v10 = *v5;
  *(_QWORD *)(*v5 + 136) = v4;
  swift_task_dealloc();
  if (!v4)
  {
    *(_BYTE *)(v10 + 35) = a4;
    *(_QWORD *)(v10 + 144) = a3;
    *(_QWORD *)(v10 + 152) = a2;
    *(_QWORD *)(v10 + 160) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23BA6BA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  id v8;
  _QWORD v10[2];
  char v11;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_BYTE *)(v0 + 34);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(unsigned __int8 *)(v0 + 35);
  swift_release();
  v10[0] = v6;
  v10[1] = v4;
  v11 = v5;
  swift_bridgeObjectRetain();
  v8 = v3;
  sub_23BA6BD64(v2, v1, v3, v7, (uint64_t)v10);
  swift_bridgeObjectRelease_n();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA6BAF8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int v20;
  uint64_t v22[2];
  char v23;

  swift_release();
  if (qword_256A58E00 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 136);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v22[0] = v11;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 40) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B430, v22);
    sub_23BB8ACB8();
    *(_WORD *)(v9 + 12) = 2112;
    v12 = v8;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v13;
    sub_23BB8ACB8();
    *v10 = v13;

    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - Error: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 136);
  v15 = *(_BYTE *)(v0 + 34);
  v16 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 72);
  v18 = *(void **)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 64);
  v20 = *(unsigned __int8 *)(v0 + 33);
  v22[0] = *(_QWORD *)(v0 + 88);
  v22[1] = v16;
  v23 = v15;
  sub_23BA6BD64(v19, v17, v18, v20, (uint64_t)v22);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA6BD64(uint64_t a1, uint64_t a2, id a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  NSObject *v40;
  char v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  void (*v69)(char *, id);
  id v70;
  id v71;
  id v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  id v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  id v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  unint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  id v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  id v122;
  char v123;
  char v124;
  uint64_t v125;

  v6 = v5;
  v12 = sub_23BB88984();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v107 - v20;
  v22 = *(_QWORD *)(a5 + 8);
  v119 = *(_QWORD *)a5;
  v23 = *(unsigned __int8 *)(a5 + 16);
  if (a3)
  {
    v113 = v19;
    LODWORD(v118) = v23;
    swift_getKeyPath();
    swift_getKeyPath();
    v115 = a2;
    v116 = a1;
    v114 = a4;
    sub_23BA44F90(a1, a2, a3);
    swift_bridgeObjectRetain();
    sub_23BB89230();
    swift_release();
    swift_release();
    v24 = v120;
    v25 = *(_QWORD *)(v120 + 16);
    v117 = v6;
    if (!v25 || (v26 = sub_23B9849D4(v119, v22, v118), (v27 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    v112 = a3;
    v28 = (uint64_t *)(*(_QWORD *)(v24 + 56) + 32 * v26);
    v30 = *v28;
    v29 = v28[1];
    v31 = (void *)v28[2];
    sub_23B9894A0(*v28, v29, v31);
    v111 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)v31 < 2)
    {
      sub_23B9A13A4(v30, v29, v31);
      v22 = v111;
      a3 = v112;
LABEL_7:
      v32 = v115;
      if (qword_256A58E00 != -1)
        swift_once();
      v33 = sub_23BB891C4();
      __swift_project_value_buffer(v33, (uint64_t)qword_256A73E80);
      swift_bridgeObjectRetain_n();
      v34 = a3;
      swift_bridgeObjectRetain_n();
      v35 = v34;
      v36 = sub_23BB891AC();
      v37 = sub_23BB8ABEC();
      v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        v39 = swift_slowAlloc();
        v112 = (id)swift_slowAlloc();
        v125 = (uint64_t)v112;
        *(_DWORD *)v39 = 136315907;
        LODWORD(v111) = v38;
        v120 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B360, &v125);
        sub_23BB8ACB8();
        *(_WORD *)(v39 + 12) = 2160;
        v120 = 1752392040;
        sub_23BB8ACB8();
        *(_WORD *)(v39 + 22) = 2081;
        v120 = 91;
        v121 = 0xE100000000000000;
        v124 = v118;
        sub_23BB8A7D8();
        v113 = v35;
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        swift_bridgeObjectRetain();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        v120 = sub_23BB7B69C(v120, v121, &v125);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 32) = 2080;
        v120 = v116;
        v121 = v32;
        v122 = v113;
        v40 = v36;
        v41 = v114;
        v123 = v114;
        swift_bridgeObjectRetain();
        v42 = v113;
        v43 = sub_23BB8A7D8();
        v120 = sub_23BB7B69C(v43, v44, &v125);
        sub_23BB8ACB8();

        swift_bridgeObjectRelease_n();
        v35 = v113;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B979000, v40, (os_log_type_t)v111, "Repository: %s - Add Location - %{private,mask.hash}s %s", (uint8_t *)v39, 0x2Au);
        v45 = v112;
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v45, -1, -1);
        MEMORY[0x24260D9B4](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v41 = v114;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55 = v35;
      sub_23BB89230();
      swift_release();
      swift_release();
      v56 = v120;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v120 = v56;
      sub_23BAAFAA0(v116, v32, (uint64_t)a3, v41, v119, v22, v118, isUniquelyReferenced_nonNull_native);
      v58 = v120;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      v120 = v58;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5C1E0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6C8);
      sub_23B996E1C((unint64_t *)&unk_256A5E6D0, &qword_256A5E6C8, MEMORY[0x24BDB9CA8]);
      sub_23BB89218();

      return swift_bridgeObjectRelease();
    }
    v66 = v112;
    v67 = objc_msgSend(v112, sel_timestamp);
    sub_23BB8896C();

    v68 = objc_msgSend(v31, sel_timestamp);
    sub_23BB8896C();

    LODWORD(v110) = sub_23BB888DC();
    v69 = *(void (**)(char *, id))(v13 + 8);
    v70 = v113;
    v69(v16, v113);
    v69(v21, v70);
    v71 = objc_msgSend(v66, sel_timestamp);
    sub_23BB8896C();

    v72 = objc_msgSend(v31, sel_timestamp);
    sub_23BB8896C();

    v73 = sub_23BB88960();
    v69(v16, v70);
    v69(v21, v70);
    v74 = v115;
    if (v115)
    {
      v75 = v111;
      if (!v29)
      {
        if (((v73 | v110) & 1) != 0)
          goto LABEL_28;
        goto LABEL_35;
      }
      if (v30 != v116 || v29 != v115)
      {
        v76 = sub_23BB8B1A4();
        if ((v73 & 1) != 0)
        {
          if (!(v110 & 1 | ((v76 & 1) == 0)))
            goto LABEL_35;
          goto LABEL_28;
        }
      }
    }
    else
    {
      v75 = v111;
    }
    if ((v110 & 1) != 0)
    {
LABEL_28:
      if (qword_256A58E00 != -1)
        swift_once();
      v113 = v31;
      v110 = v29;
      v77 = sub_23BB891C4();
      __swift_project_value_buffer(v77, (uint64_t)qword_256A73E80);
      swift_bridgeObjectRetain_n();
      v78 = v112;
      swift_bridgeObjectRetain_n();
      v79 = v78;
      v80 = sub_23BB891AC();
      v81 = sub_23BB8ABEC();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = swift_slowAlloc();
        v109 = v79;
        v83 = v82;
        v108 = swift_slowAlloc();
        v125 = v108;
        *(_DWORD *)v83 = 136315907;
        v120 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B360, &v125);
        sub_23BB8ACB8();
        *(_WORD *)(v83 + 12) = 2160;
        v120 = 1752392040;
        sub_23BB8ACB8();
        *(_WORD *)(v83 + 22) = 2081;
        v120 = 91;
        v121 = 0xE100000000000000;
        v124 = v118;
        sub_23BB8A7D8();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        swift_bridgeObjectRetain();
        sub_23BB8A82C();
        swift_bridgeObjectRelease();
        sub_23BB8A82C();
        v120 = sub_23BB7B69C(v120, v121, &v125);
        sub_23BB8ACB8();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 32) = 2080;
        v84 = v116;
        v120 = v116;
        v121 = v74;
        v122 = v109;
        v85 = v114;
        v123 = v114;
        swift_bridgeObjectRetain();
        v86 = v109;
        v87 = sub_23BB8A7D8();
        v120 = sub_23BB7B69C(v87, v88, &v125);
        v75 = v111;
        sub_23BB8ACB8();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23B979000, v80, v81, "Repository: %s - Replace Existing Location - %{private,mask.hash}s %s", (uint8_t *)v83, 0x2Au);
        v89 = v108;
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v89, -1, -1);
        v90 = v83;
        v79 = v109;
        MEMORY[0x24260D9B4](v90, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v85 = v114;
        v84 = v116;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v91 = v79;
      sub_23BB89230();
      swift_release();
      swift_release();
      v92 = v120;
      v93 = swift_isUniquelyReferenced_nonNull_native();
      v120 = v92;
      sub_23BAAFAA0(v84, v74, (uint64_t)v112, v85, v119, v75, v118, v93);
      v94 = v120;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      v120 = v94;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5C1E0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6C8);
      sub_23B996E1C((unint64_t *)&unk_256A5E6D0, &qword_256A5E6C8, MEMORY[0x24BDB9CA8]);
      sub_23BB89218();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_35:
    if (qword_256A58E00 != -1)
      swift_once();
    v95 = sub_23BB891C4();
    __swift_project_value_buffer(v95, (uint64_t)qword_256A73E80);
    swift_bridgeObjectRetain_n();
    v96 = v112;
    swift_bridgeObjectRetain_n();
    v97 = v96;
    v98 = v74;
    v99 = sub_23BB891AC();
    v100 = sub_23BB8ABEC();
    if (os_log_type_enabled(v99, v100))
    {
      v101 = swift_slowAlloc();
      v113 = v31;
      v102 = v101;
      v117 = swift_slowAlloc();
      v125 = v117;
      *(_DWORD *)v102 = 136315907;
      v120 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B360, &v125);
      sub_23BB8ACB8();
      *(_WORD *)(v102 + 12) = 2160;
      v120 = 1752392040;
      sub_23BB8ACB8();
      *(_WORD *)(v102 + 22) = 2081;
      v120 = 91;
      v121 = 0xE100000000000000;
      v124 = v118;
      sub_23BB8A7D8();
      sub_23BB8A82C();
      swift_bridgeObjectRelease();
      sub_23BB8A82C();
      swift_bridgeObjectRetain();
      sub_23BB8A82C();
      swift_bridgeObjectRelease();
      sub_23BB8A82C();
      v120 = sub_23BB7B69C(v120, v121, &v125);
      sub_23BB8ACB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v102 + 32) = 2080;
      v120 = v116;
      v121 = v98;
      v122 = v97;
      v123 = v114;
      swift_bridgeObjectRetain();
      v103 = v97;
      v104 = sub_23BB8A7D8();
      v120 = sub_23BB7B69C(v104, v105, &v125);
      sub_23BB8ACB8();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23B979000, v99, v100, "Repository: %s - Not Replace Existing Location - %{private,mask.hash}s %s", (uint8_t *)v102, 0x2Au);
      v106 = v117;
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v106, -1, -1);
      MEMORY[0x24260D9B4](v102, -1, -1);

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return swift_bridgeObjectRelease();
  }
  v46 = *(_BYTE *)(a5 + 16);
  if (qword_256A58E00 != -1)
    swift_once();
  v47 = sub_23BB891C4();
  __swift_project_value_buffer(v47, (uint64_t)qword_256A73E80);
  v48 = v22;
  swift_bridgeObjectRetain_n();
  v49 = sub_23BB891AC();
  v50 = sub_23BB8ABEC();
  v51 = os_log_type_enabled(v49, v50);
  v52 = v119;
  if (v51)
  {
    v53 = swift_slowAlloc();
    v118 = swift_slowAlloc();
    v125 = v118;
    *(_DWORD *)v53 = 136315651;
    v120 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B360, &v125);
    v117 = v6;
    sub_23BB8ACB8();
    *(_WORD *)(v53 + 12) = 2160;
    v120 = 1752392040;
    sub_23BB8ACB8();
    *(_WORD *)(v53 + 22) = 2081;
    v120 = 91;
    v121 = 0xE100000000000000;
    v124 = v46;
    sub_23BB8A7D8();
    sub_23BB8A82C();
    v48 = v22;
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    swift_bridgeObjectRetain();
    sub_23BB8A82C();
    swift_bridgeObjectRelease();
    sub_23BB8A82C();
    v120 = sub_23BB7B69C(v120, v121, &v125);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v49, v50, "Repository: %s - Remove Location - %{private,mask.hash}s", (uint8_t *)v53, 0x20u);
    v54 = v118;
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v54, -1, -1);
    MEMORY[0x24260D9B4](v53, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_23BB89230();
  swift_release();
  swift_release();
  v60 = sub_23BA7787C(v52, v48, v46);
  v62 = v61;
  v64 = v63;
  swift_bridgeObjectRelease();
  sub_23B9A1394(v60, v62, v64);
  v65 = v120;
  swift_getKeyPath();
  swift_getKeyPath();
  v125 = v65;
  swift_retain();
  sub_23BB8923C();
  sub_23BA5C1E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6C8);
  sub_23B996E1C((unint64_t *)&unk_256A5E6D0, &qword_256A5E6C8, MEMORY[0x24BDB9CA8]);
  return sub_23BB89218();
}

uint64_t sub_23BA6CFF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t inited;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = 32;
  while (1)
  {
    v5 = v2;
    v6 = *(_OWORD *)(v2 + v4 + 16);
    v23 = *(_OWORD *)(v2 + v4);
    v24 = v6;
    v25 = *(_OWORD *)(v2 + v4 + 32);
    v26 = *(_QWORD *)(v2 + v4 + 48);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6A0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
    v28 = v25;
    v8 = v25;
    v27 = v24;
    *(_OWORD *)(inited + 32) = v24;
    *(_BYTE *)(inited + 48) = v8;
    sub_23B9A14A0((uint64_t)&v23);
    sub_23B9A14A0((uint64_t)&v23);
    sub_23B9A14A0((uint64_t)&v23);
    sub_23B9A14EC((uint64_t)&v27);
    v9 = swift_bridgeObjectRetain();
    v10 = sub_23BA7CF04(v9, (uint64_t)&v23);
    sub_23B9A1514((uint64_t)&v23);
    swift_bridgeObjectRelease();
    v29 = inited;
    sub_23BA78CA0(v10);
    sub_23B9A1514((uint64_t)&v23);
    sub_23B9A1514((uint64_t)&v23);
    v11 = v29;
    v12 = *(_QWORD *)(v29 + 16);
    v13 = v3[2];
    v14 = v13 + v12;
    if (__OFADD__(v13, v12))
      break;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v14 <= v3[3] >> 1)
    {
      if (*(_QWORD *)(v11 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v13 <= v14)
        v16 = v13 + v12;
      else
        v16 = v13;
      v3 = sub_23BB63630(isUniquelyReferenced_nonNull_native, v16, 1, v3);
      if (*(_QWORD *)(v11 + 16))
      {
LABEL_14:
        v17 = v3[2];
        if ((v3[3] >> 1) - v17 < v12)
          goto LABEL_25;
        v18 = (unint64_t)&v3[3 * v17 + 4];
        if (v11 + 32 < v18 + 24 * v12 && v18 < v11 + 32 + 24 * v12)
          goto LABEL_27;
        swift_arrayInitWithCopy();
        if (v12)
        {
          v19 = v3[2];
          v20 = __OFADD__(v19, v12);
          v21 = v19 + v12;
          if (v20)
            goto LABEL_26;
          v3[2] = v21;
        }
        goto LABEL_4;
      }
    }
    if (v12)
      goto LABEL_24;
LABEL_4:
    swift_bridgeObjectRelease();
    v4 += 56;
    --v1;
    v2 = v5;
    if (!v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BA6D28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  unint64_t v96;
  char v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v105;
  int v106;
  int EnumCaseMultiPayload;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  char *v127;
  void (*v128)(char *, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t);
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char v144;
  uint64_t v145;
  char *v146;
  char *v147;
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char v161;
  uint64_t v162;
  char *v163;
  void (*v164)(char *, uint64_t);
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t (*v171)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  int v182;
  int v183;
  unsigned int (*v184)(uint64_t, uint64_t, uint64_t);
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  char *v199;
  uint64_t v200;
  void (*v201)(char *, uint64_t, uint64_t, uint64_t);
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;

  v188 = a3;
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v180 = (char *)&v179 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v179 - v12;
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v192 = (char *)&v179 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v199 = (char *)&v179 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v191 = (char *)&v179 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v179 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C78);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v206 = (char *)&v179 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v30);
  v202 = (char *)&v179 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v36 = (char *)&v179 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v34, v37);
  v186 = (uint64_t)&v179 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v185 = (char *)&v179 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v187 = (uint64_t)&v179 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v195 = (uint64_t)&v179 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47, v49);
  v208 = (char *)&v179 - v51;
  v53 = MEMORY[0x24BDAC7A8](v50, v52);
  v207 = (char *)&v179 - v54;
  v56 = MEMORY[0x24BDAC7A8](v53, v55);
  v194 = (uint64_t)&v179 - v57;
  v59 = MEMORY[0x24BDAC7A8](v56, v58);
  v200 = (uint64_t)&v179 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v209 = (char *)&v179 - v63;
  v65 = MEMORY[0x24BDAC7A8](v62, v64);
  v210 = (uint64_t)&v179 - v66;
  v68 = MEMORY[0x24BDAC7A8](v65, v67);
  v211 = (uint64_t)&v179 - v69;
  v71 = MEMORY[0x24BDAC7A8](v68, v70);
  v73 = (char *)&v179 - v72;
  v75 = MEMORY[0x24BDAC7A8](v71, v74);
  v77 = (char *)&v179 - v76;
  MEMORY[0x24BDAC7A8](v75, v78);
  v80 = (char *)&v179 - v79;
  v215 = v6;
  v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v81((char *)&v179 - v79, 1, 1, v5);
  v81(v77, 1, 1, v5);
  v216 = v5;
  v201 = v81;
  v81(v73, 1, 1, v5);
  v196 = a1;
  v82 = *(_QWORD *)(a1 + 16);
  if (v82)
  {
    v212 = v80;
    v189 = v73;
    v179 = v36;
    v193 = v25;
    v181 = v13;
    v83 = v82;
    swift_bridgeObjectRetain();
    v182 = 0;
    v183 = 0;
    LODWORD(v184) = 0;
    v198 = 0;
    v84 = 0;
    v197 = v83;
    v190 = v83 - 1;
    v205 = a2;
    v85 = (uint64_t)v206;
    v86 = (uint64_t)v202;
    v87 = (uint64_t)v208;
    v88 = (uint64_t)v209;
    v213 = v77;
    v89 = v210;
    while (2)
    {
      v90 = 24 * v84;
      v214 = v84;
      while (1)
      {
        if (*(_QWORD *)(a2 + 16))
        {
          v93 = *(_QWORD *)(v196 + v90 + 32);
          v94 = *(_QWORD *)(v196 + v90 + 40);
          v95 = *(_BYTE *)(v196 + v90 + 48);
          swift_bridgeObjectRetain();
          v96 = sub_23B9849D4(v93, v94, v95);
          if ((v97 & 1) != 0)
          {
            v98 = v96;
            v99 = *(_QWORD *)(v205 + 56);
            v100 = type metadata accessor for SessionFollowerState(0);
            v101 = *(_QWORD *)(v100 - 8);
            v102 = v99 + *(_QWORD *)(v101 + 72) * v98;
            v103 = v100;
            a2 = v205;
            sub_23B989CE8(v102, v86, type metadata accessor for SessionFollowerState);
            v104 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56);
            v85 = (uint64_t)v206;
            v104(v86, 0, 1, v103);
          }
          else
          {
            v103 = type metadata accessor for SessionFollowerState(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v86, 1, 1, v103);
          }
          swift_bridgeObjectRelease();
          v87 = (uint64_t)v208;
          v88 = (uint64_t)v209;
          v89 = v210;
        }
        else
        {
          v103 = type metadata accessor for SessionFollowerState(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v86, 1, 1, v103);
        }
        sub_23B989EFC(v86, v85, &qword_256A59C78);
        type metadata accessor for SessionFollowerState(0);
        v105 = *(_QWORD *)(v103 - 8);
        v106 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v85, 1, v103);
        v204 = v103;
        if (v106 == 1)
        {
          sub_23B989D60(v86, &qword_256A59C78);
          goto LABEL_4;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v203 = v105;
        if (EnumCaseMultiPayload)
          break;
        v108 = v85 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80) + 48);
        v109 = v211;
        sub_23B990D24(v85, v211, (uint64_t *)&unk_256A5E6B0);
        sub_23B990D24(v108, v89, (uint64_t *)&unk_256A5E6B0);
        v110 = v200;
        sub_23B989EFC((uint64_t)v212, v200, (uint64_t *)&unk_256A5E6B0);
        v111 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48);
        if (v111(v110, 1, v216) == 1)
        {
          sub_23B989D60(v110, (uint64_t *)&unk_256A5E6B0);
          sub_23B989EFC(v109, v88, (uint64_t *)&unk_256A5E6B0);
        }
        else
        {
          v112 = v216;
          v113 = v110;
          v114 = *(void (**)(char *, uint64_t, uint64_t))(v215 + 32);
          v115 = v193;
          v114(v193, v113, v216);
          v116 = v109;
          v117 = v194;
          sub_23B989EFC(v116, v194, (uint64_t *)&unk_256A5E6B0);
          if (v111(v117, 1, v112) == 1)
          {
            sub_23B989D60(v117, (uint64_t *)&unk_256A5E6B0);
            v118 = v115;
            v119 = v216;
            v114((char *)v88, (uint64_t)v118, v216);
            v120 = v88;
            v121 = v119;
          }
          else
          {
            v122 = v191;
            v123 = v117;
            v124 = v216;
            v114(v191, v123, v216);
            sub_23B97D0C8((unint64_t *)&qword_256A5E6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
            v125 = sub_23BB8A73C();
            v126 = v215;
            if ((v125 & 1) != 0)
              v127 = v122;
            else
              v127 = v115;
            (*(void (**)(uint64_t, char *, uint64_t))(v215 + 16))(v88, v127, v124);
            v128 = *(void (**)(char *, uint64_t))(v126 + 8);
            v129 = v122;
            v87 = (uint64_t)v208;
            v128(v129, v124);
            v128(v115, v124);
            a2 = v205;
            v120 = v88;
            v121 = v124;
          }
          v201((char *)v120, 0, 1, v121);
        }
        v130 = (uint64_t)v207;
        v131 = v88;
        v133 = (uint64_t)v212;
        v132 = (uint64_t)v213;
        sub_23B989D60((uint64_t)v212, (uint64_t *)&unk_256A5E6B0);
        sub_23B990D24(v131, v133, (uint64_t *)&unk_256A5E6B0);
        sub_23B989EFC(v132, v87, (uint64_t *)&unk_256A5E6B0);
        if (v111(v87, 1, v216) == 1)
        {
          sub_23B989D60(v87, (uint64_t *)&unk_256A5E6B0);
          v89 = v210;
          sub_23B989EFC(v210, v130, (uint64_t *)&unk_256A5E6B0);
          v86 = (uint64_t)v202;
        }
        else
        {
          v134 = v216;
          v135 = *(void (**)(char *, uint64_t, uint64_t))(v215 + 32);
          v135(v199, v87, v216);
          v89 = v210;
          v136 = v195;
          sub_23B989EFC(v210, v195, (uint64_t *)&unk_256A5E6B0);
          if (v111(v136, 1, v134) == 1)
          {
            sub_23B989D60(v136, (uint64_t *)&unk_256A5E6B0);
            v137 = v207;
            v138 = v216;
            v135(v207, (uint64_t)v199, v216);
            v130 = (uint64_t)v137;
            v139 = (uint64_t)v137;
            v140 = v138;
          }
          else
          {
            v141 = v192;
            v142 = v216;
            v135(v192, v136, v216);
            sub_23B97D0C8((unint64_t *)&qword_256A5E6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
            v143 = v199;
            v144 = sub_23BB8A73C();
            v145 = v215;
            if ((v144 & 1) != 0)
              v146 = v141;
            else
              v146 = v143;
            v147 = v207;
            (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v207, v146, v142);
            v148 = *(void (**)(char *, uint64_t))(v145 + 8);
            v148(v141, v142);
            v148(v143, v142);
            v130 = (uint64_t)v147;
            a2 = v205;
            v139 = v130;
            v140 = v142;
          }
          v201((char *)v139, 0, 1, v140);
          v86 = (uint64_t)v202;
          v87 = (uint64_t)v208;
        }
        v88 = (uint64_t)v209;
        v91 = v214 + 1;
        sub_23B989D60(v89, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v211, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v86, &qword_256A59C78);
        v92 = (uint64_t)v213;
        sub_23B989D60((uint64_t)v213, (uint64_t *)&unk_256A5E6B0);
        sub_23B990D24(v130, v92, (uint64_t *)&unk_256A5E6B0);
        v90 += 24;
        v198 = 1;
        v214 = v91;
        v85 = (uint64_t)v206;
        if (v197 == v91)
        {
          swift_bridgeObjectRelease();
          v105 = v203;
          goto LABEL_48;
        }
      }
      if (EnumCaseMultiPayload == 1)
      {
        v149 = v187;
        sub_23B990D24(v85, v187, (uint64_t *)&unk_256A5E6B0);
        v150 = v186;
        sub_23B989EFC((uint64_t)v189, v186, (uint64_t *)&unk_256A5E6B0);
        v184 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48);
        if (v184(v150, 1, v216) == 1)
        {
          sub_23B989D60(v150, (uint64_t *)&unk_256A5E6B0);
          v151 = (uint64_t)v185;
          sub_23B989EFC(v149, (uint64_t)v185, (uint64_t *)&unk_256A5E6B0);
          v152 = v149;
        }
        else
        {
          v153 = v216;
          v154 = *(void (**)(char *, uint64_t, uint64_t))(v215 + 32);
          v154(v181, v150, v216);
          v155 = (uint64_t)v179;
          sub_23B989EFC(v149, (uint64_t)v179, (uint64_t *)&unk_256A5E6B0);
          if (v184(v155, 1, v153) == 1)
          {
            sub_23B989D60(v155, (uint64_t *)&unk_256A5E6B0);
            v151 = (uint64_t)v185;
            v156 = v216;
            v154(v185, (uint64_t)v181, v216);
            v201((char *)v151, 0, 1, v156);
            v152 = v187;
            v87 = (uint64_t)v208;
          }
          else
          {
            v157 = v180;
            v158 = v155;
            v159 = v216;
            v154(v180, v158, v216);
            sub_23B97D0C8((unint64_t *)&qword_256A5E6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
            v160 = v181;
            v161 = sub_23BB8A73C();
            v162 = v215;
            if ((v161 & 1) != 0)
              v163 = v157;
            else
              v163 = v160;
            v151 = (uint64_t)v185;
            (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v185, v163, v159);
            v164 = *(void (**)(char *, uint64_t))(v162 + 8);
            v165 = v157;
            v86 = (uint64_t)v202;
            v164(v165, v159);
            v164(v160, v159);
            a2 = v205;
            v201((char *)v151, 0, 1, v159);
            v152 = v187;
            v87 = (uint64_t)v208;
          }
          v105 = v203;
        }
        sub_23B989D60(v152, (uint64_t *)&unk_256A5E6B0);
        sub_23B989D60(v86, &qword_256A59C78);
        v166 = (uint64_t)v189;
        sub_23B989D60((uint64_t)v189, (uint64_t *)&unk_256A5E6B0);
        sub_23B990D24(v151, v166, (uint64_t *)&unk_256A5E6B0);
        LODWORD(v184) = 1;
      }
      else if (EnumCaseMultiPayload == 2)
      {
        sub_23B989D60(v86, &qword_256A59C78);
        v182 = 1;
      }
      else
      {
        sub_23B989D60(v86, &qword_256A59C78);
        v183 = 1;
      }
LABEL_4:
      v84 = v214 + 1;
      if (v190 != v214)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    if ((v198 & 1) != 0)
    {
LABEL_48:
      sub_23B989D60((uint64_t)v189, (uint64_t *)&unk_256A5E6B0);
      v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
      v168 = v188;
      v169 = v188 + *(int *)(v167 + 48);
      sub_23B990D24((uint64_t)v212, v188, (uint64_t *)&unk_256A5E6B0);
      sub_23B990D24((uint64_t)v213, v169, (uint64_t *)&unk_256A5E6B0);
      v170 = v204;
      swift_storeEnumTagMultiPayload();
      v171 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
      v172 = v168;
LABEL_49:
      v173 = 0;
      v174 = v170;
      return v171(v172, v173, 1, v174);
    }
    sub_23B989D60((uint64_t)v213, (uint64_t *)&unk_256A5E6B0);
    sub_23B989D60((uint64_t)v212, (uint64_t *)&unk_256A5E6B0);
    if ((v184 & 1) != 0)
    {
      v177 = v188;
      sub_23B990D24((uint64_t)v189, v188, (uint64_t *)&unk_256A5E6B0);
      v178 = v204;
LABEL_59:
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v105 + 56))(v177, 0, 1, v178);
    }
    sub_23B989D60((uint64_t)v189, (uint64_t *)&unk_256A5E6B0);
    if ((v183 & 1) != 0)
    {
      v177 = v188;
      v178 = v204;
      goto LABEL_59;
    }
    v175 = v188;
    if ((v182 & 1) != 0)
    {
      v170 = v204;
      swift_storeEnumTagMultiPayload();
      v171 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 + 56);
      v172 = v175;
      goto LABEL_49;
    }
  }
  else
  {
    sub_23B989D60((uint64_t)v77, (uint64_t *)&unk_256A5E6B0);
    sub_23B989D60((uint64_t)v80, (uint64_t *)&unk_256A5E6B0);
    sub_23B989D60((uint64_t)v73, (uint64_t *)&unk_256A5E6B0);
    v175 = v188;
  }
  v174 = type metadata accessor for SessionFollowerState(0);
  v171 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56);
  v172 = v175;
  v173 = 1;
  return v171(v172, v173, 1, v174);
}

uint64_t sub_23BA6E0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v68)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(void);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;

  v4 = sub_23BB88984();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v73 = (char *)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v70 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6E0);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v70 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v75 = (char *)v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v82 = (char *)v70 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v85 = (char *)v70 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v80 = (char *)v70 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v70[2] = (char *)v70 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v70[1] = (char *)v70 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v42 = (char *)v70 - v41;
  MEMORY[0x24BDAC7A8](v40, v43);
  v44 = *(void (**)(void))(v5 + 56);
  v74 = (uint64_t)v70 - v45;
  v44();
  v83 = v4;
  v76 = v44;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v44)(v42, 1, 1, v4);
  v46 = *(_QWORD *)(a1 + 16);
  if (!v46)
  {
    sub_23B989D60(v74, (uint64_t *)&unk_256A5E6B0);
    sub_23B989D60((uint64_t)v42, (uint64_t *)&unk_256A5E6B0);
    goto LABEL_13;
  }
  v84 = v42;
  v79 = v11;
  v77 = v5;
  v71 = a2;
  swift_bridgeObjectRetain();
  v78 = 0;
  LODWORD(v81) = 0;
  v72 = a1;
  v47 = (unsigned __int8 *)(a1 + 48);
  do
  {
    v48 = (uint64_t)v19;
    v50 = *((_QWORD *)v47 - 2);
    v49 = *((_QWORD *)v47 - 1);
    v51 = *v47;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_23BB89230();
    swift_release();
    swift_release();
    v52 = v86;
    if (*(_QWORD *)(v86 + 16) && (v53 = sub_23B9849D4(v50, v49, v51), (v54 & 1) != 0))
    {
      v55 = v53;
      v56 = *(_QWORD *)(v52 + 56);
      v57 = type metadata accessor for SessionFollowingState(0);
      v58 = v46;
      v59 = v16;
      v60 = *(_QWORD *)(v57 - 8);
      v61 = v56 + *(_QWORD *)(v60 + 72) * v55;
      v19 = (char *)v48;
      sub_23B989CE8(v61, v48, type metadata accessor for SessionFollowingState);
      v62 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56);
      v16 = v59;
      v46 = v58;
      v62(v48, 0, 1, v57);
    }
    else
    {
      v57 = type metadata accessor for SessionFollowingState(0);
      v19 = (char *)v48;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v48, 1, 1, v57);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B989EFC((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_256A5E6E0);
    type metadata accessor for SessionFollowingState(0);
    v63 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v16, 1, v57) != 1)
    {
      v64 = (char *)&loc_23BA6E4B4 + 4 * byte_23BB919ED[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    sub_23B989D60((uint64_t)v19, (uint64_t *)&unk_256A5E6E0);
    v47 += 24;
    --v46;
  }
  while (v46);
  swift_bridgeObjectRelease();
  sub_23B989D60(v74, (uint64_t *)&unk_256A5E6B0);
  if ((v81 & 1) == 0)
  {
    sub_23B989D60((uint64_t)v84, (uint64_t *)&unk_256A5E6B0);
    if ((v78 & 0x100000000) != 0)
    {
      v65 = v71;
      goto LABEL_16;
    }
    a2 = v71;
    if ((v78 & 1) != 0)
    {
      swift_storeEnumTagMultiPayload();
      v68 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56);
      v69 = a2;
      return v68(v69, 0, 1, v57);
    }
LABEL_13:
    v66 = type metadata accessor for SessionFollowingState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(a2, 1, 1, v66);
  }
  v65 = v71;
  sub_23B990D24((uint64_t)v84, v71, (uint64_t *)&unk_256A5E6B0);
LABEL_16:
  swift_storeEnumTagMultiPayload();
  v68 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56);
  v69 = v65;
  return v68(v69, 0, 1, v57);
}

void sub_23BA6E7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C80);
  v4 = *(_QWORD *)(v2 - 248);
  sub_23B990D24(v0 + *(int *)(v3 + 48), v4, (uint64_t *)&unk_256A5E6B0);
  v5 = *(_QWORD *)(v2 - 240);
  v6 = *(_QWORD *)(v2 - 208);
  sub_23BA6336C(v6, v4, v5);
  sub_23B989D60(v4, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(v1, (uint64_t *)&unk_256A5E6E0);
  sub_23B989D60(v6, (uint64_t *)&unk_256A5E6B0);
  sub_23B990D24(v5, v6, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(v0, (uint64_t *)&unk_256A5E6B0);
  sub_23B989D60(*(_QWORD *)(v2 - 120), (uint64_t *)&unk_256A5E6B0);
  v7 = *(_QWORD *)(v2 - 232) + *(int *)(v3 + 48);
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 - 192))(*(_QWORD *)(v2 - 232), 1, 1, *(_QWORD *)(v2 - 128));
  sub_23B990D24(v6, v7, (uint64_t *)&unk_256A5E6B0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x23BA6E77CLL);
}

uint64_t sub_23BA6E8C8()
{
  uint64_t v0;
  char v1;
  char v2;
  void *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BOOL4 v15;
  uint64_t v17;

  v0 = sub_23BB885DC();
  v2 = v1;
  if (qword_256A58CD8 != -1)
    swift_once();
  if (byte_256A5F830 == 1)
  {
    v3 = (void *)qword_256A5F828;
    swift_bridgeObjectRetain();
    v4 = v3;
    v5 = (void *)sub_23BB8A784();
    v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    v6 = byte_256A5F831;
  }
  if (qword_256A58E00 != -1)
    swift_once();
  v7 = sub_23BB891C4();
  __swift_project_value_buffer(v7, (uint64_t)qword_256A73E80);
  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABEC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v10 = 136315650;
    sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B030, &v17);
    sub_23BB8ACB8();
    *(_WORD *)(v10 + 12) = 2080;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E6F0);
    v12 = sub_23BB8A7D8();
    sub_23BB7B69C(v12, v13, &v17);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 1024;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v8, v9, "CompositeAppViewModel: %s - Show Find My button arrowChipID: %s forceEnable: %{BOOL}d", (uint8_t *)v10, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);
  }

  v15 = (v2 & 1) == 0 && v0 == 8228;
  return (v6 & 1) != 0 || v15;
}

uint64_t sub_23BA6EBA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  char v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];
  char v60;
  uint64_t v61;

  v2 = v1;
  v58 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v57 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB88984();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v56 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CompositeAppViewState.TranscriptInfo(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CompositeAppViewState(0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256A58E00 != -1)
    swift_once();
  v18 = sub_23BB891C4();
  __swift_project_value_buffer(v18, (uint64_t)qword_256A73E80);
  v19 = sub_23BB891AC();
  v20 = sub_23BB8ABEC();
  if (os_log_type_enabled(v19, v20))
  {
    v52 = v7;
    v21 = swift_slowAlloc();
    v54 = v13;
    v55 = v2;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v53 = v6;
    v24 = v23;
    v59[0] = v23;
    *(_DWORD *)v22 = 136315138;
    v61 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B3C0, v59);
    v7 = v52;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v19, v20, "Repository: %s", v22, 0xCu);
    swift_arrayDestroy();
    v25 = v24;
    v6 = v53;
    MEMORY[0x24260D9B4](v25, -1, -1);
    v26 = v22;
    v13 = v54;
    MEMORY[0x24260D9B4](v26, -1, -1);
  }

  v27 = type metadata accessor for CompositeAppViewInitialInfo();
  sub_23B989CE8(v58 + *(int *)(v27 + 28), (uint64_t)v17, type metadata accessor for CompositeAppViewState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v29 = type metadata accessor for CompositeAppViewState;
    v30 = (uint64_t)v17;
    return sub_23B989D9C(v30, v29);
  }
  sub_23B989CA4((uint64_t)v17, (uint64_t)v13, type metadata accessor for CompositeAppViewState.TranscriptInfo);
  v28 = v57;
  sub_23B989EFC((uint64_t)&v13[*(int *)(v10 + 44)], v57, (uint64_t *)&unk_256A5E6B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v28, 1, v6) == 1)
  {
    sub_23B989D60(v28, (uint64_t *)&unk_256A5E6B0);
LABEL_12:
    v32 = sub_23BB891AC();
    v33 = sub_23BB8ABEC();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = v10;
      v36 = swift_slowAlloc();
      v59[0] = v36;
      *(_DWORD *)v34 = 136315138;
      v61 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B3C0, v59);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v32, v33, "Repository: %s - NO TIMESTAMP", v34, 0xCu);
      swift_arrayDestroy();
      v37 = v36;
      v10 = v35;
      MEMORY[0x24260D9B4](v37, -1, -1);
      MEMORY[0x24260D9B4](v34, -1, -1);
    }

    goto LABEL_16;
  }
  v31 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v56, v28, v6);
  if (*((_WORD *)v13 + 56) != 2 && (*((_WORD *)v13 + 56) & 0x100) != 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_12;
  }
  v38 = sub_23BB149B8();
  v40 = v39;
  v41 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  sub_23BA6F200(v31, v38, v40, v41);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v31, v6);
LABEL_16:
  v42 = *(void **)&v13[*(int *)(v10 + 48)];
  if (v42)
  {
    v43 = *((_QWORD *)v13 + 7);
    v44 = v13[64];
    v59[0] = *((_QWORD *)v13 + 6);
    v59[1] = v43;
    v60 = v44;
    v45 = v42;
    swift_bridgeObjectRetain();
    sub_23BA6AEFC(0, 0, v45, 4, (uint64_t)v59);
    swift_bridgeObjectRelease();

  }
  else
  {
    v46 = sub_23BB891AC();
    v47 = sub_23BB8ABEC();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v59[0] = v49;
      *(_DWORD *)v48 = 136315138;
      v61 = sub_23BB7B69C(0xD000000000000017, 0x800000023BB9B3C0, v59);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v46, v47, "Repository: %s - NO INITIAL INFO", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v49, -1, -1);
      MEMORY[0x24260D9B4](v48, -1, -1);
    }

  }
  v29 = type metadata accessor for CompositeAppViewState.TranscriptInfo;
  v30 = (uint64_t)v13;
  return sub_23B989D9C(v30, v29);
}

void sub_23BA6F200(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  void *v53;
  void *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v61 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v57 = (uint64_t)&v55 - v14;
  MEMORY[0x24BDAC7A8](v15, v16);
  v55 = (char *)&v55 - v17;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v55 - v20;
  v22 = sub_23BB88984();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v56 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v59 = (char *)&v55 - v28;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v62 = v4;
  sub_23BB89230();
  swift_release();
  swift_release();
  v29 = v64;
  v30 = *(_QWORD *)(v64 + 16);
  v60 = a4;
  v58 = a2;
  if (v30 && (v31 = sub_23B984B34(a2, a3), (v32 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v21, *(_QWORD *)(v29 + 56) + *(_QWORD *)(v23 + 72) * v31, v22);
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v33(v21, 0, 1, v22);
  }
  else
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v33(v21, 1, 1, v22);
  }
  v34 = v61;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v35(v21, 1, v22) == 1)
  {
    sub_23B989D60((uint64_t)v21, (uint64_t *)&unk_256A5E6B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v11, v34, v22);
    v33(v11, 0, 1, v22);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_23BB89230();
    swift_release();
    swift_release();
    if (v35(v11, 1, v22) == 1)
    {
      sub_23B989D60((uint64_t)v11, (uint64_t *)&unk_256A5E6B0);
      v36 = v57;
      sub_23BA77AD8(v58, a3, v57);
      swift_bridgeObjectRelease();
      sub_23B989D60(v36, (uint64_t *)&unk_256A5E6B0);
      v37 = v64;
    }
    else
    {
      v45 = (uint64_t)v56;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v56, v11, v22);
      v46 = v64;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v63 = v46;
      sub_23BAAFF84(v45, v58, a3, isUniquelyReferenced_nonNull_native);
      v37 = v63;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v63 = v37;
    swift_retain();
    sub_23BB8923C();
    sub_23BA5D280();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23BB89230();
    swift_release();
    swift_release();
    v48 = (void *)sub_23BB8A6B8();
    swift_bridgeObjectRelease();
    v49 = (void *)sub_23BB8A784();
    objc_msgSend(v60, sel_setObject_forKey_, v48, v49);

  }
  else
  {
    v38 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v39 = v59;
    v38(v59, v21, v22);
    if ((sub_23BB888E8() & 1) != 0)
    {
      v40 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v55, v34, v22);
      v33((char *)v40, 0, 1, v22);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      sub_23BB89230();
      swift_release();
      swift_release();
      v41 = v35((char *)v40, 1, v22);
      v42 = v58;
      if (v41 == 1)
      {
        sub_23B989D60(v40, (uint64_t *)&unk_256A5E6B0);
        v43 = v57;
        sub_23BA77AD8(v42, a3, v57);
        swift_bridgeObjectRelease();
        sub_23B989D60(v43, (uint64_t *)&unk_256A5E6B0);
        v44 = v64;
      }
      else
      {
        v50 = (uint64_t)v56;
        v38(v56, (char *)v40, v22);
        v51 = v64;
        v52 = swift_isUniquelyReferenced_nonNull_native();
        v63 = v51;
        sub_23BAAFF84(v50, v42, a3, v52);
        v44 = v63;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v63 = v44;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5D280();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23BB89230();
      swift_release();
      swift_release();
      v53 = (void *)sub_23BB8A6B8();
      swift_bridgeObjectRelease();
      v54 = (void *)sub_23BB8A784();
      objc_msgSend(v60, sel_setObject_forKey_, v53, v54);

      (*(void (**)(char *, uint64_t))(v23 + 8))(v59, v22);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v39, v22);
    }
  }
}

void sub_23BA6F8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v66 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_23BB8AF1C();
  v59 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64, v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB88A68();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23BB88A80();
  v62 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v61 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA78);
  v63 = *(_QWORD *)(v60 - 8);
  v13 = *(_QWORD *)(v63 + 64);
  v15 = MEMORY[0x24BDAC7A8](v60, v14);
  v65 = (uint64_t)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v55 - v17;
  if (qword_256A58E00 != -1)
    swift_once();
  v19 = sub_23BB891C4();
  v67 = __swift_project_value_buffer(v19, (uint64_t)qword_256A73E80);
  v20 = sub_23BB891AC();
  v21 = sub_23BB8ABEC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v57 = v18;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc();
    v70 = v24;
    v56 = v10;
    *(_DWORD *)v23 = 136315138;
    v69 = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v70);
    v10 = v56;
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v20, v21, "Repository: willCall %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v24, -1, -1);
    v25 = v23;
    v18 = v57;
    MEMORY[0x24260D9B4](v25, -1, -1);
  }

  v26 = v68;
  sub_23BA65CB4();
  v27 = *(void **)(v26 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationManager);
  if (v27)
  {
    v28 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v58, *MEMORY[0x24BEE5148], v6);
    v29 = v27;
    v30 = v61;
    v57 = v29;
    sub_23BB8ABF8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v6);
    sub_23BB8B204();
    v31 = swift_allocObject();
    *(_BYTE *)(v31 + 16) = 1;
    v32 = v62;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v18, v30, v10);
    v33 = v59;
    v34 = v60;
    v35 = v64;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(&v18[*(int *)(v60 + 64)], v5, v64);
    *(_OWORD *)&v18[*(int *)(v34 + 60)] = xmmword_23BB91DE0;
    v36 = &v18[*(int *)(v34 + 68)];
    *(_QWORD *)v36 = &unk_256A5EA88;
    *((_QWORD *)v36 + 1) = v31;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v35);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v10);
    v37 = sub_23BB8AA18();
    v38 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v66, 1, 1, v37);
    v39 = swift_allocObject();
    v40 = v68;
    swift_weakInit();
    v41 = v65;
    sub_23B989EFC((uint64_t)v18, v65, &qword_256A5EA78);
    sub_23BB8A9F4();
    swift_retain();
    v42 = sub_23BB8A9E8();
    v43 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v44 = (v13 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = swift_allocObject();
    v46 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v45 + 16) = v42;
    *(_QWORD *)(v45 + 24) = v46;
    sub_23B990D24(v41, v45 + v43, &qword_256A5EA78);
    *(_QWORD *)(v45 + v44) = v39;
    swift_release();
    *(_QWORD *)(v40 + OBJC_IVAR____TtC12FindMyUICore10Repository_thisDeviceCurrentLocationTask) = sub_23B989F54(v38, (uint64_t)&unk_256A5EA98, v45);
    swift_release();
    v47 = sub_23BB891AC();
    v48 = sub_23BB8ABEC();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v70 = v50;
      *(_DWORD *)v49 = 136315138;
      v69 = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v70);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v47, v48, "Repository: didReceive %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v50, -1, -1);
      MEMORY[0x24260D9B4](v49, -1, -1);
    }

    sub_23B989D60((uint64_t)v18, &qword_256A5EA78);
  }
  else
  {
    v51 = sub_23BB891AC();
    v52 = sub_23BB8ABD4();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v70 = v54;
      *(_DWORD *)v53 = 136315138;
      v69 = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v70);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v51, v52, "Repository: %s - No Location Manager", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v54, -1, -1);
      MEMORY[0x24260D9B4](v53, -1, -1);
    }

  }
}

uint64_t sub_23BA6FFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[13] = a4;
  v5[14] = a5;
  v6 = sub_23BB88A98();
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59710);
  v5[18] = swift_task_alloc();
  v7 = sub_23BB88A80();
  v5[19] = v7;
  v5[20] = *(_QWORD *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAA0);
  v5[23] = swift_task_alloc();
  v5[24] = sub_23BB8A9F4();
  v5[25] = sub_23BB8A9E8();
  v5[26] = sub_23BB8A988();
  v5[27] = v8;
  return swift_task_switch();
}

uint64_t sub_23BA70108()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t);

  v2 = (int *)v0[22];
  v1 = v0[23];
  v3 = v0[13];
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[20] + 16))(v0[21], v3, v0[19]);
  sub_23B97D0C8(&qword_256A596E8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5168], MEMORY[0x24BEE5178]);
  sub_23BB8AAD8();
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA78);
  v5 = (uint64_t *)(v3 + v4[15]);
  v7 = *v5;
  v6 = v5[1];
  v8 = v3 + v4[16];
  v9 = v1 + v2[17];
  v10 = sub_23BB8AF1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v8, v10);
  v11 = (uint64_t *)(v3 + v4[17]);
  v13 = *v11;
  v12 = v11[1];
  v14 = (_QWORD *)(v1 + v2[16]);
  *v14 = v7;
  v14[1] = v6;
  v15 = v1 + v2[15];
  v16 = sub_23BB8AF04();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = (_QWORD *)(v1 + v2[18]);
  *v17 = v13;
  v17[1] = v12;
  swift_retain();
  swift_beginAccess();
  v0[28] = sub_23BB8A9E8();
  v20 = (uint64_t (*)(uint64_t))((char *)&dword_256A5EAA8 + dword_256A5EAA8);
  v18 = (_QWORD *)swift_task_alloc();
  v0[29] = v18;
  *v18 = v0;
  v18[1] = sub_23BA702A8;
  return v20(v0[18]);
}

uint64_t sub_23BA702A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 224);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    sub_23BB8A988();
  }
  return swift_task_switch();
}

uint64_t sub_23BA7036C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA703A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_23B989D60(*(_QWORD *)(v0 + 184), &qword_256A5EAA0);
    swift_release();
    if (qword_256A58E00 != -1)
      swift_once();
    v4 = sub_23BB891C4();
    __swift_project_value_buffer(v4, (uint64_t)qword_256A73E80);
    v5 = sub_23BB891AC();
    v6 = sub_23BB8ABEC();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v48 = v8;
      *(_DWORD *)v7 = 136315138;
      *(_QWORD *)(v0 + 64) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v48);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - locationUpdateStream ended", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v8, -1, -1);
      MEMORY[0x24260D9B4](v7, -1, -1);
    }

    goto LABEL_28;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 136), v1, v2);
  if ((sub_23BB8AA90() & 1) != 0)
  {
    swift_release();
    if (qword_256A58E00 != -1)
      swift_once();
    v9 = sub_23BB891C4();
    __swift_project_value_buffer(v9, (uint64_t)qword_256A73E80);
    v10 = sub_23BB891AC();
    v11 = sub_23BB8ABEC();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 120);
    if (v12)
    {
      v46 = *(_QWORD *)(v0 + 184);
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v48 = v18;
      *(_DWORD *)v17 = 136315138;
      *(_QWORD *)(v0 + 96) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v48);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v10, v11, "Repository: %s - Task was cancelled", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v18, -1, -1);
      MEMORY[0x24260D9B4](v17, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
LABEL_20:
      v33 = v46;
LABEL_27:
      sub_23B989D60(v33, &qword_256A5EAA0);
LABEL_28:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    goto LABEL_26;
  }
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 248) = Strong;
  if (!Strong)
  {
    swift_release();
    if (qword_256A58E00 != -1)
      swift_once();
    v24 = sub_23BB891C4();
    __swift_project_value_buffer(v24, (uint64_t)qword_256A73E80);
    v25 = sub_23BB891AC();
    v26 = sub_23BB8ABD4();
    v27 = os_log_type_enabled(v25, v26);
    v13 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 128);
    v28 = *(_QWORD *)(v0 + 136);
    v30 = *(_QWORD *)(v0 + 120);
    if (v27)
    {
      v46 = *(_QWORD *)(v0 + 184);
      v44 = *(_QWORD *)(v0 + 136);
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v48 = v32;
      *(_DWORD *)v31 = 136315138;
      *(_QWORD *)(v0 + 72) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v48);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v25, v26, "Repository: %s - No Self", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v32, -1, -1);
      MEMORY[0x24260D9B4](v31, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v44, v30);
      goto LABEL_20;
    }

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
LABEL_26:
    v33 = v13;
    goto LABEL_27;
  }
  v20 = sub_23BB88A8C();
  *(_QWORD *)(v0 + 256) = v20;
  if (v20)
  {
    v21 = v20;
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v22;
    *v22 = v0;
    v22[1] = sub_23BA70E0C;
    return sub_23BA43818(v21);
  }
  else
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v34 = sub_23BB891C4();
    __swift_project_value_buffer(v34, (uint64_t)qword_256A73E80);
    v35 = sub_23BB891AC();
    v36 = sub_23BB8ABEC();
    v37 = os_log_type_enabled(v35, v36);
    v39 = *(_QWORD *)(v0 + 128);
    v38 = *(_QWORD *)(v0 + 136);
    v40 = *(_QWORD *)(v0 + 120);
    if (v37)
    {
      v45 = *(_QWORD *)(v0 + 136);
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v48 = v42;
      *(_DWORD *)v41 = 136315138;
      *(_QWORD *)(v0 + 80) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v48);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v35, v36, "Repository: %s - Update without location, waiting next...", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v42, -1, -1);
      MEMORY[0x24260D9B4](v41, -1, -1);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v45, v40);
    }
    else
    {
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    }
    *(_QWORD *)(v0 + 224) = sub_23BB8A9E8();
    v47 = (uint64_t (*)(uint64_t))((char *)&dword_256A5EAA8 + dword_256A5EAA8);
    v43 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v43;
    *v43 = v0;
    v43[1] = sub_23BA702A8;
    return v47(*(_QWORD *)(v0 + 144));
  }
}

uint64_t sub_23BA70B24()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 240);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  swift_willThrowTypedImpl();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA70B8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  swift_release();
  v1 = *(void **)(v0 + 240);
  sub_23B989D60(*(_QWORD *)(v0 + 184), &qword_256A5EAA0);
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = v1;
  v4 = v1;
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABD4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v13);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 56) = v11;
    sub_23BB8ACB8();
    *v8 = v11;

    _os_log_impl(&dword_23B979000, v5, v6, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v9, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA70E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;

  v7 = *v4;
  *(_QWORD *)(*v4 + 272) = v3;
  swift_task_dealloc();
  if (!v3)
  {
    *(_QWORD *)(v7 + 280) = a3;
    *(_QWORD *)(v7 + 288) = a2;
  }
  return swift_task_switch();
}

uint64_t sub_23BA70E84()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v1 = (void *)v0[35];
  v2 = (void *)v0[32];
  v4 = v0[16];
  v3 = v0[17];
  v5 = v0[15];
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[11] = v1;
  swift_retain();
  v6 = v1;
  sub_23BB8923C();
  sub_23BA5C6C8();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v0[28] = sub_23BB8A9E8();
  v9 = (uint64_t (*)(uint64_t))((char *)&dword_256A5EAA8 + dword_256A5EAA8);
  v7 = (_QWORD *)swift_task_alloc();
  v0[29] = v7;
  *v7 = v0;
  v7[1] = sub_23BA702A8;
  return v9(v0[18]);
}

uint64_t sub_23BA70F98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v1 = *(void **)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 120);
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v5 = *(void **)(v0 + 272);
  sub_23B989D60(*(_QWORD *)(v0 + 184), &qword_256A5EAA0);
  if (qword_256A58E00 != -1)
    swift_once();
  v6 = sub_23BB891C4();
  __swift_project_value_buffer(v6, (uint64_t)qword_256A73E80);
  v7 = v5;
  v8 = v5;
  v9 = sub_23BB891AC();
  v10 = sub_23BB8ABD4();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v11 = 136315394;
    *(_QWORD *)(v0 + 48) = sub_23BB7B69C(0xD000000000000022, 0x800000023BB9B2C0, &v17);
    sub_23BB8ACB8();
    *(_WORD *)(v11 + 12) = 2112;
    v14 = v5;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 56) = v15;
    sub_23BB8ACB8();
    *v12 = v15;

    _os_log_impl(&dword_23B979000, v9, v10, "Repository: %s - Error: %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v11, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA71240()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v12 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B200, &v12);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = OBJC_IVAR____TtC12FindMyUICore10Repository_thisDeviceCurrentLocationTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_thisDeviceCurrentLocationTask))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  *(_QWORD *)(v0 + v6) = 0;
  swift_release();
  v7 = *(void **)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_effectiveBundleAssertion) = 0;

  v8 = sub_23BB891AC();
  v9 = sub_23BB8ABEC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v12 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_23BB7B69C(0xD000000000000021, 0x800000023BB9B200, &v12);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v8, v9, "Repository: didReceive %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);
  }

}

uint64_t sub_23BA71514()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[6] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
  v1[7] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[8] = v3;
  v1[9] = *(_QWORD *)(v3 + 64);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = sub_23BB8A9F4();
  v1[13] = sub_23BB8A9E8();
  v1[14] = sub_23BB8A988();
  v1[15] = v4;
  return swift_task_switch();
}

uint64_t sub_23BA715E8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[4] = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B2F0, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[17] = v6;
  *v6 = v0;
  v6[1] = sub_23BA71798;
  return sub_23BA37D2C(v0[11]);
}

uint64_t sub_23BA71798()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA717F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v15 = v1;
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  swift_release();
  v7 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_retain();
  v9 = sub_23BB8A9E8();
  v10 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v11 = (char *)swift_allocObject();
  v12 = MEMORY[0x24BEE6930];
  *((_QWORD *)v11 + 2) = v9;
  *((_QWORD *)v11 + 3) = v12;
  *((_QWORD *)v11 + 4) = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v11[v10], v2, v4);
  swift_release();
  v13 = sub_23B989F54(v5, (uint64_t)&unk_256A5EAD0, (uint64_t)v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v4);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12FindMyUICore10Repository_preferenceChangesTask) = v13;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA71970()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 144);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 144);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B2F0, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v10;
    sub_23BB8ACB8();
    *v8 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 144);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA71B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[32] = a4;
  v5[33] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAD8);
  v5[34] = v6;
  v5[35] = *(_QWORD *)(v6 - 8);
  v5[36] = swift_task_alloc();
  v5[37] = sub_23BB8A9F4();
  v5[38] = sub_23BB8A9E8();
  v5[39] = sub_23BB8A988();
  v5[40] = v7;
  return swift_task_switch();
}

uint64_t sub_23BA71C38()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(v0 + 328) = *(_QWORD *)(Strong + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
    swift_unknownObjectRetain();
    swift_release();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v2;
    *v2 = v0;
    v2[1] = sub_23BA71F20;
    return sub_23BA372C0(v0 + 208);
  }
  else
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_QWORD *)(v0 + 184) = 0;
      *(_QWORD *)(v0 + 192) = 0;
      *(_WORD *)(v0 + 200) = 0;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5CD98();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v4 = swift_weakLoadStrong();
    if (v4)
    {
      *(_QWORD *)(v0 + 344) = *(_QWORD *)(v4 + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
      swift_unknownObjectRetain();
      swift_release();
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 352) = v5;
      *v5 = v0;
      v5[1] = sub_23BA72468;
      return sub_23BA37990();
    }
    else
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        swift_getKeyPath();
        swift_getKeyPath();
        *(_BYTE *)(v0 + 156) = 1;
        swift_retain();
        sub_23BB8923C();
        sub_23BA5D004();
        swift_release();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
      sub_23BB8AA54();
      swift_beginAccess();
      *(_QWORD *)(v0 + 360) = sub_23BB8A9E8();
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 368) = v6;
      *v6 = v0;
      v6[1] = sub_23BA7277C;
      return sub_23BB8AA60();
    }
  }
}

uint64_t sub_23BA71F20()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BA71FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t Strong;
  _QWORD *v5;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_WORD *)(v0 + 224);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 184) = v2;
    *(_QWORD *)(v0 + 192) = v1;
    *(_WORD *)(v0 + 200) = v3;
    swift_retain();
    sub_23BB8923C();
    sub_23BA5CD98();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(Strong + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
    swift_unknownObjectRetain();
    swift_release();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v5;
    *v5 = v0;
    v5[1] = sub_23BA72468;
    return sub_23BA37990();
  }
  else
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_BYTE *)(v0 + 156) = 1;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5D004();
      swift_release();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
    sub_23BB8AA54();
    swift_beginAccess();
    *(_QWORD *)(v0 + 360) = sub_23BB8A9E8();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v7;
    *v7 = v0;
    v7[1] = sub_23BA7277C;
    return sub_23BB8AA60();
  }
}

uint64_t sub_23BA72214()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  _QWORD *v4;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 184) = 0;
    *(_QWORD *)(v0 + 192) = 0;
    *(_WORD *)(v0 + 200) = 0;
    swift_retain();
    sub_23BB8923C();
    sub_23BA5CD98();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(Strong + OBJC_IVAR____TtC12FindMyUICore10Repository_session);
    swift_unknownObjectRetain();
    swift_release();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v2;
    *v2 = v0;
    v2[1] = sub_23BA72468;
    return sub_23BA37990();
  }
  else
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_BYTE *)(v0 + 156) = 1;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5D004();
      swift_release();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
    sub_23BB8AA54();
    swift_beginAccess();
    *(_QWORD *)(v0 + 360) = sub_23BB8A9E8();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v4;
    *v4 = v0;
    v4[1] = sub_23BA7277C;
    return sub_23BB8AA60();
  }
}

uint64_t sub_23BA72468(char a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    swift_unknownObjectRelease();
  }
  else
  {
    *(_BYTE *)(v4 + 157) = a1 & 1;
  }
  return swift_task_switch();
}

uint64_t sub_23BA724F0()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_BYTE *)(v0 + 157);
  swift_unknownObjectRelease();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_BYTE *)(v0 + 156) = v1;
    swift_retain();
    sub_23BB8923C();
    sub_23BA5D004();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
  sub_23BB8AA54();
  swift_beginAccess();
  *(_QWORD *)(v0 + 360) = sub_23BB8A9E8();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v2;
  *v2 = v0;
  v2[1] = sub_23BA7277C;
  return sub_23BB8AA60();
}

uint64_t sub_23BA7263C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_BYTE *)(v0 + 156) = 1;
    swift_retain();
    sub_23BB8923C();
    sub_23BA5D004();
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
  sub_23BB8AA54();
  swift_beginAccess();
  *(_QWORD *)(v0 + 360) = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v1;
  *v1 = v0;
  v1[1] = sub_23BA7277C;
  return sub_23BB8AA60();
}

uint64_t sub_23BA7277C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA727D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 160);
  if (*(unsigned __int8 *)(v0 + 178) == 255)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    swift_release();
LABEL_14:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(unsigned __int16 *)(v0 + 176) | (*(unsigned __int8 *)(v0 + 178) << 16);
  if (qword_256A58E00 != -1)
    swift_once();
  v4 = WORD1(v3);
  v5 = sub_23BB891C4();
  __swift_project_value_buffer(v5, (uint64_t)qword_256A73E80);
  sub_23BA19A94(v1, v2, v3, SBYTE2(v3));
  sub_23BA19A94(v1, v2, v3, SBYTE2(v3));
  v6 = sub_23BB891AC();
  v7 = sub_23BB8ABEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v8 + 4) = sub_23BB7B69C(0xD000000000000020, 0x800000023BB9B2F0, &v14);
    *(_WORD *)(v8 + 12) = 2080;
    *(_QWORD *)(v0 + 136) = v1;
    *(_QWORD *)(v0 + 144) = v2;
    *(_WORD *)(v0 + 152) = v3;
    *(_BYTE *)(v0 + 154) = BYTE2(v3);
    sub_23BA19A94(v1, v2, v3, SBYTE2(v3));
    v9 = sub_23BB8A7D8();
    *(_QWORD *)(v8 + 14) = sub_23BB7B69C(v9, v10, &v14);
    swift_bridgeObjectRelease();
    sub_23BA44C5C(v1, v2, v3);
    sub_23BA44C5C(v1, v2, v3);
    _os_log_impl(&dword_23B979000, v6, v7, "Repository: %s - %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v8, -1, -1);
  }
  else
  {
    sub_23BA44C5C(v1, v2, v3);
    sub_23BA44C5C(v1, v2, v3);
  }

  if (!swift_weakLoadStrong())
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    swift_release();
    sub_23BA44C5C(v1, v2, v3);
    goto LABEL_14;
  }
  if (v4)
  {
    if (v4 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      *(_BYTE *)(v0 + 155) = v1 & 1;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5D004();
    }
    swift_release();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v0 + 232) = v1;
    *(_QWORD *)(v0 + 240) = v2;
    *(_WORD *)(v0 + 248) = v3;
    sub_23BA7F2CC(v1, v2, v3);
    swift_retain();
    sub_23BB8923C();
    sub_23BA5CD98();
    swift_release();
    sub_23BA44C5C(v1, v2, v3);
  }
  *(_QWORD *)(v0 + 360) = sub_23BB8A9E8();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v12;
  *v12 = v0;
  v12[1] = sub_23BA7277C;
  return sub_23BB8AA60();
}

void sub_23BA72BC4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v11 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_23BB7B69C(0xD00000000000001FLL, 0x800000023BB9B230, &v11);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = OBJC_IVAR____TtC12FindMyUICore10Repository_preferenceChangesTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12FindMyUICore10Repository_preferenceChangesTask))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  *(_QWORD *)(v0 + v6) = 0;
  swift_release();
  v7 = sub_23BB891AC();
  v8 = sub_23BB8ABEC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11 = v10;
    *(_DWORD *)v9 = 136315138;
    sub_23BB7B69C(0xD00000000000001FLL, 0x800000023BB9B230, &v11);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v7, v8, "Repository: didReceive %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v10, -1, -1);
    MEMORY[0x24260D9B4](v9, -1, -1);
  }

}

uint64_t sub_23BA72E84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[6] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[7] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEE8);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(_QWORD *)(v3 + 64);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = sub_23BB8A9F4();
  v1[14] = sub_23BB8A9E8();
  v1[15] = sub_23BB8A988();
  v1[16] = v4;
  return swift_task_switch();
}

uint64_t sub_23BA72F58()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[17] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[5] = sub_23BB7B69C(0xD00000000000001BLL, 0x800000023BB9B320, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_23BA73108;
  return sub_23BA3B634(v0[12]);
}

uint64_t sub_23BA73108()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA73168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v22 = v5;
  v7 = *(_QWORD *)(v0 + 48);
  swift_release();
  v8 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v6);
  swift_retain();
  v10 = sub_23BB8A9E8();
  v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v13;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v12 + v11, v1, v6);
  *(_QWORD *)(v12 + ((v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v9;
  swift_release();
  *(_QWORD *)(v7 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipStreamTask) = sub_23B989F54(v22, (uint64_t)&unk_256A5EAF8, v12);
  swift_release();
  v14 = sub_23BB891AC();
  v15 = sub_23BB8ABEC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v23 = v17;
    *(_DWORD *)v16 = 136315138;
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(0xD00000000000001BLL, 0x800000023BB9B320, &v23);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v14, v15, "Repository: didReceive %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v17, -1, -1);
    MEMORY[0x24260D9B4](v16, -1, -1);
  }

  v18 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v20 = *(_QWORD *)(v0 + 72);
  sub_23BA60608();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA733FC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 152);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000001BLL, 0x800000023BB9B320, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v10;
    sub_23BB8ACB8();
    *v8 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 152);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA73628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[12] = a4;
  v5[13] = a5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v5[14] = swift_task_alloc();
  v6 = *(_QWORD *)(type metadata accessor for SessionFriend(0) - 8);
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 + 64);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v7 = type metadata accessor for SessionFriendStreamChange(0);
  v5[20] = v7;
  v5[21] = *(_QWORD *)(v7 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB00);
  v5[28] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB08);
  v5[29] = v8;
  v5[30] = *(_QWORD *)(v8 - 8);
  v5[31] = swift_task_alloc();
  v5[32] = sub_23BB8A9F4();
  v5[33] = sub_23BB8A9E8();
  v5[34] = sub_23BB8A988();
  v5[35] = v9;
  return swift_task_switch();
}

uint64_t sub_23BA737B8()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEE8);
  sub_23BB8AA54();
  swift_beginAccess();
  *(_QWORD *)(v0 + 288) = sub_23BB8A9E8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v1;
  *v1 = v0;
  v1[1] = sub_23BA73868;
  return sub_23BB8AA60();
}

uint64_t sub_23BA73868()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA738BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 224);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 168) + 48))(v1, 1, *(_QWORD *)(v0 + 160)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
    swift_release();
LABEL_14:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_23B989CA4(v1, *(_QWORD *)(v0 + 216), type metadata accessor for SessionFriendStreamChange);
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = sub_23BB891C4();
  __swift_project_value_buffer(v4, (uint64_t)qword_256A73E80);
  sub_23B989CE8(v3, v2, type metadata accessor for SessionFriendStreamChange);
  v5 = sub_23BB891AC();
  v6 = sub_23BB8ABEC();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 208);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 200);
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v51 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_23B989CE8(v8, v9, type metadata accessor for SessionFriendStreamChange);
    v12 = sub_23BB8A7D8();
    *(_QWORD *)(v10 + 4) = sub_23BB7B69C(v12, v13, &v51);
    swift_bridgeObjectRelease();
    sub_23B989D9C(v8, type metadata accessor for SessionFriendStreamChange);
    _os_log_impl(&dword_23B979000, v5, v6, "Repository: friendshipStreamChange - %s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v11, -1, -1);
    MEMORY[0x24260D9B4](v10, -1, -1);
  }
  else
  {
    sub_23B989D9C(*(_QWORD *)(v0 + 208), type metadata accessor for SessionFriendStreamChange);
  }

  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v26 = *(_QWORD *)(v0 + 240);
    v25 = *(_QWORD *)(v0 + 248);
    v27 = *(_QWORD *)(v0 + 232);
    v28 = *(_QWORD *)(v0 + 216);
    swift_release();
    sub_23B989D9C(v28, type metadata accessor for SessionFriendStreamChange);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    goto LABEL_14;
  }
  v15 = Strong;
  sub_23B989CE8(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192), type metadata accessor for SessionFriendStreamChange);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v17 = *(_QWORD *)(v0 + 192);
  if (EnumCaseMultiPayload == 1)
  {
    v18 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 136);
    sub_23B989CE8(v17, v18, type metadata accessor for SessionFriendStreamChange);
    sub_23B989CA4(v18, v19, type metadata accessor for SessionFriend);
    v20 = *(unsigned __int8 *)(v19 + 17);
    v21 = *(_QWORD *)(v0 + 136);
    if (v20 == 1)
    {
      v22 = *(_QWORD *)(v21 + 8);
      v23 = *(_BYTE *)(v21 + 16);
      *(_QWORD *)(v0 + 72) = *(_QWORD *)v21;
      *(_QWORD *)(v0 + 80) = v22;
      *(_BYTE *)(v0 + 88) = v23;
      swift_bridgeObjectRetain();
      sub_23BA6BD64(0, 0, 0, 0, v0 + 72);
      swift_bridgeObjectRelease();
    }
    v24 = v21;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v0 + 184);
  v31 = *(_QWORD *)(v0 + 152);
  sub_23B989CE8(v17, v30, type metadata accessor for SessionFriendStreamChange);
  sub_23B989CA4(v30, v31, type metadata accessor for SessionFriend);
  if (*(_BYTE *)(v31 + 17) == 1)
  {
    v33 = *(_QWORD *)(v0 + 144);
    v32 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 120);
    v35 = *(_QWORD *)(v0 + 112);
    v36 = sub_23BB8AA18();
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v35, 1, 1, v36);
    sub_23B989CE8(v32, v33, type metadata accessor for SessionFriend);
    swift_retain();
    v38 = sub_23BB8A9E8();
    v39 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v40 = (_QWORD *)swift_allocObject();
    v41 = MEMORY[0x24BEE6930];
    v40[2] = v38;
    v40[3] = v41;
    v40[4] = v15;
    sub_23B989CA4(v33, (uint64_t)v40 + v39, type metadata accessor for SessionFriend);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36);
    v43 = *(_QWORD *)(v0 + 112);
    if (v42 == 1)
    {
      sub_23B989D60(*(_QWORD *)(v0 + 112), (uint64_t *)&unk_256A613D0);
      if (v40[2])
      {
LABEL_18:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v44 = sub_23BB8A988();
        v46 = v45;
        swift_unknownObjectRelease();
LABEL_22:
        v47 = swift_allocObject();
        *(_QWORD *)(v47 + 16) = &unk_256A5EB18;
        *(_QWORD *)(v47 + 24) = v40;
        if (v46 | v44)
        {
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v44;
          *(_QWORD *)(v0 + 40) = v46;
        }
        v48 = *(_QWORD *)(v0 + 152);
        swift_task_create();
        swift_release();
        v24 = v48;
        goto LABEL_25;
      }
    }
    else
    {
      sub_23BB8AA0C();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v43, v36);
      if (v40[2])
        goto LABEL_18;
    }
    v44 = 0;
    v46 = 0;
    goto LABEL_22;
  }
  v24 = *(_QWORD *)(v0 + 152);
LABEL_25:
  sub_23B989D9C(v24, type metadata accessor for SessionFriend);
  v49 = *(_QWORD *)(v0 + 216);
  sub_23B989D9C(*(_QWORD *)(v0 + 192), type metadata accessor for SessionFriendStreamChange);
  sub_23BA60608();
  swift_release();
  sub_23B989D9C(v49, type metadata accessor for SessionFriendStreamChange);
  *(_QWORD *)(v0 + 288) = sub_23BB8A9E8();
  v50 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v50;
  *v50 = v0;
  v50[1] = sub_23BA73868;
  return sub_23BB8AA60();
}

uint64_t sub_23BA73F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  sub_23BB8A9F4();
  v5[7] = sub_23BB8A9E8();
  v5[8] = sub_23BB8A988();
  v5[9] = v6;
  return swift_task_switch();
}

uint64_t sub_23BA73F6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(uint64_t **)(v0 + 48);
  v3 = *v1;
  v2 = v1[1];
  *(_QWORD *)(v0 + 80) = v2;
  LOBYTE(v1) = *((_BYTE *)v1 + 16);
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  *(_BYTE *)(v0 + 32) = (_BYTE)v1;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  *v4 = v0;
  v4[1] = sub_23BA73FE8;
  return sub_23BA5F774((uint64_t *)(v0 + 16));
}

uint64_t sub_23BA73FE8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23BA7403C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA7406C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  sub_23BB8A9F4();
  v1[5] = sub_23BB8A9E8();
  v1[6] = sub_23BB8A988();
  v1[7] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA740D8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[3] = sub_23BB7B69C(0xD00000000000001ALL, 0x800000023BB9B270, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_23BA74280;
  return sub_23BA3CB60();
}

uint64_t sub_23BA74280()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23BA742E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  v2 = OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipStreamTask;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_friendshipStreamTask))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  *(_QWORD *)(v1 + v2) = 0;
  swift_release();
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v8 = v6;
    *(_DWORD *)v5 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD00000000000001ALL, 0x800000023BB9B270, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "Repository: didReceive %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA74480()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[6] = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  v1[7] = swift_task_alloc();
  v2 = sub_23BB8AF1C();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB38);
  v1[12] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB40);
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB48);
  v1[16] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[17] = v5;
  v1[18] = *(_QWORD *)(v5 + 64);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = sub_23BB8A9F4();
  v1[22] = sub_23BB8A9E8();
  v1[23] = sub_23BB8A988();
  v1[24] = v6;
  return swift_task_switch();
}

uint64_t sub_23BA745D0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[25] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[5] = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B380, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[26] = v6;
  *v6 = v0;
  v6[1] = sub_23BA74780;
  return sub_23BA39C1C(v0[15]);
}

uint64_t sub_23BA74780()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA747E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 160);
  v29 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v28 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v24 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(v0 + 56);
  v26 = *(_QWORD *)(v0 + 48);
  v27 = *(_QWORD *)(v0 + 152);
  swift_release();
  sub_23BB8B204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v6, v9);
  *(_OWORD *)(v5 + *(int *)(v7 + 36)) = xmmword_23BB91DF0;
  v10 = v5 + *(int *)(v7 + 40);
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_BYTE *)(v10 + 16) = 1;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v24, v4);
  sub_23B989EFC(v5, v1 + *(int *)(v2 + 68), &qword_256A5EB38);
  v11 = v1 + *(int *)(v2 + 72);
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  sub_23B989D60(v5, &qword_256A5EB38);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v4);
  v12 = sub_23BB8AA18();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v25, 1, 1, v12);
  v13 = swift_allocObject();
  swift_weakInit();
  sub_23B989EFC(v1, v27, &qword_256A5EB48);
  swift_retain();
  v14 = sub_23BB8A9E8();
  v15 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v16 = swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = v17;
  sub_23B990D24(v27, v16 + v15, &qword_256A5EB48);
  *(_QWORD *)(v16 + ((v29 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  swift_release();
  *(_QWORD *)(v26 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationsStreamTask) = sub_23B989F54(v25, (uint64_t)&unk_256A5EB58, v16);
  swift_release();
  v18 = sub_23BB891AC();
  v19 = sub_23BB8ABEC();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v30 = v21;
    *(_DWORD *)v20 = 136315138;
    *(_QWORD *)(v0 + 32) = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B380, &v30);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v18, v19, "Repository: didReceive %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v21, -1, -1);
    MEMORY[0x24260D9B4](v20, -1, -1);
  }

  v22 = *(_QWORD *)(v0 + 160);
  sub_23BA60608();
  sub_23B989D60(v22, &qword_256A5EB48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA74B7C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 216);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_23BB891AC();
  v5 = sub_23BB8ABD4();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 216);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B380, &v14);
    sub_23BB8ACB8();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v10;
    sub_23BB8ACB8();
    *v8 = v10;

    _os_log_impl(&dword_23B979000, v4, v5, "Repository: %s - Error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E7E0);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 216);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA74DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[23] = a4;
  v5[24] = a5;
  v5[25] = sub_23BB8A9F4();
  v5[26] = sub_23BB8A9E8();
  v5[27] = sub_23BB8A988();
  v5[28] = v6;
  return swift_task_switch();
}

uint64_t sub_23BA74E3C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  v1 = sub_23BA5BDCC();
  *(_BYTE *)(v0 + 65) = v2;
  *(_QWORD *)(v0 + 232) = v1;
  *(_QWORD *)(v0 + 240) = v3;
  *(_BYTE *)(v0 + 66) = v4 & 1;
  *(_QWORD *)(v0 + 248) = sub_23BB8A9E8();
  return swift_task_switch();
}

uint64_t sub_23BA74E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 66) == 1)
  {
    v1 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 256) = v1;
    if (v1)
    {
      swift_getObjectType();
      sub_23BB8A988();
    }
    return swift_task_switch();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 264) = v2;
    *(_QWORD *)(v0 + 272) = v2;
    *(_QWORD *)(v0 + 288) = 0;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB70);
    *v3 = v0;
    v3[1] = sub_23BA75470;
    return sub_23BB8B1B0();
  }
}

uint64_t sub_23BA74F94()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA74FCC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA75008()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA75040()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t type;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 280);
  if (v1)
  {
    *(_BYTE *)(v0 + 68) = *(_BYTE *)(v0 + 67);
    v17 = v1;
    v20 = *(_QWORD *)(v1 + 16);
    if (!v20)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 312) = sub_23BB8A9E8();
      return swift_task_switch();
    }
    swift_beginAccess();
    v2 = (_BYTE *)(v17 + 80);
    while (1)
    {
      v4 = *((_QWORD *)v2 - 6);
      v3 = *((_QWORD *)v2 - 5);
      v5 = (void *)*((_QWORD *)v2 - 4);
      v6 = *(v2 - 24);
      v7 = *((_QWORD *)v2 - 1);
      v22 = *((_QWORD *)v2 - 2);
      v21 = *v2;
      sub_23BA44F90(v4, v3, v5);
      v8 = qword_256A58E00;
      swift_bridgeObjectRetain();
      if (v8 != -1)
        swift_once();
      v9 = sub_23BB891C4();
      __swift_project_value_buffer(v9, (uint64_t)qword_256A73E80);
      swift_bridgeObjectRetain();
      sub_23BA44F90(v4, v3, v5);
      swift_bridgeObjectRetain();
      sub_23BA44F90(v4, v3, v5);
      v10 = sub_23BB891AC();
      type = sub_23BB8ABEC();
      if (os_log_type_enabled(v10, type))
      {
        v11 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v23 = v18;
        *(_DWORD *)v11 = 141558531;
        *(_QWORD *)(v11 + 4) = 1752392040;
        *(_WORD *)(v11 + 12) = 2081;
        *(_QWORD *)(v0 + 152) = v22;
        *(_QWORD *)(v0 + 160) = v7;
        *(_BYTE *)(v0 + 168) = v21;
        swift_bridgeObjectRetain();
        v12 = sub_23BB8A7D8();
        *(_QWORD *)(v11 + 14) = sub_23BB7B69C(v12, v13, &v23);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 22) = 2081;
        *(_QWORD *)(v0 + 72) = v4;
        *(_QWORD *)(v0 + 80) = v3;
        *(_QWORD *)(v0 + 88) = v5;
        *(_BYTE *)(v0 + 96) = v6;
        sub_23BA44F90(v4, v3, v5);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB78);
        v14 = sub_23BB8A7D8();
        *(_QWORD *)(v11 + 24) = sub_23BB7B69C(v14, v15, &v23);
        swift_bridgeObjectRelease();
        sub_23BA44FEC(v4, v3, v5);
        sub_23BA44FEC(v4, v3, v5);
        _os_log_impl(&dword_23B979000, v10, type, "Repository: locationsStream - %{private,mask.hash}s - %{private}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v18, -1, -1);
        MEMORY[0x24260D9B4](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23BA44FEC(v4, v3, v5);
        sub_23BA44FEC(v4, v3, v5);
      }

      if (!swift_weakLoadStrong())
        break;
      v2 += 56;
      *(_QWORD *)(v0 + 128) = v22;
      *(_QWORD *)(v0 + 136) = v7;
      *(_BYTE *)(v0 + 144) = v21;
      sub_23BA6BD64(v4, v3, v5, v6, v0 + 128);
      sub_23BA44FEC(v4, v3, v5);
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v20)
        goto LABEL_11;
    }
    swift_release();
    sub_23BA44FEC(v4, v3, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA75470()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 304) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA754D4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 56);
  switch(v2)
  {
    case 2uLL:
      v3 = 0;
      goto LABEL_6;
    case 1uLL:
      if (*(_QWORD *)(v0 + 288))
      {
        if (!*(_QWORD *)(v0 + 272))
          return swift_task_switch();
        goto LABEL_21;
      }
      v4 = 0;
      break;
    case 0uLL:
      v3 = 1;
LABEL_6:
      v4 = *(_QWORD **)(v0 + 288);
      goto LABEL_20;
    default:
      v5 = *(_QWORD *)(v0 + 48);
      v6 = *(_BYTE *)(v0 + 64);
      if (*(_QWORD *)(v0 + 288))
        v4 = *(_QWORD **)(v0 + 288);
      else
        v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = *(void **)(v0 + 32);
      v16 = *(_QWORD *)(v0 + 24);
      v17 = *(_QWORD *)(v0 + 40);
      sub_23BA7F770(*(_QWORD *)(v0 + 16), v16, v15, v17, v5, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_23BB644D8(0, v4[2] + 1, 1, v4);
      v8 = v4[2];
      v7 = v4[3];
      v9 = v8 + 1;
      if (v8 >= v7 >> 1)
        v4 = sub_23BB644D8((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
      v10 = *(_BYTE *)(v0 + 65);
      v14 = *(_QWORD *)(v0 + 232);
      v4[2] = v9;
      v11 = &v4[7 * v8];
      v11[4] = v1;
      v11[5] = v16;
      v11[6] = v15;
      *((_BYTE *)v11 + 56) = v17;
      v11[8] = v5;
      v11[9] = v2;
      *((_BYTE *)v11 + 80) = v6;
      sub_23BA7F7A0(v1, v16, v15, v17, v5, v2);
      if ((v10 & 1) == 0 && v9 == v14)
      {
        v3 = 0;
LABEL_20:
        *(_BYTE *)(v0 + 67) = v3;
        *(_QWORD *)(v0 + 280) = v4;
        if (!*(_QWORD *)(v0 + 272))
          return swift_task_switch();
LABEL_21:
        swift_getObjectType();
        sub_23BB8A988();
        return swift_task_switch();
      }
      break;
  }
  *(_QWORD *)(v0 + 288) = v4;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 296) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB70);
  *v13 = v0;
  v13[1] = sub_23BA75470;
  return sub_23BB8B1B0();
}

uint64_t sub_23BA75754()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 272);
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_getObjectType();
    sub_23BB8A988();
  }
  return swift_task_switch();
}

uint64_t sub_23BA757C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v0 + 304);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A61420);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_23BA75820()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23BA75858()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t type;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 288);
  *(_BYTE *)(v0 + 68) = 0;
  v17 = v1;
  v20 = *(_QWORD *)(v1 + 16);
  if (v20)
  {
    swift_beginAccess();
    v2 = (_BYTE *)(v17 + 80);
    while (1)
    {
      v4 = *((_QWORD *)v2 - 6);
      v3 = *((_QWORD *)v2 - 5);
      v5 = (void *)*((_QWORD *)v2 - 4);
      v6 = *(v2 - 24);
      v7 = *((_QWORD *)v2 - 1);
      v22 = *((_QWORD *)v2 - 2);
      v21 = *v2;
      sub_23BA44F90(v4, v3, v5);
      v8 = qword_256A58E00;
      swift_bridgeObjectRetain();
      if (v8 != -1)
        swift_once();
      v9 = sub_23BB891C4();
      __swift_project_value_buffer(v9, (uint64_t)qword_256A73E80);
      swift_bridgeObjectRetain();
      sub_23BA44F90(v4, v3, v5);
      swift_bridgeObjectRetain();
      sub_23BA44F90(v4, v3, v5);
      v10 = sub_23BB891AC();
      type = sub_23BB8ABEC();
      if (os_log_type_enabled(v10, type))
      {
        v11 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v23 = v18;
        *(_DWORD *)v11 = 141558531;
        *(_QWORD *)(v11 + 4) = 1752392040;
        *(_WORD *)(v11 + 12) = 2081;
        *(_QWORD *)(v0 + 152) = v22;
        *(_QWORD *)(v0 + 160) = v7;
        *(_BYTE *)(v0 + 168) = v21;
        swift_bridgeObjectRetain();
        v12 = sub_23BB8A7D8();
        *(_QWORD *)(v11 + 14) = sub_23BB7B69C(v12, v13, &v23);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 22) = 2081;
        *(_QWORD *)(v0 + 72) = v4;
        *(_QWORD *)(v0 + 80) = v3;
        *(_QWORD *)(v0 + 88) = v5;
        *(_BYTE *)(v0 + 96) = v6;
        sub_23BA44F90(v4, v3, v5);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB78);
        v14 = sub_23BB8A7D8();
        *(_QWORD *)(v11 + 24) = sub_23BB7B69C(v14, v15, &v23);
        swift_bridgeObjectRelease();
        sub_23BA44FEC(v4, v3, v5);
        sub_23BA44FEC(v4, v3, v5);
        _os_log_impl(&dword_23B979000, v10, type, "Repository: locationsStream - %{private,mask.hash}s - %{private}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v18, -1, -1);
        MEMORY[0x24260D9B4](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_23BA44FEC(v4, v3, v5);
        sub_23BA44FEC(v4, v3, v5);
      }

      if (!swift_weakLoadStrong())
        break;
      v2 += 56;
      *(_QWORD *)(v0 + 128) = v22;
      *(_QWORD *)(v0 + 136) = v7;
      *(_BYTE *)(v0 + 144) = v21;
      sub_23BA6BD64(v4, v3, v5, v6, v0 + 128);
      sub_23BA44FEC(v4, v3, v5);
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v20)
        goto LABEL_10;
    }
    swift_release();
    sub_23BA44FEC(v4, v3, v5);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 312) = sub_23BB8A9E8();
    return swift_task_switch();
  }
}

uint64_t sub_23BA75C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if ((*(_BYTE *)(v0 + 68) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v0 + 256) = v1;
    if (v1)
    {
      swift_getObjectType();
      sub_23BB8A988();
    }
    return swift_task_switch();
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v0 + 264) = v2;
    *(_QWORD *)(v0 + 272) = v2;
    *(_QWORD *)(v0 + 288) = 0;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB70);
    *v3 = v0;
    v3[1] = sub_23BA75470;
    return sub_23BB8B1B0();
  }
}

uint64_t sub_23BA75D6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  sub_23BB8A9F4();
  v1[5] = sub_23BB8A9E8();
  v1[6] = sub_23BB8A988();
  v1[7] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA75DD8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[3] = sub_23BB7B69C(0xD000000000000018, 0x800000023BB9B250, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "Repository: willCall %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_23BA75F80;
  return sub_23BA3B2D0();
}

uint64_t sub_23BA75F80()
{
  void *v0;

  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_23BA75FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  v2 = OBJC_IVAR____TtC12FindMyUICore10Repository_locationsStreamTask;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_locationsStreamTask))
  {
    swift_retain();
    sub_23BB8AA78();
    swift_release();
  }
  *(_QWORD *)(v1 + v2) = 0;
  swift_release();
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v8 = v6;
    *(_DWORD *)v5 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_23BB7B69C(0xD000000000000018, 0x800000023BB9B250, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "Repository: didReceive %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA76180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD *, _QWORD *);
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t result;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70[3];

  v1 = v0;
  if (qword_256A58E00 != -1)
    swift_once();
  v2 = sub_23BB891C4();
  __swift_project_value_buffer(v2, (uint64_t)qword_256A73E80);
  v3 = sub_23BB891AC();
  v4 = sub_23BB8ABEC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v70[0] = v6;
    *(_DWORD *)v5 = 136315138;
    sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v3, v4, "Repository: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v6, -1, -1);
    MEMORY[0x24260D9B4](v5, -1, -1);
  }

  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC12FindMyUICore10Repository_subscriptionsByKind);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(*v7 + 16) && (v9 = sub_23B984B98(2), (v10 & 1) != 0))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    swift_endAccess();
    if (*(_QWORD *)(v11 + 16))
    {
      swift_bridgeObjectRetain();
      v12 = sub_23BB891AC();
      v13 = sub_23BB8ABEC();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v70[0] = v15;
        *(_DWORD *)v14 = 136315138;
        sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v12, v13, "Repository: %s - Filtering - Friendships", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v15, -1, -1);
        MEMORY[0x24260D9B4](v14, -1, -1);
      }

      swift_getKeyPath();
      swift_getKeyPath();
      sub_23BB89230();
      swift_release();
      swift_release();
      v16 = v70[0];
      swift_bridgeObjectRetain();
      v17 = sub_23BA7E05C(v16, v11, type metadata accessor for SessionFollowingState, &qword_256A5E9D0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      v70[0] = v17;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5C990((uint64_t)&unk_23BB91B00, (uint64_t)&unk_23BB91B28, (void (*)(_QWORD))type metadata accessor for SessionFollowingState, "Repository: followingStateByHandle - %s");
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23BB89230();
      swift_release();
      swift_release();
      v18 = v70[0];
      swift_bridgeObjectRetain();
      v19 = sub_23BA7E05C(v18, v11, type metadata accessor for SessionFollowerState, &qword_256A59320);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_getKeyPath();
      swift_getKeyPath();
      v70[0] = v19;
      swift_retain();
      sub_23BB8923C();
      goto LABEL_15;
    }
  }
  else
  {
    swift_endAccess();
  }
  v20 = sub_23BB891AC();
  v21 = sub_23BB8ABEC();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v70[0] = v23;
    *(_DWORD *)v22 = 136315138;
    sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v20, v21, "Repository: %s - Clear all - Friendships", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v23, -1, -1);
    MEMORY[0x24260D9B4](v22, -1, -1);
  }

  v24 = MEMORY[0x24BEE4AF8];
  v25 = sub_23B97DA88(MEMORY[0x24BEE4AF8]);
  swift_getKeyPath();
  swift_getKeyPath();
  v70[0] = v25;
  swift_retain();
  sub_23BB8923C();
  sub_23BA5C990((uint64_t)&unk_23BB91B00, (uint64_t)&unk_23BB91B28, (void (*)(_QWORD))type metadata accessor for SessionFollowingState, "Repository: followingStateByHandle - %s");
  v26 = sub_23B97DAAC(v24);
  swift_getKeyPath();
  swift_getKeyPath();
  v70[0] = v26;
  swift_retain();
  sub_23BB8923C();
LABEL_15:
  sub_23BA5C990((uint64_t)&unk_23BB91AB8, (uint64_t)&unk_23BB91AE0, (void (*)(_QWORD))type metadata accessor for SessionFollowerState, "Repository: followerStateByHandle - %s");
  swift_beginAccess();
  v27 = *v7;
  if (*(_QWORD *)(*v7 + 16) && (v28 = sub_23B984B98(4), (v29 & 1) != 0))
  {
    v30 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v28);
    swift_endAccess();
    if (*(_QWORD *)(v30 + 16))
    {
      swift_bridgeObjectRetain();
      v31 = sub_23BB891AC();
      v32 = sub_23BB8ABEC();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        v70[0] = v34;
        *(_DWORD *)v33 = 136315138;
        sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v31, v32, "Repository: %s - Filtering - Locations", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v34, -1, -1);
        MEMORY[0x24260D9B4](v33, -1, -1);
      }

      swift_getKeyPath();
      swift_getKeyPath();
      sub_23BB89230();
      swift_release();
      swift_release();
      v35 = v70[0];
      *(_QWORD *)(swift_allocObject() + 16) = v30;
      swift_bridgeObjectRetain();
      v36 = sub_23BA7E230(v35, (uint64_t (*)(_QWORD *, _QWORD *))sub_23BA7EBF4);
      swift_release();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      v70[0] = (uint64_t)v36;
      swift_retain();
      sub_23BB8923C();
      sub_23BA5C1E0();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23BB89230();
      swift_release();
      swift_release();
      v37 = v70[0];
      swift_bridgeObjectRetain();
      v38 = sub_23BA7E678(v37, v30, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23BA7E3E8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_getKeyPath();
      swift_getKeyPath();
      v70[0] = v38;
      swift_retain();
      goto LABEL_25;
    }
  }
  else
  {
    swift_endAccess();
  }
  v39 = sub_23BB891AC();
  v40 = sub_23BB8ABEC();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v70[0] = v42;
    *(_DWORD *)v41 = 136315138;
    sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v39, v40, "Repository: %s - Clear all - Locations", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v42, -1, -1);
    MEMORY[0x24260D9B4](v41, -1, -1);
  }

  v43 = MEMORY[0x24BEE4AF8];
  v44 = sub_23B97DAD0(MEMORY[0x24BEE4AF8]);
  swift_getKeyPath();
  swift_getKeyPath();
  v70[0] = v44;
  swift_retain();
  sub_23BB8923C();
  sub_23BA5C1E0();
  v45 = sub_23B97DC30(v43);
  swift_getKeyPath();
  swift_getKeyPath();
  v70[0] = v45;
  swift_retain();
LABEL_25:
  sub_23BB8923C();
  sub_23BA5C40C();
  swift_beginAccess();
  v46 = *v7;
  if (*(_QWORD *)(*v7 + 16) && (v47 = sub_23B984B98(3), (v48 & 1) != 0))
  {
    v49 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v47);
    swift_endAccess();
    if (*(_QWORD *)(v49 + 16))
    {
      swift_bridgeObjectRetain();
      v50 = sub_23BB891AC();
      v51 = sub_23BB8ABEC();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        v70[0] = v53;
        *(_DWORD *)v52 = 136315138;
        sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
        sub_23BB8ACB8();
        _os_log_impl(&dword_23B979000, v50, v51, "Repository: %s - Filtering - Directions", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24260D9B4](v53, -1, -1);
        MEMORY[0x24260D9B4](v52, -1, -1);
      }

      swift_getKeyPath();
      swift_getKeyPath();
      sub_23BB89230();
      swift_release();
      swift_release();
      v54 = v70[0];
      swift_bridgeObjectRetain();
      v55 = sub_23BA7E678(v54, v49, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_23BA7E830);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_getKeyPath();
      swift_getKeyPath();
      v70[0] = v55;
      swift_retain();
      goto LABEL_35;
    }
  }
  else
  {
    swift_endAccess();
  }
  v56 = sub_23BB891AC();
  v57 = sub_23BB8ABEC();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    v70[0] = v59;
    *(_DWORD *)v58 = 136315138;
    sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v56, v57, "Repository: %s - Clear all - Directions", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v59, -1, -1);
    MEMORY[0x24260D9B4](v58, -1, -1);
  }

  v60 = sub_23B97DC30(MEMORY[0x24BEE4AF8]);
  swift_getKeyPath();
  swift_getKeyPath();
  v70[0] = v60;
  swift_retain();
LABEL_35:
  sub_23BB8923C();
  sub_23BA5C40C();
  swift_beginAccess();
  v61 = *v7;
  if (*(_QWORD *)(*v7 + 16) && (v62 = sub_23B984B98(0), (v63 & 1) != 0))
  {
    v64 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * v62);
    result = swift_endAccess();
    if (*(_QWORD *)(v64 + 16))
      return result;
  }
  else
  {
    swift_endAccess();
  }
  v66 = sub_23BB891AC();
  v67 = sub_23BB8ABEC();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc();
    v69 = swift_slowAlloc();
    v70[0] = v69;
    *(_DWORD *)v68 = 136315138;
    sub_23BB7B69C(0xD000000000000019, 0x800000023BB9B1E0, v70);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v66, v67, "Repository: %s - Clear My Location", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v69, -1, -1);
    MEMORY[0x24260D9B4](v68, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  v70[0] = 0;
  swift_retain();
  sub_23BB8923C();
  return sub_23BA5C6C8();
}

uint64_t type metadata accessor for Repository.MockDelegate()
{
  return objc_opt_self();
}

uint64_t sub_23BA77200@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB891E8();
  *a1 = result;
  return result;
}

uint64_t sub_23BA77228(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23BA070B4;
  return v6(a1);
}

uint64_t sub_23BA7728C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B9DD058;
  return v6(a1);
}

uint64_t sub_23BA772F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23B984880(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B986CA0();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_23B989CA4(v12 + *(_QWORD *)(v14 + 72) * v8, a3, type metadata accessor for MapsDirectionsProvider.DirectionsState);
    sub_23B9856C8(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_23BA77420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_23BA77988(a1, a2, a3, sub_23B9849D0, type metadata accessor for PeopleRelationshipsProvider.RelationshipState, (void (*)(uint64_t, uint64_t))sub_23B985D50, (void (*)(void))sub_23B98787C, a4);
}

uint64_t sub_23BA77444(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23B984880(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B987A4C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_23B985F84(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23BA77510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BA77548(a1, a2, a3, sub_23B9849D0, (void (*)(uint64_t, uint64_t))sub_23B98615C, (void (*)(void))sub_23B987C04);
}

uint64_t sub_23BA7752C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23BA77548(a1, a2, a3, sub_23B9849D0, (void (*)(uint64_t, uint64_t))sub_23B98615C, (void (*)(void))sub_23B987C10);
}

uint64_t sub_23BA77548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t), void (*a6)(void))
{
  uint64_t *v6;
  uint64_t *v10;
  uint64_t v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v10 = v6;
  swift_bridgeObjectRetain();
  v14 = a4(a1, a2, a3);
  LOBYTE(a3) = v15;
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v10;
  v20 = *v10;
  *v10 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a6();
    v17 = v20;
  }
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v14);
  a5(v14, v17);
  *v10 = v17;
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_23BA7763C(uint64_t a1, uint64_t a2)
{
  return sub_23BA777A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B985F84, (void (*)(void))sub_23B987DD4);
}

uint64_t sub_23BA77650(uint64_t a1, uint64_t a2)
{
  return sub_23BA777A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B985F84, (void (*)(void))sub_23B987DE0);
}

uint64_t sub_23BA77664(uint64_t a1, uint64_t a2)
{
  return sub_23BA777A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B985F84, (void (*)(void))sub_23B987DEC);
}

uint64_t sub_23BA77678(uint64_t a1, uint64_t a2)
{
  return sub_23BA777A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B985F84, (void (*)(void))sub_23B987DF8);
}

uint64_t sub_23BA7768C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23B984B9C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B987FA4();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for RepositorySubscriber();
  sub_23B989D9C(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, (uint64_t (*)(_QWORD))type metadata accessor for RepositorySubscriber);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B98636C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23BA77764(uint64_t a1, uint64_t a2)
{
  return sub_23BA777A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B985F84, (void (*)(void))sub_23B9881DC);
}

uint64_t sub_23BA77778(uint64_t a1, uint64_t a2)
{
  return sub_23BA777A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B985F84, (void (*)(void))sub_23B9881E8);
}

uint64_t sub_23BA7778C(uint64_t a1, uint64_t a2)
{
  return sub_23BA777A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_23B985F84, (void (*)(void))sub_23B9881F4);
}

uint64_t sub_23BA777A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), void (*a4)(void))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v7 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_23B984880(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v7;
  v16 = *v7;
  *v7 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    v13 = v16;
  }
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v10);
  a3(v10, v13);
  *v7 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23BA7787C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23B9849D4(a1, a2, a3);
  v10 = v9;
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v4;
  v15 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B9883AC();
    v12 = v15;
  }
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 32 * v8);
  sub_23B986624(v8, v12);
  *v4 = v12;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_23BA77988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t (*a5)(_QWORD)@<X4>, void (*a6)(uint64_t, uint64_t)@<X5>, void (*a7)(void)@<X6>, uint64_t a8@<X8>)
{
  uint64_t *v8;
  uint64_t *v13;
  uint64_t v18;
  char v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v13 = v8;
  swift_bridgeObjectRetain();
  v18 = a4(a1, a2, a3);
  LOBYTE(a3) = v19;
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v13;
    v27 = *v13;
    *v13 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a7();
      v21 = v27;
    }
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v21 + 56);
    v23 = a5(0);
    v24 = *(_QWORD *)(v23 - 8);
    sub_23B989CA4(v22 + *(_QWORD *)(v24 + 72) * v18, a8, a5);
    a6(v18, v21);
    *v13 = v21;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(a8, 0, 1, v23);
  }
  else
  {
    v26 = a5(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a8, 1, 1, v26);
  }
}

uint64_t sub_23BA77AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23B984B34(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B988A00();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_23BB88984();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_23B986A98(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_23BB88984();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_23BA77C08(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  int64_t v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;
  uint64_t v64;
  int64_t v65;
  int v66;
  _QWORD v67[3];
  int64_t v68;
  unint64_t v69;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_23BB631FC(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  result = (uint64_t)sub_23BA7C288(v67, (uint64_t)&v3[9 * v10 + 4], v8 - v10, v6);
  if (result < v2)
    goto LABEL_15;
  if (result)
  {
    v14 = v3[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_51;
    }
    v3[2] = v16;
  }
  if (result != v11)
    goto LABEL_13;
LABEL_16:
  v13 = v3[2];
  v55 = v67[0];
  v54 = v67[1];
  v12 = v68;
  v52 = v67[2];
  if (!v69)
  {
LABEL_51:
    v41 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      return result;
    }
    v39 = (unint64_t)(v52 + 64) >> 6;
    if (v41 >= v39)
      goto LABEL_13;
    v65 = v13;
    v49 = *(_QWORD *)(v54 + 8 * v41);
    if (!v49)
    {
      v50 = v12 + 2;
      if (v12 + 2 >= v39)
        goto LABEL_13;
      v49 = *(_QWORD *)(v54 + 8 * v50);
      if (v49)
      {
LABEL_60:
        v41 = v50;
      }
      else
      {
        if (v12 + 3 >= v39)
          goto LABEL_13;
        v49 = *(_QWORD *)(v54 + 8 * (v12 + 3));
        if (!v49)
          goto LABEL_66;
        v41 = v12 + 3;
      }
    }
LABEL_54:
    v17 = (v49 - 1) & v49;
    v18 = __clz(__rbit64(v49)) + (v41 << 6);
    v62 = v41;
    goto LABEL_18;
  }
  v62 = v68;
  v65 = v3[2];
  v17 = (v69 - 1) & v69;
  v18 = __clz(__rbit64(v69)) | (v68 << 6);
LABEL_18:
  v19 = *(_QWORD *)(v55 + 48) + 72 * v18;
  v20 = *(_QWORD *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v22 = *(_QWORD *)(v19 + 16);
  v23 = *(_QWORD *)(v19 + 24);
  v24 = *(_QWORD *)(v19 + 32);
  v25 = *(_QWORD *)(v19 + 40);
  v59 = *(unsigned __int8 *)(v19 + 48);
  v57 = *(_QWORD *)(v19 + 56);
  v26 = *(unsigned __int8 *)(v19 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v21)
    goto LABEL_13;
  v53 = (unint64_t)(v52 + 64) >> 6;
  v12 = v62;
  v27 = v65;
  v29 = v57;
  v28 = v59;
  v30 = v26;
  while (1)
  {
    v31 = v3[3];
    v56 = v31 >> 1;
    if ((uint64_t)(v31 >> 1) < v27 + 1)
    {
      v61 = v28;
      v64 = v12;
      v45 = v3;
      v46 = v27;
      v47 = v29;
      v66 = v30;
      v48 = sub_23BB631FC((_QWORD *)(v31 > 1), v27 + 1, 1, v45);
      v30 = v66;
      v29 = v47;
      v28 = v61;
      v12 = v64;
      v27 = v46;
      v3 = v48;
      v56 = v48[3] >> 1;
    }
    if (v27 < v56)
      break;
LABEL_20:
    v3[2] = v27;
    if (!v21)
      goto LABEL_13;
  }
  while (1)
  {
    v38 = (uint64_t)&v3[9 * v27 + 4];
    *(_QWORD *)v38 = v20;
    *(_QWORD *)(v38 + 8) = v21;
    *(_QWORD *)(v38 + 16) = v22;
    *(_QWORD *)(v38 + 24) = v23;
    *(_QWORD *)(v38 + 32) = v24;
    *(_QWORD *)(v38 + 40) = v25;
    *(_BYTE *)(v38 + 48) = v28;
    *(_QWORD *)(v38 + 56) = v29;
    v39 = v30 & 1;
    *(_BYTE *)(v38 + 64) = v30 & 1;
    v40 = v27 + 1;
    v65 = v40;
    if (!v17)
      break;
    v60 = (v17 - 1) & v17;
    v63 = v12;
    v32 = __clz(__rbit64(v17)) | (v12 << 6);
LABEL_26:
    v33 = *(_QWORD *)(v55 + 48) + 72 * v32;
    v21 = *(_QWORD *)(v33 + 8);
    v58 = *(_QWORD *)v33;
    v22 = *(_QWORD *)(v33 + 16);
    v23 = *(_QWORD *)(v33 + 24);
    v24 = *(_QWORD *)(v33 + 32);
    v25 = *(_QWORD *)(v33 + 40);
    v34 = *(unsigned __int8 *)(v33 + 48);
    v35 = *(_QWORD *)(v33 + 56);
    v36 = *(unsigned __int8 *)(v33 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v36;
    v29 = v35;
    v28 = v34;
    v12 = v63;
    v27 = v65;
    v20 = v58;
    if (v21)
      v37 = v65 < v56;
    else
      v37 = 0;
    v17 = v60;
    if (!v37)
      goto LABEL_20;
  }
  v41 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v41 >= v53)
      goto LABEL_56;
    v42 = *(_QWORD *)(v54 + 8 * v41);
    if (v42)
      goto LABEL_41;
    v43 = v12 + 2;
    if (v12 + 2 >= v53)
      goto LABEL_56;
    v42 = *(_QWORD *)(v54 + 8 * v43);
    if (!v42)
    {
      if (v12 + 3 >= v53)
        goto LABEL_56;
      v42 = *(_QWORD *)(v54 + 8 * (v12 + 3));
      if (v42)
      {
        v41 = v12 + 3;
        goto LABEL_41;
      }
      v43 = v12 + 4;
      if (v12 + 4 >= v53)
        goto LABEL_56;
      v42 = *(_QWORD *)(v54 + 8 * v43);
      if (!v42)
      {
        v41 = v12 + 5;
        if (v12 + 5 >= v53)
          goto LABEL_56;
        v42 = *(_QWORD *)(v54 + 8 * v41);
        if (!v42)
        {
          v44 = v12 + 6;
          while (v53 != v44)
          {
            v42 = *(_QWORD *)(v54 + 8 * v44++);
            if (v42)
            {
              v41 = v44 - 1;
              goto LABEL_41;
            }
          }
LABEL_56:
          v3[2] = v40;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v41 = v43;
LABEL_41:
    v60 = (v42 - 1) & v42;
    v63 = v41;
    v32 = __clz(__rbit64(v42)) + (v41 << 6);
    goto LABEL_26;
  }
  __break(1u);
LABEL_66:
  v50 = v41 + 3;
  if (v41 + 3 < v39)
  {
    v49 = *(_QWORD *)(v54 + 8 * v50);
    if (v49)
      goto LABEL_60;
    v41 += 4;
    if (v41 >= v39)
      goto LABEL_13;
    v49 = *(_QWORD *)(v54 + 8 * v41);
    if (!v49)
    {
      v51 = v12 + 6;
      while (v39 != v51)
      {
        v49 = *(_QWORD *)(v54 + 8 * v51++);
        if (v49)
        {
          v41 = v51 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_23BA7D474();
  *(_QWORD *)v1 = v3;
  return result;
}

uint64_t sub_23BA78128(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  BOOL v28;
  _QWORD *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  int64_t v42;
  unint64_t v43;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_23BB63320(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_23BA7C4D4((uint64_t)v40, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v13 = v4[2];
    v14 = __OFADD__(v13, result);
    v15 = v13 + result;
    if (v14)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v15;
  }
  if (result != v12)
    goto LABEL_13;
LABEL_16:
  v2 = v4[2];
  v12 = v41;
  v38 = v40[1];
  v39 = v40[0];
  v6 = v42;
  v37 = v41;
  if (!v43)
  {
LABEL_51:
    v30 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    v21 = (unint64_t)(v12 + 64) >> 6;
    if (v30 >= v21)
      goto LABEL_13;
    v34 = *(_QWORD *)(v38 + 8 * v30);
    if (!v34)
    {
      v35 = v6 + 2;
      if (v6 + 2 >= v21)
        goto LABEL_13;
      v34 = *(_QWORD *)(v38 + 8 * v35);
      if (v34)
      {
LABEL_59:
        v30 = v35;
      }
      else
      {
        if (v6 + 3 >= v21)
          goto LABEL_13;
        v34 = *(_QWORD *)(v38 + 8 * (v6 + 3));
        if (!v34)
          goto LABEL_65;
        v30 = v6 + 3;
      }
    }
LABEL_54:
    v16 = (v34 - 1) & v34;
    v17 = __clz(__rbit64(v34)) + (v30 << 6);
    v6 = v30;
    v12 = v37;
    goto LABEL_18;
  }
  v16 = (v43 - 1) & v43;
  v17 = __clz(__rbit64(v43)) | (v42 << 6);
LABEL_18:
  v18 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * v17);
  v19 = *v18;
  v20 = v18[1];
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_13;
  v22 = (unint64_t)(v12 + 64) >> 6;
  while (1)
  {
    v23 = v4[3];
    v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v2 + 1)
    {
      v4 = sub_23BB63320((_QWORD *)(v23 > 1), v2 + 1, 1, v4);
      v24 = v4[3] >> 1;
    }
    if (v2 < v24)
      break;
LABEL_20:
    v4[2] = v2;
    if (!v20)
      goto LABEL_13;
  }
  while (1)
  {
    v29 = &v4[2 * v2 + 4];
    *v29 = v19;
    v29[1] = v20;
    ++v2;
    if (!v16)
      break;
    v25 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v26 = v25 | (v6 << 6);
LABEL_26:
    v27 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * v26);
    v19 = *v27;
    v20 = v27[1];
    swift_bridgeObjectRetain();
    if (v20)
      v28 = v2 < v24;
    else
      v28 = 0;
    if (!v28)
      goto LABEL_20;
  }
  v30 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v30 >= v22)
      goto LABEL_55;
    v31 = *(_QWORD *)(v38 + 8 * v30);
    if (v31)
      goto LABEL_41;
    v32 = v6 + 2;
    if (v6 + 2 >= v22)
      goto LABEL_55;
    v31 = *(_QWORD *)(v38 + 8 * v32);
    if (!v31)
    {
      if (v6 + 3 >= v22)
        goto LABEL_55;
      v31 = *(_QWORD *)(v38 + 8 * (v6 + 3));
      if (v31)
      {
        v30 = v6 + 3;
        goto LABEL_41;
      }
      v32 = v6 + 4;
      if (v6 + 4 >= v22)
        goto LABEL_55;
      v31 = *(_QWORD *)(v38 + 8 * v32);
      if (!v31)
      {
        v30 = v6 + 5;
        if (v6 + 5 >= v22)
          goto LABEL_55;
        v31 = *(_QWORD *)(v38 + 8 * v30);
        if (!v31)
        {
          v33 = v6 + 6;
          while (v22 != v33)
          {
            v31 = *(_QWORD *)(v38 + 8 * v33++);
            if (v31)
            {
              v30 = v33 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v30 = v32;
LABEL_41:
    v16 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v6 = v30;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  v35 = v30 + 3;
  if (v30 + 3 < v21)
  {
    v34 = *(_QWORD *)(v38 + 8 * v35);
    if (v34)
      goto LABEL_59;
    v30 += 4;
    if (v30 >= v21)
      goto LABEL_13;
    v34 = *(_QWORD *)(v38 + 8 * v30);
    if (!v34)
    {
      v36 = v6 + 6;
      while (v21 != v36)
      {
        v34 = *(_QWORD *)(v38 + 8 * v36++);
        if (v34)
        {
          v30 = v36 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_23BA7D474();
  *(_QWORD *)v1 = v4;
  return result;
}

uint64_t sub_23BA7852C(uint64_t a1, uint64_t a2, uint64_t a3, int64_t a4)
{
  char **v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char *v18;
  uint64_t result;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  char *v30;
  int64_t v31;
  char *v32;
  int64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  int64_t v43;
  uint64_t v44;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *v4;
  v7 = *((_QWORD *)*v4 + 2);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = a1;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v11 = *((_QWORD *)v6 + 3) >> 1, v11 < v8))
  {
    if (v7 <= v8)
      v12 = v7 + v5;
    else
      v12 = v7;
    v6 = sub_23BB6342C(isUniquelyReferenced_nonNull_native, v12, 1, v6);
    v11 = *((_QWORD *)v6 + 3) >> 1;
  }
  v13 = *((_QWORD *)v6 + 2);
  v14 = (_QWORD *)(v11 - v13);
  v15 = sub_23BA7C6D0(&v40, (uint64_t)&v6[v13 + 32], v11 - v13, v9);
  if ((uint64_t)v15 < v5)
    goto LABEL_15;
  if (v15)
  {
    v16 = *((_QWORD *)v6 + 2);
    v17 = __OFADD__(v16, v15);
    v18 = (char *)v15 + v16;
    if (v17)
    {
      __break(1u);
      goto LABEL_44;
    }
    *((_QWORD *)v6 + 2) = v18;
  }
  if (v15 != v14)
  {
LABEL_13:
    result = sub_23BA7D474();
    *v4 = v6;
    return result;
  }
LABEL_16:
  v9 = *((_QWORD *)v6 + 2);
  result = v40;
  v20 = v41;
  v21 = v42;
  v22 = v43;
  v23 = v44;
  if (v44)
  {
    v24 = v43;
    goto LABEL_18;
  }
  v24 = v43 + 1;
  if (!__OFADD__(v43, 1))
  {
    v25 = (unint64_t)(v42 + 64) >> 6;
    if (v24 >= v25)
      goto LABEL_13;
    v23 = *(_QWORD *)(v41 + 8 * v24);
    if (!v23)
    {
      v33 = v42;
      v26 = v40;
      v27 = v41;
      a4 = v43 + 1;
      v24 = v43 + 2;
      if (v43 + 2 >= v25)
        goto LABEL_13;
      v23 = *(_QWORD *)(v41 + 8 * v24);
      if (!v23)
      {
        if (v43 + 3 >= v25)
          goto LABEL_13;
        v23 = *(_QWORD *)(v41 + 8 * (v43 + 3));
        if (v23)
        {
          v24 = v43 + 3;
        }
        else
        {
LABEL_57:
          v24 = a4 + 3;
          if (a4 + 3 >= v25)
            goto LABEL_13;
          v23 = *(_QWORD *)(v27 + 8 * v24);
          if (!v23)
          {
            a4 += 4;
            if (a4 >= v25)
              goto LABEL_13;
            v20 = v27;
            v24 = a4;
            v23 = *(_QWORD *)(v27 + 8 * a4);
            result = v26;
            v21 = v33;
            if (!v23)
            {
              a4 = v25 - 1;
              v36 = v22 + 6;
              while (v25 != v36)
              {
                v23 = *(_QWORD *)(v27 + 8 * v36++);
                if (v23)
                {
                  v24 = v36 - 1;
                  goto LABEL_50;
                }
              }
              goto LABEL_13;
            }
            goto LABEL_18;
          }
        }
      }
LABEL_50:
      v20 = v27;
      result = v26;
      v21 = v33;
    }
LABEL_18:
    v25 = (v23 - 1) & v23;
    v26 = (unint64_t)(v21 + 64) >> 6;
    v27 = *((_QWORD *)v6 + 3);
LABEL_20:
    v22 = v27 >> 1;
    if ((uint64_t)(v27 >> 1) < v9 + 1)
    {
      v38 = v26;
      v39 = result;
      v37 = v20;
      v28 = v21;
      v29 = v24;
      v30 = v6;
      v31 = v25;
      v32 = sub_23BB6342C((char *)(v27 > 1), v9 + 1, 1, v30);
      v25 = v31;
      v20 = v37;
      v26 = v38;
      v24 = v29;
      v21 = v28;
      v6 = v32;
      result = v39;
      v27 = *((_QWORD *)v6 + 3);
      v22 = v27 >> 1;
    }
    while (1)
    {
      if (v9 >= v22)
      {
        *((_QWORD *)v6 + 2) = v9;
        goto LABEL_20;
      }
      ++v9;
      if (v25)
      {
        v33 = v24;
        goto LABEL_23;
      }
      v33 = v24 + 1;
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_57;
      }
      if (v33 >= v26)
        goto LABEL_44;
      v25 = *(_QWORD *)(v20 + 8 * v33);
      if (!v25)
      {
        v34 = v24 + 2;
        a4 = v24 + 1;
        if (v24 + 2 >= v26)
          goto LABEL_44;
        v25 = *(_QWORD *)(v20 + 8 * v34);
        if (v25)
          goto LABEL_31;
        a4 = v24 + 2;
        if (v24 + 3 >= v26)
          goto LABEL_44;
        v25 = *(_QWORD *)(v20 + 8 * (v24 + 3));
        if (v25)
        {
          v33 = v24 + 3;
        }
        else
        {
          v34 = v24 + 4;
          a4 = v24 + 3;
          if (v24 + 4 >= v26)
            goto LABEL_44;
          v25 = *(_QWORD *)(v20 + 8 * v34);
          if (v25)
          {
LABEL_31:
            v33 = v34;
            goto LABEL_23;
          }
          v33 = v24 + 5;
          a4 = v24 + 4;
          if (v24 + 5 >= v26)
            goto LABEL_44;
          v25 = *(_QWORD *)(v20 + 8 * v33);
          if (!v25)
          {
            v35 = v24 + 6;
            while (v26 != v35)
            {
              v25 = *(_QWORD *)(v20 + 8 * v35++);
              if (v25)
              {
                v33 = v35 - 1;
                goto LABEL_23;
              }
            }
LABEL_44:
            *((_QWORD *)v6 + 2) = v9;
            goto LABEL_13;
          }
        }
      }
LABEL_23:
      v25 &= v25 - 1;
      v24 = v33;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23BA78894(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  _QWORD *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  int64_t v42;
  unint64_t v43;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_23BB63524(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_23BA7C4D4((uint64_t)v40, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v13 = v4[2];
    v14 = __OFADD__(v13, result);
    v15 = v13 + result;
    if (v14)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v15;
  }
  if (result != v12)
    goto LABEL_13;
LABEL_16:
  v2 = v4[2];
  v12 = v41;
  v38 = v40[1];
  v39 = v40[0];
  v6 = v42;
  v37 = v41;
  if (!v43)
  {
LABEL_51:
    v30 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    v21 = (unint64_t)(v12 + 64) >> 6;
    if (v30 >= v21)
      goto LABEL_13;
    v34 = *(_QWORD *)(v38 + 8 * v30);
    if (!v34)
    {
      v35 = v6 + 2;
      if (v6 + 2 >= v21)
        goto LABEL_13;
      v34 = *(_QWORD *)(v38 + 8 * v35);
      if (v34)
      {
LABEL_59:
        v30 = v35;
      }
      else
      {
        if (v6 + 3 >= v21)
          goto LABEL_13;
        v34 = *(_QWORD *)(v38 + 8 * (v6 + 3));
        if (!v34)
          goto LABEL_65;
        v30 = v6 + 3;
      }
    }
LABEL_54:
    v16 = (v34 - 1) & v34;
    v17 = __clz(__rbit64(v34)) + (v30 << 6);
    v6 = v30;
    v12 = v37;
    goto LABEL_18;
  }
  v16 = (v43 - 1) & v43;
  v17 = __clz(__rbit64(v43)) | (v42 << 6);
LABEL_18:
  v18 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * v17);
  v19 = *v18;
  v20 = v18[1];
  swift_bridgeObjectRetain();
  if (v20 == 1)
    goto LABEL_13;
  v22 = (unint64_t)(v12 + 64) >> 6;
  while (1)
  {
    v23 = v4[3];
    v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v2 + 1)
    {
      v4 = sub_23BB63524((_QWORD *)(v23 > 1), v2 + 1, 1, v4);
      v24 = v4[3] >> 1;
    }
    if (v2 < v24)
      break;
LABEL_20:
    v4[2] = v2;
    if (v20 == 1)
      goto LABEL_13;
  }
  while (1)
  {
    v29 = &v4[2 * v2 + 4];
    *v29 = v19;
    v29[1] = v20;
    ++v2;
    if (!v16)
      break;
    v25 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v26 = v25 | (v6 << 6);
LABEL_26:
    v27 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * v26);
    v19 = *v27;
    v20 = v27[1];
    swift_bridgeObjectRetain();
    if (v20 == 1 || v2 >= v24)
      goto LABEL_20;
  }
  v30 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v30 >= v22)
      goto LABEL_55;
    v31 = *(_QWORD *)(v38 + 8 * v30);
    if (v31)
      goto LABEL_41;
    v32 = v6 + 2;
    if (v6 + 2 >= v22)
      goto LABEL_55;
    v31 = *(_QWORD *)(v38 + 8 * v32);
    if (!v31)
    {
      if (v6 + 3 >= v22)
        goto LABEL_55;
      v31 = *(_QWORD *)(v38 + 8 * (v6 + 3));
      if (v31)
      {
        v30 = v6 + 3;
        goto LABEL_41;
      }
      v32 = v6 + 4;
      if (v6 + 4 >= v22)
        goto LABEL_55;
      v31 = *(_QWORD *)(v38 + 8 * v32);
      if (!v31)
      {
        v30 = v6 + 5;
        if (v6 + 5 >= v22)
          goto LABEL_55;
        v31 = *(_QWORD *)(v38 + 8 * v30);
        if (!v31)
        {
          v33 = v6 + 6;
          while (v22 != v33)
          {
            v31 = *(_QWORD *)(v38 + 8 * v33++);
            if (v31)
            {
              v30 = v33 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v30 = v32;
LABEL_41:
    v16 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v6 = v30;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  v35 = v30 + 3;
  if (v30 + 3 < v21)
  {
    v34 = *(_QWORD *)(v38 + 8 * v35);
    if (v34)
      goto LABEL_59;
    v30 += 4;
    if (v30 >= v21)
      goto LABEL_13;
    v34 = *(_QWORD *)(v38 + 8 * v30);
    if (!v34)
    {
      v36 = v6 + 6;
      while (v21 != v36)
      {
        v34 = *(_QWORD *)(v38 + 8 * v36++);
        if (v34)
        {
          v30 = v36 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_23BA7D474();
  *(_QWORD *)v1 = v4;
  return result;
}

uint64_t sub_23BA78CA0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_23BB63630(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BA78DFC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  int64_t v42;
  unint64_t v43;

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_23BB64214(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  result = sub_23BA7C83C((uint64_t)v40, (uint64_t)&v3[3 * v10 + 4], v8 - v10, v6);
  if (result < v2)
    goto LABEL_15;
  if (result)
  {
    v12 = v3[2];
    v13 = __OFADD__(v12, result);
    v14 = v12 + result;
    if (v13)
    {
      __break(1u);
      goto LABEL_51;
    }
    v3[2] = v14;
  }
  if (result != v11)
    goto LABEL_13;
LABEL_16:
  v2 = v3[2];
  v6 = v41;
  v38 = v40[1];
  v39 = v40[0];
  v5 = v42;
  v36 = v41;
  if (!v43)
  {
LABEL_51:
    v29 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    v21 = (unint64_t)(v6 + 64) >> 6;
    if (v29 >= v21)
      goto LABEL_13;
    v33 = *(_QWORD *)(v38 + 8 * v29);
    if (!v33)
    {
      v34 = v5 + 2;
      if (v5 + 2 >= v21)
        goto LABEL_13;
      v33 = *(_QWORD *)(v38 + 8 * v34);
      if (v33)
      {
LABEL_59:
        v29 = v34;
      }
      else
      {
        if (v5 + 3 >= v21)
          goto LABEL_13;
        v33 = *(_QWORD *)(v38 + 8 * (v5 + 3));
        if (!v33)
          goto LABEL_65;
        v29 = v5 + 3;
      }
    }
LABEL_54:
    v15 = (v33 - 1) & v33;
    v16 = __clz(__rbit64(v33)) + (v29 << 6);
    v5 = v29;
    v6 = v36;
    goto LABEL_18;
  }
  v15 = (v43 - 1) & v43;
  v16 = __clz(__rbit64(v43)) | (v42 << 6);
LABEL_18:
  v17 = *(_QWORD *)(v39 + 48) + 24 * v16;
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v20 = *(unsigned __int8 *)(v17 + 16);
  sub_23B9894D4();
  if (v20 > 0xFB)
    goto LABEL_13;
  v37 = (unint64_t)(v6 + 64) >> 6;
  while (1)
  {
    v22 = v3[3];
    v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1)
    {
      v3 = sub_23BB64214((_QWORD *)(v22 > 1), v2 + 1, 1, v3);
      v23 = v3[3] >> 1;
    }
    if (v2 < v23)
      break;
LABEL_20:
    v3[2] = v2;
    if (v20 > 0xFBu)
      goto LABEL_13;
  }
  while (1)
  {
    v28 = (uint64_t)&v3[3 * v2 + 4];
    *(_QWORD *)v28 = v18;
    *(_QWORD *)(v28 + 8) = v19;
    *(_BYTE *)(v28 + 16) = v20;
    ++v2;
    if (!v15)
      break;
    v24 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v25 = v24 | (v5 << 6);
LABEL_26:
    v26 = *(_QWORD *)(v39 + 48) + 24 * v25;
    v18 = *(_QWORD *)v26;
    v19 = *(_QWORD *)(v26 + 8);
    v20 = *(unsigned __int8 *)(v26 + 16);
    sub_23B9894D4();
    if (v20 > 0xFB || v2 >= v23)
      goto LABEL_20;
  }
  v29 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v29 >= v37)
      goto LABEL_55;
    v30 = *(_QWORD *)(v38 + 8 * v29);
    if (v30)
      goto LABEL_41;
    v31 = v5 + 2;
    if (v5 + 2 >= v37)
      goto LABEL_55;
    v30 = *(_QWORD *)(v38 + 8 * v31);
    if (!v30)
    {
      if (v5 + 3 >= v37)
        goto LABEL_55;
      v30 = *(_QWORD *)(v38 + 8 * (v5 + 3));
      if (v30)
      {
        v29 = v5 + 3;
        goto LABEL_41;
      }
      v31 = v5 + 4;
      if (v5 + 4 >= v37)
        goto LABEL_55;
      v30 = *(_QWORD *)(v38 + 8 * v31);
      if (!v30)
      {
        v29 = v5 + 5;
        if (v5 + 5 >= v37)
          goto LABEL_55;
        v30 = *(_QWORD *)(v38 + 8 * v29);
        if (!v30)
        {
          v32 = v5 + 6;
          while (v37 != v32)
          {
            v30 = *(_QWORD *)(v38 + 8 * v32++);
            if (v30)
            {
              v29 = v32 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v3[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v29 = v31;
LABEL_41:
    v15 = (v30 - 1) & v30;
    v25 = __clz(__rbit64(v30)) + (v29 << 6);
    v5 = v29;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  v34 = v29 + 3;
  if (v29 + 3 < v21)
  {
    v33 = *(_QWORD *)(v38 + 8 * v34);
    if (v33)
      goto LABEL_59;
    v29 += 4;
    if (v29 >= v21)
      goto LABEL_13;
    v33 = *(_QWORD *)(v38 + 8 * v29);
    if (!v33)
    {
      v35 = v5 + 6;
      while (v21 != v35)
      {
        v33 = *(_QWORD *)(v38 + 8 * v35++);
        if (v33)
        {
          v29 = v35 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_23BA7D474();
  *(_QWORD *)v1 = v3;
  return result;
}

uint64_t sub_23BA7925C(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  int64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_23BB64354(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_23BA7CA48((uint64_t)v46, (uint64_t)&v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v16;
  }
  if (result != v12)
    goto LABEL_13;
LABEL_16:
  v2 = v4[2];
  v45 = v46[0];
  v7 = v47;
  v44 = v46[1];
  v13 = v48;
  v42 = v47;
  if (!v49)
  {
LABEL_51:
    v33 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      return result;
    }
    v25 = (unint64_t)(v7 + 64) >> 6;
    if (v33 >= v25)
      goto LABEL_13;
    v39 = *(_QWORD *)(v44 + 8 * v33);
    if (!v39)
    {
      v40 = v13 + 2;
      if (v13 + 2 >= v25)
        goto LABEL_13;
      v39 = *(_QWORD *)(v44 + 8 * v40);
      if (v39)
      {
LABEL_60:
        v33 = v40;
      }
      else
      {
        if (v13 + 3 >= v25)
          goto LABEL_13;
        v39 = *(_QWORD *)(v44 + 8 * (v13 + 3));
        if (!v39)
          goto LABEL_66;
        v33 = v13 + 3;
      }
    }
LABEL_54:
    v17 = (v39 - 1) & v39;
    v19 = __clz(__rbit64(v39)) + (v33 << 6);
    v18 = v33;
    v7 = v42;
    goto LABEL_18;
  }
  v17 = (v49 - 1) & v49;
  v18 = v48;
  v19 = __clz(__rbit64(v49)) | (v48 << 6);
LABEL_18:
  v20 = *(_QWORD *)(v45 + 48) + 24 * v19;
  v22 = *(_QWORD *)v20;
  v21 = *(_QWORD *)(v20 + 8);
  v23 = *(_BYTE *)(v20 + 16);
  v24 = *(_BYTE *)(v20 + 17);
  swift_bridgeObjectRetain();
  if (!v21)
    goto LABEL_13;
  v43 = (unint64_t)(v7 + 64) >> 6;
  v13 = v18;
  while (1)
  {
    v26 = v4[3];
    v27 = v26 >> 1;
    if ((uint64_t)(v26 >> 1) < v2 + 1)
    {
      v37 = v13;
      v38 = sub_23BB64354((_QWORD *)(v26 > 1), v2 + 1, 1, v4);
      v13 = v37;
      v4 = v38;
      v27 = v38[3] >> 1;
    }
    if (v2 < v27)
      break;
LABEL_20:
    v4[2] = v2;
    if (!v21)
      goto LABEL_13;
  }
  while (1)
  {
    v33 = (uint64_t)&v4[3 * v2 + 4];
    *(_QWORD *)v33 = v22;
    *(_QWORD *)(v33 + 8) = v21;
    *(_BYTE *)(v33 + 16) = v23;
    *(_BYTE *)(v33 + 17) = v24;
    ++v2;
    if (!v17)
      break;
    v28 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v29 = v13;
    v30 = v28 | (v13 << 6);
LABEL_26:
    v31 = *(_QWORD *)(v45 + 48) + 24 * v30;
    v22 = *(_QWORD *)v31;
    v21 = *(_QWORD *)(v31 + 8);
    v23 = *(_BYTE *)(v31 + 16);
    v24 = *(_BYTE *)(v31 + 17);
    swift_bridgeObjectRetain();
    if (v21)
      v32 = v2 < v27;
    else
      v32 = 0;
    v13 = v29;
    if (!v32)
      goto LABEL_20;
  }
  v29 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v29 >= v43)
      goto LABEL_56;
    v34 = *(_QWORD *)(v44 + 8 * v29);
    if (v34)
      goto LABEL_41;
    v35 = v13 + 2;
    if (v13 + 2 >= v43)
      goto LABEL_56;
    v34 = *(_QWORD *)(v44 + 8 * v35);
    if (!v34)
    {
      if (v13 + 3 >= v43)
        goto LABEL_56;
      v34 = *(_QWORD *)(v44 + 8 * (v13 + 3));
      if (v34)
      {
        v29 = v13 + 3;
        goto LABEL_41;
      }
      v35 = v13 + 4;
      if (v13 + 4 >= v43)
        goto LABEL_56;
      v34 = *(_QWORD *)(v44 + 8 * v35);
      if (!v34)
      {
        v29 = v13 + 5;
        if (v13 + 5 >= v43)
          goto LABEL_56;
        v34 = *(_QWORD *)(v44 + 8 * v29);
        if (!v34)
        {
          v36 = v13 + 6;
          while (v43 != v36)
          {
            v34 = *(_QWORD *)(v44 + 8 * v36++);
            if (v34)
            {
              v29 = v36 - 1;
              goto LABEL_41;
            }
          }
LABEL_56:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v29 = v35;
LABEL_41:
    v17 = (v34 - 1) & v34;
    v30 = __clz(__rbit64(v34)) + (v29 << 6);
    goto LABEL_26;
  }
  __break(1u);
LABEL_66:
  v40 = v33 + 3;
  if (v33 + 3 < v25)
  {
    v39 = *(_QWORD *)(v44 + 8 * v40);
    if (v39)
      goto LABEL_60;
    v33 += 4;
    if (v33 >= v25)
      goto LABEL_13;
    v39 = *(_QWORD *)(v44 + 8 * v33);
    if (!v39)
    {
      v41 = v13 + 6;
      while (v25 != v41)
      {
        v39 = *(_QWORD *)(v44 + 8 * v41++);
        if (v39)
        {
          v33 = v41 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_23BA7D474();
  *(_QWORD *)v1 = v4;
  return result;
}

uint64_t sub_23BA796D4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  int64_t v43;
  unint64_t v44;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_23BB64368(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_23BA7CC54((uint64_t)v41, (uint64_t)&v4[3 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v13 = v4[2];
    v14 = __OFADD__(v13, result);
    v15 = v13 + result;
    if (v14)
    {
      __break(1u);
      goto LABEL_51;
    }
    v4[2] = v15;
  }
  if (result != v12)
    goto LABEL_13;
LABEL_16:
  v2 = v4[2];
  v7 = v42;
  v39 = v41[1];
  v40 = v41[0];
  v6 = v43;
  v37 = v42;
  if (!v44)
  {
LABEL_51:
    v30 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return result;
    }
    v22 = (unint64_t)(v7 + 64) >> 6;
    if (v30 >= v22)
      goto LABEL_13;
    v34 = *(_QWORD *)(v39 + 8 * v30);
    if (!v34)
    {
      v35 = v6 + 2;
      if (v6 + 2 >= v22)
        goto LABEL_13;
      v34 = *(_QWORD *)(v39 + 8 * v35);
      if (v34)
      {
LABEL_59:
        v30 = v35;
      }
      else
      {
        if (v6 + 3 >= v22)
          goto LABEL_13;
        v34 = *(_QWORD *)(v39 + 8 * (v6 + 3));
        if (!v34)
          goto LABEL_65;
        v30 = v6 + 3;
      }
    }
LABEL_54:
    v16 = (v34 - 1) & v34;
    v17 = __clz(__rbit64(v34)) + (v30 << 6);
    v6 = v30;
    v7 = v37;
    goto LABEL_18;
  }
  v16 = (v44 - 1) & v44;
  v17 = __clz(__rbit64(v44)) | (v43 << 6);
LABEL_18:
  v18 = *(_QWORD *)(v40 + 48) + 24 * v17;
  v20 = *(_QWORD *)v18;
  v19 = *(_QWORD *)(v18 + 8);
  v21 = *(_BYTE *)(v18 + 16);
  swift_bridgeObjectRetain();
  if (v19 == 1)
    goto LABEL_13;
  v38 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v23 = v4[3];
    v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v2 + 1)
    {
      v4 = sub_23BB64368((_QWORD *)(v23 > 1), v2 + 1, 1, v4);
      v24 = v4[3] >> 1;
    }
    if (v2 < v24)
      break;
LABEL_20:
    v4[2] = v2;
    if (v19 == 1)
      goto LABEL_13;
  }
  while (1)
  {
    v29 = (uint64_t)&v4[3 * v2 + 4];
    *(_QWORD *)v29 = v20;
    *(_QWORD *)(v29 + 8) = v19;
    *(_BYTE *)(v29 + 16) = v21;
    ++v2;
    if (!v16)
      break;
    v25 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v26 = v25 | (v6 << 6);
LABEL_26:
    v27 = *(_QWORD *)(v40 + 48) + 24 * v26;
    v20 = *(_QWORD *)v27;
    v19 = *(_QWORD *)(v27 + 8);
    v21 = *(_BYTE *)(v27 + 16);
    swift_bridgeObjectRetain();
    if (v19 == 1 || v2 >= v24)
      goto LABEL_20;
  }
  v30 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v30 >= v38)
      goto LABEL_55;
    v31 = *(_QWORD *)(v39 + 8 * v30);
    if (v31)
      goto LABEL_41;
    v32 = v6 + 2;
    if (v6 + 2 >= v38)
      goto LABEL_55;
    v31 = *(_QWORD *)(v39 + 8 * v32);
    if (!v31)
    {
      if (v6 + 3 >= v38)
        goto LABEL_55;
      v31 = *(_QWORD *)(v39 + 8 * (v6 + 3));
      if (v31)
      {
        v30 = v6 + 3;
        goto LABEL_41;
      }
      v32 = v6 + 4;
      if (v6 + 4 >= v38)
        goto LABEL_55;
      v31 = *(_QWORD *)(v39 + 8 * v32);
      if (!v31)
      {
        v30 = v6 + 5;
        if (v6 + 5 >= v38)
          goto LABEL_55;
        v31 = *(_QWORD *)(v39 + 8 * v30);
        if (!v31)
        {
          v33 = v6 + 6;
          while (v38 != v33)
          {
            v31 = *(_QWORD *)(v39 + 8 * v33++);
            if (v31)
            {
              v30 = v33 - 1;
              goto LABEL_41;
            }
          }
LABEL_55:
          v4[2] = v2;
          goto LABEL_13;
        }
        goto LABEL_41;
      }
    }
    v30 = v32;
LABEL_41:
    v16 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v6 = v30;
    goto LABEL_26;
  }
  __break(1u);
LABEL_65:
  v35 = v30 + 3;
  if (v30 + 3 < v22)
  {
    v34 = *(_QWORD *)(v39 + 8 * v35);
    if (v34)
      goto LABEL_59;
    v30 += 4;
    if (v30 >= v22)
      goto LABEL_13;
    v34 = *(_QWORD *)(v39 + 8 * v30);
    if (!v34)
    {
      v36 = v6 + 6;
      while (v22 != v36)
      {
        v34 = *(_QWORD *)(v39 + 8 * v36++);
        if (v34)
        {
          v30 = v36 - 1;
          goto LABEL_54;
        }
      }
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_13:
  result = sub_23BA7D474();
  *(_QWORD *)v1 = v4;
  return result;
}

uint64_t sub_23BA79B20(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_23BB644C4(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_23BB88C48();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

uint64_t sub_23BA79C94(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_23BB645FC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[28 * v9 + 4];
  if (a1 + 32 < v10 + 224 * v8 && v10 < a1 + 32 + 224 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23BB8B00C();
  __break(1u);
  return result;
}

size_t sub_23BA79DF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t result;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v2 = *v1;
  v3 = (uint64_t *)(*v1 + 16);
  v4 = *v3;
  if (*v3 >= a1)
  {
    v16 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868) - 8) + 80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E970);
    v13 = swift_allocObject();
    v17 = *(_OWORD *)(v2 + 24);
    *(_QWORD *)(v13 + 16) = v4;
    *(_OWORD *)(v13 + 24) = v17;
    if ((uint64_t)v17 >= 1)
      sub_23BA7A900(v13 + 16, v13 + ((v16 + 40) & ~v16), v3, v2 + ((v16 + 40) & ~v16));
    goto LABEL_19;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  sub_23BB89170();
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v6 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E970);
    v11 = *(_QWORD *)(v8 + 72);
    v12 = (v9 + 40) & ~v9;
    v13 = swift_allocObject();
    result = _swift_stdlib_malloc_size((const void *)v13);
    if (v11)
    {
      if (result - v12 != 0x8000000000000000 || v11 != -1)
      {
        *(_QWORD *)(v13 + 16) = (uint64_t)(result - v12) / v11;
        *(_QWORD *)(v13 + 24) = v10;
        *(_QWORD *)(v13 + 32) = 0;
        if (v10 >= 1)
        {
          swift_retain();
          sub_23BA7A2E4(v13 + 16, v13 + v12, (_QWORD *)(v6 + 16), v6 + v12);
          *(_QWORD *)(v6 + 24) = 0;
          swift_release();
        }
LABEL_19:
        result = swift_release();
        *v1 = v13;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = *(_QWORD *)(v7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E970);
  v20 = *(_QWORD *)(v18 + 72);
  v21 = (v19 + 40) & ~v19;
  v13 = swift_allocObject();
  result = _swift_stdlib_malloc_size((const void *)v13);
  if (!v20)
    goto LABEL_21;
  if (result - v21 != 0x8000000000000000 || v20 != -1)
  {
    v23 = *(_QWORD *)(v6 + 24);
    *(_QWORD *)(v13 + 16) = (uint64_t)(result - v21) / v20;
    *(_QWORD *)(v13 + 24) = v23;
    *(_QWORD *)(v13 + 32) = 0;
    if (v23 >= 1)
      sub_23BA7A5C8(v13 + 16, v13 + v21, (_QWORD *)(v6 + 16), v6 + v21);
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_23BA7A02C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  size_t v10;
  uint64_t v11;
  uint64_t result;

  v2 = *v1;
  v3 = (uint64_t *)(*v1 + 16);
  v4 = *v3;
  if (*v3 >= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC28);
    v8 = swift_allocObject();
    v9 = *(_OWORD *)(v2 + 24);
    *(_QWORD *)(v8 + 16) = v4;
    *(_OWORD *)(v8 + 24) = v9;
    if ((uint64_t)v9 >= 1)
      sub_23BA7AAAC(v8 + 16, v8 + 40, v3, v2 + 40);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC30);
    sub_23BB89170();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v7 = *(_QWORD *)(v6 + 24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC28);
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = (uint64_t)(_swift_stdlib_malloc_size((const void *)v8) - 40) / 56;
      *(_QWORD *)(v8 + 24) = v7;
      *(_QWORD *)(v8 + 32) = 0;
      if (v7 >= 1)
      {
        swift_retain();
        sub_23BA7A49C(v8 + 16, (char *)(v8 + 40), (_QWORD *)(v6 + 16), (char *)(v6 + 40));
        *(_QWORD *)(v6 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC28);
      v8 = swift_allocObject();
      v10 = _swift_stdlib_malloc_size((const void *)v8);
      v11 = *(_QWORD *)(v6 + 24);
      *(_QWORD *)(v8 + 16) = (uint64_t)(v10 - 40) / 56;
      *(_QWORD *)(v8 + 24) = v11;
      *(_QWORD *)(v8 + 32) = 0;
      if (v11 >= 1)
        sub_23BA7A778(v8 + 16, v8 + 40, (_QWORD *)(v6 + 16), v6 + 40);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

_QWORD *sub_23BA7A22C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = result[1];
  v4 = result[2];
  v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      v9 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v9))
      {
LABEL_9:
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
        result = (_QWORD *)sub_23B989EFC(a3, a2 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v5, &qword_256A5E868);
        v11 = v8[1];
        v9 = __OFADD__(v11, 1);
        v12 = v11 + 1;
        if (!v9)
        {
          v8[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      v9 = __OFADD__(v5, *result);
      v5 += *result;
      if (v9)
        goto LABEL_13;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_23BA7A2E4(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BOOL4 v13;
  _BOOL4 v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_32;
  }
  v8 = a3[1];
  if (v5 < v8)
  {
    v9 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
      v11 = v5;
      v12 = a4;
      goto LABEL_6;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  v12 = 0;
  v9 = 0;
  v11 = v8;
LABEL_6:
  v13 = v5 < v8;
  v14 = v9 != 0;
  v15 = v13 && v14;
  if (v13 && v14)
    v16 = v12;
  else
    v16 = 0;
  if (v13 && v14)
    v17 = v9;
  else
    v17 = 0;
  if (v11 < 1)
  {
    v11 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v18 = a4 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v4;
  if (v18 > a2
    || v18 + *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868) - 8) + 72) * v11 <= a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v18 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
LABEL_20:
  if (!v15 || v17 <= 0)
    return;
  if (!v16)
  {
LABEL_34:
    __break(1u);
    return;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868) - 8) + 72);
  v20 = a2 + v19 * v11;
  v21 = v16 + v19 * v17;
  if (v20 < v16 || v20 >= v21)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v16)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

void sub_23BA7A49C(int a1, char *__dst, _QWORD *a3, char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BOOL4 v11;
  _BOOL4 v12;
  BOOL v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v18;
  size_t v19;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_27;
  }
  v7 = a3[1];
  if (v5 < v7)
  {
    v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      v9 = *a3 - v4;
      v10 = a4;
      goto LABEL_6;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v10 = 0;
  v8 = 0;
  v9 = a3[1];
LABEL_6:
  v11 = v5 < v7;
  v12 = v8 != 0;
  v13 = v11 && v12;
  if (v11 && v12)
    v14 = v10;
  else
    v14 = 0;
  if (v11 && v12)
    v15 = v8;
  else
    v15 = 0;
  if (v9 < 1)
  {
    v9 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v16 = &a4[56 * v4];
  if (v16 != __dst || &v16[56 * v9] <= __dst)
    memmove(__dst, v16, 56 * v9);
LABEL_20:
  if (!v13 || v15 <= 0)
    return;
  if (!v14)
  {
LABEL_29:
    __break(1u);
    return;
  }
  v18 = &__dst[56 * v9];
  v19 = 56 * v15;
  if (v18 != v14 || v18 >= &v14[v19])
    memmove(v18, v14, v19);
}

uint64_t sub_23BA7A5C8(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = a3[1];
  if (v5 >= v8)
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
    v12 = 0;
    v9 = 0;
    v11 = v8;
    if (v8 < 1)
      goto LABEL_5;
    goto LABEL_7;
  }
  v9 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  v11 = v5;
  v12 = a4;
  if (v5 < 1)
  {
LABEL_5:
    v11 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = a4 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v4;
  v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868) - 8) + 72) * v11;
  v15 = a2 + v14;
  v16 = v13 + v14;
  if (v13 < v15 && v16 > a2)
    goto LABEL_29;
  result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v8 || v9 < 1)
    return result;
  if (!v12)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    result = sub_23BB8B00C();
    __break(1u);
    return result;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868) - 8) + 72);
  v20 = a2 + v19 * v11;
  v21 = v19 * v9;
  v22 = v20 + v21;
  v23 = v12 + v21;
  if (v22 > v12 && v20 < v23)
    goto LABEL_29;
  return swift_arrayInitWithCopy();
}

uint64_t sub_23BA7A778(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v15;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_5;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *a3 - v4;
  v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v11 = a4 + 56 * v4;
  if (v11 < a2 + 56 * v9 && v11 + 56 * v9 > a2)
    goto LABEL_29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC30);
  result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v7 || v8 < 1)
    return result;
  if (!v10)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    result = sub_23BB8B00C();
    __break(1u);
    return result;
  }
  v15 = a2 + 56 * v9;
  if (v15 + 56 * v8 > v10 && v15 < v10 + 56 * v8)
    goto LABEL_29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC30);
  return swift_arrayInitWithCopy();
}

uint64_t sub_23BA7A900(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  v8 = a3[1];
  if (v5 >= v8)
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
    v12 = 0;
    v9 = 0;
    v11 = v8;
    if (v8 < 1)
      goto LABEL_14;
    goto LABEL_7;
  }
  v9 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  v11 = v5;
  v12 = a4;
  if (v5 < 1)
    goto LABEL_14;
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = a4 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v4;
  v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868) - 8) + 72);
  v15 = a2 + v14 * v4;
  v16 = v14 * v11;
  v17 = v15 + v16;
  v18 = v13 + v16;
  if (v13 < v17 && v15 < v18)
    goto LABEL_29;
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v9 >= 1)
  {
    if (v12)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868) - 8) + 72) * v9;
      v22 = a2 + v21;
      v23 = v12 + v21;
      if (v22 <= v12 || v23 <= a2)
        return swift_arrayInitWithCopy();
LABEL_29:
      result = sub_23BB8B00C();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_23BA7AAAC(uint64_t a1, unint64_t a2, _QWORD *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v4 = a3[2];
  v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  v7 = a3[1];
  if (v5 >= v7)
  {
    v10 = 0;
    v8 = 0;
    v9 = a3[1];
    if (v7 < 1)
      goto LABEL_14;
    goto LABEL_7;
  }
  v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = *a3 - v4;
  v10 = a4;
  if (v5 < 1)
    goto LABEL_14;
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v11 = 56 * v4;
  v12 = a4 + v11;
  v13 = a2 + v11;
  v14 = a2 + v11 + 56 * v9;
  v15 = a4 + v11 + 56 * v9;
  if (v12 < v14 && v13 < v15)
    goto LABEL_27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC30);
  result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 56 * v8 <= v10 || v10 + 56 * v8 <= a2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC30);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      result = sub_23BB8B00C();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_23BA7AC3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t result;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E868);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E970);
  v5 = swift_allocObject();
  v6 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1)
    sub_23BA7A900(v5 + 16, v5 + ((v4 + 40) & ~v4), (_QWORD *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  result = swift_release();
  *v0 = v5;
  return result;
}

uint64_t sub_23BA7ACF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t result;

  v1 = *v0;
  v2 = (uint64_t *)(*v0 + 16);
  v3 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EC28);
  v4 = swift_allocObject();
  v5 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1)
    sub_23BA7AAAC(v4 + 16, v4 + 40, v2, v1 + 40);
  result = swift_release();
  *v0 = v4;
  return result;
}

uint64_t sub_23BA7AD8C(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD *, _QWORD *))
{
  int64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  char v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v28;
  unint64_t *v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  _QWORD v36[3];
  char v37;
  _QWORD v38[2];
  char v39;
  int64_t v40;

  v30 = (unint64_t *)result;
  v31 = 0;
  v4 = 0;
  v7 = a3[8];
  v5 = a3 + 8;
  v6 = v7;
  v8 = 1 << *((_BYTE *)v5 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v32 = v5;
  v33 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v40 = v4;
      v12 = v11 | (v4 << 6);
      goto LABEL_5;
    }
    v23 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v23 >= v33)
      goto LABEL_24;
    v24 = v32[v23];
    v25 = v4 + 1;
    if (!v24)
    {
      v25 = v4 + 2;
      if (v4 + 2 >= v33)
        goto LABEL_24;
      v24 = v32[v25];
      if (!v24)
      {
        v25 = v4 + 3;
        if (v4 + 3 >= v33)
          goto LABEL_24;
        v24 = v32[v25];
        if (!v24)
          break;
      }
    }
LABEL_20:
    v10 = (v24 - 1) & v24;
    v40 = v25;
    v12 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_5:
    v13 = a3[7];
    v14 = a3[6] + 24 * v12;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    LOBYTE(v14) = *(_BYTE *)(v14 + 16);
    v38[0] = v15;
    v38[1] = v16;
    v39 = v14;
    v17 = v13 + 32 * v12;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(void **)(v17 + 16);
    v21 = *(_BYTE *)(v17 + 24);
    v36[0] = *(_QWORD *)v17;
    v19 = v36[0];
    v36[1] = v18;
    v36[2] = v20;
    v37 = v21;
    swift_bridgeObjectRetain();
    sub_23B9894A0(v19, v18, v20);
    v22 = a4(v38, v36);
    sub_23B9A13A4(v19, v18, v20);
    result = swift_bridgeObjectRelease();
    v4 = v40;
    if ((v22 & 1) != 0)
    {
      *(unint64_t *)((char *)v30 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v31++, 1))
      {
        __break(1u);
LABEL_24:
        v28 = sub_23BA7AFE0(v30, a2, v31, (uint64_t)a3);
        swift_release();
        return v28;
      }
    }
  }
  v26 = v4 + 4;
  if (v4 + 4 >= v33)
    goto LABEL_24;
  v24 = v32[v26];
  if (v24)
  {
    v25 = v4 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v33)
      goto LABEL_24;
    v24 = v32[v25];
    ++v26;
    if (v24)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23BA7AFE0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59330);
  result = sub_23BB8B000();
  v7 = result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = result + 64;
  v39 = v4;
  while (1)
  {
    if (v8)
    {
      v40 = (v8 - 1) & v8;
      v41 = v9;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
    }
    else
    {
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v12 >= a2)
        return v7;
      v13 = a1[v12];
      v14 = v9 + 1;
      if (!v13)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= a2)
          return v7;
        v13 = a1[v14];
        if (!v13)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= a2)
            return v7;
          v13 = a1[v14];
          if (!v13)
          {
            v15 = v9 + 4;
            if (v9 + 4 >= a2)
              return v7;
            v13 = a1[v15];
            if (!v13)
            {
              while (1)
              {
                v14 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_41;
                if (v14 >= a2)
                  return v7;
                v13 = a1[v14];
                ++v15;
                if (v13)
                  goto LABEL_24;
              }
            }
            v14 = v9 + 4;
          }
        }
      }
LABEL_24:
      v40 = (v13 - 1) & v13;
      v41 = v14;
      v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    v16 = *(_QWORD *)(v4 + 56);
    v17 = *(_QWORD *)(v4 + 48) + 24 * v11;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_BYTE *)(v17 + 16);
    v21 = v16 + 32 * v11;
    v23 = *(_QWORD *)v21;
    v22 = *(_QWORD *)(v21 + 8);
    v24 = *(void **)(v21 + 16);
    v25 = *(_BYTE *)(v21 + 24);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23B9894A0(v23, v22, v24);
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v10 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v10 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v10 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = *(_QWORD *)(v7 + 48) + 24 * v29;
    *(_QWORD *)v34 = v18;
    *(_QWORD *)(v34 + 8) = v19;
    *(_BYTE *)(v34 + 16) = v20;
    v35 = *(_QWORD *)(v7 + 56) + 32 * v29;
    *(_QWORD *)v35 = v23;
    *(_QWORD *)(v35 + 8) = v22;
    *(_QWORD *)(v35 + 16) = v24;
    *(_BYTE *)(v35 + 24) = v25;
    ++*(_QWORD *)(v7 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v39;
    v8 = v40;
    v9 = v41;
    if (!v5)
      return v7;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23BA7B300(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(_QWORD);

  v54 = a5;
  v11 = a5(0);
  v51 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v53 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v15);
  v50 = (char *)&v46 - v16;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_23BB8B000();
  v18 = result;
  v47 = a1;
  v48 = a2;
  if (a2 < 1)
    v19 = 0;
  else
    v19 = *a1;
  v20 = 0;
  v21 = result + 64;
  v49 = a4;
  v22 = (uint64_t)v50;
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v52 = v20;
      v24 = v23 | (v20 << 6);
    }
    else
    {
      v25 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_40;
      if (v25 >= v48)
        return v18;
      v26 = v47[v25];
      v27 = v20 + 1;
      if (!v26)
      {
        v27 = v20 + 2;
        if (v20 + 2 >= v48)
          return v18;
        v26 = v47[v27];
        if (!v26)
        {
          v27 = v20 + 3;
          if (v20 + 3 >= v48)
            return v18;
          v26 = v47[v27];
          if (!v26)
          {
            v28 = v20 + 4;
            if (v20 + 4 >= v48)
              return v18;
            v26 = v47[v28];
            if (!v26)
            {
              while (1)
              {
                v27 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_41;
                if (v27 >= v48)
                  return v18;
                v26 = v47[v27];
                ++v28;
                if (v26)
                  goto LABEL_24;
              }
            }
            v27 = v20 + 4;
          }
        }
      }
LABEL_24:
      v19 = (v26 - 1) & v26;
      v52 = v27;
      v24 = __clz(__rbit64(v26)) + (v27 << 6);
    }
    v29 = a4[7];
    v30 = a4[6] + 24 * v24;
    v31 = *(_QWORD *)v30;
    v32 = *(_QWORD *)(v30 + 8);
    v33 = *(_BYTE *)(v30 + 16);
    v34 = *(_QWORD *)(v51 + 72);
    v35 = v54;
    sub_23B989CE8(v29 + v34 * v24, v22, v54);
    sub_23B989CA4(v22, v53, v35);
    sub_23BB8B240();
    swift_bridgeObjectRetain_n();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
    sub_23BB8B24C();
    result = sub_23BB8B270();
    v36 = -1 << *(_BYTE *)(v18 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v39 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v42 = v38 == v41;
        if (v38 == v41)
          v38 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v43 == -1);
      v39 = __clz(__rbit64(~v43)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v44 = *(_QWORD *)(v18 + 48) + 24 * v39;
    *(_QWORD *)v44 = v31;
    *(_QWORD *)(v44 + 8) = v32;
    *(_BYTE *)(v44 + 16) = v33;
    result = sub_23B989CA4(v53, *(_QWORD *)(v18 + 56) + v39 * v34, v54);
    ++*(_QWORD *)(v18 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v49;
    v20 = v52;
    if (!a3)
      return v18;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23BA7B660(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_23BA7B7E0((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_23BA7B7E0((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x24260D9B4](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_23BA7B7E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int64_t v24;
  int64_t v25;

  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v13 = *(_QWORD *)(a3 + 56);
    v14 = 1 << *(_BYTE *)(a3 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v24 = (unint64_t)(v14 + 63) >> 6;
    if ((v15 & v13) != 0)
    {
      v16 = __clz(__rbit64(v15 & v13));
    }
    else
    {
      if ((unint64_t)(v14 + 63) >> 6 <= 1)
        goto LABEL_36;
      v17 = *(_QWORD *)(a3 + 64);
      v18 = 1;
      if (!v17)
      {
        v18 = 2;
        if ((unint64_t)(v14 + 63) >> 6 <= 2)
          goto LABEL_36;
        v17 = *(_QWORD *)(a3 + 72);
        if (!v17)
        {
          v19 = 3;
          if (v24 <= 3)
            goto LABEL_36;
          v17 = *(_QWORD *)(a3 + 80);
          if (!v17)
          {
            while (1)
            {
              v18 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_38;
              if (v18 >= v24)
                goto LABEL_36;
              v17 = *(_QWORD *)(a3 + 56 + 8 * v18);
              ++v19;
              if (v17)
                goto LABEL_34;
            }
          }
          v18 = 3;
        }
      }
LABEL_34:
      v16 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = *(unsigned __int16 *)(*(_QWORD *)(a3 + 48) + 24 * v16 + 16);
    sub_23BB8B240();
    __asm { BR              X9 }
  }
  v5 = *(_QWORD *)(a4 + 56);
  v6 = 1 << *(_BYTE *)(a4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v25 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0)
  {
    v8 = __clz(__rbit64(v7 & v5));
    goto LABEL_18;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a4 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_17;
    v10 = 2;
    if ((unint64_t)(v6 + 63) >> 6 <= 2)
      goto LABEL_36;
    v9 = *(_QWORD *)(a4 + 72);
    if (v9)
    {
LABEL_17:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_18:
      v12 = *(unsigned __int16 *)(*(_QWORD *)(a4 + 48) + 24 * v8 + 16);
      sub_23BB8B240();
      __asm { BR              X9 }
    }
    v11 = 3;
    if (v25 > 3)
    {
      v9 = *(_QWORD *)(a4 + 80);
      if (v9)
      {
        v10 = 3;
        goto LABEL_17;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v10 >= v25)
          goto LABEL_36;
        v9 = *(_QWORD *)(a4 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_17;
      }
      __break(1u);
LABEL_38:
      __break(1u);
      JUMPOUT(0x23BA7C248);
    }
  }
LABEL_36:
  swift_retain();
  return sub_23BAE3D24(a1, a2, 0, a3);
}

_QWORD *sub_23BA7C288(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v5 = a4 + 56;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v28 = -1 << *(_BYTE *)(a4 + 32);
  v29 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = *(_QWORD *)(a4 + 48) + 72 * v15;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v25 = *(_QWORD *)(v19 + 32);
    v24 = *(_QWORD *)(v19 + 40);
    v26 = *(_BYTE *)(v19 + 48);
    v27 = *(_QWORD *)(v19 + 56);
    LOBYTE(v19) = *(_BYTE *)(v19 + 64);
    *(_QWORD *)v10 = v20;
    *(_QWORD *)(v10 + 8) = v21;
    *(_QWORD *)(v10 + 16) = v22;
    *(_QWORD *)(v10 + 24) = v23;
    *(_QWORD *)(v10 + 32) = v25;
    *(_QWORD *)(v10 + 40) = v24;
    *(_BYTE *)(v10 + 48) = v26;
    *(_QWORD *)(v10 + 56) = v27;
    *(_BYTE *)(v10 + 64) = v19;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v28;
      result = v29;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23BA7C4D4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_23BA7C6D0(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v9 = 0;
    a3 = 0;
LABEL_34:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v9;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v9 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (1)
  {
    if (v8 == a3)
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v7)
      goto LABEL_8;
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_36;
    if (v11 >= v10)
    {
LABEL_29:
      v7 = 0;
LABEL_33:
      a3 = v8;
      goto LABEL_34;
    }
    v7 = *(_QWORD *)(v4 + 8 * v11);
    if (!v7)
    {
      v9 += 2;
      if (v11 + 1 >= v10)
      {
        v7 = 0;
        v9 = v11;
        goto LABEL_33;
      }
      v7 = *(_QWORD *)(v4 + 8 * v9);
      if (v7)
        goto LABEL_8;
      if (v11 + 2 >= v10)
        goto LABEL_29;
      v7 = *(_QWORD *)(v4 + 8 * (v11 + 2));
      if (v7)
      {
        v9 = v11 + 2;
        goto LABEL_8;
      }
      v9 = v11 + 3;
      if (v11 + 3 >= v10)
      {
        v7 = 0;
        v9 = v11 + 2;
        goto LABEL_33;
      }
      v7 = *(_QWORD *)(v4 + 8 * v9);
      if (v7)
        goto LABEL_8;
      v11 += 4;
      if (v11 >= v10)
        goto LABEL_29;
      v7 = *(_QWORD *)(v4 + 8 * v11);
      if (!v7)
        break;
    }
    v9 = v11;
LABEL_8:
    ++v8;
    v7 &= v7 - 1;
    if (v8 == a3)
      goto LABEL_34;
  }
  while (1)
  {
    v9 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v9 >= v10)
    {
      v7 = 0;
      v9 = v10 - 1;
      goto LABEL_33;
    }
    v7 = *(_QWORD *)(v4 + 8 * v9);
    ++v11;
    if (v7)
      goto LABEL_8;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23BA7C83C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v21 = *(_QWORD *)(v20 + 8);
    v22 = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = *(_QWORD *)v20;
    *(_QWORD *)(v11 + 8) = v21;
    *(_BYTE *)(v11 + 16) = v22;
    if (v13 == v10)
    {
      sub_23B9894D4();
      goto LABEL_38;
    }
    v11 += 24;
    result = sub_23B9894D4();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23BA7CA48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    LOWORD(v20) = *(_WORD *)(v20 + 16);
    *(_QWORD *)v11 = v22;
    *(_QWORD *)(v11 + 8) = v21;
    *(_WORD *)(v11 + 16) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23BA7CC54(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(a4 + 48) + 24 * v16;
    v22 = *(_QWORD *)v20;
    v21 = *(_QWORD *)(v20 + 8);
    LOBYTE(v20) = *(_BYTE *)(v20 + 16);
    *(_QWORD *)v11 = v22;
    *(_QWORD *)(v11 + 8) = v21;
    *(_BYTE *)(v11 + 16) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23BA7CE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(v2 + 64) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = v4;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  *(_QWORD *)(v2 + 56) = v5;
  *(_BYTE *)(v2 + 65) = *(_BYTE *)(a2 + 48);
  return swift_task_switch();
}

uint64_t sub_23BA7CEA0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);

  v1 = *(_BYTE *)(v0 + 65);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(void **)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  v8 = *(unsigned __int8 *)(v0 + 64);
  *(_QWORD *)v7 = v6;
  *(_QWORD *)(v7 + 8) = v4;
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v8;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = v3;
  *(_BYTE *)(v7 + 48) = v1;
  sub_23BA44F90(v6, v4, v5);
  v10 = *(uint64_t (**)(void))(v0 + 8);
  swift_bridgeObjectRetain();
  return v10();
}

uint64_t sub_23BA7CF04(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *i;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v4 = 0;
  v5 = result + 48;
  v6 = -(uint64_t)v2;
  v7 = MEMORY[0x24BEE4AF8];
  v19 = result + 48;
  v20 = *(_QWORD *)(result + 16);
  do
  {
    v21 = v7;
    if (v4 <= v2)
      v8 = v2;
    else
      v8 = v4;
    v9 = -(uint64_t)v8;
    for (i = (unsigned __int8 *)(v5 + 24 * v4++); ; i += 24)
    {
      if (v9 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      v11 = *((_QWORD *)i - 2);
      v12 = *((_QWORD *)i - 1);
      v13 = *i;
      v14 = *(unsigned __int8 *)(a2 + 32);
      if (v11 != *(_QWORD *)(a2 + 16) || v12 != *(_QWORD *)(a2 + 24))
      {
        result = sub_23BB8B1A4();
        if ((result & 1) == 0)
          break;
      }
      if (v13 != v14)
        break;
      ++v4;
      if (v6 + v4 == 1)
        return v21;
    }
    swift_bridgeObjectRetain();
    v7 = v21;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_23BB004F4(0, *(_QWORD *)(v21 + 16) + 1, 1);
      v7 = v21;
    }
    v17 = *(_QWORD *)(v7 + 16);
    v16 = *(_QWORD *)(v7 + 24);
    if (v17 >= v16 >> 1)
    {
      result = sub_23BB004F4(v16 > 1, v17 + 1, 1);
      v7 = v21;
    }
    *(_QWORD *)(v7 + 16) = v17 + 1;
    v18 = v7 + 24 * v17;
    *(_QWORD *)(v18 + 32) = v11;
    *(_QWORD *)(v18 + 40) = v12;
    *(_BYTE *)(v18 + 48) = v13;
    v5 = v19;
    v2 = v20;
  }
  while (v6 + v4);
  return v7;
}

uint64_t sub_23BA7D08C@<X0>(_QWORD *a1@<X8>)
{
  return sub_23BA5CC78(a1);
}

uint64_t sub_23BA7D0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA5CCF0(a1, a2, a3, a4, (uint64_t)&unk_23BB91AB8, (uint64_t)&unk_23BB91AE0, (void (*)(_QWORD))type metadata accessor for SessionFollowerState, "Repository: followerStateByHandle - %s");
}

unint64_t sub_23BA7D0E4()
{
  unint64_t result;

  result = qword_256A641A0;
  if (!qword_256A641A0)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_256A641A0);
  }
  return result;
}

uint64_t sub_23BA7D128@<X0>(_QWORD *a1@<X8>)
{
  return sub_23BA5CC78(a1);
}

uint64_t sub_23BA7D14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA5CCF0(a1, a2, a3, a4, (uint64_t)&unk_23BB91B00, (uint64_t)&unk_23BB91B28, (void (*)(_QWORD))type metadata accessor for SessionFollowingState, "Repository: followingStateByHandle - %s");
}

uint64_t sub_23BA7D180@<X0>(_QWORD *a1@<X8>)
{
  return sub_23BA5CC78(a1);
}

uint64_t sub_23BA7D1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA5C640(a1, a2, a3, a4, (uint64_t)&unk_23BB91B48, (uint64_t)&unk_23BB91B70, (uint64_t (*)(uint64_t))sub_23BA5C40C);
}

uint64_t sub_23BA7D1D8@<X0>(_QWORD *a1@<X8>)
{
  return sub_23BA5CC78(a1);
}

uint64_t sub_23BA7D1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA5C640(a1, a2, a3, a4, (uint64_t)&unk_23BB91BD8, (uint64_t)&unk_23BB91C00, (uint64_t (*)(uint64_t))sub_23BA5C1E0);
}

uint64_t sub_23BA7D240()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BA7D264()
{
  return sub_23BA5E670();
}

uint64_t sub_23BA7D26C(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA9A034(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_23BA7D274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB88984();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23BA7D330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(sub_23BB88984() - 8);
  v4 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v12 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v7 = *(unsigned __int8 *)(v1 + 56);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B97C964;
  return sub_23BA63E6C(a1, v11, v10, v4, v5, v6, v7, v12);
}

unint64_t sub_23BA7D430()
{
  unint64_t result;

  result = qword_256A5E7D0;
  if (!qword_256A5E7D0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB9339C, &_s16SubscriptionDataON);
    atomic_store(result, &qword_256A5E7D0);
  }
  return result;
}

uint64_t sub_23BA7D474()
{
  return swift_release();
}

unint64_t sub_23BA7D47C()
{
  unint64_t result;

  result = qword_256A5E808;
  if (!qword_256A5E808)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB91D70, &type metadata for Repository.RepositoryError);
    atomic_store(result, &qword_256A5E808);
  }
  return result;
}

uint64_t sub_23BA7D4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_23BB88984();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;

  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_23BA7D554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_23BB88984() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = v1 + v6;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + v6) & ~v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B97C964;
  return sub_23BA6827C(a1, v7, v8, v9);
}

uint64_t sub_23BA7D5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B9C9738;
  return sub_23BA68E14(a1, v5, v4);
}

uint64_t sub_23BA7D64C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B990D68;
  return sub_23BA52D18(a1, v1);
}

void sub_23BA7D6A0()
{
  uint64_t v0;

  sub_23BA53638(v0);
}

uint64_t sub_23BA7D6A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t v13;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838);
  v1 = *(_QWORD *)(v13 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = sub_23BB88A80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E870) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v13);
  swift_release();
  v10 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v10(v0 + v6, v4);
  v11 = v0 + v9;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4))
    v10(v11, v4);
  return swift_deallocObject();
}

uint64_t sub_23BA7D7E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_23BB88A80() - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E870) - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = v1 + v5;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = v1 + v8;
  v15 = v1 + (v11 & ~v10);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_23B990D68;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23BA7D8D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_23B990D68;
  return sub_23BA53AA4(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_23BA7D954()
{
  return objectdestroy_81Tm(&qword_256A5E838);
}

uint64_t sub_23BA7D960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E838) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA5456C(a1, v6, v7, v8, v9);
}

uint64_t sub_23BA7DA0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_23BB88A80() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA552C0(a1, v6, v7, v8, v9);
}

uint64_t objectdestroy_85Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB88A80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7DB44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_23BB88A80() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA56114(a1, v6, v7, v8, v9);
}

uint64_t sub_23BA7DBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E998);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BA7DC64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5E998) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B990D68;
  return sub_23BA68884(a1, v5, v6, v7);
}

uint64_t sub_23BA7DCEC(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  BOOL v32;
  BOOL v33;
  unint64_t *v37;
  uint64_t v38;
  unint64_t v40;
  _QWORD *v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;

  v37 = (unint64_t *)result;
  v38 = 0;
  v7 = 0;
  v10 = a3[8];
  v8 = a3 + 8;
  v9 = v10;
  v11 = 1 << *((_BYTE *)v8 - 32);
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & v9;
  v41 = v8;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v45 = a4 + 56;
  while (2)
  {
    while (2)
    {
      while (2)
      {
        while (2)
        {
          if (v13)
          {
            v14 = __clz(__rbit64(v13));
            v13 &= v13 - 1;
            v15 = v14 | (v7 << 6);
            if (!*(_QWORD *)(a4 + 16))
              continue;
            goto LABEL_23;
          }
          break;
        }
        v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        if (v16 >= v42)
          return sub_23BA7B300(v37, a2, v38, a3, a5, a6);
        v17 = v41[v16];
        ++v7;
        if (v17)
          goto LABEL_22;
        v7 = v16 + 1;
        if (v16 + 1 >= v42)
          return sub_23BA7B300(v37, a2, v38, a3, a5, a6);
        v17 = v41[v7];
        if (v17)
          goto LABEL_22;
        v7 = v16 + 2;
        if (v16 + 2 >= v42)
          return sub_23BA7B300(v37, a2, v38, a3, a5, a6);
        v17 = v41[v7];
        if (v17)
          goto LABEL_22;
        v18 = v16 + 3;
        if (v18 >= v42)
          return sub_23BA7B300(v37, a2, v38, a3, a5, a6);
        v17 = v41[v18];
        if (!v17)
        {
          while (1)
          {
            v7 = v18 + 1;
            if (__OFADD__(v18, 1))
              break;
            if (v7 >= v42)
              return sub_23BA7B300(v37, a2, v38, a3, a5, a6);
            v17 = v41[v7];
            ++v18;
            if (v17)
              goto LABEL_22;
          }
LABEL_43:
          __break(1u);
          return result;
        }
        v7 = v18;
LABEL_22:
        v13 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v7 << 6);
        if (!*(_QWORD *)(a4 + 16))
          continue;
        break;
      }
LABEL_23:
      v43 = v13;
      v44 = v7;
      v40 = v15;
      v19 = a3[6] + 24 * v15;
      v21 = *(_QWORD *)v19;
      v20 = *(_QWORD *)(v19 + 8);
      v22 = *(unsigned __int8 *)(v19 + 16);
      sub_23BB8B240();
      sub_23BB8B24C();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      sub_23BB8B24C();
      v23 = sub_23BB8B270();
      v24 = -1 << *(_BYTE *)(a4 + 32);
      v25 = v23 & ~v24;
      if (((*(_QWORD *)(v45 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      {
LABEL_5:
        result = swift_bridgeObjectRelease_n();
        v13 = v43;
        v7 = v44;
        continue;
      }
      break;
    }
    v26 = ~v24;
    while (1)
    {
      v27 = *(_QWORD *)(a4 + 48) + 24 * v25;
      v28 = *(_QWORD *)v27;
      v29 = *(_QWORD *)(v27 + 8);
      v30 = *(unsigned __int16 *)(v27 + 16);
      if ((v30 >> 14) - 1 >= 2 && v30 >> 14 == 0)
      {
        v32 = v28 == v21 && v29 == v20;
        if (v32 || (sub_23BB8B1A4() & 1) != 0)
          break;
      }
      swift_bridgeObjectRetain();
      sub_23B9906EC(v28, v29, v30);
      sub_23B9906D4(v28, v29, v30);
      sub_23B9906D4(v21, v20, v22);
LABEL_26:
      v25 = (v25 + 1) & v26;
      if (((*(_QWORD *)(v45 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    sub_23B9906EC(v28, v29, v30);
    sub_23B9906D4(v28, v29, v30);
    sub_23B9906D4(v21, v20, v22);
    if (v22 != v30)
      goto LABEL_26;
    result = swift_bridgeObjectRelease_n();
    *(unint64_t *)((char *)v37 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
    v33 = __OFADD__(v38++, 1);
    v13 = v43;
    v7 = v44;
    if (!v33)
      continue;
    break;
  }
  __break(1u);
  return sub_23BA7B300(v37, a2, v38, a3, a5, a6);
}

uint64_t sub_23BA7E05C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v4;
  char v9;
  unsigned int v10;
  unint64_t v11;
  size_t v12;
  uint64_t isStackAllocationSafe;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x24BDAC8D0];
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  v12 = 8 * v11;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v14);
    bzero((char *)v18 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    swift_bridgeObjectRetain();
    v15 = sub_23BA7DCEC((uint64_t)v18 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, (_QWORD *)a1, a2, a3, a4);
    swift_bridgeObjectRelease();
    if (v4)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = (void *)swift_slowAlloc();
    bzero(v16, v12);
    swift_bridgeObjectRetain();
    v15 = sub_23BA7DCEC((uint64_t)v16, v11, (_QWORD *)a1, a2, a3, a4);
    swift_bridgeObjectRelease();
    MEMORY[0x24260D9B4](v16, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v15;
}

uint64_t (*sub_23BA7E230(uint64_t a1, uint64_t (*a2)(_QWORD *, _QWORD *)))(_QWORD *, _QWORD *)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v3 = v2;
  v15[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v11);
    bzero((char *)v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    v12 = sub_23BA7AD8C((uint64_t)v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, (_QWORD *)a1, a2);
    if (v3)
      swift_willThrow();
    else
      a2 = (uint64_t (*)(_QWORD *, _QWORD *))v12;
    swift_release();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v9);
    swift_retain();
    a2 = (uint64_t (*)(_QWORD *, _QWORD *))sub_23BA7AD8C((uint64_t)v13, v8, (_QWORD *)a1, a2);
    MEMORY[0x24260D9B4](v13, -1, -1);
    swift_release();
  }
  swift_release();
  return a2;
}

uint64_t sub_23BA7E3E8(uint64_t result, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;

  v27 = (unint64_t *)result;
  v28 = 0;
  v5 = 0;
  v8 = a3[8];
  v6 = a3 + 8;
  v7 = v8;
  v9 = 1 << *((_BYTE *)v6 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v29 = v6;
  v30 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_5;
    }
    v22 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v30)
      return sub_23BA7B300(v27, a2, v28, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
    v23 = v29[v22];
    ++v5;
    if (!v23)
    {
      v5 = v22 + 1;
      if (v22 + 1 >= v30)
        return sub_23BA7B300(v27, a2, v28, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
      v23 = v29[v5];
      if (!v23)
      {
        v5 = v22 + 2;
        if (v22 + 2 >= v30)
          return sub_23BA7B300(v27, a2, v28, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
        v23 = v29[v5];
        if (!v23)
          break;
      }
    }
LABEL_20:
    v11 = (v23 - 1) & v23;
    v13 = __clz(__rbit64(v23)) + (v5 << 6);
LABEL_5:
    v14 = a3[6] + 24 * v13;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(unsigned __int8 *)(v14 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E9D8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23BB8FEC0;
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(inited + 40) = v16;
    *(_WORD *)(inited + 48) = v17 | 0x8000;
    *(_QWORD *)(inited + 56) = v15;
    *(_QWORD *)(inited + 64) = v16;
    *(_WORD *)(inited + 72) = v17 | 0x8100;
    swift_bridgeObjectRetain_n();
    v19 = sub_23B98F7E4(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRetain();
    v20 = sub_23BA7B660(v19, a4);
    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v20 + 16);
    swift_bridgeObjectRelease();
    result = swift_release();
    if (v21)
    {
      *(unint64_t *)((char *)v27 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v28++, 1))
      {
        __break(1u);
        return sub_23BA7B300(v27, a2, v28, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
      }
    }
  }
  v24 = v22 + 3;
  if (v24 >= v30)
    return sub_23BA7B300(v27, a2, v28, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
  v23 = v29[v24];
  if (v23)
  {
    v5 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v5 >= v30)
      return sub_23BA7B300(v27, a2, v28, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
    v23 = v29[v5];
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23BA7E678(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v12);
    bzero((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    v13 = a3((char *)v16 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, v10);
    swift_bridgeObjectRetain();
    v13 = a3((char *)v14, v9, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x24260D9B4](v14, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v13;
}

uint64_t sub_23BA7E830(unint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  _QWORD *v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;

  v5 = 0;
  v8 = a3[8];
  v6 = a3 + 8;
  v7 = v8;
  v9 = 1 << *((_BYTE *)v6 - 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & v7;
  v20 = v6;
  v21 = (unint64_t)(v9 + 63) >> 6;
  v24 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      v11 &= v11 - 1;
      if (*(_QWORD *)(a4 + 16))
        goto LABEL_23;
    }
    v12 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v21)
      return sub_23BA7B300(a1, a2, 0, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
    v13 = v20[v12];
    ++v5;
    if (!v13)
    {
      v5 = v12 + 1;
      if (v12 + 1 >= v21)
        return sub_23BA7B300(a1, a2, 0, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
      v13 = v20[v5];
      if (!v13)
      {
        v5 = v12 + 2;
        if (v12 + 2 >= v21)
          return sub_23BA7B300(a1, a2, 0, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
        v13 = v20[v5];
        if (!v13)
          break;
      }
    }
LABEL_22:
    v11 = (v13 - 1) & v13;
    if (*(_QWORD *)(a4 + 16))
    {
LABEL_23:
      v22 = v11;
      v23 = v5;
      sub_23BB8B240();
      sub_23BB8B24C();
      swift_bridgeObjectRetain_n();
      sub_23BB8A808();
      sub_23BB8B24C();
      v15 = sub_23BB8B270() & ~(-1 << *(_BYTE *)(a4 + 32));
      if (((*(_QWORD *)(v24 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
        __asm { BR              X9 }
      swift_bridgeObjectRelease_n();
      v11 = v22;
      v5 = v23;
    }
  }
  v14 = v12 + 3;
  if (v14 < v21)
  {
    v13 = v20[v14];
    if (!v13)
    {
      while (1)
      {
        v5 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v5 >= v21)
          return sub_23BA7B300(a1, a2, 0, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
        v13 = v20[v5];
        ++v14;
        if (v13)
          goto LABEL_22;
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0x23BA7EBC0);
    }
    v5 = v14;
    goto LABEL_22;
  }
  return sub_23BA7B300(a1, a2, 0, a3, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState, (uint64_t *)&unk_256A5E9E0);
}

uint64_t sub_23BA7EBD0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

BOOL sub_23BA7EBF4(uint64_t a1)
{
  uint64_t v1;

  return sub_23BA7EC08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)(v1 + 16));
}

BOOL sub_23BA7EC08(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5E9D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8FEC0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  *(_WORD *)(inited + 48) = a3 | 0x8000;
  *(_QWORD *)(inited + 56) = a1;
  *(_QWORD *)(inited + 64) = a2;
  *(_WORD *)(inited + 72) = a3 | 0x8100;
  swift_bridgeObjectRetain_n();
  v9 = sub_23B98F7E4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_bridgeObjectRetain();
  v10 = sub_23BA7B660(v9, a4);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  swift_release();
  return v11 != 0;
}

uint64_t sub_23BA7ED00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B990D68;
  return sub_23BA60CA0(a1, v4, v5, v7, v6);
}

uint64_t sub_23BA7ED78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_BYTE *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23B990D68;
  *(_BYTE *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA7EDF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_BYTE *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_23B990D68;
  *(_BYTE *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23BA7EE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23BB88984();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7EF00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_23BB88984() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(double *)(v1 + v6);
  v11 = *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_23B990D68;
  return sub_23BA635A4(v10, a1, v7, v8, v9, v11);
}

uint64_t sub_23BA7EFB4()
{
  return swift_deallocObject();
}

uint64_t sub_23BA7EFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v8;
  _QWORD *v9;

  v8 = *(_BYTE *)(v3 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23B990D68;
  return sub_23BA4D6EC(a1, a2, a3, v8);
}

uint64_t sub_23BA7F034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA78);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = sub_23BB88A80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(v1 + 64);
  v7 = sub_23BB8AF1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7F10C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EA78) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA6FFFC(a1, v6, v7, v8, v9);
}

uint64_t sub_23BA7F1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23BA7F234(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EAC0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B990D68;
  return sub_23BA71B9C(a1, v5, v6, v7, v8);
}

uint64_t sub_23BA7F2CC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE2(a3) != 255)
    return sub_23BA19A94(result, a2, a3, SBYTE2(a3));
  return result;
}

uint64_t sub_23BA7F2E0()
{
  return objectdestroy_81Tm(&qword_256A5DEE8);
}

uint64_t sub_23BA7F2EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5DEE8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA73628(a1, v6, v7, v8, v9);
}

uint64_t sub_23BA7F394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v1 = type metadata accessor for SessionFriend(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v3 = v0 + ((v2 + 40) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_23BB88984();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = v3 + *(int *)(v1 + 28);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return swift_deallocObject();
}

uint64_t sub_23BA7F480(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SessionFriend(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B990D68;
  return sub_23BA73F00(a1, v5, v6, v7, v8);
}

uint64_t sub_23BA7F514()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7F538(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23B990D68;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256A5E7C0 + dword_256A5E7C0))(a1, v4);
}

uint64_t sub_23BA7F5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB48);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(v1 + 68);
  v7 = sub_23BB8AF1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7F66C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB48) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA74DCC(a1, v6, v7, v8, v9);
}

uint64_t sub_23BA7F714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23B990D68;
  return sub_23BA57A00(a1, v1);
}

void sub_23BA7F768()
{
  uint64_t v0;

  sub_23BA586A4(v0);
}

uint64_t sub_23BA7F770(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >= 2)
  {
    sub_23BA44F90(result, a2, a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23BA7F7A0(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 != 2)
    return sub_23BA7F7B0(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t sub_23BA7F7B0(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >= 2)
  {
    sub_23BA44FEC(result, a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23BA7F7E0(id a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)

  else
    sub_23BA7F7B0((uint64_t)a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23BA7F7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(uint64_t, uint64_t);

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB90) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_unknownObjectRelease();
  swift_release();
  v11 = v0 + v3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBC0);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v14(v11, v12);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v10, 1, v1))
  {
    v14(v0 + v10, v12);
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_23BA7F954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB90) - 8) + 80);
  v11 = v8 + v9 + v10;
  v12 = *(_QWORD *)(v1 + 32);
  v13 = v1 + v5;
  v14 = v1 + v8;
  v15 = v1 + (v11 & ~v10);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_23B990D68;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23BA7FA40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_23BA7FA84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_23B990D68;
  return sub_23BA58C54(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_23BA7FB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA5A4E8(a1, v6, v7, v8, v9);
}

uint64_t sub_23BA7FBB0()
{
  return objectdestroy_81Tm(&qword_256A5EB98);
}

uint64_t objectdestroy_81Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7FC48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EB98) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA5981C(a1, v6, v7, v8, v9);
}

uint64_t objectdestroy_187Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBA0) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EBC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7FDA0(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 != 2)
    return sub_23BA7F770(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t sub_23BA7FDB0(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t objectdestroy_111Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA7FDF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B990D68;
  return sub_23BA6A4C0(a1, v4, v5, v7, v6);
}

uint64_t sub_23BA7FE74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v12 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v11 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_BYTE *)(v1 + 64);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23B990D68;
  return sub_23BA6B8BC(a1, v12, v11, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_210Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for Repository.RepositoryError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BA7FFC0 + 4 * byte_23BB919F6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BA7FFF4 + 4 * byte_23BB919F1[v4]))();
}

uint64_t sub_23BA7FFF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA7FFFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA80004);
  return result;
}

uint64_t sub_23BA80010(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA80018);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BA8001C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA80024(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Repository.RepositoryError()
{
  return &type metadata for Repository.RepositoryError;
}

unint64_t sub_23BA80044()
{
  unint64_t result;

  result = qword_256A5ECC0;
  if (!qword_256A5ECC0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB91D48, &type metadata for Repository.RepositoryError);
    atomic_store(result, (unint64_t *)&qword_256A5ECC0);
  }
  return result;
}

__n128 GenericControl.init(info:matchingSizeOfInfos:)@<Q0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;

  v11 = a1[1];
  v12 = *a1;
  v9 = (__n128)a1[3];
  v10 = a1[2];
  v5 = *((_QWORD *)a1 + 8);
  sub_23BB8A0C4();
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  *(_OWORD *)a3 = v12;
  *(_OWORD *)(a3 + 16) = v11;
  result = v9;
  *(_OWORD *)(a3 + 32) = v10;
  *(__n128 *)(a3 + 48) = v9;
  *(_QWORD *)(a3 + 64) = v5;
  *(_QWORD *)(a3 + 72) = a2;
  *(_BYTE *)(a3 + 80) = v13;
  *(_QWORD *)(a3 + 88) = v14;
  *(_QWORD *)(a3 + 96) = KeyPath;
  *(_BYTE *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = v7;
  *(_BYTE *)(a3 + 120) = 0;
  return result;
}

uint64_t sub_23BA8016C(_QWORD *a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5, char a6)
{
  char v7;

  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0)
    {
      v7 = sub_23BA458BC(a1, a4);
      sub_23BA0DF1C();
      swift_bridgeObjectRelease();
      return v7 & 1;
    }
    return 0;
  }
  if ((a6 & 1) != 0)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_23BB8B1A4();
}

uint64_t GenericControl.Info.Label.init(titlesToFit:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = 0;
  *(_BYTE *)(a7 + 16) = 1;
  *(_QWORD *)(a7 + 24) = a2;
  *(_QWORD *)(a7 + 32) = a3;
  *(_BYTE *)(a7 + 40) = a4;
  *(_BYTE *)(a7 + 41) = a5;
  *(_BYTE *)(a7 + 42) = a6;
  return result;
}

uint64_t GenericControl.Info.Label.init(title:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_BYTE *)(a8 + 16) = 0;
  *(_QWORD *)(a8 + 24) = a3;
  *(_QWORD *)(a8 + 32) = a4;
  *(_BYTE *)(a8 + 40) = a5;
  *(_BYTE *)(a8 + 41) = a6;
  *(_BYTE *)(a8 + 42) = a7;
  return result;
}

__n128 GenericControl.Info.MenuOption.init(label:action:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  char v5;
  char v6;
  char v7;
  __n128 result;

  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 41);
  v7 = *(_BYTE *)(a1 + 42);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_BYTE *)(a4 + 16) = v4;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a4 + 24) = result;
  *(_BYTE *)(a4 + 40) = v5;
  *(_BYTE *)(a4 + 41) = v6;
  *(_BYTE *)(a4 + 42) = v7;
  *(_QWORD *)(a4 + 48) = a2;
  *(_QWORD *)(a4 + 56) = a3;
  return result;
}

uint64_t GenericControl.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[3];

  v35 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECD0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECD8);
  MEMORY[0x24BDAC7A8](v32, v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE0);
  MEMORY[0x24BDAC7A8](v34, v9);
  v33 = (uint64_t)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1[5];
  v12 = v1[3];
  v48 = v1[4];
  v49 = v11;
  v13 = v1[5];
  v50[0] = v1[6];
  *(_OWORD *)((char *)v50 + 9) = *(__int128 *)((char *)v1 + 105);
  v14 = v1[1];
  v44 = *v1;
  v45 = v14;
  v15 = v1[3];
  v17 = *v1;
  v16 = v1[1];
  v46 = v1[2];
  v47 = v15;
  v41 = v48;
  v42 = v13;
  v43[0] = v1[6];
  *(_OWORD *)((char *)v43 + 9) = *(__int128 *)((char *)v1 + 105);
  v37 = v17;
  v38 = v16;
  v39 = v46;
  v40 = v12;
  sub_23BA805C0((uint64_t)v5);
  v18 = *((_QWORD *)&v46 + 1);
  v30[1] = v45;
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  sub_23BA84438();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v20 = swift_allocObject();
  v31 = v18;
  *(_BYTE *)(v20 + 16) = BYTE2(v18) & 1;
  sub_23B989EFC((uint64_t)v5, (uint64_t)v8, &qword_256A5ECD0);
  v21 = *((int *)v32 + 9);
  v32 = v8;
  v22 = (uint64_t *)&v8[v21];
  *v22 = KeyPath;
  v22[1] = (uint64_t)sub_23BA84508;
  v22[2] = v20;
  sub_23B989D60((uint64_t)v5, &qword_256A5ECD0);
  LOBYTE(v37) = v49;
  *((_QWORD *)&v37 + 1) = *((_QWORD *)&v49 + 1);
  sub_23BA84520((uint64_t)&v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  if (v36 == 1
    || (sub_23BA0DF1C(), swift_bridgeObjectRetain(), sub_23BA84438(), swift_bridgeObjectRelease(), (v31 & 0x100) != 0))
  {
    sub_23BA845B8((uint64_t)&v44);
    v26 = 0;
  }
  else
  {
    v23 = *(_QWORD *)&v50[1];
    v24 = BYTE8(v50[1]);
    sub_23BA84520((uint64_t)&v44);
    sub_23BA2C1E8(v23, v24);
    v25 = sub_23BA83F60(v23, v24);
    sub_23B9C62D4(v23, v24);
    sub_23BA845B8((uint64_t)&v44);
    sub_23BA845B8((uint64_t)&v44);
    v26 = v25 ^ 1;
  }
  v27 = (uint64_t)v32;
  v28 = v33;
  sub_23B989EFC((uint64_t)v32, v33, &qword_256A5ECD8);
  *(_BYTE *)(v28 + *(int *)(v34 + 36)) = v26 & 1;
  sub_23B989D60(v27, &qword_256A5ECD8);
  return sub_23B990D24(v28, v35, &qword_256A5ECE0);
}

uint64_t sub_23BA805C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;

  v46 = a1;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDA0);
  MEMORY[0x24BDAC7A8](v42, v2);
  v45 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23BB89AAC();
  v36 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41, v4);
  v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ED58);
  MEMORY[0x24BDAC7A8](v44, v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDA8);
  v38 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v9);
  v34 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v37 = (char *)&v34 - v13;
  v14 = *(_QWORD *)v1;
  v15 = *(_QWORD *)(v1 + 8);
  v16 = *(_QWORD *)(v1 + 16);
  v40 = *(_QWORD *)(v1 + 24);
  v17 = *(_QWORD *)(v1 + 32);
  v18 = *(_QWORD *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 48);
  v20 = *(_QWORD *)(v1 + 56);
  v39 = *(_QWORD *)(v1 + 64);
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  sub_23BA84438();
  swift_bridgeObjectRelease();
  v21 = *(_OWORD *)(v1 + 88);
  v56 = *(_OWORD *)(v1 + 72);
  v57 = v21;
  v47 = v14;
  v48 = v15;
  v49 = v16;
  v50 = v40;
  v51 = v17;
  v52 = v18;
  v53 = v19;
  v54 = v20;
  v55 = v39;
  v58 = *(_OWORD *)(v1 + 104);
  v59 = *(_BYTE *)(v1 + 120);
  sub_23BA809CC((uint64_t)v8);
  if ((v18 & 1) != 0)
  {
    v25 = v35;
    sub_23BB89AA0();
    v26 = sub_23BA85BE8();
    v27 = sub_23BA85C84();
    v28 = v34;
    v29 = v44;
    v30 = v41;
    sub_23BB89D94();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v30);
    sub_23B989D60((uint64_t)v8, &qword_256A5ED58);
    v31 = v38;
    v32 = v37;
    v33 = v43;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v28, v43);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v45, v32, v33);
    swift_storeEnumTagMultiPayload();
    v47 = v29;
    v48 = v30;
    v49 = v26;
    v50 = v27;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  }
  else
  {
    sub_23B989EFC((uint64_t)v8, v45, &qword_256A5ED58);
    swift_storeEnumTagMultiPayload();
    v22 = sub_23BA85BE8();
    v23 = sub_23BA85C84();
    v47 = v44;
    v48 = v41;
    v49 = v22;
    v50 = v23;
    swift_getOpaqueTypeConformance2();
    sub_23BB89944();
    return sub_23B989D60((uint64_t)v8, &qword_256A5ED58);
  }
}

uint64_t sub_23BA809CC@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[3];

  v39 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ED80);
  v36 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40, v2);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDB0);
  MEMORY[0x24BDAC7A8](v37, v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ED70);
  v8 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v41[0] = *v1;
  v41[1] = v12;
  v13 = v1[3];
  v42 = v1[2];
  v43 = v13;
  v14 = v1[5];
  v44 = v1[4];
  v45 = v14;
  v46[0] = v1[6];
  *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)((char *)v1 + 105);
  v15 = v43;
  if ((*((_QWORD *)&v42 + 1) & 0x8000000000000000) != 0)
  {
    v26 = v44;
    sub_23BA0DF1C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23BA84438();
    v27 = swift_bridgeObjectRelease();
    v35 = (uint64_t)&v35;
    MEMORY[0x24BDAC7A8](v27, v28);
    *(&v35 - 4) = v26;
    *(&v35 - 3) = (uint64_t)v41;
    *((_OWORD *)&v35 - 1) = v15;
    v29 = (_OWORD *)swift_allocObject();
    v30 = v1[5];
    v29[5] = v1[4];
    v29[6] = v30;
    v29[7] = v1[6];
    *(_OWORD *)((char *)v29 + 121) = *(_OWORD *)((char *)v1 + 105);
    v31 = v1[1];
    v29[1] = *v1;
    v29[2] = v31;
    v32 = v1[3];
    v29[3] = v1[2];
    v29[4] = v32;
    sub_23BA84520((uint64_t)v41);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDB8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDC0);
    sub_23B996E1C(&qword_256A5EDC8, &qword_256A5EDB8, MEMORY[0x24BDF4750]);
    sub_23BA85D04();
    sub_23BB89CB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v33 = v36;
    v34 = v40;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v7, v4, v40);
    swift_storeEnumTagMultiPayload();
    sub_23B996E1C(&qword_256A5ED68, &qword_256A5ED70, MEMORY[0x24BDF43B0]);
    sub_23B996E1C(&qword_256A5ED78, &qword_256A5ED80, MEMORY[0x24BDF1A70]);
    sub_23BB89944();
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v4, v34);
  }
  else
  {
    sub_23BA0DF1C();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23BA84438();
    swift_bridgeObjectRelease();
    v16 = (_OWORD *)swift_allocObject();
    v17 = v1[5];
    v16[5] = v1[4];
    v16[6] = v17;
    v16[7] = v1[6];
    *(_OWORD *)((char *)v16 + 121) = *(_OWORD *)((char *)v1 + 105);
    v18 = v1[1];
    v16[1] = *v1;
    v16[2] = v18;
    v19 = v1[3];
    v16[3] = v1[2];
    v16[4] = v19;
    v16[9] = v15;
    v20 = (_OWORD *)swift_allocObject();
    v21 = v1[5];
    v20[5] = v1[4];
    v20[6] = v21;
    v20[7] = v1[6];
    *(_OWORD *)((char *)v20 + 121) = *(_OWORD *)((char *)v1 + 105);
    v22 = v1[1];
    v20[1] = *v1;
    v20[2] = v22;
    v23 = v1[3];
    v20[3] = v1[2];
    v20[4] = v23;
    sub_23BA84520((uint64_t)v41);
    sub_23BA84520((uint64_t)v41);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDB8);
    sub_23B996E1C(&qword_256A5EDC8, &qword_256A5EDB8, MEMORY[0x24BDF4750]);
    sub_23BB8A10C();
    swift_release();
    v24 = v38;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v7, v11, v38);
    swift_storeEnumTagMultiPayload();
    sub_23B996E1C(&qword_256A5ED68, &qword_256A5ED70, MEMORY[0x24BDF43B0]);
    sub_23B996E1C(&qword_256A5ED78, &qword_256A5ED80, MEMORY[0x24BDF1A70]);
    sub_23BB89944();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v24);
  }
}

uint64_t sub_23BA80EC0(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v18[16];
  __int128 v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = a1[5];
  v18[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0DC();
  v10 = sub_23BB8AA18();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_23BB8A9F4();
  swift_retain();
  sub_23BA84520((uint64_t)a1);
  v11 = sub_23BB8A9E8();
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v13;
  *(_QWORD *)(v12 + 32) = a2;
  *(_QWORD *)(v12 + 40) = a3;
  v14 = a1[5];
  *(_OWORD *)(v12 + 112) = a1[4];
  *(_OWORD *)(v12 + 128) = v14;
  *(_OWORD *)(v12 + 144) = a1[6];
  *(_OWORD *)(v12 + 153) = *(_OWORD *)((char *)a1 + 105);
  v15 = a1[1];
  *(_OWORD *)(v12 + 48) = *a1;
  *(_OWORD *)(v12 + 64) = v15;
  v16 = a1[3];
  *(_OWORD *)(v12 + 80) = a1[2];
  *(_OWORD *)(v12 + 96) = v16;
  sub_23B989F54((uint64_t)v9, (uint64_t)&unk_256A5EEC0, v12);
  return swift_release();
}

uint64_t sub_23BA8100C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v6[4] = a6;
  v6[5] = sub_23BB8A9F4();
  v6[6] = sub_23BB8A9E8();
  v10 = (uint64_t (*)(void))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  v6[7] = v8;
  *v8 = v6;
  v8[1] = sub_23BA8108C;
  return v10();
}

uint64_t sub_23BA8108C()
{
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA810FC()
{
  sub_23B9967E0();
  swift_bridgeObjectRetain();
  sub_23BB89D28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDE0);
  sub_23BA85D7C();
  return sub_23BB8A220();
}

uint64_t sub_23BA811AC(uint64_t a1, _OWORD *a2)
{
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v3 = (_OWORD *)swift_allocObject();
  v4 = a2[5];
  v3[5] = a2[4];
  v3[6] = v4;
  v3[7] = a2[6];
  *(_OWORD *)((char *)v3 + 121) = *(_OWORD *)((char *)a2 + 105);
  v5 = a2[1];
  v3[1] = *a2;
  v3[2] = v5;
  v6 = a2[3];
  v3[3] = a2[2];
  v3[4] = v6;
  swift_bridgeObjectRetain();
  sub_23BA84520((uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EEC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDF0);
  sub_23B996E1C(&qword_256A5EED0, &qword_256A5EEC8, MEMORY[0x24BEE12D8]);
  sub_23B996E1C(&qword_256A5EDE8, &qword_256A5EDF0, MEMORY[0x24BDF43B0]);
  sub_23BA86284();
  return sub_23BB8A208();
}

uint64_t sub_23BA812D4(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  __int128 v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[4];

  v4 = a1[1];
  v14[0] = *a1;
  v14[1] = v4;
  v5 = a1[3];
  v14[2] = a1[2];
  v14[3] = v5;
  v6 = (_OWORD *)swift_allocObject();
  v7 = a2[5];
  v6[5] = a2[4];
  v6[6] = v7;
  v6[7] = a2[6];
  *(_OWORD *)((char *)v6 + 121) = *(_OWORD *)((char *)a2 + 105);
  v8 = a2[1];
  v6[1] = *a2;
  v6[2] = v8;
  v9 = a2[3];
  v6[3] = a2[2];
  v6[4] = v9;
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[3];
  v6[11] = a1[2];
  v6[12] = v12;
  v6[9] = v10;
  v6[10] = v11;
  sub_23BA84520((uint64_t)a2);
  sub_23BA863C0((uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE00);
  sub_23BA85EF0();
  return sub_23BB8A10C();
}

uint64_t sub_23BA813BC(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v18[16];
  __int128 v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = a1[5];
  v18[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0DC();
  v8 = sub_23BB8AA18();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_23BB8A9F4();
  sub_23BA863C0((uint64_t)a2);
  sub_23BA84520((uint64_t)a1);
  v9 = sub_23BB8A9E8();
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v11;
  v12 = a2[1];
  *(_OWORD *)(v10 + 32) = *a2;
  *(_OWORD *)(v10 + 48) = v12;
  v13 = a2[3];
  *(_OWORD *)(v10 + 64) = a2[2];
  *(_OWORD *)(v10 + 80) = v13;
  v14 = a1[5];
  *(_OWORD *)(v10 + 160) = a1[4];
  *(_OWORD *)(v10 + 176) = v14;
  *(_OWORD *)(v10 + 192) = a1[6];
  *(_OWORD *)(v10 + 201) = *(_OWORD *)((char *)a1 + 105);
  v15 = a1[1];
  *(_OWORD *)(v10 + 96) = *a1;
  *(_OWORD *)(v10 + 112) = v15;
  v16 = a1[3];
  *(_OWORD *)(v10 + 128) = a1[2];
  *(_OWORD *)(v10 + 144) = v16;
  sub_23B989F54((uint64_t)v7, (uint64_t)&unk_256A5EEE8, v10);
  return swift_release();
}

uint64_t sub_23BA81508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5[4] = a5;
  v5[5] = sub_23BB8A9F4();
  v5[6] = sub_23BB8A9E8();
  v9 = (uint64_t (*)(void))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  v5[7] = v7;
  *v7 = v5;
  v7[1] = sub_23BA81580;
  return v9();
}

uint64_t sub_23BA81580()
{
  swift_task_dealloc();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA815F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 80);
  *(_BYTE *)(v0 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0DC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA81650@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int16 v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD v45[2];
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 *v50;
  __int128 *v51;
  char v52;
  uint64_t v53;
  char v54;
  __int128 v55;
  _OWORD v56[2];
  _OWORD v57[2];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _OWORD v62[3];

  v47 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE60);
  MEMORY[0x24BDAC7A8](v4, v5);
  v49 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE40);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE30);
  MEMORY[0x24BDAC7A8](v12, v13);
  v48 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[1];
  v55 = *a1;
  v56[0] = v15;
  *(_OWORD *)((char *)v56 + 11) = *(__int128 *)((char *)a1 + 27);
  v16 = v2[5];
  v60 = v2[4];
  v61 = v16;
  v62[0] = v2[6];
  *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v2 + 105);
  v17 = v2[1];
  v57[0] = *v2;
  v57[1] = v17;
  v18 = v2[3];
  v58 = v2[2];
  v59 = v18;
  v51 = &v55;
  v50 = &v55;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE70);
  sub_23BA86030();
  sub_23BA860B4();
  sub_23BB8A0AC();
  v19 = *((_QWORD *)&v61 + 1);
  v46 = v61;
  v52 = v61;
  v53 = *((_QWORD *)&v61 + 1);
  sub_23BA84520((uint64_t)v57);
  v45[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  if (v54 == 1)
  {
    sub_23BA845B8((uint64_t)v57);
    v20 = 0.0;
    v21 = (uint64_t)v48;
  }
  else
  {
    v45[0] = v19;
    v22 = WORD4(v58);
    sub_23BA0DF1C();
    swift_bridgeObjectRetain();
    sub_23BA84438();
    swift_bridgeObjectRelease();
    if ((v22 & 0x100) != 0)
    {
      sub_23BA845B8((uint64_t)v57);
      v20 = 0.0;
    }
    else
    {
      v23 = *(_QWORD *)&v62[1];
      v24 = BYTE8(v62[1]);
      sub_23BA84520((uint64_t)v57);
      sub_23BA2C1E8(v23, v24);
      v25 = sub_23BA83F60(v23, v24);
      sub_23B9C62D4(v23, v24);
      sub_23BA845B8((uint64_t)v57);
      sub_23BA845B8((uint64_t)v57);
      if ((v25 & 1) != 0)
        v20 = 0.0;
      else
        v20 = 1.0;
    }
    v21 = (uint64_t)v48;
    v19 = v45[0];
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v21, v11, v7);
  *(double *)(v21 + *(int *)(v12 + 36)) = v20;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v26 = *(_QWORD *)&v62[0];
  v27 = BYTE8(v62[0]);
  sub_23BA84520((uint64_t)v57);
  sub_23BA2C1E8(v26, v27);
  v28 = sub_23BA83D98(v26, v27);
  sub_23B9C62D4(v26, v27);
  if (v28)
  {
    if (v28 == 1)
      v29 = sub_23BB8A2F8();
    else
      v29 = sub_23BB8A310();
  }
  else
  {
    v29 = sub_23BB8A304();
  }
  v31 = v29;
  v32 = v30;
  v33 = v47;
  v34 = v46;
  sub_23BA845B8((uint64_t)v57);
  v52 = v34;
  v53 = v19;
  sub_23BA84520((uint64_t)v57);
  sub_23BB8A0D0();
  if ((v54 & 1) != 0
    || (v35 = WORD4(v58),
        sub_23BA0DF1C(),
        swift_bridgeObjectRetain(),
        sub_23BA84438(),
        swift_bridgeObjectRelease(),
        (v35 & 0x100) != 0))
  {
    sub_23BA845B8((uint64_t)v57);
    goto LABEL_19;
  }
  v36 = *(_QWORD *)&v62[1];
  v37 = BYTE8(v62[1]);
  sub_23BA84520((uint64_t)v57);
  sub_23BA2C1E8(v36, v37);
  v38 = sub_23BA83F60(v36, v37);
  sub_23B9C62D4(v36, v37);
  sub_23BA845B8((uint64_t)v57);
  sub_23BA845B8((uint64_t)v57);
  if ((v38 & 1) != 0)
  {
LABEL_19:
    v40 = (uint64_t)v49;
    sub_23BB89338();
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE98);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
    goto LABEL_20;
  }
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE98);
  v40 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v49, 1, 1, v39);
LABEL_20:
  v42 = v33 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE00) + 36);
  sub_23B990D24(v40, v42, &qword_256A5EE60);
  v43 = (uint64_t *)(v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE50) + 36));
  *v43 = v31;
  v43[1] = v32;
  return sub_23B990D24(v21, v33, &qword_256A5EE30);
}

uint64_t sub_23BA81B24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = sub_23BB8A2F8();
  a2[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EDF8);
  return sub_23BA81B68(a1, (char *)a2 + *(int *)(v5 + 44));
}

uint64_t sub_23BA81B68@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[2];
  _BYTE v67[72];
  uint64_t v68;
  _QWORD v69[2];
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE00);
  MEMORY[0x24BDAC7A8](v3, v4);
  v52 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v46 = (uint64_t)&v45 - v8;
  MEMORY[0x24BDAC7A8](v9, v10);
  v50 = (uint64_t)&v45 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE08);
  v48 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v49 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v45 - v17;
  v68 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)&v60 = v68;
  v19 = (_OWORD *)swift_allocObject();
  v20 = *(_OWORD *)(a1 + 80);
  v19[5] = *(_OWORD *)(a1 + 64);
  v19[6] = v20;
  v19[7] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)((char *)v19 + 121) = *(_OWORD *)(a1 + 105);
  v21 = *(_OWORD *)(a1 + 16);
  v19[1] = *(_OWORD *)a1;
  v19[2] = v21;
  v22 = *(_OWORD *)(a1 + 48);
  v19[3] = *(_OWORD *)(a1 + 32);
  v19[4] = v22;
  sub_23B9B90A8((uint64_t)&v68);
  sub_23BA84520(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C7F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE10);
  sub_23B996E1C(&qword_256A5C800, &qword_256A5C7F8, MEMORY[0x24BEE12D8]);
  sub_23BA85E84();
  sub_23BA0DE44();
  v47 = v18;
  sub_23BB8A208();
  v23 = *(_OWORD *)(a1 + 80);
  v64 = *(_OWORD *)(a1 + 64);
  v65 = v23;
  v66[0] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)(a1 + 105);
  v24 = *(_OWORD *)(a1 + 16);
  v60 = *(_OWORD *)a1;
  v61 = v24;
  v25 = *(_OWORD *)(a1 + 48);
  v62 = *(_OWORD *)(a1 + 32);
  v63 = v25;
  sub_23BA85FF8(a1, (uint64_t)v67);
  sub_23BA85FF8((uint64_t)v67, (uint64_t)v69);
  v26 = v73;
  if (v73 < 0)
    v73 &= ~0x8000000000000000;
  v28 = v69[0];
  v27 = v69[1];
  v29 = v70;
  v31 = v71;
  v30 = v72;
  v32 = BYTE1(v73);
  v33 = BYTE2(v73);
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  *(_QWORD *)&v53 = v28;
  *((_QWORD *)&v53 + 1) = v27;
  v54 = v29;
  v55 = v31;
  v56 = v30;
  v57 = v26 & 1;
  v58 = v32;
  v59 = v33;
  v34 = v46;
  sub_23BA81650(&v53, v46);
  sub_23BA84438();
  swift_bridgeObjectRelease();
  v35 = v50;
  sub_23B990D24(v34, v50, &qword_256A5EE00);
  v37 = v48;
  v36 = v49;
  v38 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v39 = v47;
  v38(v49, v47, v12);
  v40 = v52;
  sub_23B989EFC(v35, v52, &qword_256A5EE00);
  v41 = v51;
  v38(v51, v36, v12);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE58);
  sub_23B989EFC(v40, (uint64_t)&v41[*(int *)(v42 + 48)], &qword_256A5EE00);
  sub_23B989D60(v35, &qword_256A5EE00);
  v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v39, v12);
  sub_23B989D60(v40, &qword_256A5EE00);
  return ((uint64_t (*)(char *, uint64_t))v43)(v36, v12);
}

uint64_t sub_23BA81EEC@<X0>(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[3];

  v23 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE00);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE10);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = a1[1];
  LODWORD(v11) = *((_DWORD *)a1 + 4);
  v15 = a1[3];
  v16 = a1[4];
  v17 = *((_DWORD *)a1 + 10);
  v18 = a2[5];
  v34 = a2[4];
  v35 = v18;
  v36[0] = a2[6];
  *(_OWORD *)((char *)v36 + 9) = *(__int128 *)((char *)a2 + 105);
  v19 = a2[1];
  v30 = *a2;
  v31 = v19;
  v20 = a2[3];
  LOBYTE(a1) = v11 & 1;
  v32 = a2[2];
  v33 = v20;
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  *(_QWORD *)&v24 = v13;
  *((_QWORD *)&v24 + 1) = v14;
  v25 = (char)a1;
  v26 = v15;
  v27 = v16;
  v28 = v17 & 0x101;
  v29 = BYTE2(v17) & 1;
  sub_23BA81650(&v24, (uint64_t)v8);
  sub_23BA84438();
  swift_bridgeObjectRelease();
  sub_23B989EFC((uint64_t)v8, (uint64_t)v12, &qword_256A5EE00);
  *(_QWORD *)&v12[*(int *)(v9 + 36)] = 0;
  sub_23B989D60((uint64_t)v8, &qword_256A5EE00);
  return sub_23B990D24((uint64_t)v12, v23, &qword_256A5EE10);
}

uint64_t sub_23BA820A0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EE88);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v23 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EEA0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  if ((a1[2] & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v15 = sub_23BB89B78();
    v16 = sub_23BB89B90();
    v17 = sub_23BB89B84();
    sub_23BB89B84();
    if (sub_23BB89B84() != v15)
      v17 = sub_23BB89B84();
    sub_23BB89B84();
    if (sub_23BB89B84() != v16)
      v17 = sub_23BB89B84();
    *v5 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EEA8);
    v23[0] = v14;
    swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
    sub_23B996E1C(&qword_256A5EEB0, &qword_256A5ECE8, MEMORY[0x24BEE12D8]);
    sub_23BB8A1FC();
    sub_23B990D24((uint64_t)v5, (uint64_t)v9, &qword_256A5EE88);
    sub_23B989EFC((uint64_t)v9, (uint64_t)v13, &qword_256A5EE88);
    swift_storeEnumTagMultiPayload();
    sub_23B996E1C(&qword_256A5EE80, &qword_256A5EE88, MEMORY[0x24BDEBE40]);
    sub_23BB89944();
    return sub_23B989D60((uint64_t)v9, &qword_256A5EE88);
  }
  else
  {
    v19 = a1[1];
    v23[0] = *a1;
    v23[1] = v19;
    sub_23B9967E0();
    swift_bridgeObjectRetain();
    *(_QWORD *)v13 = sub_23BB89D28();
    *((_QWORD *)v13 + 1) = v20;
    v13[16] = v21 & 1;
    *((_QWORD *)v13 + 3) = v22;
    swift_storeEnumTagMultiPayload();
    sub_23B996E1C(&qword_256A5EE80, &qword_256A5EE88, MEMORY[0x24BDEBE40]);
    return sub_23BB89944();
  }
}

uint64_t sub_23BA823A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23B9967E0();
  swift_bridgeObjectRetain();
  result = sub_23BB89D28();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_23BA8240C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRetain();
    result = sub_23BB8A07C();
  }
  else
  {
    result = 0;
  }
  *a2 = result;
  return result;
}

uint64_t GenericControl.Info.id.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = v0[2];
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
    sub_23B996E1C((unint64_t *)&qword_256A5ECF0, &qword_256A5ECE8, MEMORY[0x24BEE12B0]);
    v3 = sub_23BB8A730();
    sub_23BA84438();
    sub_23BA84438();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    sub_23BA84438();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t GenericControl.Info.Label.id.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  if ((v0[2] & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
    sub_23B996E1C((unint64_t *)&qword_256A5ECF0, &qword_256A5ECE8, MEMORY[0x24BEE12B0]);
    v2 = sub_23BB8A730();
    sub_23BA84438();
    return v2;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t GenericControl.Info.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;

  if ((*(_QWORD *)(v1 + 40) & 0x8000000000000000) == 0)
    return GenericControl.Info.Label.hash(into:)();
  v4 = *(_QWORD *)(v1 + 64);
  GenericControl.Info.Label.hash(into:)();
  sub_23BB8A808();
  return sub_23BA8286C(a1, v4);
}

uint64_t GenericControl.Info.Label.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[4];
  if ((v0[2] & 1) != 0)
  {
    sub_23BB8B24C();
    sub_23BB8B24C();
    v3 = *(_QWORD *)(v1 + 16);
    if (!v3)
      goto LABEL_8;
    swift_bridgeObjectRetain();
    v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_23BB8A808();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
  }
  else
  {
    sub_23BB8B24C();
    swift_bridgeObjectRetain();
    sub_23BB8A808();
  }
  sub_23BA84438();
LABEL_8:
  sub_23BB8B258();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_23BB8A808();
    swift_bridgeObjectRelease();
  }
  sub_23BB8B258();
  sub_23BB8B258();
  return sub_23BB8B258();
}

uint64_t sub_23BA8286C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23BB8B24C();
  if (v3)
  {
    v5 = 0;
    v6 = a2 + 32;
    v12 = v6;
    v13 = v3;
    do
    {
      v7 = (uint64_t *)(v6 + (v5 << 6));
      v8 = *v7;
      v9 = v7[4];
      if ((v7[2] & 1) != 0)
      {
        sub_23BB8B24C();
        sub_23BB8B24C();
        v10 = *(_QWORD *)(v8 + 16);
        if (v10)
        {
          sub_23BA0DF1C();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_23BA0DF1C();
          swift_bridgeObjectRetain();
          sub_23BA0DF1C();
          v11 = v8 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_23BB8A808();
            swift_bridgeObjectRelease();
            v11 += 16;
            --v10;
          }
          while (v10);
          sub_23BA84438();
          v6 = v12;
          v3 = v13;
          if (v9)
          {
LABEL_14:
            sub_23BB8B258();
            swift_bridgeObjectRetain();
            sub_23BB8A808();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        else
        {
          sub_23BA0DF1C();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_23BA0DF1C();
          swift_bridgeObjectRetain();
          if (v9)
            goto LABEL_14;
        }
      }
      else
      {
        sub_23BB8B24C();
        sub_23BA0DF1C();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_23BA0DF1C();
        swift_bridgeObjectRetain();
        sub_23BA0DF1C();
        sub_23BB8A808();
        sub_23BA84438();
        if (v9)
          goto LABEL_14;
      }
      sub_23BB8B258();
LABEL_4:
      sub_23BB8B258();
      sub_23BB8B258();
      ++v5;
      sub_23BB8B258();
      sub_23BA84438();
      swift_bridgeObjectRelease();
      sub_23BA84438();
      swift_release();
      result = swift_bridgeObjectRelease();
    }
    while (v5 != v3);
  }
  return result;
}

uint64_t GenericControl.Info.MenuOption.id.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  if ((v0[2] & 1) != 0)
  {
    sub_23BA0DF1C();
    sub_23BA0DF1C();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
    sub_23B996E1C((unint64_t *)&qword_256A5ECF0, &qword_256A5ECE8, MEMORY[0x24BEE12B0]);
    v2 = sub_23BB8A730();
    sub_23BA84438();
    sub_23BA84438();
    swift_bridgeObjectRelease();
    return v2;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t GenericControl.Info.MenuOption.hash(into:)()
{
  return GenericControl.Info.Label.hash(into:)();
}

uint64_t GenericControl.Info.MenuOption.hashValue.getter()
{
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA82CE8()
{
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA82D70()
{
  return GenericControl.Info.Label.hash(into:)();
}

uint64_t sub_23BA82DC8()
{
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA82E50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    sub_23BA0DF1C();
    sub_23BA0DF1C();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
    sub_23B996E1C((unint64_t *)&qword_256A5ECF0, &qword_256A5ECE8, MEMORY[0x24BEE12B0]);
    v5 = sub_23BB8A730();
    v7 = v6;
    sub_23BA84438();
    sub_23BA84438();
    result = swift_bridgeObjectRelease();
    v3 = v5;
    v4 = v7;
  }
  else
  {
    result = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t GenericControl.Info.Label.hashValue.getter()
{
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA82FC0()
{
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA83034()
{
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  return sub_23BB8B270();
}

uint64_t sub_23BA830A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5ECE8);
    sub_23B996E1C((unint64_t *)&qword_256A5ECF0, &qword_256A5ECE8, MEMORY[0x24BEE12B0]);
    v5 = sub_23BB8A730();
    v7 = v6;
    result = sub_23BA84438();
    v3 = v5;
    v4 = v7;
  }
  else
  {
    result = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t GenericControl.Info.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 64);
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  if (v1 < 0)
  {
    sub_23BB8A808();
    sub_23BA8286C((uint64_t)v4, v2);
  }
  return sub_23BB8B270();
}

uint64_t sub_23BA8325C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v4;

  if ((*(_QWORD *)(v1 + 40) & 0x8000000000000000) == 0)
    return GenericControl.Info.Label.hash(into:)();
  v4 = *(_QWORD *)(v1 + 64);
  GenericControl.Info.Label.hash(into:)();
  sub_23BB8A808();
  return sub_23BA8286C(a1, v4);
}

uint64_t sub_23BA83340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 64);
  sub_23BB8B240();
  GenericControl.Info.Label.hash(into:)();
  if (v1 < 0)
  {
    sub_23BB8A808();
    sub_23BA8286C((uint64_t)v4, v2);
  }
  return sub_23BB8B270();
}

uint64_t sub_23BA83438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GenericControl.Info.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t GenericControl.Info.Label.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  *(_DWORD *)(a3 + 39) = 0;
  return result;
}

_QWORD *sub_23BA83478@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *(_QWORD *)a2 = *result;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_DWORD *)(a2 + 39) = 0;
  return result;
}

uint64_t static GenericControl.Info.mockButton(isProminent:isInProgress:isDisabled:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = 256;
  if ((a2 & 1) == 0)
    v4 = 0;
  v5 = v4 & 0xFFFFFFFFFFFFFFFELL | result & 1;
  v6 = 0x10000;
  if ((a3 & 1) == 0)
    v6 = 0;
  *(_OWORD *)a4 = xmmword_23BB91E20;
  *(_OWORD *)(a4 + 16) = xmmword_23BB91E30;
  *(_QWORD *)(a4 + 32) = 0xE800000000000000;
  *(_QWORD *)(a4 + 40) = v5 | v6;
  *(_QWORD *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = 0;
  *(_QWORD *)(a4 + 48) = &unk_256A5ECF8;
  return result;
}

uint64_t sub_23BA834E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23BB8AF1C();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  sub_23BB8A9F4();
  v0[5] = sub_23BB8A9E8();
  v0[6] = sub_23BB8A988();
  v0[7] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA83570()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_23BA835F0;
  return v3(3000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BA835F0()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[3];
  v3 = v2[4];
  v5 = v2[2];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[4], v2[2]);
  }
  return swift_task_switch();
}

uint64_t sub_23BA83690()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double static GenericControl.Info.mockMenu(isProminent:isInProgress:isDisabled:)@<D0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = 256;
  if ((a2 & 1) == 0)
    v4 = 0;
  v5 = 0x10000;
  if ((a3 & 1) == 0)
    v5 = 0;
  result = 1.72100525e-139;
  *(_OWORD *)a4 = xmmword_23BB91E40;
  *(_OWORD *)(a4 + 16) = xmmword_23BB91E30;
  *(_QWORD *)(a4 + 32) = 0xE800000000000000;
  *(_QWORD *)(a4 + 40) = v4 & 0xFFFFFFFFFFFFFFFELL | a1 & 1 | v5 | 0x8000000000000000;
  *(_QWORD *)(a4 + 48) = 0xD00000000000001ALL;
  *(_QWORD *)(a4 + 56) = 0x800000023BB9B460;
  *(_QWORD *)(a4 + 64) = &unk_250CA9BC0;
  return result;
}

uint64_t sub_23BA83734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23BB8AF1C();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  sub_23BB8A9F4();
  v0[5] = sub_23BB8A9E8();
  v0[6] = sub_23BB8A988();
  v0[7] = v2;
  return swift_task_switch();
}

uint64_t sub_23BA837C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_23BA83844;
  return v3(3000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BA83844()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[3];
  v3 = v2[4];
  v5 = v2[2];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[4], v2[2]);
  }
  return swift_task_switch();
}

double static GenericControl.Info.mockMenuIfExistsOrButton(isProminent:isInProgress:isDisabled:)@<D0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = 256;
  if ((a2 & 1) == 0)
    v4 = 0;
  v5 = 0x10000;
  if ((a3 & 1) == 0)
    v5 = 0;
  result = 1.72100525e-139;
  *(_OWORD *)a4 = xmmword_23BB91E40;
  *(_OWORD *)(a4 + 16) = xmmword_23BB91E30;
  *(_QWORD *)(a4 + 32) = 0xE800000000000000;
  *(_QWORD *)(a4 + 40) = v4 & 0xFFFFFFFFFFFFFFFELL | a1 & 1 | v5 | 0x8000000000000000;
  *(_QWORD *)(a4 + 48) = 0xD00000000000001ALL;
  *(_QWORD *)(a4 + 56) = 0x800000023BB9B460;
  *(_QWORD *)(a4 + 64) = &unk_250CA9BC0;
  return result;
}

void sub_23BA83950(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23BA83958()
{
  return sub_23BB89404();
}

uint64_t EnvironmentValues.externalIsLoading.getter()
{
  unsigned __int8 v1;

  sub_23BA84CA4();
  sub_23BB8974C();
  return v1;
}

uint64_t sub_23BA8399C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_23BA84CA4();
  result = sub_23BB8974C();
  *a1 = v3;
  return result;
}

uint64_t sub_23BA839E8()
{
  sub_23BA84CA4();
  return sub_23BB89758();
}

uint64_t EnvironmentValues.externalIsLoading.setter()
{
  sub_23BA84CA4();
  return sub_23BB89758();
}

uint64_t (*EnvironmentValues.externalIsLoading.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_23BA84CA4();
  sub_23BB8974C();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_23BA83AC8;
}

uint64_t sub_23BA83AC8(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_23BB89758();
}

uint64_t sub_23BA83AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA83B60(&qword_256A5A228, (uint64_t (*)(_QWORD))MEMORY[0x24BDEC038], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_23BA83B30@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA83B60(&qword_256A5D440, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB4A0], 0x536C6F72746E6F43, 0xEB00000000657A69, a1);
}

uint64_t sub_23BA83B60@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = sub_23BB89740();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989EFC(v9, (uint64_t)v19, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a5, v19, v20);
  }
  else
  {
    v22 = sub_23BB8ABE0();
    v23 = sub_23BB89B6C();
    if (os_log_type_enabled(v23, v22))
    {
      v28 = a4;
      v24 = swift_slowAlloc();
      v29 = a5;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc();
      v32 = v26;
      *(_DWORD *)v25 = 136315138;
      v31 = sub_23BB7B69C(v30, v28, &v32);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v26, -1, -1);
      MEMORY[0x24260D9B4](v25, -1, -1);
    }

    sub_23BB89734();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_23BA83D98(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_23BB89740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v9 = sub_23BB8ABE0();
    v10 = sub_23BB89B6C();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_23BB7B69C(0x67696C4174786554, 0xED0000746E656D6ELL, &v16);
      sub_23BB8ACB8();
      _os_log_impl(&dword_23B979000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24260D9B4](v13, -1, -1);
      MEMORY[0x24260D9B4](v12, -1, -1);
    }

    sub_23BB89734();
    swift_getAtKeyPath();
    sub_23B9C62D4(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v16;
  }
  return a1;
}

uint64_t sub_23BA83F60(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_23BB89740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v9 = sub_23BB8ABE0();
  v10 = sub_23BB89B6C();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_23BB7B69C(1819242306, 0xE400000000000000, &v16);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v12, -1, -1);
  }

  sub_23BB89734();
  swift_getAtKeyPath();
  sub_23B9C62D4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v16;
}

uint64_t sub_23BA84118@<X0>(uint64_t a1@<X8>)
{
  return sub_23BA83B60(&qword_256A5A1A0, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

double sub_23BA8414C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = sub_23BB89740();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v9 = sub_23BB8ABE0();
  v10 = sub_23BB89B6C();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_23BB7B69C(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v13, -1, -1);
    MEMORY[0x24260D9B4](v12, -1, -1);
  }

  sub_23BB89734();
  swift_getAtKeyPath();
  sub_23B9C62D4(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v16;
}

uint64_t sub_23BA8430C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB89680();
  *a1 = result;
  return result;
}

uint64_t sub_23BA84334@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB89680();
  *a1 = result;
  return result;
}

uint64_t sub_23BA8435C()
{
  return sub_23BB8968C();
}

uint64_t sub_23BA84380()
{
  return sub_23BB8968C();
}

uint64_t sub_23BA843A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_23BA84CA4();
  result = sub_23BB8974C();
  *a1 = v3;
  return result;
}

uint64_t sub_23BA843F0()
{
  sub_23BA84CA4();
  return sub_23BB89758();
}

uint64_t sub_23BA84438()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA84444@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB896EC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23BA84470@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23BB896EC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23BA8449C()
{
  return sub_23BB896F8();
}

uint64_t sub_23BA844C0()
{
  return sub_23BB896F8();
}

_BYTE *sub_23BA844E4(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_23BA844F8()
{
  return swift_deallocObject();
}

_BYTE *sub_23BA84508(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_23BA84520(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_BYTE *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_BYTE *)(a1 + 120);
  sub_23BA0DEAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23BA2C1E8(v2, v3);
  sub_23BA2C1E8(v4, v5);
  return a1;
}

uint64_t sub_23BA845B8(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_BYTE *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_BYTE *)(a1 + 120);
  sub_23BA84650(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9C62D4(v2, v3);
  sub_23B9C62D4(v4, v5);
  return a1;
}

uint64_t sub_23BA84650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 < 0)
  {
    sub_23BA84438();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BA84438();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

BOOL _s12FindMyUICore14GenericControlV4InfoO10MenuOptionV2eeoiySbAG_AGtFZ_0()
{
  uint64_t v0;
  uint64_t v2;

  sub_23BB8B240();
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  swift_retain();
  GenericControl.Info.Label.hash(into:)();
  v2 = sub_23BB8B270();
  sub_23BA84438();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23BB8B240();
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  swift_retain();
  GenericControl.Info.Label.hash(into:)();
  v0 = sub_23BB8B270();
  sub_23BA84438();
  swift_release();
  swift_bridgeObjectRelease();
  return v2 == v0;
}

uint64_t _s12FindMyUICore14GenericControlV4InfoO5LabelV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  int v8;
  int v9;
  int v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 32);
  v18 = *(unsigned __int8 *)(a1 + 41);
  v16 = *(unsigned __int8 *)(a1 + 40);
  v17 = *(unsigned __int8 *)(a1 + 42);
  v5 = *(_QWORD **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  v14 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 24);
  v8 = *(unsigned __int8 *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 41);
  v10 = *(unsigned __int8 *)(a2 + 42);
  sub_23BA0DF1C();
  sub_23BA0DF1C();
  v11 = sub_23BA8016C(v2, v3, v4, v5, v6, v7);
  sub_23BA84438();
  sub_23BA84438();
  if ((v11 & 1) == 0)
    return 0;
  if (!v20)
  {
    if (!v14)
      goto LABEL_12;
    return 0;
  }
  if (!v14)
    return 0;
  if (v19 == v15 && v20 == v14)
  {
LABEL_12:
    result = 0;
    if (v16 != v8)
      return result;
    goto LABEL_13;
  }
  v12 = sub_23BB8B1A4();
  result = 0;
  if ((v12 & 1) != 0 && ((v16 ^ v8) & 1) == 0)
  {
LABEL_13:
    if (((v18 ^ v9) & 1) == 0)
      return v17 ^ v10 ^ 1u;
  }
  return result;
}

BOOL _s12FindMyUICore14GenericControlV4InfoO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[80];

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[8];
  v15 = a2[1];
  v16 = *a2;
  v13 = a2[4];
  v14 = a2[3];
  v17 = a2[2];
  v18 = a2[5];
  v12 = a2[8];
  sub_23BB8B240();
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  if (v7 < 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    GenericControl.Info.Label.hash(into:)();
    sub_23BB8A808();
    sub_23BA8286C((uint64_t)v19, v8);
  }
  else
  {
    swift_retain();
    GenericControl.Info.Label.hash(into:)();
  }
  v11 = sub_23BB8B270();
  sub_23BA84650(v3, v2, v4, v5, v6, v7);
  sub_23BB8B240();
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  if (v18 < 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    GenericControl.Info.Label.hash(into:)();
    sub_23BB8A808();
    sub_23BA8286C((uint64_t)v19, v12);
  }
  else
  {
    swift_retain();
    GenericControl.Info.Label.hash(into:)();
  }
  v9 = sub_23BB8B270();
  sub_23BA84650(v16, v15, v17, v14, v13, v18);
  return v11 == v9;
}

unint64_t sub_23BA84CA4()
{
  unint64_t result;

  result = qword_256A5ED10;
  if (!qword_256A5ED10)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB92224, &type metadata for ExternalIsLoadingEnvironmentValue);
    atomic_store(result, (unint64_t *)&qword_256A5ED10);
  }
  return result;
}

unint64_t sub_23BA84CEC()
{
  unint64_t result;

  result = qword_256A5ED18;
  if (!qword_256A5ED18)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl.Info.MenuOption, &type metadata for GenericControl.Info.MenuOption);
    atomic_store(result, (unint64_t *)&qword_256A5ED18);
  }
  return result;
}

unint64_t sub_23BA84D34()
{
  unint64_t result;

  result = qword_256A5ED20;
  if (!qword_256A5ED20)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl.Info.Label, &type metadata for GenericControl.Info.Label);
    atomic_store(result, (unint64_t *)&qword_256A5ED20);
  }
  return result;
}

unint64_t sub_23BA84D7C()
{
  unint64_t result;

  result = qword_256A5ED28;
  if (!qword_256A5ED28)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl.Info, &type metadata for GenericControl.Info);
    atomic_store(result, (unint64_t *)&qword_256A5ED28);
  }
  return result;
}

uint64_t sub_23BA84DC0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23BA84DD4()
{
  unint64_t result;

  result = qword_256A5ED30;
  if (!qword_256A5ED30)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl.Info.Label, &type metadata for GenericControl.Info.Label);
    atomic_store(result, (unint64_t *)&qword_256A5ED30);
  }
  return result;
}

uint64_t sub_23BA84E18()
{
  return MEMORY[0x24BEE0D80];
}

unint64_t sub_23BA84E28()
{
  unint64_t result;

  result = qword_256A5ED38;
  if (!qword_256A5ED38)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl.Info.Label, &type metadata for GenericControl.Info.Label);
    atomic_store(result, (unint64_t *)&qword_256A5ED38);
  }
  return result;
}

uint64_t sub_23BA84E6C()
{
  return MEMORY[0x24BEE0D90];
}

uint64_t sub_23BA84E78()
{
  return MEMORY[0x24BEE0D88];
}

uint64_t destroy for GenericControl(uint64_t a1)
{
  sub_23BA84650(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  return sub_23B9C62D4(*(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
}

uint64_t initializeWithCopy for GenericControl(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = a2;
  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v16 = a2[8];
  sub_23BA0DEAC(*a2, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v12 = v2[9];
  *(_QWORD *)(a1 + 64) = v16;
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = *((_BYTE *)v2 + 80);
  v13 = v2[12];
  *(_QWORD *)(a1 + 88) = v2[11];
  LOBYTE(v6) = *((_BYTE *)v2 + 104);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23BA2C1E8(v13, v6);
  *(_QWORD *)(a1 + 96) = v13;
  *(_BYTE *)(a1 + 104) = v6;
  v14 = v2[14];
  LOBYTE(v2) = *((_BYTE *)v2 + 120);
  sub_23BA2C1E8(v14, (char)v2);
  *(_QWORD *)(a1 + 112) = v14;
  *(_BYTE *)(a1 + 120) = (_BYTE)v2;
  return a1;
}

uint64_t assignWithCopy for GenericControl(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;

  v2 = a2;
  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v25 = a2[8];
  sub_23BA0DEAC(*a2, v5, v6, v7, v8, v9);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v25;
  sub_23BA84650(v12, v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 72) = v2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *((_BYTE *)v2 + 80);
  *(_QWORD *)(a1 + 88) = v2[11];
  swift_retain();
  swift_release();
  v18 = v2[12];
  LOBYTE(v5) = *((_BYTE *)v2 + 104);
  sub_23BA2C1E8(v18, v5);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v18;
  *(_BYTE *)(a1 + 104) = v5;
  sub_23B9C62D4(v19, v20);
  v21 = v2[14];
  LOBYTE(v2) = *((_BYTE *)v2 + 120);
  sub_23BA2C1E8(v21, (char)v2);
  v22 = *(_QWORD *)(a1 + 112);
  v23 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = v21;
  *(_BYTE *)(a1 + 120) = (_BYTE)v2;
  sub_23B9C62D4(v22, v23);
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(__int128 *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for GenericControl(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 64) = v4;
  sub_23BA84650(v5, v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  v13 = *(_BYTE *)(a2 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = v13;
  sub_23B9C62D4(v14, v15);
  v16 = *(_BYTE *)(a2 + 120);
  v17 = *(_QWORD *)(a1 + 112);
  v18 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = v16;
  sub_23B9C62D4(v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericControl(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 121))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for GenericControl(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 120) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 121) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 121) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericControl()
{
  return &type metadata for GenericControl;
}

uint64_t destroy for GenericControl.Info(uint64_t *a1)
{
  return sub_23BA84650(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
}

uint64_t *initializeWithCopy for GenericControl.Info(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  sub_23BA0DEAC(*a2, v4, v5, v6, v7, v8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  return a1;
}

uint64_t *assignWithCopy for GenericControl.Info(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  sub_23BA0DEAC(*a2, v4, v5, v6, v7, v8);
  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v17 = a1[5];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  sub_23BA84650(v12, v13, v14, v15, v16, v17);
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for GenericControl.Info(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 64) = v3;
  sub_23BA84650(v4, v6, v5, v7, v8, v9);
  return a1;
}

uint64_t sub_23BA854EC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40) >> 63;
}

uint64_t sub_23BA854F8(uint64_t result)
{
  *(_QWORD *)(result + 40) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_23BA85508(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 40) & 0x10101 | (a2 << 63);
  *(_QWORD *)(result + 16) &= 1uLL;
  *(_QWORD *)(result + 40) = v2;
  return result;
}

uint64_t destroy for GenericControl.Info.MenuOption()
{
  sub_23BA84438();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for GenericControl.Info.MenuOption(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BA0DF1C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)((char *)a2 + 41);
  v8 = a2[6];
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GenericControl.Info.MenuOption(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BA0DF1C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23BA84438();
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
  v7 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GenericControl.Info.MenuOption(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23BA84438();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericControl.Info.MenuOption(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenericControl.Info.MenuOption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericControl.Info.MenuOption()
{
  return &type metadata for GenericControl.Info.MenuOption;
}

uint64_t destroy for GenericControl.Info.Label()
{
  sub_23BA84438();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenericControl.Info.Label(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BA0DF1C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)((char *)a2 + 41);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenericControl.Info.Label(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23BA0DF1C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23BA84438();
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
  return a1;
}

__n128 __swift_memcpy43_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GenericControl.Info.Label(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23BA84438();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericControl.Info.Label(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 43))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenericControl.Info.Label(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 43) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 43) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

unint64_t sub_23BA85A4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5ED40;
  if (!qword_256A5ED40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ECE0);
    v2[0] = sub_23BA85AB8();
    v2[1] = sub_23BA223CC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5ED40);
  }
  return result;
}

unint64_t sub_23BA85AB8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5ED48;
  if (!qword_256A5ED48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ECD8);
    v2[0] = sub_23BA85B3C();
    v2[1] = sub_23B996E1C(&qword_256A5ED90, &qword_256A5ED98, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5ED48);
  }
  return result;
}

unint64_t sub_23BA85B3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];
  unint64_t v3;
  unint64_t v4;

  result = qword_256A5ED50;
  if (!qword_256A5ED50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ECD0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ED58);
    v2[3] = sub_23BB89AAC();
    v3 = sub_23BA85BE8();
    v4 = sub_23BA85C84();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v3;
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5ED50);
  }
  return result;
}

unint64_t sub_23BA85BE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5ED60;
  if (!qword_256A5ED60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5ED58);
    v2[0] = sub_23B996E1C(&qword_256A5ED68, &qword_256A5ED70, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23B996E1C(&qword_256A5ED78, &qword_256A5ED80, MEMORY[0x24BDF1A70]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5ED60);
  }
  return result;
}

unint64_t sub_23BA85C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5ED88;
  if (!qword_256A5ED88)
  {
    v1 = sub_23BB89AAC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF0D88], v1);
    atomic_store(result, (unint64_t *)&qword_256A5ED88);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalIsLoadingEnvironmentValue()
{
  return &type metadata for ExternalIsLoadingEnvironmentValue;
}

uint64_t sub_23BA85CDC()
{
  return sub_23BA810FC();
}

uint64_t sub_23BA85CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23BA81B24(v1 + 16, a1);
}

unint64_t sub_23BA85D04()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[3];

  result = qword_256A5EDD0;
  if (!qword_256A5EDD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5EDC0);
    v2 = sub_23BA85D7C();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A5EDD0);
  }
  return result;
}

unint64_t sub_23BA85D7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A5EDD8;
  if (!qword_256A5EDD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5EDE0);
    v2 = sub_23B996E1C(&qword_256A5EDE8, &qword_256A5EDF0, MEMORY[0x24BDF43B0]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A5EDD8);
  }
  return result;
}

uint64_t sub_23BA85DF8()
{
  uint64_t v0;

  sub_23BA84650(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  sub_23B9C62D4(*(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA85E68()
{
  uint64_t v0;

  return sub_23BA80EC0((_OWORD *)(v0 + 16), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152));
}

uint64_t sub_23BA85E7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23BA81EEC(a1, (__int128 *)(v2 + 16), a2);
}

unint64_t sub_23BA85E84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5EE18;
  if (!qword_256A5EE18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5EE10);
    v2[0] = sub_23BA85EF0();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5EE18);
  }
  return result;
}

unint64_t sub_23BA85EF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5EE20;
  if (!qword_256A5EE20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5EE00);
    v2[0] = sub_23BA85F74();
    v2[1] = sub_23B996E1C(&qword_256A5EE48, &qword_256A5EE50, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5EE20);
  }
  return result;
}

unint64_t sub_23BA85F74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5EE28;
  if (!qword_256A5EE28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5EE30);
    v2[0] = sub_23B996E1C(&qword_256A5EE38, &qword_256A5EE40, MEMORY[0x24BDF41A8]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5EE28);
  }
  return result;
}

uint64_t sub_23BA85FF8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_OWORD *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 48);
  *(_QWORD *)(a2 + 64) = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 16) = v2;
  return a2;
}

uint64_t sub_23BA86020()
{
  uint64_t v0;

  return sub_23BA820A0(*(uint64_t **)(v0 + 16));
}

uint64_t sub_23BA86028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23BA8240C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BA86030()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256A5EE78;
  if (!qword_256A5EE78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5EE68);
    v2 = sub_23B996E1C(&qword_256A5EE80, &qword_256A5EE88, MEMORY[0x24BDEBE40]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256A5EE78);
  }
  return result;
}

unint64_t sub_23BA860B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A5EE90;
  if (!qword_256A5EE90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5EE70);
    v2 = MEMORY[0x24BDF40E8];
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A5EE90);
  }
  return result;
}

uint64_t sub_23BA86110()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  sub_23BA84650(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  sub_23B9C62D4(*(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_23BA86188(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23B990D68;
  return sub_23BA8100C(a1, v4, v5, v6, v7, (uint64_t)(v1 + 6));
}

uint64_t sub_23BA86208()
{
  uint64_t v0;

  return sub_23BA811AC(*(_QWORD *)(v0 + 16), *(_OWORD **)(v0 + 24));
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;

  sub_23BA84650(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  sub_23B9C62D4(*(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  return swift_deallocObject();
}

uint64_t sub_23BA8627C(_OWORD *a1)
{
  uint64_t v1;

  return sub_23BA812D4(a1, (_OWORD *)(v1 + 16));
}

unint64_t sub_23BA86284()
{
  unint64_t result;

  result = qword_256A5EED8;
  if (!qword_256A5EED8)
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for GenericControl.Info.MenuOption, &type metadata for GenericControl.Info.MenuOption);
    atomic_store(result, &qword_256A5EED8);
  }
  return result;
}

uint64_t sub_23BA862C8()
{
  uint64_t v0;

  sub_23BA84650(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  sub_23B9C62D4(*(_QWORD *)(v0 + 128), *(_BYTE *)(v0 + 136));
  sub_23BA84438();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA8634C()
{
  uint64_t v0;

  return sub_23BA813BC((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 144));
}

uint64_t sub_23BA86358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v9;
  _OWORD v10[8];
  _OWORD v11[2];

  v2 = *(_OWORD **)(v1 + 16);
  v3 = *(__int128 **)(v1 + 24);
  v4 = v2[5];
  v10[6] = v2[4];
  v10[7] = v4;
  v11[0] = v2[6];
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v2 + 105);
  v5 = v2[1];
  v10[2] = *v2;
  v10[3] = v5;
  v6 = v2[3];
  v10[4] = v2[2];
  v10[5] = v6;
  v7 = v3[1];
  v9 = *v3;
  v10[0] = v7;
  *(_OWORD *)((char *)v10 + 11) = *(__int128 *)((char *)v3 + 27);
  return sub_23BA81650(&v9, a1);
}

uint64_t sub_23BA863C0(uint64_t a1)
{
  sub_23BA0DF1C();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23BA86410()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_23BA84438();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23BA84650(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_release();
  sub_23B9C62D4(*(_QWORD *)(v0 + 192), *(_BYTE *)(v0 + 200));
  sub_23B9C62D4(*(_QWORD *)(v0 + 208), *(_BYTE *)(v0 + 216));
  return swift_deallocObject();
}

uint64_t sub_23BA8649C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23B97C964;
  return sub_23BA81508(a1, v4, v5, v1 + 32, v1 + 96);
}

uint64_t sub_23BA86524(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[8] = a1;
  v2[9] = v1;
  sub_23BB8A9F4();
  v2[10] = sub_23BB8A9E8();
  v2[11] = sub_23BB8A988();
  v2[12] = v3;
  return swift_task_switch();
}

uint64_t sub_23BA86590()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  if (qword_256A58E00 != -1)
    swift_once();
  v1 = sub_23BB891C4();
  __swift_project_value_buffer(v1, (uint64_t)qword_256A73E80);
  v2 = sub_23BB891AC();
  v3 = sub_23BB8ABEC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    *(_DWORD *)v4 = 136315138;
    *(_QWORD *)(v0 + 56) = sub_23BB7B69C(0xD00000000000002BLL, 0x800000023BB9B4C0, &v8);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v2, v3, "CompositeAppViewModel: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v5, -1, -1);
    MEMORY[0x24260D9B4](v4, -1, -1);
  }

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v6;
  *v6 = v0;
  v6[1] = sub_23BA86728;
  return sub_23BB0A790();
}

uint64_t sub_23BA86728(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = *v1;
  *(_QWORD *)(v4 + 112) = a1;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 120) = v2;
  *v2 = v4;
  v2[1] = sub_23BA86790;
  return sub_23BA65F38();
}

uint64_t sub_23BA86790(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23BA867F8()
{
  uint64_t v0;
  void *v1;
  char *v2;
  CLLocationDegrees v3;
  CLLocationDegrees v4;

  v1 = *(void **)(v0 + 128);
  v2 = *(char **)(v0 + 64);
  swift_release();
  objc_msgSend(v1, sel_coordinate);
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_BYTE *)(v0 + 48) = 1;
  sub_23BA868CC(v0 + 16, v2, v3, v4);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA8688C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23BA868CC(uint64_t a1@<X0>, char *a2@<X8>, CLLocationDegrees a3@<D0>, CLLocationDegrees a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  double v43[4];
  char v44;
  uint64_t v45;
  CLLocationCoordinate2D v46;

  v8 = sub_23BB8884C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46.latitude = a3;
  v46.longitude = a4;
  if (!CLLocationCoordinate2DIsValid(v46))
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v28 = sub_23BB891C4();
    __swift_project_value_buffer(v28, (uint64_t)qword_256A73E80);
    v29 = sub_23BB891AC();
    v30 = sub_23BB8ABD4();
    if (!os_log_type_enabled(v29, v30))
      goto LABEL_17;
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v45 = v32;
    *(_DWORD *)v31 = 136315138;
    v42 = sub_23BB7B69C(0xD00000000000001ALL, 0x800000023BB9B480, &v45);
    sub_23BB8ACB8();
    v33 = "CompositeAppViewModel: %s - Invalid Coordinate";
    goto LABEL_16;
  }
  v40 = a2;
  v41 = v8;
  type metadata accessor for FindMyUICore();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v19 = (void *)sub_23BB8A784();
  v20 = objc_msgSend(v18, sel_localizedStringForKey_value_table_, v19, 0, 0);

  sub_23BB8A7B4();
  v21 = objc_allocWithZone(MEMORY[0x24BDDB1E8]);
  v22 = (void *)sub_23BB8A784();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initForCoordinate_label_, v22, a3, a4);

  if (!v23)
  {
    if (qword_256A58E00 != -1)
      swift_once();
    v34 = sub_23BB891C4();
    __swift_project_value_buffer(v34, (uint64_t)qword_256A73E80);
    v29 = sub_23BB891AC();
    v30 = sub_23BB8ABD4();
    if (!os_log_type_enabled(v29, v30))
      goto LABEL_17;
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v45 = v32;
    *(_DWORD *)v31 = 136315138;
    v42 = sub_23BB7B69C(0xD00000000000001ALL, 0x800000023BB9B480, &v45);
    sub_23BB8ACB8();
    v33 = "CompositeAppViewModel: %s - No builder";
LABEL_16:
    _os_log_impl(&dword_23B979000, v29, v30, v33, v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v32, -1, -1);
    MEMORY[0x24260D9B4](v31, -1, -1);
LABEL_17:

    sub_23BA86F30();
    swift_allocError();
    swift_willThrow();
    return;
  }
  sub_23BA86F74(a1, (uint64_t)v43);
  if ((v44 & 1) == 0)
    objc_msgSend(v23, sel_setDisplayRegion_, v43[0], v43[1], v43[2], v43[3]);
  v24 = objc_msgSend(v23, sel_buildForWeb);
  v25 = v41;
  if (v24)
  {
    v26 = v24;
    sub_23BB88834();

    v27 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v27(v16, v12, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v25) != 1)
    {

      v27(v40, v16, v25);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v41);
  }
  sub_23BA86FBC((uint64_t)v16);
  if (qword_256A58E00 != -1)
    swift_once();
  v35 = sub_23BB891C4();
  __swift_project_value_buffer(v35, (uint64_t)qword_256A73E80);
  v36 = sub_23BB891AC();
  v37 = sub_23BB8ABD4();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v45 = v39;
    *(_DWORD *)v38 = 136315138;
    v42 = sub_23BB7B69C(0xD00000000000001ALL, 0x800000023BB9B480, &v45);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, v36, v37, "CompositeAppViewModel: %s - Nil URL", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v39, -1, -1);
    MEMORY[0x24260D9B4](v38, -1, -1);
  }

  sub_23BA86F30();
  swift_allocError();
  swift_willThrow();

}

unint64_t sub_23BA86F30()
{
  unint64_t result;

  result = qword_256A5EEF0;
  if (!qword_256A5EEF0)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB95614, &type metadata for CompositeAppViewModelError);
    atomic_store(result, (unint64_t *)&qword_256A5EEF0);
  }
  return result;
}

uint64_t sub_23BA86F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA86FBC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SubscriptionManagerStorage.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  void (**v27)();
  _QWORD v28[3];
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v28[1] = a1;
  v28[2] = a2;
  v30 = sub_23BB891C4();
  v8 = *(_QWORD *)(v30 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v30, v10);
  v29 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)v28 - v13;
  v16 = (int *)type metadata accessor for SubscriptionManagerStorage(0, a3, a4, v15);
  v17 = v16[9];
  v31 = a4;
  sub_23BB8AB44();
  swift_getTupleTypeMetadata2();
  sub_23BB8A934();
  sub_23BA87CB8();
  *(_QWORD *)(a5 + v17) = sub_23BB8A6D0();
  v18 = sub_23BB8A934();
  if (MEMORY[0x24260C8BC](v18, a3))
    v19 = sub_23BA87CFC(v18, a3, v31);
  else
    v19 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + v16[10]) = v19;
  *(_BYTE *)(a5 + v16[11]) = 0;
  sub_23BB891B8();
  v20 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a5, v14, v30);
  v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v22 = v29;
  v21(v29, v14, v20);
  v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v24 = swift_allocObject();
  v25 = v31;
  *(_QWORD *)(v24 + 16) = a3;
  *(_QWORD *)(v24 + 24) = v25;
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v24 + v23, v22, v20);
  v27 = (void (**)())(a5 + v16[12]);
  *v27 = sub_23BA88064;
  v27[1] = (void (*)())v24;
  return result;
}

uint64_t type metadata accessor for SubscriptionManagerStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionManagerStorage);
}

uint64_t SubscriptionManagerStorage.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23BB891C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SubscriptionManagerStorage.subscriptionsBySubscriber.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionManagerStorage.subscriptionsBySubscriber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v5) = a1;
  return sub_23BA872A0(a2);
}

uint64_t sub_23BA872A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + *(int *)(a1 + 36));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v9, v2, v4, v7);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315138;
    v20 = v10;
    v21 = v14;
    v19[1] = v13 + 4;
    sub_23BB8AB44();
    sub_23BA87CB8();
    v15 = sub_23BB8A6E8();
    MEMORY[0x24260D8DC](MEMORY[0x24BEE04F0], v15);
    v16 = sub_23BB7BC78();
    v20 = sub_23BB7B69C(v16, v17, &v21);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "SubscriptionManagerStorage: subscriptionsBySubscriber - %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t *(*SubscriptionManagerStorage.subscriptionsBySubscriber.modify(_QWORD *a1, uint64_t a2))(uint64_t *result, char a2)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = v2;
  return sub_23BA874D0;
}

uint64_t *sub_23BA874D0(uint64_t *result, char a2)
{
  if ((a2 & 1) == 0)
    return (uint64_t *)sub_23BA872A0(*result);
  return result;
}

uint64_t SubscriptionManagerStorage.uniqueSubscriptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA87500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for SubscriptionManagerStorage(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  v7 = swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t SubscriptionManagerStorage.uniqueSubscriptions.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(int *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v5) = a1;
  return sub_23BA8758C(a2);
}

uint64_t sub_23BA8758C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + *(int *)(a1 + 40));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v9, v2, v4, v7);
  swift_bridgeObjectRetain_n();
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315138;
    v20 = v10;
    v21 = v14;
    v19[1] = v13 + 4;
    v15 = sub_23BB8AB44();
    MEMORY[0x24260D8DC](MEMORY[0x24BEE1730], v15);
    v16 = sub_23BB7BC78();
    v20 = sub_23BB7B69C(v16, v17, &v21);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "SubscriptionManagerStorage: uniqueSubscriptions - %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t *(*SubscriptionManagerStorage.uniqueSubscriptions.modify(_QWORD *a1, uint64_t a2))(uint64_t *result, char a2)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = v2;
  return sub_23BA8779C;
}

uint64_t *sub_23BA8779C(uint64_t *result, char a2)
{
  if ((a2 & 1) == 0)
    return (uint64_t *)sub_23BA8758C(*result);
  return result;
}

uint64_t SubscriptionManagerStorage.isPaused.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t SubscriptionManagerStorage.isPaused.setter(char a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 44)) = a1;
  return sub_23BA877DC(a2);
}

uint64_t sub_23BA877DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  int v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_23BB891C4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 44));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v9, v2, v4, v7);
  v11 = sub_23BB891AC();
  v12 = sub_23BB8ABC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315138;
    v19 = v14;
    if (v10)
      v15 = 1702195828;
    else
      v15 = 0x65736C6166;
    if (v10)
      v16 = 0xE400000000000000;
    else
      v16 = 0xE500000000000000;
    v18 = sub_23BB7B69C(v15, v16, &v19);
    sub_23BB8ACB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23B979000, v11, v12, "SubscriptionManagerStorage: isPaused - %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v14, -1, -1);
    MEMORY[0x24260D9B4](v13, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t *(*SubscriptionManagerStorage.isPaused.modify(_QWORD *a1, uint64_t a2))(uint64_t *result, char a2)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = v2;
  return sub_23BA879B4;
}

uint64_t *sub_23BA879B4(uint64_t *result, char a2)
{
  if ((a2 & 1) == 0)
    return (uint64_t *)sub_23BA877DC(*result);
  return result;
}

uint64_t sub_23BA879D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = *(_QWORD *)(a3 + a2 - 16);
  v7 = *(_QWORD *)(a3 + a2 - 8);
  v8 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SubscriptionManagerStorage(0, v6, v7, a4) + 48));
  v10 = *v8;
  v9 = v8[1];
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v6;
  v11[3] = v7;
  v11[4] = v10;
  v11[5] = v9;
  *a5 = sub_23BA887BC;
  a5[1] = v11;
  return swift_retain();
}

uint64_t sub_23BA87A58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t (**v11)(uint64_t);
  uint64_t result;

  v5 = *(_QWORD *)(a4 + a3 - 16);
  v6 = *(_QWORD *)(a4 + a3 - 8);
  v8 = *a1;
  v7 = a1[1];
  v9 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)v9 + 2) = v5;
  *((_QWORD *)v9 + 3) = v6;
  *((_QWORD *)v9 + 4) = v8;
  *((_QWORD *)v9 + 5) = v7;
  v11 = (uint64_t (**)(uint64_t))(a2
                                         + *(int *)(type metadata accessor for SubscriptionManagerStorage(0, v5, v6, v10)+ 48));
  swift_retain();
  result = swift_release();
  *v11 = sub_23BA8878C;
  v11[1] = v9;
  return result;
}

uint64_t SubscriptionManagerStorage.setSubscriptionsCallback.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_retain();
  return v2;
}

uint64_t SubscriptionManagerStorage.setSubscriptionsCallback.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 48));
  result = swift_release();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*SubscriptionManagerStorage.setSubscriptionsCallback.modify())()
{
  return nullsub_1;
}

void sub_23BA87B6C()
{
  os_log_type_t v0;
  uint8_t *v1;
  uint64_t v2;
  NSObject *oslog;
  uint64_t v4;

  oslog = sub_23BB891AC();
  v0 = sub_23BB8ABC8();
  if (os_log_type_enabled(oslog, v0))
  {
    v1 = (uint8_t *)swift_slowAlloc();
    v2 = swift_slowAlloc();
    v4 = v2;
    *(_DWORD *)v1 = 136315138;
    sub_23BB7B69C(0xD000000000000011, 0x800000023BB9B4F0, &v4);
    sub_23BB8ACB8();
    _os_log_impl(&dword_23B979000, oslog, v0, "SubscriptionManagerStorage: empty callback - %s", v1, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24260D9B4](v2, -1, -1);
    MEMORY[0x24260D9B4](v1, -1, -1);

  }
  else
  {

  }
}

unint64_t sub_23BA87CB8()
{
  unint64_t result;

  result = qword_256A5EF08[0];
  if (!qword_256A5EF08[0])
  {
    result = MEMORY[0x24260D8DC](&protocol conformance descriptor for Subscriber, &type metadata for Subscriber);
    atomic_store(result, qword_256A5EF08);
  }
  return result;
}

uint64_t sub_23BA87CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, unint64_t, uint64_t);
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v5 = a1;
  v47 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v46 = (char *)&v39 - v10;
  v39 = v11;
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v39 - v15;
  if (MEMORY[0x24260C8B0](v14))
  {
    sub_23BB8ADFC();
    v17 = sub_23BB8ADF0();
  }
  else
  {
    v17 = MEMORY[0x24BEE4B08];
  }
  v42 = MEMORY[0x24260C8BC](v5, a2);
  if (!v42)
    return v17;
  v18 = 0;
  v45 = v17 + 56;
  v40 = v16;
  v41 = v5;
  while (1)
  {
    v19 = sub_23BB8A94C();
    sub_23BB8A91C();
    if ((v19 & 1) != 0)
    {
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
      v20(v16, v5+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72) * v18, a2);
      v21 = __OFADD__(v18, 1);
      v22 = v18 + 1;
      if (v21)
        goto LABEL_20;
    }
    else
    {
      result = sub_23BB8AE44();
      if (v39 != 8)
        goto LABEL_23;
      v48 = result;
      v20 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
      v20(v16, (unint64_t)&v48, a2);
      swift_unknownObjectRelease();
      v21 = __OFADD__(v18, 1);
      v22 = v18 + 1;
      if (v21)
      {
LABEL_20:
        __break(1u);
        return v17;
      }
    }
    v23 = v47;
    v43 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    v44 = v22;
    v43(v46, v16, a2);
    v24 = sub_23BB8A70C();
    v25 = -1 << *(_BYTE *)(v17 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    v28 = *(_QWORD *)(v45 + 8 * (v26 >> 6));
    v29 = 1 << v26;
    v30 = *(_QWORD *)(v23 + 72);
    if (((1 << v26) & v28) != 0)
    {
      v31 = ~v25;
      do
      {
        v20(v7, *(_QWORD *)(v17 + 48) + v30 * v26, a2);
        v32 = a3;
        v33 = sub_23BB8A760();
        v34 = *(void (**)(char *, uint64_t))(v47 + 8);
        v34(v7, a2);
        if ((v33 & 1) != 0)
        {
          v34(v46, a2);
          a3 = v32;
          v16 = v40;
          v5 = v41;
          goto LABEL_7;
        }
        v26 = (v26 + 1) & v31;
        v27 = v26 >> 6;
        v28 = *(_QWORD *)(v45 + 8 * (v26 >> 6));
        v29 = 1 << v26;
        a3 = v32;
      }
      while ((v28 & (1 << v26)) != 0);
      v16 = v40;
      v5 = v41;
    }
    v35 = v46;
    *(_QWORD *)(v45 + 8 * v27) = v29 | v28;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v43)(*(_QWORD *)(v17 + 48) + v30 * v26, v35, a2);
    v37 = *(_QWORD *)(v17 + 16);
    v21 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v21)
      break;
    *(_QWORD *)(v17 + 16) = v38;
LABEL_7:
    v18 = v44;
    if (v44 == v42)
      return v17;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_23BA88004()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23BB891C4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_23BA88064()
{
  sub_23BB891C4();
  sub_23BA87B6C();
}

uint64_t sub_23BA880C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = *(_QWORD *)(a1
                  + *(int *)(type metadata accessor for SubscriptionManagerStorage(0, *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8), a4)+ 36));
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA88100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA87500(a1, a2, a3, a4, SubscriptionManagerStorage.subscriptionsBySubscriber.setter);
}

uint64_t sub_23BA8811C()
{
  return 16;
}

__n128 sub_23BA88128(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23BA88134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = *(_QWORD *)(a1
                  + *(int *)(type metadata accessor for SubscriptionManagerStorage(0, *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8), a4)+ 40));
  return swift_bridgeObjectRetain();
}

uint64_t sub_23BA88170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23BA87500(a1, a2, a3, a4, SubscriptionManagerStorage.uniqueSubscriptions.setter);
}

uint64_t sub_23BA8818C()
{
  return 16;
}

__n128 sub_23BA88198(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23BA881A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = type metadata accessor for SubscriptionManagerStorage(0, *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8), a4);
  *a5 = *(_BYTE *)(a1 + *(int *)(result + 44));
  return result;
}

uint64_t sub_23BA881E0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;

  v4 = *a1;
  v5 = type metadata accessor for SubscriptionManagerStorage(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  return SubscriptionManagerStorage.isPaused.setter(v4, v5);
}

uint64_t sub_23BA8821C()
{
  return 16;
}

__n128 sub_23BA88228(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23BA8823C()
{
  return 16;
}

__n128 sub_23BA88248(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23BA88254()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23BB891C4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23BA882E4(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23BB891C4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)v4 + v8) = *(_QWORD *)((char *)a2 + v8);
    v9 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BA883A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23BA88400(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23BA88494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v7 = a3[12];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23BA8854C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_23BA885C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23BB891C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v7 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_23BA8865C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA88668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23BB891C4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BA886E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA886F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23BB891C4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

uint64_t sub_23BA88768()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA8878C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_23BA887BC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

uint64_t PersonDetailsController.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5EF98, (uint64_t (*)(uint64_t))type metadata accessor for PersonDetailsController, (uint64_t)&protocol conformance descriptor for PersonDetailsController);
  sub_23BB88A20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC12FindMyUICore23PersonDetailsController__state;
  swift_beginAccess();
  return sub_23B989CE8(v3, a1, type metadata accessor for PersonDetailsController.State);
}

uint64_t sub_23BA8889C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23B97D0C8(&qword_256A5EF98, (uint64_t (*)(uint64_t))type metadata accessor for PersonDetailsController, (uint64_t)&protocol conformance descriptor for PersonDetailsController);
  sub_23BB88A20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC12FindMyUICore23PersonDetailsController__state;
  swift_beginAccess();
  return sub_23B989CE8(v4, a2, type metadata accessor for PersonDetailsController.State);
}

uint64_t sub_23BA88958(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = type metadata accessor for PersonDetailsController.State(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23B989CE8(a1, (uint64_t)v7, v8);
  v9 = *a2;
  swift_getKeyPath();
  v12 = v9;
  v13 = v7;
  v14 = v9;
  sub_23B97D0C8(&qword_256A5EF98, (uint64_t (*)(uint64_t))type metadata accessor for PersonDetailsController, (uint64_t)&protocol conformance descriptor for PersonDetailsController);
  sub_23BB88A14();
  swift_release();
  return sub_23BA89808((uint64_t)v7);
}

uint64_t type metadata accessor for PersonDetailsController()
{
  uint64_t result;

  result = qword_256A5EFF8;
  if (!qword_256A5EFF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA88A90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC12FindMyUICore23PersonDetailsController__state;
  swift_beginAccess();
  sub_23BA8A0CC(a2, v3);
  return swift_endAccess();
}

uint64_t PersonDetailsController.__allocating_init(personIdentifier:initialState:dependencies:)(uint64_t *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  PersonDetailsController.init(personIdentifier:initialState:dependencies:)(a1, a2, a3);
  return v6;
}

uint64_t PersonDetailsController.init(personIdentifier:initialState:dependencies:)(uint64_t *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v29 = a2;
  v30 = type metadata accessor for PersonDetailsController.State(0);
  MEMORY[0x24BDAC7A8](v30, v7);
  v28 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23BB889CC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v14 = a1[1];
  v16 = *((_BYTE *)a1 + 16);
  v27 = *((_QWORD *)a3 + 4);
  sub_23BB889C0();
  v17 = sub_23BB88990();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21 = *a3;
  v25 = a3[1];
  v26 = v21;
  v20(v13, v9);
  *(_QWORD *)(v4 + 16) = v17;
  *(_QWORD *)(v4 + 24) = v19;
  sub_23BB88A44();
  *(_QWORD *)(v4 + 32) = v15;
  *(_QWORD *)(v4 + 40) = v14;
  *(_BYTE *)(v4 + 48) = v16;
  v22 = v29;
  sub_23B989CE8(v29, v4 + OBJC_IVAR____TtC12FindMyUICore23PersonDetailsController__state, type metadata accessor for PersonDetailsController.State);
  *(_OWORD *)(v4 + 56) = v26;
  *(_OWORD *)(v4 + 72) = v25;
  v23 = (uint64_t)v28;
  *(_QWORD *)(v4 + 88) = v27;
  sub_23BB88A08();
  swift_getKeyPath();
  v31 = v4;
  v32 = v23;
  v33 = v4;
  sub_23B97D0C8(&qword_256A5EF98, (uint64_t (*)(uint64_t))type metadata accessor for PersonDetailsController, (uint64_t)&protocol conformance descriptor for PersonDetailsController);
  sub_23BB88A14();
  swift_release();
  sub_23BA89808(v23);
  sub_23BA89808(v22);
  return v4;
}

_QWORD *PersonDetailsController.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = v0[2];
  v7 = v0[3];
  v9 = v0[7];
  v10 = v0[8];
  v11 = v0[9];
  v12 = v0[10];
  v13 = v0[11];
  sub_23BB8A9F4();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v14 = sub_23BB8A9E8();
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  v15[2] = v14;
  v15[3] = v16;
  v15[4] = v9;
  v15[5] = v8;
  v15[6] = v7;
  v15[7] = v10;
  v15[8] = v11;
  v15[9] = v12;
  v15[10] = v13;
  sub_23B989F54((uint64_t)v5, (uint64_t)&unk_256A5EFB0, (uint64_t)v15);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23BA89808((uint64_t)v1 + OBJC_IVAR____TtC12FindMyUICore23PersonDetailsController__state);
  v17 = (char *)v1 + OBJC_IVAR____TtC12FindMyUICore23PersonDetailsController___observationRegistrar;
  v18 = sub_23BB88A50();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  return v1;
}

uint64_t sub_23BA88F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[7] = v10;
  v8[8] = v11;
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  sub_23BB8A9F4();
  v8[9] = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA88F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  sub_23B98B760(v2, v1);
  sub_23B98BA0C(v2, v1);
  sub_23B98AF5C(v2, v1);
  sub_23B98BCB8(v2, v1);
  sub_23B98B4B4(v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PersonDetailsController.__deallocating_deinit()
{
  PersonDetailsController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23BA8904C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  char v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  _OWORD v73[8];
  uint64_t v74;
  _BYTE v75[136];
  _QWORD v76[17];

  v2 = v1;
  v70 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A593D8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v68 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5F0B0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  v10 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v11);
  v67 = (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + 56);
  swift_getKeyPath();
  v76[0] = v13;
  sub_23B97D0C8((unint64_t *)&qword_256A595D0, (uint64_t (*)(uint64_t))type metadata accessor for PeopleRelationshipsProvider, (uint64_t)&protocol conformance descriptor for PeopleRelationshipsProvider);
  sub_23BB88A20();
  swift_release();
  v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC12FindMyUICore27PeopleRelationshipsProvider__data);
  swift_beginAccess();
  v15 = *v14;
  v16 = *(_QWORD *)(v2 + 64);
  swift_getKeyPath();
  v76[0] = v16;
  sub_23B97D0C8((unint64_t *)&qword_256A595A8, (uint64_t (*)(uint64_t))type metadata accessor for PeopleLocationsProvider, (uint64_t)&protocol conformance descriptor for PeopleLocationsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC12FindMyUICore23PeopleLocationsProvider__data);
  swift_beginAccess();
  v18 = *v17;
  v19 = *(_QWORD *)(v2 + 72);
  swift_getKeyPath();
  v76[0] = v19;
  sub_23B97D0C8((unint64_t *)&qword_256A595F8, (uint64_t (*)(uint64_t))type metadata accessor for UserLocationProvider, (uint64_t)&protocol conformance descriptor for UserLocationProvider);
  v69 = v18;
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v20 = *(void **)(v19 + OBJC_IVAR____TtC12FindMyUICore20UserLocationProvider__data);
  v21 = *(_QWORD *)(v2 + 80);
  swift_getKeyPath();
  v76[0] = v21;
  sub_23B97D0C8(&qword_256A59588, (uint64_t (*)(uint64_t))type metadata accessor for ContactsProvider, (uint64_t)&protocol conformance descriptor for ContactsProvider);
  v66 = v20;
  v65 = v20;
  sub_23BB88A20();
  swift_release();
  v22 = (uint64_t *)(v21 + OBJC_IVAR____TtC12FindMyUICore16ContactsProvider__data);
  swift_beginAccess();
  v23 = *v22;
  v24 = *(_QWORD *)(v2 + 88);
  swift_getKeyPath();
  v76[0] = v24;
  sub_23B97D0C8(&qword_256A59138, (uint64_t (*)(uint64_t))type metadata accessor for MapsDirectionsProvider, (uint64_t)&protocol conformance descriptor for MapsDirectionsProvider);
  swift_bridgeObjectRetain();
  sub_23BB88A20();
  swift_release();
  v25 = (uint64_t *)(v24 + OBJC_IVAR____TtC12FindMyUICore22MapsDirectionsProvider__data);
  swift_beginAccess();
  v26 = *v25;
  v27 = *(_QWORD *)(v2 + 32);
  v28 = *(_QWORD *)(v2 + 40);
  v72 = *(unsigned __int8 *)(v2 + 48);
  if (*(_QWORD *)(v15 + 16))
  {
    v29 = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = sub_23B9849D0(v27, v28, v72);
    if ((v31 & 1) != 0)
    {
      sub_23B989CE8(*(_QWORD *)(v15 + 56) + *(_QWORD *)(v10 + 72) * v30, (uint64_t)v9, type metadata accessor for PeopleRelationshipsProvider.RelationshipState);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v29);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v9, 1, 1, v29);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v9, 1, 1, v71);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v29) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_23BA8A1FC((uint64_t)v9);
    v32 = type metadata accessor for PersonDetailsController.State.Loaded(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v70, 1, 1, v32);
  }
  v34 = (uint64_t)v9;
  v35 = v67;
  sub_23BA8A23C(v34, v67);
  v36 = v69;
  if (*(_QWORD *)(v69 + 16))
  {
    swift_bridgeObjectRetain();
    v37 = sub_23B9849D0(v27, v28, v72);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23BA186FC((uint64_t)v75);
      goto LABEL_15;
    }
    v39 = (_OWORD *)(*(_QWORD *)(v36 + 56) + 136 * v37);
    v73[0] = *v39;
    v40 = v39[3];
    v41 = v39[4];
    v42 = v39[2];
    v73[1] = v39[1];
    v73[2] = v42;
    v73[3] = v40;
    v73[4] = v41;
    v43 = v39[5];
    v44 = v39[6];
    v45 = v39[7];
    v74 = *((_QWORD *)v39 + 16);
    v73[6] = v44;
    v73[7] = v45;
    v73[5] = v43;
    memmove(v75, v39, 0x88uLL);
    nullsub_1(v75);
    sub_23B9894E4((uint64_t)v73);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23BA186FC((uint64_t)v75);
  }
  swift_bridgeObjectRelease();
LABEL_15:
  sub_23B990D24((uint64_t)v75, (uint64_t)v76, &qword_256A5AA48);
  if (*(_QWORD *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    v46 = sub_23B984A70(v27, v28, v72);
    if ((v47 & 1) != 0)
    {
      v48 = *(void **)(*(_QWORD *)(v23 + 56) + 8 * v46);
      v49 = v48;
    }
    else
    {
      v48 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v48 = 0;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    v50 = sub_23B984880(v27, v28);
    v51 = (uint64_t)v68;
    if ((v52 & 1) != 0)
    {
      v53 = v50;
      v71 = v27;
      v54 = *(_QWORD *)(v26 + 56);
      v55 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
      v56 = v48;
      v57 = *(_QWORD *)(v55 - 8);
      v58 = v54 + *(_QWORD *)(v57 + 72) * v53;
      v27 = v71;
      sub_23B989CE8(v58, v51, type metadata accessor for MapsDirectionsProvider.DirectionsState);
      v59 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56);
      v48 = v56;
      v59(v51, 0, 1, v55);
    }
    else
    {
      v61 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v51, 1, 1, v61);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v60 = type metadata accessor for MapsDirectionsProvider.DirectionsState(0);
    v51 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v68, 1, 1, v60);
  }
  swift_bridgeObjectRelease();
  v62 = (int *)type metadata accessor for PersonInfo();
  v63 = v70;
  sub_23BA8A23C(v35, v70 + v62[5]);
  *(_QWORD *)v63 = v27;
  *(_QWORD *)(v63 + 8) = v28;
  *(_BYTE *)(v63 + 16) = v72;
  sub_23B990D24((uint64_t)v76, v63 + v62[6], &qword_256A5AA48);
  *(_QWORD *)(v63 + v62[7]) = v66;
  *(_QWORD *)(v63 + v62[8]) = v48;
  sub_23B990D24(v51, v63 + v62[9], &qword_256A593D8);
  v64 = type metadata accessor for PersonDetailsController.State.Loaded(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v63, 0, 1, v64);
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_23BA897A8())()
{
  swift_allocObject();
  swift_weakInit();
  return sub_23BA8A134;
}

uint64_t sub_23BA897F0()
{
  uint64_t v0;

  return sub_23BA88A90(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23BA89808(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PersonDetailsController.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BA89844()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA89898(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23B990D68;
  return sub_23BA88F04(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_23BA89940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23BB8AA18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_23BB8A9F4();
  swift_retain();
  v6 = sub_23BB8A9E8();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  v7[4] = v5;
  swift_release();
  sub_23B989F54((uint64_t)v3, (uint64_t)&unk_256A5F0A8, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_23BA89A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[6] = a4;
  v4[7] = type metadata accessor for PersonDetailsController.State(0);
  v4[8] = swift_task_alloc();
  sub_23BB8A9F4();
  v4[9] = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA89B10()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = *(_QWORD *)(v0 + 64);
    sub_23BB88A08();
    swift_getKeyPath();
    v4 = swift_task_alloc();
    *(_QWORD *)(v4 + 16) = v2;
    *(_QWORD *)(v4 + 24) = v3;
    *(_QWORD *)(v0 + 40) = v2;
    sub_23B97D0C8(&qword_256A5EF98, (uint64_t (*)(uint64_t))type metadata accessor for PersonDetailsController, (uint64_t)&protocol conformance descriptor for PersonDetailsController);
    sub_23BB88A14();
    swift_release();
    swift_task_dealloc();
    sub_23BA89808(v3);
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall PersonDetailsController.onAppear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EFB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23BB8C510;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  *(_BYTE *)(inited + 48) = v3;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v7 = sub_23B98FC9C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_23B98E128(v7, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EFC0);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v8 + 32) = v2;
  *(_QWORD *)(v8 + 40) = v1;
  *(_BYTE *)(v8 + 48) = v3;
  *(_BYTE *)(v8 + 49) = 0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v9 = sub_23B99013C(v8);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_23B98E900(v9, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = sub_23B98F234((uint64_t)&unk_250CA9C60);
  swift_bridgeObjectRetain();
  sub_23B98D950(v10, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5EFC8);
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v11 + 32) = v2;
  *(_QWORD *)(v11 + 40) = v1;
  *(_BYTE *)(v11 + 48) = v3;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v12 = sub_23B99031C(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_23B98E514(v12, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59478);
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_23BB8C510;
  *(_QWORD *)(v13 + 32) = v2;
  *(_QWORD *)(v13 + 40) = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v14 = sub_23B98F30C(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_23B98D564(v14, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PersonDetailsController.onDisappear()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_23B98B760(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98BA0C(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98AF5C(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98BCB8(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B98B4B4(v2, v1);
  swift_bridgeObjectRelease();
}

uint64_t sub_23BA8A008()
{
  return type metadata accessor for PersonDetailsController();
}

uint64_t sub_23BA8A010()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PersonDetailsController.State(319);
  if (v1 <= 0x3F)
  {
    result = sub_23BB88A50();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PersonDetailsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonDetailsController.__allocating_init(personIdentifier:initialState:dependencies:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_23BA8A0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonDetailsController.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA8A110()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23BA8A134()
{
  return sub_23BA89940();
}

uint64_t sub_23BA8A13C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23BA8A168(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23B97C964;
  return sub_23BA89A80(a1, v4, v5, v6);
}

uint64_t sub_23BA8A1FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_256A5F0B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BA8A23C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PeopleRelationshipsProvider.RelationshipState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA8A280()
{
  return sub_23BA897F0();
}

_QWORD *sub_23BA8A29C(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v9 = (int *)type metadata accessor for Annotation();
    v10 = v9[7];
    __dst = (char *)v4 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_23BB88984();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(_QWORD *)((char *)v4 + v9[8]) = *(uint64_t *)((char *)a2 + v9[8]);
    v17 = v9[9];
    v18 = (char *)v4 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = *(id *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_BYTE *)(v19 + 32);
    sub_23B9A618C(*(id *)v19, v21, v22, v23, v24);
    *(_QWORD *)v18 = v20;
    *((_QWORD *)v18 + 1) = v21;
    *((_QWORD *)v18 + 2) = v22;
    *((_QWORD *)v18 + 3) = v23;
    v18[32] = v24;
    v25 = v9[10];
    v26 = (_QWORD *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    if (v28)
    {
      *v26 = *v27;
      v26[1] = v28;
      v29 = v27[3];
      v26[2] = v27[2];
      v26[3] = v29;
      v26[4] = v27[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v30 = *((_OWORD *)v27 + 1);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v30;
      v26[4] = v27[4];
    }
    v31 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)v4 + v31) = *((_BYTE *)a2 + v31);
    v32 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BA8A49C(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Annotation();
  v3 = a1 + v2[7];
  v4 = sub_23BB88984();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v6 = a1 + v2[9];
  sub_23B9A6310(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_BYTE *)(v6 + 32));
  if (*(_QWORD *)(a1 + v2[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_23BA8A56C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = (int *)type metadata accessor for Annotation();
  v8 = v7[7];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)(a1 + v7[8]) = *(_QWORD *)(a2 + v7[8]);
  v15 = v7[9];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(id *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v20 = *(_QWORD *)(v17 + 16);
  v21 = *(_QWORD *)(v17 + 24);
  v22 = *(_BYTE *)(v17 + 32);
  sub_23B9A618C(*(id *)v17, v19, v20, v21, v22);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v19;
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = v21;
  *(_BYTE *)(v16 + 32) = v22;
  v23 = v7[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  if (v26)
  {
    *v24 = *v25;
    v24[1] = v26;
    v27 = v25[3];
    v24[2] = v25[2];
    v24[3] = v27;
    v24[4] = v25[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v28;
    v24[4] = v25[4];
  }
  v29 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  swift_retain();
  return a1;
}

_QWORD *sub_23BA8A740(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  v6 = (int *)type metadata accessor for Annotation();
  v7 = v6[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23BB88984();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
  v16 = v6[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(id *)v18;
  v20 = *((_QWORD *)v18 + 1);
  v21 = *((_QWORD *)v18 + 2);
  v22 = *((_QWORD *)v18 + 3);
  v23 = v18[32];
  sub_23B9A618C(*(id *)v18, v20, v21, v22, v23);
  v24 = *(void **)v17;
  v25 = *((_QWORD *)v17 + 1);
  v26 = *((_QWORD *)v17 + 2);
  v27 = *((_QWORD *)v17 + 3);
  *(_QWORD *)v17 = v19;
  *((_QWORD *)v17 + 1) = v20;
  *((_QWORD *)v17 + 2) = v21;
  *((_QWORD *)v17 + 3) = v22;
  v28 = v17[32];
  v17[32] = v23;
  sub_23B9A6310(v24, v25, v26, v27, v28);
  v29 = v6[10];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v32 = *(_QWORD *)((char *)a1 + v29 + 8);
  v33 = *(_QWORD *)((char *)a2 + v29 + 8);
  if (v32)
  {
    if (v33)
    {
      *v30 = *v31;
      v30[1] = v31[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30[2] = v31[2];
      v30[3] = v31[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v30[4] = v31[4];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_23B9A6BDC((uint64_t)v30);
      v34 = v31[4];
      v35 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v35;
      v30[4] = v34;
    }
  }
  else if (v33)
  {
    *v30 = *v31;
    v30[1] = v31[1];
    v30[2] = v31[2];
    v30[3] = v31[3];
    v30[4] = v31[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v36 = *(_OWORD *)v31;
    v37 = *((_OWORD *)v31 + 1);
    v30[4] = v31[4];
    *(_OWORD *)v30 = v36;
    *((_OWORD *)v30 + 1) = v37;
  }
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_23BA8AA28(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = (int *)type metadata accessor for Annotation();
  v8 = v7[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23BB88984();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
  v14 = v7[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  v18 = v7[10];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
  v22 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
  v23 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);
  return a1;
}

uint64_t sub_23BA8AB74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = (int *)type metadata accessor for Annotation();
  v9 = v8[7];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_23BB88984();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  *(_QWORD *)(a1 + v8[8]) = *(_QWORD *)(a2 + v8[8]);
  v18 = v8[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_BYTE *)(v20 + 32);
  v22 = *(void **)v19;
  v23 = *(_QWORD *)(v19 + 8);
  v24 = *(_QWORD *)(v19 + 16);
  v25 = *(_QWORD *)(v19 + 24);
  v26 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v26;
  v27 = *(_BYTE *)(v19 + 32);
  *(_BYTE *)(v19 + 32) = v21;
  sub_23B9A6310(v22, v23, v24, v25, v27);
  v28 = v8[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (!*(_QWORD *)(a1 + v28 + 8))
  {
LABEL_11:
    v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
    goto LABEL_12;
  }
  v31 = *(_QWORD *)(v30 + 8);
  if (!v31)
  {
    sub_23B9A6BDC(v29);
    goto LABEL_11;
  }
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_QWORD *)(v29 + 8) = v31;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v30 + 24);
  *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  *(_QWORD *)(v29 + 24) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
  swift_release();
LABEL_12:
  v34 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v35 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  swift_release();
  return a1;
}

uint64_t sub_23BA8AD84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA8AD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Annotation();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BA8AE0C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA8AE18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Annotation();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AnnotationContent()
{
  uint64_t result;

  result = qword_256A5F110;
  if (!qword_256A5F110)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23BA8AECC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Annotation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23BA8AF50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA8AF60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F180);
  v42 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v41 = (char *)&v39 - v8;
  v9 = sub_23BB89098();
  v40 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F188);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F190);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v39 - v24;
  v26 = type metadata accessor for AnnotationContent();
  if (*(_BYTE *)(a1 + *(int *)(v26 + 20)) == 1)
  {
    v27 = v26;
    type metadata accessor for Annotation();
    sub_23BB8908C();
    v45 = *(_QWORD *)(a1 + *(int *)(v27 + 32));
    sub_23BB890D4();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v25, v17, v13);
    v28 = 0;
  }
  else
  {
    v28 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v25, v28, 1, v13);
  v29 = *(_QWORD *)(a1 + 24);
  v45 = *(_QWORD *)(a1 + 16);
  v46 = v29;
  MEMORY[0x24BDAC7A8](v29, v30);
  *(&v39 - 2) = a1;
  swift_bridgeObjectRetain();
  sub_23BB8A37C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F198);
  sub_23BA8B788();
  sub_23B9967E0();
  v31 = v41;
  sub_23BB8911C();
  sub_23BA8B854((uint64_t)v25, (uint64_t)v21);
  v32 = v42;
  v33 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  v34 = v44;
  v33(v44, v31, v3);
  v35 = v43;
  sub_23BA8B854((uint64_t)v21, v43);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1C0);
  v33((char *)(v35 + *(int *)(v36 + 48)), v34, v3);
  v37 = *(void (**)(char *, uint64_t))(v32 + 8);
  v37(v31, v3);
  sub_23B989D60((uint64_t)v25, &qword_256A5F190);
  v37(v34, v3);
  return sub_23B989D60((uint64_t)v21, &qword_256A5F190);
}

uint64_t sub_23BA8B2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE *v15;
  _BYTE *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v30 = a2;
  v3 = sub_23BB89F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (int *)type metadata accessor for AnnotationView();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23B989CE8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Annotation);
  v12 = type metadata accessor for AnnotationContent();
  v13 = *(int *)(v12 + 28);
  v29 = *(unsigned __int8 *)(a1 + *(int *)(v12 + 24));
  v14 = *(_BYTE *)(a1 + v13);
  v15 = &v11[v8[5]];
  *(_OWORD *)v15 = xmmword_23BB92480;
  *((_OWORD *)v15 + 1) = xmmword_23BB92490;
  *((_OWORD *)v15 + 2) = xmmword_23BB924A0;
  *((_QWORD *)v15 + 6) = 0x3FF8000000000000;
  v16 = &v11[v8[6]];
  v17 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
  *(_QWORD *)&v32 = MEMORY[0x24260BF80](v17);
  v18 = sub_23BB89398();
  *(_QWORD *)&v32 = sub_23BB89FE0();
  v19 = sub_23BB89398();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BDF3C28], v3);
  v20 = MEMORY[0x24260BF74](v7, 0.882, 0.882, 0.882, 1.0);
  *(_QWORD *)v16 = v18;
  v16[8] = 0;
  *((_QWORD *)v16 + 2) = v19;
  *((_QWORD *)v16 + 3) = 0x4010000000000000;
  *((_QWORD *)v16 + 4) = v20;
  *(_OWORD *)(v16 + 40) = xmmword_23BB924B0;
  v11[v8[7]] = v29;
  v11[v8[8]] = v14;
  v21 = &v11[v8[9]];
  LOBYTE(v31) = 0;
  sub_23BB8A0C4();
  v22 = *((_QWORD *)&v32 + 1);
  *v21 = v32;
  *((_QWORD *)v21 + 1) = v22;
  v23 = v8[10];
  v31 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1C8);
  sub_23BB8A0C4();
  *(_OWORD *)&v11[v23] = v32;
  v24 = sub_23BB8A328();
  v25 = v30;
  sub_23B989CE8((uint64_t)v11, v30, (uint64_t (*)(_QWORD))type metadata accessor for AnnotationView);
  v26 = v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5F198) + 36);
  *(_QWORD *)v26 = v24;
  *(_BYTE *)(v26 + 8) = v14;
  return sub_23BA8B89C((uint64_t)v11);
}

uint64_t sub_23BA8B568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F158);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F160);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F168);
  sub_23B996E1C(&qword_256A5F170, &qword_256A5F168, MEMORY[0x24BDFBC20]);
  sub_23BB8A040();
  v10 = sub_23BA8B704();
  sub_23BB890E0();
  sub_23B989D60((uint64_t)v4, &qword_256A5F158);
  v14 = v1;
  v15 = v10;
  swift_getOpaqueTypeConformance2();
  sub_23BB890EC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_23BA8B6E4()
{
  return sub_23BB890BC();
}

uint64_t sub_23BA8B6FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BA8AF60(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BA8B704()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256A5F178;
  if (!qword_256A5F178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F158);
    v2 = sub_23B996E1C(&qword_256A5F170, &qword_256A5F168, MEMORY[0x24BDFBC20]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDFC040], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256A5F178);
  }
  return result;
}

uint64_t sub_23BA8B780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23BA8B2D8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BA8B788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256A5F1A0;
  if (!qword_256A5F1A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F198);
    v2[0] = sub_23BA8B80C();
    v2[1] = sub_23B996E1C(&qword_256A5F1B0, &qword_256A5F1B8, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256A5F1A0);
  }
  return result;
}

unint64_t sub_23BA8B80C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5F1A8;
  if (!qword_256A5F1A8)
  {
    v1 = type metadata accessor for AnnotationView();
    result = MEMORY[0x24260D8DC](&unk_23BB96430, v1);
    atomic_store(result, (unint64_t *)&qword_256A5F1A8);
  }
  return result;
}

uint64_t sub_23BA8B854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA8B89C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AnnotationView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AnnotationContent.Style()
{
  return &type metadata for AnnotationContent.Style;
}

uint64_t sub_23BA8B8E8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F160);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F158);
  sub_23BA8B704();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_23BA8B95C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23BB88F9C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 28));
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)v4 + v9;
    v12 = (char *)a2 + v9;
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v14;
    v15 = (char *)v4 + v10;
    v16 = (char *)a2 + v10;
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v15[16] = v16[16];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23BA8BA4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23BB88F9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23BA8BAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23BB88F9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v12;
  v13 = *(_OWORD *)(v11 + 32);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
  *(_OWORD *)(v10 + 32) = v13;
  v14 = a1 + v9;
  v15 = a2 + v9;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23BA8BB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23BB88F9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  swift_retain();
  swift_release();
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_retain();
  swift_release();
  v9[1] = v10[1];
  swift_retain();
  swift_release();
  v9[2] = v10[2];
  v9[3] = v10[3];
  v9[4] = v10[4];
  v9[5] = v10[5];
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_retain();
  swift_release();
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  return a1;
}

uint64_t sub_23BA8BCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23BB88F9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_OWORD *)(a1 + v8);
  v11 = (__int128 *)(a2 + v8);
  v12 = v11[2];
  v13 = *v11;
  v10[1] = v11[1];
  v10[2] = v12;
  *v10 = v13;
  v14 = a1 + v9;
  v15 = a2 + v9;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  return a1;
}

uint64_t sub_23BA8BD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23BB88F9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  swift_release();
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_release();
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_release();
  v11 = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
  *(_OWORD *)(v9 + 32) = v11;
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)v14;
  swift_release();
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  swift_release();
  *(_BYTE *)(v13 + 16) = *(_BYTE *)(v14 + 16);
  return a1;
}

uint64_t sub_23BA8BE38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA8BE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23BA8BEC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA8BED4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for QuickSendAppMapView()
{
  uint64_t result;

  result = qword_256A5F230;
  if (!qword_256A5F230)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23BA8BF90()
{
  unint64_t v0;

  sub_23BA8C00C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23BA8C00C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256A5F240)
  {
    sub_23BB88F9C();
    v0 = sub_23BB8A0F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256A5F240);
  }
}

uint64_t storeEnumTagSinglePayload for QuickSendAppMapView.Selection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23BA8C0AC + 4 * byte_23BB92545[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23BA8C0E0 + 4 * asc_23BB92540[v4]))();
}

uint64_t sub_23BA8C0E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA8C0E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23BA8C0F0);
  return result;
}

uint64_t sub_23BA8C0FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23BA8C104);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23BA8C108(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23BA8C110(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QuickSendAppMapView.Selection()
{
  return &type metadata for QuickSendAppMapView.Selection;
}

unint64_t sub_23BA8C130()
{
  unint64_t result;

  result = qword_256A5F278;
  if (!qword_256A5F278)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB925A4, &type metadata for QuickSendAppMapView.Selection);
    atomic_store(result, (unint64_t *)&qword_256A5F278);
  }
  return result;
}

uint64_t sub_23BA8C174()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23BA8C184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[2];
  char v93;

  v85 = a1;
  v2 = type metadata accessor for QuickSendAppMapView();
  v79 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v3);
  v80 = v4;
  v84 = (uint64_t)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23BB89008();
  v82 = *(_QWORD *)(v5 - 8);
  v83 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v81 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_23BB88FCC();
  MEMORY[0x24BDAC7A8](v63, v8);
  v87 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0B0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F280);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F288);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67, v18);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F290);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69, v21);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F298);
  v71 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74, v24);
  v70 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2A0);
  v77 = *(_QWORD *)(v26 - 8);
  v78 = v26;
  MEMORY[0x24BDAC7A8](v26, v27);
  v76 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2A8);
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75, v29);
  v72 = (char *)&v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  v65 = v17;
  sub_23BB8A0E8();
  sub_23BB88F30();
  v31 = sub_23BB88F3C();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v13, 0, 1, v31);
  v32 = *(int *)(v2 + 24);
  v86 = v1;
  v33 = v1 + v32;
  v35 = *(_QWORD *)v33;
  v34 = *(_QWORD *)(v33 + 8);
  v64 = v33;
  v36 = *(_BYTE *)(v33 + 16);
  v88 = v35;
  v89 = v34;
  LOBYTE(v90) = v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2B0);
  MEMORY[0x24260C0DC](v92);
  if (LOBYTE(v92[0]) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2E0);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_23BB8FEC0;
    sub_23BB88FB4();
    sub_23BB88FC0();
    v88 = v38;
  }
  else
  {
    v88 = MEMORY[0x24BEE4AF8];
  }
  sub_23BA8CF4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D0E0);
  sub_23B996E1C(&qword_256A5D0E8, &qword_256A5D0E0, MEMORY[0x24BEE12C8]);
  sub_23BB8AD84();
  v88 = v35;
  v89 = v34;
  LOBYTE(v90) = v36;
  v62 = v37;
  MEMORY[0x24260C0DC](v92, v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2B8);
  v39 = sub_23BB8A1C0();
  v92[0] = v88;
  v92[1] = v89;
  v93 = v90;
  MEMORY[0x24BDAC7A8](v39, v40);
  v41 = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2C0);
  sub_23BA8CF9C();
  sub_23B996E1C(&qword_256A5F2D0, &qword_256A5F2C0, MEMORY[0x24BDFBC20]);
  sub_23BB88F0C();
  v42 = sub_23B996E1C(&qword_256A5F2D8, &qword_256A5F288, MEMORY[0x24BDFBC78]);
  v43 = MEMORY[0x24BDF5158];
  v44 = MEMORY[0x24BDF5138];
  v45 = v67;
  sub_23BB89D40();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v20, v45);
  v88 = v45;
  v89 = v43;
  v90 = v42;
  v91 = v44;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v47 = v70;
  v48 = v69;
  sub_23BB89D4C();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v23, v48);
  v49 = v81;
  sub_23BB88FFC();
  v50 = v84;
  sub_23BA8CFE0(v41, v84);
  v51 = (*(unsigned __int8 *)(v79 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  v87 = (char *)(v51 + v80);
  v52 = swift_allocObject();
  sub_23BA8D028(v50, v52 + v51);
  v88 = v48;
  v89 = OpaqueTypeConformance2;
  v53 = swift_getOpaqueTypeConformance2();
  v54 = v76;
  v55 = v74;
  sub_23BB89D34();
  swift_release();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v49, v83);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v55);
  v56 = *(_QWORD *)(v64 + 8);
  v57 = *(_BYTE *)(v64 + 16);
  v88 = *(_QWORD *)v64;
  v89 = v56;
  LOBYTE(v90) = v57;
  MEMORY[0x24260C0DC](v92, v62);
  sub_23BA8CFE0(v86, v50);
  v58 = swift_allocObject();
  sub_23BA8D028(v50, v58 + v51);
  v88 = v55;
  v89 = v53;
  swift_getOpaqueTypeConformance2();
  sub_23BA8C130();
  v59 = v72;
  v60 = v78;
  sub_23BB89F14();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v60);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v73 + 32))(v85, v59, v75);
}

uint64_t sub_23BA8C968@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v50 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2F0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2F8);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v47 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F300);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v45 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D158);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v45 - v24;
  sub_23BB89128();
  v26 = type metadata accessor for QuickSendAppMapView();
  v27 = a1;
  v28 = (uint64_t *)(a1 + *(int *)(v26 + 24));
  v29 = *v28;
  v30 = v28[1];
  LOBYTE(v28) = *((_BYTE *)v28 + 16);
  v53 = v29;
  v54 = v30;
  LOBYTE(v55) = (_BYTE)v28;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2B0);
  MEMORY[0x24260C0DC](&v57, v31);
  v32 = 1;
  if (v57 == 1)
  {
    v33 = (uint64_t *)(v27 + *(int *)(v26 + 20));
    v34 = v33[1];
    v53 = *v33;
    v54 = v34;
    v35 = *((_OWORD *)v33 + 2);
    v55 = *((_OWORD *)v33 + 1);
    v56 = v35;
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2E8);
    MEMORY[0x24260C0DC](&v57, v36);
    v37 = v46;
    sub_23BB8914C();
    LOBYTE(v53) = 1;
    sub_23B996E1C(qword_256A5F310, &qword_256A5F2F0, MEMORY[0x24BDFBFB0]);
    sub_23BA8CF9C();
    v38 = v47;
    v39 = v49;
    sub_23BB890F8();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v39);
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v16, v38, v52);
    v32 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v16, v32, 1, v52);
  v40 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v40(v21, v25, v17);
  sub_23BA8D1D4((uint64_t)v16, (uint64_t)v12);
  v41 = v50;
  v40(v50, v21, v17);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F308);
  sub_23BA8D1D4((uint64_t)v12, (uint64_t)&v41[*(int *)(v42 + 48)]);
  sub_23BA8D21C((uint64_t)v16);
  v43 = *(void (**)(char *, uint64_t))(v18 + 8);
  v43(v25, v17);
  sub_23BA8D21C((uint64_t)v12);
  return ((uint64_t (*)(char *, uint64_t))v43)(v21, v17);
}

uint64_t sub_23BA8CC9C()
{
  sub_23BB88FF0();
  type metadata accessor for QuickSendAppMapView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F2E8);
  return sub_23BB8A19C();
}

void sub_23BA8CD2C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[16];

  v6 = sub_23BB88F9C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == 1 && (*a2 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
    sub_23BB8A0D0();
    v11 = sub_23BB88F54();
    v12 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
    if ((v11 & 1) != 0)
    {
      MEMORY[0x24BDAC7A8](v12, v13);
      *(_QWORD *)&v14[-16] = a3;
      sub_23BB8A328();
      sub_23BB893F8();
      swift_release();
    }
  }
}

uint64_t sub_23BA8CE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  _QWORD v11[2];

  v0 = sub_23BB88F9C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v11 - v7;
  sub_23BB88F84();
  sub_23BB88F48();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v8, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  sub_23BB8A0DC();
  return ((uint64_t (*)(char *, uint64_t))v9)(v8, v0);
}

unint64_t sub_23BA8CF4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256A5D0D8;
  if (!qword_256A5D0D8)
  {
    v1 = sub_23BB88FCC();
    result = MEMORY[0x24260D8DC](MEMORY[0x24BDFBD58], v1);
    atomic_store(result, (unint64_t *)&qword_256A5D0D8);
  }
  return result;
}

uint64_t sub_23BA8CF94@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23BA8C968(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_23BA8CF9C()
{
  unint64_t result;

  result = qword_256A5F2C8;
  if (!qword_256A5F2C8)
  {
    result = MEMORY[0x24260D8DC](&unk_23BB925CC, &type metadata for QuickSendAppMapView.Selection);
    atomic_store(result, (unint64_t *)&qword_256A5F2C8);
  }
  return result;
}

uint64_t sub_23BA8CFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for QuickSendAppMapView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA8D028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for QuickSendAppMapView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA8D06C()
{
  type metadata accessor for QuickSendAppMapView();
  return sub_23BA8CC9C();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for QuickSendAppMapView() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_23BB88F9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F1D0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23BA8D170(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for QuickSendAppMapView() - 8) + 80);
  sub_23BA8CD2C(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_23BA8D1BC()
{
  return sub_23BA8CE44();
}

uint64_t sub_23BA8D1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23BA8D21C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F300);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23BA8D25C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F2A0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F298);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F290);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256A5F288);
  sub_23B996E1C(&qword_256A5F2D8, &qword_256A5F288, MEMORY[0x24BDFBC78]);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  sub_23BA8C130();
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_23BA8D370(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(_BYTE *, uint64_t, uint64_t);
  uint64_t Action;
  uint64_t v54;
  uint64_t v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if ((unint64_t)*a2 >= 2)
      v7 = swift_bridgeObjectRetain();
    *a1 = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for SessionLocation.Description(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = *(int *)(v11 + 20);
      v17 = (_QWORD *)((char *)v9 + v16);
      v18 = (_QWORD *)((char *)v10 + v16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23BB88984();
        (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        v20 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v21 = (char *)v17 + v20;
        v22 = (char *)v18 + v20;
        *(_OWORD *)v21 = *(_OWORD *)v22;
        v23 = *((_QWORD *)v22 + 3);
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        *((_QWORD *)v21 + 3) = v23;
        v24 = *((_QWORD *)v22 + 5);
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
        *((_QWORD *)v21 + 5) = v24;
        v25 = *((_QWORD *)v22 + 7);
        *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
        *((_QWORD *)v21 + 7) = v25;
        v26 = *((_QWORD *)v22 + 9);
        *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
        *((_QWORD *)v21 + 9) = v26;
        v27 = *((_QWORD *)v22 + 11);
        *((_QWORD *)v21 + 10) = *((_QWORD *)v22 + 10);
        *((_QWORD *)v21 + 11) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v28 = *v18;
        v29 = v18[1];
        *v17 = v28;
        v17[1] = v29;
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      v30 = *(int *)(v11 + 24);
      v31 = (_QWORD *)((char *)v9 + v30);
      v32 = (_QWORD *)((char *)v10 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56);
      swift_bridgeObjectRetain();
      v34(v9, 0, 1, v11);
    }
    v35 = a3[6];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = sub_23BB88984();
    v39 = *(_QWORD *)(v38 - 8);
    v54 = v39;
    v55 = v38;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v42 = (uint64_t *)((char *)a1 + v41);
    v43 = (uint64_t *)((char *)a2 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v45) = *((_BYTE *)a2 + v45);
    v46 = a3[11];
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    v49 = type metadata accessor for DirectionsState();
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51(v48, 2, v49))
    {
      Action = type metadata accessor for LocateAction();
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    }
    else
    {
      *v47 = *v48;
      *(_OWORD *)(v47 + 8) = *(_OWORD *)(v48 + 8);
      v47[24] = v48[24];
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 16))(&v47[*(int *)(v49 + 24)], &v48[*(int *)(v49 + 24)], v55);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 2, v49);
    }
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  }
  return a1;
}

uint64_t sub_23BA8D6EC(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;

  if (*a1 >= 2uLL)
    swift_bridgeObjectRelease();
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for SessionLocation.Description(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = &v4[*(int *)(v5 + 20)];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23BB88984();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      type metadata accessor for FindMyRelativeDate();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8 = (char *)a1 + a2[6];
  v9 = sub_23BB88984();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (char *)a1 + a2[11];
  v12 = type metadata accessor for DirectionsState();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 2, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(&v11[*(int *)(v12 + 24)], v9);
  return result;
}

uint64_t *sub_23BA8D8AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v32)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(_BYTE *, uint64_t, uint64_t);
  uint64_t Action;
  uint64_t v52;
  int *v53;

  v6 = *a2;
  if ((unint64_t)*a2 >= 2)
    v6 = swift_bridgeObjectRetain();
  *a1 = v6;
  v7 = a3[5];
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  v10 = type metadata accessor for SessionLocation.Description(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = *(int *)(v10 + 20);
    v15 = (_QWORD *)((char *)v8 + v14);
    v16 = (_QWORD *)((char *)v9 + v14);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_23BB88984();
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      v18 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v19 = (char *)v15 + v18;
      v20 = (char *)v16 + v18;
      *(_OWORD *)v19 = *(_OWORD *)v20;
      v21 = *((_QWORD *)v20 + 3);
      *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
      *((_QWORD *)v19 + 3) = v21;
      v22 = *((_QWORD *)v20 + 5);
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 5) = v22;
      v23 = *((_QWORD *)v20 + 7);
      *((_QWORD *)v19 + 6) = *((_QWORD *)v20 + 6);
      *((_QWORD *)v19 + 7) = v23;
      v24 = *((_QWORD *)v20 + 9);
      *((_QWORD *)v19 + 8) = *((_QWORD *)v20 + 8);
      *((_QWORD *)v19 + 9) = v24;
      v25 = *((_QWORD *)v20 + 11);
      *((_QWORD *)v19 + 10) = *((_QWORD *)v20 + 10);
      *((_QWORD *)v19 + 11) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *v16;
      v27 = v16[1];
      *v15 = v26;
      v15[1] = v27;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v28 = *(int *)(v10 + 24);
    v29 = (_QWORD *)((char *)v8 + v28);
    v30 = (_QWORD *)((char *)v9 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56);
    swift_bridgeObjectRetain();
    v32(v8, 0, 1, v10);
  }
  v33 = a3[6];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_23BB88984();
  v37 = *(_QWORD *)(v36 - 8);
  v52 = v37;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  v39 = a3[8];
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  v40 = (uint64_t *)((char *)a1 + v39);
  v41 = (uint64_t *)((char *)a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v43) = *((_BYTE *)a2 + v43);
  v53 = a3;
  v44 = a3[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for DirectionsState();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49(v46, 2, v47))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v45 = *v46;
    *(_OWORD *)(v45 + 8) = *(_OWORD *)(v46 + 8);
    v45[24] = v46[24];
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v52 + 16))(&v45[*(int *)(v47 + 24)], &v46[*(int *)(v47 + 24)], v36);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 2, v47);
  }
  *((_BYTE *)a1 + v53[12]) = *((_BYTE *)a2 + v53[12]);
  return a1;
}

unint64_t *sub_23BA8DC08(unint64_t *a1, unint64_t *a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  void (*v34)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  int v56;
  int v57;
  __int128 v58;
  uint64_t Action;
  __int128 v61;
  int *v62;

  v6 = *a1;
  v7 = *a2;
  if (v6 >= 2)
  {
    if (v7 >= 2)
    {
      *a1 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23B989D60((uint64_t)a1, &qword_256A5A1B8);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v7;
    if (v7 >= 2)
      swift_bridgeObjectRetain();
  }
  v8 = a3[5];
  v9 = (unint64_t *)((char *)a1 + v8);
  v10 = (unint64_t *)((char *)a2 + v8);
  v11 = type metadata accessor for SessionLocation.Description(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *v9 = *v10;
      v9[1] = v10[1];
      v16 = *(int *)(v11 + 20);
      v17 = (_QWORD *)((char *)v9 + v16);
      v18 = (_QWORD *)((char *)v10 + v16);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23BB88984();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        v20 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v21 = (char *)v17 + v20;
        v22 = (char *)v18 + v20;
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
        *((_QWORD *)v21 + 3) = *((_QWORD *)v22 + 3);
        *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
        *((_QWORD *)v21 + 5) = *((_QWORD *)v22 + 5);
        *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
        *((_QWORD *)v21 + 7) = *((_QWORD *)v22 + 7);
        *((_QWORD *)v21 + 8) = *((_QWORD *)v22 + 8);
        *((_QWORD *)v21 + 9) = *((_QWORD *)v22 + 9);
        *((_QWORD *)v21 + 10) = *((_QWORD *)v22 + 10);
        *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *v17 = *v18;
        v17[1] = v18[1];
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      v31 = *(int *)(v11 + 24);
      v32 = (_QWORD *)((char *)v9 + v31);
      v33 = (_QWORD *)((char *)v10 + v31);
      *v32 = *v33;
      v32[1] = v33[1];
      v34 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56);
      swift_bridgeObjectRetain();
      v34(v9, 0, 1, v11);
      goto LABEL_23;
    }
LABEL_14:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_23;
  }
  if (v15)
  {
    sub_23B989D9C((uint64_t)v9, type metadata accessor for SessionLocation.Description);
    goto LABEL_14;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v24 = *(int *)(v11 + 20);
    v25 = (_QWORD *)((char *)v9 + v24);
    v26 = (_QWORD *)((char *)v10 + v24);
    sub_23B989D60((uint64_t)v9 + v24, &qword_256A59C88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_23BB88984();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      v28 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v29 = (char *)v25 + v28;
      v30 = (char *)v26 + v28;
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *((_QWORD *)v29 + 2) = *((_QWORD *)v30 + 2);
      *((_QWORD *)v29 + 3) = *((_QWORD *)v30 + 3);
      *((_QWORD *)v29 + 4) = *((_QWORD *)v30 + 4);
      *((_QWORD *)v29 + 5) = *((_QWORD *)v30 + 5);
      *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
      *((_QWORD *)v29 + 7) = *((_QWORD *)v30 + 7);
      *((_QWORD *)v29 + 8) = *((_QWORD *)v30 + 8);
      *((_QWORD *)v29 + 9) = *((_QWORD *)v30 + 9);
      *((_QWORD *)v29 + 10) = *((_QWORD *)v30 + 10);
      *((_QWORD *)v29 + 11) = *((_QWORD *)v30 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *v25 = *v26;
      v25[1] = v26[1];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  v35 = *(int *)(v11 + 24);
  v36 = (_QWORD *)((char *)v9 + v35);
  v37 = (_QWORD *)((char *)v10 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_23:
  v38 = a3[6];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_23BB88984();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
LABEL_28:
    v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
LABEL_29:
  *(unint64_t *)((char *)a1 + a3[7]) = *(unint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3[8];
  v48 = (unint64_t *)((char *)a1 + v47);
  v49 = (unint64_t *)((char *)a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v62 = a3;
  v50 = a3[11];
  v51 = (uint64_t)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = type metadata accessor for DirectionsState();
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 2, v53);
  v57 = v55((uint64_t)v52, 2, v53);
  if (!v56)
  {
    if (!v57)
    {
      *(_BYTE *)v51 = *v52;
      v61 = *(_OWORD *)(v52 + 8);
      *(_BYTE *)(v51 + 24) = v52[24];
      *(_OWORD *)(v51 + 8) = v61;
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 24))(v51 + *(int *)(v53 + 24), &v52[*(int *)(v53 + 24)], v41);
      goto LABEL_35;
    }
    sub_23B989D9C(v51, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    goto LABEL_34;
  }
  if (v57)
  {
LABEL_34:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v51, v52, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_35;
  }
  *(_BYTE *)v51 = *v52;
  v58 = *(_OWORD *)(v52 + 8);
  *(_BYTE *)(v51 + 24) = v52[24];
  *(_OWORD *)(v51 + 8) = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v51 + *(int *)(v53 + 24), &v52[*(int *)(v53 + 24)], v41);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 2, v53);
LABEL_35:
  *((_BYTE *)a1 + v62[12]) = *((_BYTE *)a2 + v62[12]);
  return a1;
}

_QWORD *sub_23BA8E254(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t Action;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for SessionLocation.Description(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      v17 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v18 = &v13[v17];
      v19 = &v14[v17];
      v20 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v20;
      v21 = *((_OWORD *)v19 + 5);
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 5) = v21;
      v22 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v22;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    *(_OWORD *)((char *)v7 + *(int *)(v9 + 24)) = *(_OWORD *)((char *)v8 + *(int *)(v9 + 24));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v23 = a3[6];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_23BB88984();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v29 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  v30 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  v31 = a3[11];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for DirectionsState();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v33, 2, v34))
  {
    Action = type metadata accessor for LocateAction();
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
    v32[24] = v33[24];
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 32))(&v32[*(int *)(v34 + 24)], &v33[*(int *)(v34 + 24)], v26);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 2, v34);
  }
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  return a1;
}

unint64_t *sub_23BA8E520(unint64_t *a1, unint64_t *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t Action;
  int *v69;

  v6 = *a2;
  if (*a1 < 2)
    goto LABEL_4;
  if (v6 < 2)
  {
    sub_23B989D60((uint64_t)a1, &qword_256A5A1B8);
LABEL_4:
    *a1 = v6;
    goto LABEL_6;
  }
  *a1 = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  v7 = a3[5];
  v8 = (unint64_t *)((char *)a1 + v7);
  v9 = (unint64_t *)((char *)a2 + v7);
  v10 = type metadata accessor for SessionLocation.Description(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
      v15 = *(int *)(v10 + 20);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v19 = sub_23BB88984();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
        v20 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
        v21 = &v16[v20];
        v22 = &v17[v20];
        v23 = *((_OWORD *)v22 + 3);
        *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
        *((_OWORD *)v21 + 3) = v23;
        v24 = *((_OWORD *)v22 + 5);
        *((_OWORD *)v21 + 4) = *((_OWORD *)v22 + 4);
        *((_OWORD *)v21 + 5) = v24;
        v25 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v25;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      *(_OWORD *)((char *)v8 + *(int *)(v10 + 24)) = *(_OWORD *)((char *)v9 + *(int *)(v10 + 24));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_20;
    }
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_20;
  }
  if (v14)
  {
    sub_23B989D9C((uint64_t)v8, type metadata accessor for SessionLocation.Description);
    goto LABEL_12;
  }
  v27 = v9[1];
  *v8 = *v9;
  v8[1] = v27;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v28 = *(int *)(v10 + 20);
    v29 = (char *)v8 + v28;
    v30 = (char *)v9 + v28;
    sub_23B989D60((uint64_t)v8 + v28, &qword_256A59C88);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_23BB88984();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v29, v30, v32);
      v33 = *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
      v34 = &v29[v33];
      v35 = &v30[v33];
      v36 = *((_OWORD *)v35 + 3);
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *((_OWORD *)v34 + 3) = v36;
      v37 = *((_OWORD *)v35 + 5);
      *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
      *((_OWORD *)v34 + 5) = v37;
      v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
  }
  v39 = *(int *)(v10 + 24);
  v40 = (_QWORD *)((char *)v8 + v39);
  v41 = (_QWORD *)((char *)v9 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
LABEL_20:
  v44 = a3[6];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = sub_23BB88984();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
LABEL_25:
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v48 + 40))(v45, v46, v47);
LABEL_26:
  *(unint64_t *)((char *)a1 + a3[7]) = *(unint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v53 = a3[8];
  v54 = (unint64_t *)((char *)a1 + v53);
  v55 = (uint64_t *)((char *)a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  v58 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v58) = *((_BYTE *)a2 + v58);
  v69 = a3;
  v59 = a3[11];
  v60 = (uint64_t)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = type metadata accessor for DirectionsState();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 2, v62);
  v66 = v64((uint64_t)v61, 2, v62);
  if (!v65)
  {
    if (!v66)
    {
      *(_BYTE *)v60 = *v61;
      *(_OWORD *)(v60 + 8) = *(_OWORD *)(v61 + 8);
      *(_BYTE *)(v60 + 24) = v61[24];
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 40))(v60 + *(int *)(v62 + 24), &v61[*(int *)(v62 + 24)], v47);
      goto LABEL_32;
    }
    sub_23B989D9C(v60, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    goto LABEL_31;
  }
  if (v66)
  {
LABEL_31:
    Action = type metadata accessor for LocateAction();
    memcpy((void *)v60, v61, *(_QWORD *)(*(_QWORD *)(Action - 8) + 64));
    goto LABEL_32;
  }
  *(_BYTE *)v60 = *v61;
  *(_OWORD *)(v60 + 8) = *(_OWORD *)(v61 + 8);
  *(_BYTE *)(v60 + 24) = v61[24];
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v60 + *(int *)(v62 + 24), &v61[*(int *)(v62 + 24)], v47);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 2, v62);
LABEL_32:
  *((_BYTE *)a1 + v69[12]) = *((_BYTE *)a2 + v69[12]);
  return a1;
}

uint64_t sub_23BA8EA04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA8EA10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Action;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    Action = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, Action);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    Action = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, Action);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    Action = type metadata accessor for LocateAction();
    v7 = *(_QWORD *)(Action - 8);
    v9 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, Action);
  }
  v11 = *(_QWORD *)(a1 + a3[7]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23BA8EAE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23BA8EAEC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t Action;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    Action = v8;
    v11 = a4[5];
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A5E6B0);
    v9 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      Action = result;
      v11 = a4[6];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      Action = type metadata accessor for LocateAction();
      v9 = *(_QWORD *)(Action - 8);
      v11 = a4[11];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, Action);
}

uint64_t type metadata accessor for DetailsAppView.State(uint64_t a1)
{
  return sub_23B9A446C(a1, (uint64_t *)&unk_256A5F370);
}

void sub_23BA8EBCC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23BA8ECC4(319, qword_256A5F380, (void (*)(uint64_t))type metadata accessor for SessionLocation.Description);
  if (v0 <= 0x3F)
  {
    sub_23BA8ECC4(319, (unint64_t *)&qword_256A5CCD0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for LocateAction();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_23BA8ECC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23BB8ACA0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23BA8ED10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  return sub_23BA8ED80(a1, a2, a3, a4, a5, a6, &qword_256A59E00, a7, (uint64_t)sub_23BA9ACA8);
}

uint64_t sub_23BA8ED48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  return sub_23BA8ED80(a1, a2, a3, a4, a5, a6, &qword_256A5A5B8, a7, (uint64_t)sub_23BA0D20C);
}

uint64_t sub_23BA8ED80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t *a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  _QWORD *v19;
  char v22;
  uint64_t v23;

  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(a7);
  v15 = a8 + v14[12];
  sub_23BB8A0C4();
  *(_BYTE *)v15 = v22;
  *(_QWORD *)(v15 + 8) = v23;
  v16 = a8 + v14[13];
  sub_23BB8A0C4();
  *(_BYTE *)v16 = v22;
  *(_QWORD *)(v16 + 8) = v23;
  sub_23B990D24(a1, a8, &qword_256A599A0);
  v17 = (_QWORD *)(a8 + v14[9]);
  *v17 = a2;
  v17[1] = a3;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a4;
  *(_QWORD *)(result + 24) = a5;
  v19 = (_QWORD *)(a8 + v14[10]);
  *v19 = a9;
  v19[1] = result;
  *(_BYTE *)(a8 + v14[11]) = a6 ^ 1;
  return result;
}

uint64_t sub_23BA8EEA4@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  char *v27;
  uint64_t v28;
  void (*v29)(char *);
  uint64_t v30;
  uint64_t *boxed_opaque_existential_1;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *);
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  int *v50;
  uint64_t result;
  void (*v52)(char *);
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  void (*v58)(char *, uint64_t, uint64_t);
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char *v65;
  unsigned int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71[3];
  uint64_t v72;
  uint64_t v73;
  _BYTE v74[40];
  char v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;

  v70 = a2;
  v3 = sub_23BB8A334();
  v4 = *(_QWORD **)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v67 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23BB89F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for CustomControlStyle(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v65 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v52 - v17;
  if ((a1 & 1) != 0)
  {
    sub_23BB89C08();
    sub_23BB89C38();
    v69 = sub_23BB89C50();
    swift_release();
    v19 = 10.0;
    v20 = sub_23BB89C80();
  }
  else
  {
    v69 = sub_23BB89C8C();
    v19 = 14.0;
    v20 = sub_23BB89C08();
  }
  v68 = v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v57 = *MEMORY[0x24BDF3C28];
  v21 = v57;
  v22(v11, v57, v7);
  v58 = v22;
  v23 = MEMORY[0x24260BF74](v11, 0.0, 0.627, 0.992, 1.0);
  v77 = MEMORY[0x24BDF3E48];
  v78 = MEMORY[0x24BDF3E18];
  *(_QWORD *)&v76 = v23;
  sub_23BB89C08();
  sub_23BB89C20();
  v54 = sub_23BB89C50();
  swift_release();
  v22(v11, v21, v7);
  MEMORY[0x24260BF74](v11, 0.0, 0.627, 0.992, 1.0);
  v24 = sub_23BB8A004();
  v53 = v7;
  v25 = v24;
  swift_release();
  v66 = *MEMORY[0x24BDF5080];
  v26 = (void (*)(char *))v4[13];
  v27 = v67;
  v26(v67);
  v28 = v3;
  v29 = v26;
  v52 = v26;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5C528);
  v72 = v30;
  v62 = v30;
  v64 = sub_23B996E1C(qword_256A5F3D8, &qword_256A5C528, MEMORY[0x24BDEF780]);
  v73 = v64;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v71);
  v32 = (char *)boxed_opaque_existential_1 + *(int *)(v30 + 36);
  v33 = (void (*)(char *, char *, uint64_t))v4[2];
  v33(v32, v27, v28);
  *boxed_opaque_existential_1 = v25;
  v63 = (void (*)(char *, uint64_t))v4[1];
  v63(v27, v28);
  sub_23B9A193C((uint64_t)v71, (uint64_t)v74);
  v75 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  v34 = &v18[v12[8]];
  v61 = *MEMORY[0x24BDEB488];
  v35 = v61;
  v60 = sub_23BB892F0();
  v59 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 104);
  v59(v34, v35, v60);
  v56 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
  swift_storeEnumTagMultiPayload();
  v36 = &v18[v12[6]];
  v55 = *MEMORY[0x24BDF50D0];
  v29(v36);
  sub_23B9A1980(&v76, (uint64_t)v18);
  *((_QWORD *)v18 + 5) = v54;
  sub_23B990D24((uint64_t)v74, (uint64_t)&v18[v12[7]], qword_256A59CC0);
  v18[v12[9]] = 1;
  v18[v12[10]] = 0;
  v37 = &v18[v12[11]];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v38 = v57;
  v39 = v53;
  v40 = v58;
  v58(v11, v57, v53);
  v41 = MEMORY[0x24260BF74](v11, 0.0, 0.627, 0.992, 1.0);
  v78 = MEMORY[0x24BDF3E18];
  v77 = MEMORY[0x24BDF3E48];
  *(_QWORD *)&v76 = v41;
  sub_23BB89C08();
  sub_23BB89C20();
  v54 = sub_23BB89C50();
  swift_release();
  v40(v11, v38, v39);
  MEMORY[0x24260BF74](v11, 0.0, 0.627, 0.992, 1.0);
  v42 = sub_23BB8A004();
  swift_release();
  v43 = v52;
  ((void (*)(char *, _QWORD, uint64_t))v52)(v27, v66, v28);
  v44 = v62;
  v72 = v62;
  v73 = v64;
  v45 = __swift_allocate_boxed_opaque_existential_1(v71);
  v33((char *)v45 + *(int *)(v44 + 36), v27, v28);
  *v45 = v42;
  v63(v27, v28);
  sub_23B9A193C((uint64_t)v71, (uint64_t)v74);
  v75 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  v46 = (uint64_t)v65;
  v59(&v65[v12[8]], v61, v60);
  swift_storeEnumTagMultiPayload();
  ((void (*)(uint64_t, _QWORD, uint64_t))v43)(v46 + v12[6], v55, v28);
  sub_23B9A1980(&v76, v46);
  *(_QWORD *)(v46 + 40) = v54;
  sub_23B990D24((uint64_t)v74, v46 + v12[7], qword_256A59CC0);
  *(_BYTE *)(v46 + v12[9]) = 1;
  *(_BYTE *)(v46 + v12[10]) = 0;
  v47 = v46 + v12[11];
  *(_QWORD *)v47 = 0;
  *(_BYTE *)(v47 + 8) = 1;
  v48 = v70;
  v49 = v68;
  *v70 = v69;
  v48[1] = v49;
  v50 = (int *)type metadata accessor for DetailsAppView.Style(0);
  sub_23B989CA4((uint64_t)v18, (uint64_t)v48 + v50[6], type metadata accessor for CustomControlStyle);
  result = sub_23B989CA4(v46, (uint64_t)v48 + v50[7], type metadata accessor for CustomControlStyle);
  *(double *)((char *)v48 + v50[8]) = v19;
  *(uint64_t *)((char *)v48 + v50[9]) = 0x402C000000000000;
  *(uint64_t *)((char *)v48 + v50[10]) = 0x4018000000000000;
  return result;
}

uint64_t sub_23BA8F524@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, _QWORD *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t *v32;
  uint64_t result;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  char v42;
  char v43;
  uint64_t v44;

  v41 = a7;
  v39 = a5;
  v40 = a6;
  v36 = a4;
  v37 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F3D0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DetailsAppView.Style(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v38 = (uint64_t *)((char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *a1;
  v20 = (int *)type metadata accessor for DetailsAppView(0);
  v21 = (char *)a8 + v20[10];
  v42 = 1;
  sub_23BB8A0C4();
  v22 = v44;
  *v21 = v43;
  *((_QWORD *)v21 + 1) = v22;
  v23 = (char *)a8 + v20[11];
  v42 = 1;
  v25 = v36;
  v24 = v37;
  sub_23BB8A0C4();
  v26 = v44;
  *v23 = v43;
  *((_QWORD *)v23 + 1) = v26;
  *a8 = v19;
  sub_23B989CE8(v24, (uint64_t)a8 + v20[5], type metadata accessor for DetailsAppView.State);
  v27 = (_OWORD *)((char *)a8 + v20[6]);
  v28 = a3[7];
  v27[6] = a3[6];
  v27[7] = v28;
  v27[8] = a3[8];
  v29 = a3[3];
  v27[2] = a3[2];
  v27[3] = v29;
  v30 = a3[5];
  v27[4] = a3[4];
  v27[5] = v30;
  v31 = a3[1];
  *v27 = *a3;
  v27[1] = v31;
  sub_23B989EFC(v25, (uint64_t)v14, &qword_256A5F3D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v32 = v38;
    sub_23BA8EEA4((v19 & 0x40) != 0, v38);
    sub_23B989D60(v25, &qword_256A5F3D0);
    sub_23B989D9C(v24, type metadata accessor for DetailsAppView.State);
    sub_23B989D60((uint64_t)v14, &qword_256A5F3D0);
  }
  else
  {
    sub_23B989D60(v25, &qword_256A5F3D0);
    sub_23B989D9C(v24, type metadata accessor for DetailsAppView.State);
    v32 = v38;
    sub_23B989CA4((uint64_t)v14, (uint64_t)v38, type metadata accessor for DetailsAppView.Style);
  }
  result = sub_23B989CA4((uint64_t)v32, (uint64_t)a8 + v20[7], type metadata accessor for DetailsAppView.Style);
  v34 = (_QWORD *)((char *)a8 + v20[8]);
  v35 = v40;
  *v34 = v39;
  v34[1] = v35;
  *((_BYTE *)a8 + v20[9]) = v41 & 1;
  return result;
}

uint64_t type metadata accessor for DetailsAppView.Style(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5F438);
}

uint64_t type metadata accessor for DetailsAppView(uint64_t a1)
{
  return sub_23B9A446C(a1, qword_256A5F4E0);
}

uint64_t sub_23BA8F7C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  unsigned __int16 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  unsigned __int16 v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v2 = v1;
  v78 = a1;
  v77 = sub_23BB8AA18();
  v73 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77, v3);
  v71 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DetailsAppView(0);
  v81 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v81 + 64);
  MEMORY[0x24BDAC7A8](v5, v7);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F530);
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66, v8);
  v63 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F538);
  MEMORY[0x24BDAC7A8](v62, v10);
  v68 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F540);
  MEMORY[0x24BDAC7A8](v64, v12);
  v69 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F548);
  MEMORY[0x24BDAC7A8](v74, v14);
  v76 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F550);
  v72 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75, v16);
  v70 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = *(int *)(v5 + 20);
  v18 = MEMORY[0x24BEE4AF8];
  v19 = MEMORY[0x24BEE4AF8];
  if (*(unint64_t *)((char *)v2 + v67) >= 2)
    v19 = swift_bridgeObjectRetain();
  v20 = *((_BYTE *)v2 + *(int *)(v5 + 36));
  v90 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A1B8);
  sub_23BB8A0C4();
  v21 = v82;
  sub_23BA8FE98((uint64_t)&v82);
  v80 = v82;
  v22 = v83;
  v23 = WORD4(v83);
  v24 = BYTE10(v83);
  v25 = sub_23BB8A2F8();
  *(_QWORD *)&v82 = v19;
  BYTE8(v82) = v20;
  v83 = v21;
  v84 = v80;
  v85 = v22;
  v86 = v23;
  v87 = v24;
  v88 = v25;
  v89 = v26;
  v27 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B989CE8((uint64_t)v2, (uint64_t)v27, type metadata accessor for DetailsAppView);
  v28 = *(unsigned __int8 *)(v81 + 80);
  v29 = (v28 + 16) & ~v28;
  v81 = v29;
  v79 = v29 + v6;
  *(_QWORD *)&v80 = v28 | 7;
  v30 = swift_allocObject();
  sub_23B989CA4((uint64_t)v27, v30 + v29, type metadata accessor for DetailsAppView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F558);
  sub_23B9B9770(&qword_256A5F560, &qword_256A5F558, (uint64_t (*)(void))sub_23BA99488, MEMORY[0x24BDF0390]);
  v31 = v63;
  sub_23BB89DAC();
  swift_release();
  v32 = v84;
  v33 = v85;
  v34 = v87;
  v35 = v86;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23BA99550(v32, *((uint64_t *)&v32 + 1), v33, v35, v34);
  v36 = sub_23BB8983C();
  v37 = (uint64_t)v68;
  v38 = (uint64_t)&v68[*(int *)(v62 + 36)];
  v61 = v2;
  sub_23BA90440(v2, v38);
  v39 = sub_23BB89368();
  v40 = MEMORY[0x24260BB48]((2 * v39));
  v41 = sub_23BB894DC();
  v42 = v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5F590) + 36);
  *(_QWORD *)v42 = v41;
  *(_QWORD *)(v42 + 8) = 0;
  *(_BYTE *)(v42 + 16) = 0;
  *(_BYTE *)(v42 + 17) = v40;
  *(_QWORD *)(v42 + 24) = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v37, v31, v66);
  v43 = (uint64_t)v2;
  v44 = (uint64_t)v27;
  sub_23B989CE8(v43, (uint64_t)v27, type metadata accessor for DetailsAppView);
  v45 = swift_allocObject();
  sub_23B989CA4((uint64_t)v27, v45 + v81, type metadata accessor for DetailsAppView);
  v46 = v71;
  sub_23BB8AA00();
  v47 = (uint64_t)v69;
  v48 = &v69[*(int *)(v64 + 36)];
  v49 = sub_23BB893E0();
  v50 = v73;
  v51 = v77;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(&v48[*(int *)(v49 + 20)], v46, v77);
  *(_QWORD *)v48 = &unk_256A5F5A0;
  *((_QWORD *)v48 + 1) = v45;
  sub_23B989EFC(v37, v47, &qword_256A5F538);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v51);
  sub_23B989D60(v37, &qword_256A5F538);
  v52 = (uint64_t)v61;
  sub_23B989CE8((uint64_t)v61, v44, type metadata accessor for DetailsAppView);
  v53 = swift_allocObject();
  v54 = v81;
  sub_23B989CA4(v44, v53 + v81, type metadata accessor for DetailsAppView);
  v55 = v76;
  sub_23B989EFC(v47, v76, &qword_256A5F540);
  v56 = (_QWORD *)(v55 + *(int *)(v74 + 36));
  *v56 = 0;
  v56[1] = 0;
  v56[2] = sub_23BA999E8;
  v56[3] = v53;
  sub_23B989D60(v47, &qword_256A5F540);
  LOBYTE(v82) = *(_QWORD *)(v52 + v67) > 1uLL;
  sub_23B989CE8(v52, v44, type metadata accessor for DetailsAppView);
  v57 = swift_allocObject();
  sub_23B989CA4(v44, v57 + v54, type metadata accessor for DetailsAppView);
  sub_23B9B9770(&qword_256A5F5A8, &qword_256A5F548, (uint64_t (*)(void))sub_23BA99A64, MEMORY[0x24BDF0910]);
  v58 = v70;
  sub_23BB89F14();
  swift_release();
  sub_23B989D60(v55, &qword_256A5F548);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v72 + 32))(v78, v58, v75);
}

uint64_t sub_23BA8FE98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  char v27;

  v3 = (int *)type metadata accessor for DetailsAppView(0);
  v4 = *(_QWORD *)(v1 + v3[5]);
  if (!v4)
  {
    type metadata accessor for FindMyUICore();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v12 = (void *)sub_23BB8A784();
    v13 = objc_msgSend(v11, sel_localizedStringForKey_value_table_, v12, 0, 0);

    sub_23BB8A7B4();
    type metadata accessor for DetailsAppView.State(0);
LABEL_6:
    sub_23BA9A960();
    swift_bridgeObjectRetain();
    sub_23BB89944();
    goto LABEL_10;
  }
  if (v4 == 1)
  {
    v5 = v1 + v3[10];
    LOBYTE(v23) = *(_BYTE *)v5;
    v24 = *(_QWORD *)(v5 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
    sub_23BB8A0D0();
    type metadata accessor for FindMyUICore();
    v6 = swift_getObjCClassFromMetadata();
    v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v6);
    if (v22 != 1)
    {
      v19 = (void *)sub_23BB8A784();
      v20 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v19, 0, 0);

      sub_23BB8A7B4();
      type metadata accessor for DetailsAppView.State(0);
      sub_23BA9A960();
      swift_bridgeObjectRetain();
      sub_23BB89944();
      goto LABEL_10;
    }
    v8 = (void *)sub_23BB8A784();
    v9 = objc_msgSend(v7, sel_localizedStringForKey_value_table_, v8, 0, 0);

    sub_23BB8A7B4();
    type metadata accessor for DetailsAppView.State(0);
    goto LABEL_6;
  }
  v14 = v1 + v3[11];
  LOBYTE(v23) = *(_BYTE *)v14;
  v24 = *(_QWORD *)(v14 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  if ((v22 & 1) == 0)
    goto LABEL_11;
  type metadata accessor for FindMyUICore();
  v15 = swift_getObjCClassFromMetadata();
  v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v15);
  v17 = (void *)sub_23BB8A784();
  v18 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v17, 0, 0);

  sub_23BB8A7B4();
  type metadata accessor for DetailsAppView.State(0);
  sub_23BA9A960();
  swift_bridgeObjectRetain();
  sub_23BB89944();
LABEL_10:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F7A8);
  sub_23BA9A8E0();
  sub_23BB89944();
LABEL_11:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F790);
  sub_23BA9A8FC(&qword_256A5F798, &qword_256A5F790, sub_23BA9A8E0);
  result = sub_23BB89944();
  *(_QWORD *)a1 = v23;
  *(_QWORD *)(a1 + 8) = v24;
  *(_QWORD *)(a1 + 16) = v25;
  *(_WORD *)(a1 + 24) = v26;
  *(_BYTE *)(a1 + 26) = v27;
  return result;
}

uint64_t sub_23BA90440@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_23BB8A2B0();
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v68 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F5D8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v64 = (_QWORD *)((char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F5E0);
  MEMORY[0x24BDAC7A8](v63, v9);
  v66 = (uint64_t)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F5E8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v65 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v67 = (uint64_t)v61 - v16;
  v17 = type metadata accessor for DetailsAppView(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F5F0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F5F8);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (char *)a1 + *(int *)(v17 + 20);
  v30 = type metadata accessor for DetailsAppView.State(0);
  if (v29[*(int *)(v30 + 48)] == 1)
  {
    sub_23BA90934(v28);
    sub_23B989EFC((uint64_t)v28, (uint64_t)v24, &qword_256A5F5F8);
    swift_storeEnumTagMultiPayload();
    sub_23BA9A06C();
    sub_23BA9A264();
    sub_23BB89944();
    v31 = (uint64_t)v28;
    v32 = &qword_256A5F5F8;
  }
  else
  {
    v33 = v30;
    v61[0] = v21;
    v61[1] = v25;
    v62 = v11;
    v34 = *a1;
    sub_23B989CE8((uint64_t)a1, (uint64_t)v20, type metadata accessor for DetailsAppView);
    v35 = (v34 & 1) != 0 && *(_QWORD *)(*(_QWORD *)&v20[*(int *)(v17 + 20) + *(int *)(v33 + 28)] + 16) < 2uLL;
    v36 = (uint64_t)v24;
    sub_23B989D9C((uint64_t)v20, type metadata accessor for DetailsAppView);
    v37 = *a1 & 0xE;
    v38 = (char *)a1 + *(int *)(v17 + 28);
    v39 = *(_QWORD *)&v38[*(int *)(type metadata accessor for DetailsAppView.Style(0) + 36)];
    v40 = sub_23BB8983C();
    v41 = (uint64_t)v64;
    *v64 = v40;
    *(_QWORD *)(v41 + 8) = v39;
    *(_BYTE *)(v41 + 16) = 0;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F600);
    sub_23BA90E5C(v35, (uint64_t)a1, v37 != 0, v41 + *(int *)(v42 + 44));
    v43 = sub_23BB89BA8();
    sub_23BB892A8();
    v45 = v44;
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v52 = v66;
    sub_23B989EFC(v41, v66, &qword_256A5F5D8);
    v53 = v52 + *(int *)(v63 + 36);
    *(_BYTE *)v53 = v43;
    *(_QWORD *)(v53 + 8) = v45;
    *(_QWORD *)(v53 + 16) = v47;
    *(_QWORD *)(v53 + 24) = v49;
    *(_QWORD *)(v53 + 32) = v51;
    *(_BYTE *)(v53 + 40) = 0;
    sub_23B989D60(v41, &qword_256A5F5D8);
    v54 = v68;
    sub_23BB8A28C();
    LOBYTE(v41) = sub_23BB89BA8();
    v55 = (uint64_t)v65;
    v56 = &v65[*(int *)(v62 + 36)];
    v58 = v69;
    v57 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v56, v54, v70);
    v56[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A310) + 36)] = v41;
    sub_23B989EFC(v52, v55, &qword_256A5F5E0);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v54, v57);
    sub_23B989D60(v52, &qword_256A5F5E0);
    v59 = v67;
    sub_23B990D24(v55, v67, &qword_256A5F5E8);
    sub_23B989EFC(v59, v36, &qword_256A5F5E8);
    swift_storeEnumTagMultiPayload();
    sub_23BA9A06C();
    sub_23BA9A264();
    sub_23BB89944();
    v31 = v59;
    v32 = &qword_256A5F5E8;
  }
  return sub_23B989D60(v31, v32);
}

uint64_t sub_23BA90934@<X0>(char *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;
  double v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73;
  uint64_t v74;
  char v75;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v72 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_23BB8A2B0();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71, v7);
  v68 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F648);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F638);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F628);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F610);
  MEMORY[0x24BDAC7A8](v70, v21);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F668);
  MEMORY[0x24BDAC7A8](v24, v25);
  v31 = MEMORY[0x24BDAC7A8](v26, v27);
  if ((*(_BYTE *)v2 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v29 + 56))(a1, 1, 1, v24, v31);
  v63 = (char *)&v62 - v28;
  v64 = v30;
  v65 = v29;
  v66 = v4;
  v67 = a1;
  *(_QWORD *)v12 = sub_23BB89788();
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F670);
  sub_23BA91FA8(v2, (uint64_t)&v12[*(int *)(v33 + 44)]);
  v34 = (char *)v2 + *(int *)(type metadata accessor for DetailsAppView(0) + 44);
  v35 = *v34;
  v36 = *((_QWORD *)v34 + 1);
  v73 = v35;
  v74 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  if (v75)
    v37 = 0.0;
  else
    v37 = 1.0;
  sub_23B989EFC((uint64_t)v12, (uint64_t)v16, &qword_256A5F648);
  *(double *)&v16[*(int *)(v13 + 36)] = v37;
  sub_23B989D60((uint64_t)v12, &qword_256A5F648);
  type metadata accessor for DetailsAppView.Style(0);
  v38 = sub_23BB89BA8();
  sub_23BB892A8();
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_23B989EFC((uint64_t)v16, (uint64_t)v20, &qword_256A5F638);
  v47 = &v20[*(int *)(v17 + 36)];
  *v47 = v38;
  *((_QWORD *)v47 + 1) = v40;
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  *((_QWORD *)v47 + 4) = v46;
  v47[40] = 0;
  sub_23B989D60((uint64_t)v16, &qword_256A5F638);
  v48 = v68;
  sub_23BB8A28C();
  v49 = sub_23BB89BA8();
  v50 = v69;
  v51 = &v23[*(int *)(v70 + 36)];
  v52 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v51, v48, v71);
  v51[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5A310) + 36)] = v49;
  sub_23B989EFC((uint64_t)v20, (uint64_t)v23, &qword_256A5F628);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v52);
  sub_23B989D60((uint64_t)v20, &qword_256A5F628);
  v53 = *MEMORY[0x24BDECEA8];
  v54 = sub_23BB894A0();
  v55 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v56 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v72, v53, v54);
  sub_23B97D0C8((unint64_t *)&qword_256A59A20, v55, MEMORY[0x24BDECF78]);
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    sub_23BA9A13C();
    sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    v57 = v64;
    sub_23BB89DF4();
    sub_23B989D60(v56, &qword_256A599C0);
    sub_23B989D60((uint64_t)v23, &qword_256A5F610);
    v58 = v65;
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
    v60 = v63;
    v59(v63, v57, v24);
    v61 = v67;
    v59(v67, (uint64_t)v60, v24);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v61, 0, 1, v24);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BA90E5C@<X0>(char a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  char v45;
  char v46;
  uint64_t v47;
  int *v48;
  __int128 *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  char *v55;
  char *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;

  v73 = a3;
  v75 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F758);
  MEMORY[0x24BDAC7A8](v6, v7);
  v76 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v72 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F760);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F768);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F770);
  MEMORY[0x24BDAC7A8](v23, v24);
  v74 = (uint64_t)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v72 - v28;
  v72 = a2;
  if ((a1 & 1) != 0)
  {
    sub_23BA91338();
    v30 = sub_23BB89B9C();
    type metadata accessor for DetailsAppView(0);
    type metadata accessor for DetailsAppView.Style(0);
    sub_23BB892A8();
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v17, v13);
    v39 = &v22[*(int *)(v18 + 36)];
    *v39 = v30;
    *((_QWORD *)v39 + 1) = v32;
    *((_QWORD *)v39 + 2) = v34;
    *((_QWORD *)v39 + 3) = v36;
    *((_QWORD *)v39 + 4) = v38;
    v39[40] = 0;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    sub_23B990D24((uint64_t)v22, (uint64_t)v29, &qword_256A5F768);
    v40 = 0;
  }
  else
  {
    v40 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v29, v40, 1, v18);
  if ((v73 & 1) != 0)
  {
    v41 = type metadata accessor for DetailsAppView(0);
    v42 = v72;
    v43 = v72 + *(int *)(v41 + 20);
    v44 = (int *)type metadata accessor for DetailsAppView.State(0);
    sub_23B989CE8(v43 + v44[11], (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
    v45 = *(_BYTE *)(v43 + v44[10]);
    v46 = *(_BYTE *)(v43 + v44[9]);
    v47 = v43 + v44[6];
    v48 = (int *)type metadata accessor for DetailsAppViewActionsModule(0);
    sub_23B989EFC(v47, (uint64_t)&v12[v48[7]], (uint64_t *)&unk_256A5E6B0);
    v49 = (__int128 *)(v42 + *(int *)(v41 + 24));
    v50 = v49[6];
    v51 = v49[8];
    v87 = v49[7];
    v88 = v51;
    v52 = v49[3];
    v82 = v49[2];
    v83 = v52;
    v53 = v49[4];
    v85 = v49[5];
    v86 = v50;
    v84 = v53;
    v54 = *v49;
    v81 = v49[1];
    v80 = v54;
    v55 = &v12[v48[8]];
    sub_23B9AFAB8((uint64_t)&v80);
    sub_23BB2B448(v55);
    v12[v48[5]] = v45;
    v12[v48[6]] = v46;
    v56 = &v12[v48[9]];
    v57 = v87;
    v58 = v88;
    *((_OWORD *)v56 + 6) = v86;
    *((_OWORD *)v56 + 7) = v57;
    *((_OWORD *)v56 + 8) = v58;
    v59 = v83;
    *((_OWORD *)v56 + 2) = v82;
    *((_OWORD *)v56 + 3) = v59;
    v60 = v85;
    *((_OWORD *)v56 + 4) = v84;
    *((_OWORD *)v56 + 5) = v60;
    v61 = v81;
    *(_OWORD *)v56 = v80;
    *((_OWORD *)v56 + 1) = v61;
    v62 = &v12[v48[10]];
    v77 = 0;
    sub_23BB8A0C4();
    v63 = v79;
    *v62 = v78;
    *((_QWORD *)v62 + 1) = v63;
    v64 = &v12[v48[11]];
    v77 = 1;
    sub_23BB8A0C4();
    v65 = v79;
    *v64 = v78;
    *((_QWORD *)v64 + 1) = v65;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v48 - 1) + 56))(v12, 0, 1, v48);
  }
  else
  {
    v66 = type metadata accessor for DetailsAppViewActionsModule(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v12, 1, 1, v66);
  }
  v67 = v74;
  sub_23B989EFC((uint64_t)v29, v74, &qword_256A5F770);
  v68 = v76;
  sub_23B989EFC((uint64_t)v12, v76, &qword_256A5F758);
  v69 = v75;
  sub_23B989EFC(v67, v75, &qword_256A5F770);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F778);
  sub_23B989EFC(v68, v69 + *(int *)(v70 + 48), &qword_256A5F758);
  sub_23B989D60((uint64_t)v12, &qword_256A5F758);
  sub_23B989D60((uint64_t)v29, &qword_256A5F770);
  sub_23B989D60(v68, &qword_256A5F758);
  return sub_23B989D60(v67, &qword_256A5F770);
}

uint64_t sub_23BA91338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  uint64_t result;
  _BYTE v32[16];
  uint64_t v33;
  char v34;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599C0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D600);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D608);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (unsigned int (*)(char *, uint64_t, uint64_t))&v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = type metadata accessor for DetailsAppView(0);
  v19 = v0 + *(int *)(v18 + 44);
  v20 = *(_BYTE *)v19;
  v21 = *(_QWORD *)(v19 + 8);
  v32[8] = v20;
  v33 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0D0();
  if (v34 == 1)
  {
    v22 = type metadata accessor for SessionLocation.Description(0);
    (*(void (**)(unsigned int (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 1, 1, v22);
  }
  else
  {
    v23 = v0 + *(int *)(v18 + 20);
    v24 = type metadata accessor for DetailsAppView.State(0);
    sub_23B989EFC(v23 + *(int *)(v24 + 20), (uint64_t)v17, &qword_256A59C90);
  }
  *(_QWORD *)v9 = sub_23BB89848();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F698);
  sub_23BA932E8(v17, v1, (uint64_t *)&v9[*(int *)(v25 + 44)]);
  v26 = sub_23BB8A304();
  sub_23BA29A4C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v26, v27);
  sub_23B989D60((uint64_t)v9, &qword_256A5D600);
  v28 = *MEMORY[0x24BDECEA8];
  v29 = sub_23BB894A0();
  v30 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v5, v28, v29);
  sub_23B97D0C8((unint64_t *)&qword_256A59A20, v30, MEMORY[0x24BDECF78]);
  result = sub_23BB8A760();
  if ((result & 1) != 0)
  {
    sub_23BA9A85C();
    sub_23B996E1C(&qword_256A59A40, &qword_256A599C0, MEMORY[0x24BEE30C8]);
    sub_23BB89DF4();
    sub_23B989D60((uint64_t)v5, &qword_256A599C0);
    sub_23B989D60((uint64_t)v13, &qword_256A5D608);
    return sub_23B989D60((uint64_t)v17, &qword_256A59C90);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23BA91670(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[4] = a1;
  v2 = sub_23BB8AF1C();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  sub_23BB8A9F4();
  v1[8] = sub_23BB8A9E8();
  v1[9] = sub_23BB8A988();
  v1[10] = v3;
  return swift_task_switch();
}

uint64_t sub_23BA91704()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_23BA91784;
  return v3(3000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BA91784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_23BA9180C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  v2 = (char *)(v1 + *(int *)(type metadata accessor for DetailsAppView(0) + 40));
  v3 = *v2;
  v4 = *((_QWORD *)v2 + 1);
  *(_BYTE *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v4;
  *(_BYTE *)(v0 + 104) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  sub_23BB8A0DC();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA9188C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA918D0()
{
  type metadata accessor for DetailsAppView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

void sub_23BA91938(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;

  v6 = type metadata accessor for DetailsAppView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6, v9);
  v10 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256A613D0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*a1 & 1) == 0)
  {
    if (*a2)
    {
      v15 = a3 + *(int *)(v6 + 44);
      v16 = *(_BYTE *)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v23[16] = v16;
      v24 = v17;
      v23[15] = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
      sub_23BB8A0DC();
      v18 = sub_23BB8AA18();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 1, 1, v18);
      sub_23B989CE8(a3, (uint64_t)&v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for DetailsAppView);
      sub_23BB8A9F4();
      v19 = sub_23BB8A9E8();
      v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v21 = swift_allocObject();
      v22 = MEMORY[0x24BEE6930];
      *(_QWORD *)(v21 + 16) = v19;
      *(_QWORD *)(v21 + 24) = v22;
      sub_23B989CA4((uint64_t)v10, v21 + v20, type metadata accessor for DetailsAppView);
      sub_23B989F54((uint64_t)v14, (uint64_t)&unk_256A5F5D0, v21);
      swift_release();
    }
  }
}

uint64_t sub_23BA91AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[2] = a4;
  v5 = sub_23BB8AF1C();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  sub_23BB8A9F4();
  v4[6] = sub_23BB8A9E8();
  v4[7] = sub_23BB8A988();
  v4[8] = v6;
  return swift_task_switch();
}

uint64_t sub_23BA91B74()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_23BB8AF10();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256A5AFD0 + dword_256A5AFD0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_23BA91BF4;
  return v3(500000000000000000, 0, 0, 0, 1);
}

uint64_t sub_23BA91BF4()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  v4 = v2[4];
  v3 = v2[5];
  v5 = v2[3];
  if (v0)
  {

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[5], v2[3]);
  }
  return swift_task_switch();
}

uint64_t sub_23BA91C98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_23BB8A328();
  sub_23BB893F8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA91D2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  *(_QWORD *)(swift_task_alloc() + 16) = v1;
  sub_23BB8A328();
  sub_23BB893F8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA91DC0()
{
  type metadata accessor for DetailsAppView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A59970);
  return sub_23BB8A0DC();
}

__n128 sub_23BA91E2C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 result;
  _OWORD v13[13];

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23BB89B9C();
  sub_23BB892A8();
  sub_23BB8983C();
  if (qword_256A58CB0 != -1)
    swift_once();
  sub_23BA29C70(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v13, 0.0, 1, INFINITY, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = sub_23BB8A2F8();
  v4 = v3;
  v5 = sub_23BB894C4();
  v6 = sub_23BB89BA8();
  v7 = v13[11];
  *(_OWORD *)(a1 + 160) = v13[10];
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v13[12];
  v8 = v13[7];
  *(_OWORD *)(a1 + 96) = v13[6];
  *(_OWORD *)(a1 + 112) = v8;
  v9 = v13[9];
  *(_OWORD *)(a1 + 128) = v13[8];
  *(_OWORD *)(a1 + 144) = v9;
  v10 = v13[3];
  *(_OWORD *)(a1 + 32) = v13[2];
  *(_OWORD *)(a1 + 48) = v10;
  v11 = v13[5];
  *(_OWORD *)(a1 + 64) = v13[4];
  *(_OWORD *)(a1 + 80) = v11;
  result = (__n128)v13[1];
  *(_OWORD *)a1 = v13[0];
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 208) = v5;
  *(_BYTE *)(a1 + 216) = v6;
  *(_QWORD *)(a1 + 224) = v2;
  *(_QWORD *)(a1 + 232) = v4;
  return result;
}

double sub_23BA91F9C@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_23BA91E2C(a1).n128_u64[0];
  return result;
}

uint64_t sub_23BA91FA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  BOOL v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v76 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v72 = (uint64_t)&v68 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F678);
  MEMORY[0x24BDAC7A8](v9, v10);
  v70 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F680);
  MEMORY[0x24BDAC7A8](v71, v12);
  v73 = (uint64_t)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F688);
  v79 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v75 = (uint64_t)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v74 = (uint64_t)&v68 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F690);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v68 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D600);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5D608);
  MEMORY[0x24BDAC7A8](v32, v33);
  v35 = (char *)&v68 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v68 - v38;
  *(_QWORD *)v31 = sub_23BB89848();
  *((_QWORD *)v31 + 1) = 0;
  v40 = 1;
  v31[16] = 1;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F698);
  sub_23BA92544((uint64_t)a1, (uint64_t)&v31[*(int *)(v41 + 44)]);
  v42 = sub_23BB8A304();
  sub_23BA29A4C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v35, 0.0, 1, 0.0, 1, v42, v43);
  sub_23B989D60((uint64_t)v31, &qword_256A5D600);
  v77 = v39;
  sub_23B990D24((uint64_t)v35, (uint64_t)v39, &qword_256A5D608);
  if ((*a1 & 0xELL) != 0)
  {
    v44 = v70;
    sub_23BA94064((uint64_t)a1, v70);
    v45 = (char *)a1 + *(int *)(type metadata accessor for DetailsAppView(0) + 20);
    v46 = (uint64_t)&v45[*(int *)(type metadata accessor for DetailsAppView.State(0) + 20)];
    v47 = v72;
    sub_23B989EFC(v46, v72, &qword_256A59C90);
    v48 = type metadata accessor for SessionLocation.Description(0);
    v49 = *(_QWORD *)(v48 - 8);
    v69 = v27;
    v50 = v23;
    v51 = v14;
    v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    if (v52(v47, 1, v48) == 1)
      v53 = 0.0;
    else
      v53 = 1.0;
    sub_23B989D60(v47, &qword_256A59C90);
    v54 = v73;
    sub_23B989EFC(v44, v73, &qword_256A5F678);
    *(double *)(v54 + *(int *)(v71 + 36)) = v53;
    sub_23B989D60(v44, &qword_256A5F678);
    v55 = v46;
    v56 = v76;
    sub_23B989EFC(v55, v76, &qword_256A59C90);
    v57 = v52(v56, 1, v48);
    v14 = v51;
    v23 = v50;
    v27 = v69;
    v58 = v57 == 1;
    sub_23B989D60(v56, &qword_256A59C90);
    KeyPath = swift_getKeyPath();
    v60 = swift_allocObject();
    *(_BYTE *)(v60 + 16) = v58;
    v61 = v75;
    sub_23B989EFC(v54, v75, &qword_256A5F680);
    v62 = (uint64_t *)(v61 + *(int *)(v14 + 36));
    *v62 = KeyPath;
    v62[1] = (uint64_t)sub_23BA9A384;
    v62[2] = v60;
    sub_23B989D60(v54, &qword_256A5F680);
    v63 = v74;
    sub_23B990D24(v61, v74, &qword_256A5F688);
    sub_23B990D24(v63, (uint64_t)v27, &qword_256A5F688);
    v40 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v27, v40, 1, v14);
  v64 = (uint64_t)v77;
  sub_23B989EFC((uint64_t)v77, (uint64_t)v35, &qword_256A5D608);
  sub_23B989EFC((uint64_t)v27, (uint64_t)v23, &qword_256A5F690);
  v65 = v78;
  sub_23B989EFC((uint64_t)v35, v78, &qword_256A5D608);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F6A0);
  sub_23B989EFC((uint64_t)v23, v65 + *(int *)(v66 + 48), &qword_256A5F690);
  sub_23B989D60((uint64_t)v27, &qword_256A5F690);
  sub_23B989D60(v64, &qword_256A5D608);
  sub_23B989D60((uint64_t)v23, &qword_256A5F690);
  return sub_23B989D60((uint64_t)v35, &qword_256A5D608);
}

uint64_t sub_23BA92544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t KeyPath;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F710);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F718);
  MEMORY[0x24BDAC7A8](v61, v8);
  v65 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F720);
  MEMORY[0x24BDAC7A8](v62, v10);
  v66 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F728);
  MEMORY[0x24BDAC7A8](v63, v12);
  v68 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v67 = (uint64_t)&v59 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (uint64_t *)((char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v60 = type metadata accessor for DetailsAppView(0);
  v21 = *(int *)(v60 + 20);
  v64 = a1;
  v22 = a1 + v21;
  v23 = type metadata accessor for DetailsAppView.State(0);
  sub_23B989EFC(v22 + *(int *)(v23 + 20), (uint64_t)v20, &qword_256A59C90);
  v24 = type metadata accessor for SessionLocation.Description(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v20, 1, v24) == 1)
  {
    sub_23B989D60((uint64_t)v20, &qword_256A59C90);
    v25 = 0xE100000000000000;
    v26 = 32;
  }
  else
  {
    v26 = *v20;
    v25 = v20[1];
    swift_bridgeObjectRetain();
    sub_23B989D9C((uint64_t)v20, type metadata accessor for SessionLocation.Description);
  }
  v69 = v26;
  v70 = v25;
  sub_23B9967E0();
  v27 = sub_23BB89D28();
  v29 = v28;
  v31 = v30 & 1;
  LODWORD(v69) = sub_23BB899BC();
  v32 = sub_23BB89CE0();
  v34 = v33;
  v36 = v35 & 1;
  sub_23B9967D0(v27, v29, v31);
  swift_bridgeObjectRelease();
  v37 = v64;
  v38 = v64 + *(int *)(v60 + 28);
  v59 = sub_23BB89D04();
  v60 = v39;
  v41 = v40;
  LOBYTE(v27) = v42 & 1;
  sub_23B9967D0(v32, v34, v36);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v7 = sub_23BB89788();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F730);
  sub_23BA92A20(v37, (uint64_t)&v7[*(int *)(v44 + 44)]);
  v45 = sub_23BB899C8();
  v46 = v65;
  sub_23B989EFC((uint64_t)v7, v65, &qword_256A5F710);
  *(_DWORD *)(v46 + *(int *)(v61 + 36)) = v45;
  sub_23B989D60((uint64_t)v7, &qword_256A5F710);
  v47 = *(_QWORD *)(v38 + 8);
  v48 = swift_getKeyPath();
  v49 = v66;
  sub_23B989EFC(v46, v66, &qword_256A5F718);
  v50 = (uint64_t *)(v49 + *(int *)(v62 + 36));
  *v50 = v48;
  v50[1] = v47;
  swift_retain();
  sub_23B989D60(v46, &qword_256A5F718);
  v51 = swift_getKeyPath();
  v52 = v68;
  sub_23B989EFC(v49, v68, &qword_256A5F720);
  v53 = v52 + *(int *)(v63 + 36);
  *(_QWORD *)v53 = v51;
  *(_QWORD *)(v53 + 8) = 1;
  *(_BYTE *)(v53 + 16) = 0;
  sub_23B989D60(v49, &qword_256A5F720);
  v54 = v67;
  sub_23B990D24(v52, v67, &qword_256A5F728);
  sub_23B989EFC(v54, v52, &qword_256A5F728);
  v56 = v59;
  v55 = v60;
  *(_QWORD *)a2 = v59;
  *(_QWORD *)(a2 + 8) = v41;
  *(_BYTE *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v55;
  *(_QWORD *)(a2 + 32) = KeyPath;
  *(_QWORD *)(a2 + 40) = 2;
  *(_BYTE *)(a2 + 48) = 0;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F738);
  sub_23B989EFC(v52, a2 + *(int *)(v57 + 48), &qword_256A5F728);
  sub_23B996E5C(v56, v41, v27);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B989D60(v54, &qword_256A5F728);
  sub_23B989D60(v52, &qword_256A5F728);
  sub_23B9967D0(v56, v41, v27);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA92A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t MyRelativeDate;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t *v95;
  _QWORD v97[2];
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  __int128 v120;
  __int128 v121;
  char v122;

  v114 = a2;
  v3 = sub_23BB88984();
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v99 = (char *)v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v101 = (char *)v97 - v8;
  v104 = sub_23BB8881C();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104, v9);
  v102 = (char *)v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for RelativeDateText();
  MEMORY[0x24BDAC7A8](v112, v11);
  v100 = (uint64_t)v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v107 = (uint64_t)v97 - v15;
  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  MEMORY[0x24BDAC7A8](MyRelativeDate, v17);
  v19 = (char *)v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v98 = (uint64_t)v97 - v22;
  MEMORY[0x24BDAC7A8](v23, v24);
  v26 = (char *)v97 - v25;
  MEMORY[0x24BDAC7A8](v27, v28);
  v108 = (uint64_t)v97 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F740);
  MEMORY[0x24BDAC7A8](v30, v31);
  v33 = (char *)v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  MEMORY[0x24BDAC7A8](v34, v35);
  v109 = (uint64_t)v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37, v38);
  v40 = (char *)v97 - v39;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  MEMORY[0x24BDAC7A8](v41, v42);
  v44 = (_QWORD *)((char *)v97 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F748);
  MEMORY[0x24BDAC7A8](v45, v46);
  v113 = (char *)v97 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48, v49);
  v51 = (char *)v97 - v50;
  v52 = a1 + *(int *)(type metadata accessor for DetailsAppView(0) + 20);
  v111 = v52 + *(int *)(type metadata accessor for DetailsAppView.State(0) + 20);
  sub_23B989EFC(v111, (uint64_t)v40, &qword_256A59C90);
  v53 = type metadata accessor for SessionLocation.Description(0);
  v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48);
  if (v110(v40, 1, v53) == 1)
  {
    sub_23B989D60((uint64_t)v40, &qword_256A59C90);
    sub_23BB897D0();
    v54 = sub_23BB89D1C();
    v56 = v55;
    v115 = v54;
    v116 = v55;
    v58 = v57 & 1;
    v117 = v57 & 1;
    v118 = v59;
    v119 = 0;
    sub_23B996E5C(v54, v55, v57 & 1);
    swift_bridgeObjectRetain();
    sub_23BB89944();
    v60 = v122;
    v61 = v121;
    *(_OWORD *)v33 = v120;
    *((_OWORD *)v33 + 1) = v61;
    v33[32] = v60;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
    sub_23B9B789C();
    sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
LABEL_9:
    sub_23BB89944();
    sub_23B9967D0(v54, v56, v58);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v97[1] = v30;
  v97[0] = v51;
  sub_23B989EFC((uint64_t)&v40[*(int *)(v53 + 20)], (uint64_t)v44, &qword_256A59C88);
  sub_23B989D9C((uint64_t)v40, type metadata accessor for SessionLocation.Description);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v76 = v44[1];
    *(_QWORD *)&v120 = *v44;
    *((_QWORD *)&v120 + 1) = v76;
    sub_23B9967E0();
    v54 = sub_23BB89D28();
    v56 = v77;
    v58 = v78 & 1;
    v115 = v54;
    v116 = v77;
    v117 = v78 & 1;
    v118 = v79;
    v119 = 1;
    sub_23B996E5C(v54, v77, v78 & 1);
    swift_bridgeObjectRetain();
    sub_23BB89944();
    v80 = v122;
    v81 = v121;
    *(_OWORD *)v33 = v120;
    *((_OWORD *)v33 + 1) = v81;
    v33[32] = v80;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
    sub_23B9B789C();
    sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
    v51 = (char *)v97[0];
    goto LABEL_9;
  }
  v62 = v108;
  sub_23B989CA4((uint64_t)v44, v108, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  sub_23B989CE8(v62, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  v63 = v102;
  sub_23BB887EC();
  v64 = v101;
  sub_23BB88978();
  sub_23B989CE8((uint64_t)v26, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  v65 = sub_23BB888E8();
  v67 = v105;
  v66 = v106;
  if ((v65 & 1) != 0)
    v68 = v19;
  else
    v68 = v64;
  v69 = v99;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v99, v68, v106);
  (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v19, v69, v66);
  v70 = (uint64_t)v19;
  v71 = v98;
  sub_23B989CA4(v70, v98, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  sub_23B989D9C((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
  v72 = v100;
  sub_23B989CA4(v71, v100, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  v73 = v112;
  *(_BYTE *)(v72 + *(int *)(v112 + 20)) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 32))(v72 + *(int *)(v73 + 24), v63, v104);
  v74 = (_QWORD *)(v72 + *(int *)(v73 + 28));
  *v74 = 0;
  v74[1] = 0;
  v75 = v107;
  sub_23B989CA4(v72, v107, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
  sub_23B989CE8(v75, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
  sub_23B9B789C();
  sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
  v51 = (char *)v97[0];
  sub_23BB89944();
  sub_23B989D9C(v75, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
  sub_23B989D9C(v108, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
LABEL_10:
  v83 = (uint64_t)v113;
  v82 = v114;
  v84 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v110;
  v85 = v109;
  sub_23B989EFC(v111, v109, &qword_256A59C90);
  if (v84(v85, 1, v53) == 1)
  {
    sub_23B989D60(v85, &qword_256A59C90);
    v86 = 0;
LABEL_14:
    v90 = 0;
    v94 = 0;
    v92 = 0;
    goto LABEL_15;
  }
  v87 = (uint64_t *)(v85 + *(int *)(v53 + 24));
  v88 = *v87;
  v86 = v87[1];
  swift_bridgeObjectRetain();
  sub_23B989D9C(v85, type metadata accessor for SessionLocation.Description);
  if (!v86)
    goto LABEL_14;
  *(_QWORD *)&v120 = v88;
  *((_QWORD *)&v120 + 1) = v86;
  sub_23B9967E0();
  v86 = sub_23BB89D28();
  v90 = v89;
  v92 = v91;
  v94 = v93 & 1;
LABEL_15:
  sub_23B989EFC((uint64_t)v51, v83, &qword_256A5F748);
  sub_23B989EFC(v83, v82, &qword_256A5F748);
  v95 = (uint64_t *)(v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5F750) + 48));
  *v95 = v86;
  v95[1] = v90;
  v95[2] = v94;
  v95[3] = v92;
  sub_23BA9A7FC(v86, v90, v94, v92);
  sub_23B989D60((uint64_t)v51, &qword_256A5F748);
  sub_23BA9A82C(v86, v90, v94, v92);
  return sub_23B989D60(v83, &qword_256A5F748);
}

uint64_t sub_23BA932E8@<X0>(unsigned int (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t KeyPath;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;

  v66 = a2;
  v70 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F710);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F718);
  MEMORY[0x24BDAC7A8](v62, v8);
  v67 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F720);
  MEMORY[0x24BDAC7A8](v63, v10);
  v68 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F728);
  MEMORY[0x24BDAC7A8](v64, v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v69 = (uint64_t)&v59 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (uint64_t *)((char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = a1;
  sub_23B989EFC((uint64_t)a1, (uint64_t)v21, &qword_256A59C90);
  v22 = type metadata accessor for SessionLocation.Description(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22) == 1)
  {
    sub_23B989D60((uint64_t)v21, &qword_256A59C90);
    v23 = 0xE100000000000000;
    v24 = 32;
  }
  else
  {
    v24 = *v21;
    v23 = v21[1];
    swift_bridgeObjectRetain();
    sub_23B989D9C((uint64_t)v21, type metadata accessor for SessionLocation.Description);
  }
  v71 = v24;
  v72 = v23;
  sub_23B9967E0();
  v25 = sub_23BB89D28();
  v27 = v26;
  v29 = v28 & 1;
  LODWORD(v71) = sub_23BB899BC();
  v30 = sub_23BB89CE0();
  v32 = v31;
  v34 = v33 & 1;
  sub_23B9967D0(v25, v27, v29);
  swift_bridgeObjectRelease();
  v35 = type metadata accessor for DetailsAppView(0);
  v36 = v66;
  v37 = v66 + *(int *)(v35 + 28);
  v38 = sub_23BB89D04();
  v60 = v39;
  v61 = v38;
  v59 = v40;
  LOBYTE(v27) = v41 & 1;
  sub_23B9967D0(v30, v32, v34);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v7 = sub_23BB89788();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F730);
  sub_23BA937B0(v65, v36, (uint64_t)&v7[*(int *)(v43 + 44)]);
  v44 = sub_23BB899C8();
  v45 = v67;
  sub_23B989EFC((uint64_t)v7, v67, &qword_256A5F710);
  *(_DWORD *)(v45 + *(int *)(v62 + 36)) = v44;
  sub_23B989D60((uint64_t)v7, &qword_256A5F710);
  v46 = *(_QWORD *)(v37 + 8);
  v47 = swift_getKeyPath();
  v48 = v68;
  sub_23B989EFC(v45, v68, &qword_256A5F718);
  v49 = (uint64_t *)(v48 + *(int *)(v63 + 36));
  *v49 = v47;
  v49[1] = v46;
  swift_retain();
  sub_23B989D60(v45, &qword_256A5F718);
  v50 = swift_getKeyPath();
  sub_23B989EFC(v48, (uint64_t)v14, &qword_256A5F720);
  v51 = &v14[*(int *)(v64 + 36)];
  *(_QWORD *)v51 = v50;
  *((_QWORD *)v51 + 1) = 1;
  v51[16] = 0;
  sub_23B989D60(v48, &qword_256A5F720);
  v52 = v69;
  sub_23B990D24((uint64_t)v14, v69, &qword_256A5F728);
  sub_23B989EFC(v52, (uint64_t)v14, &qword_256A5F728);
  v53 = v70;
  v54 = v60;
  v55 = v61;
  v56 = v59;
  *v70 = v61;
  v53[1] = v56;
  *((_BYTE *)v53 + 16) = v27;
  v53[3] = v54;
  v53[4] = KeyPath;
  v53[5] = 2;
  *((_BYTE *)v53 + 48) = 0;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F738);
  sub_23B989EFC((uint64_t)v14, (uint64_t)v53 + *(int *)(v57 + 48), &qword_256A5F728);
  sub_23B996E5C(v55, v56, v27);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B989D60(v52, &qword_256A5F728);
  sub_23B989D60((uint64_t)v14, &qword_256A5F728);
  sub_23B9967D0(v55, v56, v27);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23BA937B0@<X0>(unsigned int (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t MyRelativeDate;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  __int128 v123;
  __int128 v124;
  char v125;

  v115 = a2;
  v116 = a3;
  v117 = a1;
  v3 = sub_23BB88984();
  v107 = *(_QWORD *)(v3 - 8);
  v108 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v103 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v104 = (char *)&v99 - v8;
  v106 = sub_23BB8881C();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106, v9);
  v110 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for RelativeDateText();
  MEMORY[0x24BDAC7A8](v112, v11);
  v13 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v109 = (uint64_t)&v99 - v16;
  MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  MEMORY[0x24BDAC7A8](MyRelativeDate, v18);
  v20 = (char *)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v102 = (uint64_t)&v99 - v23;
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v99 - v26;
  MEMORY[0x24BDAC7A8](v28, v29);
  v111 = (uint64_t)&v99 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F740);
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C90);
  MEMORY[0x24BDAC7A8](v35, v36);
  v113 = (char *)&v99 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38, v39);
  v41 = (char *)&v99 - v40;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59C88);
  MEMORY[0x24BDAC7A8](v42, v43);
  v45 = (uint64_t *)((char *)&v99 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F748);
  MEMORY[0x24BDAC7A8](v46, v47);
  v114 = (char *)&v99 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49, v50);
  v52 = (char *)&v99 - v51;
  sub_23B989EFC((uint64_t)v117, (uint64_t)v41, &qword_256A59C90);
  v53 = type metadata accessor for SessionLocation.Description(0);
  v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48);
  if (v117(v41, 1, v53) == 1)
  {
    sub_23B989D60((uint64_t)v41, &qword_256A59C90);
    sub_23BB897D0();
    v54 = sub_23BB89D1C();
    v56 = v55;
    v118 = v54;
    v119 = v55;
    v58 = v57 & 1;
    v120 = v57 & 1;
    v121 = v59;
    v122 = 0;
    sub_23B996E5C(v54, v55, v57 & 1);
    swift_bridgeObjectRetain();
    sub_23BB89944();
    v60 = v125;
    v61 = v124;
    *(_OWORD *)v34 = v123;
    *((_OWORD *)v34 + 1) = v61;
    v34[32] = v60;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
    sub_23B9B789C();
    sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
LABEL_9:
    sub_23BB89944();
    sub_23B9967D0(v54, v56, v58);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v101 = v31;
  v100 = v52;
  sub_23B989EFC((uint64_t)&v41[*(int *)(v53 + 20)], (uint64_t)v45, &qword_256A59C88);
  sub_23B989D9C((uint64_t)v41, type metadata accessor for SessionLocation.Description);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v75 = v45[1];
    *(_QWORD *)&v123 = *v45;
    *((_QWORD *)&v123 + 1) = v75;
    sub_23B9967E0();
    v54 = sub_23BB89D28();
    v56 = v76;
    v58 = v77 & 1;
    v118 = v54;
    v119 = v76;
    v120 = v77 & 1;
    v121 = v78;
    v122 = 1;
    sub_23B996E5C(v54, v76, v77 & 1);
    swift_bridgeObjectRetain();
    sub_23BB89944();
    v79 = v125;
    v80 = v124;
    *(_OWORD *)v34 = v123;
    *((_OWORD *)v34 + 1) = v80;
    v34[32] = v79;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
    sub_23B9B789C();
    sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
    v52 = v100;
    goto LABEL_9;
  }
  v62 = (uint64_t)v45;
  v63 = v111;
  sub_23B989CA4(v62, v111, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  sub_23B989CE8(v63, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  sub_23BB887EC();
  v64 = v104;
  sub_23BB88978();
  sub_23B989CE8((uint64_t)v27, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  v65 = sub_23BB888E8();
  v67 = v107;
  v66 = v108;
  if ((v65 & 1) != 0)
    v68 = v20;
  else
    v68 = v64;
  v69 = v103;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v103, v68, v108);
  (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v20, v69, v66);
  v70 = (uint64_t)v20;
  v71 = v102;
  sub_23B989CA4(v70, v102, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  sub_23B989D9C((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
  sub_23B989CA4(v71, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
  v72 = v112;
  v13[*(int *)(v112 + 20)] = 0;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(&v13[*(int *)(v72 + 24)], v110, v106);
  v73 = &v13[*(int *)(v72 + 28)];
  *(_QWORD *)v73 = 0;
  *((_QWORD *)v73 + 1) = 0;
  v74 = v109;
  sub_23B989CA4((uint64_t)v13, v109, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
  sub_23B989CE8(v74, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256A5A408);
  sub_23B9B789C();
  sub_23B97D0C8(&qword_256A5A3F8, (uint64_t (*)(uint64_t))type metadata accessor for RelativeDateText, (uint64_t)&protocol conformance descriptor for RelativeDateText);
  v52 = v100;
  sub_23BB89944();
  sub_23B989D9C(v74, (uint64_t (*)(_QWORD))type metadata accessor for RelativeDateText);
  sub_23B989D9C(v111, (uint64_t (*)(_QWORD))type metadata accessor for FindMyRelativeDate);
LABEL_10:
  v81 = v115;
  v82 = v116;
  v83 = (uint64_t)v113;
  v84 = (uint64_t)v114;
  v85 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v117;
  v86 = v81 + *(int *)(type metadata accessor for DetailsAppView(0) + 20);
  v87 = type metadata accessor for DetailsAppView.State(0);
  sub_23B989EFC(v86 + *(int *)(v87 + 20), v83, &qword_256A59C90);
  if (v85(v83, 1, v53) == 1)
  {
    sub_23B989D60(v83, &qword_256A59C90);
    v88 = 0;
LABEL_14:
    v92 = 0;
    v96 = 0;
    v94 = 0;
    goto LABEL_15;
  }
  v89 = (uint64_t *)(v83 + *(int *)(v53 + 24));
  v90 = *v89;
  v88 = v89[1];
  swift_bridgeObjectRetain();
  sub_23B989D9C(v83, type metadata accessor for SessionLocation.Description);
  if (!v88)
    goto LABEL_14;
  *(_QWORD *)&v123 = v90;
  *((_QWORD *)&v123 + 1) = v88;
  sub_23B9967E0();
  v88 = sub_23BB89D28();
  v92 = v91;
  v94 = v93;
  v96 = v95 & 1;
LABEL_15:
  sub_23B989EFC((uint64_t)v52, v84, &qword_256A5F748);
  sub_23B989EFC(v84, v82, &qword_256A5F748);
  v97 = (uint64_t *)(v82 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256A5F750) + 48));
  *v97 = v88;
  v97[1] = v92;
  v97[2] = v96;
  v97[3] = v94;
  sub_23BA9A7FC(v88, v92, v96, v94);
  sub_23B989D60((uint64_t)v52, &qword_256A5F748);
  sub_23BA9A82C(v88, v92, v96, v94);
  return sub_23B989D60(v84, &qword_256A5F748);
}

uint64_t sub_23BA94064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t Action;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t (**v65)();
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  int *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t (**v95)();
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t (**v121)();
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;

  v158 = a2;
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F6A8);
  MEMORY[0x24BDAC7A8](v135, v3);
  v137 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F6B0);
  MEMORY[0x24BDAC7A8](v157, v5);
  v136 = (uint64_t)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v138 = (uint64_t)&v133 - v9;
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F6B8);
  MEMORY[0x24BDAC7A8](v154, v10);
  v156 = (uint64_t)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F6C0);
  MEMORY[0x24BDAC7A8](v140, v12);
  v141 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A5F6C8);
  MEMORY[0x24BDAC7A8](v155, v14);
  v142 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for CustomButtonStyle(0);
  MEMORY[0x24BDAC7A8](v150, v16);
  v148 = (uint64_t)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DetailsAppView(0);
  v143 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v144 = v20;
  v145 = (uint64_t)&v133 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A599A0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v146 = (char *)&v133 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E00);
  MEMORY[0x24BDAC7A8](v149, v24);
  v26 = (char *)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256A59E08);
  v152 = *(_QWORD *)(v27 - 8);
  v153 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v139 = (char *)&v133 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v31);
  v151 = (char *)&v133 - v32;
  v33 = type metadata accessor for DirectionsState();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 64);
  MEMORY[0x24BDAC7A8](v33, v36);
  v37 = (char *)&v133 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38, v39);
  v41 = (char *)&v133 - v40;
  Action = type metadata accessor for LocateAction();
  MEMORY[0x24BDAC7A8](Action, v43);
  v45 = (char *)&v133 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = v18;
  v46 = *(int *)(v18 + 20);
  v47 = a1;
  v48 = a1 + v46;
  v49 = type metadata accessor for DetailsAppView.State(0);
  sub_23B989CE8(v48 + *(int *)(v49 + 44), (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for LocateAction);
  v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v45, 2, v33);
  if (v50)
  {
    if (v50 == 1)
    {
      v51 = sub_23BB8929C();
      v52 = (uint64_t)v146;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v146, 1, 1, v51);
      v53 = v47;
      v54 = v47;
      v55 = v145;
      sub_23B989CE8(v54, v145, type metadata accessor for DetailsAppView);
      v56 = (*(unsigned __int8 *)(v143 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
      v57 = swift_allocObject();
      sub_23B989CA4(v55, v57 + v56, type metadata accessor for DetailsAppView);
      v58 = (int *)v149;
      v59 = &v26[*(int *)(v149 + 48)];
      v163 = 0;
      sub_23BB8A0C4();
      v60 = v160;
      *v59 = (char)v159;
      *((_QWORD *)v59 + 1) = v60;
      v61 = &v26[v58[13]];
      v163 = 0;
      sub_23BB8A0C4();
      v62 = v160;
      *v61 = (char)v159;
      *((_QWORD *)v61 + 1) = v62;
      sub_23B990D24(v52, (uint64_t)v26, &qword_256A599A0);
      v63 = &v26[v58[9]];
      *(_QWORD *)v63 = &unk_256A5F6D8;
      *((_QWORD *)v63 + 1) = v57;
      v64 = swift_allocObject();
      *(_QWORD *)(v64 + 16) = sub_23B9A5374;
      *(_QWORD *)(v64 + 24) = 0;
      v65 = (uint64_t (**)())&v26[v58[10]];
      *v65 = sub_23BA9A418;
      v65[1] = (uint64_t (*)())v64;
      v26[v58[11]] = 1;
      v66 = v53 + *(int *)(v147 + 28);
      v67 = v66 + *(int *)(type metadata accessor for DetailsAppView.Style(0) + 28);
      v68 = v148;
      sub_23B989CE8(v67, v148, type metadata accessor for CustomControlStyle);
      sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v69 = v151;
      sub_23BB89D94();
      sub_23B989D9C(v68, type metadata accessor for CustomButtonStyle);
      sub_23B989D60((uint64_t)v26, &qword_256A59E00);
      v71 = v152;
      v70 = v153;
      v72 = (uint64_t)v137;
      (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v137, v69, v153);
      *(_QWORD *)(v72 + *(int *)(v135 + 36)) = 0;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v70);
      KeyPath = swift_getKeyPath();
      v74 = swift_allocObject();
      *(_BYTE *)(v74 + 16) = 1;
      v75 = v136;
      sub_23B989EFC(v72, v136, &qword_256A5F6A8);
      v76 = (uint64_t *)(v75 + *(int *)(v157 + 36));
      *v76 = KeyPath;
      v76[1] = (uint64_t)sub_23BA9AC94;
      v76[2] = v74;
      sub_23B989D60(v72, &qword_256A5F6A8);
      v77 = v138;
      sub_23B990D24(v75, v138, &qword_256A5F6B0);
      sub_23B989EFC(v77, v156, &qword_256A5F6B0);
      swift_storeEnumTagMultiPayload();
      sub_23BA9A448();
      sub_23BA9A530();
      sub_23BB89944();
      return sub_23B989D60(v77, &qword_256A5F6B0);
    }
    else
    {
      v107 = sub_23BB8929C();
      v108 = (uint64_t)v146;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v146, 1, 1, v107);
      v109 = v47;
      v110 = v47;
      v111 = v145;
      sub_23B989CE8(v110, v145, type metadata accessor for DetailsAppView);
      v112 = (*(unsigned __int8 *)(v143 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
      v113 = swift_allocObject();
      sub_23B989CA4(v111, v113 + v112, type metadata accessor for DetailsAppView);
      v114 = (int *)v149;
      v115 = &v26[*(int *)(v149 + 48)];
      v163 = 0;
      sub_23BB8A0C4();
      v116 = v160;
      *v115 = (char)v159;
      *((_QWORD *)v115 + 1) = v116;
      v117 = &v26[v114[13]];
      v163 = 0;
      sub_23BB8A0C4();
      v118 = v160;
      *v117 = (char)v159;
      *((_QWORD *)v117 + 1) = v118;
      sub_23B990D24(v108, (uint64_t)v26, &qword_256A599A0);
      v119 = &v26[v114[9]];
      *(_QWORD *)v119 = &unk_256A5F6F8;
      *((_QWORD *)v119 + 1) = v113;
      v120 = swift_allocObject();
      *(_QWORD *)(v120 + 16) = sub_23B9A5374;
      *(_QWORD *)(v120 + 24) = 0;
      v121 = (uint64_t (**)())&v26[v114[10]];
      *v121 = sub_23BA9ACA8;
      v121[1] = (uint64_t (*)())v120;
      v26[v114[11]] = 1;
      v122 = v109 + *(int *)(v147 + 28);
      v123 = type metadata accessor for DetailsAppView.Style(0);
      v124 = v148;
      sub_23B989CE8(v122 + *(int *)(v123 + 28), v148, type metadata accessor for CustomControlStyle);
      v125 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
      v126 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
      v127 = v139;
      v128 = v150;
      sub_23BB89D94();
      sub_23B989D9C(v124, type metadata accessor for CustomButtonStyle);
      sub_23B989D60((uint64_t)v26, &qword_256A59E00);
      v130 = v151;
      v129 = v152;
      v131 = v153;
      (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v127, v153);
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v141, v130, v131);
      swift_storeEnumTagMultiPayload();
      v159 = v114;
      v160 = v128;
      v161 = v125;
      v162 = v126;
      swift_getOpaqueTypeConformance2();
      v132 = (uint64_t)v142;
      sub_23BB89944();
      sub_23B989EFC(v132, v156, &qword_256A5F6C8);
      swift_storeEnumTagMultiPayload();
      sub_23BA9A448();
      sub_23BA9A530();
      sub_23BB89944();
      sub_23B989D60(v132, &qword_256A5F6C8);
      return (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v130, v131);
    }
  }
  else
  {
    v79 = (uint64_t)v41;
    v134 = v41;
    sub_23B989CA4((uint64_t)v45, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v80 = sub_23BB8929C();
    v81 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v146, 1, 1, v80);
    v133 = v47;
    v82 = v47;
    v83 = v145;
    sub_23B989CE8(v82, v145, type metadata accessor for DetailsAppView);
    v84 = (*(unsigned __int8 *)(v143 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
    v85 = swift_allocObject();
    sub_23B989CA4(v83, v85 + v84, type metadata accessor for DetailsAppView);
    sub_23B989CE8(v79, (uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v86 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v87 = swift_allocObject();
    sub_23B989CA4((uint64_t)v37, v87 + v86, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
    v88 = (int *)v149;
    v89 = &v26[*(int *)(v149 + 48)];
    v163 = 0;
    sub_23BB8A0C4();
    v90 = v160;
    *v89 = (char)v159;
    *((_QWORD *)v89 + 1) = v90;
    v91 = &v26[v88[13]];
    v163 = 0;
    sub_23BB8A0C4();
    v92 = v160;
    *v91 = (char)v159;
    *((_QWORD *)v91 + 1) = v92;
    sub_23B990D24(v81, (uint64_t)v26, &qword_256A599A0);
    v93 = &v26[v88[9]];
    *(_QWORD *)v93 = &unk_256A5F708;
    *((_QWORD *)v93 + 1) = v85;
    v94 = swift_allocObject();
    *(_QWORD *)(v94 + 16) = sub_23B9BA010;
    *(_QWORD *)(v94 + 24) = v87;
    v95 = (uint64_t (**)())&v26[v88[10]];
    *v95 = sub_23BA9ACA8;
    v95[1] = (uint64_t (*)())v94;
    v26[v88[11]] = 1;
    v96 = v133 + *(int *)(v147 + 28);
    v97 = type metadata accessor for DetailsAppView.Style(0);
    v98 = v148;
    sub_23B989CE8(v96 + *(int *)(v97 + 24), v148, type metadata accessor for CustomControlStyle);
    v99 = sub_23B996E1C(&qword_256A59E58, &qword_256A59E00, (uint64_t)&protocol conformance descriptor for AsyncButton<A>);
    v100 = sub_23B97D0C8(&qword_256A59A18, type metadata accessor for CustomButtonStyle, (uint64_t)&unk_23BB96DC4);
    v101 = v139;
    v102 = v150;
    sub_23BB89D94();
    sub_23B989D9C(v98, type metadata accessor for CustomButtonStyle);
    sub_23B989D60((uint64_t)v26, &qword_256A59E00);
    v104 = v151;
    v103 = v152;
    v105 = v153;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v101, v153);
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v141, v104, v105);
    swift_storeEnumTagMultiPayload();
    v159 = v88;
    v160 = v102;
    v161 = v99;
    v162 = v100;
    swift_getOpaqueTypeConformance2();
    v106 = (uint64_t)v142;
    sub_23BB89944();
    sub_23B989EFC(v106, v156, &qword_256A5F6C8);
    swift_storeEnumTagMultiPayload();
    sub_23BA9A448();
    sub_23BA9A530();
    sub_23BB89944();
    sub_23B989D60(v106, &qword_256A5F6C8);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
    return sub_23B989D9C((uint64_t)v134, (uint64_t (*)(_QWORD))type metadata accessor for DirectionsState);
  }
}

uint64_t sub_23BA94E18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA94E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = v1 + *(int *)(type metadata accessor for DetailsAppView(0) + 24);
  (*(void (**)(void))(v2 + 32))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23BA94ECC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  sub_23BB8A9F4();
  *(_QWORD *)(v1 + 24) = sub_23BB8A9E8();
  sub_23BB8A988();
  return swift_task_switch();
}

uint64_t sub_23BA94F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = v1 + *(int *)(type metadata accessor for DetailsAppView(0) + 24);
  (*(void (**)(void))(v2 + 64))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DetailsAppView.State.Location(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for DetailsAppView.State.Location(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for DetailsAppView.State.Location(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for DetailsAppView.State.Location(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DetailsAppView.State.Location(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DetailsAppView.State.Location(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailsAppView.State.Location()
{
  return &type metadata for DetailsAppView.State.Location;
}

char *sub_23BA95178(char *a1, char *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    v7 = a3[6];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = *(_OWORD *)&a2[v7 + 24];
    *(_OWORD *)&a1[v7 + 24] = v10;
    v11 = v10;
    v12 = **(void (***)(char *, char *, uint64_t))(v10 - 8);
    swift_retain();
    swift_retain();
    v12(v8, v9, v11);
    *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
    v13 = (int *)type metadata accessor for CustomControlStyle(0);
    v14 = v13[6];
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = sub_23BB8A334();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_retain();
    v18(v15, v16, v17);
    v19 = v13[7];
    v20 = &v8[v19];
    v21 = &v9[v19];
    v22 = v9[v19 + 40];
    if ((v22 & 1) != 0)
    {
      v23 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v23;
      swift_retain();
    }
    else
    {
      v24 = *(_OWORD *)(v21 + 24);
      *(_OWORD *)(v20 + 24) = v24;
      (**(void (***)(char *))(v24 - 8))(v20);
    }
    v20[40] = v22;
    v25 = v13[8];
    v26 = &v8[v25];
    v27 = &v9[v25];
    v28 = type metadata accessor for CustomControlStyle.BackgroundSize(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v8[v13[9]] = v9[v13[9]];
    v8[v13[10]] = v9[v13[10]];
    v30 = v13[11];
    v31 = &v8[v30];
    v32 = &v9[v30];
    v31[8] = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v33 = a3[7];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v36 = *(_OWORD *)&a2[v33 + 24];
    *(_OWORD *)&a1[v33 + 24] = v36;
    (**(void (***)(char *, char *))(v36 - 8))(&a1[v33], &a2[v33]);
    *((_QWORD *)v34 + 5) = *((_QWORD *)v35 + 5);
    v37 = v13[6];
    v38 = &v34[v37];
    v39 = &v35[v37];
    swift_retain();
    v18(v38, v39, v17);
    v40 = v13[7];
    v41 = &v34[v40];
    v42 = &v35[v40];
    v43 = v35[v40 + 40];
    if ((v43 & 1) != 0)
    {
      v44 = *((_QWORD *)v42 + 1);
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = v44;
      swift_retain();
    }
    else
    {
      v45 = *(_OWORD *)(v42 + 24);
      *(_OWORD *)(v41 + 24) = v45;
      (**(void (***)(char *))(v45 - 8))(v41);
    }
    v41[40] = v43;
    v46 = v13[8];
    v47 = &v34[v46];
    v48 = &v35[v46];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v49 = sub_23BB892F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v34[v13[9]] = v35[v13[9]];
    v34[v13[10]] = v35[v13[10]];
    v50 = v13[11];
    v51 = &v34[v50];
    v52 = &v35[v50];
    v51[8] = v52[8];
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v53 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
    *(_QWORD *)&a1[v53] = *(_QWORD *)&a2[v53];
    *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  }
  return a1;
}

